; ModuleID = '../../third_party/skia/src/sksl/ir/SkSLSetting.cpp'
source_filename = "../../third_party/skia/src/sksl/ir/SkSLSetting.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.SkSL::(anonymous namespace)::CapsLookupTable" = type { %"class.std::__1::unordered_map" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.49" }
%"class.std::__1::__hash_table.49" = type <{ %"class.std::__1::unique_ptr.50", %"class.std::__1::__compressed_pair.60", %"class.std::__1::__compressed_pair.65", %"class.std::__1::__compressed_pair.68", [4 x i8] }>
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52", %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.std::__1::__hash_node_base.53"** }
%"struct.std::__1::__hash_node_base.53" = type { %"struct.std::__1::__hash_node_base.53"* }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.std::__1::__bucket_list_deallocator.55" }
%"class.std::__1::__bucket_list_deallocator.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { i64 }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"struct.std::__1::__hash_node_base.53" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { float }
%"class.SkSL::Expression" = type { %"class.SkSL::IRNode", %"class.SkSL::Type"* }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector", i32, i32, %"class.std::__1::vector.8", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.10" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.SkSL::Type::Field"* }
%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.SkSL::Type"* }
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.23", %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.39", [4 x i8] }>
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25", %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.42"* }
%"class.std::__1::vector.42" = type opaque
%"class.SkSL::(anonymous namespace)::CapsLookupMethod" = type { i32 (...)** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }
%"struct.std::__1::pair" = type { i8*, %"class.SkSL::(anonymous namespace)::CapsLookupMethod"* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.SkSL::(anonymous namespace)::BoolCapsLookup" = type { %"class.SkSL::(anonymous namespace)::CapsLookupMethod", { i64, i64 } }
%"class.SkSL::Literal" = type <{ %"class.SkSL::Expression", i8, [7 x i8] }>
%"class.SkSL::Setting" = type { %"class.SkSL::Expression", %"class.SkSL::String" }

$_ZNK12GrShaderCaps14fbFetchSupportEv = comdat any

$_ZNK12GrShaderCaps24fbFetchNeedsCustomOutputEv = comdat any

$_ZNK12GrShaderCaps24flatInterpolationSupportEv = comdat any

$_ZNK12GrShaderCaps33noperspectiveInterpolationSupportEv = comdat any

$_ZNK12GrShaderCaps22externalTextureSupportEv = comdat any

$_ZNK12GrShaderCaps21mustEnableAdvBlendEqsEv = comdat any

$_ZNK12GrShaderCaps31mustDeclareFragmentShaderOutputEv = comdat any

$_ZNK12GrShaderCaps26mustDoOpBetweenFloorAndAbsEv = comdat any

$_ZNK12GrShaderCaps43mustGuardDivisionEvenAfterExplicitZeroCheckEv = comdat any

$_ZNK12GrShaderCaps37inBlendModesFailRandomlyForAllZeroVecEv = comdat any

$_ZNK12GrShaderCaps28atan2ImplementedAsAtanYOverXEv = comdat any

$_ZNK12GrShaderCaps25canUseAnyFunctionInShaderEv = comdat any

$_ZNK12GrShaderCaps13floatIs32BitsEv = comdat any

$_ZNK12GrShaderCaps14integerSupportEv = comdat any

$_ZNK12GrShaderCaps17builtinFMASupportEv = comdat any

$_ZNK12GrShaderCaps25builtinDeterminantSupportEv = comdat any

$_ZNK12GrShaderCaps27rewriteMatrixVectorMultiplyEv = comdat any

$_ZN4SkSL6IRNodeD2Ev = comdat any

$_ZN4SkSL7LiteralIbED0Ev = comdat any

$_ZNK4SkSL7LiteralIbE11descriptionEv = comdat any

$_ZNK4SkSL10Expression4typeEv = comdat any

$_ZNK4SkSL7LiteralIbE21isCompileTimeConstantEv = comdat any

$_ZNK4SkSL7LiteralIbE15compareConstantERKNS_10ExpressionE = comdat any

$_ZNK4SkSL10Expression19isConstantOrUniformEv = comdat any

$_ZNK4SkSL7LiteralIbE11hasPropertyENS_10Expression8PropertyE = comdat any

$_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE = comdat any

$_ZNK4SkSL7LiteralIbE24getConstantSubexpressionEi = comdat any

$_ZNK4SkSL7LiteralIbE5cloneEv = comdat any

$_ZNK4SkSL10Expression21isCompileTimeConstantEv = comdat any

$_ZNK4SkSL10Expression15compareConstantERKS0_ = comdat any

$_ZNK4SkSL10Expression24getConstantSubexpressionEi = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZN4SkSL7SettingD2Ev = comdat any

$_ZN4SkSL7SettingD0Ev = comdat any

$_ZNK4SkSL7Setting11descriptionEv = comdat any

$_ZNK4SkSL7Setting11hasPropertyENS_10Expression8PropertyE = comdat any

$_ZNK4SkSL7Setting5cloneEv = comdat any

$_ZTVN4SkSL7LiteralIbEE = comdat any

$_ZTVN4SkSL7SettingE = comdat any

@.str = private unnamed_addr constant [26 x i8] c"unknown capability flag '\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@_ZZN4SkSL12_GLOBAL__N_117caps_lookup_tableEvE16sCapsLookupTable = internal unnamed_addr global %"class.SkSL::(anonymous namespace)::CapsLookupTable"* null, align 8
@_ZGVZN4SkSL12_GLOBAL__N_117caps_lookup_tableEvE16sCapsLookupTable = internal global i64 0, align 8
@.str.2 = private unnamed_addr constant [15 x i8] c"fbFetchSupport\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"fbFetchNeedsCustomOutput\00", align 1
@.str.4 = private unnamed_addr constant [25 x i8] c"flatInterpolationSupport\00", align 1
@.str.5 = private unnamed_addr constant [34 x i8] c"noperspectiveInterpolationSupport\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"externalTextureSupport\00", align 1
@.str.7 = private unnamed_addr constant [22 x i8] c"mustEnableAdvBlendEqs\00", align 1
@.str.8 = private unnamed_addr constant [32 x i8] c"mustDeclareFragmentShaderOutput\00", align 1
@.str.9 = private unnamed_addr constant [27 x i8] c"mustDoOpBetweenFloorAndAbs\00", align 1
@.str.10 = private unnamed_addr constant [44 x i8] c"mustGuardDivisionEvenAfterExplicitZeroCheck\00", align 1
@.str.11 = private unnamed_addr constant [38 x i8] c"inBlendModesFailRandomlyForAllZeroVec\00", align 1
@.str.12 = private unnamed_addr constant [29 x i8] c"atan2ImplementedAsAtanYOverX\00", align 1
@.str.13 = private unnamed_addr constant [26 x i8] c"canUseAnyFunctionInShader\00", align 1
@.str.14 = private unnamed_addr constant [14 x i8] c"floatIs32Bits\00", align 1
@.str.15 = private unnamed_addr constant [15 x i8] c"integerSupport\00", align 1
@.str.16 = private unnamed_addr constant [18 x i8] c"builtinFMASupport\00", align 1
@.str.17 = private unnamed_addr constant [26 x i8] c"builtinDeterminantSupport\00", align 1
@.str.18 = private unnamed_addr constant [28 x i8] c"rewriteMatrixVectorMultiply\00", align 1
@_ZTVN4SkSL12_GLOBAL__N_114BoolCapsLookupE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::(anonymous namespace)::CapsLookupMethod"*)* @_ZN4SkSL12_GLOBAL__N_116CapsLookupMethodD2Ev to i8*), i8* bitcast (void (%"class.SkSL::(anonymous namespace)::BoolCapsLookup"*)* @_ZN4SkSL12_GLOBAL__N_114BoolCapsLookupD0Ev to i8*), i8* bitcast (%"class.SkSL::Type"* (%"class.SkSL::(anonymous namespace)::BoolCapsLookup"*, %"class.SkSL::Context"*)* @_ZNK4SkSL12_GLOBAL__N_114BoolCapsLookup4typeERKNS_7ContextE to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::(anonymous namespace)::BoolCapsLookup"*, %"class.SkSL::Context"*)* @_ZNK4SkSL12_GLOBAL__N_114BoolCapsLookup5valueERKNS_7ContextE to i8*)] }, align 8
@_ZTVN4SkSL7LiteralIbEE = linkonce_odr hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::Literal"*)* @_ZN4SkSL7LiteralIbED0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::Literal"*)* @_ZNK4SkSL7LiteralIbE11descriptionEv to i8*), i8* bitcast (%"class.SkSL::Type"* (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression4typeEv to i8*), i8* bitcast (i1 (%"class.SkSL::Literal"*)* @_ZNK4SkSL7LiteralIbE21isCompileTimeConstantEv to i8*), i8* bitcast (i32 (%"class.SkSL::Literal"*, %"class.SkSL::Expression"*)* @_ZNK4SkSL7LiteralIbE15compareConstantERKNS_10ExpressionE to i8*), i8* bitcast (i1 (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression19isConstantOrUniformEv to i8*), i8* bitcast (i1 (%"class.SkSL::Literal"*, i32)* @_ZNK4SkSL7LiteralIbE11hasPropertyENS_10Expression8PropertyE to i8*), i8* bitcast ({ i64, i8 } (%"class.SkSL::Expression"*, %"class.SkSL::Type"*)* @_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Literal"*, i32)* @_ZNK4SkSL7LiteralIbE24getConstantSubexpressionEi to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Literal"*)* @_ZNK4SkSL7LiteralIbE5cloneEv to i8*)] }, comdat, align 8
@.str.19 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.20 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@_ZTVN4SkSL7SettingE = linkonce_odr hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::Setting"*)* @_ZN4SkSL7SettingD2Ev to i8*), i8* bitcast (void (%"class.SkSL::Setting"*)* @_ZN4SkSL7SettingD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::Setting"*)* @_ZNK4SkSL7Setting11descriptionEv to i8*), i8* bitcast (%"class.SkSL::Type"* (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression4typeEv to i8*), i8* bitcast (i1 (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression21isCompileTimeConstantEv to i8*), i8* bitcast (i32 (%"class.SkSL::Expression"*, %"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression15compareConstantERKS0_ to i8*), i8* bitcast (i1 (%"class.SkSL::Expression"*)* @_ZNK4SkSL10Expression19isConstantOrUniformEv to i8*), i8* bitcast (i1 (%"class.SkSL::Setting"*, i32)* @_ZNK4SkSL7Setting11hasPropertyENS_10Expression8PropertyE to i8*), i8* bitcast ({ i64, i8 } (%"class.SkSL::Expression"*, %"class.SkSL::Type"*)* @_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Expression"*, i32)* @_ZNK4SkSL10Expression24getConstantSubexpressionEi to i8*), i8* bitcast (%"class.SkSL::Expression"* (%"class.SkSL::Setting"*)* @_ZNK4SkSL7Setting5cloneEv to i8*)] }, comdat, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkSL::Expression"* @_ZN4SkSL7Setting7ConvertERKNS_7ContextEiRKNS_6StringE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %"class.SkSL::String", align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %"class.SkSL::String", align 8
  %8 = alloca %"class.SkSL::String", align 8
  %9 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 4
  %10 = load %"struct.SkSL::ProgramConfig"*, %"struct.SkSL::ProgramConfig"** %9, align 8
  %11 = getelementptr inbounds %"struct.SkSL::ProgramConfig", %"struct.SkSL::ProgramConfig"* %10, i64 0, i32 1, i32 2
  %12 = load i8, i8* %11, align 2, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %52, label %14

14:                                               ; preds = %3
  %15 = bitcast %"class.SkSL::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15)
  %16 = tail call fastcc dereferenceable(40) %"class.SkSL::(anonymous namespace)::CapsLookupTable"* @_ZN4SkSL12_GLOBAL__N_117caps_lookup_tableEv() #13
  %17 = tail call fastcc %"class.SkSL::(anonymous namespace)::CapsLookupMethod"* @_ZNK4SkSL12_GLOBAL__N_115CapsLookupTable6lookupERKNS_6StringE(%"class.SkSL::(anonymous namespace)::CapsLookupTable"* %16, %"class.SkSL::String"* dereferenceable(24) %2) #13
  %18 = icmp eq %"class.SkSL::(anonymous namespace)::CapsLookupMethod"* %17, null
  br i1 %18, label %26, label %19

19:                                               ; preds = %14
  %20 = bitcast %"class.SkSL::(anonymous namespace)::CapsLookupMethod"* %17 to %"class.SkSL::Expression"* (%"class.SkSL::(anonymous namespace)::CapsLookupMethod"*, %"class.SkSL::Context"*)***
  %21 = load %"class.SkSL::Expression"* (%"class.SkSL::(anonymous namespace)::CapsLookupMethod"*, %"class.SkSL::Context"*)**, %"class.SkSL::Expression"* (%"class.SkSL::(anonymous namespace)::CapsLookupMethod"*, %"class.SkSL::Context"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.SkSL::Expression"* (%"class.SkSL::(anonymous namespace)::CapsLookupMethod"*, %"class.SkSL::Context"*)*, %"class.SkSL::Expression"* (%"class.SkSL::(anonymous namespace)::CapsLookupMethod"*, %"class.SkSL::Context"*)** %21, i64 3
  %23 = load %"class.SkSL::Expression"* (%"class.SkSL::(anonymous namespace)::CapsLookupMethod"*, %"class.SkSL::Context"*)*, %"class.SkSL::Expression"* (%"class.SkSL::(anonymous namespace)::CapsLookupMethod"*, %"class.SkSL::Context"*)** %22, align 8
  %24 = tail call %"class.SkSL::Expression"* %23(%"class.SkSL::(anonymous namespace)::CapsLookupMethod"* nonnull %17, %"class.SkSL::Context"* dereferenceable(744) %0) #13
  %25 = ptrtoint %"class.SkSL::Expression"* %24 to i64
  br label %50

26:                                               ; preds = %14
  %27 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 1
  %28 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %27, align 8
  %29 = bitcast %"class.SkSL::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #13
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %8, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), %"class.SkSL::String"* dereferenceable(24) %2) #13
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %7, %"class.SkSL::String"* nonnull %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #13
  %30 = bitcast %"class.SkSL::ErrorReporter"* %28 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %31 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %31, i64 2
  %33 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %32, align 8
  call void %33(%"class.SkSL::ErrorReporter"* %28, i32 %1, %"class.SkSL::String"* nonnull %7) #13
  %34 = bitcast %"class.SkSL::String"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %26
  %39 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %40) #14
  br label %41

41:                                               ; preds = %38, %26
  %42 = bitcast %"class.SkSL::String"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @_ZdlPv(i8* %48) #14
  br label %49

49:                                               ; preds = %46, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #13
  br label %50

50:                                               ; preds = %19, %49
  %51 = phi i64 [ 0, %49 ], [ %25, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15)
  br label %114

52:                                               ; preds = %3
  %53 = bitcast %"class.SkSL::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53)
  %54 = tail call fastcc dereferenceable(40) %"class.SkSL::(anonymous namespace)::CapsLookupTable"* @_ZN4SkSL12_GLOBAL__N_117caps_lookup_tableEv() #13
  %55 = tail call fastcc %"class.SkSL::(anonymous namespace)::CapsLookupMethod"* @_ZNK4SkSL12_GLOBAL__N_115CapsLookupTable6lookupERKNS_6StringE(%"class.SkSL::(anonymous namespace)::CapsLookupTable"* %54, %"class.SkSL::String"* dereferenceable(24) %2) #13
  %56 = icmp eq %"class.SkSL::(anonymous namespace)::CapsLookupMethod"* %55, null
  br i1 %56, label %57, label %81

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 1
  %59 = load %"class.SkSL::ErrorReporter"*, %"class.SkSL::ErrorReporter"** %58, align 8
  %60 = bitcast %"class.SkSL::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #13
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), %"class.SkSL::String"* dereferenceable(24) %2) #13
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* nonnull sret %5, %"class.SkSL::String"* nonnull %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #13
  %61 = bitcast %"class.SkSL::ErrorReporter"* %59 to void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)***
  %62 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)**, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %62, i64 2
  %64 = load void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)*, void (%"class.SkSL::ErrorReporter"*, i32, %"class.SkSL::String"*)** %63, align 8
  call void %64(%"class.SkSL::ErrorReporter"* %59, i32 %1, %"class.SkSL::String"* nonnull %5) #13
  %65 = bitcast %"class.SkSL::String"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %57
  %70 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %71) #14
  br label %72

72:                                               ; preds = %69, %57
  %73 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  call void @_ZdlPv(i8* %79) #14
  br label %80

80:                                               ; preds = %72, %77
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53)
  br label %114

81:                                               ; preds = %52
  %82 = bitcast %"class.SkSL::(anonymous namespace)::CapsLookupMethod"* %55 to %"class.SkSL::Type"* (%"class.SkSL::(anonymous namespace)::CapsLookupMethod"*, %"class.SkSL::Context"*)***
  %83 = load %"class.SkSL::Type"* (%"class.SkSL::(anonymous namespace)::CapsLookupMethod"*, %"class.SkSL::Context"*)**, %"class.SkSL::Type"* (%"class.SkSL::(anonymous namespace)::CapsLookupMethod"*, %"class.SkSL::Context"*)*** %82, align 8
  %84 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::(anonymous namespace)::CapsLookupMethod"*, %"class.SkSL::Context"*)*, %"class.SkSL::Type"* (%"class.SkSL::(anonymous namespace)::CapsLookupMethod"*, %"class.SkSL::Context"*)** %83, i64 2
  %85 = load %"class.SkSL::Type"* (%"class.SkSL::(anonymous namespace)::CapsLookupMethod"*, %"class.SkSL::Context"*)*, %"class.SkSL::Type"* (%"class.SkSL::(anonymous namespace)::CapsLookupMethod"*, %"class.SkSL::Context"*)** %84, align 8
  %86 = tail call %"class.SkSL::Type"* %85(%"class.SkSL::(anonymous namespace)::CapsLookupMethod"* nonnull %55, %"class.SkSL::Context"* dereferenceable(744) %0) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53)
  %87 = ptrtoint %"class.SkSL::Type"* %86 to i64
  %88 = icmp eq %"class.SkSL::Type"* %86, null
  br i1 %88, label %114, label %89

89:                                               ; preds = %81
  %90 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90)
  %91 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 48) #13
  %92 = bitcast %"class.SkSL::String"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %98, label %96

96:                                               ; preds = %89
  %97 = bitcast %"class.SkSL::String"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %90, i8* align 8 %97, i64 24, i1 false) #13
  br label %104

98:                                               ; preds = %89
  %99 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0
  %100 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  %102 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %103 = load i64, i64* %102, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %99, i8* %101, i64 %103) #13
  br label %104

104:                                              ; preds = %96, %98
  %105 = bitcast i8* %91 to i32 (...)***
  %106 = getelementptr inbounds i8, i8* %91, i64 8
  %107 = bitcast i8* %106 to i32*
  store i32 %1, i32* %107, align 8
  %108 = getelementptr inbounds i8, i8* %91, i64 12
  %109 = bitcast i8* %108 to i32*
  store i32 51, i32* %109, align 4
  %110 = getelementptr inbounds i8, i8* %91, i64 16
  %111 = bitcast i8* %110 to i64*
  store i64 %87, i64* %111, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7SettingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %105, align 8
  %112 = getelementptr inbounds i8, i8* %91, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* nonnull align 8 %90, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90)
  %113 = ptrtoint i8* %91 to i64
  br label %114

114:                                              ; preds = %81, %80, %104, %50
  %115 = phi i64 [ %51, %50 ], [ %113, %104 ], [ 0, %80 ], [ 0, %81 ]
  %116 = inttoptr i64 %115 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %116
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc dereferenceable(40) %"class.SkSL::(anonymous namespace)::CapsLookupTable"* @_ZN4SkSL12_GLOBAL__N_117caps_lookup_tableEv() unnamed_addr #0 {
  %1 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %2 = alloca %"class.SkSL::String", align 8
  %3 = alloca [17 x %"struct.std::__1::pair"], align 8
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN4SkSL12_GLOBAL__N_117caps_lookup_tableEvE16sCapsLookupTable to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %388, !prof !3

6:                                                ; preds = %0
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4SkSL12_GLOBAL__N_117caps_lookup_tableEvE16sCapsLookupTable) #13
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %388, label %9

9:                                                ; preds = %6
  %10 = tail call i8* @_Znwm(i64 40) #14
  %11 = bitcast [17 x %"struct.std::__1::pair"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %11) #13
  %12 = tail call i8* @_Znwm(i64 24) #14
  %13 = bitcast i8* %12 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL12_GLOBAL__N_114BoolCapsLookupE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds i8, i8* %12, i64 8
  %15 = bitcast i8* %14 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (i1 (%class.GrShaderCaps*)* @_ZNK12GrShaderCaps14fbFetchSupportEv to i64), i64 0>, <2 x i64>* %15, align 8
  %16 = ptrtoint i8* %12 to i64
  %17 = getelementptr inbounds [17 x %"struct.std::__1::pair"], [17 x %"struct.std::__1::pair"]* %3, i64 0, i64 0, i32 0
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8** %17, align 8
  %18 = getelementptr inbounds [17 x %"struct.std::__1::pair"], [17 x %"struct.std::__1::pair"]* %3, i64 0, i64 0, i32 1
  %19 = bitcast %"class.SkSL::(anonymous namespace)::CapsLookupMethod"** %18 to i64*
  store i64 %16, i64* %19, align 8
  %20 = tail call i8* @_Znwm(i64 24) #14
  %21 = bitcast i8* %20 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL12_GLOBAL__N_114BoolCapsLookupE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds i8, i8* %20, i64 8
  %23 = bitcast i8* %22 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (i1 (%class.GrShaderCaps*)* @_ZNK12GrShaderCaps24fbFetchNeedsCustomOutputEv to i64), i64 0>, <2 x i64>* %23, align 8
  %24 = ptrtoint i8* %20 to i64
  %25 = getelementptr inbounds [17 x %"struct.std::__1::pair"], [17 x %"struct.std::__1::pair"]* %3, i64 0, i64 1, i32 0
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0), i8** %25, align 8
  %26 = getelementptr inbounds [17 x %"struct.std::__1::pair"], [17 x %"struct.std::__1::pair"]* %3, i64 0, i64 1, i32 1
  %27 = bitcast %"class.SkSL::(anonymous namespace)::CapsLookupMethod"** %26 to i64*
  store i64 %24, i64* %27, align 8
  %28 = tail call i8* @_Znwm(i64 24) #14
  %29 = bitcast i8* %28 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL12_GLOBAL__N_114BoolCapsLookupE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  %30 = getelementptr inbounds i8, i8* %28, i64 8
  %31 = bitcast i8* %30 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (i1 (%class.GrShaderCaps*)* @_ZNK12GrShaderCaps24flatInterpolationSupportEv to i64), i64 0>, <2 x i64>* %31, align 8
  %32 = ptrtoint i8* %28 to i64
  %33 = getelementptr inbounds [17 x %"struct.std::__1::pair"], [17 x %"struct.std::__1::pair"]* %3, i64 0, i64 2, i32 0
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i64 0, i64 0), i8** %33, align 8
  %34 = getelementptr inbounds [17 x %"struct.std::__1::pair"], [17 x %"struct.std::__1::pair"]* %3, i64 0, i64 2, i32 1
  %35 = bitcast %"class.SkSL::(anonymous namespace)::CapsLookupMethod"** %34 to i64*
  store i64 %32, i64* %35, align 8
  %36 = tail call i8* @_Znwm(i64 24) #14
  %37 = bitcast i8* %36 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL12_GLOBAL__N_114BoolCapsLookupE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds i8, i8* %36, i64 8
  %39 = bitcast i8* %38 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (i1 (%class.GrShaderCaps*)* @_ZNK12GrShaderCaps33noperspectiveInterpolationSupportEv to i64), i64 0>, <2 x i64>* %39, align 8
  %40 = ptrtoint i8* %36 to i64
  %41 = getelementptr inbounds [17 x %"struct.std::__1::pair"], [17 x %"struct.std::__1::pair"]* %3, i64 0, i64 3, i32 0
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0), i8** %41, align 8
  %42 = getelementptr inbounds [17 x %"struct.std::__1::pair"], [17 x %"struct.std::__1::pair"]* %3, i64 0, i64 3, i32 1
  %43 = bitcast %"class.SkSL::(anonymous namespace)::CapsLookupMethod"** %42 to i64*
  store i64 %40, i64* %43, align 8
  %44 = tail call i8* @_Znwm(i64 24) #14
  %45 = bitcast i8* %44 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL12_GLOBAL__N_114BoolCapsLookupE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %46 = getelementptr inbounds i8, i8* %44, i64 8
  %47 = bitcast i8* %46 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (i1 (%class.GrShaderCaps*)* @_ZNK12GrShaderCaps22externalTextureSupportEv to i64), i64 0>, <2 x i64>* %47, align 8
  %48 = ptrtoint i8* %44 to i64
  %49 = getelementptr inbounds [17 x %"struct.std::__1::pair"], [17 x %"struct.std::__1::pair"]* %3, i64 0, i64 4, i32 0
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8** %49, align 8
  %50 = getelementptr inbounds [17 x %"struct.std::__1::pair"], [17 x %"struct.std::__1::pair"]* %3, i64 0, i64 4, i32 1
  %51 = bitcast %"class.SkSL::(anonymous namespace)::CapsLookupMethod"** %50 to i64*
  store i64 %48, i64* %51, align 8
  %52 = tail call i8* @_Znwm(i64 24) #14
  %53 = bitcast i8* %52 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL12_GLOBAL__N_114BoolCapsLookupE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %54 = getelementptr inbounds i8, i8* %52, i64 8
  %55 = bitcast i8* %54 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (i1 (%class.GrShaderCaps*)* @_ZNK12GrShaderCaps21mustEnableAdvBlendEqsEv to i64), i64 0>, <2 x i64>* %55, align 8
  %56 = ptrtoint i8* %52 to i64
  %57 = getelementptr inbounds [17 x %"struct.std::__1::pair"], [17 x %"struct.std::__1::pair"]* %3, i64 0, i64 5, i32 0
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i8** %57, align 8
  %58 = getelementptr inbounds [17 x %"struct.std::__1::pair"], [17 x %"struct.std::__1::pair"]* %3, i64 0, i64 5, i32 1
  %59 = bitcast %"class.SkSL::(anonymous namespace)::CapsLookupMethod"** %58 to i64*
  store i64 %56, i64* %59, align 8
  %60 = tail call i8* @_Znwm(i64 24) #14
  %61 = bitcast i8* %60 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL12_GLOBAL__N_114BoolCapsLookupE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %61, align 8
  %62 = getelementptr inbounds i8, i8* %60, i64 8
  %63 = bitcast i8* %62 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (i1 (%class.GrShaderCaps*)* @_ZNK12GrShaderCaps31mustDeclareFragmentShaderOutputEv to i64), i64 0>, <2 x i64>* %63, align 8
  %64 = ptrtoint i8* %60 to i64
  %65 = getelementptr inbounds [17 x %"struct.std::__1::pair"], [17 x %"struct.std::__1::pair"]* %3, i64 0, i64 6, i32 0
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.8, i64 0, i64 0), i8** %65, align 8
  %66 = getelementptr inbounds [17 x %"struct.std::__1::pair"], [17 x %"struct.std::__1::pair"]* %3, i64 0, i64 6, i32 1
  %67 = bitcast %"class.SkSL::(anonymous namespace)::CapsLookupMethod"** %66 to i64*
  store i64 %64, i64* %67, align 8
  %68 = tail call i8* @_Znwm(i64 24) #14
  %69 = bitcast i8* %68 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL12_GLOBAL__N_114BoolCapsLookupE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %69, align 8
  %70 = getelementptr inbounds i8, i8* %68, i64 8
  %71 = bitcast i8* %70 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (i1 (%class.GrShaderCaps*)* @_ZNK12GrShaderCaps26mustDoOpBetweenFloorAndAbsEv to i64), i64 0>, <2 x i64>* %71, align 8
  %72 = ptrtoint i8* %68 to i64
  %73 = getelementptr inbounds [17 x %"struct.std::__1::pair"], [17 x %"struct.std::__1::pair"]* %3, i64 0, i64 7, i32 0
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i64 0, i64 0), i8** %73, align 8
  %74 = getelementptr inbounds [17 x %"struct.std::__1::pair"], [17 x %"struct.std::__1::pair"]* %3, i64 0, i64 7, i32 1
  %75 = bitcast %"class.SkSL::(anonymous namespace)::CapsLookupMethod"** %74 to i64*
  store i64 %72, i64* %75, align 8
  %76 = tail call i8* @_Znwm(i64 24) #14
  %77 = bitcast i8* %76 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL12_GLOBAL__N_114BoolCapsLookupE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %77, align 8
  %78 = getelementptr inbounds i8, i8* %76, i64 8
  %79 = bitcast i8* %78 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (i1 (%class.GrShaderCaps*)* @_ZNK12GrShaderCaps43mustGuardDivisionEvenAfterExplicitZeroCheckEv to i64), i64 0>, <2 x i64>* %79, align 8
  %80 = ptrtoint i8* %76 to i64
  %81 = getelementptr inbounds [17 x %"struct.std::__1::pair"], [17 x %"struct.std::__1::pair"]* %3, i64 0, i64 8, i32 0
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8** %81, align 8
  %82 = getelementptr inbounds [17 x %"struct.std::__1::pair"], [17 x %"struct.std::__1::pair"]* %3, i64 0, i64 8, i32 1
  %83 = bitcast %"class.SkSL::(anonymous namespace)::CapsLookupMethod"** %82 to i64*
  store i64 %80, i64* %83, align 8
  %84 = tail call i8* @_Znwm(i64 24) #14
  %85 = bitcast i8* %84 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL12_GLOBAL__N_114BoolCapsLookupE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %85, align 8
  %86 = getelementptr inbounds i8, i8* %84, i64 8
  %87 = bitcast i8* %86 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (i1 (%class.GrShaderCaps*)* @_ZNK12GrShaderCaps37inBlendModesFailRandomlyForAllZeroVecEv to i64), i64 0>, <2 x i64>* %87, align 8
  %88 = ptrtoint i8* %84 to i64
  %89 = getelementptr inbounds [17 x %"struct.std::__1::pair"], [17 x %"struct.std::__1::pair"]* %3, i64 0, i64 9, i32 0
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.11, i64 0, i64 0), i8** %89, align 8
  %90 = getelementptr inbounds [17 x %"struct.std::__1::pair"], [17 x %"struct.std::__1::pair"]* %3, i64 0, i64 9, i32 1
  %91 = bitcast %"class.SkSL::(anonymous namespace)::CapsLookupMethod"** %90 to i64*
  store i64 %88, i64* %91, align 8
  %92 = tail call i8* @_Znwm(i64 24) #14
  %93 = bitcast i8* %92 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL12_GLOBAL__N_114BoolCapsLookupE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %93, align 8
  %94 = getelementptr inbounds i8, i8* %92, i64 8
  %95 = bitcast i8* %94 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (i1 (%class.GrShaderCaps*)* @_ZNK12GrShaderCaps28atan2ImplementedAsAtanYOverXEv to i64), i64 0>, <2 x i64>* %95, align 8
  %96 = ptrtoint i8* %92 to i64
  %97 = getelementptr inbounds [17 x %"struct.std::__1::pair"], [17 x %"struct.std::__1::pair"]* %3, i64 0, i64 10, i32 0
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.12, i64 0, i64 0), i8** %97, align 8
  %98 = getelementptr inbounds [17 x %"struct.std::__1::pair"], [17 x %"struct.std::__1::pair"]* %3, i64 0, i64 10, i32 1
  %99 = bitcast %"class.SkSL::(anonymous namespace)::CapsLookupMethod"** %98 to i64*
  store i64 %96, i64* %99, align 8
  %100 = tail call i8* @_Znwm(i64 24) #14
  %101 = bitcast i8* %100 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL12_GLOBAL__N_114BoolCapsLookupE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %101, align 8
  %102 = getelementptr inbounds i8, i8* %100, i64 8
  %103 = bitcast i8* %102 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (i1 (%class.GrShaderCaps*)* @_ZNK12GrShaderCaps25canUseAnyFunctionInShaderEv to i64), i64 0>, <2 x i64>* %103, align 8
  %104 = ptrtoint i8* %100 to i64
  %105 = getelementptr inbounds [17 x %"struct.std::__1::pair"], [17 x %"struct.std::__1::pair"]* %3, i64 0, i64 11, i32 0
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.13, i64 0, i64 0), i8** %105, align 8
  %106 = getelementptr inbounds [17 x %"struct.std::__1::pair"], [17 x %"struct.std::__1::pair"]* %3, i64 0, i64 11, i32 1
  %107 = bitcast %"class.SkSL::(anonymous namespace)::CapsLookupMethod"** %106 to i64*
  store i64 %104, i64* %107, align 8
  %108 = tail call i8* @_Znwm(i64 24) #14
  %109 = bitcast i8* %108 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL12_GLOBAL__N_114BoolCapsLookupE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %109, align 8
  %110 = getelementptr inbounds i8, i8* %108, i64 8
  %111 = bitcast i8* %110 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (i1 (%class.GrShaderCaps*)* @_ZNK12GrShaderCaps13floatIs32BitsEv to i64), i64 0>, <2 x i64>* %111, align 8
  %112 = ptrtoint i8* %108 to i64
  %113 = getelementptr inbounds [17 x %"struct.std::__1::pair"], [17 x %"struct.std::__1::pair"]* %3, i64 0, i64 12, i32 0
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.14, i64 0, i64 0), i8** %113, align 8
  %114 = getelementptr inbounds [17 x %"struct.std::__1::pair"], [17 x %"struct.std::__1::pair"]* %3, i64 0, i64 12, i32 1
  %115 = bitcast %"class.SkSL::(anonymous namespace)::CapsLookupMethod"** %114 to i64*
  store i64 %112, i64* %115, align 8
  %116 = tail call i8* @_Znwm(i64 24) #14
  %117 = bitcast i8* %116 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL12_GLOBAL__N_114BoolCapsLookupE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %117, align 8
  %118 = getelementptr inbounds i8, i8* %116, i64 8
  %119 = bitcast i8* %118 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (i1 (%class.GrShaderCaps*)* @_ZNK12GrShaderCaps14integerSupportEv to i64), i64 0>, <2 x i64>* %119, align 8
  %120 = ptrtoint i8* %116 to i64
  %121 = getelementptr inbounds [17 x %"struct.std::__1::pair"], [17 x %"struct.std::__1::pair"]* %3, i64 0, i64 13, i32 0
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0), i8** %121, align 8
  %122 = getelementptr inbounds [17 x %"struct.std::__1::pair"], [17 x %"struct.std::__1::pair"]* %3, i64 0, i64 13, i32 1
  %123 = bitcast %"class.SkSL::(anonymous namespace)::CapsLookupMethod"** %122 to i64*
  store i64 %120, i64* %123, align 8
  %124 = tail call i8* @_Znwm(i64 24) #14
  %125 = bitcast i8* %124 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL12_GLOBAL__N_114BoolCapsLookupE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %125, align 8
  %126 = getelementptr inbounds i8, i8* %124, i64 8
  %127 = bitcast i8* %126 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (i1 (%class.GrShaderCaps*)* @_ZNK12GrShaderCaps17builtinFMASupportEv to i64), i64 0>, <2 x i64>* %127, align 8
  %128 = ptrtoint i8* %124 to i64
  %129 = getelementptr inbounds [17 x %"struct.std::__1::pair"], [17 x %"struct.std::__1::pair"]* %3, i64 0, i64 14, i32 0
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16, i64 0, i64 0), i8** %129, align 8
  %130 = getelementptr inbounds [17 x %"struct.std::__1::pair"], [17 x %"struct.std::__1::pair"]* %3, i64 0, i64 14, i32 1
  %131 = bitcast %"class.SkSL::(anonymous namespace)::CapsLookupMethod"** %130 to i64*
  store i64 %128, i64* %131, align 8
  %132 = tail call i8* @_Znwm(i64 24) #14
  %133 = bitcast i8* %132 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL12_GLOBAL__N_114BoolCapsLookupE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %133, align 8
  %134 = getelementptr inbounds i8, i8* %132, i64 8
  %135 = bitcast i8* %134 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (i1 (%class.GrShaderCaps*)* @_ZNK12GrShaderCaps25builtinDeterminantSupportEv to i64), i64 0>, <2 x i64>* %135, align 8
  %136 = ptrtoint i8* %132 to i64
  %137 = getelementptr inbounds [17 x %"struct.std::__1::pair"], [17 x %"struct.std::__1::pair"]* %3, i64 0, i64 15, i32 0
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.17, i64 0, i64 0), i8** %137, align 8
  %138 = getelementptr inbounds [17 x %"struct.std::__1::pair"], [17 x %"struct.std::__1::pair"]* %3, i64 0, i64 15, i32 1
  %139 = bitcast %"class.SkSL::(anonymous namespace)::CapsLookupMethod"** %138 to i64*
  store i64 %136, i64* %139, align 8
  %140 = tail call i8* @_Znwm(i64 24) #14
  %141 = bitcast i8* %140 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL12_GLOBAL__N_114BoolCapsLookupE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %141, align 8
  %142 = getelementptr inbounds i8, i8* %140, i64 8
  %143 = bitcast i8* %142 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (i1 (%class.GrShaderCaps*)* @_ZNK12GrShaderCaps27rewriteMatrixVectorMultiplyEv to i64), i64 0>, <2 x i64>* %143, align 8
  %144 = ptrtoint i8* %140 to i64
  %145 = getelementptr inbounds [17 x %"struct.std::__1::pair"], [17 x %"struct.std::__1::pair"]* %3, i64 0, i64 16, i32 0
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.18, i64 0, i64 0), i8** %145, align 8
  %146 = getelementptr inbounds [17 x %"struct.std::__1::pair"], [17 x %"struct.std::__1::pair"]* %3, i64 0, i64 16, i32 1
  %147 = bitcast %"class.SkSL::(anonymous namespace)::CapsLookupMethod"** %146 to i64*
  store i64 %144, i64* %147, align 8
  %148 = getelementptr inbounds i8, i8* %10, i64 32
  %149 = bitcast i8* %148 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %149, align 4
  %150 = bitcast %"class.SkSL::String"* %2 to i8*
  %151 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %153 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %154 = bitcast %"class.SkSL::String"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %155 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %154, i64 0, i32 1, i32 0
  %156 = bitcast i8* %10 to %"class.std::__1::__hash_table.49"*
  %157 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %1, i64 0, i32 0
  %158 = getelementptr inbounds i8, i8* %10, i64 8
  %159 = bitcast i8* %158 to i64*
  %160 = bitcast i8* %10 to %"struct.std::__1::__hash_node_base.53"***
  %161 = getelementptr inbounds i8, i8* %10, i64 24
  %162 = bitcast i8* %161 to i64*
  %163 = bitcast i8* %148 to float*
  %164 = getelementptr inbounds i8, i8* %10, i64 16
  %165 = bitcast i8* %164 to i64*
  %166 = bitcast i8* %164 to i8**
  br label %167

167:                                              ; preds = %384, %9
  %168 = phi i64 [ 0, %9 ], [ %385, %384 ]
  %169 = getelementptr inbounds [17 x %"struct.std::__1::pair"], [17 x %"struct.std::__1::pair"]* %3, i64 0, i64 %168, i32 1
  %170 = bitcast %"class.SkSL::(anonymous namespace)::CapsLookupMethod"** %169 to i64*
  %171 = load i64, i64* %170, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %150) #13
  %172 = getelementptr inbounds [17 x %"struct.std::__1::pair"], [17 x %"struct.std::__1::pair"]* %3, i64 0, i64 %168, i32 0
  %173 = load i8*, i8** %172, align 8
  %174 = call i64 @strlen(i8* %173) #13
  %175 = icmp ugt i64 %174, -17
  br i1 %175, label %176, label %178

176:                                              ; preds = %167
  %177 = bitcast %"class.SkSL::String"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %177) #15
  unreachable

178:                                              ; preds = %167
  %179 = icmp ult i64 %174, 23
  br i1 %179, label %185, label %180

180:                                              ; preds = %178
  %181 = add nuw i64 %174, 16
  %182 = and i64 %181, -16
  %183 = call i8* @_Znwm(i64 %182) #14
  store i8* %183, i8** %151, align 8
  %184 = or i64 %182, -9223372036854775808
  store i64 %184, i64* %152, align 8
  store i64 %174, i64* %153, align 8
  br label %188

185:                                              ; preds = %178
  %186 = trunc i64 %174 to i8
  store i8 %186, i8* %155, align 1
  %187 = icmp eq i64 %174, 0
  br i1 %187, label %190, label %188

188:                                              ; preds = %185, %180
  %189 = phi i8* [ %183, %180 ], [ %150, %185 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %189, i8* align 1 %173, i64 %174, i1 false) #13
  br label %190

190:                                              ; preds = %188, %185
  %191 = phi i8* [ %150, %185 ], [ %189, %188 ]
  %192 = getelementptr inbounds i8, i8* %191, i64 %174
  store i8 0, i8* %192, align 1
  %193 = load i8, i8* %155, align 1
  %194 = icmp slt i8 %193, 0
  %195 = load i8*, i8** %151, align 8
  %196 = load i64, i64* %153, align 8
  %197 = zext i8 %193 to i64
  %198 = select i1 %194, i8* %195, i8* %150
  %199 = select i1 %194, i64 %196, i64 %197
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %157) #13
  %200 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %1, i8* %198, i64 %199) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %157) #13
  %201 = load i64, i64* %159, align 8
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %245, label %203

203:                                              ; preds = %190
  %204 = call i64 @llvm.ctpop.i64(i64 %201) #13, !range !4
  %205 = icmp ugt i64 %204, 1
  br i1 %205, label %209, label %206

206:                                              ; preds = %203
  %207 = add i64 %201, -1
  %208 = and i64 %207, %200
  br label %213

209:                                              ; preds = %203
  %210 = icmp ult i64 %200, %201
  br i1 %210, label %213, label %211

211:                                              ; preds = %209
  %212 = urem i64 %200, %201
  br label %213

213:                                              ; preds = %211, %209, %206
  %214 = phi i64 [ %208, %206 ], [ %212, %211 ], [ %200, %209 ]
  %215 = load %"struct.std::__1::__hash_node_base.53"**, %"struct.std::__1::__hash_node_base.53"*** %160, align 8
  %216 = getelementptr inbounds %"struct.std::__1::__hash_node_base.53"*, %"struct.std::__1::__hash_node_base.53"** %215, i64 %214
  %217 = load %"struct.std::__1::__hash_node_base.53"*, %"struct.std::__1::__hash_node_base.53"** %216, align 8
  %218 = icmp eq %"struct.std::__1::__hash_node_base.53"* %217, null
  br i1 %218, label %245, label %219

219:                                              ; preds = %213
  %220 = add i64 %201, -1
  br label %221

221:                                              ; preds = %241, %219
  %222 = phi %"struct.std::__1::__hash_node_base.53"* [ %224, %241 ], [ %217, %219 ]
  %223 = getelementptr inbounds %"struct.std::__1::__hash_node_base.53", %"struct.std::__1::__hash_node_base.53"* %222, i64 0, i32 0
  %224 = load %"struct.std::__1::__hash_node_base.53"*, %"struct.std::__1::__hash_node_base.53"** %223, align 8
  %225 = icmp eq %"struct.std::__1::__hash_node_base.53"* %224, null
  br i1 %225, label %245, label %226

226:                                              ; preds = %221
  %227 = getelementptr inbounds %"struct.std::__1::__hash_node_base.53", %"struct.std::__1::__hash_node_base.53"* %224, i64 1
  %228 = bitcast %"struct.std::__1::__hash_node_base.53"* %227 to i64*
  %229 = load i64, i64* %228, align 8
  %230 = icmp eq i64 %229, %200
  br i1 %230, label %241, label %231

231:                                              ; preds = %226
  br i1 %205, label %234, label %232

232:                                              ; preds = %231
  %233 = and i64 %229, %220
  br label %238

234:                                              ; preds = %231
  %235 = icmp ult i64 %229, %201
  br i1 %235, label %238, label %236

236:                                              ; preds = %234
  %237 = urem i64 %229, %201
  br label %238

238:                                              ; preds = %236, %234, %232
  %239 = phi i64 [ %233, %232 ], [ %237, %236 ], [ %229, %234 ]
  %240 = icmp eq i64 %239, %214
  br i1 %240, label %241, label %245

241:                                              ; preds = %238, %226
  %242 = getelementptr inbounds %"struct.std::__1::__hash_node_base.53", %"struct.std::__1::__hash_node_base.53"* %224, i64 2
  %243 = bitcast %"struct.std::__1::__hash_node_base.53"* %242 to %"class.SkSL::String"*
  %244 = call zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"* %243, %"class.SkSL::String"* nonnull dereferenceable(24) %2) #13
  br i1 %244, label %367, label %221

245:                                              ; preds = %238, %221, %213, %190
  %246 = phi i64 [ %214, %213 ], [ -6148914691236517206, %190 ], [ %214, %221 ], [ %214, %238 ]
  %247 = call i8* @_Znwm(i64 48) #14, !noalias !5
  %248 = getelementptr inbounds i8, i8* %247, i64 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %248, i8* nonnull align 8 %150, i64 24, i1 false) #13, !noalias !5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %150, i8 0, i64 24, i1 false) #13, !noalias !5
  %249 = getelementptr inbounds i8, i8* %247, i64 40
  %250 = bitcast i8* %249 to i64*
  store i64 0, i64* %250, align 8, !noalias !5
  %251 = getelementptr inbounds i8, i8* %247, i64 8
  %252 = bitcast i8* %251 to i64*
  store i64 %200, i64* %252, align 8, !noalias !5
  %253 = bitcast i8* %247 to %"struct.std::__1::__hash_node_base.53"**
  store %"struct.std::__1::__hash_node_base.53"* null, %"struct.std::__1::__hash_node_base.53"** %253, align 8, !noalias !5
  %254 = load i64, i64* %162, align 8
  %255 = add i64 %254, 1
  %256 = uitofp i64 %255 to float
  %257 = uitofp i64 %201 to float
  %258 = load float, float* %163, align 4
  %259 = fmul float %258, %257
  %260 = fcmp olt float %259, %256
  %261 = or i1 %202, %260
  br i1 %261, label %262, label %325

262:                                              ; preds = %245
  %263 = shl i64 %201, 1
  %264 = icmp ult i64 %201, 3
  %265 = call i64 @llvm.ctpop.i64(i64 %201) #13, !range !4
  %266 = icmp ugt i64 %265, 1
  %267 = or i1 %264, %266
  %268 = zext i1 %267 to i64
  %269 = or i64 %263, %268
  %270 = fdiv float %256, %258
  %271 = call float @llvm.ceil.f32(float %270) #13
  %272 = fptoui float %271 to i64
  %273 = icmp ult i64 %269, %272
  %274 = select i1 %273, i64 %272, i64 %269
  %275 = icmp eq i64 %274, 1
  br i1 %275, label %281, label %276

276:                                              ; preds = %262
  %277 = call i64 @llvm.ctpop.i64(i64 %274) #13, !range !4
  %278 = icmp ugt i64 %277, 1
  br i1 %278, label %279, label %281

279:                                              ; preds = %276
  %280 = call i64 @_ZNSt3__112__next_primeEm(i64 %274) #13
  br label %281

281:                                              ; preds = %279, %276, %262
  %282 = phi i64 [ %280, %279 ], [ %274, %276 ], [ 2, %262 ]
  %283 = load i64, i64* %159, align 8
  %284 = icmp ugt i64 %282, %283
  br i1 %284, label %285, label %286

285:                                              ; preds = %281
  call fastcc void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS_10unique_ptrINS2_12_GLOBAL__N_116CapsLookupMethodENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE8__rehashEm(%"class.std::__1::__hash_table.49"* nonnull %156, i64 %282) #13
  br label %314

286:                                              ; preds = %281
  %287 = icmp ult i64 %282, %283
  br i1 %287, label %288, label %314

288:                                              ; preds = %286
  %289 = icmp ugt i64 %283, 2
  %290 = call i64 @llvm.ctpop.i64(i64 %283) #13, !range !4
  %291 = icmp ult i64 %290, 2
  %292 = and i1 %289, %291
  %293 = load i64, i64* %162, align 8
  %294 = uitofp i64 %293 to float
  %295 = load float, float* %163, align 4
  %296 = fdiv float %294, %295
  %297 = call float @llvm.ceil.f32(float %296) #13
  %298 = fptoui float %297 to i64
  br i1 %292, label %299, label %306

299:                                              ; preds = %288
  %300 = icmp ult i64 %298, 2
  br i1 %300, label %308, label %301

301:                                              ; preds = %299
  %302 = add i64 %298, -1
  %303 = call i64 @llvm.ctlz.i64(i64 %302, i1 true) #13, !range !4
  %304 = sub nuw nsw i64 64, %303
  %305 = shl i64 1, %304
  br label %308

306:                                              ; preds = %288
  %307 = call i64 @_ZNSt3__112__next_primeEm(i64 %298) #13
  br label %308

308:                                              ; preds = %306, %301, %299
  %309 = phi i64 [ %307, %306 ], [ %305, %301 ], [ %298, %299 ]
  %310 = icmp ult i64 %282, %309
  %311 = select i1 %310, i64 %309, i64 %282
  %312 = icmp ult i64 %311, %283
  br i1 %312, label %313, label %314

313:                                              ; preds = %308
  call fastcc void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS_10unique_ptrINS2_12_GLOBAL__N_116CapsLookupMethodENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE8__rehashEm(%"class.std::__1::__hash_table.49"* nonnull %156, i64 %311) #13
  br label %314

314:                                              ; preds = %313, %308, %286, %285
  %315 = load i64, i64* %159, align 8
  %316 = call i64 @llvm.ctpop.i64(i64 %315) #13, !range !4
  %317 = icmp ugt i64 %316, 1
  br i1 %317, label %321, label %318

318:                                              ; preds = %314
  %319 = add i64 %315, -1
  %320 = and i64 %319, %200
  br label %325

321:                                              ; preds = %314
  %322 = icmp ult i64 %200, %315
  br i1 %322, label %325, label %323

323:                                              ; preds = %321
  %324 = urem i64 %200, %315
  br label %325

325:                                              ; preds = %323, %321, %318, %245
  %326 = phi i64 [ %201, %245 ], [ %315, %318 ], [ %315, %321 ], [ %315, %323 ]
  %327 = phi i64 [ %246, %245 ], [ %320, %318 ], [ %200, %321 ], [ %324, %323 ]
  %328 = load %"struct.std::__1::__hash_node_base.53"**, %"struct.std::__1::__hash_node_base.53"*** %160, align 8
  %329 = getelementptr inbounds %"struct.std::__1::__hash_node_base.53"*, %"struct.std::__1::__hash_node_base.53"** %328, i64 %327
  %330 = load %"struct.std::__1::__hash_node_base.53"*, %"struct.std::__1::__hash_node_base.53"** %329, align 8
  %331 = icmp eq %"struct.std::__1::__hash_node_base.53"* %330, null
  br i1 %331, label %332, label %356

332:                                              ; preds = %325
  %333 = load i64, i64* %165, align 8
  %334 = bitcast i8* %247 to i64*
  store i64 %333, i64* %334, align 8
  store i8* %247, i8** %166, align 8
  %335 = bitcast %"struct.std::__1::__hash_node_base.53"** %329 to i8**
  store i8* %164, i8** %335, align 8
  %336 = load %"struct.std::__1::__hash_node_base.53"*, %"struct.std::__1::__hash_node_base.53"** %253, align 8
  %337 = icmp eq %"struct.std::__1::__hash_node_base.53"* %336, null
  br i1 %337, label %363, label %338

338:                                              ; preds = %332
  %339 = getelementptr inbounds %"struct.std::__1::__hash_node_base.53", %"struct.std::__1::__hash_node_base.53"* %336, i64 1
  %340 = bitcast %"struct.std::__1::__hash_node_base.53"* %339 to i64*
  %341 = load i64, i64* %340, align 8
  %342 = call i64 @llvm.ctpop.i64(i64 %326) #13, !range !4
  %343 = icmp ugt i64 %342, 1
  br i1 %343, label %347, label %344

344:                                              ; preds = %338
  %345 = add i64 %326, -1
  %346 = and i64 %341, %345
  br label %351

347:                                              ; preds = %338
  %348 = icmp ult i64 %341, %326
  br i1 %348, label %351, label %349

349:                                              ; preds = %347
  %350 = urem i64 %341, %326
  br label %351

351:                                              ; preds = %349, %347, %344
  %352 = phi i64 [ %346, %344 ], [ %350, %349 ], [ %341, %347 ]
  %353 = load %"struct.std::__1::__hash_node_base.53"**, %"struct.std::__1::__hash_node_base.53"*** %160, align 8
  %354 = getelementptr inbounds %"struct.std::__1::__hash_node_base.53"*, %"struct.std::__1::__hash_node_base.53"** %353, i64 %352
  %355 = bitcast %"struct.std::__1::__hash_node_base.53"** %354 to i8**
  br label %361

356:                                              ; preds = %325
  %357 = bitcast %"struct.std::__1::__hash_node_base.53"* %330 to i64*
  %358 = load i64, i64* %357, align 8
  %359 = bitcast i8* %247 to i64*
  store i64 %358, i64* %359, align 8
  %360 = bitcast %"struct.std::__1::__hash_node_base.53"* %330 to i8**
  br label %361

361:                                              ; preds = %351, %356
  %362 = phi i8** [ %360, %356 ], [ %355, %351 ]
  store i8* %247, i8** %362, align 8
  br label %363

363:                                              ; preds = %361, %332
  %364 = bitcast i8* %247 to %"struct.std::__1::__hash_node_base.53"*
  %365 = load i64, i64* %162, align 8
  %366 = add i64 %365, 1
  store i64 %366, i64* %162, align 8
  br label %367

367:                                              ; preds = %241, %363
  %368 = phi %"struct.std::__1::__hash_node_base.53"* [ %364, %363 ], [ %224, %241 ]
  %369 = getelementptr inbounds %"struct.std::__1::__hash_node_base.53", %"struct.std::__1::__hash_node_base.53"* %368, i64 5
  %370 = bitcast %"struct.std::__1::__hash_node_base.53"* %369 to %"class.SkSL::(anonymous namespace)::CapsLookupMethod"**
  %371 = load %"class.SkSL::(anonymous namespace)::CapsLookupMethod"*, %"class.SkSL::(anonymous namespace)::CapsLookupMethod"** %370, align 8
  %372 = bitcast %"struct.std::__1::__hash_node_base.53"* %369 to i64*
  store i64 %171, i64* %372, align 8
  %373 = icmp eq %"class.SkSL::(anonymous namespace)::CapsLookupMethod"* %371, null
  br i1 %373, label %379, label %374

374:                                              ; preds = %367
  %375 = bitcast %"class.SkSL::(anonymous namespace)::CapsLookupMethod"* %371 to void (%"class.SkSL::(anonymous namespace)::CapsLookupMethod"*)***
  %376 = load void (%"class.SkSL::(anonymous namespace)::CapsLookupMethod"*)**, void (%"class.SkSL::(anonymous namespace)::CapsLookupMethod"*)*** %375, align 8
  %377 = getelementptr inbounds void (%"class.SkSL::(anonymous namespace)::CapsLookupMethod"*)*, void (%"class.SkSL::(anonymous namespace)::CapsLookupMethod"*)** %376, i64 1
  %378 = load void (%"class.SkSL::(anonymous namespace)::CapsLookupMethod"*)*, void (%"class.SkSL::(anonymous namespace)::CapsLookupMethod"*)** %377, align 8
  call void %378(%"class.SkSL::(anonymous namespace)::CapsLookupMethod"* nonnull %371) #13
  br label %379

379:                                              ; preds = %374, %367
  %380 = load i8, i8* %155, align 1
  %381 = icmp slt i8 %380, 0
  br i1 %381, label %382, label %384

382:                                              ; preds = %379
  %383 = load i8*, i8** %151, align 8
  call void @_ZdlPv(i8* %383) #14
  br label %384

384:                                              ; preds = %382, %379
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %150) #13
  %385 = add nuw nsw i64 %168, 1
  %386 = icmp eq i64 %385, 17
  br i1 %386, label %387, label %167

387:                                              ; preds = %384
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %11) #13
  store i8* %10, i8** bitcast (%"class.SkSL::(anonymous namespace)::CapsLookupTable"** @_ZZN4SkSL12_GLOBAL__N_117caps_lookup_tableEvE16sCapsLookupTable to i8**), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN4SkSL12_GLOBAL__N_117caps_lookup_tableEvE16sCapsLookupTable) #13
  br label %388

388:                                              ; preds = %6, %387, %0
  %389 = load %"class.SkSL::(anonymous namespace)::CapsLookupTable"*, %"class.SkSL::(anonymous namespace)::CapsLookupTable"** @_ZZN4SkSL12_GLOBAL__N_117caps_lookup_tableEvE16sCapsLookupTable, align 8
  ret %"class.SkSL::(anonymous namespace)::CapsLookupTable"* %389
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.SkSL::(anonymous namespace)::CapsLookupMethod"* @_ZNK4SkSL12_GLOBAL__N_115CapsLookupTable6lookupERKNS_6StringE(%"class.SkSL::(anonymous namespace)::CapsLookupTable"* nocapture readonly, %"class.SkSL::String"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = bitcast %"class.SkSL::String"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.SkSL::String"* %1 to i8*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i8* %9, i8* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #13
  %17 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %14, i64 %15) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #13
  %18 = getelementptr inbounds %"class.SkSL::(anonymous namespace)::CapsLookupTable", %"class.SkSL::(anonymous namespace)::CapsLookupTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %72, label %21

21:                                               ; preds = %2
  %22 = call i64 @llvm.ctpop.i64(i64 %19) #13, !range !4
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, -1
  %26 = and i64 %25, %17
  br label %31

27:                                               ; preds = %21
  %28 = icmp ult i64 %17, %19
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %17, %19
  br label %31

31:                                               ; preds = %29, %27, %24
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %17, %27 ]
  %33 = getelementptr inbounds %"class.SkSL::(anonymous namespace)::CapsLookupTable", %"class.SkSL::(anonymous namespace)::CapsLookupTable"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.53"**, %"struct.std::__1::__hash_node_base.53"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.53"*, %"struct.std::__1::__hash_node_base.53"** %34, i64 %32
  %36 = load %"struct.std::__1::__hash_node_base.53"*, %"struct.std::__1::__hash_node_base.53"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.53"* %36, null
  br i1 %37, label %72, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.53", %"struct.std::__1::__hash_node_base.53"* %36, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base.53"*, %"struct.std::__1::__hash_node_base.53"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.53"* %40, null
  br i1 %41, label %72, label %42

42:                                               ; preds = %38
  %43 = add i64 %19, -1
  br label %44

44:                                               ; preds = %64, %42
  %45 = phi %"struct.std::__1::__hash_node_base.53"* [ %40, %42 ], [ %66, %64 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.53", %"struct.std::__1::__hash_node_base.53"* %45, i64 1
  %47 = bitcast %"struct.std::__1::__hash_node_base.53"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %17, %48
  br i1 %49, label %60, label %50

50:                                               ; preds = %44
  br i1 %23, label %53, label %51

51:                                               ; preds = %50
  %52 = and i64 %48, %43
  br label %57

53:                                               ; preds = %50
  %54 = icmp ult i64 %48, %19
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = urem i64 %48, %19
  br label %57

57:                                               ; preds = %55, %53, %51
  %58 = phi i64 [ %52, %51 ], [ %56, %55 ], [ %48, %53 ]
  %59 = icmp eq i64 %58, %32
  br i1 %59, label %64, label %72

60:                                               ; preds = %44
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base.53", %"struct.std::__1::__hash_node_base.53"* %45, i64 2
  %62 = bitcast %"struct.std::__1::__hash_node_base.53"* %61 to %"class.SkSL::String"*
  %63 = call zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"* %62, %"class.SkSL::String"* dereferenceable(24) %1) #13
  br i1 %63, label %68, label %64

64:                                               ; preds = %60, %57
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.53", %"struct.std::__1::__hash_node_base.53"* %45, i64 0, i32 0
  %66 = load %"struct.std::__1::__hash_node_base.53"*, %"struct.std::__1::__hash_node_base.53"** %65, align 8
  %67 = icmp eq %"struct.std::__1::__hash_node_base.53"* %66, null
  br i1 %67, label %72, label %44

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.53", %"struct.std::__1::__hash_node_base.53"* %45, i64 5
  %70 = bitcast %"struct.std::__1::__hash_node_base.53"* %69 to %"class.SkSL::(anonymous namespace)::CapsLookupMethod"**
  %71 = load %"class.SkSL::(anonymous namespace)::CapsLookupMethod"*, %"class.SkSL::(anonymous namespace)::CapsLookupMethod"** %70, align 8
  br label %72

72:                                               ; preds = %64, %57, %38, %2, %31, %68
  %73 = phi %"class.SkSL::(anonymous namespace)::CapsLookupMethod"* [ %71, %68 ], [ null, %31 ], [ null, %2 ], [ null, %38 ], [ null, %57 ], [ null, %64 ]
  ret %"class.SkSL::(anonymous namespace)::CapsLookupMethod"* %73
}

declare void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* sret, i8*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret, %"class.SkSL::String"*, i8*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12GrShaderCaps14fbFetchSupportEv(%class.GrShaderCaps*) #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %0, i64 0, i32 2
  %3 = bitcast i56* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = trunc i64 %4 to i8
  %6 = icmp slt i8 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12GrShaderCaps24fbFetchNeedsCustomOutputEv(%class.GrShaderCaps*) #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %0, i64 0, i32 2
  %3 = bitcast i56* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 256
  %6 = icmp ne i64 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12GrShaderCaps24flatInterpolationSupportEv(%class.GrShaderCaps*) #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %0, i64 0, i32 2
  %3 = bitcast i56* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 1024
  %6 = icmp ne i64 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12GrShaderCaps33noperspectiveInterpolationSupportEv(%class.GrShaderCaps*) #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %0, i64 0, i32 2
  %3 = bitcast i56* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 4096
  %6 = icmp ne i64 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12GrShaderCaps22externalTextureSupportEv(%class.GrShaderCaps*) #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %0, i64 0, i32 2
  %3 = bitcast i56* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 16384
  %6 = icmp ne i64 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12GrShaderCaps21mustEnableAdvBlendEqsEv(%class.GrShaderCaps*) #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %0, i64 0, i32 18
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, 1
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12GrShaderCaps31mustDeclareFragmentShaderOutputEv(%class.GrShaderCaps*) #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12GrShaderCaps26mustDoOpBetweenFloorAndAbsEv(%class.GrShaderCaps*) #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %0, i64 0, i32 2
  %3 = bitcast i56* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 268435456
  %6 = icmp ne i64 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12GrShaderCaps43mustGuardDivisionEvenAfterExplicitZeroCheckEv(%class.GrShaderCaps*) #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %0, i64 0, i32 2
  %3 = bitcast i56* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = trunc i64 %4 to i32
  %6 = icmp slt i32 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12GrShaderCaps37inBlendModesFailRandomlyForAllZeroVecEv(%class.GrShaderCaps*) #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %0, i64 0, i32 2
  %3 = bitcast i56* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 4294967296
  %6 = icmp ne i64 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12GrShaderCaps28atan2ImplementedAsAtanYOverXEv(%class.GrShaderCaps*) #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %0, i64 0, i32 2
  %3 = bitcast i56* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 134217728
  %6 = icmp ne i64 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12GrShaderCaps25canUseAnyFunctionInShaderEv(%class.GrShaderCaps*) #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %0, i64 0, i32 2
  %3 = bitcast i56* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 8388608
  %6 = icmp ne i64 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12GrShaderCaps13floatIs32BitsEv(%class.GrShaderCaps*) #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %0, i64 0, i32 2
  %3 = bitcast i56* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 131072
  %6 = icmp ne i64 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12GrShaderCaps14integerSupportEv(%class.GrShaderCaps*) #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %0, i64 0, i32 2
  %3 = bitcast i56* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 32
  %6 = icmp ne i64 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12GrShaderCaps17builtinFMASupportEv(%class.GrShaderCaps*) #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %0, i64 0, i32 2
  %3 = bitcast i56* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 2097152
  %6 = icmp ne i64 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12GrShaderCaps25builtinDeterminantSupportEv(%class.GrShaderCaps*) #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %0, i64 0, i32 2
  %3 = bitcast i56* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 4194304
  %6 = icmp ne i64 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12GrShaderCaps27rewriteMatrixVectorMultiplyEv(%class.GrShaderCaps*) #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrShaderCaps, %class.GrShaderCaps* %0, i64 0, i32 2
  %3 = bitcast i56* %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 4398046511104
  %6 = icmp ne i64 %5, 0
  ret i1 %6
}

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN4SkSL12_GLOBAL__N_116CapsLookupMethodD2Ev(%"class.SkSL::(anonymous namespace)::CapsLookupMethod"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN4SkSL12_GLOBAL__N_114BoolCapsLookupD0Ev(%"class.SkSL::(anonymous namespace)::BoolCapsLookup"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.SkSL::(anonymous namespace)::BoolCapsLookup"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal %"class.SkSL::Type"* @_ZNK4SkSL12_GLOBAL__N_114BoolCapsLookup4typeERKNS_7ContextE(%"class.SkSL::(anonymous namespace)::BoolCapsLookup"* nocapture readnone, %"class.SkSL::Context"* nocapture readonly dereferenceable(744)) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 24, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %3, align 8
  ret %"class.SkSL::Type"* %4
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.SkSL::Expression"* @_ZNK4SkSL12_GLOBAL__N_114BoolCapsLookup5valueERKNS_7ContextE(%"class.SkSL::(anonymous namespace)::BoolCapsLookup"* nocapture readonly, %"class.SkSL::Context"* nocapture readonly dereferenceable(744)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 2
  %4 = bitcast %class.GrShaderCaps** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::(anonymous namespace)::BoolCapsLookup", %"class.SkSL::(anonymous namespace)::BoolCapsLookup"* %0, i64 0, i32 1, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.SkSL::(anonymous namespace)::BoolCapsLookup", %"class.SkSL::(anonymous namespace)::BoolCapsLookup"* %0, i64 0, i32 1, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds i8, i8* %5, i64 %9
  %11 = bitcast i8* %10 to %class.GrShaderCaps*
  %12 = and i64 %7, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %21, label %14

14:                                               ; preds = %2
  %15 = bitcast i8* %10 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = add i64 %7, -1
  %18 = getelementptr i8, i8* %16, i64 %17
  %19 = bitcast i8* %18 to i1 (%class.GrShaderCaps*)**
  %20 = load i1 (%class.GrShaderCaps*)*, i1 (%class.GrShaderCaps*)** %19, align 8
  br label %23

21:                                               ; preds = %2
  %22 = inttoptr i64 %7 to i1 (%class.GrShaderCaps*)*
  br label %23

23:                                               ; preds = %14, %21
  %24 = phi i1 (%class.GrShaderCaps*)* [ %20, %14 ], [ %22, %21 ]
  %25 = tail call zeroext i1 %24(%class.GrShaderCaps* %11) #13
  %26 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %1, i64 0, i32 0, i32 24, i32 0, i32 0, i32 0
  %27 = bitcast %"class.SkSL::Type"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #13
  %30 = zext i1 %25 to i8
  %31 = bitcast i8* %29 to i32 (...)***
  %32 = getelementptr inbounds i8, i8* %29, i64 8
  %33 = bitcast i8* %32 to i32*
  store i32 -1, i32* %33, align 8
  %34 = getelementptr inbounds i8, i8* %29, i64 12
  %35 = bitcast i8* %34 to i32*
  store i32 31, i32* %35, align 4
  %36 = getelementptr inbounds i8, i8* %29, i64 16
  %37 = bitcast i8* %36 to i64*
  store i64 %28, i64* %37, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %31, align 8
  %38 = getelementptr inbounds i8, i8* %29, i64 24
  store i8 %30, i8* %38, align 8
  %39 = bitcast i8* %29 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %39
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL6IRNodeD2Ev(%"class.SkSL::IRNode"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL7LiteralIbED0Ev(%"class.SkSL::Literal"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.SkSL::Literal"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL7LiteralIbE11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Literal"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %1, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = select i1 %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i64 0, i64 0)
  %7 = select i1 %5, i64 5, i64 4
  %8 = trunc i64 %7 to i8
  %9 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  store i8 %8, i8* %10, align 1
  %11 = bitcast %"class.SkSL::String"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 1 %6, i64 %7, i1 false) #13
  %12 = getelementptr inbounds i8, i8* %11, i64 %7
  store i8 0, i8* %12, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(184) %"class.SkSL::Type"* @_ZNK4SkSL10Expression4typeEv(%"class.SkSL::Expression"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %0, i64 0, i32 1
  %3 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %2, align 8
  ret %"class.SkSL::Type"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7LiteralIbE21isCompileTimeConstantEv(%"class.SkSL::Literal"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK4SkSL7LiteralIbE15compareConstantERKNS_10ExpressionE(%"class.SkSL::Literal"*, %"class.SkSL::Expression"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 31
  br i1 %5, label %6, label %16

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 1
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  %10 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %1, i64 1
  %11 = bitcast %"class.SkSL::Expression"* %10 to i8*
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp ne i8 %12, 0
  %14 = xor i1 %9, %13
  %15 = zext i1 %14 to i32
  br label %16

16:                                               ; preds = %2, %6
  %17 = phi i32 [ %15, %6 ], [ -1, %2 ]
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL10Expression19isConstantOrUniformEv(%"class.SkSL::Expression"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.SkSL::Expression"* %0 to i1 (%"class.SkSL::Expression"*)***
  %3 = load i1 (%"class.SkSL::Expression"*)**, i1 (%"class.SkSL::Expression"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %3, i64 4
  %5 = load i1 (%"class.SkSL::Expression"*)*, i1 (%"class.SkSL::Expression"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.SkSL::Expression"* %0) #13
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7LiteralIbE11hasPropertyENS_10Expression8PropertyE(%"class.SkSL::Literal"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZNK4SkSL10Expression12coercionCostERKNS_4TypeE(%"class.SkSL::Expression"*, %"class.SkSL::Type"* dereferenceable(184)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.SkSL::Expression"* %0 to %"class.SkSL::Type"* (%"class.SkSL::Expression"*)***
  %4 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %4, i64 3
  %6 = load %"class.SkSL::Type"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Type"* (%"class.SkSL::Expression"*)** %5, align 8
  %7 = tail call dereferenceable(184) %"class.SkSL::Type"* %6(%"class.SkSL::Expression"* %0) #13
  %8 = tail call { i64, i8 } @_ZNK4SkSL4Type12coercionCostERKS0_(%"class.SkSL::Type"* %7, %"class.SkSL::Type"* dereferenceable(184) %1) #13
  ret { i64, i8 } %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7LiteralIbE24getConstantSubexpressionEi(%"class.SkSL::Literal"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 0
  ret %"class.SkSL::Expression"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7LiteralIbE5cloneEv(%"class.SkSL::Literal"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = getelementptr inbounds %"class.SkSL::Literal", %"class.SkSL::Literal"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"class.SkSL::Type"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 32) #13
  %9 = load i32, i32* %2, align 4
  %10 = bitcast i8* %8 to i32 (...)***
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 %9, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %8, i64 12
  %14 = bitcast i8* %13 to i32*
  store i32 31, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %8, i64 16
  %16 = bitcast i8* %15 to i64*
  store i64 %7, i64* %16, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7LiteralIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %17 = getelementptr inbounds i8, i8* %8, i64 24
  store i8 %4, i8* %17, align 8
  %18 = bitcast i8* %8 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL10Expression21isCompileTimeConstantEv(%"class.SkSL::Expression"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK4SkSL10Expression15compareConstantERKS0_(%"class.SkSL::Expression"*, %"class.SkSL::Expression"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  ret i32 -1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL10Expression24getConstantSubexpressionEi(%"class.SkSL::Expression"*, i32) unnamed_addr #0 comdat align 2 {
  ret %"class.SkSL::Expression"* null
}

declare void @_ZN4SkSL4Pool10FreeMemoryEPv(i8*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

declare { i64, i8 } @_ZNK4SkSL4Type12coercionCostERKS0_(%"class.SkSL::Type"*, %"class.SkSL::Type"* dereferenceable(184)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #6 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %50

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2)
  br label %329

9:                                                ; preds = %5
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = mul i64 %11, -5435081209227447693
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = mul i64 %19, -7286425919675154353
  %21 = getelementptr inbounds i8, i8* %16, i64 -16
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = mul i64 %23, -4348849565147123417
  %25 = sub i64 %12, %15
  %26 = lshr i64 %25, 43
  %27 = shl i64 %25, 21
  %28 = or i64 %27, %26
  %29 = lshr i64 %20, 30
  %30 = mul i64 %19, -4737503975807385600
  %31 = or i64 %29, %30
  %32 = add i64 %24, %28
  %33 = add i64 %32, %31
  %34 = xor i64 %15, -3942382747735136937
  %35 = lshr i64 %34, 20
  %36 = shl i64 %34, 44
  %37 = or i64 %36, %35
  %38 = add i64 %12, %2
  %39 = sub i64 %38, %20
  %40 = add i64 %39, %37
  %41 = xor i64 %33, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %329

50:                                               ; preds = %3
  %51 = icmp ult i64 %2, 65
  br i1 %51, label %52, label %132

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %1, i64 24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast i8* %1 to i64*
  %57 = load i64, i64* %56, align 1
  %58 = getelementptr inbounds i8, i8* %1, i64 %2
  %59 = getelementptr inbounds i8, i8* %58, i64 -16
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 1
  %62 = add i64 %61, %2
  %63 = mul i64 %62, -4348849565147123417
  %64 = add i64 %63, %57
  %65 = add i64 %64, %55
  %66 = lshr i64 %65, 52
  %67 = shl i64 %65, 12
  %68 = or i64 %67, %66
  %69 = lshr i64 %64, 37
  %70 = shl i64 %64, 27
  %71 = or i64 %70, %69
  %72 = getelementptr inbounds i8, i8* %1, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 1
  %75 = add i64 %64, %74
  %76 = lshr i64 %75, 7
  %77 = shl i64 %75, 57
  %78 = or i64 %77, %76
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = add i64 %75, %81
  %83 = lshr i64 %82, 31
  %84 = shl i64 %82, 33
  %85 = or i64 %84, %83
  %86 = add i64 %78, %71
  %87 = add i64 %86, %68
  %88 = add i64 %87, %85
  %89 = getelementptr inbounds i8, i8* %58, i64 -32
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 1
  %92 = add i64 %91, %81
  %93 = getelementptr inbounds i8, i8* %58, i64 -8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 1
  %96 = add i64 %95, %55
  %97 = add i64 %96, %92
  %98 = lshr i64 %97, 52
  %99 = shl i64 %97, 12
  %100 = or i64 %99, %98
  %101 = lshr i64 %92, 37
  %102 = shl i64 %92, 27
  %103 = or i64 %102, %101
  %104 = getelementptr inbounds i8, i8* %58, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = add i64 %106, %92
  %108 = lshr i64 %107, 7
  %109 = shl i64 %107, 57
  %110 = or i64 %109, %108
  %111 = add i64 %107, %61
  %112 = add i64 %111, %96
  %113 = lshr i64 %111, 31
  %114 = shl i64 %111, 33
  %115 = or i64 %114, %113
  %116 = add i64 %82, %55
  %117 = add i64 %116, %103
  %118 = add i64 %117, %110
  %119 = add i64 %118, %100
  %120 = add i64 %119, %115
  %121 = mul i64 %120, -7286425919675154353
  %122 = add i64 %112, %88
  %123 = mul i64 %122, -4348849565147123417
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 47
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, -4348849565147123417
  %128 = add i64 %127, %88
  %129 = lshr i64 %128, 47
  %130 = xor i64 %129, %128
  %131 = mul i64 %130, -7286425919675154353
  br label %329

132:                                              ; preds = %50
  %133 = getelementptr inbounds i8, i8* %1, i64 %2
  %134 = getelementptr inbounds i8, i8* %133, i64 -40
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 1
  %137 = getelementptr inbounds i8, i8* %133, i64 -16
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 1
  %140 = getelementptr inbounds i8, i8* %133, i64 -56
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 1
  %143 = add i64 %142, %139
  %144 = getelementptr inbounds i8, i8* %133, i64 -48
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 1
  %147 = add i64 %146, %2
  %148 = getelementptr inbounds i8, i8* %133, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 1
  %151 = xor i64 %150, %147
  %152 = mul i64 %151, -7070675565921424023
  %153 = lshr i64 %152, 47
  %154 = xor i64 %152, %150
  %155 = xor i64 %154, %153
  %156 = mul i64 %155, -7070675565921424023
  %157 = lshr i64 %156, 47
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, -7070675565921424023
  %160 = getelementptr inbounds i8, i8* %133, i64 -64
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 1
  %163 = add i64 %162, %2
  %164 = add i64 %136, %163
  %165 = add i64 %164, %159
  %166 = lshr i64 %165, 21
  %167 = shl i64 %165, 43
  %168 = or i64 %167, %166
  %169 = add i64 %163, %142
  %170 = add i64 %169, %146
  %171 = lshr i64 %170, 44
  %172 = shl i64 %170, 20
  %173 = or i64 %172, %171
  %174 = add i64 %170, %136
  %175 = add i64 %173, %163
  %176 = add i64 %175, %168
  %177 = getelementptr inbounds i8, i8* %133, i64 -32
  %178 = add i64 %143, -5435081209227447693
  %179 = bitcast i8* %177 to i64*
  %180 = load i64, i64* %179, align 1
  %181 = getelementptr inbounds i8, i8* %177, i64 24
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 1
  %184 = add i64 %178, %180
  %185 = add i64 %184, %136
  %186 = add i64 %185, %183
  %187 = lshr i64 %186, 21
  %188 = shl i64 %186, 43
  %189 = or i64 %188, %187
  %190 = add i64 %184, %150
  %191 = add i64 %190, %139
  %192 = lshr i64 %191, 44
  %193 = shl i64 %191, 20
  %194 = or i64 %193, %192
  %195 = add i64 %191, %183
  %196 = add i64 %194, %184
  %197 = add i64 %196, %189
  %198 = mul i64 %136, -5435081209227447693
  %199 = bitcast i8* %1 to i64*
  %200 = load i64, i64* %199, align 1
  %201 = add i64 %200, %198
  %202 = add i64 %2, -1
  %203 = and i64 %202, -64
  br label %204

204:                                              ; preds = %292, %132
  %205 = phi i64 [ %200, %132 ], [ %294, %292 ]
  %206 = phi i64 [ %197, %132 ], [ %288, %292 ]
  %207 = phi i64 [ %195, %132 ], [ %286, %292 ]
  %208 = phi i64 [ %174, %132 ], [ %264, %292 ]
  %209 = phi i64 [ %176, %132 ], [ %266, %292 ]
  %210 = phi i64 [ %159, %132 ], [ %234, %292 ]
  %211 = phi i64 [ %201, %132 ], [ %244, %292 ]
  %212 = phi i64 [ %203, %132 ], [ %290, %292 ]
  %213 = phi i8* [ %1, %132 ], [ %289, %292 ]
  %214 = phi i64 [ %143, %132 ], [ %239, %292 ]
  %215 = getelementptr inbounds i8, i8* %213, i64 8
  %216 = bitcast i8* %215 to i64*
  %217 = load i64, i64* %216, align 1
  %218 = add i64 %211, %208
  %219 = add i64 %218, %214
  %220 = add i64 %219, %217
  %221 = lshr i64 %220, 37
  %222 = shl i64 %220, 27
  %223 = or i64 %222, %221
  %224 = mul i64 %223, -5435081209227447693
  %225 = add i64 %214, %209
  %226 = getelementptr inbounds i8, i8* %213, i64 48
  %227 = bitcast i8* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = add i64 %225, %228
  %230 = lshr i64 %229, 42
  %231 = shl i64 %229, 22
  %232 = or i64 %231, %230
  %233 = mul i64 %232, -5435081209227447693
  %234 = xor i64 %224, %206
  %235 = getelementptr inbounds i8, i8* %213, i64 40
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 1
  %238 = add i64 %237, %208
  %239 = add i64 %238, %233
  %240 = add i64 %210, %207
  %241 = lshr i64 %240, 33
  %242 = shl i64 %240, 31
  %243 = or i64 %242, %241
  %244 = mul i64 %243, -5435081209227447693
  %245 = mul i64 %209, -5435081209227447693
  %246 = getelementptr inbounds i8, i8* %213, i64 16
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = getelementptr inbounds i8, i8* %213, i64 24
  %250 = bitcast i8* %249 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = add i64 %205, %245
  %253 = add i64 %252, %207
  %254 = add i64 %253, %251
  %255 = add i64 %254, %234
  %256 = lshr i64 %255, 21
  %257 = shl i64 %255, 43
  %258 = or i64 %257, %256
  %259 = add i64 %252, %217
  %260 = add i64 %259, %248
  %261 = lshr i64 %260, 44
  %262 = shl i64 %260, 20
  %263 = or i64 %262, %261
  %264 = add i64 %260, %251
  %265 = add i64 %263, %252
  %266 = add i64 %265, %258
  %267 = getelementptr inbounds i8, i8* %213, i64 32
  %268 = add i64 %244, %206
  %269 = add i64 %239, %248
  %270 = bitcast i8* %267 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = getelementptr inbounds i8, i8* %213, i64 56
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 1
  %275 = add i64 %268, %271
  %276 = add i64 %269, %275
  %277 = add i64 %276, %274
  %278 = lshr i64 %277, 21
  %279 = shl i64 %277, 43
  %280 = or i64 %279, %278
  %281 = add i64 %275, %237
  %282 = add i64 %281, %228
  %283 = lshr i64 %282, 44
  %284 = shl i64 %282, 20
  %285 = or i64 %284, %283
  %286 = add i64 %282, %274
  %287 = add i64 %285, %275
  %288 = add i64 %287, %280
  %289 = getelementptr inbounds i8, i8* %213, i64 64
  %290 = add i64 %212, -64
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %204
  %293 = bitcast i8* %289 to i64*
  %294 = load i64, i64* %293, align 1
  br label %204

295:                                              ; preds = %204
  %296 = xor i64 %286, %264
  %297 = mul i64 %296, -7070675565921424023
  %298 = lshr i64 %297, 47
  %299 = xor i64 %297, %286
  %300 = xor i64 %299, %298
  %301 = mul i64 %300, -7070675565921424023
  %302 = lshr i64 %301, 47
  %303 = xor i64 %302, %301
  %304 = mul i64 %303, -7070675565921424023
  %305 = lshr i64 %239, 47
  %306 = xor i64 %305, %239
  %307 = mul i64 %306, -5435081209227447693
  %308 = add i64 %307, %234
  %309 = add i64 %308, %304
  %310 = xor i64 %288, %266
  %311 = mul i64 %310, -7070675565921424023
  %312 = lshr i64 %311, 47
  %313 = xor i64 %311, %288
  %314 = xor i64 %313, %312
  %315 = mul i64 %314, -7070675565921424023
  %316 = lshr i64 %315, 47
  %317 = xor i64 %316, %315
  %318 = mul i64 %317, -7070675565921424023
  %319 = add i64 %318, %244
  %320 = xor i64 %319, %309
  %321 = mul i64 %320, -7070675565921424023
  %322 = lshr i64 %321, 47
  %323 = xor i64 %321, %319
  %324 = xor i64 %323, %322
  %325 = mul i64 %324, -7070675565921424023
  %326 = lshr i64 %325, 47
  %327 = xor i64 %326, %325
  %328 = mul i64 %327, -7070675565921424023
  br label %329

329:                                              ; preds = %295, %52, %9, %7
  %330 = phi i64 [ %8, %7 ], [ %49, %9 ], [ %131, %52 ], [ %328, %295 ]
  ret i64 %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

declare zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS_10unique_ptrINS2_12_GLOBAL__N_116CapsLookupMethodENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE8__rehashEm(%"class.std::__1::__hash_table.49"*, i64) unnamed_addr #0 align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %140, label %4

4:                                                ; preds = %2
  %5 = icmp ugt i64 %1, 2305843009213693951
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  tail call void @abort() #15
  unreachable

7:                                                ; preds = %4
  %8 = shl i64 %1, 3
  %9 = tail call i8* @_Znwm(i64 %8) #14
  %10 = getelementptr inbounds %"class.std::__1::__hash_table.49", %"class.std::__1::__hash_table.49"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.53"**, %"struct.std::__1::__hash_node_base.53"*** %10, align 8
  %12 = bitcast %"class.std::__1::__hash_table.49"* %0 to i8**
  store i8* %9, i8** %12, align 8
  %13 = icmp eq %"struct.std::__1::__hash_node_base.53"** %11, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %7
  %15 = bitcast %"struct.std::__1::__hash_node_base.53"** %11 to i8*
  tail call void @_ZdlPv(i8* %15) #14
  br label %16

16:                                               ; preds = %14, %7
  %17 = getelementptr inbounds %"class.std::__1::__hash_table.49", %"class.std::__1::__hash_table.49"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %17, align 8
  %18 = add i64 %1, -1
  %19 = and i64 %1, 3
  %20 = icmp ult i64 %18, 3
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = sub i64 %1, %19
  br label %39

23:                                               ; preds = %39, %16
  %24 = phi i64 [ 0, %16 ], [ %53, %39 ]
  %25 = icmp eq i64 %19, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %23, %26
  %27 = phi i64 [ %31, %26 ], [ %24, %23 ]
  %28 = phi i64 [ %32, %26 ], [ %19, %23 ]
  %29 = load %"struct.std::__1::__hash_node_base.53"**, %"struct.std::__1::__hash_node_base.53"*** %10, align 8
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.53"*, %"struct.std::__1::__hash_node_base.53"** %29, i64 %27
  store %"struct.std::__1::__hash_node_base.53"* null, %"struct.std::__1::__hash_node_base.53"** %30, align 8
  %31 = add nuw i64 %27, 1
  %32 = add i64 %28, -1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %26, !llvm.loop !8

34:                                               ; preds = %26, %23
  %35 = getelementptr inbounds %"class.std::__1::__hash_table.49", %"class.std::__1::__hash_table.49"* %0, i64 0, i32 1, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.53", %"struct.std::__1::__hash_node_base.53"* %35, i64 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.53"*, %"struct.std::__1::__hash_node_base.53"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.53"* %37, null
  br i1 %38, label %148, label %56

39:                                               ; preds = %39, %21
  %40 = phi i64 [ 0, %21 ], [ %53, %39 ]
  %41 = phi i64 [ %22, %21 ], [ %54, %39 ]
  %42 = load %"struct.std::__1::__hash_node_base.53"**, %"struct.std::__1::__hash_node_base.53"*** %10, align 8
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.53"*, %"struct.std::__1::__hash_node_base.53"** %42, i64 %40
  store %"struct.std::__1::__hash_node_base.53"* null, %"struct.std::__1::__hash_node_base.53"** %43, align 8
  %44 = or i64 %40, 1
  %45 = load %"struct.std::__1::__hash_node_base.53"**, %"struct.std::__1::__hash_node_base.53"*** %10, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.53"*, %"struct.std::__1::__hash_node_base.53"** %45, i64 %44
  store %"struct.std::__1::__hash_node_base.53"* null, %"struct.std::__1::__hash_node_base.53"** %46, align 8
  %47 = or i64 %40, 2
  %48 = load %"struct.std::__1::__hash_node_base.53"**, %"struct.std::__1::__hash_node_base.53"*** %10, align 8
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.53"*, %"struct.std::__1::__hash_node_base.53"** %48, i64 %47
  store %"struct.std::__1::__hash_node_base.53"* null, %"struct.std::__1::__hash_node_base.53"** %49, align 8
  %50 = or i64 %40, 3
  %51 = load %"struct.std::__1::__hash_node_base.53"**, %"struct.std::__1::__hash_node_base.53"*** %10, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.53"*, %"struct.std::__1::__hash_node_base.53"** %51, i64 %50
  store %"struct.std::__1::__hash_node_base.53"* null, %"struct.std::__1::__hash_node_base.53"** %52, align 8
  %53 = add nuw i64 %40, 4
  %54 = add i64 %41, -4
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %23, label %39

56:                                               ; preds = %34
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.53", %"struct.std::__1::__hash_node_base.53"* %37, i64 1
  %58 = bitcast %"struct.std::__1::__hash_node_base.53"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !4
  %61 = icmp ugt i64 %60, 1
  br i1 %61, label %65, label %62

62:                                               ; preds = %56
  %63 = add i64 %1, -1
  %64 = and i64 %59, %63
  br label %69

65:                                               ; preds = %56
  %66 = icmp ult i64 %59, %1
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = urem i64 %59, %1
  br label %69

69:                                               ; preds = %62, %65, %67
  %70 = phi i64 [ %64, %62 ], [ %68, %67 ], [ %59, %65 ]
  %71 = load %"struct.std::__1::__hash_node_base.53"**, %"struct.std::__1::__hash_node_base.53"*** %10, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.53"*, %"struct.std::__1::__hash_node_base.53"** %71, i64 %70
  store %"struct.std::__1::__hash_node_base.53"* %35, %"struct.std::__1::__hash_node_base.53"** %72, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.53", %"struct.std::__1::__hash_node_base.53"* %37, i64 0, i32 0
  %74 = load %"struct.std::__1::__hash_node_base.53"*, %"struct.std::__1::__hash_node_base.53"** %73, align 8
  %75 = icmp eq %"struct.std::__1::__hash_node_base.53"* %74, null
  br i1 %75, label %148, label %76

76:                                               ; preds = %69
  %77 = add i64 %1, -1
  br label %78

78:                                               ; preds = %76, %134
  %79 = phi %"struct.std::__1::__hash_node_base.53"* [ %74, %76 ], [ %138, %134 ]
  %80 = phi i64 [ %70, %76 ], [ %136, %134 ]
  %81 = phi %"struct.std::__1::__hash_node_base.53"* [ %37, %76 ], [ %135, %134 ]
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base.53", %"struct.std::__1::__hash_node_base.53"* %79, i64 1
  %83 = bitcast %"struct.std::__1::__hash_node_base.53"* %82 to i64*
  %84 = load i64, i64* %83, align 8
  br i1 %61, label %87, label %85

85:                                               ; preds = %78
  %86 = and i64 %84, %77
  br label %91

87:                                               ; preds = %78
  %88 = icmp ult i64 %84, %1
  br i1 %88, label %91, label %89

89:                                               ; preds = %87
  %90 = urem i64 %84, %1
  br label %91

91:                                               ; preds = %85, %87, %89
  %92 = phi i64 [ %86, %85 ], [ %90, %89 ], [ %84, %87 ]
  %93 = icmp eq i64 %92, %80
  br i1 %93, label %134, label %94

94:                                               ; preds = %91
  %95 = load %"struct.std::__1::__hash_node_base.53"**, %"struct.std::__1::__hash_node_base.53"*** %10, align 8
  %96 = getelementptr inbounds %"struct.std::__1::__hash_node_base.53"*, %"struct.std::__1::__hash_node_base.53"** %95, i64 %92
  %97 = load %"struct.std::__1::__hash_node_base.53"*, %"struct.std::__1::__hash_node_base.53"** %96, align 8
  %98 = icmp eq %"struct.std::__1::__hash_node_base.53"* %97, null
  br i1 %98, label %109, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.53", %"struct.std::__1::__hash_node_base.53"* %79, i64 0, i32 0
  %101 = load %"struct.std::__1::__hash_node_base.53"*, %"struct.std::__1::__hash_node_base.53"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.53"* %101, null
  br i1 %102, label %120, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"struct.std::__1::__hash_node_base.53", %"struct.std::__1::__hash_node_base.53"* %79, i64 2
  %105 = bitcast %"struct.std::__1::__hash_node_base.53"* %104 to %"class.SkSL::String"*
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.53", %"struct.std::__1::__hash_node_base.53"* %101, i64 2
  %107 = bitcast %"struct.std::__1::__hash_node_base.53"* %106 to %"class.SkSL::String"*
  %108 = tail call zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"* %105, %"class.SkSL::String"* dereferenceable(24) %107) #13
  br i1 %108, label %114, label %120

109:                                              ; preds = %94
  store %"struct.std::__1::__hash_node_base.53"* %81, %"struct.std::__1::__hash_node_base.53"** %96, align 8
  br label %134

110:                                              ; preds = %114
  %111 = getelementptr inbounds %"struct.std::__1::__hash_node_base.53", %"struct.std::__1::__hash_node_base.53"* %118, i64 2
  %112 = bitcast %"struct.std::__1::__hash_node_base.53"* %111 to %"class.SkSL::String"*
  %113 = tail call zeroext i1 @_ZNK4SkSL6StringeqERKS0_(%"class.SkSL::String"* %105, %"class.SkSL::String"* dereferenceable(24) %112) #13
  br i1 %113, label %114, label %120

114:                                              ; preds = %103, %110
  %115 = phi %"struct.std::__1::__hash_node_base.53"** [ %117, %110 ], [ %100, %103 ]
  %116 = load %"struct.std::__1::__hash_node_base.53"*, %"struct.std::__1::__hash_node_base.53"** %115, align 8
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base.53", %"struct.std::__1::__hash_node_base.53"* %116, i64 0, i32 0
  %118 = load %"struct.std::__1::__hash_node_base.53"*, %"struct.std::__1::__hash_node_base.53"** %117, align 8
  %119 = icmp eq %"struct.std::__1::__hash_node_base.53"* %118, null
  br i1 %119, label %120, label %110

120:                                              ; preds = %114, %110, %103, %99
  %121 = phi %"struct.std::__1::__hash_node_base.53"* [ %79, %99 ], [ %79, %103 ], [ %116, %110 ], [ %116, %114 ]
  %122 = bitcast %"struct.std::__1::__hash_node_base.53"* %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.std::__1::__hash_node_base.53"* %81 to i64*
  store i64 %123, i64* %124, align 8
  %125 = load %"struct.std::__1::__hash_node_base.53"**, %"struct.std::__1::__hash_node_base.53"*** %10, align 8
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.53"*, %"struct.std::__1::__hash_node_base.53"** %125, i64 %92
  %127 = bitcast %"struct.std::__1::__hash_node_base.53"** %126 to i64**
  %128 = load i64*, i64** %127, align 8
  %129 = load i64, i64* %128, align 8
  store i64 %129, i64* %122, align 8
  %130 = load %"struct.std::__1::__hash_node_base.53"**, %"struct.std::__1::__hash_node_base.53"*** %10, align 8
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.53"*, %"struct.std::__1::__hash_node_base.53"** %130, i64 %92
  %132 = load %"struct.std::__1::__hash_node_base.53"*, %"struct.std::__1::__hash_node_base.53"** %131, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.53", %"struct.std::__1::__hash_node_base.53"* %132, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.53"* %79, %"struct.std::__1::__hash_node_base.53"** %133, align 8
  br label %134

134:                                              ; preds = %91, %120, %109
  %135 = phi %"struct.std::__1::__hash_node_base.53"* [ %79, %109 ], [ %81, %120 ], [ %79, %91 ]
  %136 = phi i64 [ %92, %109 ], [ %80, %120 ], [ %80, %91 ]
  %137 = getelementptr inbounds %"struct.std::__1::__hash_node_base.53", %"struct.std::__1::__hash_node_base.53"* %135, i64 0, i32 0
  %138 = load %"struct.std::__1::__hash_node_base.53"*, %"struct.std::__1::__hash_node_base.53"** %137, align 8
  %139 = icmp eq %"struct.std::__1::__hash_node_base.53"* %138, null
  br i1 %139, label %148, label %78

140:                                              ; preds = %2
  %141 = getelementptr inbounds %"class.std::__1::__hash_table.49", %"class.std::__1::__hash_table.49"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %142 = load %"struct.std::__1::__hash_node_base.53"**, %"struct.std::__1::__hash_node_base.53"*** %141, align 8
  store %"struct.std::__1::__hash_node_base.53"** null, %"struct.std::__1::__hash_node_base.53"*** %141, align 8
  %143 = icmp eq %"struct.std::__1::__hash_node_base.53"** %142, null
  br i1 %143, label %146, label %144

144:                                              ; preds = %140
  %145 = bitcast %"struct.std::__1::__hash_node_base.53"** %142 to i8*
  tail call void @_ZdlPv(i8* %145) #14
  br label %146

146:                                              ; preds = %140, %144
  %147 = getelementptr inbounds %"class.std::__1::__hash_table.49", %"class.std::__1::__hash_table.49"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %147, align 8
  br label %148

148:                                              ; preds = %134, %69, %34, %146
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #12

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #12

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL7SettingD2Ev(%"class.SkSL::Setting"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Setting", %"class.SkSL::Setting"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7SettingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::Setting", %"class.SkSL::Setting"* %0, i64 0, i32 1, i32 0
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL7SettingD0Ev(%"class.SkSL::Setting"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::Setting", %"class.SkSL::Setting"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7SettingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::Setting", %"class.SkSL::Setting"* %0, i64 0, i32 1, i32 0
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %8
  %12 = bitcast %"class.SkSL::Setting"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %12) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL7Setting11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::Setting"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::Setting", %"class.SkSL::Setting"* %1, i64 0, i32 1
  %4 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.SkSL::String"* %0 to i8*
  %10 = bitcast %"class.SkSL::String"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false) #13
  br label %17

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0
  %13 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.SkSL::Setting", %"class.SkSL::Setting"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %12, i8* %14, i64 %16) #13
  br label %17

17:                                               ; preds = %8, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL7Setting11hasPropertyENS_10Expression8PropertyE(%"class.SkSL::Setting"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Expression"* @_ZNK4SkSL7Setting5cloneEv(%"class.SkSL::Setting"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.SkSL::String", align 8
  %3 = getelementptr inbounds %"class.SkSL::Setting", %"class.SkSL::Setting"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.SkSL::Setting", %"class.SkSL::Setting"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.SkSL::Setting", %"class.SkSL::Setting"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"class.SkSL::Type"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.SkSL::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8)
  %9 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 48) #13
  %10 = load i32, i32* %3, align 4
  %11 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %16, i64 24, i1 false) #13
  br label %23

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %2, i64 0, i32 0
  %19 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"class.SkSL::Setting", %"class.SkSL::Setting"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %18, i8* %20, i64 %22) #13
  br label %23

23:                                               ; preds = %17, %15
  %24 = bitcast i8* %9 to i32 (...)***
  %25 = getelementptr inbounds i8, i8* %9, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 %10, i32* %26, align 8
  %27 = getelementptr inbounds i8, i8* %9, i64 12
  %28 = bitcast i8* %27 to i32*
  store i32 51, i32* %28, align 4
  %29 = getelementptr inbounds i8, i8* %9, i64 16
  %30 = bitcast i8* %29 to i64*
  store i64 %7, i64* %30, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4SkSL7SettingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %31 = getelementptr inbounds i8, i8* %9, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* nonnull align 8 %8, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8)
  %32 = bitcast i8* %9 to %"class.SkSL::Expression"*
  ret %"class.SkSL::Expression"* %32
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #12

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 1048575}
!4 = !{i64 0, i64 65}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS_10unique_ptrINS2_12_GLOBAL__N_116CapsLookupMethodENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS3_EEENSQ_IJEEEEEENS4_INS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINSJ_ISW_EEEEEEmOT_DpOT0_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN4SkSL6StringENS_10unique_ptrINS2_12_GLOBAL__N_116CapsLookupMethodENS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS3_SA_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_SA_SF_SD_Lb1EEENS_9allocatorISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS3_EEENSQ_IJEEEEEENS4_INS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINSJ_ISW_EEEEEEmOT_DpOT0_"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.unroll.disable"}
