; ModuleID = '../../third_party/pdfium/core/fpdfapi/render/cpdf_pagerendercache.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/render/cpdf_pagerendercache.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_Stream = type opaque
%class.CPDF_PageRenderCache = type <{ %"class.CPDF_Page::RenderCacheIface", %"class.fxcrt::UnownedPtr", %"class.std::__1::map.86", %"class.fxcrt::MaybeOwned", i32, i32, i8, [7 x i8] }>
%"class.CPDF_Page::RenderCacheIface" = type { i32 (...)** }
%"class.fxcrt::UnownedPtr" = type { %class.CPDF_Page* }
%"class.std::__1::map.86" = type { %"class.std::__1::__tree.87" }
%"class.std::__1::__tree.87" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.88", %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.97", %"class.fxcrt::UnownedPtr.138" }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %class.CPDF_ImageCacheEntry* }
%class.CPDF_ImageCacheEntry = type { i32, i32, i32, %"class.fxcrt::UnownedPtr.35", %"class.fxcrt::RetainPtr.100", %"class.fxcrt::RetainPtr.104", %"class.fxcrt::RetainPtr.104", %"class.fxcrt::RetainPtr.104", %"class.fxcrt::RetainPtr.104" }
%"class.fxcrt::UnownedPtr.35" = type { %class.CPDF_Document* }
%class.CPDF_Document = type opaque
%"class.fxcrt::RetainPtr.100" = type { %"class.std::__1::unique_ptr.101" }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %class.CPDF_Image* }
%class.CPDF_Image = type { %"class.fxcrt::Retainable", i32, i32, i32, i8, i8, i8, %"class.fxcrt::UnownedPtr.35", %"class.fxcrt::RetainPtr.104", %"class.fxcrt::RetainPtr.104", %"class.fxcrt::RetainPtr.121", %"class.fxcrt::RetainPtr.127" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::RetainPtr.121" = type { %"class.std::__1::unique_ptr.122" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %class.CPDF_Stream* }
%"class.fxcrt::RetainPtr.127" = type { %"class.std::__1::unique_ptr.128" }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map" }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr.0" }
%"class.fxcrt::RetainPtr.0" = type { %"class.std::__1::unique_ptr.1" }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.313" }
%"class.std::__1::unique_ptr.313" = type { %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.316", %"class.std::__1::__compressed_pair.324", %"class.std::__1::__compressed_pair.329", %"class.std::__1::__compressed_pair.331", [4 x i8] }>
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318", %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { float }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.fxcrt::RetainPtr.104" = type { %"class.std::__1::unique_ptr.105" }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %class.CFX_DIBBase* }
%class.CFX_DIBBase = type { %"class.fxcrt::Retainable", i16, i32, i32, i32, %"class.fxcrt::RetainPtr.108", %"class.std::__1::vector.114" }
%"class.fxcrt::RetainPtr.108" = type { %"class.std::__1::unique_ptr.109" }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %class.CFX_DIBitmap* }
%class.CFX_DIBitmap = type { %class.CFX_DIBBase, %"class.fxcrt::MaybeOwned.139" }
%"class.fxcrt::MaybeOwned.139" = type { %"class.std::__1::unique_ptr.140", %"class.fxcrt::UnownedPtr.144" }
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { i8* }
%"class.fxcrt::UnownedPtr.144" = type { i8* }
%"class.std::__1::vector.114" = type { %"class.std::__1::__vector_base.115" }
%"class.std::__1::__vector_base.115" = type { i32*, i32*, %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { i32* }
%"class.fxcrt::UnownedPtr.138" = type { %class.CPDF_ImageCacheEntry* }
%class.CPDF_Page = type { %class.IPDF_Page, %class.CPDF_PageObjectHolder, %class.CFX_STemplate, %class.CFX_Matrix, %"class.fxcrt::UnownedPtr.35", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.70", %"class.fxcrt::ObservedPtr" }
%class.IPDF_Page = type { %"class.fxcrt::Retainable" }
%class.CPDF_PageObjectHolder = type { i32 (...)**, %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr", %"class.std::__1::map.13", %"class.std::__1::map.24", %class.CFX_FloatRect, %class.CPDF_Transparency, i8, i8, %"class.fxcrt::RetainPtr", %"class.fxcrt::UnownedPtr.35", %"class.std::__1::vector", %"class.std::__1::unique_ptr.41", %"class.std::__1::deque", %class.CFX_Matrix, %"class.std::__1::set" }
%"class.std::__1::map.13" = type { %"class.std::__1::__tree.14" }
%"class.std::__1::__tree.14" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.15", %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::map.24" = type { %"class.std::__1::__tree.25" }
%"class.std::__1::__tree.25" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.26", %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%class.CFX_FloatRect = type { float, float, float, float }
%class.CPDF_Transparency = type { i8, i8 }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CPDF_Dictionary* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.CFX_FloatRect*, %class.CFX_FloatRect*, %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %class.CFX_FloatRect* }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %class.CPDF_ContentParser* }
%class.CPDF_ContentParser = type opaque
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.51" }
%"struct.std::__1::__split_buffer" = type { %"class.std::__1::unique_ptr.45"**, %"class.std::__1::unique_ptr.45"**, %"class.std::__1::unique_ptr.45"**, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %class.CPDF_PageObject* }
%class.CPDF_PageObject = type { %class.CPDF_GraphicStates, %class.CFX_FloatRect, %class.CPDF_ContentMarks, i8, i32 }
%class.CPDF_GraphicStates = type { i32 (...)**, %class.CPDF_ClipPath, %class.CFX_GraphState, %class.CPDF_ColorState, %class.CPDF_TextState, %class.CPDF_GeneralState }
%class.CPDF_ClipPath = type { %"class.fxcrt::SharedCopyOnWrite" }
%"class.fxcrt::SharedCopyOnWrite" = type { %"class.fxcrt::RetainPtr.179" }
%"class.fxcrt::RetainPtr.179" = type { %"class.std::__1::unique_ptr.180" }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.CPDF_ClipPath::PathData"* }
%"class.CPDF_ClipPath::PathData" = type { %"class.fxcrt::Retainable", %"class.std::__1::vector.183", %"class.std::__1::vector.191" }
%"class.std::__1::vector.183" = type { %"class.std::__1::__vector_base.184" }
%"class.std::__1::__vector_base.184" = type { %"struct.std::__1::pair.185"*, %"struct.std::__1::pair.185"*, %"class.std::__1::__compressed_pair.186" }
%"struct.std::__1::pair.185" = type opaque
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"struct.std::__1::pair.185"* }
%"class.std::__1::vector.191" = type { %"class.std::__1::__vector_base.192" }
%"class.std::__1::__vector_base.192" = type { %"class.std::__1::unique_ptr.193"*, %"class.std::__1::unique_ptr.193"*, %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::unique_ptr.193" = type opaque
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.std::__1::unique_ptr.193"* }
%class.CFX_GraphState = type { %"class.fxcrt::SharedCopyOnWrite.202" }
%"class.fxcrt::SharedCopyOnWrite.202" = type { %"class.fxcrt::RetainPtr.203" }
%"class.fxcrt::RetainPtr.203" = type { %"class.std::__1::unique_ptr.204" }
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %class.CFX_RetainableGraphStateData* }
%class.CFX_RetainableGraphStateData = type { %"class.fxcrt::Retainable", %class.CFX_GraphStateData }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.207" }
%"class.std::__1::vector.207" = type { %"class.std::__1::__vector_base.208" }
%"class.std::__1::__vector_base.208" = type { float*, float*, %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { float* }
%class.CPDF_ColorState = type { %"class.fxcrt::SharedCopyOnWrite.216" }
%"class.fxcrt::SharedCopyOnWrite.216" = type { %"class.fxcrt::RetainPtr.217" }
%"class.fxcrt::RetainPtr.217" = type { %"class.std::__1::unique_ptr.218" }
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.CPDF_ColorState::ColorData"* }
%"class.CPDF_ColorState::ColorData" = type { %"class.fxcrt::Retainable", i32, i32, %class.CPDF_Color, %class.CPDF_Color }
%class.CPDF_Color = type { %"class.std::__1::vector.207", %"class.std::__1::unique_ptr.221", %"class.fxcrt::RetainPtr.239" }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %class.PatternValue* }
%class.PatternValue = type { %"class.fxcrt::RetainPtr.224", %"struct.std::__1::array" }
%"class.fxcrt::RetainPtr.224" = type { %"class.std::__1::unique_ptr.225" }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %class.CPDF_Pattern* }
%class.CPDF_Pattern = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr.35", %"class.fxcrt::RetainPtr.228", %class.CFX_Matrix, %class.CFX_Matrix }
%"class.fxcrt::Observable" = type { %"class.std::__1::set.76" }
%"class.std::__1::set.76" = type { %"class.std::__1::__tree.77" }
%"class.std::__1::__tree.77" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.78", %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.fxcrt::RetainPtr.228" = type { %"class.std::__1::unique_ptr.229" }
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %class.CPDF_Object* }
%"struct.std::__1::array" = type { [16 x float] }
%"class.fxcrt::RetainPtr.239" = type { %"class.std::__1::unique_ptr.240" }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %class.CPDF_ColorSpace* }
%class.CPDF_ColorSpace = type <{ %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr.243", %"class.fxcrt::RetainPtr.244", i32, i32, i32, [4 x i8] }>
%"class.fxcrt::UnownedPtr.243" = type { %class.CPDF_Document* }
%"class.fxcrt::RetainPtr.244" = type { %"class.std::__1::unique_ptr.245" }
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %class.CPDF_Array* }
%class.CPDF_Array = type opaque
%class.CPDF_TextState = type { %"class.fxcrt::SharedCopyOnWrite.254" }
%"class.fxcrt::SharedCopyOnWrite.254" = type { %"class.fxcrt::RetainPtr.255" }
%"class.fxcrt::RetainPtr.255" = type { %"class.std::__1::unique_ptr.256" }
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.CPDF_TextState::TextData"* }
%"class.CPDF_TextState::TextData" = type { %"class.fxcrt::Retainable", %"class.fxcrt::RetainPtr.259", %"class.fxcrt::UnownedPtr.243", float, float, float, i32, [4 x float], [4 x float] }
%"class.fxcrt::RetainPtr.259" = type { %"class.std::__1::unique_ptr.260" }
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %class.CPDF_Font* }
%class.CPDF_Font = type opaque
%class.CPDF_GeneralState = type { %"class.fxcrt::SharedCopyOnWrite.267" }
%"class.fxcrt::SharedCopyOnWrite.267" = type { %"class.fxcrt::RetainPtr.268" }
%"class.fxcrt::RetainPtr.268" = type { %"class.std::__1::unique_ptr.269" }
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.CPDF_GeneralState::StateData"* }
%"class.CPDF_GeneralState::StateData" = type { %"class.fxcrt::Retainable", %"class.fxcrt::ByteString", i32, %"class.fxcrt::RetainPtr.228", %class.CFX_Matrix, float, float, %"class.fxcrt::RetainPtr.278", %"class.fxcrt::RetainPtr.284", %class.CFX_Matrix, i32, i8, i8, i8, i8, i8, i32, %"class.fxcrt::RetainPtr.278", %"class.fxcrt::RetainPtr.278", %"class.fxcrt::RetainPtr.278", float, float }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.272" }
%"class.fxcrt::RetainPtr.272" = type { %"class.std::__1::unique_ptr.273" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.fxcrt::RetainPtr.284" = type { %"class.std::__1::unique_ptr.285" }
%"class.std::__1::unique_ptr.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %class.CPDF_TransferFunc* }
%class.CPDF_TransferFunc = type opaque
%"class.fxcrt::RetainPtr.278" = type { %"class.std::__1::unique_ptr.279" }
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %class.CPDF_Object* }
%class.CPDF_ContentMarks = type { %"class.fxcrt::RetainPtr.292" }
%"class.fxcrt::RetainPtr.292" = type { %"class.std::__1::unique_ptr.293" }
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"class.CPDF_ContentMarks::MarkData"* }
%"class.CPDF_ContentMarks::MarkData" = type { %"class.fxcrt::Retainable", %"class.std::__1::vector.296" }
%"class.std::__1::vector.296" = type { %"class.std::__1::__vector_base.297" }
%"class.std::__1::__vector_base.297" = type { %"class.fxcrt::RetainPtr.298"*, %"class.fxcrt::RetainPtr.298"*, %"class.std::__1::__compressed_pair.299" }
%"class.fxcrt::RetainPtr.298" = type opaque
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.fxcrt::RetainPtr.298"* }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::unique_ptr.45"** }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.55" }
%"class.std::__1::__tree.55" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%class.CFX_STemplate = type { float, float }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.CPDF_Page::RenderCacheIface"* }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.CPDF_Page::RenderContextIface"* }
%"class.CPDF_Page::RenderContextIface" = type { i32 (...)** }
%"class.fxcrt::ObservedPtr" = type { %"class.fxcrt::Observable::ObserverIface", %"class.CPDF_Page::View"* }
%"class.fxcrt::Observable::ObserverIface" = type { i32 (...)** }
%"class.CPDF_Page::View" = type { %"class.fxcrt::Observable" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %class.CPDF_Stream*, %"class.std::__1::unique_ptr.97" }
%"class.std::__1::vector.145" = type { %"class.std::__1::__vector_base.146" }
%"class.std::__1::__vector_base.146" = type { %"struct.(anonymous namespace)::CacheInfo"*, %"struct.(anonymous namespace)::CacheInfo"*, %"class.std::__1::__compressed_pair.147" }
%"struct.(anonymous namespace)::CacheInfo" = type { i32, %class.CPDF_Stream* }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"struct.(anonymous namespace)::CacheInfo"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%class.CPDF_RenderStatus = type <{ %class.CPDF_RenderOptions, %"class.fxcrt::RetainPtr.127", %"class.fxcrt::RetainPtr.127", %"class.std::__1::vector.169", %"class.fxcrt::UnownedPtr.177", %"class.fxcrt::UnownedPtr.178", %class.CFX_Matrix, %class.CPDF_ClipPath, %"class.fxcrt::UnownedPtr.201", %"class.fxcrt::UnownedPtr.201", %class.CPDF_GraphicStates, %"class.std::__1::unique_ptr.306", %"class.fxcrt::UnownedPtr.312", %class.CPDF_Transparency, i8, i8, i8, i8, i8, i8, i32, i32, i32, [4 x i8] }>
%class.CPDF_RenderOptions = type { i8, i8, %"struct.CPDF_RenderOptions::Options", %"struct.CPDF_RenderOptions::ColorScheme", %"class.fxcrt::RetainPtr.152" }
%"struct.CPDF_RenderOptions::Options" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.CPDF_RenderOptions::ColorScheme" = type { i32, i32, i32, i32 }
%"class.fxcrt::RetainPtr.152" = type { %"class.std::__1::unique_ptr.153" }
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %class.CPDF_OCContext* }
%class.CPDF_OCContext = type { %"class.fxcrt::Retainable", %"class.fxcrt::UnownedPtr.35", i32, %"class.std::__1::map.156" }
%"class.std::__1::map.156" = type { %"class.std::__1::__tree.157" }
%"class.std::__1::__tree.157" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.158", %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::vector.169" = type { %"class.std::__1::__vector_base.170" }
%"class.std::__1::__vector_base.170" = type { %"class.fxcrt::UnownedPtr.171"*, %"class.fxcrt::UnownedPtr.171"*, %"class.std::__1::__compressed_pair.172" }
%"class.fxcrt::UnownedPtr.171" = type opaque
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.fxcrt::UnownedPtr.171"* }
%"class.fxcrt::UnownedPtr.177" = type { %class.CPDF_RenderContext* }
%class.CPDF_RenderContext = type opaque
%"class.fxcrt::UnownedPtr.178" = type { %class.CFX_RenderDevice* }
%class.CFX_RenderDevice = type opaque
%"class.fxcrt::UnownedPtr.201" = type { %class.CPDF_PageObject* }
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %class.CPDF_ImageRenderer* }
%class.CPDF_ImageRenderer = type opaque
%"class.fxcrt::UnownedPtr.312" = type { %class.CPDF_Type3Char* }
%class.CPDF_Type3Char = type opaque
%class.PauseIndicatorIface = type opaque

$_ZNSt3__16__treeINS_12__value_typeIP11CPDF_StreamNS_10unique_ptrI20CPDF_ImageCacheEntryNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIP11CPDF_StreamNS_10unique_ptrI20CPDF_ImageCacheEntryNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE5eraseENS_21__tree_const_iteratorIS9_PNS_11__tree_nodeIS9_PvEElEE = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@_ZTV20CPDF_PageRenderCache = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CPDF_PageRenderCache*)* @_ZN20CPDF_PageRenderCacheD2Ev to i8*), i8* bitcast (void (%class.CPDF_PageRenderCache*)* @_ZN20CPDF_PageRenderCacheD0Ev to i8*), i8* bitcast (void (%class.CPDF_PageRenderCache*, %"class.fxcrt::RetainPtr.100"*)* @_ZN20CPDF_PageRenderCache19ResetBitmapForImageERKN5fxcrt9RetainPtrI10CPDF_ImageEE to i8*)] }, align 8
@__const._ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN12_GLOBAL__N_19CacheInfoES3_EEPS3_EEbT0_S7_T_.__t = private unnamed_addr constant { i32, [4 x i8], %class.CPDF_Stream* } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.CPDF_Stream* inttoptr (i64 -6148914691236517206 to %class.CPDF_Stream*) }, align 8

@_ZN20CPDF_PageRenderCacheC1EP9CPDF_Page = hidden unnamed_addr alias void (%class.CPDF_PageRenderCache*, %class.CPDF_Page*), void (%class.CPDF_PageRenderCache*, %class.CPDF_Page*)* @_ZN20CPDF_PageRenderCacheC2EP9CPDF_Page
@_ZN20CPDF_PageRenderCacheD1Ev = hidden unnamed_addr alias void (%class.CPDF_PageRenderCache*), void (%class.CPDF_PageRenderCache*)* @_ZN20CPDF_PageRenderCacheD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CPDF_PageRenderCacheC2EP9CPDF_Page(%class.CPDF_PageRenderCache*, %class.CPDF_Page*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV20CPDF_PageRenderCache, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 1, i32 0
  store %class.CPDF_Page* %1, %class.CPDF_Page** %4, align 8
  %5 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %7 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 2, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_node_base"** %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #8
  store %"class.std::__1::__tree_end_node"* %6, %"class.std::__1::__tree_end_node"** %7, align 8
  %9 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 3
  %10 = bitcast %"class.fxcrt::MaybeOwned"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 25, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CPDF_PageRenderCacheD2Ev(%class.CPDF_PageRenderCache*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV20CPDF_PageRenderCache, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_ImageCacheEntry*, %class.CPDF_ImageCacheEntry** %3, align 8
  store %class.CPDF_ImageCacheEntry* null, %class.CPDF_ImageCacheEntry** %3, align 8
  %5 = icmp eq %class.CPDF_ImageCacheEntry* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN20CPDF_ImageCacheEntryD1Ev(%class.CPDF_ImageCacheEntry* nonnull %4) #8
  %7 = bitcast %class.CPDF_ImageCacheEntry* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 2, i32 0
  %10 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.std::__1::__tree_node"**
  %12 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %11, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIP11CPDF_StreamNS_10unique_ptrI20CPDF_ImageCacheEntryNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.87"* %9, %"class.std::__1::__tree_node"* %12) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CPDF_PageRenderCacheD0Ev(%class.CPDF_PageRenderCache*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV20CPDF_PageRenderCache, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_ImageCacheEntry*, %class.CPDF_ImageCacheEntry** %3, align 8
  store %class.CPDF_ImageCacheEntry* null, %class.CPDF_ImageCacheEntry** %3, align 8
  %5 = icmp eq %class.CPDF_ImageCacheEntry* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN20CPDF_ImageCacheEntryD1Ev(%class.CPDF_ImageCacheEntry* nonnull %4) #8
  %7 = bitcast %class.CPDF_ImageCacheEntry* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 2, i32 0
  %10 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.std::__1::__tree_node"**
  %12 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %11, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIP11CPDF_StreamNS_10unique_ptrI20CPDF_ImageCacheEntryNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.87"* %9, %"class.std::__1::__tree_node"* %12) #8
  %13 = bitcast %class.CPDF_PageRenderCache* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CPDF_PageRenderCache17CacheOptimizationEi(%class.CPDF_PageRenderCache*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.145", align 8
  %4 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 5
  %5 = load i32, i32* %4, align 4
  %6 = icmp ugt i32 %5, %1
  br i1 %6, label %7, label %347

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 2
  %9 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.145"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.std::__1::vector.145", %"class.std::__1::vector.145"* %3, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::vector.145", %"class.std::__1::vector.145"* %3, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::vector.145", %"class.std::__1::vector.145"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #8
  %15 = bitcast %"struct.(anonymous namespace)::CacheInfo"** %14 to i64*
  %16 = bitcast %"class.std::__1::vector.145"* %3 to i64*
  %17 = icmp eq i64 %10, 0
  br i1 %17, label %31, label %18

18:                                               ; preds = %7
  %19 = icmp ugt i64 %10, 1152921504606846975
  br i1 %19, label %20, label %21

20:                                               ; preds = %18
  tail call void @abort() #10
  unreachable

21:                                               ; preds = %18
  %22 = bitcast %"struct.(anonymous namespace)::CacheInfo"** %13 to i64*
  %23 = shl i64 %10, 4
  %24 = tail call i8* @_Znwm(i64 %23) #9
  %25 = bitcast i8* %24 to %"struct.(anonymous namespace)::CacheInfo"*
  %26 = ptrtoint i8* %24 to i64
  %27 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %25, i64 %10
  %28 = ptrtoint %"struct.(anonymous namespace)::CacheInfo"* %27 to i64
  %29 = ptrtoint i8* %24 to i64
  store i64 %29, i64* %16, align 8
  store i64 %26, i64* %22, align 8
  store i64 %28, i64* %15, align 8
  %30 = bitcast i8* %24 to %"struct.(anonymous namespace)::CacheInfo"*
  br label %31

31:                                               ; preds = %21, %7
  %32 = phi %"struct.(anonymous namespace)::CacheInfo"* [ null, %7 ], [ %30, %21 ]
  %33 = phi %"struct.(anonymous namespace)::CacheInfo"* [ null, %7 ], [ %25, %21 ]
  %34 = phi i64 [ 0, %7 ], [ %26, %21 ]
  %35 = phi %"struct.(anonymous namespace)::CacheInfo"* [ null, %7 ], [ %27, %21 ]
  %36 = getelementptr inbounds %"class.std::__1::map.86", %"class.std::__1::map.86"* %8, i64 0, i32 0, i32 0
  %37 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %36, align 8
  %38 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %39 = icmp eq %"class.std::__1::__tree_end_node"* %37, %38
  br i1 %39, label %42, label %40

40:                                               ; preds = %31
  %41 = bitcast %"struct.(anonymous namespace)::CacheInfo"** %13 to i64*
  br label %56

42:                                               ; preds = %163, %31
  %43 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %32, %31 ], [ %132, %163 ]
  %44 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %33, %31 ], [ %133, %163 ]
  %45 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %32, %31 ], [ %134, %163 ]
  tail call fastcc void @_ZNSt3__16__sortIRNS_6__lessIN12_GLOBAL__N_19CacheInfoES3_EEPS3_EEvT0_S7_T_(%"struct.(anonymous namespace)::CacheInfo"* %45, %"struct.(anonymous namespace)::CacheInfo"* %44) #8
  %46 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 4
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %47, -1
  br i1 %48, label %49, label %245

49:                                               ; preds = %42
  %50 = icmp eq i64 %10, 0
  br i1 %50, label %168, label %51

51:                                               ; preds = %49
  %52 = bitcast %"class.std::__1::__tree_end_node"* %38 to %"class.std::__1::__tree_node"**
  %53 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %55 = bitcast %"class.std::__1::map.86"* %8 to i64*
  br label %170

56:                                               ; preds = %166, %40
  %57 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %32, %40 ], [ %132, %166 ]
  %58 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %32, %40 ], [ %134, %166 ]
  %59 = phi i64 [ %34, %40 ], [ %135, %166 ]
  %60 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %35, %40 ], [ %167, %166 ]
  %61 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %33, %40 ], [ %133, %166 ]
  %62 = phi %"class.std::__1::__tree_end_node"* [ %37, %40 ], [ %164, %166 ]
  %63 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %62, i64 5
  %64 = bitcast %"class.std::__1::__tree_end_node"* %63 to %class.CPDF_ImageCacheEntry**
  %65 = load %class.CPDF_ImageCacheEntry*, %class.CPDF_ImageCacheEntry** %64, align 8
  %66 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %65, i64 0, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %65, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %69 = load %class.CPDF_Image*, %class.CPDF_Image** %68, align 8
  %70 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %69, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %71 = bitcast %class.CPDF_Stream** %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = icmp ult %"struct.(anonymous namespace)::CacheInfo"* %61, %60
  %74 = ptrtoint %"struct.(anonymous namespace)::CacheInfo"* %60 to i64
  br i1 %73, label %75, label %81

75:                                               ; preds = %56
  %76 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %61, i64 0, i32 0
  store i32 %67, i32* %76, align 8
  %77 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %61, i64 0, i32 1
  %78 = bitcast %class.CPDF_Stream** %77 to i64*
  store i64 %72, i64* %78, align 8
  %79 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %61, i64 1
  %80 = ptrtoint %"struct.(anonymous namespace)::CacheInfo"* %79 to i64
  store i64 %80, i64* %41, align 8
  br label %131

81:                                               ; preds = %56
  %82 = ptrtoint %"struct.(anonymous namespace)::CacheInfo"* %61 to i64
  %83 = load i64, i64* %16, align 8
  %84 = sub i64 %82, %83
  %85 = ashr exact i64 %84, 4
  %86 = add nsw i64 %85, 1
  %87 = icmp ugt i64 %86, 1152921504606846975
  br i1 %87, label %88, label %90

88:                                               ; preds = %81
  %89 = bitcast %"class.std::__1::vector.145"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %89) #10
  unreachable

90:                                               ; preds = %81
  %91 = sub i64 %74, %83
  %92 = ashr exact i64 %91, 4
  %93 = icmp ult i64 %92, 576460752303423487
  br i1 %93, label %94, label %102

94:                                               ; preds = %90
  %95 = ashr exact i64 %91, 3
  %96 = icmp ult i64 %95, %86
  %97 = select i1 %96, i64 %86, i64 %95
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %107, label %99

99:                                               ; preds = %94
  %100 = icmp ugt i64 %97, 1152921504606846975
  br i1 %100, label %101, label %102

101:                                              ; preds = %99
  tail call void @abort() #10
  unreachable

102:                                              ; preds = %99, %90
  %103 = phi i64 [ %97, %99 ], [ 1152921504606846975, %90 ]
  %104 = shl i64 %103, 4
  %105 = tail call i8* @_Znwm(i64 %104) #9
  %106 = bitcast i8* %105 to %"struct.(anonymous namespace)::CacheInfo"*
  br label %107

107:                                              ; preds = %102, %94
  %108 = phi i64 [ %103, %102 ], [ 0, %94 ]
  %109 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %106, %102 ], [ null, %94 ]
  %110 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %109, i64 %85
  %111 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %109, i64 %108
  %112 = ptrtoint %"struct.(anonymous namespace)::CacheInfo"* %111 to i64
  %113 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %110, i64 0, i32 0
  store i32 %67, i32* %113, align 8
  %114 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %109, i64 %85, i32 1
  %115 = bitcast %class.CPDF_Stream** %114 to i64*
  store i64 %72, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %110, i64 1
  %117 = ptrtoint %"struct.(anonymous namespace)::CacheInfo"* %116 to i64
  %118 = sub i64 %59, %83
  %119 = ashr exact i64 %118, 4
  %120 = sub nsw i64 0, %119
  %121 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %110, i64 %120
  %122 = ptrtoint %"struct.(anonymous namespace)::CacheInfo"* %121 to i64
  %123 = icmp sgt i64 %118, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %107
  %125 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %121 to i8*
  %126 = inttoptr i64 %83 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* align 8 %126, i64 %118, i1 false) #8
  br label %127

127:                                              ; preds = %124, %107
  store i64 %122, i64* %16, align 8
  store i64 %117, i64* %41, align 8
  store i64 %112, i64* %15, align 8
  %128 = icmp eq i64 %83, 0
  br i1 %128, label %131, label %129

129:                                              ; preds = %127
  %130 = inttoptr i64 %83 to i8*
  tail call void @_ZdlPv(i8* %130) #9
  br label %131

131:                                              ; preds = %75, %127, %129
  %132 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %57, %75 ], [ %121, %127 ], [ %121, %129 ]
  %133 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %79, %75 ], [ %116, %127 ], [ %116, %129 ]
  %134 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %58, %75 ], [ %121, %127 ], [ %121, %129 ]
  %135 = phi i64 [ %80, %75 ], [ %117, %127 ], [ %117, %129 ]
  %136 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %62, i64 1, i32 0
  %137 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %136, align 8
  %138 = icmp eq %"class.std::__1::__tree_node_base"* %137, null
  br i1 %138, label %139, label %147

139:                                              ; preds = %131
  %140 = bitcast %"class.std::__1::__tree_end_node"* %62 to %"class.std::__1::__tree_node_base"*
  %141 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %62, i64 2
  %142 = bitcast %"class.std::__1::__tree_end_node"* %141 to %"class.std::__1::__tree_end_node"**
  %143 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %142, align 8
  %144 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %143, i64 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, %140
  br i1 %146, label %163, label %154

147:                                              ; preds = %131, %147
  %148 = phi %"class.std::__1::__tree_node_base"* [ %150, %147 ], [ %137, %131 ]
  %149 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %148, i64 0, i32 0, i32 0
  %150 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %149, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %150, null
  br i1 %151, label %152, label %147

152:                                              ; preds = %147
  %153 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %148, i64 0, i32 0
  br label %163

154:                                              ; preds = %139, %154
  %155 = phi %"class.std::__1::__tree_end_node"** [ %158, %154 ], [ %142, %139 ]
  %156 = bitcast %"class.std::__1::__tree_end_node"** %155 to %"class.std::__1::__tree_node_base"**
  %157 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %156, align 8
  %158 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %157, i64 0, i32 2
  %159 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %158, align 8
  %160 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %159, i64 0, i32 0
  %161 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %160, align 8
  %162 = icmp eq %"class.std::__1::__tree_node_base"* %161, %157
  br i1 %162, label %163, label %154

163:                                              ; preds = %154, %139, %152
  %164 = phi %"class.std::__1::__tree_end_node"* [ %153, %152 ], [ %143, %139 ], [ %159, %154 ]
  %165 = icmp eq %"class.std::__1::__tree_end_node"* %164, %38
  br i1 %165, label %42, label %166

166:                                              ; preds = %163
  %167 = load %"struct.(anonymous namespace)::CacheInfo"*, %"struct.(anonymous namespace)::CacheInfo"** %14, align 8
  br label %56

168:                                              ; preds = %235, %49
  %169 = trunc i64 %10 to i32
  store i32 %169, i32* %46, align 8
  br label %245

170:                                              ; preds = %243, %51
  %171 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %43, %51 ], [ %244, %243 ]
  %172 = phi i64 [ 0, %51 ], [ %241, %243 ]
  %173 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %171, i64 %172, i32 1
  %174 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %52, align 8
  %175 = icmp eq %"class.std::__1::__tree_node"* %174, null
  br i1 %175, label %204, label %176

176:                                              ; preds = %170
  %177 = load %class.CPDF_Stream*, %class.CPDF_Stream** %173, align 8
  br label %178

178:                                              ; preds = %200, %176
  %179 = phi %"class.std::__1::__tree_node"* [ %203, %200 ], [ %174, %176 ]
  %180 = phi %"class.std::__1::__tree_node_base"** [ %202, %200 ], [ %53, %176 ]
  %181 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %179, i64 0, i32 1, i32 0, i32 0
  %182 = load %class.CPDF_Stream*, %class.CPDF_Stream** %181, align 8
  %183 = icmp ult %class.CPDF_Stream* %177, %182
  br i1 %183, label %184, label %190

184:                                              ; preds = %178
  %185 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %179, i64 0, i32 0, i32 0, i32 0
  %186 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %185, align 8
  %187 = icmp eq %"class.std::__1::__tree_node_base"* %186, null
  br i1 %187, label %188, label %200

188:                                              ; preds = %184
  %189 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %179, i64 0, i32 0, i32 0
  br label %204

190:                                              ; preds = %178
  %191 = icmp ult %class.CPDF_Stream* %182, %177
  br i1 %191, label %192, label %198

192:                                              ; preds = %190
  %193 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %179, i64 0, i32 0, i32 1
  %194 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %193, align 8
  %195 = icmp eq %"class.std::__1::__tree_node_base"* %194, null
  br i1 %195, label %196, label %200

196:                                              ; preds = %192
  %197 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %179, i64 0, i32 0, i32 0
  br label %204

198:                                              ; preds = %190
  %199 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %179, i64 0, i32 0, i32 0
  br label %204

200:                                              ; preds = %192, %184
  %201 = phi %"class.std::__1::__tree_node_base"* [ %186, %184 ], [ %194, %192 ]
  %202 = phi %"class.std::__1::__tree_node_base"** [ %185, %184 ], [ %193, %192 ]
  %203 = bitcast %"class.std::__1::__tree_node_base"* %201 to %"class.std::__1::__tree_node"*
  br label %178

204:                                              ; preds = %170, %198, %196, %188
  %205 = phi %"class.std::__1::__tree_end_node"* [ %189, %188 ], [ %197, %196 ], [ %199, %198 ], [ %38, %170 ]
  %206 = phi %"class.std::__1::__tree_node_base"** [ %185, %188 ], [ %193, %196 ], [ %180, %198 ], [ %54, %170 ]
  %207 = bitcast %"class.std::__1::__tree_node_base"** %206 to %"class.std::__1::__tree_node"**
  %208 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %207, align 8
  %209 = icmp eq %"class.std::__1::__tree_node"* %208, null
  br i1 %209, label %210, label %235

210:                                              ; preds = %204
  %211 = tail call i8* @_Znwm(i64 48) #9, !noalias !2
  %212 = getelementptr inbounds i8, i8* %211, i64 32
  %213 = bitcast %class.CPDF_Stream** %173 to i64*
  %214 = load i64, i64* %213, align 8, !noalias !2
  %215 = bitcast i8* %212 to i64*
  store i64 %214, i64* %215, align 8, !noalias !2
  %216 = getelementptr inbounds i8, i8* %211, i64 40
  %217 = bitcast i8* %216 to i64*
  store i64 0, i64* %217, align 8, !noalias !2
  %218 = bitcast i8* %211 to %"class.std::__1::__tree_node"*
  %219 = bitcast i8* %211 to %"class.std::__1::__tree_node_base"*
  %220 = getelementptr inbounds i8, i8* %211, i64 16
  %221 = bitcast i8* %220 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %211, i8 0, i64 16, i1 false) #8
  store %"class.std::__1::__tree_end_node"* %205, %"class.std::__1::__tree_end_node"** %221, align 8
  %222 = bitcast %"class.std::__1::__tree_node_base"** %206 to i8**
  store i8* %211, i8** %222, align 8
  %223 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %36, align 8
  %224 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %223, i64 0, i32 0
  %225 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %224, align 8
  %226 = icmp eq %"class.std::__1::__tree_node_base"* %225, null
  br i1 %226, label %230, label %227

227:                                              ; preds = %210
  %228 = ptrtoint %"class.std::__1::__tree_node_base"* %225 to i64
  store i64 %228, i64* %55, align 8
  %229 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %206, align 8
  br label %230

230:                                              ; preds = %227, %210
  %231 = phi %"class.std::__1::__tree_node_base"* [ %219, %210 ], [ %229, %227 ]
  %232 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %232, %"class.std::__1::__tree_node_base"* %231) #8
  %233 = load i64, i64* %9, align 8
  %234 = add i64 %233, 1
  store i64 %234, i64* %9, align 8
  br label %235

235:                                              ; preds = %204, %230
  %236 = phi %"class.std::__1::__tree_node"* [ %218, %230 ], [ %208, %204 ]
  %237 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %236, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %238 = load %class.CPDF_ImageCacheEntry*, %class.CPDF_ImageCacheEntry** %237, align 8
  %239 = trunc i64 %172 to i32
  %240 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %238, i64 0, i32 0
  store i32 %239, i32* %240, align 8
  %241 = add nuw i64 %172, 1
  %242 = icmp eq i64 %241, %10
  br i1 %242, label %168, label %243

243:                                              ; preds = %235
  %244 = load %"struct.(anonymous namespace)::CacheInfo"*, %"struct.(anonymous namespace)::CacheInfo"** %12, align 8
  br label %170

245:                                              ; preds = %168, %42
  %246 = icmp ugt i64 %10, 15
  br i1 %246, label %247, label %252

247:                                              ; preds = %245
  %248 = bitcast %"class.std::__1::__tree_end_node"* %38 to %"class.std::__1::__tree_node"**
  %249 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 2, i32 0
  %250 = add i64 %10, -15
  %251 = load %"struct.(anonymous namespace)::CacheInfo"*, %"struct.(anonymous namespace)::CacheInfo"** %12, align 8
  br label %258

252:                                              ; preds = %295, %245
  %253 = phi i64 [ 0, %245 ], [ %250, %295 ]
  %254 = icmp ult i64 %253, %10
  br i1 %254, label %255, label %339

255:                                              ; preds = %252
  %256 = bitcast %"class.std::__1::__tree_end_node"* %38 to %"class.std::__1::__tree_node"**
  %257 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 2, i32 0
  br label %297

258:                                              ; preds = %295, %247
  %259 = phi i64 [ 0, %247 ], [ %260, %295 ]
  %260 = add nuw i64 %259, 1
  %261 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %251, i64 %259, i32 1
  %262 = load %class.CPDF_Stream*, %class.CPDF_Stream** %261, align 8
  %263 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %248, align 8
  %264 = icmp eq %"class.std::__1::__tree_node"* %263, null
  br i1 %264, label %295, label %265

265:                                              ; preds = %258, %265
  %266 = phi %"class.std::__1::__tree_end_node"* [ %276, %265 ], [ %38, %258 ]
  %267 = phi %"class.std::__1::__tree_node"* [ %277, %265 ], [ %263, %258 ]
  %268 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %267, i64 0, i32 1, i32 0, i32 0
  %269 = load %class.CPDF_Stream*, %class.CPDF_Stream** %268, align 8
  %270 = icmp ult %class.CPDF_Stream* %269, %262
  %271 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %267, i64 0, i32 0, i32 1
  %272 = bitcast %"class.std::__1::__tree_node_base"** %271 to %"class.std::__1::__tree_node"**
  %273 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %267, i64 0, i32 0, i32 0
  %274 = bitcast %"class.std::__1::__tree_node"* %267 to %"class.std::__1::__tree_node"**
  %275 = select i1 %270, %"class.std::__1::__tree_node"** %272, %"class.std::__1::__tree_node"** %274
  %276 = select i1 %270, %"class.std::__1::__tree_end_node"* %266, %"class.std::__1::__tree_end_node"* %273
  %277 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %275, align 8
  %278 = icmp eq %"class.std::__1::__tree_node"* %277, null
  br i1 %278, label %279, label %265

279:                                              ; preds = %265
  %280 = icmp eq %"class.std::__1::__tree_end_node"* %276, %38
  br i1 %280, label %295, label %281

281:                                              ; preds = %279
  %282 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %276, i64 4
  %283 = bitcast %"class.std::__1::__tree_end_node"* %282 to %class.CPDF_Stream**
  %284 = load %class.CPDF_Stream*, %class.CPDF_Stream** %283, align 8
  %285 = icmp ugt %class.CPDF_Stream* %284, %262
  br i1 %285, label %295, label %286

286:                                              ; preds = %281
  %287 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %276, i64 5
  %288 = bitcast %"class.std::__1::__tree_end_node"* %287 to %class.CPDF_ImageCacheEntry**
  %289 = load %class.CPDF_ImageCacheEntry*, %class.CPDF_ImageCacheEntry** %288, align 8
  %290 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %289, i64 0, i32 2
  %291 = load i32, i32* %290, align 8
  %292 = load i32, i32* %4, align 4
  %293 = sub i32 %292, %291
  store i32 %293, i32* %4, align 4
  %294 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIP11CPDF_StreamNS_10unique_ptrI20CPDF_ImageCacheEntryNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE5eraseENS_21__tree_const_iteratorIS9_PNS_11__tree_nodeIS9_PvEElEE(%"class.std::__1::__tree.87"* %249, %"class.std::__1::__tree_end_node"* %276) #8
  br label %295

295:                                              ; preds = %258, %279, %281, %286
  %296 = icmp eq i64 %260, %250
  br i1 %296, label %252, label %258

297:                                              ; preds = %337, %255
  %298 = phi i64 [ %253, %255 ], [ %302, %337 ]
  %299 = load i32, i32* %4, align 4
  %300 = icmp ugt i32 %299, %1
  br i1 %300, label %301, label %339

301:                                              ; preds = %297
  %302 = add i64 %298, 1
  %303 = load %"struct.(anonymous namespace)::CacheInfo"*, %"struct.(anonymous namespace)::CacheInfo"** %12, align 8
  %304 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %303, i64 %298, i32 1
  %305 = load %class.CPDF_Stream*, %class.CPDF_Stream** %304, align 8
  %306 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %256, align 8
  %307 = icmp eq %"class.std::__1::__tree_node"* %306, null
  br i1 %307, label %337, label %308

308:                                              ; preds = %301, %308
  %309 = phi %"class.std::__1::__tree_end_node"* [ %319, %308 ], [ %38, %301 ]
  %310 = phi %"class.std::__1::__tree_node"* [ %320, %308 ], [ %306, %301 ]
  %311 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %310, i64 0, i32 1, i32 0, i32 0
  %312 = load %class.CPDF_Stream*, %class.CPDF_Stream** %311, align 8
  %313 = icmp ult %class.CPDF_Stream* %312, %305
  %314 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %310, i64 0, i32 0, i32 1
  %315 = bitcast %"class.std::__1::__tree_node_base"** %314 to %"class.std::__1::__tree_node"**
  %316 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %310, i64 0, i32 0, i32 0
  %317 = bitcast %"class.std::__1::__tree_node"* %310 to %"class.std::__1::__tree_node"**
  %318 = select i1 %313, %"class.std::__1::__tree_node"** %315, %"class.std::__1::__tree_node"** %317
  %319 = select i1 %313, %"class.std::__1::__tree_end_node"* %309, %"class.std::__1::__tree_end_node"* %316
  %320 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %318, align 8
  %321 = icmp eq %"class.std::__1::__tree_node"* %320, null
  br i1 %321, label %322, label %308

322:                                              ; preds = %308
  %323 = icmp eq %"class.std::__1::__tree_end_node"* %319, %38
  br i1 %323, label %337, label %324

324:                                              ; preds = %322
  %325 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %319, i64 4
  %326 = bitcast %"class.std::__1::__tree_end_node"* %325 to %class.CPDF_Stream**
  %327 = load %class.CPDF_Stream*, %class.CPDF_Stream** %326, align 8
  %328 = icmp ugt %class.CPDF_Stream* %327, %305
  br i1 %328, label %337, label %329

329:                                              ; preds = %324
  %330 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %319, i64 5
  %331 = bitcast %"class.std::__1::__tree_end_node"* %330 to %class.CPDF_ImageCacheEntry**
  %332 = load %class.CPDF_ImageCacheEntry*, %class.CPDF_ImageCacheEntry** %331, align 8
  %333 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %332, i64 0, i32 2
  %334 = load i32, i32* %333, align 8
  %335 = sub i32 %299, %334
  store i32 %335, i32* %4, align 4
  %336 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIP11CPDF_StreamNS_10unique_ptrI20CPDF_ImageCacheEntryNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE5eraseENS_21__tree_const_iteratorIS9_PNS_11__tree_nodeIS9_PvEElEE(%"class.std::__1::__tree.87"* %257, %"class.std::__1::__tree_end_node"* %319) #8
  br label %337

337:                                              ; preds = %301, %322, %324, %329
  %338 = icmp eq i64 %302, %10
  br i1 %338, label %339, label %297

339:                                              ; preds = %297, %337, %252
  %340 = load %"struct.(anonymous namespace)::CacheInfo"*, %"struct.(anonymous namespace)::CacheInfo"** %12, align 8
  %341 = icmp eq %"struct.(anonymous namespace)::CacheInfo"* %340, null
  br i1 %341, label %346, label %342

342:                                              ; preds = %339
  %343 = ptrtoint %"struct.(anonymous namespace)::CacheInfo"* %340 to i64
  %344 = bitcast %"struct.(anonymous namespace)::CacheInfo"** %13 to i64*
  store i64 %343, i64* %344, align 8
  %345 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %340 to i8*
  tail call void @_ZdlPv(i8* %345) #9
  br label %346

346:                                              ; preds = %339, %342
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #8
  br label %347

347:                                              ; preds = %2, %346
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CPDF_PageRenderCache20ClearImageCacheEntryEP11CPDF_Stream(%class.CPDF_PageRenderCache*, %class.CPDF_Stream*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %39, label %7

7:                                                ; preds = %2, %7
  %8 = phi %"class.std::__1::__tree_end_node"* [ %18, %7 ], [ %3, %2 ]
  %9 = phi %"class.std::__1::__tree_node"* [ %19, %7 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load %class.CPDF_Stream*, %class.CPDF_Stream** %10, align 8
  %12 = icmp ult %class.CPDF_Stream* %11, %1
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::__tree_node_base"** %13 to %"class.std::__1::__tree_node"**
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node"* %9 to %"class.std::__1::__tree_node"**
  %17 = select i1 %12, %"class.std::__1::__tree_node"** %14, %"class.std::__1::__tree_node"** %16
  %18 = select i1 %12, %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"* %15
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %17, align 8
  %20 = icmp eq %"class.std::__1::__tree_node"* %19, null
  br i1 %20, label %21, label %7

21:                                               ; preds = %7
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %18, %3
  br i1 %22, label %39, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 4
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to %class.CPDF_Stream**
  %26 = load %class.CPDF_Stream*, %class.CPDF_Stream** %25, align 8
  %27 = icmp ugt %class.CPDF_Stream* %26, %1
  br i1 %27, label %39, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 5
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %class.CPDF_ImageCacheEntry**
  %31 = load %class.CPDF_ImageCacheEntry*, %class.CPDF_ImageCacheEntry** %30, align 8
  %32 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %31, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 5
  %35 = load i32, i32* %34, align 4
  %36 = sub i32 %35, %33
  store i32 %36, i32* %34, align 4
  %37 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 2, i32 0
  %38 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIP11CPDF_StreamNS_10unique_ptrI20CPDF_ImageCacheEntryNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE5eraseENS_21__tree_const_iteratorIS9_PNS_11__tree_nodeIS9_PvEElEE(%"class.std::__1::__tree.87"* %37, %"class.std::__1::__tree_end_node"* %18) #8
  br label %39

39:                                               ; preds = %23, %21, %2, %28
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN20CPDF_PageRenderCache20StartGetCachedBitmapERKN5fxcrt9RetainPtrI10CPDF_ImageEEPK17CPDF_RenderStatusb(%class.CPDF_PageRenderCache*, %"class.fxcrt::RetainPtr.100"* dereferenceable(8), %class.CPDF_RenderStatus*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.fxcrt::RetainPtr.100", %"class.fxcrt::RetainPtr.100"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %class.CPDF_Image*, %class.CPDF_Image** %5, align 8
  %7 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %6, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %8 = load %class.CPDF_Stream*, %class.CPDF_Stream** %7, align 8
  %9 = ptrtoint %class.CPDF_Stream* %8 to i64
  %10 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 2
  %11 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node"**
  %13 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node"* %13, null
  br i1 %14, label %48, label %15

15:                                               ; preds = %4, %15
  %16 = phi %"class.std::__1::__tree_end_node"* [ %26, %15 ], [ %11, %4 ]
  %17 = phi %"class.std::__1::__tree_node"* [ %27, %15 ], [ %13, %4 ]
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %17, i64 0, i32 1, i32 0, i32 0
  %19 = load %class.CPDF_Stream*, %class.CPDF_Stream** %18, align 8
  %20 = icmp ult %class.CPDF_Stream* %19, %8
  %21 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %17, i64 0, i32 0, i32 1
  %22 = bitcast %"class.std::__1::__tree_node_base"** %21 to %"class.std::__1::__tree_node"**
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %17, i64 0, i32 0, i32 0
  %24 = bitcast %"class.std::__1::__tree_node"* %17 to %"class.std::__1::__tree_node"**
  %25 = select i1 %20, %"class.std::__1::__tree_node"** %22, %"class.std::__1::__tree_node"** %24
  %26 = select i1 %20, %"class.std::__1::__tree_end_node"* %16, %"class.std::__1::__tree_end_node"* %23
  %27 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %25, align 8
  %28 = icmp eq %"class.std::__1::__tree_node"* %27, null
  br i1 %28, label %29, label %15

29:                                               ; preds = %15
  %30 = icmp eq %"class.std::__1::__tree_end_node"* %26, %11
  br i1 %30, label %48, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 4
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %class.CPDF_Stream**
  %34 = load %class.CPDF_Stream*, %class.CPDF_Stream** %33, align 8
  %35 = icmp ult %class.CPDF_Stream* %8, %34
  br i1 %35, label %48, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 6
  store i8 1, i8* %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 5
  %39 = bitcast %"class.std::__1::__tree_end_node"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 3, i32 1, i32 0
  %42 = bitcast %class.CPDF_ImageCacheEntry** %41 to i64*
  store i64 %40, i64* %42, align 8
  %43 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %44 = load %class.CPDF_ImageCacheEntry*, %class.CPDF_ImageCacheEntry** %43, align 8
  store %class.CPDF_ImageCacheEntry* null, %class.CPDF_ImageCacheEntry** %43, align 8
  %45 = icmp eq %class.CPDF_ImageCacheEntry* %44, null
  br i1 %45, label %65, label %46

46:                                               ; preds = %36
  tail call void @_ZN20CPDF_ImageCacheEntryD1Ev(%class.CPDF_ImageCacheEntry* nonnull %44) #8
  %47 = bitcast %class.CPDF_ImageCacheEntry* %44 to i8*
  tail call void @_ZdlPv(i8* %47) #9
  br label %65

48:                                               ; preds = %31, %29, %4
  %49 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 6
  store i8 0, i8* %49, align 8
  %50 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 1, i32 0
  %51 = load %class.CPDF_Page*, %class.CPDF_Page** %50, align 8
  %52 = tail call %class.CPDF_Document* @_ZNK9CPDF_Page11GetDocumentEv(%class.CPDF_Page* %51) #8
  %53 = tail call i8* @_Znwm(i64 64) #9
  %54 = bitcast i8* %53 to %class.CPDF_ImageCacheEntry*
  tail call void @_ZN20CPDF_ImageCacheEntryC1EP13CPDF_DocumentRKN5fxcrt9RetainPtrI10CPDF_ImageEE(%class.CPDF_ImageCacheEntry* nonnull %54, %class.CPDF_Document* %52, %"class.fxcrt::RetainPtr.100"* dereferenceable(8) %1) #8
  %55 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 3
  %56 = ptrtoint i8* %53 to i64
  %57 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 3, i32 1, i32 0
  %58 = bitcast %class.CPDF_ImageCacheEntry** %57 to i8**
  store i8* %53, i8** %58, align 8
  %59 = getelementptr inbounds %"class.fxcrt::MaybeOwned", %"class.fxcrt::MaybeOwned"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %class.CPDF_ImageCacheEntry*, %class.CPDF_ImageCacheEntry** %59, align 8
  %61 = bitcast %"class.fxcrt::MaybeOwned"* %55 to i64*
  store i64 %56, i64* %61, align 8
  %62 = icmp eq %class.CPDF_ImageCacheEntry* %60, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %48
  tail call void @_ZN20CPDF_ImageCacheEntryD1Ev(%class.CPDF_ImageCacheEntry* nonnull %60) #8
  %64 = bitcast %class.CPDF_ImageCacheEntry* %60 to i8*
  tail call void @_ZdlPv(i8* %64) #9
  br label %65

65:                                               ; preds = %63, %48, %46, %36
  %66 = phi i8* [ %37, %36 ], [ %37, %46 ], [ %49, %48 ], [ %49, %63 ]
  %67 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 3, i32 1, i32 0
  %68 = load %class.CPDF_ImageCacheEntry*, %class.CPDF_ImageCacheEntry** %67, align 8
  %69 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 1, i32 0
  %70 = load %class.CPDF_Page*, %class.CPDF_Page** %69, align 8
  %71 = getelementptr inbounds %class.CPDF_Page, %class.CPDF_Page* %70, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %72 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %71, align 8
  %73 = tail call zeroext i8 @_ZN20CPDF_ImageCacheEntry20StartGetCachedBitmapEPK15CPDF_DictionaryPK17CPDF_RenderStatusb(%class.CPDF_ImageCacheEntry* %68, %class.CPDF_Dictionary* %72, %class.CPDF_RenderStatus* %2, i1 zeroext %3) #8
  %74 = icmp eq i8 %73, 2
  br i1 %74, label %168, label %75

75:                                               ; preds = %65
  %76 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 4
  %77 = load i32, i32* %76, align 8
  %78 = add i32 %77, 1
  store i32 %78, i32* %76, align 8
  %79 = load i8, i8* %66, align 8, !range !5
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %81, label %159

81:                                               ; preds = %75
  %82 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %83 = bitcast %class.CPDF_ImageCacheEntry** %82 to i64*
  %84 = load i64, i64* %83, align 8
  store %class.CPDF_ImageCacheEntry* null, %class.CPDF_ImageCacheEntry** %82, align 8
  %85 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %12, align 8
  %86 = icmp eq %"class.std::__1::__tree_node"* %85, null
  br i1 %86, label %115, label %87

87:                                               ; preds = %81
  %88 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %89

89:                                               ; preds = %111, %87
  %90 = phi %"class.std::__1::__tree_node"* [ %114, %111 ], [ %85, %87 ]
  %91 = phi %"class.std::__1::__tree_node_base"** [ %113, %111 ], [ %88, %87 ]
  %92 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %90, i64 0, i32 1, i32 0, i32 0
  %93 = load %class.CPDF_Stream*, %class.CPDF_Stream** %92, align 8
  %94 = icmp ult %class.CPDF_Stream* %8, %93
  br i1 %94, label %95, label %101

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %90, i64 0, i32 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, null
  br i1 %98, label %99, label %111

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %90, i64 0, i32 0, i32 0
  br label %117

101:                                              ; preds = %89
  %102 = icmp ult %class.CPDF_Stream* %93, %8
  br i1 %102, label %103, label %109

103:                                              ; preds = %101
  %104 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %90, i64 0, i32 0, i32 1
  %105 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %104, align 8
  %106 = icmp eq %"class.std::__1::__tree_node_base"* %105, null
  br i1 %106, label %107, label %111

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %90, i64 0, i32 0, i32 0
  br label %117

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %90, i64 0, i32 0, i32 0
  br label %117

111:                                              ; preds = %103, %95
  %112 = phi %"class.std::__1::__tree_node_base"* [ %97, %95 ], [ %105, %103 ]
  %113 = phi %"class.std::__1::__tree_node_base"** [ %96, %95 ], [ %104, %103 ]
  %114 = bitcast %"class.std::__1::__tree_node_base"* %112 to %"class.std::__1::__tree_node"*
  br label %89

115:                                              ; preds = %81
  %116 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 0, i32 0
  br label %117

117:                                              ; preds = %115, %109, %107, %99
  %118 = phi %"class.std::__1::__tree_end_node"* [ %11, %115 ], [ %100, %99 ], [ %108, %107 ], [ %110, %109 ]
  %119 = phi %"class.std::__1::__tree_node_base"** [ %116, %115 ], [ %96, %99 ], [ %104, %107 ], [ %91, %109 ]
  %120 = bitcast %"class.std::__1::__tree_node_base"** %119 to %"class.std::__1::__tree_node"**
  %121 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %120, align 8
  %122 = icmp eq %"class.std::__1::__tree_node"* %121, null
  br i1 %122, label %123, label %150

123:                                              ; preds = %117
  %124 = tail call i8* @_Znwm(i64 48) #9, !noalias !6
  %125 = getelementptr inbounds i8, i8* %124, i64 32
  %126 = bitcast i8* %125 to i64*
  store i64 %9, i64* %126, align 8, !noalias !6
  %127 = getelementptr inbounds i8, i8* %124, i64 40
  %128 = bitcast i8* %127 to i64*
  store i64 0, i64* %128, align 8, !noalias !6
  %129 = bitcast i8* %124 to %"class.std::__1::__tree_node"*
  %130 = bitcast i8* %124 to %"class.std::__1::__tree_node_base"*
  %131 = getelementptr inbounds i8, i8* %124, i64 16
  %132 = bitcast i8* %131 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %124, i8 0, i64 16, i1 false) #8
  store %"class.std::__1::__tree_end_node"* %118, %"class.std::__1::__tree_end_node"** %132, align 8
  %133 = bitcast %"class.std::__1::__tree_node_base"** %119 to i8**
  store i8* %124, i8** %133, align 8
  %134 = getelementptr inbounds %"class.std::__1::map.86", %"class.std::__1::map.86"* %10, i64 0, i32 0, i32 0
  %135 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %134, align 8
  %136 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %135, i64 0, i32 0
  %137 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %136, align 8
  %138 = icmp eq %"class.std::__1::__tree_node_base"* %137, null
  br i1 %138, label %143, label %139

139:                                              ; preds = %123
  %140 = ptrtoint %"class.std::__1::__tree_node_base"* %137 to i64
  %141 = bitcast %"class.std::__1::map.86"* %10 to i64*
  store i64 %140, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %119, align 8
  br label %143

143:                                              ; preds = %139, %123
  %144 = phi %"class.std::__1::__tree_node_base"* [ %130, %123 ], [ %142, %139 ]
  %145 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %146 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %145, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %146, %"class.std::__1::__tree_node_base"* %144) #8
  %147 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %148 = load i64, i64* %147, align 8
  %149 = add i64 %148, 1
  store i64 %149, i64* %147, align 8
  br label %150

150:                                              ; preds = %117, %143
  %151 = phi %"class.std::__1::__tree_node"* [ %129, %143 ], [ %121, %117 ]
  %152 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %151, i64 0, i32 1, i32 0, i32 1
  %153 = getelementptr inbounds %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.97"* %152, i64 0, i32 0, i32 0, i32 0
  %154 = load %class.CPDF_ImageCacheEntry*, %class.CPDF_ImageCacheEntry** %153, align 8
  %155 = bitcast %"class.std::__1::unique_ptr.97"* %152 to i64*
  store i64 %84, i64* %155, align 8
  %156 = icmp eq %class.CPDF_ImageCacheEntry* %154, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %150
  tail call void @_ZN20CPDF_ImageCacheEntryD1Ev(%class.CPDF_ImageCacheEntry* nonnull %154) #8
  %158 = bitcast %class.CPDF_ImageCacheEntry* %154 to i8*
  tail call void @_ZdlPv(i8* %158) #9
  br label %159

159:                                              ; preds = %150, %157, %75
  %160 = icmp eq i8 %73, 0
  br i1 %160, label %161, label %168

161:                                              ; preds = %159
  %162 = load %class.CPDF_ImageCacheEntry*, %class.CPDF_ImageCacheEntry** %67, align 8
  %163 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %162, i64 0, i32 2
  %164 = load i32, i32* %163, align 8
  %165 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 5
  %166 = load i32, i32* %165, align 4
  %167 = add i32 %166, %164
  store i32 %167, i32* %165, align 4
  br label %168

168:                                              ; preds = %159, %161, %65
  %169 = phi i1 [ true, %65 ], [ false, %161 ], [ false, %159 ]
  ret i1 %169
}

declare %class.CPDF_Document* @_ZNK9CPDF_Page11GetDocumentEv(%class.CPDF_Page*) unnamed_addr #3

declare zeroext i8 @_ZN20CPDF_ImageCacheEntry20StartGetCachedBitmapEPK15CPDF_DictionaryPK17CPDF_RenderStatusb(%class.CPDF_ImageCacheEntry*, %class.CPDF_Dictionary*, %class.CPDF_RenderStatus*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN20CPDF_PageRenderCache8ContinueEP19PauseIndicatorIfaceP17CPDF_RenderStatus(%class.CPDF_PageRenderCache*, %class.PauseIndicatorIface*, %class.CPDF_RenderStatus*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 3, i32 1, i32 0
  %5 = load %class.CPDF_ImageCacheEntry*, %class.CPDF_ImageCacheEntry** %4, align 8
  %6 = tail call zeroext i1 @_ZN20CPDF_ImageCacheEntry8ContinueEP19PauseIndicatorIfaceP17CPDF_RenderStatus(%class.CPDF_ImageCacheEntry* %5, %class.PauseIndicatorIface* %1, %class.CPDF_RenderStatus* %2) #8
  br i1 %6, label %108, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 4
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, 1
  store i32 %10, i32* %8, align 8
  %11 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 6
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %101

14:                                               ; preds = %7
  %15 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %16 = bitcast %class.CPDF_ImageCacheEntry** %15 to i64*
  %17 = load i64, i64* %16, align 8
  store %class.CPDF_ImageCacheEntry* null, %class.CPDF_ImageCacheEntry** %15, align 8
  %18 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 2
  %19 = load %class.CPDF_ImageCacheEntry*, %class.CPDF_ImageCacheEntry** %4, align 8
  %20 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %19, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %21 = load %class.CPDF_Image*, %class.CPDF_Image** %20, align 8
  %22 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %21, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %23 = load %class.CPDF_Stream*, %class.CPDF_Stream** %22, align 8
  %24 = ptrtoint %class.CPDF_Stream* %23 to i64
  %25 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %26 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"class.std::__1::__tree_node"**
  %27 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node"* %27, null
  br i1 %28, label %57, label %29

29:                                               ; preds = %14
  %30 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %31

31:                                               ; preds = %53, %29
  %32 = phi %"class.std::__1::__tree_node"* [ %56, %53 ], [ %27, %29 ]
  %33 = phi %"class.std::__1::__tree_node_base"** [ %55, %53 ], [ %30, %29 ]
  %34 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %32, i64 0, i32 1, i32 0, i32 0
  %35 = load %class.CPDF_Stream*, %class.CPDF_Stream** %34, align 8
  %36 = icmp ult %class.CPDF_Stream* %23, %35
  br i1 %36, label %37, label %43

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %32, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %38, align 8
  %40 = icmp eq %"class.std::__1::__tree_node_base"* %39, null
  br i1 %40, label %41, label %53

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %32, i64 0, i32 0, i32 0
  br label %59

43:                                               ; preds = %31
  %44 = icmp ult %class.CPDF_Stream* %35, %23
  br i1 %44, label %45, label %51

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %32, i64 0, i32 0, i32 1
  %47 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %46, align 8
  %48 = icmp eq %"class.std::__1::__tree_node_base"* %47, null
  br i1 %48, label %49, label %53

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %32, i64 0, i32 0, i32 0
  br label %59

51:                                               ; preds = %43
  %52 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %32, i64 0, i32 0, i32 0
  br label %59

53:                                               ; preds = %45, %37
  %54 = phi %"class.std::__1::__tree_node_base"* [ %39, %37 ], [ %47, %45 ]
  %55 = phi %"class.std::__1::__tree_node_base"** [ %38, %37 ], [ %46, %45 ]
  %56 = bitcast %"class.std::__1::__tree_node_base"* %54 to %"class.std::__1::__tree_node"*
  br label %31

57:                                               ; preds = %14
  %58 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 0, i32 0
  br label %59

59:                                               ; preds = %57, %51, %49, %41
  %60 = phi %"class.std::__1::__tree_end_node"* [ %25, %57 ], [ %42, %41 ], [ %50, %49 ], [ %52, %51 ]
  %61 = phi %"class.std::__1::__tree_node_base"** [ %58, %57 ], [ %38, %41 ], [ %46, %49 ], [ %33, %51 ]
  %62 = bitcast %"class.std::__1::__tree_node_base"** %61 to %"class.std::__1::__tree_node"**
  %63 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %62, align 8
  %64 = icmp eq %"class.std::__1::__tree_node"* %63, null
  br i1 %64, label %65, label %92

65:                                               ; preds = %59
  %66 = tail call i8* @_Znwm(i64 48) #9, !noalias !9
  %67 = getelementptr inbounds i8, i8* %66, i64 32
  %68 = bitcast i8* %67 to i64*
  store i64 %24, i64* %68, align 8, !noalias !9
  %69 = getelementptr inbounds i8, i8* %66, i64 40
  %70 = bitcast i8* %69 to i64*
  store i64 0, i64* %70, align 8, !noalias !9
  %71 = bitcast i8* %66 to %"class.std::__1::__tree_node"*
  %72 = bitcast i8* %66 to %"class.std::__1::__tree_node_base"*
  %73 = getelementptr inbounds i8, i8* %66, i64 16
  %74 = bitcast i8* %73 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 0, i64 16, i1 false) #8
  store %"class.std::__1::__tree_end_node"* %60, %"class.std::__1::__tree_end_node"** %74, align 8
  %75 = bitcast %"class.std::__1::__tree_node_base"** %61 to i8**
  store i8* %66, i8** %75, align 8
  %76 = getelementptr inbounds %"class.std::__1::map.86", %"class.std::__1::map.86"* %18, i64 0, i32 0, i32 0
  %77 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %77, i64 0, i32 0
  %79 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %78, align 8
  %80 = icmp eq %"class.std::__1::__tree_node_base"* %79, null
  br i1 %80, label %85, label %81

81:                                               ; preds = %65
  %82 = ptrtoint %"class.std::__1::__tree_node_base"* %79 to i64
  %83 = bitcast %"class.std::__1::map.86"* %18 to i64*
  store i64 %82, i64* %83, align 8
  %84 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  br label %85

85:                                               ; preds = %81, %65
  %86 = phi %"class.std::__1::__tree_node_base"* [ %72, %65 ], [ %84, %81 ]
  %87 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %88 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %87, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %88, %"class.std::__1::__tree_node_base"* %86) #8
  %89 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = add i64 %90, 1
  store i64 %91, i64* %89, align 8
  br label %92

92:                                               ; preds = %59, %85
  %93 = phi %"class.std::__1::__tree_node"* [ %71, %85 ], [ %63, %59 ]
  %94 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %93, i64 0, i32 1, i32 0, i32 1
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.97"* %94, i64 0, i32 0, i32 0, i32 0
  %96 = load %class.CPDF_ImageCacheEntry*, %class.CPDF_ImageCacheEntry** %95, align 8
  %97 = bitcast %"class.std::__1::unique_ptr.97"* %94 to i64*
  store i64 %17, i64* %97, align 8
  %98 = icmp eq %class.CPDF_ImageCacheEntry* %96, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %92
  tail call void @_ZN20CPDF_ImageCacheEntryD1Ev(%class.CPDF_ImageCacheEntry* nonnull %96) #8
  %100 = bitcast %class.CPDF_ImageCacheEntry* %96 to i8*
  tail call void @_ZdlPv(i8* %100) #9
  br label %101

101:                                              ; preds = %92, %99, %7
  %102 = load %class.CPDF_ImageCacheEntry*, %class.CPDF_ImageCacheEntry** %4, align 8
  %103 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %102, i64 0, i32 2
  %104 = load i32, i32* %103, align 8
  %105 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 5
  %106 = load i32, i32* %105, align 4
  %107 = add i32 %106, %104
  store i32 %107, i32* %105, align 4
  br label %108

108:                                              ; preds = %3, %101
  %109 = phi i1 [ false, %101 ], [ true, %3 ]
  ret i1 %109
}

declare zeroext i1 @_ZN20CPDF_ImageCacheEntry8ContinueEP19PauseIndicatorIfaceP17CPDF_RenderStatus(%class.CPDF_ImageCacheEntry*, %class.PauseIndicatorIface*, %class.CPDF_RenderStatus*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20CPDF_PageRenderCache19ResetBitmapForImageERKN5fxcrt9RetainPtrI10CPDF_ImageEE(%class.CPDF_PageRenderCache*, %"class.fxcrt::RetainPtr.100"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.fxcrt::RetainPtr.100", %"class.fxcrt::RetainPtr.100"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_Image*, %class.CPDF_Image** %3, align 8
  %5 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %4, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %6 = load %class.CPDF_Stream*, %class.CPDF_Stream** %5, align 8
  %7 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  %10 = icmp eq %"class.std::__1::__tree_node"* %9, null
  br i1 %10, label %44, label %11

11:                                               ; preds = %2, %11
  %12 = phi %"class.std::__1::__tree_end_node"* [ %22, %11 ], [ %7, %2 ]
  %13 = phi %"class.std::__1::__tree_node"* [ %23, %11 ], [ %9, %2 ]
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 1, i32 0, i32 0
  %15 = load %class.CPDF_Stream*, %class.CPDF_Stream** %14, align 8
  %16 = icmp ult %class.CPDF_Stream* %15, %6
  %17 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 1
  %18 = bitcast %"class.std::__1::__tree_node_base"** %17 to %"class.std::__1::__tree_node"**
  %19 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  %20 = bitcast %"class.std::__1::__tree_node"* %13 to %"class.std::__1::__tree_node"**
  %21 = select i1 %16, %"class.std::__1::__tree_node"** %18, %"class.std::__1::__tree_node"** %20
  %22 = select i1 %16, %"class.std::__1::__tree_end_node"* %12, %"class.std::__1::__tree_end_node"* %19
  %23 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %21, align 8
  %24 = icmp eq %"class.std::__1::__tree_node"* %23, null
  br i1 %24, label %25, label %11

25:                                               ; preds = %11
  %26 = icmp eq %"class.std::__1::__tree_end_node"* %22, %7
  br i1 %26, label %44, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 4
  %29 = bitcast %"class.std::__1::__tree_end_node"* %28 to %class.CPDF_Stream**
  %30 = load %class.CPDF_Stream*, %class.CPDF_Stream** %29, align 8
  %31 = icmp ult %class.CPDF_Stream* %6, %30
  br i1 %31, label %44, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 5
  %34 = bitcast %"class.std::__1::__tree_end_node"* %33 to %class.CPDF_ImageCacheEntry**
  %35 = load %class.CPDF_ImageCacheEntry*, %class.CPDF_ImageCacheEntry** %34, align 8
  %36 = getelementptr inbounds %class.CPDF_ImageCacheEntry, %class.CPDF_ImageCacheEntry* %35, i64 0, i32 2
  %37 = load i32, i32* %36, align 8
  %38 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %0, i64 0, i32 5
  %39 = load i32, i32* %38, align 4
  %40 = sub i32 %39, %37
  store i32 %40, i32* %38, align 4
  tail call void @_ZN20CPDF_ImageCacheEntry5ResetEv(%class.CPDF_ImageCacheEntry* %35) #8
  %41 = load i32, i32* %36, align 8
  %42 = load i32, i32* %38, align 4
  %43 = add i32 %42, %41
  store i32 %43, i32* %38, align 4
  br label %44

44:                                               ; preds = %27, %25, %2, %32
  ret void
}

declare void @_ZN20CPDF_ImageCacheEntry5ResetEv(%class.CPDF_ImageCacheEntry*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN20CPDF_ImageCacheEntryD1Ev(%class.CPDF_ImageCacheEntry*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIP11CPDF_StreamNS_10unique_ptrI20CPDF_ImageCacheEntryNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.87"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %17, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIP11CPDF_StreamNS_10unique_ptrI20CPDF_ImageCacheEntryNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.87"* %0, %"class.std::__1::__tree_node"* %6) #8
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIP11CPDF_StreamNS_10unique_ptrI20CPDF_ImageCacheEntryNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(%"class.std::__1::__tree.87"* %0, %"class.std::__1::__tree_node"* %9) #8
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %class.CPDF_ImageCacheEntry*, %class.CPDF_ImageCacheEntry** %10, align 8
  store %class.CPDF_ImageCacheEntry* null, %class.CPDF_ImageCacheEntry** %10, align 8
  %12 = icmp eq %class.CPDF_ImageCacheEntry* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %4
  tail call void @_ZN20CPDF_ImageCacheEntryD1Ev(%class.CPDF_ImageCacheEntry* nonnull %11) #8
  %14 = bitcast %class.CPDF_ImageCacheEntry* %11 to i8*
  tail call void @_ZdlPv(i8* %14) #9
  br label %15

15:                                               ; preds = %4, %13
  %16 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %16) #9
  br label %17

17:                                               ; preds = %2, %15
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__16__sortIRNS_6__lessIN12_GLOBAL__N_19CacheInfoES3_EEPS3_EEvT0_S7_T_(%"struct.(anonymous namespace)::CacheInfo"*, %"struct.(anonymous namespace)::CacheInfo"*) unnamed_addr #0 {
  %3 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %4 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %5 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %6 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %7 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %8 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %9 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %10 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %11 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %12 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %13 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %14 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %15 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %16 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %17 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %18 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %19 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %20 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %21 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %22 = alloca [12 x i8], align 4
  %23 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %24 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %25 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %26 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %27 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %28 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %29 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %30 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %31 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %32 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %33 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %8 to i8*
  %34 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %9 to i8*
  %35 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %11 to i8*
  %36 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %12 to i8*
  %37 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %10 to i8*
  %38 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %13 to i8*
  %39 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %14 to i8*
  %40 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %15 to i8*
  %41 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %16 to i8*
  %42 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %5 to i8*
  %43 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %3 to i8*
  %44 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %4 to i8*
  %45 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %6 to i8*
  %46 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %7 to i8*
  br label %47

47:                                               ; preds = %408, %2
  %48 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %1, %2 ], [ %388, %408 ]
  %49 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %0, %2 ], [ %64, %408 ]
  %50 = ptrtoint %"struct.(anonymous namespace)::CacheInfo"* %48 to i64
  %51 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %48, i64 -1
  %52 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %51, i64 0, i32 0
  %53 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %51 to i8*
  %54 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %51 to i8*
  %55 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %51 to i8*
  %56 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %51, i64 0, i32 0
  %57 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %51 to i8*
  %58 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %51, i64 0, i32 0
  %59 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %51 to i8*
  %60 = ptrtoint %"struct.(anonymous namespace)::CacheInfo"* %48 to i64
  br label %61

61:                                               ; preds = %417, %47
  %62 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %49, %47 ], [ %418, %417 ]
  br label %63

63:                                               ; preds = %339, %61
  %64 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %62, %61 ], [ %328, %339 ]
  %65 = ptrtoint %"struct.(anonymous namespace)::CacheInfo"* %64 to i64
  %66 = sub i64 %50, %65
  %67 = ashr exact i64 %66, 4
  switch i64 %67, label %157 [
    i64 0, label %421
    i64 1, label %421
    i64 2, label %68
    i64 3, label %79
    i64 4, label %116
    i64 5, label %121
  ]

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %48, i64 -1
  %70 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %69, i64 0, i32 0
  %71 = load i32, i32* %70, align 8
  %72 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %64, i64 0, i32 0
  %73 = load i32, i32* %72, align 8
  %74 = icmp ult i32 %71, %73
  br i1 %74, label %75, label %421

75:                                               ; preds = %68
  %76 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76)
  %77 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %76, i8* align 8 %77, i64 16, i1 false) #8
  %78 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* nonnull align 8 %76, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76)
  br label %421

79:                                               ; preds = %63
  %80 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %64, i64 1
  %81 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %48, i64 -1
  %82 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %80, i64 0, i32 0
  %83 = load i32, i32* %82, align 8
  %84 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %64, i64 0, i32 0
  %85 = load i32, i32* %84, align 8
  %86 = icmp ult i32 %83, %85
  %87 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %81, i64 0, i32 0
  %88 = load i32, i32* %87, align 8
  %89 = icmp ult i32 %88, %83
  br i1 %86, label %101, label %90

90:                                               ; preds = %79
  br i1 %89, label %91, label %421

91:                                               ; preds = %90
  %92 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92)
  %93 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %92, i8* align 8 %93, i64 16, i1 false) #8
  %94 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %94, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* nonnull align 8 %92, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92)
  %95 = load i32, i32* %82, align 8
  %96 = load i32, i32* %84, align 8
  %97 = icmp ult i32 %95, %96
  br i1 %97, label %98, label %421

98:                                               ; preds = %91
  %99 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %99)
  %100 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %99, i8* align 8 %100, i64 16, i1 false) #8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %93, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* nonnull align 8 %99, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %99)
  br label %421

101:                                              ; preds = %79
  br i1 %89, label %102, label %106

102:                                              ; preds = %101
  %103 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %103)
  %104 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %103, i8* align 8 %104, i64 16, i1 false) #8
  %105 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* align 8 %105, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* nonnull align 8 %103, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %103)
  br label %421

106:                                              ; preds = %101
  %107 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %107)
  %108 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %107, i8* align 8 %108, i64 16, i1 false) #8
  %109 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %80 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %108, i8* align 8 %109, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* nonnull align 8 %107, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %107)
  %110 = load i32, i32* %87, align 8
  %111 = load i32, i32* %82, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %113, label %421

113:                                              ; preds = %106
  %114 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %114)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %114, i8* align 8 %109, i64 16, i1 false) #8
  %115 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %115, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* nonnull align 8 %114, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %114)
  br label %421

116:                                              ; preds = %63
  %117 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %64, i64 1
  %118 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %64, i64 2
  %119 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %48, i64 -1
  %120 = tail call fastcc i32 @_ZNSt3__17__sort4IRNS_6__lessIN12_GLOBAL__N_19CacheInfoES3_EEPS3_EEjT0_S7_S7_S7_T_(%"struct.(anonymous namespace)::CacheInfo"* %64, %"struct.(anonymous namespace)::CacheInfo"* %117, %"struct.(anonymous namespace)::CacheInfo"* %118, %"struct.(anonymous namespace)::CacheInfo"* %119)
  br label %421

121:                                              ; preds = %63
  %122 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %64, i64 1
  %123 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %64, i64 2
  %124 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %64, i64 3
  %125 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %48, i64 -1
  %126 = tail call fastcc i32 @_ZNSt3__17__sort4IRNS_6__lessIN12_GLOBAL__N_19CacheInfoES3_EEPS3_EEjT0_S7_S7_S7_T_(%"struct.(anonymous namespace)::CacheInfo"* %64, %"struct.(anonymous namespace)::CacheInfo"* %122, %"struct.(anonymous namespace)::CacheInfo"* %123, %"struct.(anonymous namespace)::CacheInfo"* %124) #8
  %127 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %125, i64 0, i32 0
  %128 = load i32, i32* %127, align 8
  %129 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %124, i64 0, i32 0
  %130 = load i32, i32* %129, align 8
  %131 = icmp ult i32 %128, %130
  br i1 %131, label %132, label %421

132:                                              ; preds = %121
  %133 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %133)
  %134 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %124 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %133, i8* align 8 %134, i64 16, i1 false) #8
  %135 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %125 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* align 8 %135, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %135, i8* nonnull align 8 %133, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %133)
  %136 = load i32, i32* %129, align 8
  %137 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %123, i64 0, i32 0
  %138 = load i32, i32* %137, align 8
  %139 = icmp ult i32 %136, %138
  br i1 %139, label %140, label %421

140:                                              ; preds = %132
  %141 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %141)
  %142 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %123 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %141, i8* align 8 %142, i64 16, i1 false) #8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %142, i8* align 8 %134, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* nonnull align 8 %141, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %141)
  %143 = load i32, i32* %137, align 8
  %144 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %122, i64 0, i32 0
  %145 = load i32, i32* %144, align 8
  %146 = icmp ult i32 %143, %145
  br i1 %146, label %147, label %421

147:                                              ; preds = %140
  %148 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %148)
  %149 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %122 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %148, i8* align 8 %149, i64 16, i1 false) #8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %149, i8* align 8 %142, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %142, i8* nonnull align 8 %148, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %148)
  %150 = load i32, i32* %144, align 8
  %151 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %64, i64 0, i32 0
  %152 = load i32, i32* %151, align 8
  %153 = icmp ult i32 %150, %152
  br i1 %153, label %154, label %421

154:                                              ; preds = %147
  %155 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %155)
  %156 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %155, i8* align 8 %156, i64 16, i1 false) #8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %156, i8* align 8 %149, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %149, i8* nonnull align 8 %155, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %155)
  br label %421

157:                                              ; preds = %63
  %158 = icmp slt i64 %66, 496
  br i1 %158, label %159, label %229

159:                                              ; preds = %157
  %160 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %64, i64 2
  %161 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %64, i64 1
  %162 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %161, i64 0, i32 0
  %163 = load i32, i32* %162, align 8
  %164 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %64, i64 0, i32 0
  %165 = load i32, i32* %164, align 8
  %166 = icmp ult i32 %163, %165
  %167 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %160, i64 0, i32 0
  %168 = load i32, i32* %167, align 8
  %169 = icmp ult i32 %168, %163
  br i1 %166, label %180, label %170

170:                                              ; preds = %159
  br i1 %169, label %171, label %194

171:                                              ; preds = %170
  %172 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %172)
  %173 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %161 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %172, i8* align 8 %173, i64 16, i1 false) #8
  %174 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %160 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %173, i8* align 8 %174, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %174, i8* nonnull align 8 %172, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %172)
  %175 = load i32, i32* %162, align 8
  %176 = icmp ult i32 %175, %165
  br i1 %176, label %177, label %194

177:                                              ; preds = %171
  %178 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %178)
  %179 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %178, i8* align 8 %179, i64 16, i1 false) #8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %179, i8* align 8 %173, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %173, i8* nonnull align 8 %178, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %178)
  br label %194

180:                                              ; preds = %159
  br i1 %169, label %181, label %185

181:                                              ; preds = %180
  %182 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %182)
  %183 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %182, i8* align 8 %183, i64 16, i1 false) #8
  %184 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %160 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %183, i8* align 8 %184, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %184, i8* nonnull align 8 %182, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %182)
  br label %194

185:                                              ; preds = %180
  %186 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %186)
  %187 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %186, i8* align 8 %187, i64 16, i1 false) #8
  %188 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %161 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %187, i8* align 8 %188, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %188, i8* nonnull align 8 %186, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %186)
  %189 = load i32, i32* %162, align 8
  %190 = icmp ult i32 %168, %189
  br i1 %190, label %191, label %194

191:                                              ; preds = %185
  %192 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %192)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %192, i8* align 8 %188, i64 16, i1 false) #8
  %193 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %160 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %188, i8* align 8 %193, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %193, i8* nonnull align 8 %192, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %192)
  br label %194

194:                                              ; preds = %191, %185, %181, %177, %171, %170
  %195 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %64, i64 3
  %196 = icmp eq %"struct.(anonymous namespace)::CacheInfo"* %195, %48
  br i1 %196, label %421, label %197

197:                                              ; preds = %194
  %198 = getelementptr inbounds [12 x i8], [12 x i8]* %22, i64 0, i64 0
  br label %199

199:                                              ; preds = %226, %197
  %200 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %195, %197 ], [ %227, %226 ]
  %201 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %160, %197 ], [ %200, %226 ]
  %202 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %200, i64 0, i32 0
  %203 = load i32, i32* %202, align 8
  %204 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %201, i64 0, i32 0
  %205 = load i32, i32* %204, align 8
  %206 = icmp ult i32 %203, %205
  br i1 %206, label %207, label %226

207:                                              ; preds = %199
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %198)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %198, i8* align 4 getelementptr inbounds ({ i32, [4 x i8], %class.CPDF_Stream* }, { i32, [4 x i8], %class.CPDF_Stream* }* @__const._ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN12_GLOBAL__N_19CacheInfoES3_EEPS3_EEbT0_S7_T_.__t, i64 0, i32 1, i64 0), i64 12, i1 false) #8
  %208 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %200 to i8*
  %209 = getelementptr inbounds i8, i8* %208, i64 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %198, i8* align 4 %209, i64 12, i1 false) #8
  br label %210

210:                                              ; preds = %216, %207
  %211 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %200, %207 ], [ %212, %216 ]
  %212 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %201, %207 ], [ %217, %216 ]
  %213 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %211 to i8*
  %214 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %212 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %213, i8* align 8 %214, i64 16, i1 false) #8
  %215 = icmp eq %"struct.(anonymous namespace)::CacheInfo"* %212, %64
  br i1 %215, label %221, label %216

216:                                              ; preds = %210
  %217 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %212, i64 -1
  %218 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %217, i64 0, i32 0
  %219 = load i32, i32* %218, align 8
  %220 = icmp ult i32 %203, %219
  br i1 %220, label %210, label %221

221:                                              ; preds = %210, %216
  %222 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %212, %216 ], [ %64, %210 ]
  %223 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %222 to i8*
  %224 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %222, i64 0, i32 0
  store i32 %203, i32* %224, align 8
  %225 = getelementptr inbounds i8, i8* %223, i64 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %225, i8* nonnull align 4 %198, i64 12, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %198)
  br label %226

226:                                              ; preds = %221, %199
  %227 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %200, i64 1
  %228 = icmp eq %"struct.(anonymous namespace)::CacheInfo"* %227, %48
  br i1 %228, label %421, label %199

229:                                              ; preds = %157
  %230 = icmp sgt i64 %66, 15984
  %231 = sdiv i64 %67, 2
  %232 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %64, i64 %231
  br i1 %230, label %233, label %266

233:                                              ; preds = %229
  %234 = sdiv i64 %67, 4
  %235 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %64, i64 %234
  %236 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %232, i64 %234
  %237 = tail call fastcc i32 @_ZNSt3__17__sort4IRNS_6__lessIN12_GLOBAL__N_19CacheInfoES3_EEPS3_EEjT0_S7_S7_S7_T_(%"struct.(anonymous namespace)::CacheInfo"* %64, %"struct.(anonymous namespace)::CacheInfo"* %235, %"struct.(anonymous namespace)::CacheInfo"* %232, %"struct.(anonymous namespace)::CacheInfo"* %236) #8
  %238 = load i32, i32* %56, align 8
  %239 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %236, i64 0, i32 0
  %240 = load i32, i32* %239, align 8
  %241 = icmp ult i32 %238, %240
  br i1 %241, label %242, label %292

242:                                              ; preds = %233
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38)
  %243 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %236 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* align 8 %243, i64 16, i1 false) #8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %243, i8* align 8 %57, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* nonnull align 8 %38, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38)
  %244 = add i32 %237, 1
  %245 = load i32, i32* %239, align 8
  %246 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %232, i64 0, i32 0
  %247 = load i32, i32* %246, align 8
  %248 = icmp ult i32 %245, %247
  br i1 %248, label %249, label %292

249:                                              ; preds = %242
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39)
  %250 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %232 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* align 8 %250, i64 16, i1 false) #8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %250, i8* align 8 %243, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %243, i8* nonnull align 8 %39, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39)
  %251 = add i32 %237, 2
  %252 = load i32, i32* %246, align 8
  %253 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %235, i64 0, i32 0
  %254 = load i32, i32* %253, align 8
  %255 = icmp ult i32 %252, %254
  br i1 %255, label %256, label %292

256:                                              ; preds = %249
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40)
  %257 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %235 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %40, i8* align 8 %257, i64 16, i1 false) #8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %257, i8* align 8 %250, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %250, i8* nonnull align 8 %40, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40)
  %258 = add i32 %237, 3
  %259 = load i32, i32* %253, align 8
  %260 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %64, i64 0, i32 0
  %261 = load i32, i32* %260, align 8
  %262 = icmp ult i32 %259, %261
  br i1 %262, label %263, label %292

263:                                              ; preds = %256
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41)
  %264 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %41, i8* align 8 %264, i64 16, i1 false) #8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %264, i8* align 8 %257, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %257, i8* nonnull align 8 %41, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41)
  %265 = add i32 %237, 4
  br label %292

266:                                              ; preds = %229
  %267 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %232, i64 0, i32 0
  %268 = load i32, i32* %267, align 8
  %269 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %64, i64 0, i32 0
  %270 = load i32, i32* %269, align 8
  %271 = icmp ult i32 %268, %270
  %272 = load i32, i32* %52, align 8
  %273 = icmp ult i32 %272, %268
  br i1 %271, label %282, label %274

274:                                              ; preds = %266
  br i1 %273, label %275, label %292

275:                                              ; preds = %274
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33)
  %276 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %232 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* align 8 %276, i64 16, i1 false) #8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %276, i8* align 8 %53, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* nonnull align 8 %33, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33)
  %277 = load i32, i32* %267, align 8
  %278 = load i32, i32* %269, align 8
  %279 = icmp ult i32 %277, %278
  br i1 %279, label %280, label %292

280:                                              ; preds = %275
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34)
  %281 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* align 8 %281, i64 16, i1 false) #8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %281, i8* align 8 %276, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %276, i8* nonnull align 8 %34, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34)
  br label %292

282:                                              ; preds = %266
  br i1 %273, label %283, label %285

283:                                              ; preds = %282
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37)
  %284 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* align 8 %284, i64 16, i1 false) #8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %284, i8* align 8 %55, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* nonnull align 8 %37, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37)
  br label %292

285:                                              ; preds = %282
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35)
  %286 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %35, i8* align 8 %286, i64 16, i1 false) #8
  %287 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %232 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %286, i8* align 8 %287, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %287, i8* nonnull align 8 %35, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35)
  %288 = load i32, i32* %52, align 8
  %289 = load i32, i32* %267, align 8
  %290 = icmp ult i32 %288, %289
  br i1 %290, label %291, label %292

291:                                              ; preds = %285
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* align 8 %287, i64 16, i1 false) #8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %287, i8* align 8 %54, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* nonnull align 8 %36, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36)
  br label %292

292:                                              ; preds = %291, %285, %283, %280, %275, %274, %263, %256, %249, %242, %233
  %293 = phi i32 [ %265, %263 ], [ %258, %256 ], [ %251, %249 ], [ %244, %242 ], [ %237, %233 ], [ 1, %283 ], [ 0, %274 ], [ 2, %280 ], [ 1, %275 ], [ 2, %291 ], [ 1, %285 ]
  %294 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %64, i64 0, i32 0
  %295 = load i32, i32* %294, align 8
  %296 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %232, i64 0, i32 0
  %297 = load i32, i32* %296, align 8
  %298 = icmp ult i32 %295, %297
  br i1 %298, label %352, label %299

299:                                              ; preds = %292, %344
  %300 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %301, %344 ], [ %51, %292 ]
  %301 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %300, i64 -1
  %302 = icmp eq %"struct.(anonymous namespace)::CacheInfo"* %64, %301
  br i1 %302, label %303, label %344

303:                                              ; preds = %299
  %304 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %64, i64 1
  %305 = load i32, i32* %58, align 8
  %306 = icmp ult i32 %295, %305
  br i1 %306, label %320, label %307

307:                                              ; preds = %303
  %308 = icmp eq %"struct.(anonymous namespace)::CacheInfo"* %304, %51
  br i1 %308, label %421, label %309

309:                                              ; preds = %307, %317
  %310 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %318, %317 ], [ %304, %307 ]
  %311 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %310, i64 0, i32 0
  %312 = load i32, i32* %311, align 8
  %313 = icmp ult i32 %295, %312
  br i1 %313, label %314, label %317

314:                                              ; preds = %309
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43)
  %315 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %310 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %43, i8* align 8 %315, i64 16, i1 false) #8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %315, i8* align 8 %59, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* nonnull align 8 %43, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43)
  %316 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %310, i64 1
  br label %320

317:                                              ; preds = %309
  %318 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %310, i64 1
  %319 = icmp eq %"struct.(anonymous namespace)::CacheInfo"* %318, %51
  br i1 %319, label %421, label %309

320:                                              ; preds = %314, %303
  %321 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %304, %303 ], [ %316, %314 ]
  %322 = icmp eq %"struct.(anonymous namespace)::CacheInfo"* %321, %51
  br i1 %322, label %421, label %323

323:                                              ; preds = %320, %341
  %324 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %332, %341 ], [ %321, %320 ]
  %325 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %335, %341 ], [ %51, %320 ]
  %326 = load i32, i32* %294, align 8
  br label %327

327:                                              ; preds = %327, %323
  %328 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %324, %323 ], [ %332, %327 ]
  %329 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %328, i64 0, i32 0
  %330 = load i32, i32* %329, align 8
  %331 = icmp ult i32 %326, %330
  %332 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %328, i64 1
  br i1 %331, label %333, label %327

333:                                              ; preds = %327, %333
  %334 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %335, %333 ], [ %325, %327 ]
  %335 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %334, i64 -1
  %336 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %335, i64 0, i32 0
  %337 = load i32, i32* %336, align 8
  %338 = icmp ult i32 %326, %337
  br i1 %338, label %333, label %339

339:                                              ; preds = %333
  %340 = icmp ult %"struct.(anonymous namespace)::CacheInfo"* %328, %335
  br i1 %340, label %341, label %63

341:                                              ; preds = %339
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44)
  %342 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %328 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %342, i64 16, i1 false) #8
  %343 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %335 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %342, i8* align 8 %343, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %343, i8* nonnull align 8 %44, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44)
  br label %323

344:                                              ; preds = %299
  %345 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %301, i64 0, i32 0
  %346 = load i32, i32* %345, align 8
  %347 = icmp ult i32 %346, %297
  br i1 %347, label %348, label %299

348:                                              ; preds = %344
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42)
  %349 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %42, i8* align 8 %349, i64 16, i1 false) #8
  %350 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %301 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %349, i8* align 8 %350, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %350, i8* nonnull align 8 %42, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42)
  %351 = add i32 %293, 1
  br label %352

352:                                              ; preds = %292, %348
  %353 = phi i32 [ %351, %348 ], [ %293, %292 ]
  %354 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %301, %348 ], [ %51, %292 ]
  %355 = ptrtoint %"struct.(anonymous namespace)::CacheInfo"* %64 to i64
  %356 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %64, i64 1
  %357 = icmp ult %"struct.(anonymous namespace)::CacheInfo"* %356, %354
  br i1 %357, label %358, label %385

358:                                              ; preds = %352, %379
  %359 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %384, %379 ], [ %232, %352 ]
  %360 = phi i32 [ %382, %379 ], [ %353, %352 ]
  %361 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %370, %379 ], [ %356, %352 ]
  %362 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %373, %379 ], [ %354, %352 ]
  %363 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %359, i64 0, i32 0
  %364 = load i32, i32* %363, align 8
  br label %365

365:                                              ; preds = %365, %358
  %366 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %361, %358 ], [ %370, %365 ]
  %367 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %366, i64 0, i32 0
  %368 = load i32, i32* %367, align 8
  %369 = icmp ult i32 %368, %364
  %370 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %366, i64 1
  br i1 %369, label %365, label %371

371:                                              ; preds = %365, %371
  %372 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %373, %371 ], [ %362, %365 ]
  %373 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %372, i64 -1
  %374 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %373, i64 0, i32 0
  %375 = load i32, i32* %374, align 8
  %376 = icmp ult i32 %375, %364
  br i1 %376, label %377, label %371

377:                                              ; preds = %371
  %378 = icmp ugt %"struct.(anonymous namespace)::CacheInfo"* %366, %373
  br i1 %378, label %385, label %379

379:                                              ; preds = %377
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45)
  %380 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %366 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %45, i8* align 8 %380, i64 16, i1 false) #8
  %381 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %373 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %380, i8* align 8 %381, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %381, i8* nonnull align 8 %45, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45)
  %382 = add i32 %360, 1
  %383 = icmp eq %"struct.(anonymous namespace)::CacheInfo"* %359, %366
  %384 = select i1 %383, %"struct.(anonymous namespace)::CacheInfo"* %373, %"struct.(anonymous namespace)::CacheInfo"* %359
  br label %358

385:                                              ; preds = %377, %352
  %386 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %232, %352 ], [ %359, %377 ]
  %387 = phi i32 [ %353, %352 ], [ %360, %377 ]
  %388 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %356, %352 ], [ %366, %377 ]
  %389 = icmp eq %"struct.(anonymous namespace)::CacheInfo"* %388, %386
  br i1 %389, label %400, label %390

390:                                              ; preds = %385
  %391 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %386, i64 0, i32 0
  %392 = load i32, i32* %391, align 8
  %393 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %388, i64 0, i32 0
  %394 = load i32, i32* %393, align 8
  %395 = icmp ult i32 %392, %394
  br i1 %395, label %396, label %400

396:                                              ; preds = %390
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46)
  %397 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %388 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %46, i8* align 8 %397, i64 16, i1 false) #8
  %398 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %386 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %397, i8* align 8 %398, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %398, i8* nonnull align 8 %46, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46)
  %399 = add i32 %387, 1
  br label %400

400:                                              ; preds = %385, %396, %390
  %401 = phi i32 [ %399, %396 ], [ %387, %390 ], [ %387, %385 ]
  %402 = icmp eq i32 %401, 0
  br i1 %402, label %403, label %410

403:                                              ; preds = %400
  %404 = tail call fastcc zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN12_GLOBAL__N_19CacheInfoES3_EEPS3_EEbT0_S7_T_(%"struct.(anonymous namespace)::CacheInfo"* %64, %"struct.(anonymous namespace)::CacheInfo"* %388)
  %405 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %388, i64 1
  %406 = tail call fastcc zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN12_GLOBAL__N_19CacheInfoES3_EEPS3_EEbT0_S7_T_(%"struct.(anonymous namespace)::CacheInfo"* %405, %"struct.(anonymous namespace)::CacheInfo"* %48)
  br i1 %406, label %407, label %409

407:                                              ; preds = %403
  br i1 %404, label %421, label %408

408:                                              ; preds = %407, %419
  br label %47

409:                                              ; preds = %403
  br i1 %404, label %417, label %410

410:                                              ; preds = %409, %400
  %411 = ptrtoint %"struct.(anonymous namespace)::CacheInfo"* %388 to i64
  %412 = sub i64 %411, %355
  %413 = sub i64 %60, %411
  %414 = icmp slt i64 %412, %413
  br i1 %414, label %415, label %419

415:                                              ; preds = %410
  tail call fastcc void @_ZNSt3__16__sortIRNS_6__lessIN12_GLOBAL__N_19CacheInfoES3_EEPS3_EEvT0_S7_T_(%"struct.(anonymous namespace)::CacheInfo"* %64, %"struct.(anonymous namespace)::CacheInfo"* %388)
  %416 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %388, i64 1
  br label %417

417:                                              ; preds = %415, %409
  %418 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %405, %409 ], [ %416, %415 ]
  br label %61

419:                                              ; preds = %410
  %420 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %388, i64 1
  tail call fastcc void @_ZNSt3__16__sortIRNS_6__lessIN12_GLOBAL__N_19CacheInfoES3_EEPS3_EEvT0_S7_T_(%"struct.(anonymous namespace)::CacheInfo"* %420, %"struct.(anonymous namespace)::CacheInfo"* %48)
  br label %408

421:                                              ; preds = %407, %320, %63, %63, %307, %317, %226, %194, %154, %147, %140, %132, %121, %113, %106, %102, %98, %91, %90, %68, %75, %116
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZNSt3__17__sort4IRNS_6__lessIN12_GLOBAL__N_19CacheInfoES3_EEPS3_EEjT0_S7_S7_S7_T_(%"struct.(anonymous namespace)::CacheInfo"* nocapture, %"struct.(anonymous namespace)::CacheInfo"* nocapture, %"struct.(anonymous namespace)::CacheInfo"* nocapture, %"struct.(anonymous namespace)::CacheInfo"* nocapture) unnamed_addr #0 {
  %5 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %6 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %7 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %8 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %9 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %10 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %11 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %12 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %13 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %1, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %0, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = icmp ult i32 %14, %16
  %18 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %2, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp ult i32 %19, %14
  br i1 %17, label %32, label %21

21:                                               ; preds = %4
  br i1 %20, label %22, label %47

22:                                               ; preds = %21
  %23 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23)
  %24 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* align 8 %24, i64 16, i1 false) #8
  %25 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* nonnull align 8 %23, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23)
  %26 = load i32, i32* %13, align 8
  %27 = load i32, i32* %15, align 8
  %28 = icmp ult i32 %26, %27
  br i1 %28, label %29, label %47

29:                                               ; preds = %22
  %30 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30)
  %31 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* align 8 %31, i64 16, i1 false) #8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %24, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* nonnull align 8 %30, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30)
  br label %47

32:                                               ; preds = %4
  br i1 %20, label %33, label %37

33:                                               ; preds = %32
  %34 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34)
  %35 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* align 8 %35, i64 16, i1 false) #8
  %36 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* nonnull align 8 %34, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34)
  br label %47

37:                                               ; preds = %32
  %38 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38)
  %39 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* align 8 %39, i64 16, i1 false) #8
  %40 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* nonnull align 8 %38, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38)
  %41 = load i32, i32* %18, align 8
  %42 = load i32, i32* %13, align 8
  %43 = icmp ult i32 %41, %42
  br i1 %43, label %44, label %47

44:                                               ; preds = %37
  %45 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %45, i8* align 8 %40, i64 16, i1 false) #8
  %46 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %46, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* nonnull align 8 %45, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45)
  br label %47

47:                                               ; preds = %21, %22, %29, %33, %37, %44
  %48 = phi i32 [ 1, %33 ], [ 0, %21 ], [ 2, %29 ], [ 1, %22 ], [ 2, %44 ], [ 1, %37 ]
  %49 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %3, i64 0, i32 0
  %50 = load i32, i32* %49, align 8
  %51 = load i32, i32* %18, align 8
  %52 = icmp ult i32 %50, %51
  br i1 %52, label %53, label %72

53:                                               ; preds = %47
  %54 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54)
  %55 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %54, i8* align 8 %55, i64 16, i1 false) #8
  %56 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* nonnull align 8 %54, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54)
  %57 = add nuw nsw i32 %48, 1
  %58 = load i32, i32* %18, align 8
  %59 = load i32, i32* %13, align 8
  %60 = icmp ult i32 %58, %59
  br i1 %60, label %61, label %72

61:                                               ; preds = %53
  %62 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62)
  %63 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %62, i8* align 8 %63, i64 16, i1 false) #8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %55, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* nonnull align 8 %62, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62)
  %64 = add nuw nsw i32 %48, 2
  %65 = load i32, i32* %13, align 8
  %66 = load i32, i32* %15, align 8
  %67 = icmp ult i32 %65, %66
  br i1 %67, label %68, label %72

68:                                               ; preds = %61
  %69 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69)
  %70 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %69, i8* align 8 %70, i64 16, i1 false) #8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %63, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* nonnull align 8 %69, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69)
  %71 = add nuw nsw i32 %48, 3
  br label %72

72:                                               ; preds = %53, %68, %61, %47
  %73 = phi i32 [ %71, %68 ], [ %64, %61 ], [ %57, %53 ], [ %48, %47 ]
  ret i32 %73
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN12_GLOBAL__N_19CacheInfoES3_EEPS3_EEbT0_S7_T_(%"struct.(anonymous namespace)::CacheInfo"*, %"struct.(anonymous namespace)::CacheInfo"*) unnamed_addr #0 {
  %3 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %4 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %5 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %6 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %7 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %8 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %9 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %10 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %11 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %12 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %13 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %14 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %15 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %16 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %17 = alloca %"struct.(anonymous namespace)::CacheInfo", align 8
  %18 = alloca [12 x i8], align 4
  %19 = ptrtoint %"struct.(anonymous namespace)::CacheInfo"* %1 to i64
  %20 = ptrtoint %"struct.(anonymous namespace)::CacheInfo"* %0 to i64
  %21 = sub i64 %19, %20
  %22 = ashr exact i64 %21, 4
  switch i64 %22, label %112 [
    i64 0, label %189
    i64 1, label %189
    i64 2, label %23
    i64 3, label %34
    i64 4, label %71
    i64 5, label %76
  ]

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %1, i64 -1
  %25 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %24, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %0, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = icmp ult i32 %26, %28
  br i1 %29, label %30, label %189

30:                                               ; preds = %23
  %31 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31)
  %32 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* align 8 %32, i64 16, i1 false) #8
  %33 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %33, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* nonnull align 8 %31, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31)
  br label %189

34:                                               ; preds = %2
  %35 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %0, i64 1
  %36 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %1, i64 -1
  %37 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %35, i64 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %0, i64 0, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = icmp ult i32 %38, %40
  %42 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %36, i64 0, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = icmp ult i32 %43, %38
  br i1 %41, label %56, label %45

45:                                               ; preds = %34
  br i1 %44, label %46, label %189

46:                                               ; preds = %45
  %47 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47)
  %48 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %47, i8* align 8 %48, i64 16, i1 false) #8
  %49 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %36 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* nonnull align 8 %47, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47)
  %50 = load i32, i32* %37, align 8
  %51 = load i32, i32* %39, align 8
  %52 = icmp ult i32 %50, %51
  br i1 %52, label %53, label %189

53:                                               ; preds = %46
  %54 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54)
  %55 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %54, i8* align 8 %55, i64 16, i1 false) #8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %48, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* nonnull align 8 %54, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54)
  br label %189

56:                                               ; preds = %34
  br i1 %44, label %57, label %61

57:                                               ; preds = %56
  %58 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58)
  %59 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %58, i8* align 8 %59, i64 16, i1 false) #8
  %60 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %36 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* nonnull align 8 %58, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58)
  br label %189

61:                                               ; preds = %56
  %62 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62)
  %63 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %62, i8* align 8 %63, i64 16, i1 false) #8
  %64 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* nonnull align 8 %62, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62)
  %65 = load i32, i32* %42, align 8
  %66 = load i32, i32* %37, align 8
  %67 = icmp ult i32 %65, %66
  br i1 %67, label %68, label %189

68:                                               ; preds = %61
  %69 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %69, i8* align 8 %64, i64 16, i1 false) #8
  %70 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %36 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %70, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* nonnull align 8 %69, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69)
  br label %189

71:                                               ; preds = %2
  %72 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %0, i64 1
  %73 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %0, i64 2
  %74 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %1, i64 -1
  %75 = tail call fastcc i32 @_ZNSt3__17__sort4IRNS_6__lessIN12_GLOBAL__N_19CacheInfoES3_EEPS3_EEjT0_S7_S7_S7_T_(%"struct.(anonymous namespace)::CacheInfo"* %0, %"struct.(anonymous namespace)::CacheInfo"* %72, %"struct.(anonymous namespace)::CacheInfo"* %73, %"struct.(anonymous namespace)::CacheInfo"* %74)
  br label %189

76:                                               ; preds = %2
  %77 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %0, i64 1
  %78 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %0, i64 2
  %79 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %0, i64 3
  %80 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %1, i64 -1
  %81 = tail call fastcc i32 @_ZNSt3__17__sort4IRNS_6__lessIN12_GLOBAL__N_19CacheInfoES3_EEPS3_EEjT0_S7_S7_S7_T_(%"struct.(anonymous namespace)::CacheInfo"* %0, %"struct.(anonymous namespace)::CacheInfo"* %77, %"struct.(anonymous namespace)::CacheInfo"* %78, %"struct.(anonymous namespace)::CacheInfo"* %79) #8
  %82 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %80, i64 0, i32 0
  %83 = load i32, i32* %82, align 8
  %84 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %79, i64 0, i32 0
  %85 = load i32, i32* %84, align 8
  %86 = icmp ult i32 %83, %85
  br i1 %86, label %87, label %189

87:                                               ; preds = %76
  %88 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88)
  %89 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %88, i8* align 8 %89, i64 16, i1 false) #8
  %90 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %80 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* nonnull align 8 %88, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88)
  %91 = load i32, i32* %84, align 8
  %92 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %78, i64 0, i32 0
  %93 = load i32, i32* %92, align 8
  %94 = icmp ult i32 %91, %93
  br i1 %94, label %95, label %189

95:                                               ; preds = %87
  %96 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %96)
  %97 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %96, i8* align 8 %97, i64 16, i1 false) #8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %97, i8* align 8 %89, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* nonnull align 8 %96, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %96)
  %98 = load i32, i32* %92, align 8
  %99 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %77, i64 0, i32 0
  %100 = load i32, i32* %99, align 8
  %101 = icmp ult i32 %98, %100
  br i1 %101, label %102, label %189

102:                                              ; preds = %95
  %103 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %103)
  %104 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %103, i8* align 8 %104, i64 16, i1 false) #8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* align 8 %97, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %97, i8* nonnull align 8 %103, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %103)
  %105 = load i32, i32* %99, align 8
  %106 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %0, i64 0, i32 0
  %107 = load i32, i32* %106, align 8
  %108 = icmp ult i32 %105, %107
  br i1 %108, label %109, label %189

109:                                              ; preds = %102
  %110 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %110)
  %111 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %110, i8* align 8 %111, i64 16, i1 false) #8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* align 8 %104, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* nonnull align 8 %110, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %110)
  br label %189

112:                                              ; preds = %2
  %113 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %0, i64 2
  %114 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %0, i64 1
  %115 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %114, i64 0, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %0, i64 0, i32 0
  %118 = load i32, i32* %117, align 8
  %119 = icmp ult i32 %116, %118
  %120 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %113, i64 0, i32 0
  %121 = load i32, i32* %120, align 8
  %122 = icmp ult i32 %121, %116
  br i1 %119, label %133, label %123

123:                                              ; preds = %112
  br i1 %122, label %124, label %147

124:                                              ; preds = %123
  %125 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %125)
  %126 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %114 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %125, i8* align 8 %126, i64 16, i1 false) #8
  %127 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %113 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %126, i8* align 8 %127, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* nonnull align 8 %125, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %125)
  %128 = load i32, i32* %115, align 8
  %129 = icmp ult i32 %128, %118
  br i1 %129, label %130, label %147

130:                                              ; preds = %124
  %131 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %131)
  %132 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %131, i8* align 8 %132, i64 16, i1 false) #8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %132, i8* align 8 %126, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %126, i8* nonnull align 8 %131, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %131)
  br label %147

133:                                              ; preds = %112
  br i1 %122, label %134, label %138

134:                                              ; preds = %133
  %135 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %135)
  %136 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %135, i8* align 8 %136, i64 16, i1 false) #8
  %137 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %113 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %136, i8* align 8 %137, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %137, i8* nonnull align 8 %135, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %135)
  br label %147

138:                                              ; preds = %133
  %139 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %139)
  %140 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %139, i8* align 8 %140, i64 16, i1 false) #8
  %141 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %114 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %140, i8* align 8 %141, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %141, i8* nonnull align 8 %139, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %139)
  %142 = load i32, i32* %115, align 8
  %143 = icmp ult i32 %121, %142
  br i1 %143, label %144, label %147

144:                                              ; preds = %138
  %145 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %145)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %145, i8* align 8 %141, i64 16, i1 false) #8
  %146 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %113 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %141, i8* align 8 %146, i64 16, i1 false) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* nonnull align 8 %145, i64 16, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %145)
  br label %147

147:                                              ; preds = %123, %124, %130, %134, %138, %144
  %148 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %0, i64 3
  %149 = icmp eq %"struct.(anonymous namespace)::CacheInfo"* %148, %1
  br i1 %149, label %189, label %150

150:                                              ; preds = %147
  %151 = getelementptr inbounds [12 x i8], [12 x i8]* %18, i64 0, i64 0
  br label %152

152:                                              ; preds = %150, %182
  %153 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %148, %150 ], [ %184, %182 ]
  %154 = phi i32 [ 0, %150 ], [ %183, %182 ]
  %155 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %113, %150 ], [ %153, %182 ]
  %156 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %153, i64 0, i32 0
  %157 = load i32, i32* %156, align 8
  %158 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %155, i64 0, i32 0
  %159 = load i32, i32* %158, align 8
  %160 = icmp ult i32 %157, %159
  br i1 %160, label %161, label %182

161:                                              ; preds = %152
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %151)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %151, i8* align 4 getelementptr inbounds ({ i32, [4 x i8], %class.CPDF_Stream* }, { i32, [4 x i8], %class.CPDF_Stream* }* @__const._ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN12_GLOBAL__N_19CacheInfoES3_EEPS3_EEbT0_S7_T_.__t, i64 0, i32 1, i64 0), i64 12, i1 false)
  %162 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %153 to i8*
  %163 = getelementptr inbounds i8, i8* %162, i64 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %151, i8* align 4 %163, i64 12, i1 false)
  br label %164

164:                                              ; preds = %170, %161
  %165 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %153, %161 ], [ %166, %170 ]
  %166 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %155, %161 ], [ %171, %170 ]
  %167 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %165 to i8*
  %168 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %166 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %168, i64 16, i1 false)
  %169 = icmp eq %"struct.(anonymous namespace)::CacheInfo"* %166, %0
  br i1 %169, label %175, label %170

170:                                              ; preds = %164
  %171 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %166, i64 -1
  %172 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %171, i64 0, i32 0
  %173 = load i32, i32* %172, align 8
  %174 = icmp ult i32 %157, %173
  br i1 %174, label %164, label %175

175:                                              ; preds = %164, %170
  %176 = phi %"struct.(anonymous namespace)::CacheInfo"* [ %166, %170 ], [ %0, %164 ]
  %177 = bitcast %"struct.(anonymous namespace)::CacheInfo"* %176 to i8*
  %178 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %176, i64 0, i32 0
  store i32 %157, i32* %178, align 8
  %179 = getelementptr inbounds i8, i8* %177, i64 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %179, i8* nonnull align 4 %151, i64 12, i1 false)
  %180 = add i32 %154, 1
  %181 = icmp eq i32 %180, 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %151)
  br i1 %181, label %186, label %182

182:                                              ; preds = %175, %152
  %183 = phi i32 [ %180, %175 ], [ %154, %152 ]
  %184 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %153, i64 1
  %185 = icmp eq %"struct.(anonymous namespace)::CacheInfo"* %184, %1
  br i1 %185, label %189, label %152

186:                                              ; preds = %175
  %187 = getelementptr inbounds %"struct.(anonymous namespace)::CacheInfo", %"struct.(anonymous namespace)::CacheInfo"* %153, i64 1
  %188 = icmp eq %"struct.(anonymous namespace)::CacheInfo"* %187, %1
  br label %189

189:                                              ; preds = %182, %186, %147, %109, %102, %95, %87, %76, %68, %61, %57, %53, %46, %45, %23, %30, %2, %2, %71
  %190 = phi i1 [ true, %71 ], [ true, %2 ], [ true, %2 ], [ true, %30 ], [ true, %23 ], [ true, %45 ], [ true, %46 ], [ true, %53 ], [ true, %57 ], [ true, %61 ], [ true, %68 ], [ true, %76 ], [ true, %87 ], [ true, %95 ], [ true, %102 ], [ true, %109 ], [ true, %147 ], [ %188, %186 ], [ true, %182 ]
  ret i1 %190
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !5
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIP11CPDF_StreamNS_10unique_ptrI20CPDF_ImageCacheEntryNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE5eraseENS_21__tree_const_iteratorIS9_PNS_11__tree_nodeIS9_PvEElEE(%"class.std::__1::__tree.87"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %8 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_end_node"**
  %10 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 0, i32 0
  %12 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %11, align 8
  %13 = icmp eq %"class.std::__1::__tree_node_base"* %12, %7
  br i1 %13, label %30, label %21

14:                                               ; preds = %2, %14
  %15 = phi %"class.std::__1::__tree_node_base"* [ %17, %14 ], [ %4, %2 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %14

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0
  br label %30

21:                                               ; preds = %6, %21
  %22 = phi %"class.std::__1::__tree_end_node"** [ %25, %21 ], [ %9, %6 ]
  %23 = bitcast %"class.std::__1::__tree_end_node"** %22 to %"class.std::__1::__tree_node_base"**
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %24, i64 0, i32 2
  %26 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 0, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, %24
  br i1 %29, label %30, label %21

30:                                               ; preds = %21, %19, %6
  %31 = phi %"class.std::__1::__tree_end_node"* [ %20, %19 ], [ %10, %6 ], [ %26, %21 ]
  %32 = getelementptr inbounds %"class.std::__1::__tree.87", %"class.std::__1::__tree.87"* %0, i64 0, i32 0
  %33 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_end_node"* %33, %1
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %31 to i64
  %37 = bitcast %"class.std::__1::__tree.87"* %0 to i64*
  store i64 %36, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %35
  %39 = getelementptr inbounds %"class.std::__1::__tree.87", %"class.std::__1::__tree.87"* %0, i64 0, i32 2, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, -1
  store i64 %41, i64* %39, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree.87", %"class.std::__1::__tree.87"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %43, %"class.std::__1::__tree_node_base"* %44) #8
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 5
  %46 = bitcast %"class.std::__1::__tree_end_node"* %45 to %class.CPDF_ImageCacheEntry**
  %47 = load %class.CPDF_ImageCacheEntry*, %class.CPDF_ImageCacheEntry** %46, align 8
  store %class.CPDF_ImageCacheEntry* null, %class.CPDF_ImageCacheEntry** %46, align 8
  %48 = icmp eq %class.CPDF_ImageCacheEntry* %47, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %38
  tail call void @_ZN20CPDF_ImageCacheEntryD1Ev(%class.CPDF_ImageCacheEntry* nonnull %47) #8
  %50 = bitcast %class.CPDF_ImageCacheEntry* %47 to i8*
  tail call void @_ZdlPv(i8* %50) #9
  br label %51

51:                                               ; preds = %38, %49
  %52 = bitcast %"class.std::__1::__tree_end_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %52) #9
  ret %"class.std::__1::__tree_end_node"* %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !5
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !5
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !5
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !5
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !5
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !5
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !5
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !5
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !5
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !5
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !5
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !5
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !5
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

declare void @_ZN20CPDF_ImageCacheEntryC1EP13CPDF_DocumentRKN5fxcrt9RetainPtrI10CPDF_ImageEE(%class.CPDF_ImageCacheEntry*, %class.CPDF_Document*, %"class.fxcrt::RetainPtr.100"* dereferenceable(8)) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__16__treeINS_12__value_typeIP11CPDF_StreamNS_10unique_ptrI20CPDF_ImageCacheEntryNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSL_IJEEEEEENS4_INS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISS_EEEEEEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__16__treeINS_12__value_typeIP11CPDF_StreamNS_10unique_ptrI20CPDF_ImageCacheEntryNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSL_IJEEEEEENS4_INS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISS_EEEEEEDpOT_"}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__16__treeINS_12__value_typeIP11CPDF_StreamNS_10unique_ptrI20CPDF_ImageCacheEntryNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSL_IJEEEEEENS4_INS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISS_EEEEEEDpOT_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__16__treeINS_12__value_typeIP11CPDF_StreamNS_10unique_ptrI20CPDF_ImageCacheEntryNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS3_EEENSL_IJEEEEEENS4_INS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISS_EEEEEEDpOT_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__16__treeINS_12__value_typeIP11CPDF_StreamNS_10unique_ptrI20CPDF_ImageCacheEntryNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS3_EEENSL_IJEEEEEENS4_INS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISR_EEEEEEDpOT_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__16__treeINS_12__value_typeIP11CPDF_StreamNS_10unique_ptrI20CPDF_ImageCacheEntryNS_14default_deleteIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS_9allocatorIS9_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS3_EEENSL_IJEEEEEENS4_INS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINSE_ISR_EEEEEEDpOT_"}
