; ModuleID = '../../native_client/src/trusted/desc/nacl_desc_sync_socket.c'
source_filename = "../../native_client/src/trusted/desc/nacl_desc_sync_socket.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.NaClDescVtbl = type { %struct.NaClRefCountVtbl, i64 (%struct.NaClDesc*, %struct.NaClDescEffector*, i8*, i64, i32, i32, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i64 (%struct.NaClDesc*, i64, i32)*, i64 (%struct.NaClDesc*, i8*, i64, i64)*, i64 (%struct.NaClDesc*, i8*, i64, i64)*, i32 (%struct.NaClDesc*, %struct.nacl_abi_stat*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i32)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i32 (%struct.NaClDesc*, i64*, i64*)*, i32 (%struct.NaClDesc*, %struct.NaClDescXferState*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, %struct.NaClDesc*)*, i32 (%struct.NaClDesc*, %struct.NaClDesc*, %struct.nacl_abi_timespec*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)*, i32 (%struct.NaClDesc*, %struct.NaClDesc**)*, i32 (%struct.NaClDesc*, %struct.NaClDesc**)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i32, i32, i8*)*, i32 (%struct.NaClDesc*, i32*, i8*)*, void (%struct.NaClDesc*, i32)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 }
%struct.NaClRefCountVtbl = type { void (%struct.NaClRefCount*)* }
%struct.NaClRefCount = type { %struct.NaClRefCountVtbl*, %struct.NaClFastMutex, i64 }
%struct.NaClFastMutex = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.NaClDesc = type { %struct.NaClRefCount, i32, i32, i32, i8* }
%struct.NaClDescEffector = type opaque
%struct.nacl_abi_stat = type { i64, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i64, i64, i64, i64, i64 }
%struct.NaClDescXferState = type { i8*, i8*, i32*, i32* }
%struct.nacl_abi_timespec = type { i64, i32 }
%struct.NaClImcTypedMsgHdr = type opaque
%struct.NaClMessageHeader = type { %struct.NaClIOVec*, i32, i32*, i32, i32 }
%struct.NaClIOVec = type { i8*, i64 }
%struct.NaClDescSyncSocket = type { %struct.NaClDesc, i32 }

@.str = private unnamed_addr constant [39 x i8] c"Entered NaClDescSyncSocketInternalize\0A\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"NaClSyncSocketInternalize: no memory\0A\00", align 1
@.str.2 = private unnamed_addr constant [61 x i8] c"NaClSyncSocketInternalize: no descriptor left in xfer state\0A\00", align 1
@kNaClDescSyncSocketVtbl = internal constant %struct.NaClDescVtbl { %struct.NaClRefCountVtbl { void (%struct.NaClRefCount*)* @NaClDescSyncSocketDtor }, i64 (%struct.NaClDesc*, %struct.NaClDescEffector*, i8*, i64, i32, i32, i64)* @NaClDescMapNotImplemented, i64 (%struct.NaClDesc*, i8*, i64)* @NaClDescSyncSocketRead, i64 (%struct.NaClDesc*, i8*, i64)* @NaClDescSyncSocketWrite, i64 (%struct.NaClDesc*, i64, i32)* @NaClDescSeekNotImplemented, i64 (%struct.NaClDesc*, i8*, i64, i64)* @NaClDescPReadNotImplemented, i64 (%struct.NaClDesc*, i8*, i64, i64)* @NaClDescPWriteNotImplemented, i32 (%struct.NaClDesc*, %struct.nacl_abi_stat*)* @NaClDescSyncSocketFstat, i32 (%struct.NaClDesc*)* @NaClDescFchdirNotImplemented, i32 (%struct.NaClDesc*, i32)* @NaClDescFchmodNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescFsyncNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescFdatasyncNotImplemented, i32 (%struct.NaClDesc*, i64)* @NaClDescFtruncateNotImplemented, i64 (%struct.NaClDesc*, i8*, i64)* @NaClDescGetdentsNotImplemented, i32 (%struct.NaClDesc*, i64*, i64*)* @NaClDescSyncSocketExternalizeSize, i32 (%struct.NaClDesc*, %struct.NaClDescXferState*)* @NaClDescSyncSocketExternalize, i32 (%struct.NaClDesc*)* @NaClDescLockNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescTryLockNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescUnlockNotImplemented, i32 (%struct.NaClDesc*, %struct.NaClDesc*)* @NaClDescWaitNotImplemented, i32 (%struct.NaClDesc*, %struct.NaClDesc*, %struct.nacl_abi_timespec*)* @NaClDescTimedWaitAbsNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescSignalNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescBroadcastNotImplemented, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)* @NaClDescSendMsgNotImplemented, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)* @NaClDescRecvMsgNotImplemented, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)* @NaClDescLowLevelSendMsgNotImplemented, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)* @NaClDescLowLevelRecvMsgNotImplemented, i32 (%struct.NaClDesc*, %struct.NaClDesc**)* @NaClDescConnectAddrNotImplemented, i32 (%struct.NaClDesc*, %struct.NaClDesc**)* @NaClDescAcceptConnNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescPostNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescSemWaitNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescGetValueNotImplemented, i32 (%struct.NaClDesc*, i32, i32, i8*)* @NaClDescSetMetadata, i32 (%struct.NaClDesc*, i32*, i8*)* @NaClDescGetMetadata, void (%struct.NaClDesc*, i32)* @NaClDescSetFlags, i32 (%struct.NaClDesc*)* @NaClDescGetFlags, i32 (%struct.NaClDesc*)* @NaClDescIsattyNotImplemented, i32 12 }, align 8
@kNaClDescVtbl = external constant %struct.NaClDescVtbl, align 8
@.str.4 = private unnamed_addr constant [43 x i8] c"Entered NaClDescSyncSocketExternalizeSize\0A\00", align 1
@.str.5 = private unnamed_addr constant [39 x i8] c"Entered NaClDescSyncSocketExternalize\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClDescSyncSocketCtor(%struct.NaClDescSyncSocket*, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.NaClDescSyncSocket, %struct.NaClDescSyncSocket* %0, i64 0, i32 0
  %4 = tail call i32 @NaClDescCtor(%struct.NaClDesc* %3) #5
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.NaClDescSyncSocket, %struct.NaClDescSyncSocket* %0, i64 0, i32 1
  store i32 %1, i32* %7, align 8
  %8 = getelementptr inbounds %struct.NaClDescSyncSocket, %struct.NaClDescSyncSocket* %0, i64 0, i32 0, i32 0, i32 0
  store %struct.NaClRefCountVtbl* getelementptr inbounds (%struct.NaClDescVtbl, %struct.NaClDescVtbl* @kNaClDescSyncSocketVtbl, i64 0, i32 0), %struct.NaClRefCountVtbl** %8, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi i32 [ 1, %6 ], [ 0, %2 ]
  ret i32 %10
}

declare i32 @NaClDescCtor(%struct.NaClDesc*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.NaClDesc* @NaClDescSyncSocketMake(i32) local_unnamed_addr #0 {
  %2 = tail call noalias i8* @malloc(i64 88) #5
  %3 = icmp eq i8* %2, null
  br i1 %3, label %13, label %4

4:                                                ; preds = %1
  %5 = bitcast i8* %2 to %struct.NaClDesc*
  %6 = tail call i32 @NaClDescCtor(%struct.NaClDesc* nonnull %5) #5
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %4
  tail call void @free(i8* nonnull %2) #5
  br label %13

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %2, i64 80
  %11 = bitcast i8* %10 to i32*
  store i32 %0, i32* %11, align 8
  %12 = bitcast i8* %2 to %struct.NaClRefCountVtbl**
  store %struct.NaClRefCountVtbl* getelementptr inbounds (%struct.NaClDescVtbl, %struct.NaClDescVtbl* @kNaClDescSyncSocketVtbl, i64 0, i32 0), %struct.NaClRefCountVtbl** %12, align 8
  br label %13

13:                                               ; preds = %1, %9, %8
  %14 = phi %struct.NaClDesc* [ %5, %9 ], [ null, %8 ], [ null, %1 ]
  ret %struct.NaClDesc* %14
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClDescSyncSocketInternalize(%struct.NaClDesc** nocapture, %struct.NaClDescXferState*) local_unnamed_addr #0 {
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0)) #5
  %3 = tail call noalias i8* @malloc(i64 88) #5
  %4 = bitcast i8* %3 to %struct.NaClDescSyncSocket*
  %5 = icmp eq i8* %3, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void (i32, i8*, ...) @NaClLog(i32 -3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #5
  br label %26

7:                                                ; preds = %2
  %8 = bitcast i8* %3 to %struct.NaClDesc*
  %9 = tail call i32 @NaClDescInternalizeCtor(%struct.NaClDesc* nonnull %8, %struct.NaClDescXferState* %1) #5
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %7
  tail call void @free(i8* nonnull %3) #5
  br label %26

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.NaClDescXferState, %struct.NaClDescXferState* %1, i64 0, i32 2
  %14 = load i32*, i32** %13, align 8
  %15 = getelementptr inbounds %struct.NaClDescXferState, %struct.NaClDescXferState* %1, i64 0, i32 3
  %16 = load i32*, i32** %15, align 8
  %17 = icmp eq i32* %14, %16
  br i1 %17, label %18, label %19

18:                                               ; preds = %12
  tail call void (i32, i8*, ...) @NaClLog(i32 -3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.2, i64 0, i64 0)) #5
  br label %26

19:                                               ; preds = %12
  %20 = load i32, i32* %14, align 4
  %21 = getelementptr inbounds i8, i8* %3, i64 80
  %22 = bitcast i8* %21 to i32*
  store i32 %20, i32* %22, align 8
  %23 = bitcast i8* %3 to %struct.NaClRefCountVtbl**
  store %struct.NaClRefCountVtbl* getelementptr inbounds (%struct.NaClDescVtbl, %struct.NaClDescVtbl* @kNaClDescSyncSocketVtbl, i64 0, i32 0), %struct.NaClRefCountVtbl** %23, align 8
  %24 = getelementptr inbounds i32, i32* %14, i64 1
  store i32* %24, i32** %13, align 8
  store i32 -1, i32* %14, align 4
  %25 = bitcast %struct.NaClDesc** %0 to i8**
  store i8* %3, i8** %25, align 8
  br label %30

26:                                               ; preds = %6, %18, %11
  %27 = phi i32 [ -12, %11 ], [ -5, %18 ], [ -12, %6 ]
  %28 = phi %struct.NaClDescSyncSocket* [ null, %11 ], [ %4, %18 ], [ null, %6 ]
  %29 = getelementptr inbounds %struct.NaClDescSyncSocket, %struct.NaClDescSyncSocket* %28, i64 0, i32 0
  tail call void @NaClDescSafeUnref(%struct.NaClDesc* %29) #5
  br label %30

30:                                               ; preds = %19, %26
  %31 = phi i32 [ %27, %26 ], [ 0, %19 ]
  ret i32 %31
}

declare void @NaClLog(i32, i8*, ...) local_unnamed_addr #1

declare i32 @NaClDescInternalizeCtor(%struct.NaClDesc*, %struct.NaClDescXferState*) local_unnamed_addr #1

declare void @NaClDescSafeUnref(%struct.NaClDesc*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @NaClDescSyncSocketDtor(%struct.NaClRefCount*) #0 {
  %2 = getelementptr inbounds %struct.NaClRefCount, %struct.NaClRefCount* %0, i64 1, i32 1, i32 0, i32 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = tail call i32 @NaClClose(i32 %3) #5
  store i32 -1, i32* %2, align 8
  %5 = getelementptr inbounds %struct.NaClRefCount, %struct.NaClRefCount* %0, i64 0, i32 0
  store %struct.NaClRefCountVtbl* getelementptr inbounds (%struct.NaClDescVtbl, %struct.NaClDescVtbl* @kNaClDescVtbl, i64 0, i32 0), %struct.NaClRefCountVtbl** %5, align 8
  %6 = load void (%struct.NaClRefCount*)*, void (%struct.NaClRefCount*)** getelementptr inbounds (%struct.NaClDescVtbl, %struct.NaClDescVtbl* @kNaClDescVtbl, i64 0, i32 0, i32 0), align 8
  tail call void %6(%struct.NaClRefCount* %0) #5
  ret void
}

declare i64 @NaClDescMapNotImplemented(%struct.NaClDesc*, %struct.NaClDescEffector*, i8*, i64, i32, i32, i64) #1

; Function Attrs: nounwind ssp uwtable
define internal i64 @NaClDescSyncSocketRead(%struct.NaClDesc* nocapture readonly, i8*, i64) #0 {
  %4 = getelementptr inbounds %struct.NaClDesc, %struct.NaClDesc* %0, i64 1
  %5 = bitcast %struct.NaClDesc* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = tail call i64 @NaClDescReadFromHandle(i32 %6, i8* %1, i64 %2) #5
  ret i64 %7
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @NaClDescSyncSocketWrite(%struct.NaClDesc* nocapture readonly, i8*, i64) #0 {
  %4 = getelementptr inbounds %struct.NaClDesc, %struct.NaClDesc* %0, i64 1
  %5 = bitcast %struct.NaClDesc* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = tail call i64 @NaClDescWriteToHandle(i32 %6, i8* %1, i64 %2) #5
  ret i64 %7
}

declare i64 @NaClDescSeekNotImplemented(%struct.NaClDesc*, i64, i32) #1

declare i64 @NaClDescPReadNotImplemented(%struct.NaClDesc*, i8*, i64, i64) #1

declare i64 @NaClDescPWriteNotImplemented(%struct.NaClDesc*, i8*, i64, i64) #1

; Function Attrs: nounwind ssp uwtable
define internal i32 @NaClDescSyncSocketFstat(%struct.NaClDesc* nocapture readnone, %struct.nacl_abi_stat* nocapture) #0 {
  %3 = bitcast %struct.nacl_abi_stat* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 104, i1 false)
  %4 = getelementptr inbounds %struct.nacl_abi_stat, %struct.nacl_abi_stat* %1, i64 0, i32 2
  store i32 69632, i32* %4, align 8
  ret i32 0
}

declare i32 @NaClDescFchdirNotImplemented(%struct.NaClDesc*) #1

declare i32 @NaClDescFchmodNotImplemented(%struct.NaClDesc*, i32) #1

declare i32 @NaClDescFsyncNotImplemented(%struct.NaClDesc*) #1

declare i32 @NaClDescFdatasyncNotImplemented(%struct.NaClDesc*) #1

declare i32 @NaClDescFtruncateNotImplemented(%struct.NaClDesc*, i64) #1

declare i64 @NaClDescGetdentsNotImplemented(%struct.NaClDesc*, i8*, i64) #1

; Function Attrs: nounwind ssp uwtable
define internal i32 @NaClDescSyncSocketExternalizeSize(%struct.NaClDesc*, i64*, i64*) #0 {
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.4, i64 0, i64 0)) #5
  %4 = tail call i32 @NaClDescExternalizeSize(%struct.NaClDesc* %0, i64* %1, i64* %2) #5
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %3
  %7 = load i64, i64* %2, align 8
  %8 = add i64 %7, 1
  store i64 %8, i64* %2, align 8
  br label %9

9:                                                ; preds = %3, %6
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @NaClDescSyncSocketExternalize(%struct.NaClDesc*, %struct.NaClDescXferState*) #0 {
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.5, i64 0, i64 0)) #5
  %3 = tail call i32 @NaClDescExternalize(%struct.NaClDesc* %0, %struct.NaClDescXferState* %1) #5
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %12

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.NaClDesc, %struct.NaClDesc* %0, i64 1
  %7 = bitcast %struct.NaClDesc* %6 to i32*
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %struct.NaClDescXferState, %struct.NaClDescXferState* %1, i64 0, i32 2
  %10 = load i32*, i32** %9, align 8
  %11 = getelementptr inbounds i32, i32* %10, i64 1
  store i32* %11, i32** %9, align 8
  store i32 %8, i32* %10, align 4
  br label %12

12:                                               ; preds = %2, %5
  ret i32 %3
}

declare i32 @NaClDescLockNotImplemented(%struct.NaClDesc*) #1

declare i32 @NaClDescTryLockNotImplemented(%struct.NaClDesc*) #1

declare i32 @NaClDescUnlockNotImplemented(%struct.NaClDesc*) #1

declare i32 @NaClDescWaitNotImplemented(%struct.NaClDesc*, %struct.NaClDesc*) #1

declare i32 @NaClDescTimedWaitAbsNotImplemented(%struct.NaClDesc*, %struct.NaClDesc*, %struct.nacl_abi_timespec*) #1

declare i32 @NaClDescSignalNotImplemented(%struct.NaClDesc*) #1

declare i32 @NaClDescBroadcastNotImplemented(%struct.NaClDesc*) #1

declare i64 @NaClDescSendMsgNotImplemented(%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32) #1

declare i64 @NaClDescRecvMsgNotImplemented(%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32) #1

declare i64 @NaClDescLowLevelSendMsgNotImplemented(%struct.NaClDesc*, %struct.NaClMessageHeader*, i32) #1

declare i64 @NaClDescLowLevelRecvMsgNotImplemented(%struct.NaClDesc*, %struct.NaClMessageHeader*, i32) #1

declare i32 @NaClDescConnectAddrNotImplemented(%struct.NaClDesc*, %struct.NaClDesc**) #1

declare i32 @NaClDescAcceptConnNotImplemented(%struct.NaClDesc*, %struct.NaClDesc**) #1

declare i32 @NaClDescPostNotImplemented(%struct.NaClDesc*) #1

declare i32 @NaClDescSemWaitNotImplemented(%struct.NaClDesc*) #1

declare i32 @NaClDescGetValueNotImplemented(%struct.NaClDesc*) #1

declare i32 @NaClDescSetMetadata(%struct.NaClDesc*, i32, i32, i8*) #1

declare i32 @NaClDescGetMetadata(%struct.NaClDesc*, i32*, i8*) #1

declare void @NaClDescSetFlags(%struct.NaClDesc*, i32) #1

declare i32 @NaClDescGetFlags(%struct.NaClDesc*) #1

declare i32 @NaClDescIsattyNotImplemented(%struct.NaClDesc*) #1

declare i32 @NaClClose(i32) local_unnamed_addr #1

declare i64 @NaClDescReadFromHandle(i32, i8*, i64) local_unnamed_addr #1

declare i64 @NaClDescWriteToHandle(i32, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare i32 @NaClDescExternalizeSize(%struct.NaClDesc*, i64*, i64*) local_unnamed_addr #1

declare i32 @NaClDescExternalize(%struct.NaClDesc*, %struct.NaClDescXferState*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
