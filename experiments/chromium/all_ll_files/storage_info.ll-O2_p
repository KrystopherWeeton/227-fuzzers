; ModuleID = '../../components/storage_monitor/storage_info.cc'
source_filename = "../../components/storage_monitor/storage_info.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.storage_monitor::StorageInfo" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_string.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.4 }
%union.anon.4 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.5 }
%struct.anon.5 = type { %"struct.std::__1::__padding.6", i8 }
%"struct.std::__1::__padding.6" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::allocator" = type { i8 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6assignEPKDs = comdat any

@_ZN12_GLOBAL__N_135kRemovableMassStorageWithDCIMPrefixE = internal constant [6 x i8] c"dcim:\00", align 1
@_ZN12_GLOBAL__N_133kRemovableMassStorageNoDCIMPrefixE = internal constant [8 x i8] c"nodcim:\00", align 1
@_ZN12_GLOBAL__N_123kFixedMassStoragePrefixE = internal constant [6 x i8] c"path:\00", align 1
@_ZN12_GLOBAL__N_113kMtpPtpPrefixE = internal constant [5 x i8] c"mtp:\00", align 1
@_ZN12_GLOBAL__N_122kMacImageCapturePrefixE = internal constant [4 x i8] c"ic:\00", align 1
@.str = private unnamed_addr constant [17 x i16] [i16 85, i16 110, i16 108, i16 97, i16 98, i16 101, i16 108, i16 101, i16 100, i16 32, i16 100, i16 101, i16 118, i16 105, i16 99, i16 101, i16 0], align 2
@.str.1 = private unnamed_addr constant [3 x i16] [i16 44, i16 32, i16 0], align 2
@.str.3 = private unnamed_addr constant [2 x i16] [i16 32, i16 0], align 2

@_ZN15storage_monitor11StorageInfoC1Ev = hidden unnamed_addr alias void (%"class.storage_monitor::StorageInfo"*), void (%"class.storage_monitor::StorageInfo"*)* @_ZN15storage_monitor11StorageInfoC2Ev
@_ZN15storage_monitor11StorageInfoC1ERKS0_ = hidden unnamed_addr alias void (%"class.storage_monitor::StorageInfo"*, %"class.storage_monitor::StorageInfo"*), void (%"class.storage_monitor::StorageInfo"*, %"class.storage_monitor::StorageInfo"*)* @_ZN15storage_monitor11StorageInfoC2ERKS0_
@_ZN15storage_monitor11StorageInfoC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_RKNS2_IDsNS3_IDsEENS5_IDsEEEESE_SE_m = hidden unnamed_addr alias void (%"class.storage_monitor::StorageInfo"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"*, i64), void (%"class.storage_monitor::StorageInfo"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"*, i64)* @_ZN15storage_monitor11StorageInfoC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_RKNS2_IDsNS3_IDsEENS5_IDsEEEESE_SE_m
@_ZN15storage_monitor11StorageInfoD1Ev = hidden unnamed_addr alias void (%"class.storage_monitor::StorageInfo"*), void (%"class.storage_monitor::StorageInfo"*)* @_ZN15storage_monitor11StorageInfoD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15storage_monitor11StorageInfoC2Ev(%"class.storage_monitor::StorageInfo"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.storage_monitor::StorageInfo"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 128, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15storage_monitor11StorageInfoC2ERKS0_(%"class.storage_monitor::StorageInfo"*, %"class.storage_monitor::StorageInfo"* nocapture readonly dereferenceable(128)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.storage_monitor::StorageInfo"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.storage_monitor::StorageInfo"* %0 to i8*
  %9 = bitcast %"class.storage_monitor::StorageInfo"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #10
  br label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %11, i8* %13, i64 %15) #10
  br label %16

16:                                               ; preds = %7, %10
  %17 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %1, i64 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %25 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 24, i1 false) #10
  br label %31

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %17, i8* %28, i64 %30) #10
  br label %31

31:                                               ; preds = %23, %26
  %32 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %1, i64 0, i32 2
  %34 = bitcast %"class.std::__1::basic_string.1"* %33 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %34, i64 0, i32 1, i32 1
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %31
  %39 = bitcast %"class.std::__1::basic_string.1"* %32 to i8*
  %40 = bitcast %"class.std::__1::basic_string.1"* %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 24, i1 false) #10
  br label %216

41:                                               ; preds = %31
  %42 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i16*, i16** %42, align 8
  %44 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = icmp ult i64 %45, 11
  br i1 %46, label %47, label %52

47:                                               ; preds = %41
  %48 = bitcast %"class.std::__1::basic_string.1"* %32 to i16*
  %49 = trunc i64 %45 to i8
  %50 = bitcast %"class.std::__1::basic_string.1"* %32 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %50, i64 0, i32 1, i32 1
  store i8 %49, i8* %51, align 1
  br label %69

52:                                               ; preds = %41
  %53 = icmp ugt i64 %45, 9223372036854775791
  br i1 %53, label %54, label %56

54:                                               ; preds = %52
  %55 = bitcast %"class.std::__1::basic_string.1"* %32 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %55) #11
  unreachable

56:                                               ; preds = %52
  %57 = add nuw nsw i64 %45, 8
  %58 = and i64 %57, -8
  %59 = icmp slt i64 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %56
  tail call void @abort() #11
  unreachable

61:                                               ; preds = %56
  %62 = shl i64 %58, 1
  %63 = tail call i8* @_Znwm(i64 %62) #12
  %64 = bitcast i8* %63 to i16*
  %65 = bitcast %"class.std::__1::basic_string.1"* %32 to i8**
  store i8* %63, i8** %65, align 8
  %66 = or i64 %58, -9223372036854775808
  %67 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %66, i64* %67, align 8
  %68 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %45, i64* %68, align 8
  br label %69

69:                                               ; preds = %61, %47
  %70 = phi i16* [ %48, %47 ], [ %64, %61 ]
  %71 = add nuw nsw i64 %45, 1
  %72 = add i64 %45, 1
  %73 = icmp ult i64 %72, 16
  br i1 %73, label %163, label %74

74:                                               ; preds = %69
  %75 = add i64 %45, 1
  %76 = getelementptr i16, i16* %70, i64 %75
  %77 = getelementptr i16, i16* %43, i64 %75
  %78 = icmp ult i16* %70, %77
  %79 = icmp ult i16* %43, %76
  %80 = and i1 %78, %79
  br i1 %80, label %163, label %81

81:                                               ; preds = %74
  %82 = and i64 %72, -16
  %83 = sub i64 %71, %82
  %84 = getelementptr i16, i16* %43, i64 %82
  %85 = getelementptr i16, i16* %70, i64 %82
  %86 = add i64 %82, -16
  %87 = lshr exact i64 %86, 4
  %88 = add nuw nsw i64 %87, 1
  %89 = and i64 %88, 3
  %90 = icmp ult i64 %86, 48
  br i1 %90, label %142, label %91

91:                                               ; preds = %81
  %92 = sub nsw i64 %88, %89
  br label %93

93:                                               ; preds = %93, %91
  %94 = phi i64 [ 0, %91 ], [ %139, %93 ]
  %95 = phi i64 [ %92, %91 ], [ %140, %93 ]
  %96 = getelementptr i16, i16* %43, i64 %94
  %97 = getelementptr i16, i16* %70, i64 %94
  %98 = bitcast i16* %96 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !2
  %100 = getelementptr i16, i16* %96, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !2
  %103 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %103, align 2, !alias.scope !5, !noalias !2
  %104 = getelementptr i16, i16* %97, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %105, align 2, !alias.scope !5, !noalias !2
  %106 = or i64 %94, 16
  %107 = getelementptr i16, i16* %43, i64 %106
  %108 = getelementptr i16, i16* %70, i64 %106
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !2
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !2
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !5, !noalias !2
  %115 = getelementptr i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !5, !noalias !2
  %117 = or i64 %94, 32
  %118 = getelementptr i16, i16* %43, i64 %117
  %119 = getelementptr i16, i16* %70, i64 %117
  %120 = bitcast i16* %118 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !2
  %122 = getelementptr i16, i16* %118, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !2
  %125 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !5, !noalias !2
  %126 = getelementptr i16, i16* %119, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !5, !noalias !2
  %128 = or i64 %94, 48
  %129 = getelementptr i16, i16* %43, i64 %128
  %130 = getelementptr i16, i16* %70, i64 %128
  %131 = bitcast i16* %129 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !2
  %133 = getelementptr i16, i16* %129, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !2
  %136 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %136, align 2, !alias.scope !5, !noalias !2
  %137 = getelementptr i16, i16* %130, i64 8
  %138 = bitcast i16* %137 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %138, align 2, !alias.scope !5, !noalias !2
  %139 = add i64 %94, 64
  %140 = add i64 %95, -4
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %93, !llvm.loop !7

142:                                              ; preds = %93, %81
  %143 = phi i64 [ 0, %81 ], [ %139, %93 ]
  %144 = icmp eq i64 %89, 0
  br i1 %144, label %161, label %145

145:                                              ; preds = %142, %145
  %146 = phi i64 [ %158, %145 ], [ %143, %142 ]
  %147 = phi i64 [ %159, %145 ], [ %89, %142 ]
  %148 = getelementptr i16, i16* %43, i64 %146
  %149 = getelementptr i16, i16* %70, i64 %146
  %150 = bitcast i16* %148 to <8 x i16>*
  %151 = load <8 x i16>, <8 x i16>* %150, align 2, !alias.scope !2
  %152 = getelementptr i16, i16* %148, i64 8
  %153 = bitcast i16* %152 to <8 x i16>*
  %154 = load <8 x i16>, <8 x i16>* %153, align 2, !alias.scope !2
  %155 = bitcast i16* %149 to <8 x i16>*
  store <8 x i16> %151, <8 x i16>* %155, align 2, !alias.scope !5, !noalias !2
  %156 = getelementptr i16, i16* %149, i64 8
  %157 = bitcast i16* %156 to <8 x i16>*
  store <8 x i16> %154, <8 x i16>* %157, align 2, !alias.scope !5, !noalias !2
  %158 = add i64 %146, 16
  %159 = add i64 %147, -1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %145, !llvm.loop !9

161:                                              ; preds = %145, %142
  %162 = icmp eq i64 %72, %82
  br i1 %162, label %216, label %163

163:                                              ; preds = %161, %74, %69
  %164 = phi i64 [ %71, %74 ], [ %71, %69 ], [ %83, %161 ]
  %165 = phi i16* [ %43, %74 ], [ %43, %69 ], [ %84, %161 ]
  %166 = phi i16* [ %70, %74 ], [ %70, %69 ], [ %85, %161 ]
  %167 = add i64 %164, -1
  %168 = and i64 %164, 7
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %181, label %170

170:                                              ; preds = %163, %170
  %171 = phi i64 [ %176, %170 ], [ %164, %163 ]
  %172 = phi i16* [ %178, %170 ], [ %165, %163 ]
  %173 = phi i16* [ %177, %170 ], [ %166, %163 ]
  %174 = phi i64 [ %179, %170 ], [ %168, %163 ]
  %175 = load i16, i16* %172, align 2
  store i16 %175, i16* %173, align 2
  %176 = add i64 %171, -1
  %177 = getelementptr inbounds i16, i16* %173, i64 1
  %178 = getelementptr inbounds i16, i16* %172, i64 1
  %179 = add i64 %174, -1
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %170, !llvm.loop !11

181:                                              ; preds = %170, %163
  %182 = phi i64 [ %164, %163 ], [ %176, %170 ]
  %183 = phi i16* [ %165, %163 ], [ %178, %170 ]
  %184 = phi i16* [ %166, %163 ], [ %177, %170 ]
  %185 = icmp ult i64 %167, 7
  br i1 %185, label %216, label %186

186:                                              ; preds = %181, %186
  %187 = phi i64 [ %212, %186 ], [ %182, %181 ]
  %188 = phi i16* [ %214, %186 ], [ %183, %181 ]
  %189 = phi i16* [ %213, %186 ], [ %184, %181 ]
  %190 = load i16, i16* %188, align 2
  store i16 %190, i16* %189, align 2
  %191 = getelementptr inbounds i16, i16* %189, i64 1
  %192 = getelementptr inbounds i16, i16* %188, i64 1
  %193 = load i16, i16* %192, align 2
  store i16 %193, i16* %191, align 2
  %194 = getelementptr inbounds i16, i16* %189, i64 2
  %195 = getelementptr inbounds i16, i16* %188, i64 2
  %196 = load i16, i16* %195, align 2
  store i16 %196, i16* %194, align 2
  %197 = getelementptr inbounds i16, i16* %189, i64 3
  %198 = getelementptr inbounds i16, i16* %188, i64 3
  %199 = load i16, i16* %198, align 2
  store i16 %199, i16* %197, align 2
  %200 = getelementptr inbounds i16, i16* %189, i64 4
  %201 = getelementptr inbounds i16, i16* %188, i64 4
  %202 = load i16, i16* %201, align 2
  store i16 %202, i16* %200, align 2
  %203 = getelementptr inbounds i16, i16* %189, i64 5
  %204 = getelementptr inbounds i16, i16* %188, i64 5
  %205 = load i16, i16* %204, align 2
  store i16 %205, i16* %203, align 2
  %206 = getelementptr inbounds i16, i16* %189, i64 6
  %207 = getelementptr inbounds i16, i16* %188, i64 6
  %208 = load i16, i16* %207, align 2
  store i16 %208, i16* %206, align 2
  %209 = getelementptr inbounds i16, i16* %189, i64 7
  %210 = getelementptr inbounds i16, i16* %188, i64 7
  %211 = load i16, i16* %210, align 2
  store i16 %211, i16* %209, align 2
  %212 = add i64 %187, -8
  %213 = getelementptr inbounds i16, i16* %189, i64 8
  %214 = getelementptr inbounds i16, i16* %188, i64 8
  %215 = icmp eq i64 %212, 0
  br i1 %215, label %216, label %186, !llvm.loop !12

216:                                              ; preds = %181, %186, %161, %38
  %217 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %0, i64 0, i32 3
  %218 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %1, i64 0, i32 3
  %219 = bitcast %"class.std::__1::basic_string.1"* %218 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %220 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %219, i64 0, i32 1, i32 1
  %221 = load i8, i8* %220, align 1
  %222 = icmp slt i8 %221, 0
  br i1 %222, label %226, label %223

223:                                              ; preds = %216
  %224 = bitcast %"class.std::__1::basic_string.1"* %217 to i8*
  %225 = bitcast %"class.std::__1::basic_string.1"* %218 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %224, i8* align 8 %225, i64 24, i1 false) #10
  br label %401

226:                                              ; preds = %216
  %227 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %218, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %228 = load i16*, i16** %227, align 8
  %229 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %230 = load i64, i64* %229, align 8
  %231 = icmp ult i64 %230, 11
  br i1 %231, label %232, label %237

232:                                              ; preds = %226
  %233 = bitcast %"class.std::__1::basic_string.1"* %217 to i16*
  %234 = trunc i64 %230 to i8
  %235 = bitcast %"class.std::__1::basic_string.1"* %217 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %236 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %235, i64 0, i32 1, i32 1
  store i8 %234, i8* %236, align 1
  br label %254

237:                                              ; preds = %226
  %238 = icmp ugt i64 %230, 9223372036854775791
  br i1 %238, label %239, label %241

239:                                              ; preds = %237
  %240 = bitcast %"class.std::__1::basic_string.1"* %217 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %240) #11
  unreachable

241:                                              ; preds = %237
  %242 = add nuw nsw i64 %230, 8
  %243 = and i64 %242, -8
  %244 = icmp slt i64 %243, 0
  br i1 %244, label %245, label %246

245:                                              ; preds = %241
  tail call void @abort() #11
  unreachable

246:                                              ; preds = %241
  %247 = shl i64 %243, 1
  %248 = tail call i8* @_Znwm(i64 %247) #12
  %249 = bitcast i8* %248 to i16*
  %250 = bitcast %"class.std::__1::basic_string.1"* %217 to i8**
  store i8* %248, i8** %250, align 8
  %251 = or i64 %243, -9223372036854775808
  %252 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %251, i64* %252, align 8
  %253 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %230, i64* %253, align 8
  br label %254

254:                                              ; preds = %246, %232
  %255 = phi i16* [ %233, %232 ], [ %249, %246 ]
  %256 = add nuw nsw i64 %230, 1
  %257 = add i64 %230, 1
  %258 = icmp ult i64 %257, 16
  br i1 %258, label %348, label %259

259:                                              ; preds = %254
  %260 = add i64 %230, 1
  %261 = getelementptr i16, i16* %255, i64 %260
  %262 = getelementptr i16, i16* %228, i64 %260
  %263 = icmp ult i16* %255, %262
  %264 = icmp ult i16* %228, %261
  %265 = and i1 %263, %264
  br i1 %265, label %348, label %266

266:                                              ; preds = %259
  %267 = and i64 %257, -16
  %268 = sub i64 %256, %267
  %269 = getelementptr i16, i16* %228, i64 %267
  %270 = getelementptr i16, i16* %255, i64 %267
  %271 = add i64 %267, -16
  %272 = lshr exact i64 %271, 4
  %273 = add nuw nsw i64 %272, 1
  %274 = and i64 %273, 3
  %275 = icmp ult i64 %271, 48
  br i1 %275, label %327, label %276

276:                                              ; preds = %266
  %277 = sub nsw i64 %273, %274
  br label %278

278:                                              ; preds = %278, %276
  %279 = phi i64 [ 0, %276 ], [ %324, %278 ]
  %280 = phi i64 [ %277, %276 ], [ %325, %278 ]
  %281 = getelementptr i16, i16* %228, i64 %279
  %282 = getelementptr i16, i16* %255, i64 %279
  %283 = bitcast i16* %281 to <8 x i16>*
  %284 = load <8 x i16>, <8 x i16>* %283, align 2, !alias.scope !13
  %285 = getelementptr i16, i16* %281, i64 8
  %286 = bitcast i16* %285 to <8 x i16>*
  %287 = load <8 x i16>, <8 x i16>* %286, align 2, !alias.scope !13
  %288 = bitcast i16* %282 to <8 x i16>*
  store <8 x i16> %284, <8 x i16>* %288, align 2, !alias.scope !16, !noalias !13
  %289 = getelementptr i16, i16* %282, i64 8
  %290 = bitcast i16* %289 to <8 x i16>*
  store <8 x i16> %287, <8 x i16>* %290, align 2, !alias.scope !16, !noalias !13
  %291 = or i64 %279, 16
  %292 = getelementptr i16, i16* %228, i64 %291
  %293 = getelementptr i16, i16* %255, i64 %291
  %294 = bitcast i16* %292 to <8 x i16>*
  %295 = load <8 x i16>, <8 x i16>* %294, align 2, !alias.scope !13
  %296 = getelementptr i16, i16* %292, i64 8
  %297 = bitcast i16* %296 to <8 x i16>*
  %298 = load <8 x i16>, <8 x i16>* %297, align 2, !alias.scope !13
  %299 = bitcast i16* %293 to <8 x i16>*
  store <8 x i16> %295, <8 x i16>* %299, align 2, !alias.scope !16, !noalias !13
  %300 = getelementptr i16, i16* %293, i64 8
  %301 = bitcast i16* %300 to <8 x i16>*
  store <8 x i16> %298, <8 x i16>* %301, align 2, !alias.scope !16, !noalias !13
  %302 = or i64 %279, 32
  %303 = getelementptr i16, i16* %228, i64 %302
  %304 = getelementptr i16, i16* %255, i64 %302
  %305 = bitcast i16* %303 to <8 x i16>*
  %306 = load <8 x i16>, <8 x i16>* %305, align 2, !alias.scope !13
  %307 = getelementptr i16, i16* %303, i64 8
  %308 = bitcast i16* %307 to <8 x i16>*
  %309 = load <8 x i16>, <8 x i16>* %308, align 2, !alias.scope !13
  %310 = bitcast i16* %304 to <8 x i16>*
  store <8 x i16> %306, <8 x i16>* %310, align 2, !alias.scope !16, !noalias !13
  %311 = getelementptr i16, i16* %304, i64 8
  %312 = bitcast i16* %311 to <8 x i16>*
  store <8 x i16> %309, <8 x i16>* %312, align 2, !alias.scope !16, !noalias !13
  %313 = or i64 %279, 48
  %314 = getelementptr i16, i16* %228, i64 %313
  %315 = getelementptr i16, i16* %255, i64 %313
  %316 = bitcast i16* %314 to <8 x i16>*
  %317 = load <8 x i16>, <8 x i16>* %316, align 2, !alias.scope !13
  %318 = getelementptr i16, i16* %314, i64 8
  %319 = bitcast i16* %318 to <8 x i16>*
  %320 = load <8 x i16>, <8 x i16>* %319, align 2, !alias.scope !13
  %321 = bitcast i16* %315 to <8 x i16>*
  store <8 x i16> %317, <8 x i16>* %321, align 2, !alias.scope !16, !noalias !13
  %322 = getelementptr i16, i16* %315, i64 8
  %323 = bitcast i16* %322 to <8 x i16>*
  store <8 x i16> %320, <8 x i16>* %323, align 2, !alias.scope !16, !noalias !13
  %324 = add i64 %279, 64
  %325 = add i64 %280, -4
  %326 = icmp eq i64 %325, 0
  br i1 %326, label %327, label %278, !llvm.loop !18

327:                                              ; preds = %278, %266
  %328 = phi i64 [ 0, %266 ], [ %324, %278 ]
  %329 = icmp eq i64 %274, 0
  br i1 %329, label %346, label %330

330:                                              ; preds = %327, %330
  %331 = phi i64 [ %343, %330 ], [ %328, %327 ]
  %332 = phi i64 [ %344, %330 ], [ %274, %327 ]
  %333 = getelementptr i16, i16* %228, i64 %331
  %334 = getelementptr i16, i16* %255, i64 %331
  %335 = bitcast i16* %333 to <8 x i16>*
  %336 = load <8 x i16>, <8 x i16>* %335, align 2, !alias.scope !13
  %337 = getelementptr i16, i16* %333, i64 8
  %338 = bitcast i16* %337 to <8 x i16>*
  %339 = load <8 x i16>, <8 x i16>* %338, align 2, !alias.scope !13
  %340 = bitcast i16* %334 to <8 x i16>*
  store <8 x i16> %336, <8 x i16>* %340, align 2, !alias.scope !16, !noalias !13
  %341 = getelementptr i16, i16* %334, i64 8
  %342 = bitcast i16* %341 to <8 x i16>*
  store <8 x i16> %339, <8 x i16>* %342, align 2, !alias.scope !16, !noalias !13
  %343 = add i64 %331, 16
  %344 = add i64 %332, -1
  %345 = icmp eq i64 %344, 0
  br i1 %345, label %346, label %330, !llvm.loop !19

346:                                              ; preds = %330, %327
  %347 = icmp eq i64 %257, %267
  br i1 %347, label %401, label %348

348:                                              ; preds = %346, %259, %254
  %349 = phi i64 [ %256, %259 ], [ %256, %254 ], [ %268, %346 ]
  %350 = phi i16* [ %228, %259 ], [ %228, %254 ], [ %269, %346 ]
  %351 = phi i16* [ %255, %259 ], [ %255, %254 ], [ %270, %346 ]
  %352 = add i64 %349, -1
  %353 = and i64 %349, 7
  %354 = icmp eq i64 %353, 0
  br i1 %354, label %366, label %355

355:                                              ; preds = %348, %355
  %356 = phi i64 [ %361, %355 ], [ %349, %348 ]
  %357 = phi i16* [ %363, %355 ], [ %350, %348 ]
  %358 = phi i16* [ %362, %355 ], [ %351, %348 ]
  %359 = phi i64 [ %364, %355 ], [ %353, %348 ]
  %360 = load i16, i16* %357, align 2
  store i16 %360, i16* %358, align 2
  %361 = add i64 %356, -1
  %362 = getelementptr inbounds i16, i16* %358, i64 1
  %363 = getelementptr inbounds i16, i16* %357, i64 1
  %364 = add i64 %359, -1
  %365 = icmp eq i64 %364, 0
  br i1 %365, label %366, label %355, !llvm.loop !20

366:                                              ; preds = %355, %348
  %367 = phi i64 [ %349, %348 ], [ %361, %355 ]
  %368 = phi i16* [ %350, %348 ], [ %363, %355 ]
  %369 = phi i16* [ %351, %348 ], [ %362, %355 ]
  %370 = icmp ult i64 %352, 7
  br i1 %370, label %401, label %371

371:                                              ; preds = %366, %371
  %372 = phi i64 [ %397, %371 ], [ %367, %366 ]
  %373 = phi i16* [ %399, %371 ], [ %368, %366 ]
  %374 = phi i16* [ %398, %371 ], [ %369, %366 ]
  %375 = load i16, i16* %373, align 2
  store i16 %375, i16* %374, align 2
  %376 = getelementptr inbounds i16, i16* %374, i64 1
  %377 = getelementptr inbounds i16, i16* %373, i64 1
  %378 = load i16, i16* %377, align 2
  store i16 %378, i16* %376, align 2
  %379 = getelementptr inbounds i16, i16* %374, i64 2
  %380 = getelementptr inbounds i16, i16* %373, i64 2
  %381 = load i16, i16* %380, align 2
  store i16 %381, i16* %379, align 2
  %382 = getelementptr inbounds i16, i16* %374, i64 3
  %383 = getelementptr inbounds i16, i16* %373, i64 3
  %384 = load i16, i16* %383, align 2
  store i16 %384, i16* %382, align 2
  %385 = getelementptr inbounds i16, i16* %374, i64 4
  %386 = getelementptr inbounds i16, i16* %373, i64 4
  %387 = load i16, i16* %386, align 2
  store i16 %387, i16* %385, align 2
  %388 = getelementptr inbounds i16, i16* %374, i64 5
  %389 = getelementptr inbounds i16, i16* %373, i64 5
  %390 = load i16, i16* %389, align 2
  store i16 %390, i16* %388, align 2
  %391 = getelementptr inbounds i16, i16* %374, i64 6
  %392 = getelementptr inbounds i16, i16* %373, i64 6
  %393 = load i16, i16* %392, align 2
  store i16 %393, i16* %391, align 2
  %394 = getelementptr inbounds i16, i16* %374, i64 7
  %395 = getelementptr inbounds i16, i16* %373, i64 7
  %396 = load i16, i16* %395, align 2
  store i16 %396, i16* %394, align 2
  %397 = add i64 %372, -8
  %398 = getelementptr inbounds i16, i16* %374, i64 8
  %399 = getelementptr inbounds i16, i16* %373, i64 8
  %400 = icmp eq i64 %397, 0
  br i1 %400, label %401, label %371, !llvm.loop !21

401:                                              ; preds = %366, %371, %346, %223
  %402 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %0, i64 0, i32 4
  %403 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %1, i64 0, i32 4
  %404 = bitcast %"class.std::__1::basic_string.1"* %403 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %405 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %404, i64 0, i32 1, i32 1
  %406 = load i8, i8* %405, align 1
  %407 = icmp slt i8 %406, 0
  br i1 %407, label %411, label %408

408:                                              ; preds = %401
  %409 = bitcast %"class.std::__1::basic_string.1"* %402 to i8*
  %410 = bitcast %"class.std::__1::basic_string.1"* %403 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %409, i8* align 8 %410, i64 24, i1 false) #10
  br label %586

411:                                              ; preds = %401
  %412 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %403, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %413 = load i16*, i16** %412, align 8
  %414 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %415 = load i64, i64* %414, align 8
  %416 = icmp ult i64 %415, 11
  br i1 %416, label %417, label %422

417:                                              ; preds = %411
  %418 = bitcast %"class.std::__1::basic_string.1"* %402 to i16*
  %419 = trunc i64 %415 to i8
  %420 = bitcast %"class.std::__1::basic_string.1"* %402 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %421 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %420, i64 0, i32 1, i32 1
  store i8 %419, i8* %421, align 1
  br label %439

422:                                              ; preds = %411
  %423 = icmp ugt i64 %415, 9223372036854775791
  br i1 %423, label %424, label %426

424:                                              ; preds = %422
  %425 = bitcast %"class.std::__1::basic_string.1"* %402 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %425) #11
  unreachable

426:                                              ; preds = %422
  %427 = add nuw nsw i64 %415, 8
  %428 = and i64 %427, -8
  %429 = icmp slt i64 %428, 0
  br i1 %429, label %430, label %431

430:                                              ; preds = %426
  tail call void @abort() #11
  unreachable

431:                                              ; preds = %426
  %432 = shl i64 %428, 1
  %433 = tail call i8* @_Znwm(i64 %432) #12
  %434 = bitcast i8* %433 to i16*
  %435 = bitcast %"class.std::__1::basic_string.1"* %402 to i8**
  store i8* %433, i8** %435, align 8
  %436 = or i64 %428, -9223372036854775808
  %437 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %436, i64* %437, align 8
  %438 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %415, i64* %438, align 8
  br label %439

439:                                              ; preds = %431, %417
  %440 = phi i16* [ %418, %417 ], [ %434, %431 ]
  %441 = add nuw nsw i64 %415, 1
  %442 = add i64 %415, 1
  %443 = icmp ult i64 %442, 16
  br i1 %443, label %533, label %444

444:                                              ; preds = %439
  %445 = add i64 %415, 1
  %446 = getelementptr i16, i16* %440, i64 %445
  %447 = getelementptr i16, i16* %413, i64 %445
  %448 = icmp ult i16* %440, %447
  %449 = icmp ult i16* %413, %446
  %450 = and i1 %448, %449
  br i1 %450, label %533, label %451

451:                                              ; preds = %444
  %452 = and i64 %442, -16
  %453 = sub i64 %441, %452
  %454 = getelementptr i16, i16* %413, i64 %452
  %455 = getelementptr i16, i16* %440, i64 %452
  %456 = add i64 %452, -16
  %457 = lshr exact i64 %456, 4
  %458 = add nuw nsw i64 %457, 1
  %459 = and i64 %458, 3
  %460 = icmp ult i64 %456, 48
  br i1 %460, label %512, label %461

461:                                              ; preds = %451
  %462 = sub nsw i64 %458, %459
  br label %463

463:                                              ; preds = %463, %461
  %464 = phi i64 [ 0, %461 ], [ %509, %463 ]
  %465 = phi i64 [ %462, %461 ], [ %510, %463 ]
  %466 = getelementptr i16, i16* %413, i64 %464
  %467 = getelementptr i16, i16* %440, i64 %464
  %468 = bitcast i16* %466 to <8 x i16>*
  %469 = load <8 x i16>, <8 x i16>* %468, align 2, !alias.scope !22
  %470 = getelementptr i16, i16* %466, i64 8
  %471 = bitcast i16* %470 to <8 x i16>*
  %472 = load <8 x i16>, <8 x i16>* %471, align 2, !alias.scope !22
  %473 = bitcast i16* %467 to <8 x i16>*
  store <8 x i16> %469, <8 x i16>* %473, align 2, !alias.scope !25, !noalias !22
  %474 = getelementptr i16, i16* %467, i64 8
  %475 = bitcast i16* %474 to <8 x i16>*
  store <8 x i16> %472, <8 x i16>* %475, align 2, !alias.scope !25, !noalias !22
  %476 = or i64 %464, 16
  %477 = getelementptr i16, i16* %413, i64 %476
  %478 = getelementptr i16, i16* %440, i64 %476
  %479 = bitcast i16* %477 to <8 x i16>*
  %480 = load <8 x i16>, <8 x i16>* %479, align 2, !alias.scope !22
  %481 = getelementptr i16, i16* %477, i64 8
  %482 = bitcast i16* %481 to <8 x i16>*
  %483 = load <8 x i16>, <8 x i16>* %482, align 2, !alias.scope !22
  %484 = bitcast i16* %478 to <8 x i16>*
  store <8 x i16> %480, <8 x i16>* %484, align 2, !alias.scope !25, !noalias !22
  %485 = getelementptr i16, i16* %478, i64 8
  %486 = bitcast i16* %485 to <8 x i16>*
  store <8 x i16> %483, <8 x i16>* %486, align 2, !alias.scope !25, !noalias !22
  %487 = or i64 %464, 32
  %488 = getelementptr i16, i16* %413, i64 %487
  %489 = getelementptr i16, i16* %440, i64 %487
  %490 = bitcast i16* %488 to <8 x i16>*
  %491 = load <8 x i16>, <8 x i16>* %490, align 2, !alias.scope !22
  %492 = getelementptr i16, i16* %488, i64 8
  %493 = bitcast i16* %492 to <8 x i16>*
  %494 = load <8 x i16>, <8 x i16>* %493, align 2, !alias.scope !22
  %495 = bitcast i16* %489 to <8 x i16>*
  store <8 x i16> %491, <8 x i16>* %495, align 2, !alias.scope !25, !noalias !22
  %496 = getelementptr i16, i16* %489, i64 8
  %497 = bitcast i16* %496 to <8 x i16>*
  store <8 x i16> %494, <8 x i16>* %497, align 2, !alias.scope !25, !noalias !22
  %498 = or i64 %464, 48
  %499 = getelementptr i16, i16* %413, i64 %498
  %500 = getelementptr i16, i16* %440, i64 %498
  %501 = bitcast i16* %499 to <8 x i16>*
  %502 = load <8 x i16>, <8 x i16>* %501, align 2, !alias.scope !22
  %503 = getelementptr i16, i16* %499, i64 8
  %504 = bitcast i16* %503 to <8 x i16>*
  %505 = load <8 x i16>, <8 x i16>* %504, align 2, !alias.scope !22
  %506 = bitcast i16* %500 to <8 x i16>*
  store <8 x i16> %502, <8 x i16>* %506, align 2, !alias.scope !25, !noalias !22
  %507 = getelementptr i16, i16* %500, i64 8
  %508 = bitcast i16* %507 to <8 x i16>*
  store <8 x i16> %505, <8 x i16>* %508, align 2, !alias.scope !25, !noalias !22
  %509 = add i64 %464, 64
  %510 = add i64 %465, -4
  %511 = icmp eq i64 %510, 0
  br i1 %511, label %512, label %463, !llvm.loop !27

512:                                              ; preds = %463, %451
  %513 = phi i64 [ 0, %451 ], [ %509, %463 ]
  %514 = icmp eq i64 %459, 0
  br i1 %514, label %531, label %515

515:                                              ; preds = %512, %515
  %516 = phi i64 [ %528, %515 ], [ %513, %512 ]
  %517 = phi i64 [ %529, %515 ], [ %459, %512 ]
  %518 = getelementptr i16, i16* %413, i64 %516
  %519 = getelementptr i16, i16* %440, i64 %516
  %520 = bitcast i16* %518 to <8 x i16>*
  %521 = load <8 x i16>, <8 x i16>* %520, align 2, !alias.scope !22
  %522 = getelementptr i16, i16* %518, i64 8
  %523 = bitcast i16* %522 to <8 x i16>*
  %524 = load <8 x i16>, <8 x i16>* %523, align 2, !alias.scope !22
  %525 = bitcast i16* %519 to <8 x i16>*
  store <8 x i16> %521, <8 x i16>* %525, align 2, !alias.scope !25, !noalias !22
  %526 = getelementptr i16, i16* %519, i64 8
  %527 = bitcast i16* %526 to <8 x i16>*
  store <8 x i16> %524, <8 x i16>* %527, align 2, !alias.scope !25, !noalias !22
  %528 = add i64 %516, 16
  %529 = add i64 %517, -1
  %530 = icmp eq i64 %529, 0
  br i1 %530, label %531, label %515, !llvm.loop !28

531:                                              ; preds = %515, %512
  %532 = icmp eq i64 %442, %452
  br i1 %532, label %586, label %533

533:                                              ; preds = %531, %444, %439
  %534 = phi i64 [ %441, %444 ], [ %441, %439 ], [ %453, %531 ]
  %535 = phi i16* [ %413, %444 ], [ %413, %439 ], [ %454, %531 ]
  %536 = phi i16* [ %440, %444 ], [ %440, %439 ], [ %455, %531 ]
  %537 = add i64 %534, -1
  %538 = and i64 %534, 7
  %539 = icmp eq i64 %538, 0
  br i1 %539, label %551, label %540

540:                                              ; preds = %533, %540
  %541 = phi i64 [ %546, %540 ], [ %534, %533 ]
  %542 = phi i16* [ %548, %540 ], [ %535, %533 ]
  %543 = phi i16* [ %547, %540 ], [ %536, %533 ]
  %544 = phi i64 [ %549, %540 ], [ %538, %533 ]
  %545 = load i16, i16* %542, align 2
  store i16 %545, i16* %543, align 2
  %546 = add i64 %541, -1
  %547 = getelementptr inbounds i16, i16* %543, i64 1
  %548 = getelementptr inbounds i16, i16* %542, i64 1
  %549 = add i64 %544, -1
  %550 = icmp eq i64 %549, 0
  br i1 %550, label %551, label %540, !llvm.loop !29

551:                                              ; preds = %540, %533
  %552 = phi i64 [ %534, %533 ], [ %546, %540 ]
  %553 = phi i16* [ %535, %533 ], [ %548, %540 ]
  %554 = phi i16* [ %536, %533 ], [ %547, %540 ]
  %555 = icmp ult i64 %537, 7
  br i1 %555, label %586, label %556

556:                                              ; preds = %551, %556
  %557 = phi i64 [ %582, %556 ], [ %552, %551 ]
  %558 = phi i16* [ %584, %556 ], [ %553, %551 ]
  %559 = phi i16* [ %583, %556 ], [ %554, %551 ]
  %560 = load i16, i16* %558, align 2
  store i16 %560, i16* %559, align 2
  %561 = getelementptr inbounds i16, i16* %559, i64 1
  %562 = getelementptr inbounds i16, i16* %558, i64 1
  %563 = load i16, i16* %562, align 2
  store i16 %563, i16* %561, align 2
  %564 = getelementptr inbounds i16, i16* %559, i64 2
  %565 = getelementptr inbounds i16, i16* %558, i64 2
  %566 = load i16, i16* %565, align 2
  store i16 %566, i16* %564, align 2
  %567 = getelementptr inbounds i16, i16* %559, i64 3
  %568 = getelementptr inbounds i16, i16* %558, i64 3
  %569 = load i16, i16* %568, align 2
  store i16 %569, i16* %567, align 2
  %570 = getelementptr inbounds i16, i16* %559, i64 4
  %571 = getelementptr inbounds i16, i16* %558, i64 4
  %572 = load i16, i16* %571, align 2
  store i16 %572, i16* %570, align 2
  %573 = getelementptr inbounds i16, i16* %559, i64 5
  %574 = getelementptr inbounds i16, i16* %558, i64 5
  %575 = load i16, i16* %574, align 2
  store i16 %575, i16* %573, align 2
  %576 = getelementptr inbounds i16, i16* %559, i64 6
  %577 = getelementptr inbounds i16, i16* %558, i64 6
  %578 = load i16, i16* %577, align 2
  store i16 %578, i16* %576, align 2
  %579 = getelementptr inbounds i16, i16* %559, i64 7
  %580 = getelementptr inbounds i16, i16* %558, i64 7
  %581 = load i16, i16* %580, align 2
  store i16 %581, i16* %579, align 2
  %582 = add i64 %557, -8
  %583 = getelementptr inbounds i16, i16* %559, i64 8
  %584 = getelementptr inbounds i16, i16* %558, i64 8
  %585 = icmp eq i64 %582, 0
  br i1 %585, label %586, label %556, !llvm.loop !30

586:                                              ; preds = %551, %556, %531, %408
  %587 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %0, i64 0, i32 5
  %588 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %1, i64 0, i32 5
  %589 = load i64, i64* %588, align 8
  store i64 %589, i64* %587, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15storage_monitor11StorageInfoC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_RKNS2_IDsNS3_IDsEENS5_IDsEEEESE_SE_m(%"class.storage_monitor::StorageInfo"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string.1"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string.1"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string.1"* nocapture readonly dereferenceable(24), i64) unnamed_addr #0 align 2 {
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.storage_monitor::StorageInfo"* %0 to i8*
  %14 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false) #10
  br label %21

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %0, i64 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %16, i8* %18, i64 %20) #10
  br label %21

21:                                               ; preds = %12, %15
  %22 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %0, i64 0, i32 1
  %23 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  %29 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 24, i1 false) #10
  br label %35

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %22, i8* %32, i64 %34) #10
  br label %35

35:                                               ; preds = %27, %30
  %36 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %0, i64 0, i32 2
  %37 = bitcast %"class.std::__1::basic_string.1"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %37, i64 0, i32 1, i32 1
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.std::__1::basic_string.1"* %36 to i8*
  %43 = bitcast %"class.std::__1::basic_string.1"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #10
  br label %219

44:                                               ; preds = %35
  %45 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i16*, i16** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = icmp ult i64 %48, 11
  br i1 %49, label %50, label %55

50:                                               ; preds = %44
  %51 = bitcast %"class.std::__1::basic_string.1"* %36 to i16*
  %52 = trunc i64 %48 to i8
  %53 = bitcast %"class.std::__1::basic_string.1"* %36 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %53, i64 0, i32 1, i32 1
  store i8 %52, i8* %54, align 1
  br label %72

55:                                               ; preds = %44
  %56 = icmp ugt i64 %48, 9223372036854775791
  br i1 %56, label %57, label %59

57:                                               ; preds = %55
  %58 = bitcast %"class.std::__1::basic_string.1"* %36 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %58) #11
  unreachable

59:                                               ; preds = %55
  %60 = add nuw nsw i64 %48, 8
  %61 = and i64 %60, -8
  %62 = icmp slt i64 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %59
  tail call void @abort() #11
  unreachable

64:                                               ; preds = %59
  %65 = shl i64 %61, 1
  %66 = tail call i8* @_Znwm(i64 %65) #12
  %67 = bitcast i8* %66 to i16*
  %68 = bitcast %"class.std::__1::basic_string.1"* %36 to i8**
  store i8* %66, i8** %68, align 8
  %69 = or i64 %61, -9223372036854775808
  %70 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %69, i64* %70, align 8
  %71 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %48, i64* %71, align 8
  br label %72

72:                                               ; preds = %64, %50
  %73 = phi i16* [ %51, %50 ], [ %67, %64 ]
  %74 = add nuw nsw i64 %48, 1
  %75 = add i64 %48, 1
  %76 = icmp ult i64 %75, 16
  br i1 %76, label %166, label %77

77:                                               ; preds = %72
  %78 = add i64 %48, 1
  %79 = getelementptr i16, i16* %73, i64 %78
  %80 = getelementptr i16, i16* %46, i64 %78
  %81 = icmp ult i16* %73, %80
  %82 = icmp ult i16* %46, %79
  %83 = and i1 %81, %82
  br i1 %83, label %166, label %84

84:                                               ; preds = %77
  %85 = and i64 %75, -16
  %86 = sub i64 %74, %85
  %87 = getelementptr i16, i16* %46, i64 %85
  %88 = getelementptr i16, i16* %73, i64 %85
  %89 = add i64 %85, -16
  %90 = lshr exact i64 %89, 4
  %91 = add nuw nsw i64 %90, 1
  %92 = and i64 %91, 3
  %93 = icmp ult i64 %89, 48
  br i1 %93, label %145, label %94

94:                                               ; preds = %84
  %95 = sub nsw i64 %91, %92
  br label %96

96:                                               ; preds = %96, %94
  %97 = phi i64 [ 0, %94 ], [ %142, %96 ]
  %98 = phi i64 [ %95, %94 ], [ %143, %96 ]
  %99 = getelementptr i16, i16* %46, i64 %97
  %100 = getelementptr i16, i16* %73, i64 %97
  %101 = bitcast i16* %99 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !31
  %103 = getelementptr i16, i16* %99, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !31
  %106 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %106, align 2, !alias.scope !34, !noalias !31
  %107 = getelementptr i16, i16* %100, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %108, align 2, !alias.scope !34, !noalias !31
  %109 = or i64 %97, 16
  %110 = getelementptr i16, i16* %46, i64 %109
  %111 = getelementptr i16, i16* %73, i64 %109
  %112 = bitcast i16* %110 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !31
  %114 = getelementptr i16, i16* %110, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  %116 = load <8 x i16>, <8 x i16>* %115, align 2, !alias.scope !31
  %117 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %117, align 2, !alias.scope !34, !noalias !31
  %118 = getelementptr i16, i16* %111, i64 8
  %119 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %119, align 2, !alias.scope !34, !noalias !31
  %120 = or i64 %97, 32
  %121 = getelementptr i16, i16* %46, i64 %120
  %122 = getelementptr i16, i16* %73, i64 %120
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !31
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !31
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !34, !noalias !31
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !34, !noalias !31
  %131 = or i64 %97, 48
  %132 = getelementptr i16, i16* %46, i64 %131
  %133 = getelementptr i16, i16* %73, i64 %131
  %134 = bitcast i16* %132 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !31
  %136 = getelementptr i16, i16* %132, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  %138 = load <8 x i16>, <8 x i16>* %137, align 2, !alias.scope !31
  %139 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %139, align 2, !alias.scope !34, !noalias !31
  %140 = getelementptr i16, i16* %133, i64 8
  %141 = bitcast i16* %140 to <8 x i16>*
  store <8 x i16> %138, <8 x i16>* %141, align 2, !alias.scope !34, !noalias !31
  %142 = add i64 %97, 64
  %143 = add i64 %98, -4
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %145, label %96, !llvm.loop !36

145:                                              ; preds = %96, %84
  %146 = phi i64 [ 0, %84 ], [ %142, %96 ]
  %147 = icmp eq i64 %92, 0
  br i1 %147, label %164, label %148

148:                                              ; preds = %145, %148
  %149 = phi i64 [ %161, %148 ], [ %146, %145 ]
  %150 = phi i64 [ %162, %148 ], [ %92, %145 ]
  %151 = getelementptr i16, i16* %46, i64 %149
  %152 = getelementptr i16, i16* %73, i64 %149
  %153 = bitcast i16* %151 to <8 x i16>*
  %154 = load <8 x i16>, <8 x i16>* %153, align 2, !alias.scope !31
  %155 = getelementptr i16, i16* %151, i64 8
  %156 = bitcast i16* %155 to <8 x i16>*
  %157 = load <8 x i16>, <8 x i16>* %156, align 2, !alias.scope !31
  %158 = bitcast i16* %152 to <8 x i16>*
  store <8 x i16> %154, <8 x i16>* %158, align 2, !alias.scope !34, !noalias !31
  %159 = getelementptr i16, i16* %152, i64 8
  %160 = bitcast i16* %159 to <8 x i16>*
  store <8 x i16> %157, <8 x i16>* %160, align 2, !alias.scope !34, !noalias !31
  %161 = add i64 %149, 16
  %162 = add i64 %150, -1
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %164, label %148, !llvm.loop !37

164:                                              ; preds = %148, %145
  %165 = icmp eq i64 %75, %85
  br i1 %165, label %219, label %166

166:                                              ; preds = %164, %77, %72
  %167 = phi i64 [ %74, %77 ], [ %74, %72 ], [ %86, %164 ]
  %168 = phi i16* [ %46, %77 ], [ %46, %72 ], [ %87, %164 ]
  %169 = phi i16* [ %73, %77 ], [ %73, %72 ], [ %88, %164 ]
  %170 = add i64 %167, -1
  %171 = and i64 %167, 7
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %184, label %173

173:                                              ; preds = %166, %173
  %174 = phi i64 [ %179, %173 ], [ %167, %166 ]
  %175 = phi i16* [ %181, %173 ], [ %168, %166 ]
  %176 = phi i16* [ %180, %173 ], [ %169, %166 ]
  %177 = phi i64 [ %182, %173 ], [ %171, %166 ]
  %178 = load i16, i16* %175, align 2
  store i16 %178, i16* %176, align 2
  %179 = add i64 %174, -1
  %180 = getelementptr inbounds i16, i16* %176, i64 1
  %181 = getelementptr inbounds i16, i16* %175, i64 1
  %182 = add i64 %177, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %173, !llvm.loop !38

184:                                              ; preds = %173, %166
  %185 = phi i64 [ %167, %166 ], [ %179, %173 ]
  %186 = phi i16* [ %168, %166 ], [ %181, %173 ]
  %187 = phi i16* [ %169, %166 ], [ %180, %173 ]
  %188 = icmp ult i64 %170, 7
  br i1 %188, label %219, label %189

189:                                              ; preds = %184, %189
  %190 = phi i64 [ %215, %189 ], [ %185, %184 ]
  %191 = phi i16* [ %217, %189 ], [ %186, %184 ]
  %192 = phi i16* [ %216, %189 ], [ %187, %184 ]
  %193 = load i16, i16* %191, align 2
  store i16 %193, i16* %192, align 2
  %194 = getelementptr inbounds i16, i16* %192, i64 1
  %195 = getelementptr inbounds i16, i16* %191, i64 1
  %196 = load i16, i16* %195, align 2
  store i16 %196, i16* %194, align 2
  %197 = getelementptr inbounds i16, i16* %192, i64 2
  %198 = getelementptr inbounds i16, i16* %191, i64 2
  %199 = load i16, i16* %198, align 2
  store i16 %199, i16* %197, align 2
  %200 = getelementptr inbounds i16, i16* %192, i64 3
  %201 = getelementptr inbounds i16, i16* %191, i64 3
  %202 = load i16, i16* %201, align 2
  store i16 %202, i16* %200, align 2
  %203 = getelementptr inbounds i16, i16* %192, i64 4
  %204 = getelementptr inbounds i16, i16* %191, i64 4
  %205 = load i16, i16* %204, align 2
  store i16 %205, i16* %203, align 2
  %206 = getelementptr inbounds i16, i16* %192, i64 5
  %207 = getelementptr inbounds i16, i16* %191, i64 5
  %208 = load i16, i16* %207, align 2
  store i16 %208, i16* %206, align 2
  %209 = getelementptr inbounds i16, i16* %192, i64 6
  %210 = getelementptr inbounds i16, i16* %191, i64 6
  %211 = load i16, i16* %210, align 2
  store i16 %211, i16* %209, align 2
  %212 = getelementptr inbounds i16, i16* %192, i64 7
  %213 = getelementptr inbounds i16, i16* %191, i64 7
  %214 = load i16, i16* %213, align 2
  store i16 %214, i16* %212, align 2
  %215 = add i64 %190, -8
  %216 = getelementptr inbounds i16, i16* %192, i64 8
  %217 = getelementptr inbounds i16, i16* %191, i64 8
  %218 = icmp eq i64 %215, 0
  br i1 %218, label %219, label %189, !llvm.loop !39

219:                                              ; preds = %184, %189, %164, %41
  %220 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %0, i64 0, i32 3
  %221 = bitcast %"class.std::__1::basic_string.1"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %222 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %221, i64 0, i32 1, i32 1
  %223 = load i8, i8* %222, align 1
  %224 = icmp slt i8 %223, 0
  br i1 %224, label %228, label %225

225:                                              ; preds = %219
  %226 = bitcast %"class.std::__1::basic_string.1"* %220 to i8*
  %227 = bitcast %"class.std::__1::basic_string.1"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %226, i8* align 8 %227, i64 24, i1 false) #10
  br label %403

228:                                              ; preds = %219
  %229 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = load i16*, i16** %229, align 8
  %231 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %232 = load i64, i64* %231, align 8
  %233 = icmp ult i64 %232, 11
  br i1 %233, label %234, label %239

234:                                              ; preds = %228
  %235 = bitcast %"class.std::__1::basic_string.1"* %220 to i16*
  %236 = trunc i64 %232 to i8
  %237 = bitcast %"class.std::__1::basic_string.1"* %220 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %238 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %237, i64 0, i32 1, i32 1
  store i8 %236, i8* %238, align 1
  br label %256

239:                                              ; preds = %228
  %240 = icmp ugt i64 %232, 9223372036854775791
  br i1 %240, label %241, label %243

241:                                              ; preds = %239
  %242 = bitcast %"class.std::__1::basic_string.1"* %220 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %242) #11
  unreachable

243:                                              ; preds = %239
  %244 = add nuw nsw i64 %232, 8
  %245 = and i64 %244, -8
  %246 = icmp slt i64 %245, 0
  br i1 %246, label %247, label %248

247:                                              ; preds = %243
  tail call void @abort() #11
  unreachable

248:                                              ; preds = %243
  %249 = shl i64 %245, 1
  %250 = tail call i8* @_Znwm(i64 %249) #12
  %251 = bitcast i8* %250 to i16*
  %252 = bitcast %"class.std::__1::basic_string.1"* %220 to i8**
  store i8* %250, i8** %252, align 8
  %253 = or i64 %245, -9223372036854775808
  %254 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %253, i64* %254, align 8
  %255 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %232, i64* %255, align 8
  br label %256

256:                                              ; preds = %248, %234
  %257 = phi i16* [ %235, %234 ], [ %251, %248 ]
  %258 = add nuw nsw i64 %232, 1
  %259 = add i64 %232, 1
  %260 = icmp ult i64 %259, 16
  br i1 %260, label %350, label %261

261:                                              ; preds = %256
  %262 = add i64 %232, 1
  %263 = getelementptr i16, i16* %257, i64 %262
  %264 = getelementptr i16, i16* %230, i64 %262
  %265 = icmp ult i16* %257, %264
  %266 = icmp ult i16* %230, %263
  %267 = and i1 %265, %266
  br i1 %267, label %350, label %268

268:                                              ; preds = %261
  %269 = and i64 %259, -16
  %270 = sub i64 %258, %269
  %271 = getelementptr i16, i16* %230, i64 %269
  %272 = getelementptr i16, i16* %257, i64 %269
  %273 = add i64 %269, -16
  %274 = lshr exact i64 %273, 4
  %275 = add nuw nsw i64 %274, 1
  %276 = and i64 %275, 3
  %277 = icmp ult i64 %273, 48
  br i1 %277, label %329, label %278

278:                                              ; preds = %268
  %279 = sub nsw i64 %275, %276
  br label %280

280:                                              ; preds = %280, %278
  %281 = phi i64 [ 0, %278 ], [ %326, %280 ]
  %282 = phi i64 [ %279, %278 ], [ %327, %280 ]
  %283 = getelementptr i16, i16* %230, i64 %281
  %284 = getelementptr i16, i16* %257, i64 %281
  %285 = bitcast i16* %283 to <8 x i16>*
  %286 = load <8 x i16>, <8 x i16>* %285, align 2, !alias.scope !40
  %287 = getelementptr i16, i16* %283, i64 8
  %288 = bitcast i16* %287 to <8 x i16>*
  %289 = load <8 x i16>, <8 x i16>* %288, align 2, !alias.scope !40
  %290 = bitcast i16* %284 to <8 x i16>*
  store <8 x i16> %286, <8 x i16>* %290, align 2, !alias.scope !43, !noalias !40
  %291 = getelementptr i16, i16* %284, i64 8
  %292 = bitcast i16* %291 to <8 x i16>*
  store <8 x i16> %289, <8 x i16>* %292, align 2, !alias.scope !43, !noalias !40
  %293 = or i64 %281, 16
  %294 = getelementptr i16, i16* %230, i64 %293
  %295 = getelementptr i16, i16* %257, i64 %293
  %296 = bitcast i16* %294 to <8 x i16>*
  %297 = load <8 x i16>, <8 x i16>* %296, align 2, !alias.scope !40
  %298 = getelementptr i16, i16* %294, i64 8
  %299 = bitcast i16* %298 to <8 x i16>*
  %300 = load <8 x i16>, <8 x i16>* %299, align 2, !alias.scope !40
  %301 = bitcast i16* %295 to <8 x i16>*
  store <8 x i16> %297, <8 x i16>* %301, align 2, !alias.scope !43, !noalias !40
  %302 = getelementptr i16, i16* %295, i64 8
  %303 = bitcast i16* %302 to <8 x i16>*
  store <8 x i16> %300, <8 x i16>* %303, align 2, !alias.scope !43, !noalias !40
  %304 = or i64 %281, 32
  %305 = getelementptr i16, i16* %230, i64 %304
  %306 = getelementptr i16, i16* %257, i64 %304
  %307 = bitcast i16* %305 to <8 x i16>*
  %308 = load <8 x i16>, <8 x i16>* %307, align 2, !alias.scope !40
  %309 = getelementptr i16, i16* %305, i64 8
  %310 = bitcast i16* %309 to <8 x i16>*
  %311 = load <8 x i16>, <8 x i16>* %310, align 2, !alias.scope !40
  %312 = bitcast i16* %306 to <8 x i16>*
  store <8 x i16> %308, <8 x i16>* %312, align 2, !alias.scope !43, !noalias !40
  %313 = getelementptr i16, i16* %306, i64 8
  %314 = bitcast i16* %313 to <8 x i16>*
  store <8 x i16> %311, <8 x i16>* %314, align 2, !alias.scope !43, !noalias !40
  %315 = or i64 %281, 48
  %316 = getelementptr i16, i16* %230, i64 %315
  %317 = getelementptr i16, i16* %257, i64 %315
  %318 = bitcast i16* %316 to <8 x i16>*
  %319 = load <8 x i16>, <8 x i16>* %318, align 2, !alias.scope !40
  %320 = getelementptr i16, i16* %316, i64 8
  %321 = bitcast i16* %320 to <8 x i16>*
  %322 = load <8 x i16>, <8 x i16>* %321, align 2, !alias.scope !40
  %323 = bitcast i16* %317 to <8 x i16>*
  store <8 x i16> %319, <8 x i16>* %323, align 2, !alias.scope !43, !noalias !40
  %324 = getelementptr i16, i16* %317, i64 8
  %325 = bitcast i16* %324 to <8 x i16>*
  store <8 x i16> %322, <8 x i16>* %325, align 2, !alias.scope !43, !noalias !40
  %326 = add i64 %281, 64
  %327 = add i64 %282, -4
  %328 = icmp eq i64 %327, 0
  br i1 %328, label %329, label %280, !llvm.loop !45

329:                                              ; preds = %280, %268
  %330 = phi i64 [ 0, %268 ], [ %326, %280 ]
  %331 = icmp eq i64 %276, 0
  br i1 %331, label %348, label %332

332:                                              ; preds = %329, %332
  %333 = phi i64 [ %345, %332 ], [ %330, %329 ]
  %334 = phi i64 [ %346, %332 ], [ %276, %329 ]
  %335 = getelementptr i16, i16* %230, i64 %333
  %336 = getelementptr i16, i16* %257, i64 %333
  %337 = bitcast i16* %335 to <8 x i16>*
  %338 = load <8 x i16>, <8 x i16>* %337, align 2, !alias.scope !40
  %339 = getelementptr i16, i16* %335, i64 8
  %340 = bitcast i16* %339 to <8 x i16>*
  %341 = load <8 x i16>, <8 x i16>* %340, align 2, !alias.scope !40
  %342 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %338, <8 x i16>* %342, align 2, !alias.scope !43, !noalias !40
  %343 = getelementptr i16, i16* %336, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  store <8 x i16> %341, <8 x i16>* %344, align 2, !alias.scope !43, !noalias !40
  %345 = add i64 %333, 16
  %346 = add i64 %334, -1
  %347 = icmp eq i64 %346, 0
  br i1 %347, label %348, label %332, !llvm.loop !46

348:                                              ; preds = %332, %329
  %349 = icmp eq i64 %259, %269
  br i1 %349, label %403, label %350

350:                                              ; preds = %348, %261, %256
  %351 = phi i64 [ %258, %261 ], [ %258, %256 ], [ %270, %348 ]
  %352 = phi i16* [ %230, %261 ], [ %230, %256 ], [ %271, %348 ]
  %353 = phi i16* [ %257, %261 ], [ %257, %256 ], [ %272, %348 ]
  %354 = add i64 %351, -1
  %355 = and i64 %351, 7
  %356 = icmp eq i64 %355, 0
  br i1 %356, label %368, label %357

357:                                              ; preds = %350, %357
  %358 = phi i64 [ %363, %357 ], [ %351, %350 ]
  %359 = phi i16* [ %365, %357 ], [ %352, %350 ]
  %360 = phi i16* [ %364, %357 ], [ %353, %350 ]
  %361 = phi i64 [ %366, %357 ], [ %355, %350 ]
  %362 = load i16, i16* %359, align 2
  store i16 %362, i16* %360, align 2
  %363 = add i64 %358, -1
  %364 = getelementptr inbounds i16, i16* %360, i64 1
  %365 = getelementptr inbounds i16, i16* %359, i64 1
  %366 = add i64 %361, -1
  %367 = icmp eq i64 %366, 0
  br i1 %367, label %368, label %357, !llvm.loop !47

368:                                              ; preds = %357, %350
  %369 = phi i64 [ %351, %350 ], [ %363, %357 ]
  %370 = phi i16* [ %352, %350 ], [ %365, %357 ]
  %371 = phi i16* [ %353, %350 ], [ %364, %357 ]
  %372 = icmp ult i64 %354, 7
  br i1 %372, label %403, label %373

373:                                              ; preds = %368, %373
  %374 = phi i64 [ %399, %373 ], [ %369, %368 ]
  %375 = phi i16* [ %401, %373 ], [ %370, %368 ]
  %376 = phi i16* [ %400, %373 ], [ %371, %368 ]
  %377 = load i16, i16* %375, align 2
  store i16 %377, i16* %376, align 2
  %378 = getelementptr inbounds i16, i16* %376, i64 1
  %379 = getelementptr inbounds i16, i16* %375, i64 1
  %380 = load i16, i16* %379, align 2
  store i16 %380, i16* %378, align 2
  %381 = getelementptr inbounds i16, i16* %376, i64 2
  %382 = getelementptr inbounds i16, i16* %375, i64 2
  %383 = load i16, i16* %382, align 2
  store i16 %383, i16* %381, align 2
  %384 = getelementptr inbounds i16, i16* %376, i64 3
  %385 = getelementptr inbounds i16, i16* %375, i64 3
  %386 = load i16, i16* %385, align 2
  store i16 %386, i16* %384, align 2
  %387 = getelementptr inbounds i16, i16* %376, i64 4
  %388 = getelementptr inbounds i16, i16* %375, i64 4
  %389 = load i16, i16* %388, align 2
  store i16 %389, i16* %387, align 2
  %390 = getelementptr inbounds i16, i16* %376, i64 5
  %391 = getelementptr inbounds i16, i16* %375, i64 5
  %392 = load i16, i16* %391, align 2
  store i16 %392, i16* %390, align 2
  %393 = getelementptr inbounds i16, i16* %376, i64 6
  %394 = getelementptr inbounds i16, i16* %375, i64 6
  %395 = load i16, i16* %394, align 2
  store i16 %395, i16* %393, align 2
  %396 = getelementptr inbounds i16, i16* %376, i64 7
  %397 = getelementptr inbounds i16, i16* %375, i64 7
  %398 = load i16, i16* %397, align 2
  store i16 %398, i16* %396, align 2
  %399 = add i64 %374, -8
  %400 = getelementptr inbounds i16, i16* %376, i64 8
  %401 = getelementptr inbounds i16, i16* %375, i64 8
  %402 = icmp eq i64 %399, 0
  br i1 %402, label %403, label %373, !llvm.loop !48

403:                                              ; preds = %368, %373, %348, %225
  %404 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %0, i64 0, i32 4
  %405 = bitcast %"class.std::__1::basic_string.1"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %406 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %405, i64 0, i32 1, i32 1
  %407 = load i8, i8* %406, align 1
  %408 = icmp slt i8 %407, 0
  br i1 %408, label %412, label %409

409:                                              ; preds = %403
  %410 = bitcast %"class.std::__1::basic_string.1"* %404 to i8*
  %411 = bitcast %"class.std::__1::basic_string.1"* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %410, i8* align 8 %411, i64 24, i1 false) #10
  br label %587

412:                                              ; preds = %403
  %413 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %414 = load i16*, i16** %413, align 8
  %415 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %416 = load i64, i64* %415, align 8
  %417 = icmp ult i64 %416, 11
  br i1 %417, label %418, label %423

418:                                              ; preds = %412
  %419 = bitcast %"class.std::__1::basic_string.1"* %404 to i16*
  %420 = trunc i64 %416 to i8
  %421 = bitcast %"class.std::__1::basic_string.1"* %404 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %422 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %421, i64 0, i32 1, i32 1
  store i8 %420, i8* %422, align 1
  br label %440

423:                                              ; preds = %412
  %424 = icmp ugt i64 %416, 9223372036854775791
  br i1 %424, label %425, label %427

425:                                              ; preds = %423
  %426 = bitcast %"class.std::__1::basic_string.1"* %404 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %426) #11
  unreachable

427:                                              ; preds = %423
  %428 = add nuw nsw i64 %416, 8
  %429 = and i64 %428, -8
  %430 = icmp slt i64 %429, 0
  br i1 %430, label %431, label %432

431:                                              ; preds = %427
  tail call void @abort() #11
  unreachable

432:                                              ; preds = %427
  %433 = shl i64 %429, 1
  %434 = tail call i8* @_Znwm(i64 %433) #12
  %435 = bitcast i8* %434 to i16*
  %436 = bitcast %"class.std::__1::basic_string.1"* %404 to i8**
  store i8* %434, i8** %436, align 8
  %437 = or i64 %429, -9223372036854775808
  %438 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %437, i64* %438, align 8
  %439 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %416, i64* %439, align 8
  br label %440

440:                                              ; preds = %432, %418
  %441 = phi i16* [ %419, %418 ], [ %435, %432 ]
  %442 = add nuw nsw i64 %416, 1
  %443 = add i64 %416, 1
  %444 = icmp ult i64 %443, 16
  br i1 %444, label %534, label %445

445:                                              ; preds = %440
  %446 = add i64 %416, 1
  %447 = getelementptr i16, i16* %441, i64 %446
  %448 = getelementptr i16, i16* %414, i64 %446
  %449 = icmp ult i16* %441, %448
  %450 = icmp ult i16* %414, %447
  %451 = and i1 %449, %450
  br i1 %451, label %534, label %452

452:                                              ; preds = %445
  %453 = and i64 %443, -16
  %454 = sub i64 %442, %453
  %455 = getelementptr i16, i16* %414, i64 %453
  %456 = getelementptr i16, i16* %441, i64 %453
  %457 = add i64 %453, -16
  %458 = lshr exact i64 %457, 4
  %459 = add nuw nsw i64 %458, 1
  %460 = and i64 %459, 3
  %461 = icmp ult i64 %457, 48
  br i1 %461, label %513, label %462

462:                                              ; preds = %452
  %463 = sub nsw i64 %459, %460
  br label %464

464:                                              ; preds = %464, %462
  %465 = phi i64 [ 0, %462 ], [ %510, %464 ]
  %466 = phi i64 [ %463, %462 ], [ %511, %464 ]
  %467 = getelementptr i16, i16* %414, i64 %465
  %468 = getelementptr i16, i16* %441, i64 %465
  %469 = bitcast i16* %467 to <8 x i16>*
  %470 = load <8 x i16>, <8 x i16>* %469, align 2, !alias.scope !49
  %471 = getelementptr i16, i16* %467, i64 8
  %472 = bitcast i16* %471 to <8 x i16>*
  %473 = load <8 x i16>, <8 x i16>* %472, align 2, !alias.scope !49
  %474 = bitcast i16* %468 to <8 x i16>*
  store <8 x i16> %470, <8 x i16>* %474, align 2, !alias.scope !52, !noalias !49
  %475 = getelementptr i16, i16* %468, i64 8
  %476 = bitcast i16* %475 to <8 x i16>*
  store <8 x i16> %473, <8 x i16>* %476, align 2, !alias.scope !52, !noalias !49
  %477 = or i64 %465, 16
  %478 = getelementptr i16, i16* %414, i64 %477
  %479 = getelementptr i16, i16* %441, i64 %477
  %480 = bitcast i16* %478 to <8 x i16>*
  %481 = load <8 x i16>, <8 x i16>* %480, align 2, !alias.scope !49
  %482 = getelementptr i16, i16* %478, i64 8
  %483 = bitcast i16* %482 to <8 x i16>*
  %484 = load <8 x i16>, <8 x i16>* %483, align 2, !alias.scope !49
  %485 = bitcast i16* %479 to <8 x i16>*
  store <8 x i16> %481, <8 x i16>* %485, align 2, !alias.scope !52, !noalias !49
  %486 = getelementptr i16, i16* %479, i64 8
  %487 = bitcast i16* %486 to <8 x i16>*
  store <8 x i16> %484, <8 x i16>* %487, align 2, !alias.scope !52, !noalias !49
  %488 = or i64 %465, 32
  %489 = getelementptr i16, i16* %414, i64 %488
  %490 = getelementptr i16, i16* %441, i64 %488
  %491 = bitcast i16* %489 to <8 x i16>*
  %492 = load <8 x i16>, <8 x i16>* %491, align 2, !alias.scope !49
  %493 = getelementptr i16, i16* %489, i64 8
  %494 = bitcast i16* %493 to <8 x i16>*
  %495 = load <8 x i16>, <8 x i16>* %494, align 2, !alias.scope !49
  %496 = bitcast i16* %490 to <8 x i16>*
  store <8 x i16> %492, <8 x i16>* %496, align 2, !alias.scope !52, !noalias !49
  %497 = getelementptr i16, i16* %490, i64 8
  %498 = bitcast i16* %497 to <8 x i16>*
  store <8 x i16> %495, <8 x i16>* %498, align 2, !alias.scope !52, !noalias !49
  %499 = or i64 %465, 48
  %500 = getelementptr i16, i16* %414, i64 %499
  %501 = getelementptr i16, i16* %441, i64 %499
  %502 = bitcast i16* %500 to <8 x i16>*
  %503 = load <8 x i16>, <8 x i16>* %502, align 2, !alias.scope !49
  %504 = getelementptr i16, i16* %500, i64 8
  %505 = bitcast i16* %504 to <8 x i16>*
  %506 = load <8 x i16>, <8 x i16>* %505, align 2, !alias.scope !49
  %507 = bitcast i16* %501 to <8 x i16>*
  store <8 x i16> %503, <8 x i16>* %507, align 2, !alias.scope !52, !noalias !49
  %508 = getelementptr i16, i16* %501, i64 8
  %509 = bitcast i16* %508 to <8 x i16>*
  store <8 x i16> %506, <8 x i16>* %509, align 2, !alias.scope !52, !noalias !49
  %510 = add i64 %465, 64
  %511 = add i64 %466, -4
  %512 = icmp eq i64 %511, 0
  br i1 %512, label %513, label %464, !llvm.loop !54

513:                                              ; preds = %464, %452
  %514 = phi i64 [ 0, %452 ], [ %510, %464 ]
  %515 = icmp eq i64 %460, 0
  br i1 %515, label %532, label %516

516:                                              ; preds = %513, %516
  %517 = phi i64 [ %529, %516 ], [ %514, %513 ]
  %518 = phi i64 [ %530, %516 ], [ %460, %513 ]
  %519 = getelementptr i16, i16* %414, i64 %517
  %520 = getelementptr i16, i16* %441, i64 %517
  %521 = bitcast i16* %519 to <8 x i16>*
  %522 = load <8 x i16>, <8 x i16>* %521, align 2, !alias.scope !49
  %523 = getelementptr i16, i16* %519, i64 8
  %524 = bitcast i16* %523 to <8 x i16>*
  %525 = load <8 x i16>, <8 x i16>* %524, align 2, !alias.scope !49
  %526 = bitcast i16* %520 to <8 x i16>*
  store <8 x i16> %522, <8 x i16>* %526, align 2, !alias.scope !52, !noalias !49
  %527 = getelementptr i16, i16* %520, i64 8
  %528 = bitcast i16* %527 to <8 x i16>*
  store <8 x i16> %525, <8 x i16>* %528, align 2, !alias.scope !52, !noalias !49
  %529 = add i64 %517, 16
  %530 = add i64 %518, -1
  %531 = icmp eq i64 %530, 0
  br i1 %531, label %532, label %516, !llvm.loop !55

532:                                              ; preds = %516, %513
  %533 = icmp eq i64 %443, %453
  br i1 %533, label %587, label %534

534:                                              ; preds = %532, %445, %440
  %535 = phi i64 [ %442, %445 ], [ %442, %440 ], [ %454, %532 ]
  %536 = phi i16* [ %414, %445 ], [ %414, %440 ], [ %455, %532 ]
  %537 = phi i16* [ %441, %445 ], [ %441, %440 ], [ %456, %532 ]
  %538 = add i64 %535, -1
  %539 = and i64 %535, 7
  %540 = icmp eq i64 %539, 0
  br i1 %540, label %552, label %541

541:                                              ; preds = %534, %541
  %542 = phi i64 [ %547, %541 ], [ %535, %534 ]
  %543 = phi i16* [ %549, %541 ], [ %536, %534 ]
  %544 = phi i16* [ %548, %541 ], [ %537, %534 ]
  %545 = phi i64 [ %550, %541 ], [ %539, %534 ]
  %546 = load i16, i16* %543, align 2
  store i16 %546, i16* %544, align 2
  %547 = add i64 %542, -1
  %548 = getelementptr inbounds i16, i16* %544, i64 1
  %549 = getelementptr inbounds i16, i16* %543, i64 1
  %550 = add i64 %545, -1
  %551 = icmp eq i64 %550, 0
  br i1 %551, label %552, label %541, !llvm.loop !56

552:                                              ; preds = %541, %534
  %553 = phi i64 [ %535, %534 ], [ %547, %541 ]
  %554 = phi i16* [ %536, %534 ], [ %549, %541 ]
  %555 = phi i16* [ %537, %534 ], [ %548, %541 ]
  %556 = icmp ult i64 %538, 7
  br i1 %556, label %587, label %557

557:                                              ; preds = %552, %557
  %558 = phi i64 [ %583, %557 ], [ %553, %552 ]
  %559 = phi i16* [ %585, %557 ], [ %554, %552 ]
  %560 = phi i16* [ %584, %557 ], [ %555, %552 ]
  %561 = load i16, i16* %559, align 2
  store i16 %561, i16* %560, align 2
  %562 = getelementptr inbounds i16, i16* %560, i64 1
  %563 = getelementptr inbounds i16, i16* %559, i64 1
  %564 = load i16, i16* %563, align 2
  store i16 %564, i16* %562, align 2
  %565 = getelementptr inbounds i16, i16* %560, i64 2
  %566 = getelementptr inbounds i16, i16* %559, i64 2
  %567 = load i16, i16* %566, align 2
  store i16 %567, i16* %565, align 2
  %568 = getelementptr inbounds i16, i16* %560, i64 3
  %569 = getelementptr inbounds i16, i16* %559, i64 3
  %570 = load i16, i16* %569, align 2
  store i16 %570, i16* %568, align 2
  %571 = getelementptr inbounds i16, i16* %560, i64 4
  %572 = getelementptr inbounds i16, i16* %559, i64 4
  %573 = load i16, i16* %572, align 2
  store i16 %573, i16* %571, align 2
  %574 = getelementptr inbounds i16, i16* %560, i64 5
  %575 = getelementptr inbounds i16, i16* %559, i64 5
  %576 = load i16, i16* %575, align 2
  store i16 %576, i16* %574, align 2
  %577 = getelementptr inbounds i16, i16* %560, i64 6
  %578 = getelementptr inbounds i16, i16* %559, i64 6
  %579 = load i16, i16* %578, align 2
  store i16 %579, i16* %577, align 2
  %580 = getelementptr inbounds i16, i16* %560, i64 7
  %581 = getelementptr inbounds i16, i16* %559, i64 7
  %582 = load i16, i16* %581, align 2
  store i16 %582, i16* %580, align 2
  %583 = add i64 %558, -8
  %584 = getelementptr inbounds i16, i16* %560, i64 8
  %585 = getelementptr inbounds i16, i16* %559, i64 8
  %586 = icmp eq i64 %583, 0
  br i1 %586, label %587, label %557, !llvm.loop !57

587:                                              ; preds = %552, %557, %532, %409
  %588 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %0, i64 0, i32 5
  store i64 %6, i64* %588, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15storage_monitor11StorageInfoD2Ev(%"class.storage_monitor::StorageInfo"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %0, i64 0, i32 4
  %3 = bitcast %"class.std::__1::basic_string.1"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::basic_string.1"* %2 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #12
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %0, i64 0, i32 3
  %12 = bitcast %"class.std::__1::basic_string.1"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = bitcast %"class.std::__1::basic_string.1"* %11 to i8**
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #12
  br label %19

19:                                               ; preds = %10, %16
  %20 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %0, i64 0, i32 2
  %21 = bitcast %"class.std::__1::basic_string.1"* %20 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %21, i64 0, i32 1, i32 1
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %19
  %26 = bitcast %"class.std::__1::basic_string.1"* %20 to i8**
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #12
  br label %28

28:                                               ; preds = %19, %25
  %29 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %0, i64 0, i32 1
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  tail call void @_ZdlPv(i8* %36) #12
  br label %37

37:                                               ; preds = %28, %34
  %38 = bitcast %"class.storage_monitor::StorageInfo"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  tail call void @_ZdlPv(i8* %44) #12
  br label %45

45:                                               ; preds = %37, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15storage_monitor11StorageInfo12MakeDeviceIdENS0_4TypeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias nocapture sret, i32, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  switch i32 %1, label %140 [
    i32 0, label %9
    i32 1, label %35
    i32 2, label %61
    i32 3, label %87
    i32 4, label %114
  ]

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #10
  %11 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  store i8 5, i8* %12, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN12_GLOBAL__N_135kRemovableMassStorageWithDCIMPrefixE, i64 0, i64 0), i64 5, i1 false) #10
  %13 = getelementptr inbounds i8, i8* %10, i64 5
  store i8 0, i8* %13, align 1
  %14 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1, !noalias !58
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8, !noalias !58
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8, !noalias !58
  %22 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %23 = zext i8 %16 to i64
  %24 = select i1 %17, i8* %19, i8* %22
  %25 = select i1 %17, i64 %21, i64 %23
  %26 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %24, i64 %25) #10, !noalias !58
  %27 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %28 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #10, !noalias !58
  %29 = load i8, i8* %12, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %33) #12
  br label %34

34:                                               ; preds = %9, %31
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #10
  br label %142

35:                                               ; preds = %3
  %36 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #10
  %37 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  store i8 7, i8* %38, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN12_GLOBAL__N_133kRemovableMassStorageNoDCIMPrefixE, i64 0, i64 0), i64 7, i1 false) #10
  %39 = getelementptr inbounds i8, i8* %36, i64 7
  store i8 0, i8* %39, align 1
  %40 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1, !noalias !61
  %43 = icmp slt i8 %42, 0
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8, !noalias !61
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8, !noalias !61
  %48 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %49 = zext i8 %42 to i64
  %50 = select i1 %43, i8* %45, i8* %48
  %51 = select i1 %43, i64 %47, i64 %49
  %52 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %5, i8* %50, i64 %51) #10, !noalias !61
  %53 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %54 = bitcast %"class.std::__1::basic_string"* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 24, i1 false) #10, !noalias !61
  %55 = load i8, i8* %38, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %59) #12
  br label %60

60:                                               ; preds = %35, %57
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #10
  br label %142

61:                                               ; preds = %3
  %62 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #10
  %63 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  store i8 5, i8* %64, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %62, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN12_GLOBAL__N_123kFixedMassStoragePrefixE, i64 0, i64 0), i64 5, i1 false) #10
  %65 = getelementptr inbounds i8, i8* %62, i64 5
  store i8 0, i8* %65, align 1
  %66 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1, !noalias !64
  %69 = icmp slt i8 %68, 0
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8, !noalias !64
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = load i64, i64* %72, align 8, !noalias !64
  %74 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %75 = zext i8 %68 to i64
  %76 = select i1 %69, i8* %71, i8* %74
  %77 = select i1 %69, i64 %73, i64 %75
  %78 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %6, i8* %76, i64 %77) #10, !noalias !64
  %79 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %80 = bitcast %"class.std::__1::basic_string"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 24, i1 false) #10, !noalias !64
  %81 = load i8, i8* %64, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %61
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  call void @_ZdlPv(i8* %85) #12
  br label %86

86:                                               ; preds = %61, %83
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #10
  br label %142

87:                                               ; preds = %3
  %88 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #10
  %89 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %89, i64 0, i32 1, i32 0
  store i8 4, i8* %90, align 1
  %91 = bitcast %"class.std::__1::basic_string"* %7 to i32*
  store i32 980448365, i32* %91, align 8
  %92 = getelementptr inbounds i8, i8* %88, i64 4
  store i8 0, i8* %92, align 4
  %93 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %93, i64 0, i32 1, i32 0
  %95 = load i8, i8* %94, align 1, !noalias !67
  %96 = icmp slt i8 %95, 0
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8, !noalias !67
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %100 = load i64, i64* %99, align 8, !noalias !67
  %101 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %102 = zext i8 %95 to i64
  %103 = select i1 %96, i8* %98, i8* %101
  %104 = select i1 %96, i64 %100, i64 %102
  %105 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %7, i8* %103, i64 %104) #10, !noalias !67
  %106 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %107 = bitcast %"class.std::__1::basic_string"* %105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* align 8 %107, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 24, i1 false) #10, !noalias !67
  %108 = load i8, i8* %90, align 1
  %109 = icmp slt i8 %108, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %87
  %111 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load i8*, i8** %111, align 8
  call void @_ZdlPv(i8* %112) #12
  br label %113

113:                                              ; preds = %87, %110
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #10
  br label %142

114:                                              ; preds = %3
  %115 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #10
  %116 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  store i8 3, i8* %117, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %115, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @_ZN12_GLOBAL__N_122kMacImageCapturePrefixE, i64 0, i64 0), i64 3, i1 false) #10
  %118 = getelementptr inbounds i8, i8* %115, i64 3
  store i8 0, i8* %118, align 1
  %119 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %120 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %119, i64 0, i32 1, i32 0
  %121 = load i8, i8* %120, align 1, !noalias !70
  %122 = icmp slt i8 %121, 0
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load i8*, i8** %123, align 8, !noalias !70
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %126 = load i64, i64* %125, align 8, !noalias !70
  %127 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %128 = zext i8 %121 to i64
  %129 = select i1 %122, i8* %124, i8* %127
  %130 = select i1 %122, i64 %126, i64 %128
  %131 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %8, i8* %129, i64 %130) #10, !noalias !70
  %132 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %133 = bitcast %"class.std::__1::basic_string"* %131 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %132, i8* align 8 %133, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %133, i8 0, i64 24, i1 false) #10, !noalias !70
  %134 = load i8, i8* %117, align 1
  %135 = icmp slt i8 %134, 0
  br i1 %135, label %136, label %139

136:                                              ; preds = %114
  %137 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load i8*, i8** %137, align 8
  call void @_ZdlPv(i8* %138) #12
  br label %139

139:                                              ; preds = %114, %136
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #10
  br label %142

140:                                              ; preds = %3
  %141 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %141, i8 0, i64 24, i1 false) #10
  br label %142

142:                                              ; preds = %140, %139, %113, %86, %60, %34
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15storage_monitor11StorageInfo13CrackDeviceIdERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS0_4TypeEPS7_(%"class.std::__1::basic_string"* dereferenceable(24), i32*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %0, i8 signext 58, i64 0) #10
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = icmp eq i64 %6, -1
  %11 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  br i1 %10, label %12, label %15

12:                                               ; preds = %3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #10
  %13 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  br label %105

15:                                               ; preds = %3
  %16 = add nuw i64 %6, 1
  %17 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %4, %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 0, i64 %16, %"class.std::__1::allocator"* dereferenceable(1) %17) #10
  %18 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = load i64, i64* %9, align 8
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %23 = icmp slt i8 %20, 0
  %24 = zext i8 %20 to i64
  %25 = select i1 %23, i64 %21, i64 %24
  %26 = icmp eq i64 %25, 5
  br i1 %26, label %27, label %34

27:                                               ; preds = %15
  %28 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %4, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN12_GLOBAL__N_135kRemovableMassStorageWithDCIMPrefixE, i64 0, i64 0), i64 5) #10
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %86, label %30

30:                                               ; preds = %27
  %31 = load i64, i64* %9, align 8
  %32 = load i8, i8* %22, align 1
  %33 = zext i8 %32 to i64
  br label %34

34:                                               ; preds = %30, %15
  %35 = phi i64 [ %33, %30 ], [ %24, %15 ]
  %36 = phi i8 [ %32, %30 ], [ %20, %15 ]
  %37 = phi i64 [ %31, %30 ], [ %21, %15 ]
  %38 = icmp slt i8 %36, 0
  %39 = select i1 %38, i64 %37, i64 %35
  %40 = icmp eq i64 %39, 7
  br i1 %40, label %41, label %48

41:                                               ; preds = %34
  %42 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %4, i64 0, i64 -1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN12_GLOBAL__N_133kRemovableMassStorageNoDCIMPrefixE, i64 0, i64 0), i64 7) #10
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %86, label %44

44:                                               ; preds = %41
  %45 = load i8, i8* %22, align 1
  %46 = load i64, i64* %9, align 8
  %47 = zext i8 %45 to i64
  br label %48

48:                                               ; preds = %44, %34
  %49 = phi i64 [ %47, %44 ], [ %35, %34 ]
  %50 = phi i64 [ %46, %44 ], [ %37, %34 ]
  %51 = phi i8 [ %45, %44 ], [ %36, %34 ]
  %52 = icmp slt i8 %51, 0
  %53 = select i1 %52, i64 %50, i64 %49
  %54 = icmp eq i64 %53, 5
  br i1 %54, label %55, label %62

55:                                               ; preds = %48
  %56 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %4, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN12_GLOBAL__N_123kFixedMassStoragePrefixE, i64 0, i64 0), i64 5) #10
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %86, label %58

58:                                               ; preds = %55
  %59 = load i8, i8* %22, align 1
  %60 = load i64, i64* %9, align 8
  %61 = zext i8 %59 to i64
  br label %62

62:                                               ; preds = %58, %48
  %63 = phi i64 [ %61, %58 ], [ %49, %48 ]
  %64 = phi i64 [ %60, %58 ], [ %50, %48 ]
  %65 = phi i8 [ %59, %58 ], [ %51, %48 ]
  %66 = icmp slt i8 %65, 0
  %67 = select i1 %66, i64 %64, i64 %63
  %68 = icmp eq i64 %67, 4
  br i1 %68, label %69, label %76

69:                                               ; preds = %62
  %70 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %4, i64 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN12_GLOBAL__N_113kMtpPtpPrefixE, i64 0, i64 0), i64 4) #10
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %86, label %72

72:                                               ; preds = %69
  %73 = load i8, i8* %22, align 1
  %74 = load i64, i64* %9, align 8
  %75 = zext i8 %73 to i64
  br label %76

76:                                               ; preds = %72, %62
  %77 = phi i64 [ %75, %72 ], [ %63, %62 ]
  %78 = phi i64 [ %74, %72 ], [ %64, %62 ]
  %79 = phi i8 [ %73, %72 ], [ %65, %62 ]
  %80 = icmp slt i8 %79, 0
  %81 = select i1 %80, i64 %78, i64 %77
  %82 = icmp eq i64 %81, 3
  br i1 %82, label %83, label %105

83:                                               ; preds = %76
  %84 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %4, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZN12_GLOBAL__N_122kMacImageCapturePrefixE, i64 0, i64 0), i64 3) #10
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %105

86:                                               ; preds = %83, %69, %55, %41, %27
  %87 = phi i32 [ 0, %27 ], [ 1, %41 ], [ 2, %55 ], [ 3, %69 ], [ 4, %83 ]
  %88 = icmp eq i32* %1, null
  br i1 %88, label %90, label %89

89:                                               ; preds = %86
  store i32 %87, i32* %1, align 4
  br label %90

90:                                               ; preds = %86, %89
  %91 = icmp eq %"class.std::__1::basic_string"* %2, null
  br i1 %91, label %105, label %92

92:                                               ; preds = %90
  %93 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #10
  %94 = add nuw i64 %6, 1
  %95 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %5, %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 %94, i64 -1, %"class.std::__1::allocator"* dereferenceable(1) %95) #10
  %96 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  br i1 %99, label %100, label %103

100:                                              ; preds = %92
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load i8*, i8** %101, align 8
  call void @_ZdlPv(i8* %102) #12
  br label %103

103:                                              ; preds = %100, %92
  %104 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %104, i8* nonnull align 8 %93, i64 24, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #10
  br label %105

105:                                              ; preds = %12, %76, %103, %90, %83
  %106 = phi i8* [ %22, %83 ], [ %22, %90 ], [ %22, %103 ], [ %22, %76 ], [ %14, %12 ]
  %107 = phi i1 [ false, %83 ], [ true, %90 ], [ true, %103 ], [ false, %76 ], [ false, %12 ]
  %108 = load i8, i8* %106, align 1
  %109 = icmp slt i8 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %105
  %111 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %111) #12
  br label %112

112:                                              ; preds = %105, %110
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #10
  ret i1 %107
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15storage_monitor11StorageInfo13IsMediaDeviceERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #10
  store i32 -1431655766, i32* %2, align 4
  %4 = call zeroext i1 @_ZN15storage_monitor11StorageInfo13CrackDeviceIdERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS0_4TypeEPS7_(%"class.std::__1::basic_string"* dereferenceable(24) %0, i32* nonnull %2, %"class.std::__1::basic_string"* null)
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = load i32, i32* %2, align 4
  %7 = icmp ult i32 %6, 5
  br i1 %7, label %8, label %13

8:                                                ; preds = %5
  %9 = trunc i32 %6 to i5
  %10 = lshr i5 -7, %9
  %11 = and i5 %10, 1
  %12 = icmp ne i5 %11, 0
  br label %13

13:                                               ; preds = %5, %8, %1
  %14 = phi i1 [ false, %1 ], [ %12, %8 ], [ false, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #10
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15storage_monitor11StorageInfo17IsRemovableDeviceERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #10
  store i32 -1431655766, i32* %2, align 4
  %4 = call zeroext i1 @_ZN15storage_monitor11StorageInfo13CrackDeviceIdERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS0_4TypeEPS7_(%"class.std::__1::basic_string"* dereferenceable(24) %0, i32* nonnull %2, %"class.std::__1::basic_string"* null)
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = load i32, i32* %2, align 4
  %7 = icmp ult i32 %6, 5
  br i1 %7, label %8, label %13

8:                                                ; preds = %5
  %9 = trunc i32 %6 to i5
  %10 = lshr i5 -5, %9
  %11 = and i5 %10, 1
  %12 = icmp ne i5 %11, 0
  br label %13

13:                                               ; preds = %5, %8, %1
  %14 = phi i1 [ false, %1 ], [ %12, %8 ], [ false, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #10
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15storage_monitor11StorageInfo19IsMassStorageDeviceERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #10
  store i32 -1431655766, i32* %2, align 4
  %4 = call zeroext i1 @_ZN15storage_monitor11StorageInfo13CrackDeviceIdERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS0_4TypeEPS7_(%"class.std::__1::basic_string"* dereferenceable(24) %0, i32* nonnull %2, %"class.std::__1::basic_string"* null)
  %5 = load i32, i32* %2, align 4
  %6 = icmp ult i32 %5, 3
  %7 = and i1 %4, %6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #10
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN15storage_monitor11StorageInfo11IsMTPDeviceERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #10
  store i32 -1431655766, i32* %2, align 4
  %4 = call zeroext i1 @_ZN15storage_monitor11StorageInfo13CrackDeviceIdERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS0_4TypeEPS7_(%"class.std::__1::basic_string"* dereferenceable(24) %0, i32* nonnull %2, %"class.std::__1::basic_string"* null)
  %5 = load i32, i32* %2, align 4
  %6 = icmp eq i32 %5, 3
  %7 = and i1 %4, %6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #10
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15storage_monitor11StorageInfo14GetDisplayNameEb(%"class.std::__1::basic_string.1"* noalias sret, %"class.storage_monitor::StorageInfo"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string.1", align 8
  %5 = bitcast %"class.std::__1::basic_string.1"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #10
  call void @_ZNK15storage_monitor11StorageInfo26GetDisplayNameWithOverrideERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEb(%"class.std::__1::basic_string.1"* sret %0, %"class.storage_monitor::StorageInfo"* %1, %"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %4, i1 zeroext %2)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15storage_monitor11StorageInfo26GetDisplayNameWithOverrideERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEb(%"class.std::__1::basic_string.1"* noalias sret, %"class.storage_monitor::StorageInfo"*, %"class.std::__1::basic_string.1"* nocapture readonly dereferenceable(24), i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string.1", align 8
  %6 = alloca %"class.std::__1::basic_string.1", align 8
  %7 = alloca %"class.std::__1::basic_string.1", align 8
  %8 = alloca [15 x i8], align 8
  %9 = alloca %"class.std::__1::basic_string.1", align 8
  %10 = alloca i32, align 4
  %11 = alloca %"class.base::FilePath", align 8
  %12 = alloca %"class.std::__1::basic_string.1", align 8
  %13 = alloca [15 x i8], align 8
  %14 = alloca %"class.std::__1::basic_string.1", align 8
  %15 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %1, i64 0, i32 0
  %16 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #10
  store i32 -1431655766, i32* %10, align 4
  %17 = call zeroext i1 @_ZN15storage_monitor11StorageInfo13CrackDeviceIdERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS0_4TypeEPS7_(%"class.std::__1::basic_string"* dereferenceable(24) %15, i32* nonnull %10, %"class.std::__1::basic_string"* null) #10
  br i1 %17, label %18, label %20

18:                                               ; preds = %4
  %19 = load i32, i32* %10, align 4
  switch i32 %19, label %20 [
    i32 3, label %228
    i32 1, label %228
    i32 0, label %228
    i32 4, label %228
  ]

20:                                               ; preds = %18, %4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #10
  %21 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %1, i64 0, i32 2
  %22 = bitcast %"class.std::__1::basic_string.1"* %21 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %22, i64 0, i32 1, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  br label %31

29:                                               ; preds = %20
  %30 = zext i8 %24 to i64
  br label %31

31:                                               ; preds = %26, %29
  %32 = phi i64 [ %28, %26 ], [ %30, %29 ]
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %213, label %34

34:                                               ; preds = %31
  br i1 %25, label %38, label %35

35:                                               ; preds = %34
  %36 = bitcast %"class.std::__1::basic_string.1"* %0 to i8*
  %37 = bitcast %"class.std::__1::basic_string.1"* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 24, i1 false) #10
  br label %1155

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i16*, i16** %39, align 8
  %41 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = icmp ult i64 %42, 11
  br i1 %43, label %44, label %49

44:                                               ; preds = %38
  %45 = bitcast %"class.std::__1::basic_string.1"* %0 to i16*
  %46 = trunc i64 %42 to i8
  %47 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %47, i64 0, i32 1, i32 1
  store i8 %46, i8* %48, align 1
  br label %66

49:                                               ; preds = %38
  %50 = icmp ugt i64 %42, 9223372036854775791
  br i1 %50, label %51, label %53

51:                                               ; preds = %49
  %52 = bitcast %"class.std::__1::basic_string.1"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %52) #11
  unreachable

53:                                               ; preds = %49
  %54 = add nuw nsw i64 %42, 8
  %55 = and i64 %54, -8
  %56 = icmp slt i64 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %53
  call void @abort() #11
  unreachable

58:                                               ; preds = %53
  %59 = shl i64 %55, 1
  %60 = call i8* @_Znwm(i64 %59) #12
  %61 = bitcast i8* %60 to i16*
  %62 = bitcast %"class.std::__1::basic_string.1"* %0 to i8**
  store i8* %60, i8** %62, align 8
  %63 = or i64 %55, -9223372036854775808
  %64 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %42, i64* %65, align 8
  br label %66

66:                                               ; preds = %58, %44
  %67 = phi i16* [ %45, %44 ], [ %61, %58 ]
  %68 = add nuw nsw i64 %42, 1
  %69 = add i64 %42, 1
  %70 = icmp ult i64 %69, 16
  br i1 %70, label %160, label %71

71:                                               ; preds = %66
  %72 = add i64 %42, 1
  %73 = getelementptr i16, i16* %67, i64 %72
  %74 = getelementptr i16, i16* %40, i64 %72
  %75 = icmp ult i16* %67, %74
  %76 = icmp ult i16* %40, %73
  %77 = and i1 %75, %76
  br i1 %77, label %160, label %78

78:                                               ; preds = %71
  %79 = and i64 %69, -16
  %80 = sub i64 %68, %79
  %81 = getelementptr i16, i16* %40, i64 %79
  %82 = getelementptr i16, i16* %67, i64 %79
  %83 = add i64 %79, -16
  %84 = lshr exact i64 %83, 4
  %85 = add nuw nsw i64 %84, 1
  %86 = and i64 %85, 3
  %87 = icmp ult i64 %83, 48
  br i1 %87, label %139, label %88

88:                                               ; preds = %78
  %89 = sub nsw i64 %85, %86
  br label %90

90:                                               ; preds = %90, %88
  %91 = phi i64 [ 0, %88 ], [ %136, %90 ]
  %92 = phi i64 [ %89, %88 ], [ %137, %90 ]
  %93 = getelementptr i16, i16* %40, i64 %91
  %94 = getelementptr i16, i16* %67, i64 %91
  %95 = bitcast i16* %93 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !73
  %97 = getelementptr i16, i16* %93, i64 8
  %98 = bitcast i16* %97 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !73
  %100 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %100, align 2, !alias.scope !76, !noalias !73
  %101 = getelementptr i16, i16* %94, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %102, align 2, !alias.scope !76, !noalias !73
  %103 = or i64 %91, 16
  %104 = getelementptr i16, i16* %40, i64 %103
  %105 = getelementptr i16, i16* %67, i64 %103
  %106 = bitcast i16* %104 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !73
  %108 = getelementptr i16, i16* %104, i64 8
  %109 = bitcast i16* %108 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !73
  %111 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %111, align 2, !alias.scope !76, !noalias !73
  %112 = getelementptr i16, i16* %105, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %113, align 2, !alias.scope !76, !noalias !73
  %114 = or i64 %91, 32
  %115 = getelementptr i16, i16* %40, i64 %114
  %116 = getelementptr i16, i16* %67, i64 %114
  %117 = bitcast i16* %115 to <8 x i16>*
  %118 = load <8 x i16>, <8 x i16>* %117, align 2, !alias.scope !73
  %119 = getelementptr i16, i16* %115, i64 8
  %120 = bitcast i16* %119 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !73
  %122 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %118, <8 x i16>* %122, align 2, !alias.scope !76, !noalias !73
  %123 = getelementptr i16, i16* %116, i64 8
  %124 = bitcast i16* %123 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %124, align 2, !alias.scope !76, !noalias !73
  %125 = or i64 %91, 48
  %126 = getelementptr i16, i16* %40, i64 %125
  %127 = getelementptr i16, i16* %67, i64 %125
  %128 = bitcast i16* %126 to <8 x i16>*
  %129 = load <8 x i16>, <8 x i16>* %128, align 2, !alias.scope !73
  %130 = getelementptr i16, i16* %126, i64 8
  %131 = bitcast i16* %130 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !73
  %133 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %129, <8 x i16>* %133, align 2, !alias.scope !76, !noalias !73
  %134 = getelementptr i16, i16* %127, i64 8
  %135 = bitcast i16* %134 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %135, align 2, !alias.scope !76, !noalias !73
  %136 = add i64 %91, 64
  %137 = add i64 %92, -4
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %90, !llvm.loop !78

139:                                              ; preds = %90, %78
  %140 = phi i64 [ 0, %78 ], [ %136, %90 ]
  %141 = icmp eq i64 %86, 0
  br i1 %141, label %158, label %142

142:                                              ; preds = %139, %142
  %143 = phi i64 [ %155, %142 ], [ %140, %139 ]
  %144 = phi i64 [ %156, %142 ], [ %86, %139 ]
  %145 = getelementptr i16, i16* %40, i64 %143
  %146 = getelementptr i16, i16* %67, i64 %143
  %147 = bitcast i16* %145 to <8 x i16>*
  %148 = load <8 x i16>, <8 x i16>* %147, align 2, !alias.scope !73
  %149 = getelementptr i16, i16* %145, i64 8
  %150 = bitcast i16* %149 to <8 x i16>*
  %151 = load <8 x i16>, <8 x i16>* %150, align 2, !alias.scope !73
  %152 = bitcast i16* %146 to <8 x i16>*
  store <8 x i16> %148, <8 x i16>* %152, align 2, !alias.scope !76, !noalias !73
  %153 = getelementptr i16, i16* %146, i64 8
  %154 = bitcast i16* %153 to <8 x i16>*
  store <8 x i16> %151, <8 x i16>* %154, align 2, !alias.scope !76, !noalias !73
  %155 = add i64 %143, 16
  %156 = add i64 %144, -1
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %158, label %142, !llvm.loop !79

158:                                              ; preds = %142, %139
  %159 = icmp eq i64 %69, %79
  br i1 %159, label %1155, label %160

160:                                              ; preds = %158, %71, %66
  %161 = phi i64 [ %68, %71 ], [ %68, %66 ], [ %80, %158 ]
  %162 = phi i16* [ %40, %71 ], [ %40, %66 ], [ %81, %158 ]
  %163 = phi i16* [ %67, %71 ], [ %67, %66 ], [ %82, %158 ]
  %164 = add i64 %161, -1
  %165 = and i64 %161, 7
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %178, label %167

167:                                              ; preds = %160, %167
  %168 = phi i64 [ %173, %167 ], [ %161, %160 ]
  %169 = phi i16* [ %175, %167 ], [ %162, %160 ]
  %170 = phi i16* [ %174, %167 ], [ %163, %160 ]
  %171 = phi i64 [ %176, %167 ], [ %165, %160 ]
  %172 = load i16, i16* %169, align 2
  store i16 %172, i16* %170, align 2
  %173 = add i64 %168, -1
  %174 = getelementptr inbounds i16, i16* %170, i64 1
  %175 = getelementptr inbounds i16, i16* %169, i64 1
  %176 = add i64 %171, -1
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %178, label %167, !llvm.loop !80

178:                                              ; preds = %167, %160
  %179 = phi i64 [ %161, %160 ], [ %173, %167 ]
  %180 = phi i16* [ %162, %160 ], [ %175, %167 ]
  %181 = phi i16* [ %163, %160 ], [ %174, %167 ]
  %182 = icmp ult i64 %164, 7
  br i1 %182, label %1155, label %183

183:                                              ; preds = %178, %183
  %184 = phi i64 [ %209, %183 ], [ %179, %178 ]
  %185 = phi i16* [ %211, %183 ], [ %180, %178 ]
  %186 = phi i16* [ %210, %183 ], [ %181, %178 ]
  %187 = load i16, i16* %185, align 2
  store i16 %187, i16* %186, align 2
  %188 = getelementptr inbounds i16, i16* %186, i64 1
  %189 = getelementptr inbounds i16, i16* %185, i64 1
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = getelementptr inbounds i16, i16* %186, i64 2
  %192 = getelementptr inbounds i16, i16* %185, i64 2
  %193 = load i16, i16* %192, align 2
  store i16 %193, i16* %191, align 2
  %194 = getelementptr inbounds i16, i16* %186, i64 3
  %195 = getelementptr inbounds i16, i16* %185, i64 3
  %196 = load i16, i16* %195, align 2
  store i16 %196, i16* %194, align 2
  %197 = getelementptr inbounds i16, i16* %186, i64 4
  %198 = getelementptr inbounds i16, i16* %185, i64 4
  %199 = load i16, i16* %198, align 2
  store i16 %199, i16* %197, align 2
  %200 = getelementptr inbounds i16, i16* %186, i64 5
  %201 = getelementptr inbounds i16, i16* %185, i64 5
  %202 = load i16, i16* %201, align 2
  store i16 %202, i16* %200, align 2
  %203 = getelementptr inbounds i16, i16* %186, i64 6
  %204 = getelementptr inbounds i16, i16* %185, i64 6
  %205 = load i16, i16* %204, align 2
  store i16 %205, i16* %203, align 2
  %206 = getelementptr inbounds i16, i16* %186, i64 7
  %207 = getelementptr inbounds i16, i16* %185, i64 7
  %208 = load i16, i16* %207, align 2
  store i16 %208, i16* %206, align 2
  %209 = add i64 %184, -8
  %210 = getelementptr inbounds i16, i16* %186, i64 8
  %211 = getelementptr inbounds i16, i16* %185, i64 8
  %212 = icmp eq i64 %209, 0
  br i1 %212, label %1155, label %183, !llvm.loop !81

213:                                              ; preds = %31
  %214 = bitcast %"class.base::FilePath"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %214) #10
  %215 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %1, i64 0, i32 1
  %216 = bitcast %"class.std::__1::basic_string"* %215 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %217 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %216, i64 0, i32 1, i32 0
  %218 = load i8, i8* %217, align 1
  %219 = icmp slt i8 %218, 0
  %220 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %215, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = load i8*, i8** %220, align 8
  %222 = bitcast %"class.std::__1::basic_string"* %215 to i8*
  %223 = select i1 %219, i8* %221, i8* %222
  %224 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %225 = load i64, i64* %224, align 8
  %226 = zext i8 %218 to i64
  %227 = select i1 %219, i64 %225, i64 %226
  call void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull %11, i8* %223, i64 %227) #10
  call void @_ZNK4base8FilePath16LossyDisplayNameEv(%"class.std::__1::basic_string.1"* sret %0, %"class.base::FilePath"* nonnull %11) #10
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %214) #10
  br label %1155

228:                                              ; preds = %18, %18, %18, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #10
  %229 = bitcast %"class.std::__1::basic_string.1"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %229) #10
  %230 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %232 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %233 = bitcast %"class.std::__1::basic_string.1"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %234 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %233, i64 0, i32 1, i32 1
  %235 = bitcast %"class.std::__1::basic_string.1"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %235, i8 -86, i64 24, i1 false)
  %236 = load i8, i8* %234, align 1
  %237 = icmp slt i8 %236, 0
  br i1 %237, label %240, label %238

238:                                              ; preds = %228
  %239 = bitcast %"class.std::__1::basic_string.1"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %229, i8* align 8 %239, i64 24, i1 false) #10
  br label %413

240:                                              ; preds = %228
  %241 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = load i16*, i16** %241, align 8
  %243 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %244 = load i64, i64* %243, align 8
  %245 = icmp ult i64 %244, 11
  br i1 %245, label %246, label %251

246:                                              ; preds = %240
  %247 = bitcast %"class.std::__1::basic_string.1"* %12 to i16*
  %248 = trunc i64 %244 to i8
  %249 = bitcast %"class.std::__1::basic_string.1"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %250 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %249, i64 0, i32 1, i32 1
  store i8 %248, i8* %250, align 1
  br label %266

251:                                              ; preds = %240
  %252 = icmp ugt i64 %244, 9223372036854775791
  br i1 %252, label %253, label %255

253:                                              ; preds = %251
  %254 = bitcast %"class.std::__1::basic_string.1"* %12 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %254) #11
  unreachable

255:                                              ; preds = %251
  %256 = add nuw nsw i64 %244, 8
  %257 = and i64 %256, -8
  %258 = icmp slt i64 %257, 0
  br i1 %258, label %259, label %260

259:                                              ; preds = %255
  call void @abort() #11
  unreachable

260:                                              ; preds = %255
  %261 = shl i64 %257, 1
  %262 = call i8* @_Znwm(i64 %261) #12
  %263 = bitcast i8* %262 to i16*
  %264 = bitcast %"class.std::__1::basic_string.1"* %12 to i8**
  store i8* %262, i8** %264, align 8
  %265 = or i64 %257, -9223372036854775808
  store i64 %265, i64* %232, align 8
  store i64 %244, i64* %231, align 8
  br label %266

266:                                              ; preds = %260, %246
  %267 = phi i16* [ %247, %246 ], [ %263, %260 ]
  %268 = add nuw nsw i64 %244, 1
  %269 = add i64 %244, 1
  %270 = icmp ult i64 %269, 16
  br i1 %270, label %360, label %271

271:                                              ; preds = %266
  %272 = add i64 %244, 1
  %273 = getelementptr i16, i16* %267, i64 %272
  %274 = getelementptr i16, i16* %242, i64 %272
  %275 = icmp ult i16* %267, %274
  %276 = icmp ult i16* %242, %273
  %277 = and i1 %275, %276
  br i1 %277, label %360, label %278

278:                                              ; preds = %271
  %279 = and i64 %269, -16
  %280 = sub i64 %268, %279
  %281 = getelementptr i16, i16* %242, i64 %279
  %282 = getelementptr i16, i16* %267, i64 %279
  %283 = add i64 %279, -16
  %284 = lshr exact i64 %283, 4
  %285 = add nuw nsw i64 %284, 1
  %286 = and i64 %285, 3
  %287 = icmp ult i64 %283, 48
  br i1 %287, label %339, label %288

288:                                              ; preds = %278
  %289 = sub nsw i64 %285, %286
  br label %290

290:                                              ; preds = %290, %288
  %291 = phi i64 [ 0, %288 ], [ %336, %290 ]
  %292 = phi i64 [ %289, %288 ], [ %337, %290 ]
  %293 = getelementptr i16, i16* %242, i64 %291
  %294 = getelementptr i16, i16* %267, i64 %291
  %295 = bitcast i16* %293 to <8 x i16>*
  %296 = load <8 x i16>, <8 x i16>* %295, align 2, !alias.scope !82
  %297 = getelementptr i16, i16* %293, i64 8
  %298 = bitcast i16* %297 to <8 x i16>*
  %299 = load <8 x i16>, <8 x i16>* %298, align 2, !alias.scope !82
  %300 = bitcast i16* %294 to <8 x i16>*
  store <8 x i16> %296, <8 x i16>* %300, align 2, !alias.scope !85, !noalias !82
  %301 = getelementptr i16, i16* %294, i64 8
  %302 = bitcast i16* %301 to <8 x i16>*
  store <8 x i16> %299, <8 x i16>* %302, align 2, !alias.scope !85, !noalias !82
  %303 = or i64 %291, 16
  %304 = getelementptr i16, i16* %242, i64 %303
  %305 = getelementptr i16, i16* %267, i64 %303
  %306 = bitcast i16* %304 to <8 x i16>*
  %307 = load <8 x i16>, <8 x i16>* %306, align 2, !alias.scope !82
  %308 = getelementptr i16, i16* %304, i64 8
  %309 = bitcast i16* %308 to <8 x i16>*
  %310 = load <8 x i16>, <8 x i16>* %309, align 2, !alias.scope !82
  %311 = bitcast i16* %305 to <8 x i16>*
  store <8 x i16> %307, <8 x i16>* %311, align 2, !alias.scope !85, !noalias !82
  %312 = getelementptr i16, i16* %305, i64 8
  %313 = bitcast i16* %312 to <8 x i16>*
  store <8 x i16> %310, <8 x i16>* %313, align 2, !alias.scope !85, !noalias !82
  %314 = or i64 %291, 32
  %315 = getelementptr i16, i16* %242, i64 %314
  %316 = getelementptr i16, i16* %267, i64 %314
  %317 = bitcast i16* %315 to <8 x i16>*
  %318 = load <8 x i16>, <8 x i16>* %317, align 2, !alias.scope !82
  %319 = getelementptr i16, i16* %315, i64 8
  %320 = bitcast i16* %319 to <8 x i16>*
  %321 = load <8 x i16>, <8 x i16>* %320, align 2, !alias.scope !82
  %322 = bitcast i16* %316 to <8 x i16>*
  store <8 x i16> %318, <8 x i16>* %322, align 2, !alias.scope !85, !noalias !82
  %323 = getelementptr i16, i16* %316, i64 8
  %324 = bitcast i16* %323 to <8 x i16>*
  store <8 x i16> %321, <8 x i16>* %324, align 2, !alias.scope !85, !noalias !82
  %325 = or i64 %291, 48
  %326 = getelementptr i16, i16* %242, i64 %325
  %327 = getelementptr i16, i16* %267, i64 %325
  %328 = bitcast i16* %326 to <8 x i16>*
  %329 = load <8 x i16>, <8 x i16>* %328, align 2, !alias.scope !82
  %330 = getelementptr i16, i16* %326, i64 8
  %331 = bitcast i16* %330 to <8 x i16>*
  %332 = load <8 x i16>, <8 x i16>* %331, align 2, !alias.scope !82
  %333 = bitcast i16* %327 to <8 x i16>*
  store <8 x i16> %329, <8 x i16>* %333, align 2, !alias.scope !85, !noalias !82
  %334 = getelementptr i16, i16* %327, i64 8
  %335 = bitcast i16* %334 to <8 x i16>*
  store <8 x i16> %332, <8 x i16>* %335, align 2, !alias.scope !85, !noalias !82
  %336 = add i64 %291, 64
  %337 = add i64 %292, -4
  %338 = icmp eq i64 %337, 0
  br i1 %338, label %339, label %290, !llvm.loop !87

339:                                              ; preds = %290, %278
  %340 = phi i64 [ 0, %278 ], [ %336, %290 ]
  %341 = icmp eq i64 %286, 0
  br i1 %341, label %358, label %342

342:                                              ; preds = %339, %342
  %343 = phi i64 [ %355, %342 ], [ %340, %339 ]
  %344 = phi i64 [ %356, %342 ], [ %286, %339 ]
  %345 = getelementptr i16, i16* %242, i64 %343
  %346 = getelementptr i16, i16* %267, i64 %343
  %347 = bitcast i16* %345 to <8 x i16>*
  %348 = load <8 x i16>, <8 x i16>* %347, align 2, !alias.scope !82
  %349 = getelementptr i16, i16* %345, i64 8
  %350 = bitcast i16* %349 to <8 x i16>*
  %351 = load <8 x i16>, <8 x i16>* %350, align 2, !alias.scope !82
  %352 = bitcast i16* %346 to <8 x i16>*
  store <8 x i16> %348, <8 x i16>* %352, align 2, !alias.scope !85, !noalias !82
  %353 = getelementptr i16, i16* %346, i64 8
  %354 = bitcast i16* %353 to <8 x i16>*
  store <8 x i16> %351, <8 x i16>* %354, align 2, !alias.scope !85, !noalias !82
  %355 = add i64 %343, 16
  %356 = add i64 %344, -1
  %357 = icmp eq i64 %356, 0
  br i1 %357, label %358, label %342, !llvm.loop !88

358:                                              ; preds = %342, %339
  %359 = icmp eq i64 %269, %279
  br i1 %359, label %413, label %360

360:                                              ; preds = %358, %271, %266
  %361 = phi i64 [ %268, %271 ], [ %268, %266 ], [ %280, %358 ]
  %362 = phi i16* [ %242, %271 ], [ %242, %266 ], [ %281, %358 ]
  %363 = phi i16* [ %267, %271 ], [ %267, %266 ], [ %282, %358 ]
  %364 = add i64 %361, -1
  %365 = and i64 %361, 7
  %366 = icmp eq i64 %365, 0
  br i1 %366, label %378, label %367

367:                                              ; preds = %360, %367
  %368 = phi i64 [ %373, %367 ], [ %361, %360 ]
  %369 = phi i16* [ %375, %367 ], [ %362, %360 ]
  %370 = phi i16* [ %374, %367 ], [ %363, %360 ]
  %371 = phi i64 [ %376, %367 ], [ %365, %360 ]
  %372 = load i16, i16* %369, align 2
  store i16 %372, i16* %370, align 2
  %373 = add i64 %368, -1
  %374 = getelementptr inbounds i16, i16* %370, i64 1
  %375 = getelementptr inbounds i16, i16* %369, i64 1
  %376 = add i64 %371, -1
  %377 = icmp eq i64 %376, 0
  br i1 %377, label %378, label %367, !llvm.loop !89

378:                                              ; preds = %367, %360
  %379 = phi i64 [ %361, %360 ], [ %373, %367 ]
  %380 = phi i16* [ %362, %360 ], [ %375, %367 ]
  %381 = phi i16* [ %363, %360 ], [ %374, %367 ]
  %382 = icmp ult i64 %364, 7
  br i1 %382, label %413, label %383

383:                                              ; preds = %378, %383
  %384 = phi i64 [ %409, %383 ], [ %379, %378 ]
  %385 = phi i16* [ %411, %383 ], [ %380, %378 ]
  %386 = phi i16* [ %410, %383 ], [ %381, %378 ]
  %387 = load i16, i16* %385, align 2
  store i16 %387, i16* %386, align 2
  %388 = getelementptr inbounds i16, i16* %386, i64 1
  %389 = getelementptr inbounds i16, i16* %385, i64 1
  %390 = load i16, i16* %389, align 2
  store i16 %390, i16* %388, align 2
  %391 = getelementptr inbounds i16, i16* %386, i64 2
  %392 = getelementptr inbounds i16, i16* %385, i64 2
  %393 = load i16, i16* %392, align 2
  store i16 %393, i16* %391, align 2
  %394 = getelementptr inbounds i16, i16* %386, i64 3
  %395 = getelementptr inbounds i16, i16* %385, i64 3
  %396 = load i16, i16* %395, align 2
  store i16 %396, i16* %394, align 2
  %397 = getelementptr inbounds i16, i16* %386, i64 4
  %398 = getelementptr inbounds i16, i16* %385, i64 4
  %399 = load i16, i16* %398, align 2
  store i16 %399, i16* %397, align 2
  %400 = getelementptr inbounds i16, i16* %386, i64 5
  %401 = getelementptr inbounds i16, i16* %385, i64 5
  %402 = load i16, i16* %401, align 2
  store i16 %402, i16* %400, align 2
  %403 = getelementptr inbounds i16, i16* %386, i64 6
  %404 = getelementptr inbounds i16, i16* %385, i64 6
  %405 = load i16, i16* %404, align 2
  store i16 %405, i16* %403, align 2
  %406 = getelementptr inbounds i16, i16* %386, i64 7
  %407 = getelementptr inbounds i16, i16* %385, i64 7
  %408 = load i16, i16* %407, align 2
  store i16 %408, i16* %406, align 2
  %409 = add i64 %384, -8
  %410 = getelementptr inbounds i16, i16* %386, i64 8
  %411 = getelementptr inbounds i16, i16* %385, i64 8
  %412 = icmp eq i64 %409, 0
  br i1 %412, label %413, label %383, !llvm.loop !90

413:                                              ; preds = %378, %383, %358, %238
  %414 = bitcast %"class.std::__1::basic_string.1"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %415 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %414, i64 0, i32 1, i32 1
  %416 = load i8, i8* %415, align 1
  %417 = icmp slt i8 %416, 0
  %418 = load i64, i64* %231, align 8
  %419 = zext i8 %416 to i64
  %420 = select i1 %417, i64 %418, i64 %419
  %421 = icmp eq i64 %420, 0
  br i1 %421, label %422, label %428

422:                                              ; preds = %413
  %423 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %1, i64 0, i32 2
  %424 = call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.1"* nonnull %12, %"class.std::__1::basic_string.1"* dereferenceable(24) %423)
  %425 = load i8, i8* %415, align 1
  %426 = load i64, i64* %231, align 8
  %427 = zext i8 %425 to i64
  br label %428

428:                                              ; preds = %422, %413
  %429 = phi i64 [ %427, %422 ], [ %419, %413 ]
  %430 = phi i64 [ %426, %422 ], [ %418, %413 ]
  %431 = phi i8 [ %425, %422 ], [ %416, %413 ]
  %432 = icmp slt i8 %431, 0
  %433 = select i1 %432, i64 %430, i64 %429
  %434 = icmp eq i64 %433, 0
  br i1 %434, label %435, label %720

435:                                              ; preds = %428
  %436 = getelementptr inbounds [15 x i8], [15 x i8]* %13, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %436)
  %437 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %1, i64 0, i32 3
  %438 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %1, i64 0, i32 4
  %439 = bitcast %"class.std::__1::basic_string.1"* %437 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %440 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %439, i64 0, i32 1, i32 1
  %441 = load i8, i8* %440, align 1, !noalias !91
  %442 = icmp slt i8 %441, 0
  %443 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %444 = load i64, i64* %443, align 8, !noalias !91
  %445 = zext i8 %441 to i64
  %446 = select i1 %442, i64 %444, i64 %445
  %447 = icmp eq i64 %446, 0
  br i1 %447, label %448, label %463

448:                                              ; preds = %435
  %449 = bitcast %"class.std::__1::basic_string.1"* %438 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %450 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %449, i64 0, i32 1, i32 1
  %451 = load i8, i8* %450, align 1, !noalias !91
  %452 = icmp slt i8 %451, 0
  %453 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %454 = load i64, i64* %453, align 8, !noalias !91
  %455 = zext i8 %451 to i64
  %456 = select i1 %452, i64 %454, i64 %455
  %457 = icmp eq i64 %456, 0
  br i1 %457, label %458, label %459

458:                                              ; preds = %448
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %436, i8 0, i64 15, i1 false), !alias.scope !91
  br label %707

459:                                              ; preds = %448
  %460 = bitcast %"class.std::__1::basic_string.1"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %460) #10, !noalias !91
  %461 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %460, i8 0, i64 24, i1 false) #10, !noalias !91
  %462 = call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.1"* nonnull %7, %"class.std::__1::basic_string.1"* dereferenceable(24) %438) #10, !noalias !91
  br label %698

463:                                              ; preds = %435
  %464 = bitcast %"class.std::__1::basic_string.1"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %464) #10, !noalias !91
  %465 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %464, i8 0, i64 24, i1 false) #10, !noalias !91
  %466 = bitcast %"class.std::__1::basic_string.1"* %438 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %467 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %466, i64 0, i32 1, i32 1
  %468 = load i8, i8* %467, align 1, !noalias !91
  %469 = icmp slt i8 %468, 0
  %470 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %471 = load i64, i64* %470, align 8, !noalias !91
  %472 = zext i8 %468 to i64
  %473 = select i1 %469, i64 %471, i64 %472
  %474 = icmp eq i64 %473, 0
  br i1 %474, label %475, label %477

475:                                              ; preds = %463
  %476 = call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.1"* nonnull %7, %"class.std::__1::basic_string.1"* dereferenceable(24) %437) #10, !noalias !91
  br label %698

477:                                              ; preds = %463
  %478 = getelementptr inbounds [15 x i8], [15 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %478)
  %479 = bitcast %"class.std::__1::basic_string.1"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %479) #10, !noalias !91
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_(%"class.std::__1::basic_string.1"* nonnull sret %9, %"class.std::__1::basic_string.1"* dereferenceable(24) %437, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @.str.1, i64 0, i64 0)) #10, !noalias !91
  %480 = load i8, i8* %467, align 1, !noalias !94
  %481 = icmp slt i8 %480, 0
  %482 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %438, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %483 = load i16*, i16** %482, align 8, !noalias !94
  %484 = load i64, i64* %470, align 8, !noalias !94
  %485 = bitcast %"class.std::__1::basic_string.1"* %438 to i16*
  %486 = zext i8 %480 to i64
  %487 = select i1 %481, i16* %483, i16* %485
  %488 = select i1 %481, i64 %484, i64 %486
  %489 = bitcast %"class.std::__1::basic_string.1"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %490 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %489, i64 0, i32 1, i32 1
  %491 = load i8, i8* %490, align 1, !noalias !94
  %492 = icmp slt i8 %491, 0
  br i1 %492, label %493, label %500

493:                                              ; preds = %477
  %494 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %495 = load i64, i64* %494, align 8, !noalias !94
  %496 = and i64 %495, 9223372036854775807
  %497 = add nsw i64 %496, -1
  %498 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %499 = load i64, i64* %498, align 8, !noalias !94
  br label %502

500:                                              ; preds = %477
  %501 = zext i8 %491 to i64
  br label %502

502:                                              ; preds = %500, %493
  %503 = phi i64 [ %497, %493 ], [ 10, %500 ]
  %504 = phi i64 [ %499, %493 ], [ %501, %500 ]
  %505 = sub i64 %503, %504
  %506 = icmp ult i64 %505, %488
  br i1 %506, label %668, label %507

507:                                              ; preds = %502
  %508 = icmp eq i64 %488, 0
  br i1 %508, label %671, label %509

509:                                              ; preds = %507
  %510 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %511 = load i16*, i16** %510, align 8, !noalias !94
  %512 = bitcast %"class.std::__1::basic_string.1"* %9 to i16*
  %513 = select i1 %492, i16* %511, i16* %512
  %514 = getelementptr inbounds i16, i16* %513, i64 %504
  %515 = icmp ult i64 %488, 16
  br i1 %515, label %605, label %516

516:                                              ; preds = %509
  %517 = add i64 %488, %504
  %518 = getelementptr i16, i16* %513, i64 %517
  %519 = getelementptr i16, i16* %487, i64 %488
  %520 = icmp ult i16* %514, %519
  %521 = icmp ult i16* %487, %518
  %522 = and i1 %520, %521
  br i1 %522, label %605, label %523

523:                                              ; preds = %516
  %524 = and i64 %488, -16
  %525 = sub i64 %488, %524
  %526 = getelementptr i16, i16* %487, i64 %524
  %527 = getelementptr i16, i16* %514, i64 %524
  %528 = add i64 %524, -16
  %529 = lshr exact i64 %528, 4
  %530 = add nuw nsw i64 %529, 1
  %531 = and i64 %530, 3
  %532 = icmp ult i64 %528, 48
  br i1 %532, label %584, label %533

533:                                              ; preds = %523
  %534 = sub nsw i64 %530, %531
  br label %535

535:                                              ; preds = %535, %533
  %536 = phi i64 [ 0, %533 ], [ %581, %535 ]
  %537 = phi i64 [ %534, %533 ], [ %582, %535 ]
  %538 = getelementptr i16, i16* %487, i64 %536
  %539 = getelementptr i16, i16* %514, i64 %536
  %540 = bitcast i16* %538 to <8 x i16>*
  %541 = load <8 x i16>, <8 x i16>* %540, align 2, !alias.scope !97, !noalias !94
  %542 = getelementptr i16, i16* %538, i64 8
  %543 = bitcast i16* %542 to <8 x i16>*
  %544 = load <8 x i16>, <8 x i16>* %543, align 2, !alias.scope !97, !noalias !94
  %545 = bitcast i16* %539 to <8 x i16>*
  store <8 x i16> %541, <8 x i16>* %545, align 2, !alias.scope !100, !noalias !102
  %546 = getelementptr i16, i16* %539, i64 8
  %547 = bitcast i16* %546 to <8 x i16>*
  store <8 x i16> %544, <8 x i16>* %547, align 2, !alias.scope !100, !noalias !102
  %548 = or i64 %536, 16
  %549 = getelementptr i16, i16* %487, i64 %548
  %550 = getelementptr i16, i16* %514, i64 %548
  %551 = bitcast i16* %549 to <8 x i16>*
  %552 = load <8 x i16>, <8 x i16>* %551, align 2, !alias.scope !97, !noalias !94
  %553 = getelementptr i16, i16* %549, i64 8
  %554 = bitcast i16* %553 to <8 x i16>*
  %555 = load <8 x i16>, <8 x i16>* %554, align 2, !alias.scope !97, !noalias !94
  %556 = bitcast i16* %550 to <8 x i16>*
  store <8 x i16> %552, <8 x i16>* %556, align 2, !alias.scope !100, !noalias !102
  %557 = getelementptr i16, i16* %550, i64 8
  %558 = bitcast i16* %557 to <8 x i16>*
  store <8 x i16> %555, <8 x i16>* %558, align 2, !alias.scope !100, !noalias !102
  %559 = or i64 %536, 32
  %560 = getelementptr i16, i16* %487, i64 %559
  %561 = getelementptr i16, i16* %514, i64 %559
  %562 = bitcast i16* %560 to <8 x i16>*
  %563 = load <8 x i16>, <8 x i16>* %562, align 2, !alias.scope !97, !noalias !94
  %564 = getelementptr i16, i16* %560, i64 8
  %565 = bitcast i16* %564 to <8 x i16>*
  %566 = load <8 x i16>, <8 x i16>* %565, align 2, !alias.scope !97, !noalias !94
  %567 = bitcast i16* %561 to <8 x i16>*
  store <8 x i16> %563, <8 x i16>* %567, align 2, !alias.scope !100, !noalias !102
  %568 = getelementptr i16, i16* %561, i64 8
  %569 = bitcast i16* %568 to <8 x i16>*
  store <8 x i16> %566, <8 x i16>* %569, align 2, !alias.scope !100, !noalias !102
  %570 = or i64 %536, 48
  %571 = getelementptr i16, i16* %487, i64 %570
  %572 = getelementptr i16, i16* %514, i64 %570
  %573 = bitcast i16* %571 to <8 x i16>*
  %574 = load <8 x i16>, <8 x i16>* %573, align 2, !alias.scope !97, !noalias !94
  %575 = getelementptr i16, i16* %571, i64 8
  %576 = bitcast i16* %575 to <8 x i16>*
  %577 = load <8 x i16>, <8 x i16>* %576, align 2, !alias.scope !97, !noalias !94
  %578 = bitcast i16* %572 to <8 x i16>*
  store <8 x i16> %574, <8 x i16>* %578, align 2, !alias.scope !100, !noalias !102
  %579 = getelementptr i16, i16* %572, i64 8
  %580 = bitcast i16* %579 to <8 x i16>*
  store <8 x i16> %577, <8 x i16>* %580, align 2, !alias.scope !100, !noalias !102
  %581 = add i64 %536, 64
  %582 = add i64 %537, -4
  %583 = icmp eq i64 %582, 0
  br i1 %583, label %584, label %535, !llvm.loop !103

584:                                              ; preds = %535, %523
  %585 = phi i64 [ 0, %523 ], [ %581, %535 ]
  %586 = icmp eq i64 %531, 0
  br i1 %586, label %603, label %587

587:                                              ; preds = %584, %587
  %588 = phi i64 [ %600, %587 ], [ %585, %584 ]
  %589 = phi i64 [ %601, %587 ], [ %531, %584 ]
  %590 = getelementptr i16, i16* %487, i64 %588
  %591 = getelementptr i16, i16* %514, i64 %588
  %592 = bitcast i16* %590 to <8 x i16>*
  %593 = load <8 x i16>, <8 x i16>* %592, align 2, !alias.scope !97, !noalias !94
  %594 = getelementptr i16, i16* %590, i64 8
  %595 = bitcast i16* %594 to <8 x i16>*
  %596 = load <8 x i16>, <8 x i16>* %595, align 2, !alias.scope !97, !noalias !94
  %597 = bitcast i16* %591 to <8 x i16>*
  store <8 x i16> %593, <8 x i16>* %597, align 2, !alias.scope !100, !noalias !102
  %598 = getelementptr i16, i16* %591, i64 8
  %599 = bitcast i16* %598 to <8 x i16>*
  store <8 x i16> %596, <8 x i16>* %599, align 2, !alias.scope !100, !noalias !102
  %600 = add i64 %588, 16
  %601 = add i64 %589, -1
  %602 = icmp eq i64 %601, 0
  br i1 %602, label %603, label %587, !llvm.loop !104

603:                                              ; preds = %587, %584
  %604 = icmp eq i64 %488, %524
  br i1 %604, label %658, label %605

605:                                              ; preds = %603, %516, %509
  %606 = phi i64 [ %488, %516 ], [ %488, %509 ], [ %525, %603 ]
  %607 = phi i16* [ %487, %516 ], [ %487, %509 ], [ %526, %603 ]
  %608 = phi i16* [ %514, %516 ], [ %514, %509 ], [ %527, %603 ]
  %609 = add i64 %606, -1
  %610 = and i64 %606, 7
  %611 = icmp eq i64 %610, 0
  br i1 %611, label %623, label %612

612:                                              ; preds = %605, %612
  %613 = phi i64 [ %618, %612 ], [ %606, %605 ]
  %614 = phi i16* [ %620, %612 ], [ %607, %605 ]
  %615 = phi i16* [ %619, %612 ], [ %608, %605 ]
  %616 = phi i64 [ %621, %612 ], [ %610, %605 ]
  %617 = load i16, i16* %614, align 2, !noalias !94
  store i16 %617, i16* %615, align 2, !noalias !94
  %618 = add i64 %613, -1
  %619 = getelementptr inbounds i16, i16* %615, i64 1
  %620 = getelementptr inbounds i16, i16* %614, i64 1
  %621 = add i64 %616, -1
  %622 = icmp eq i64 %621, 0
  br i1 %622, label %623, label %612, !llvm.loop !105

623:                                              ; preds = %612, %605
  %624 = phi i64 [ %606, %605 ], [ %618, %612 ]
  %625 = phi i16* [ %607, %605 ], [ %620, %612 ]
  %626 = phi i16* [ %608, %605 ], [ %619, %612 ]
  %627 = icmp ult i64 %609, 7
  br i1 %627, label %658, label %628

628:                                              ; preds = %623, %628
  %629 = phi i64 [ %654, %628 ], [ %624, %623 ]
  %630 = phi i16* [ %656, %628 ], [ %625, %623 ]
  %631 = phi i16* [ %655, %628 ], [ %626, %623 ]
  %632 = load i16, i16* %630, align 2, !noalias !94
  store i16 %632, i16* %631, align 2, !noalias !94
  %633 = getelementptr inbounds i16, i16* %631, i64 1
  %634 = getelementptr inbounds i16, i16* %630, i64 1
  %635 = load i16, i16* %634, align 2, !noalias !94
  store i16 %635, i16* %633, align 2, !noalias !94
  %636 = getelementptr inbounds i16, i16* %631, i64 2
  %637 = getelementptr inbounds i16, i16* %630, i64 2
  %638 = load i16, i16* %637, align 2, !noalias !94
  store i16 %638, i16* %636, align 2, !noalias !94
  %639 = getelementptr inbounds i16, i16* %631, i64 3
  %640 = getelementptr inbounds i16, i16* %630, i64 3
  %641 = load i16, i16* %640, align 2, !noalias !94
  store i16 %641, i16* %639, align 2, !noalias !94
  %642 = getelementptr inbounds i16, i16* %631, i64 4
  %643 = getelementptr inbounds i16, i16* %630, i64 4
  %644 = load i16, i16* %643, align 2, !noalias !94
  store i16 %644, i16* %642, align 2, !noalias !94
  %645 = getelementptr inbounds i16, i16* %631, i64 5
  %646 = getelementptr inbounds i16, i16* %630, i64 5
  %647 = load i16, i16* %646, align 2, !noalias !94
  store i16 %647, i16* %645, align 2, !noalias !94
  %648 = getelementptr inbounds i16, i16* %631, i64 6
  %649 = getelementptr inbounds i16, i16* %630, i64 6
  %650 = load i16, i16* %649, align 2, !noalias !94
  store i16 %650, i16* %648, align 2, !noalias !94
  %651 = getelementptr inbounds i16, i16* %631, i64 7
  %652 = getelementptr inbounds i16, i16* %630, i64 7
  %653 = load i16, i16* %652, align 2, !noalias !94
  store i16 %653, i16* %651, align 2, !noalias !94
  %654 = add i64 %629, -8
  %655 = getelementptr inbounds i16, i16* %631, i64 8
  %656 = getelementptr inbounds i16, i16* %630, i64 8
  %657 = icmp eq i64 %654, 0
  br i1 %657, label %658, label %628, !llvm.loop !106

658:                                              ; preds = %623, %628, %603
  %659 = add i64 %504, %488
  %660 = load i8, i8* %490, align 1, !noalias !94
  %661 = icmp slt i8 %660, 0
  br i1 %661, label %662, label %664

662:                                              ; preds = %658
  %663 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %659, i64* %663, align 8, !noalias !94
  br label %666

664:                                              ; preds = %658
  %665 = trunc i64 %659 to i8
  store i8 %665, i8* %490, align 1, !noalias !94
  br label %666

666:                                              ; preds = %664, %662
  %667 = getelementptr inbounds i16, i16* %513, i64 %659
  store i16 0, i16* %667, align 2, !noalias !94
  br label %671

668:                                              ; preds = %502
  %669 = add i64 %504, %488
  %670 = sub i64 %669, %503
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.1"* nonnull %9, i64 %503, i64 %670, i64 %504, i64 %504, i64 0, i64 %488, i16* %487) #10, !noalias !94
  br label %671

671:                                              ; preds = %668, %666, %507
  %672 = bitcast %"class.std::__1::basic_string.1"* %9 to i8**
  %673 = bitcast %"class.std::__1::basic_string.1"* %9 to i64*
  %674 = load i64, i64* %673, align 8, !noalias !91
  %675 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %676 = bitcast i64* %675 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %478, i8* align 8 %676, i64 15, i1 false) #10, !noalias !91
  %677 = getelementptr inbounds i8, i8* %479, i64 23
  %678 = load i8, i8* %677, align 1, !noalias !91
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %479, i8 0, i64 24, i1 false) #10, !noalias !94
  %679 = bitcast %"class.std::__1::basic_string.1"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %680 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %679, i64 0, i32 1, i32 1
  %681 = load i8, i8* %680, align 1, !noalias !91
  %682 = icmp slt i8 %681, 0
  br i1 %682, label %687, label %683

683:                                              ; preds = %671
  %684 = bitcast %"class.std::__1::basic_string.1"* %7 to i64*
  store i64 %674, i64* %684, align 8, !noalias !91
  %685 = bitcast i64* %465 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %685, i8* nonnull align 8 %478, i64 15, i1 false) #10, !noalias !91
  %686 = getelementptr inbounds i8, i8* %464, i64 23
  store i8 %678, i8* %686, align 1, !noalias !91
  br label %697

687:                                              ; preds = %671
  %688 = bitcast %"class.std::__1::basic_string.1"* %7 to i8**
  %689 = load i8*, i8** %688, align 8, !noalias !91
  call void @_ZdlPv(i8* %689) #12, !noalias !91
  %690 = load i8, i8* %490, align 1, !noalias !91
  %691 = icmp slt i8 %690, 0
  %692 = bitcast %"class.std::__1::basic_string.1"* %7 to i64*
  store i64 %674, i64* %692, align 8, !noalias !91
  %693 = bitcast i64* %465 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %693, i8* nonnull align 8 %478, i64 15, i1 false) #10, !noalias !91
  %694 = getelementptr inbounds i8, i8* %464, i64 23
  store i8 %678, i8* %694, align 1, !noalias !91
  br i1 %691, label %695, label %697

695:                                              ; preds = %687
  %696 = load i8*, i8** %672, align 8, !noalias !91
  call void @_ZdlPv(i8* %696) #12, !noalias !91
  br label %697

697:                                              ; preds = %695, %687, %683
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %479) #10, !noalias !91
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %478)
  br label %698

698:                                              ; preds = %697, %475, %459
  %699 = phi i64* [ %465, %697 ], [ %465, %475 ], [ %461, %459 ]
  %700 = phi i8* [ %464, %697 ], [ %464, %475 ], [ %460, %459 ]
  %701 = bitcast %"class.std::__1::basic_string.1"* %7 to i8**
  %702 = load i8*, i8** %701, align 8
  %703 = bitcast i64* %699 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %436, i8* align 8 %703, i64 15, i1 false)
  %704 = getelementptr inbounds i8, i8* %700, i64 23
  %705 = load i8, i8* %704, align 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %700) #10, !noalias !91
  %706 = load i8, i8* %415, align 1
  br label %707

707:                                              ; preds = %458, %698
  %708 = phi i8 [ %431, %458 ], [ %706, %698 ]
  %709 = phi i8* [ null, %458 ], [ %702, %698 ]
  %710 = phi i8 [ 0, %458 ], [ %705, %698 ]
  %711 = icmp slt i8 %708, 0
  %712 = bitcast %"class.std::__1::basic_string.1"* %12 to i8**
  br i1 %711, label %713, label %715

713:                                              ; preds = %707
  %714 = load i8*, i8** %712, align 8
  call void @_ZdlPv(i8* %714) #12
  br label %715

715:                                              ; preds = %707, %713
  store i8* %709, i8** %712, align 8
  %716 = bitcast i64* %231 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %716, i8* nonnull align 8 %436, i64 15, i1 false)
  %717 = getelementptr inbounds i8, i8* %229, i64 23
  store i8 %710, i8* %717, align 1
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %436)
  %718 = load i64, i64* %231, align 8
  %719 = zext i8 %710 to i64
  br label %720

720:                                              ; preds = %715, %428
  %721 = phi i64 [ %719, %715 ], [ %429, %428 ]
  %722 = phi i64 [ %718, %715 ], [ %430, %428 ]
  %723 = phi i8 [ %710, %715 ], [ %431, %428 ]
  %724 = icmp slt i8 %723, 0
  %725 = select i1 %724, i64 %722, i64 %721
  %726 = icmp eq i64 %725, 0
  br i1 %726, label %727, label %729

727:                                              ; preds = %720
  %728 = call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6assignEPKDs(%"class.std::__1::basic_string.1"* nonnull %12, i16* getelementptr inbounds ([17 x i16], [17 x i16]* @.str, i64 0, i64 0)) #10
  br label %729

729:                                              ; preds = %727, %720
  br i1 %3, label %730, label %1153

730:                                              ; preds = %729
  %731 = bitcast %"class.std::__1::basic_string.1"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %731) #10
  %732 = getelementptr inbounds %"class.storage_monitor::StorageInfo", %"class.storage_monitor::StorageInfo"* %1, i64 0, i32 5
  %733 = load i64, i64* %732, align 8
  %734 = icmp eq i64 %733, 0
  br i1 %734, label %735, label %912

735:                                              ; preds = %730
  %736 = load i8, i8* %415, align 1
  %737 = icmp slt i8 %736, 0
  br i1 %737, label %739, label %738

738:                                              ; preds = %735
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %731, i8* nonnull align 8 %229, i64 24, i1 false) #10
  br label %1152

739:                                              ; preds = %735
  %740 = load i16*, i16** %230, align 8, !noalias !107
  %741 = load i64, i64* %231, align 8, !noalias !107
  %742 = icmp ult i64 %741, 11
  br i1 %742, label %743, label %748

743:                                              ; preds = %739
  %744 = bitcast %"class.std::__1::basic_string.1"* %14 to i16*
  %745 = trunc i64 %741 to i8
  %746 = bitcast %"class.std::__1::basic_string.1"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %747 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %746, i64 0, i32 1, i32 1
  store i8 %745, i8* %747, align 1, !alias.scope !107
  br label %765

748:                                              ; preds = %739
  %749 = icmp ugt i64 %741, 9223372036854775791
  br i1 %749, label %750, label %752

750:                                              ; preds = %748
  %751 = bitcast %"class.std::__1::basic_string.1"* %14 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %751) #11
  unreachable

752:                                              ; preds = %748
  %753 = add nuw nsw i64 %741, 8
  %754 = and i64 %753, -8
  %755 = icmp slt i64 %754, 0
  br i1 %755, label %756, label %757

756:                                              ; preds = %752
  call void @abort() #11
  unreachable

757:                                              ; preds = %752
  %758 = shl i64 %754, 1
  %759 = call i8* @_Znwm(i64 %758) #12
  %760 = bitcast i8* %759 to i16*
  %761 = bitcast %"class.std::__1::basic_string.1"* %14 to i8**
  store i8* %759, i8** %761, align 8, !alias.scope !107
  %762 = or i64 %754, -9223372036854775808
  %763 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %762, i64* %763, align 8, !alias.scope !107
  %764 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %741, i64* %764, align 8, !alias.scope !107
  br label %765

765:                                              ; preds = %757, %743
  %766 = phi i16* [ %744, %743 ], [ %760, %757 ]
  %767 = add nuw nsw i64 %741, 1
  %768 = add i64 %741, 1
  %769 = icmp ult i64 %768, 16
  br i1 %769, label %859, label %770

770:                                              ; preds = %765
  %771 = add i64 %741, 1
  %772 = getelementptr i16, i16* %766, i64 %771
  %773 = getelementptr i16, i16* %740, i64 %771
  %774 = icmp ult i16* %766, %773
  %775 = icmp ult i16* %740, %772
  %776 = and i1 %774, %775
  br i1 %776, label %859, label %777

777:                                              ; preds = %770
  %778 = and i64 %768, -16
  %779 = sub i64 %767, %778
  %780 = getelementptr i16, i16* %740, i64 %778
  %781 = getelementptr i16, i16* %766, i64 %778
  %782 = add i64 %778, -16
  %783 = lshr exact i64 %782, 4
  %784 = add nuw nsw i64 %783, 1
  %785 = and i64 %784, 3
  %786 = icmp ult i64 %782, 48
  br i1 %786, label %838, label %787

787:                                              ; preds = %777
  %788 = sub nsw i64 %784, %785
  br label %789

789:                                              ; preds = %789, %787
  %790 = phi i64 [ 0, %787 ], [ %835, %789 ]
  %791 = phi i64 [ %788, %787 ], [ %836, %789 ]
  %792 = getelementptr i16, i16* %740, i64 %790
  %793 = getelementptr i16, i16* %766, i64 %790
  %794 = bitcast i16* %792 to <8 x i16>*
  %795 = load <8 x i16>, <8 x i16>* %794, align 2, !alias.scope !110
  %796 = getelementptr i16, i16* %792, i64 8
  %797 = bitcast i16* %796 to <8 x i16>*
  %798 = load <8 x i16>, <8 x i16>* %797, align 2, !alias.scope !110
  %799 = bitcast i16* %793 to <8 x i16>*
  store <8 x i16> %795, <8 x i16>* %799, align 2, !alias.scope !113, !noalias !110
  %800 = getelementptr i16, i16* %793, i64 8
  %801 = bitcast i16* %800 to <8 x i16>*
  store <8 x i16> %798, <8 x i16>* %801, align 2, !alias.scope !113, !noalias !110
  %802 = or i64 %790, 16
  %803 = getelementptr i16, i16* %740, i64 %802
  %804 = getelementptr i16, i16* %766, i64 %802
  %805 = bitcast i16* %803 to <8 x i16>*
  %806 = load <8 x i16>, <8 x i16>* %805, align 2, !alias.scope !110
  %807 = getelementptr i16, i16* %803, i64 8
  %808 = bitcast i16* %807 to <8 x i16>*
  %809 = load <8 x i16>, <8 x i16>* %808, align 2, !alias.scope !110
  %810 = bitcast i16* %804 to <8 x i16>*
  store <8 x i16> %806, <8 x i16>* %810, align 2, !alias.scope !113, !noalias !110
  %811 = getelementptr i16, i16* %804, i64 8
  %812 = bitcast i16* %811 to <8 x i16>*
  store <8 x i16> %809, <8 x i16>* %812, align 2, !alias.scope !113, !noalias !110
  %813 = or i64 %790, 32
  %814 = getelementptr i16, i16* %740, i64 %813
  %815 = getelementptr i16, i16* %766, i64 %813
  %816 = bitcast i16* %814 to <8 x i16>*
  %817 = load <8 x i16>, <8 x i16>* %816, align 2, !alias.scope !110
  %818 = getelementptr i16, i16* %814, i64 8
  %819 = bitcast i16* %818 to <8 x i16>*
  %820 = load <8 x i16>, <8 x i16>* %819, align 2, !alias.scope !110
  %821 = bitcast i16* %815 to <8 x i16>*
  store <8 x i16> %817, <8 x i16>* %821, align 2, !alias.scope !113, !noalias !110
  %822 = getelementptr i16, i16* %815, i64 8
  %823 = bitcast i16* %822 to <8 x i16>*
  store <8 x i16> %820, <8 x i16>* %823, align 2, !alias.scope !113, !noalias !110
  %824 = or i64 %790, 48
  %825 = getelementptr i16, i16* %740, i64 %824
  %826 = getelementptr i16, i16* %766, i64 %824
  %827 = bitcast i16* %825 to <8 x i16>*
  %828 = load <8 x i16>, <8 x i16>* %827, align 2, !alias.scope !110
  %829 = getelementptr i16, i16* %825, i64 8
  %830 = bitcast i16* %829 to <8 x i16>*
  %831 = load <8 x i16>, <8 x i16>* %830, align 2, !alias.scope !110
  %832 = bitcast i16* %826 to <8 x i16>*
  store <8 x i16> %828, <8 x i16>* %832, align 2, !alias.scope !113, !noalias !110
  %833 = getelementptr i16, i16* %826, i64 8
  %834 = bitcast i16* %833 to <8 x i16>*
  store <8 x i16> %831, <8 x i16>* %834, align 2, !alias.scope !113, !noalias !110
  %835 = add i64 %790, 64
  %836 = add i64 %791, -4
  %837 = icmp eq i64 %836, 0
  br i1 %837, label %838, label %789, !llvm.loop !115

838:                                              ; preds = %789, %777
  %839 = phi i64 [ 0, %777 ], [ %835, %789 ]
  %840 = icmp eq i64 %785, 0
  br i1 %840, label %857, label %841

841:                                              ; preds = %838, %841
  %842 = phi i64 [ %854, %841 ], [ %839, %838 ]
  %843 = phi i64 [ %855, %841 ], [ %785, %838 ]
  %844 = getelementptr i16, i16* %740, i64 %842
  %845 = getelementptr i16, i16* %766, i64 %842
  %846 = bitcast i16* %844 to <8 x i16>*
  %847 = load <8 x i16>, <8 x i16>* %846, align 2, !alias.scope !110
  %848 = getelementptr i16, i16* %844, i64 8
  %849 = bitcast i16* %848 to <8 x i16>*
  %850 = load <8 x i16>, <8 x i16>* %849, align 2, !alias.scope !110
  %851 = bitcast i16* %845 to <8 x i16>*
  store <8 x i16> %847, <8 x i16>* %851, align 2, !alias.scope !113, !noalias !110
  %852 = getelementptr i16, i16* %845, i64 8
  %853 = bitcast i16* %852 to <8 x i16>*
  store <8 x i16> %850, <8 x i16>* %853, align 2, !alias.scope !113, !noalias !110
  %854 = add i64 %842, 16
  %855 = add i64 %843, -1
  %856 = icmp eq i64 %855, 0
  br i1 %856, label %857, label %841, !llvm.loop !116

857:                                              ; preds = %841, %838
  %858 = icmp eq i64 %768, %778
  br i1 %858, label %1146, label %859

859:                                              ; preds = %857, %770, %765
  %860 = phi i64 [ %767, %770 ], [ %767, %765 ], [ %779, %857 ]
  %861 = phi i16* [ %740, %770 ], [ %740, %765 ], [ %780, %857 ]
  %862 = phi i16* [ %766, %770 ], [ %766, %765 ], [ %781, %857 ]
  %863 = add i64 %860, -1
  %864 = and i64 %860, 7
  %865 = icmp eq i64 %864, 0
  br i1 %865, label %877, label %866

866:                                              ; preds = %859, %866
  %867 = phi i64 [ %872, %866 ], [ %860, %859 ]
  %868 = phi i16* [ %874, %866 ], [ %861, %859 ]
  %869 = phi i16* [ %873, %866 ], [ %862, %859 ]
  %870 = phi i64 [ %875, %866 ], [ %864, %859 ]
  %871 = load i16, i16* %868, align 2
  store i16 %871, i16* %869, align 2
  %872 = add i64 %867, -1
  %873 = getelementptr inbounds i16, i16* %869, i64 1
  %874 = getelementptr inbounds i16, i16* %868, i64 1
  %875 = add i64 %870, -1
  %876 = icmp eq i64 %875, 0
  br i1 %876, label %877, label %866, !llvm.loop !117

877:                                              ; preds = %866, %859
  %878 = phi i64 [ %860, %859 ], [ %872, %866 ]
  %879 = phi i16* [ %861, %859 ], [ %874, %866 ]
  %880 = phi i16* [ %862, %859 ], [ %873, %866 ]
  %881 = icmp ult i64 %863, 7
  br i1 %881, label %1146, label %882

882:                                              ; preds = %877, %882
  %883 = phi i64 [ %908, %882 ], [ %878, %877 ]
  %884 = phi i16* [ %910, %882 ], [ %879, %877 ]
  %885 = phi i16* [ %909, %882 ], [ %880, %877 ]
  %886 = load i16, i16* %884, align 2
  store i16 %886, i16* %885, align 2
  %887 = getelementptr inbounds i16, i16* %885, i64 1
  %888 = getelementptr inbounds i16, i16* %884, i64 1
  %889 = load i16, i16* %888, align 2
  store i16 %889, i16* %887, align 2
  %890 = getelementptr inbounds i16, i16* %885, i64 2
  %891 = getelementptr inbounds i16, i16* %884, i64 2
  %892 = load i16, i16* %891, align 2
  store i16 %892, i16* %890, align 2
  %893 = getelementptr inbounds i16, i16* %885, i64 3
  %894 = getelementptr inbounds i16, i16* %884, i64 3
  %895 = load i16, i16* %894, align 2
  store i16 %895, i16* %893, align 2
  %896 = getelementptr inbounds i16, i16* %885, i64 4
  %897 = getelementptr inbounds i16, i16* %884, i64 4
  %898 = load i16, i16* %897, align 2
  store i16 %898, i16* %896, align 2
  %899 = getelementptr inbounds i16, i16* %885, i64 5
  %900 = getelementptr inbounds i16, i16* %884, i64 5
  %901 = load i16, i16* %900, align 2
  store i16 %901, i16* %899, align 2
  %902 = getelementptr inbounds i16, i16* %885, i64 6
  %903 = getelementptr inbounds i16, i16* %884, i64 6
  %904 = load i16, i16* %903, align 2
  store i16 %904, i16* %902, align 2
  %905 = getelementptr inbounds i16, i16* %885, i64 7
  %906 = getelementptr inbounds i16, i16* %884, i64 7
  %907 = load i16, i16* %906, align 2
  store i16 %907, i16* %905, align 2
  %908 = add i64 %883, -8
  %909 = getelementptr inbounds i16, i16* %885, i64 8
  %910 = getelementptr inbounds i16, i16* %884, i64 8
  %911 = icmp eq i64 %908, 0
  br i1 %911, label %1146, label %882, !llvm.loop !118

912:                                              ; preds = %730
  %913 = bitcast %"class.std::__1::basic_string.1"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %913) #10, !noalias !107
  %914 = bitcast %"class.std::__1::basic_string.1"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %914) #10, !noalias !107
  call void @_ZN2ui11FormatBytesEl(%"class.std::__1::basic_string.1"* nonnull sret %6, i64 %733) #10
  %915 = bitcast %"class.std::__1::basic_string.1"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %916 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %915, i64 0, i32 1, i32 1
  %917 = load i8, i8* %916, align 1, !noalias !119
  %918 = icmp slt i8 %917, 0
  br i1 %918, label %919, label %926

919:                                              ; preds = %912
  %920 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %921 = load i64, i64* %920, align 8, !noalias !119
  %922 = and i64 %921, 9223372036854775807
  %923 = add nsw i64 %922, -1
  %924 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %925 = load i64, i64* %924, align 8, !noalias !119
  br label %928

926:                                              ; preds = %912
  %927 = zext i8 %917 to i64
  br label %928

928:                                              ; preds = %926, %919
  %929 = phi i64 [ %923, %919 ], [ 10, %926 ]
  %930 = phi i64 [ %925, %919 ], [ %927, %926 ]
  %931 = icmp eq i64 %929, %930
  br i1 %931, label %947, label %932

932:                                              ; preds = %928
  %933 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %934 = load i16*, i16** %933, align 8, !noalias !119
  %935 = bitcast %"class.std::__1::basic_string.1"* %6 to i16*
  %936 = select i1 %918, i16* %934, i16* %935
  %937 = getelementptr inbounds i16, i16* %936, i64 %930
  store i16 32, i16* %937, align 2, !noalias !122
  %938 = add i64 %930, 1
  %939 = load i8, i8* %916, align 1, !noalias !119
  %940 = icmp slt i8 %939, 0
  br i1 %940, label %941, label %943

941:                                              ; preds = %932
  %942 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %938, i64* %942, align 8, !noalias !119
  br label %945

943:                                              ; preds = %932
  %944 = trunc i64 %938 to i8
  store i8 %944, i8* %916, align 1, !noalias !119
  br label %945

945:                                              ; preds = %943, %941
  %946 = getelementptr inbounds i16, i16* %936, i64 %938
  store i16 0, i16* %946, align 2, !noalias !122
  br label %948

947:                                              ; preds = %928
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.1"* nonnull %6, i64 %929, i64 1, i64 %929, i64 %929, i64 0, i64 1, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @.str.3, i64 0, i64 0)) #10, !noalias !122
  br label %948

948:                                              ; preds = %947, %945
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %913, i8* nonnull align 8 %914, i64 24, i1 false) #10, !noalias !107
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %914, i8 0, i64 24, i1 false) #10, !noalias !119
  %949 = load i8, i8* %415, align 1, !noalias !123
  %950 = icmp slt i8 %949, 0
  %951 = load i16*, i16** %230, align 8, !noalias !123
  %952 = load i64, i64* %231, align 8, !noalias !123
  %953 = bitcast %"class.std::__1::basic_string.1"* %12 to i16*
  %954 = zext i8 %949 to i64
  %955 = select i1 %950, i16* %951, i16* %953
  %956 = select i1 %950, i64 %952, i64 %954
  %957 = bitcast %"class.std::__1::basic_string.1"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %958 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %957, i64 0, i32 1, i32 1
  %959 = load i8, i8* %958, align 1, !noalias !123
  %960 = icmp slt i8 %959, 0
  br i1 %960, label %961, label %968

961:                                              ; preds = %948
  %962 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %963 = load i64, i64* %962, align 8, !noalias !123
  %964 = and i64 %963, 9223372036854775807
  %965 = add nsw i64 %964, -1
  %966 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %967 = load i64, i64* %966, align 8, !noalias !123
  br label %970

968:                                              ; preds = %948
  %969 = zext i8 %959 to i64
  br label %970

970:                                              ; preds = %968, %961
  %971 = phi i64 [ %965, %961 ], [ 10, %968 ]
  %972 = phi i64 [ %967, %961 ], [ %969, %968 ]
  %973 = sub i64 %971, %972
  %974 = icmp ult i64 %973, %956
  br i1 %974, label %1136, label %975

975:                                              ; preds = %970
  %976 = icmp eq i64 %956, 0
  br i1 %976, label %1139, label %977

977:                                              ; preds = %975
  %978 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %979 = load i16*, i16** %978, align 8, !noalias !123
  %980 = bitcast %"class.std::__1::basic_string.1"* %5 to i16*
  %981 = select i1 %960, i16* %979, i16* %980
  %982 = getelementptr inbounds i16, i16* %981, i64 %972
  %983 = icmp ult i64 %956, 16
  br i1 %983, label %1073, label %984

984:                                              ; preds = %977
  %985 = add i64 %956, %972
  %986 = getelementptr i16, i16* %981, i64 %985
  %987 = getelementptr i16, i16* %955, i64 %956
  %988 = icmp ult i16* %982, %987
  %989 = icmp ult i16* %955, %986
  %990 = and i1 %988, %989
  br i1 %990, label %1073, label %991

991:                                              ; preds = %984
  %992 = and i64 %956, -16
  %993 = sub i64 %956, %992
  %994 = getelementptr i16, i16* %955, i64 %992
  %995 = getelementptr i16, i16* %982, i64 %992
  %996 = add i64 %992, -16
  %997 = lshr exact i64 %996, 4
  %998 = add nuw nsw i64 %997, 1
  %999 = and i64 %998, 3
  %1000 = icmp ult i64 %996, 48
  br i1 %1000, label %1052, label %1001

1001:                                             ; preds = %991
  %1002 = sub nsw i64 %998, %999
  br label %1003

1003:                                             ; preds = %1003, %1001
  %1004 = phi i64 [ 0, %1001 ], [ %1049, %1003 ]
  %1005 = phi i64 [ %1002, %1001 ], [ %1050, %1003 ]
  %1006 = getelementptr i16, i16* %955, i64 %1004
  %1007 = getelementptr i16, i16* %982, i64 %1004
  %1008 = bitcast i16* %1006 to <8 x i16>*
  %1009 = load <8 x i16>, <8 x i16>* %1008, align 2, !alias.scope !126, !noalias !129
  %1010 = getelementptr i16, i16* %1006, i64 8
  %1011 = bitcast i16* %1010 to <8 x i16>*
  %1012 = load <8 x i16>, <8 x i16>* %1011, align 2, !alias.scope !126, !noalias !129
  %1013 = bitcast i16* %1007 to <8 x i16>*
  store <8 x i16> %1009, <8 x i16>* %1013, align 2, !alias.scope !130, !noalias !132
  %1014 = getelementptr i16, i16* %1007, i64 8
  %1015 = bitcast i16* %1014 to <8 x i16>*
  store <8 x i16> %1012, <8 x i16>* %1015, align 2, !alias.scope !130, !noalias !132
  %1016 = or i64 %1004, 16
  %1017 = getelementptr i16, i16* %955, i64 %1016
  %1018 = getelementptr i16, i16* %982, i64 %1016
  %1019 = bitcast i16* %1017 to <8 x i16>*
  %1020 = load <8 x i16>, <8 x i16>* %1019, align 2, !alias.scope !126, !noalias !129
  %1021 = getelementptr i16, i16* %1017, i64 8
  %1022 = bitcast i16* %1021 to <8 x i16>*
  %1023 = load <8 x i16>, <8 x i16>* %1022, align 2, !alias.scope !126, !noalias !129
  %1024 = bitcast i16* %1018 to <8 x i16>*
  store <8 x i16> %1020, <8 x i16>* %1024, align 2, !alias.scope !130, !noalias !132
  %1025 = getelementptr i16, i16* %1018, i64 8
  %1026 = bitcast i16* %1025 to <8 x i16>*
  store <8 x i16> %1023, <8 x i16>* %1026, align 2, !alias.scope !130, !noalias !132
  %1027 = or i64 %1004, 32
  %1028 = getelementptr i16, i16* %955, i64 %1027
  %1029 = getelementptr i16, i16* %982, i64 %1027
  %1030 = bitcast i16* %1028 to <8 x i16>*
  %1031 = load <8 x i16>, <8 x i16>* %1030, align 2, !alias.scope !126, !noalias !129
  %1032 = getelementptr i16, i16* %1028, i64 8
  %1033 = bitcast i16* %1032 to <8 x i16>*
  %1034 = load <8 x i16>, <8 x i16>* %1033, align 2, !alias.scope !126, !noalias !129
  %1035 = bitcast i16* %1029 to <8 x i16>*
  store <8 x i16> %1031, <8 x i16>* %1035, align 2, !alias.scope !130, !noalias !132
  %1036 = getelementptr i16, i16* %1029, i64 8
  %1037 = bitcast i16* %1036 to <8 x i16>*
  store <8 x i16> %1034, <8 x i16>* %1037, align 2, !alias.scope !130, !noalias !132
  %1038 = or i64 %1004, 48
  %1039 = getelementptr i16, i16* %955, i64 %1038
  %1040 = getelementptr i16, i16* %982, i64 %1038
  %1041 = bitcast i16* %1039 to <8 x i16>*
  %1042 = load <8 x i16>, <8 x i16>* %1041, align 2, !alias.scope !126, !noalias !129
  %1043 = getelementptr i16, i16* %1039, i64 8
  %1044 = bitcast i16* %1043 to <8 x i16>*
  %1045 = load <8 x i16>, <8 x i16>* %1044, align 2, !alias.scope !126, !noalias !129
  %1046 = bitcast i16* %1040 to <8 x i16>*
  store <8 x i16> %1042, <8 x i16>* %1046, align 2, !alias.scope !130, !noalias !132
  %1047 = getelementptr i16, i16* %1040, i64 8
  %1048 = bitcast i16* %1047 to <8 x i16>*
  store <8 x i16> %1045, <8 x i16>* %1048, align 2, !alias.scope !130, !noalias !132
  %1049 = add i64 %1004, 64
  %1050 = add i64 %1005, -4
  %1051 = icmp eq i64 %1050, 0
  br i1 %1051, label %1052, label %1003, !llvm.loop !133

1052:                                             ; preds = %1003, %991
  %1053 = phi i64 [ 0, %991 ], [ %1049, %1003 ]
  %1054 = icmp eq i64 %999, 0
  br i1 %1054, label %1071, label %1055

1055:                                             ; preds = %1052, %1055
  %1056 = phi i64 [ %1068, %1055 ], [ %1053, %1052 ]
  %1057 = phi i64 [ %1069, %1055 ], [ %999, %1052 ]
  %1058 = getelementptr i16, i16* %955, i64 %1056
  %1059 = getelementptr i16, i16* %982, i64 %1056
  %1060 = bitcast i16* %1058 to <8 x i16>*
  %1061 = load <8 x i16>, <8 x i16>* %1060, align 2, !alias.scope !126, !noalias !129
  %1062 = getelementptr i16, i16* %1058, i64 8
  %1063 = bitcast i16* %1062 to <8 x i16>*
  %1064 = load <8 x i16>, <8 x i16>* %1063, align 2, !alias.scope !126, !noalias !129
  %1065 = bitcast i16* %1059 to <8 x i16>*
  store <8 x i16> %1061, <8 x i16>* %1065, align 2, !alias.scope !130, !noalias !132
  %1066 = getelementptr i16, i16* %1059, i64 8
  %1067 = bitcast i16* %1066 to <8 x i16>*
  store <8 x i16> %1064, <8 x i16>* %1067, align 2, !alias.scope !130, !noalias !132
  %1068 = add i64 %1056, 16
  %1069 = add i64 %1057, -1
  %1070 = icmp eq i64 %1069, 0
  br i1 %1070, label %1071, label %1055, !llvm.loop !134

1071:                                             ; preds = %1055, %1052
  %1072 = icmp eq i64 %956, %992
  br i1 %1072, label %1126, label %1073

1073:                                             ; preds = %1071, %984, %977
  %1074 = phi i64 [ %956, %984 ], [ %956, %977 ], [ %993, %1071 ]
  %1075 = phi i16* [ %955, %984 ], [ %955, %977 ], [ %994, %1071 ]
  %1076 = phi i16* [ %982, %984 ], [ %982, %977 ], [ %995, %1071 ]
  %1077 = add i64 %1074, -1
  %1078 = and i64 %1074, 7
  %1079 = icmp eq i64 %1078, 0
  br i1 %1079, label %1091, label %1080

1080:                                             ; preds = %1073, %1080
  %1081 = phi i64 [ %1086, %1080 ], [ %1074, %1073 ]
  %1082 = phi i16* [ %1088, %1080 ], [ %1075, %1073 ]
  %1083 = phi i16* [ %1087, %1080 ], [ %1076, %1073 ]
  %1084 = phi i64 [ %1089, %1080 ], [ %1078, %1073 ]
  %1085 = load i16, i16* %1082, align 2, !noalias !129
  store i16 %1085, i16* %1083, align 2, !noalias !129
  %1086 = add i64 %1081, -1
  %1087 = getelementptr inbounds i16, i16* %1083, i64 1
  %1088 = getelementptr inbounds i16, i16* %1082, i64 1
  %1089 = add i64 %1084, -1
  %1090 = icmp eq i64 %1089, 0
  br i1 %1090, label %1091, label %1080, !llvm.loop !135

1091:                                             ; preds = %1080, %1073
  %1092 = phi i64 [ %1074, %1073 ], [ %1086, %1080 ]
  %1093 = phi i16* [ %1075, %1073 ], [ %1088, %1080 ]
  %1094 = phi i16* [ %1076, %1073 ], [ %1087, %1080 ]
  %1095 = icmp ult i64 %1077, 7
  br i1 %1095, label %1126, label %1096

1096:                                             ; preds = %1091, %1096
  %1097 = phi i64 [ %1122, %1096 ], [ %1092, %1091 ]
  %1098 = phi i16* [ %1124, %1096 ], [ %1093, %1091 ]
  %1099 = phi i16* [ %1123, %1096 ], [ %1094, %1091 ]
  %1100 = load i16, i16* %1098, align 2, !noalias !129
  store i16 %1100, i16* %1099, align 2, !noalias !129
  %1101 = getelementptr inbounds i16, i16* %1099, i64 1
  %1102 = getelementptr inbounds i16, i16* %1098, i64 1
  %1103 = load i16, i16* %1102, align 2, !noalias !129
  store i16 %1103, i16* %1101, align 2, !noalias !129
  %1104 = getelementptr inbounds i16, i16* %1099, i64 2
  %1105 = getelementptr inbounds i16, i16* %1098, i64 2
  %1106 = load i16, i16* %1105, align 2, !noalias !129
  store i16 %1106, i16* %1104, align 2, !noalias !129
  %1107 = getelementptr inbounds i16, i16* %1099, i64 3
  %1108 = getelementptr inbounds i16, i16* %1098, i64 3
  %1109 = load i16, i16* %1108, align 2, !noalias !129
  store i16 %1109, i16* %1107, align 2, !noalias !129
  %1110 = getelementptr inbounds i16, i16* %1099, i64 4
  %1111 = getelementptr inbounds i16, i16* %1098, i64 4
  %1112 = load i16, i16* %1111, align 2, !noalias !129
  store i16 %1112, i16* %1110, align 2, !noalias !129
  %1113 = getelementptr inbounds i16, i16* %1099, i64 5
  %1114 = getelementptr inbounds i16, i16* %1098, i64 5
  %1115 = load i16, i16* %1114, align 2, !noalias !129
  store i16 %1115, i16* %1113, align 2, !noalias !129
  %1116 = getelementptr inbounds i16, i16* %1099, i64 6
  %1117 = getelementptr inbounds i16, i16* %1098, i64 6
  %1118 = load i16, i16* %1117, align 2, !noalias !129
  store i16 %1118, i16* %1116, align 2, !noalias !129
  %1119 = getelementptr inbounds i16, i16* %1099, i64 7
  %1120 = getelementptr inbounds i16, i16* %1098, i64 7
  %1121 = load i16, i16* %1120, align 2, !noalias !129
  store i16 %1121, i16* %1119, align 2, !noalias !129
  %1122 = add i64 %1097, -8
  %1123 = getelementptr inbounds i16, i16* %1099, i64 8
  %1124 = getelementptr inbounds i16, i16* %1098, i64 8
  %1125 = icmp eq i64 %1122, 0
  br i1 %1125, label %1126, label %1096, !llvm.loop !136

1126:                                             ; preds = %1091, %1096, %1071
  %1127 = add i64 %972, %956
  %1128 = load i8, i8* %958, align 1, !noalias !123
  %1129 = icmp slt i8 %1128, 0
  br i1 %1129, label %1130, label %1132

1130:                                             ; preds = %1126
  %1131 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %1127, i64* %1131, align 8, !noalias !123
  br label %1134

1132:                                             ; preds = %1126
  %1133 = trunc i64 %1127 to i8
  store i8 %1133, i8* %958, align 1, !noalias !123
  br label %1134

1134:                                             ; preds = %1132, %1130
  %1135 = getelementptr inbounds i16, i16* %981, i64 %1127
  store i16 0, i16* %1135, align 2, !noalias !129
  br label %1139

1136:                                             ; preds = %970
  %1137 = add i64 %972, %956
  %1138 = sub i64 %1137, %971
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.1"* nonnull %5, i64 %971, i64 %1138, i64 %972, i64 %972, i64 0, i64 %956, i16* %955) #10, !noalias !129
  br label %1139

1139:                                             ; preds = %1136, %1134, %975
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %731, i8* nonnull align 8 %913, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %913, i8 0, i64 24, i1 false) #10, !noalias !123
  %1140 = load i8, i8* %916, align 1, !noalias !107
  %1141 = icmp slt i8 %1140, 0
  br i1 %1141, label %1142, label %1145

1142:                                             ; preds = %1139
  %1143 = bitcast %"class.std::__1::basic_string.1"* %6 to i8**
  %1144 = load i8*, i8** %1143, align 8, !noalias !107
  call void @_ZdlPv(i8* %1144) #12
  br label %1145

1145:                                             ; preds = %1142, %1139
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %914) #10, !noalias !107
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %913) #10, !noalias !107
  br label %1146

1146:                                             ; preds = %877, %882, %857, %1145
  %1147 = load i8, i8* %415, align 1
  %1148 = icmp slt i8 %1147, 0
  br i1 %1148, label %1149, label %1152

1149:                                             ; preds = %1146
  %1150 = bitcast %"class.std::__1::basic_string.1"* %12 to i8**
  %1151 = load i8*, i8** %1150, align 8
  call void @_ZdlPv(i8* %1151) #12
  br label %1152

1152:                                             ; preds = %1149, %1146, %738
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %229, i8* nonnull align 8 %731, i64 24, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %731) #10
  br label %1153

1153:                                             ; preds = %729, %1152
  %1154 = bitcast %"class.std::__1::basic_string.1"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1154, i8* nonnull align 8 %229, i64 24, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %229) #10
  br label %1155

1155:                                             ; preds = %178, %183, %158, %35, %1153, %213
  ret void
}

declare void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"*, i8*, i64) unnamed_addr #2

declare void @_ZNK4base8FilePath16LossyDisplayNameEv(%"class.std::__1::basic_string.1"* sret, %"class.base::FilePath"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string.1"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string.1"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string.1"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string.1"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string.1"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string.1"*
  %35 = icmp ugt %"class.std::__1::basic_string.1"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !137
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !137
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !140, !noalias !137
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !140, !noalias !137
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !137
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !137
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !140, !noalias !137
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !140, !noalias !137
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !137
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !137
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !140, !noalias !137
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !140, !noalias !137
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !137
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !137
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !140, !noalias !137
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !140, !noalias !137
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !142

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !137
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !137
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !140, !noalias !137
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !140, !noalias !137
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !143

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !144

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !145

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string.1"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #11
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #11
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #12
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !146
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !146
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !149, !noalias !146
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !149, !noalias !146
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !146
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !146
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !149, !noalias !146
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !149, !noalias !146
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !146
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !146
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !149, !noalias !146
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !149, !noalias !146
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !146
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !146
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !149, !noalias !146
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !149, !noalias !146
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !151

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !146
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !146
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !149, !noalias !146
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !149, !noalias !146
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !152

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !153

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !154

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string.1"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string.1"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !155
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !155
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !158, !noalias !155
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !158, !noalias !155
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !155
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !155
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !158, !noalias !155
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !158, !noalias !155
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !155
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !155
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !158, !noalias !155
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !158, !noalias !155
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !155
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !155
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !158, !noalias !155
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !158, !noalias !155
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !160

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !155
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !155
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !158, !noalias !155
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !158, !noalias !155
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !161

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !162

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !163

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.1"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #10
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string.1"* %0
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_(%"class.std::__1::basic_string.1"* noalias sret, %"class.std::__1::basic_string.1"* dereferenceable(24), i16*) local_unnamed_addr #4 comdat {
  %4 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.std::__1::basic_string.1"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #10
  %8 = bitcast %"class.std::__1::basic_string.1"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = load i16, i16* %2, align 2
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %3, %18
  %19 = phi i64 [ %21, %18 ], [ 0, %3 ]
  %20 = phi i16* [ %22, %18 ], [ %2, %3 ]
  %21 = add i64 %19, 1
  %22 = getelementptr inbounds i16, i16* %20, i64 1
  %23 = load i16, i16* %22, align 2
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %18

25:                                               ; preds = %18, %3
  %26 = phi i64 [ 0, %3 ], [ %21, %18 ]
  %27 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i16*, i16** %27, align 8
  %29 = bitcast %"class.std::__1::basic_string.1"* %1 to i16*
  %30 = select i1 %11, i16* %28, i16* %29
  %31 = add i64 %26, %15
  %32 = icmp ugt i64 %31, 9223372036854775791
  br i1 %32, label %33, label %35

33:                                               ; preds = %25
  %34 = bitcast %"class.std::__1::basic_string.1"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %34) #11
  unreachable

35:                                               ; preds = %25
  %36 = icmp ult i64 %31, 11
  br i1 %36, label %37, label %42

37:                                               ; preds = %35
  %38 = trunc i64 %15 to i8
  %39 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %39, i64 0, i32 1, i32 1
  store i8 %38, i8* %40, align 1
  %41 = bitcast %"class.std::__1::basic_string.1"* %0 to i16*
  br label %53

42:                                               ; preds = %35
  %43 = add nuw nsw i64 %31, 8
  %44 = and i64 %43, -8
  %45 = icmp slt i64 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %42
  tail call void @abort() #11
  unreachable

47:                                               ; preds = %42
  %48 = shl i64 %44, 1
  %49 = tail call i8* @_Znwm(i64 %48) #12
  %50 = bitcast i8* %49 to i16*
  %51 = bitcast %"class.std::__1::basic_string.1"* %0 to i8**
  store i8* %49, i8** %51, align 8
  %52 = or i64 %44, -9223372036854775808
  store i64 %52, i64* %6, align 8
  store i64 %15, i64* %5, align 8
  br label %53

53:                                               ; preds = %47, %37
  %54 = phi i16* [ %41, %37 ], [ %50, %47 ]
  %55 = icmp eq i64 %15, 0
  br i1 %55, label %199, label %56

56:                                               ; preds = %53
  %57 = icmp ult i64 %15, 16
  br i1 %57, label %146, label %58

58:                                               ; preds = %56
  %59 = getelementptr i16, i16* %54, i64 %15
  %60 = getelementptr i16, i16* %30, i64 %15
  %61 = icmp ult i16* %54, %60
  %62 = icmp ult i16* %30, %59
  %63 = and i1 %61, %62
  br i1 %63, label %146, label %64

64:                                               ; preds = %58
  %65 = and i64 %15, -16
  %66 = sub i64 %15, %65
  %67 = getelementptr i16, i16* %30, i64 %65
  %68 = getelementptr i16, i16* %54, i64 %65
  %69 = add i64 %65, -16
  %70 = lshr exact i64 %69, 4
  %71 = add nuw nsw i64 %70, 1
  %72 = and i64 %71, 3
  %73 = icmp ult i64 %69, 48
  br i1 %73, label %125, label %74

74:                                               ; preds = %64
  %75 = sub nsw i64 %71, %72
  br label %76

76:                                               ; preds = %76, %74
  %77 = phi i64 [ 0, %74 ], [ %122, %76 ]
  %78 = phi i64 [ %75, %74 ], [ %123, %76 ]
  %79 = getelementptr i16, i16* %30, i64 %77
  %80 = getelementptr i16, i16* %54, i64 %77
  %81 = bitcast i16* %79 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !164
  %83 = getelementptr i16, i16* %79, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !164
  %86 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !167, !noalias !164
  %87 = getelementptr i16, i16* %80, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !167, !noalias !164
  %89 = or i64 %77, 16
  %90 = getelementptr i16, i16* %30, i64 %89
  %91 = getelementptr i16, i16* %54, i64 %89
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !164
  %94 = getelementptr i16, i16* %90, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !164
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !167, !noalias !164
  %98 = getelementptr i16, i16* %91, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !167, !noalias !164
  %100 = or i64 %77, 32
  %101 = getelementptr i16, i16* %30, i64 %100
  %102 = getelementptr i16, i16* %54, i64 %100
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !164
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !164
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !167, !noalias !164
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !167, !noalias !164
  %111 = or i64 %77, 48
  %112 = getelementptr i16, i16* %30, i64 %111
  %113 = getelementptr i16, i16* %54, i64 %111
  %114 = bitcast i16* %112 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !164
  %116 = getelementptr i16, i16* %112, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  %118 = load <8 x i16>, <8 x i16>* %117, align 2, !alias.scope !164
  %119 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %119, align 2, !alias.scope !167, !noalias !164
  %120 = getelementptr i16, i16* %113, i64 8
  %121 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %118, <8 x i16>* %121, align 2, !alias.scope !167, !noalias !164
  %122 = add i64 %77, 64
  %123 = add i64 %78, -4
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %125, label %76, !llvm.loop !169

125:                                              ; preds = %76, %64
  %126 = phi i64 [ 0, %64 ], [ %122, %76 ]
  %127 = icmp eq i64 %72, 0
  br i1 %127, label %144, label %128

128:                                              ; preds = %125, %128
  %129 = phi i64 [ %141, %128 ], [ %126, %125 ]
  %130 = phi i64 [ %142, %128 ], [ %72, %125 ]
  %131 = getelementptr i16, i16* %30, i64 %129
  %132 = getelementptr i16, i16* %54, i64 %129
  %133 = bitcast i16* %131 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !164
  %135 = getelementptr i16, i16* %131, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  %137 = load <8 x i16>, <8 x i16>* %136, align 2, !alias.scope !164
  %138 = bitcast i16* %132 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %138, align 2, !alias.scope !167, !noalias !164
  %139 = getelementptr i16, i16* %132, i64 8
  %140 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %137, <8 x i16>* %140, align 2, !alias.scope !167, !noalias !164
  %141 = add i64 %129, 16
  %142 = add i64 %130, -1
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %128, !llvm.loop !170

144:                                              ; preds = %128, %125
  %145 = icmp eq i64 %15, %65
  br i1 %145, label %199, label %146

146:                                              ; preds = %144, %58, %56
  %147 = phi i64 [ %15, %58 ], [ %15, %56 ], [ %66, %144 ]
  %148 = phi i16* [ %30, %58 ], [ %30, %56 ], [ %67, %144 ]
  %149 = phi i16* [ %54, %58 ], [ %54, %56 ], [ %68, %144 ]
  %150 = add i64 %147, -1
  %151 = and i64 %147, 7
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %164, label %153

153:                                              ; preds = %146, %153
  %154 = phi i64 [ %159, %153 ], [ %147, %146 ]
  %155 = phi i16* [ %161, %153 ], [ %148, %146 ]
  %156 = phi i16* [ %160, %153 ], [ %149, %146 ]
  %157 = phi i64 [ %162, %153 ], [ %151, %146 ]
  %158 = load i16, i16* %155, align 2
  store i16 %158, i16* %156, align 2
  %159 = add i64 %154, -1
  %160 = getelementptr inbounds i16, i16* %156, i64 1
  %161 = getelementptr inbounds i16, i16* %155, i64 1
  %162 = add i64 %157, -1
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %164, label %153, !llvm.loop !171

164:                                              ; preds = %153, %146
  %165 = phi i64 [ %147, %146 ], [ %159, %153 ]
  %166 = phi i16* [ %148, %146 ], [ %161, %153 ]
  %167 = phi i16* [ %149, %146 ], [ %160, %153 ]
  %168 = icmp ult i64 %150, 7
  br i1 %168, label %199, label %169

169:                                              ; preds = %164, %169
  %170 = phi i64 [ %195, %169 ], [ %165, %164 ]
  %171 = phi i16* [ %197, %169 ], [ %166, %164 ]
  %172 = phi i16* [ %196, %169 ], [ %167, %164 ]
  %173 = load i16, i16* %171, align 2
  store i16 %173, i16* %172, align 2
  %174 = getelementptr inbounds i16, i16* %172, i64 1
  %175 = getelementptr inbounds i16, i16* %171, i64 1
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %172, i64 2
  %178 = getelementptr inbounds i16, i16* %171, i64 2
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %172, i64 3
  %181 = getelementptr inbounds i16, i16* %171, i64 3
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %172, i64 4
  %184 = getelementptr inbounds i16, i16* %171, i64 4
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %172, i64 5
  %187 = getelementptr inbounds i16, i16* %171, i64 5
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %172, i64 6
  %190 = getelementptr inbounds i16, i16* %171, i64 6
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = getelementptr inbounds i16, i16* %172, i64 7
  %193 = getelementptr inbounds i16, i16* %171, i64 7
  %194 = load i16, i16* %193, align 2
  store i16 %194, i16* %192, align 2
  %195 = add i64 %170, -8
  %196 = getelementptr inbounds i16, i16* %172, i64 8
  %197 = getelementptr inbounds i16, i16* %171, i64 8
  %198 = icmp eq i64 %195, 0
  br i1 %198, label %199, label %169, !llvm.loop !172

199:                                              ; preds = %164, %169, %144, %53
  %200 = getelementptr inbounds i16, i16* %54, i64 %15
  store i16 0, i16* %200, align 2
  %201 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %202 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %201, i64 0, i32 1, i32 1
  %203 = load i8, i8* %202, align 1
  %204 = icmp slt i8 %203, 0
  br i1 %204, label %205, label %210

205:                                              ; preds = %199
  %206 = load i64, i64* %6, align 8
  %207 = and i64 %206, 9223372036854775807
  %208 = add nsw i64 %207, -1
  %209 = load i64, i64* %5, align 8
  br label %212

210:                                              ; preds = %199
  %211 = zext i8 %203 to i64
  br label %212

212:                                              ; preds = %210, %205
  %213 = phi i64 [ %208, %205 ], [ 10, %210 ]
  %214 = phi i64 [ %209, %205 ], [ %211, %210 ]
  %215 = sub i64 %213, %214
  %216 = icmp ult i64 %215, %26
  br i1 %216, label %376, label %217

217:                                              ; preds = %212
  %218 = icmp eq i64 %26, 0
  br i1 %218, label %379, label %219

219:                                              ; preds = %217
  %220 = load i16*, i16** %4, align 8
  %221 = bitcast %"class.std::__1::basic_string.1"* %0 to i16*
  %222 = select i1 %204, i16* %220, i16* %221
  %223 = getelementptr inbounds i16, i16* %222, i64 %214
  %224 = icmp ult i64 %26, 16
  br i1 %224, label %314, label %225

225:                                              ; preds = %219
  %226 = add i64 %214, %26
  %227 = getelementptr i16, i16* %222, i64 %226
  %228 = getelementptr i16, i16* %2, i64 %26
  %229 = icmp ult i16* %223, %228
  %230 = icmp ugt i16* %227, %2
  %231 = and i1 %229, %230
  br i1 %231, label %314, label %232

232:                                              ; preds = %225
  %233 = and i64 %26, -16
  %234 = sub i64 %26, %233
  %235 = getelementptr i16, i16* %2, i64 %233
  %236 = getelementptr i16, i16* %223, i64 %233
  %237 = add i64 %233, -16
  %238 = lshr exact i64 %237, 4
  %239 = add nuw nsw i64 %238, 1
  %240 = and i64 %239, 3
  %241 = icmp ult i64 %237, 48
  br i1 %241, label %293, label %242

242:                                              ; preds = %232
  %243 = sub nsw i64 %239, %240
  br label %244

244:                                              ; preds = %244, %242
  %245 = phi i64 [ 0, %242 ], [ %290, %244 ]
  %246 = phi i64 [ %243, %242 ], [ %291, %244 ]
  %247 = getelementptr i16, i16* %2, i64 %245
  %248 = getelementptr i16, i16* %223, i64 %245
  %249 = bitcast i16* %247 to <8 x i16>*
  %250 = load <8 x i16>, <8 x i16>* %249, align 2, !alias.scope !173
  %251 = getelementptr i16, i16* %247, i64 8
  %252 = bitcast i16* %251 to <8 x i16>*
  %253 = load <8 x i16>, <8 x i16>* %252, align 2, !alias.scope !173
  %254 = bitcast i16* %248 to <8 x i16>*
  store <8 x i16> %250, <8 x i16>* %254, align 2, !alias.scope !176, !noalias !173
  %255 = getelementptr i16, i16* %248, i64 8
  %256 = bitcast i16* %255 to <8 x i16>*
  store <8 x i16> %253, <8 x i16>* %256, align 2, !alias.scope !176, !noalias !173
  %257 = or i64 %245, 16
  %258 = getelementptr i16, i16* %2, i64 %257
  %259 = getelementptr i16, i16* %223, i64 %257
  %260 = bitcast i16* %258 to <8 x i16>*
  %261 = load <8 x i16>, <8 x i16>* %260, align 2, !alias.scope !173
  %262 = getelementptr i16, i16* %258, i64 8
  %263 = bitcast i16* %262 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2, !alias.scope !173
  %265 = bitcast i16* %259 to <8 x i16>*
  store <8 x i16> %261, <8 x i16>* %265, align 2, !alias.scope !176, !noalias !173
  %266 = getelementptr i16, i16* %259, i64 8
  %267 = bitcast i16* %266 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %267, align 2, !alias.scope !176, !noalias !173
  %268 = or i64 %245, 32
  %269 = getelementptr i16, i16* %2, i64 %268
  %270 = getelementptr i16, i16* %223, i64 %268
  %271 = bitcast i16* %269 to <8 x i16>*
  %272 = load <8 x i16>, <8 x i16>* %271, align 2, !alias.scope !173
  %273 = getelementptr i16, i16* %269, i64 8
  %274 = bitcast i16* %273 to <8 x i16>*
  %275 = load <8 x i16>, <8 x i16>* %274, align 2, !alias.scope !173
  %276 = bitcast i16* %270 to <8 x i16>*
  store <8 x i16> %272, <8 x i16>* %276, align 2, !alias.scope !176, !noalias !173
  %277 = getelementptr i16, i16* %270, i64 8
  %278 = bitcast i16* %277 to <8 x i16>*
  store <8 x i16> %275, <8 x i16>* %278, align 2, !alias.scope !176, !noalias !173
  %279 = or i64 %245, 48
  %280 = getelementptr i16, i16* %2, i64 %279
  %281 = getelementptr i16, i16* %223, i64 %279
  %282 = bitcast i16* %280 to <8 x i16>*
  %283 = load <8 x i16>, <8 x i16>* %282, align 2, !alias.scope !173
  %284 = getelementptr i16, i16* %280, i64 8
  %285 = bitcast i16* %284 to <8 x i16>*
  %286 = load <8 x i16>, <8 x i16>* %285, align 2, !alias.scope !173
  %287 = bitcast i16* %281 to <8 x i16>*
  store <8 x i16> %283, <8 x i16>* %287, align 2, !alias.scope !176, !noalias !173
  %288 = getelementptr i16, i16* %281, i64 8
  %289 = bitcast i16* %288 to <8 x i16>*
  store <8 x i16> %286, <8 x i16>* %289, align 2, !alias.scope !176, !noalias !173
  %290 = add i64 %245, 64
  %291 = add i64 %246, -4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %293, label %244, !llvm.loop !178

293:                                              ; preds = %244, %232
  %294 = phi i64 [ 0, %232 ], [ %290, %244 ]
  %295 = icmp eq i64 %240, 0
  br i1 %295, label %312, label %296

296:                                              ; preds = %293, %296
  %297 = phi i64 [ %309, %296 ], [ %294, %293 ]
  %298 = phi i64 [ %310, %296 ], [ %240, %293 ]
  %299 = getelementptr i16, i16* %2, i64 %297
  %300 = getelementptr i16, i16* %223, i64 %297
  %301 = bitcast i16* %299 to <8 x i16>*
  %302 = load <8 x i16>, <8 x i16>* %301, align 2, !alias.scope !173
  %303 = getelementptr i16, i16* %299, i64 8
  %304 = bitcast i16* %303 to <8 x i16>*
  %305 = load <8 x i16>, <8 x i16>* %304, align 2, !alias.scope !173
  %306 = bitcast i16* %300 to <8 x i16>*
  store <8 x i16> %302, <8 x i16>* %306, align 2, !alias.scope !176, !noalias !173
  %307 = getelementptr i16, i16* %300, i64 8
  %308 = bitcast i16* %307 to <8 x i16>*
  store <8 x i16> %305, <8 x i16>* %308, align 2, !alias.scope !176, !noalias !173
  %309 = add i64 %297, 16
  %310 = add i64 %298, -1
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %296, !llvm.loop !179

312:                                              ; preds = %296, %293
  %313 = icmp eq i64 %26, %233
  br i1 %313, label %367, label %314

314:                                              ; preds = %312, %225, %219
  %315 = phi i64 [ %26, %225 ], [ %26, %219 ], [ %234, %312 ]
  %316 = phi i16* [ %2, %225 ], [ %2, %219 ], [ %235, %312 ]
  %317 = phi i16* [ %223, %225 ], [ %223, %219 ], [ %236, %312 ]
  %318 = add i64 %315, -1
  %319 = and i64 %315, 7
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %332, label %321

321:                                              ; preds = %314, %321
  %322 = phi i64 [ %327, %321 ], [ %315, %314 ]
  %323 = phi i16* [ %329, %321 ], [ %316, %314 ]
  %324 = phi i16* [ %328, %321 ], [ %317, %314 ]
  %325 = phi i64 [ %330, %321 ], [ %319, %314 ]
  %326 = load i16, i16* %323, align 2
  store i16 %326, i16* %324, align 2
  %327 = add i64 %322, -1
  %328 = getelementptr inbounds i16, i16* %324, i64 1
  %329 = getelementptr inbounds i16, i16* %323, i64 1
  %330 = add i64 %325, -1
  %331 = icmp eq i64 %330, 0
  br i1 %331, label %332, label %321, !llvm.loop !180

332:                                              ; preds = %321, %314
  %333 = phi i64 [ %315, %314 ], [ %327, %321 ]
  %334 = phi i16* [ %316, %314 ], [ %329, %321 ]
  %335 = phi i16* [ %317, %314 ], [ %328, %321 ]
  %336 = icmp ult i64 %318, 7
  br i1 %336, label %367, label %337

337:                                              ; preds = %332, %337
  %338 = phi i64 [ %363, %337 ], [ %333, %332 ]
  %339 = phi i16* [ %365, %337 ], [ %334, %332 ]
  %340 = phi i16* [ %364, %337 ], [ %335, %332 ]
  %341 = load i16, i16* %339, align 2
  store i16 %341, i16* %340, align 2
  %342 = getelementptr inbounds i16, i16* %340, i64 1
  %343 = getelementptr inbounds i16, i16* %339, i64 1
  %344 = load i16, i16* %343, align 2
  store i16 %344, i16* %342, align 2
  %345 = getelementptr inbounds i16, i16* %340, i64 2
  %346 = getelementptr inbounds i16, i16* %339, i64 2
  %347 = load i16, i16* %346, align 2
  store i16 %347, i16* %345, align 2
  %348 = getelementptr inbounds i16, i16* %340, i64 3
  %349 = getelementptr inbounds i16, i16* %339, i64 3
  %350 = load i16, i16* %349, align 2
  store i16 %350, i16* %348, align 2
  %351 = getelementptr inbounds i16, i16* %340, i64 4
  %352 = getelementptr inbounds i16, i16* %339, i64 4
  %353 = load i16, i16* %352, align 2
  store i16 %353, i16* %351, align 2
  %354 = getelementptr inbounds i16, i16* %340, i64 5
  %355 = getelementptr inbounds i16, i16* %339, i64 5
  %356 = load i16, i16* %355, align 2
  store i16 %356, i16* %354, align 2
  %357 = getelementptr inbounds i16, i16* %340, i64 6
  %358 = getelementptr inbounds i16, i16* %339, i64 6
  %359 = load i16, i16* %358, align 2
  store i16 %359, i16* %357, align 2
  %360 = getelementptr inbounds i16, i16* %340, i64 7
  %361 = getelementptr inbounds i16, i16* %339, i64 7
  %362 = load i16, i16* %361, align 2
  store i16 %362, i16* %360, align 2
  %363 = add i64 %338, -8
  %364 = getelementptr inbounds i16, i16* %340, i64 8
  %365 = getelementptr inbounds i16, i16* %339, i64 8
  %366 = icmp eq i64 %363, 0
  br i1 %366, label %367, label %337, !llvm.loop !181

367:                                              ; preds = %332, %337, %312
  %368 = add i64 %214, %26
  %369 = load i8, i8* %202, align 1
  %370 = icmp slt i8 %369, 0
  br i1 %370, label %371, label %372

371:                                              ; preds = %367
  store i64 %368, i64* %5, align 8
  br label %374

372:                                              ; preds = %367
  %373 = trunc i64 %368 to i8
  store i8 %373, i8* %202, align 1
  br label %374

374:                                              ; preds = %372, %371
  %375 = getelementptr inbounds i16, i16* %222, i64 %368
  store i16 0, i16* %375, align 2
  br label %379

376:                                              ; preds = %212
  %377 = add i64 %214, %26
  %378 = sub i64 %377, %213
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.1"* %0, i64 %213, i64 %378, i64 %214, i64 %214, i64 0, i64 %26, i16* %2) #10
  br label %379

379:                                              ; preds = %217, %374, %376
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.1"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string.1"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #11
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.1"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #11
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #12
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !182
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !182
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !185, !noalias !182
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !185, !noalias !182
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !182
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !182
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !185, !noalias !182
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !185, !noalias !182
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !182
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !182
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !185, !noalias !182
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !185, !noalias !182
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !182
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !182
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !185, !noalias !182
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !185, !noalias !182
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !187

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !182
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !182
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !185, !noalias !182
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !185, !noalias !182
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !188

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !189

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !190

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !191

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !192

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !193

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !195
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !195
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !198, !noalias !195
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !198, !noalias !195
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !195
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !195
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !198, !noalias !195
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !198, !noalias !195
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !195
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !195
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !198, !noalias !195
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !198, !noalias !195
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !195
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !195
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !198, !noalias !195
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !198, !noalias !195
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !200

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !195
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !195
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !198, !noalias !195
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !198, !noalias !195
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !201

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !202

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !203

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #12
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string.1"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN2ui11FormatBytesEl(%"class.std::__1::basic_string.1"* sret, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"*, i8 signext, i64) local_unnamed_addr #3

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #2

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6assignEPKDs(%"class.std::__1::basic_string.1"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = load i16, i16* %1, align 2
  %4 = tail call i1 @llvm.is.constant.i16(i16 %3)
  %5 = icmp eq i16 %3, 0
  br i1 %4, label %6, label %667

6:                                                ; preds = %2
  br i1 %5, label %24, label %7

7:                                                ; preds = %6, %7
  %8 = phi i64 [ %10, %7 ], [ 0, %6 ]
  %9 = phi i16* [ %11, %7 ], [ %1, %6 ]
  %10 = add i64 %8, 1
  %11 = getelementptr inbounds i16, i16* %9, i64 1
  %12 = load i16, i16* %11, align 2
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %14, label %7

14:                                               ; preds = %7
  %15 = icmp ult i64 %10, 11
  br label %16

16:                                               ; preds = %14, %16
  %17 = phi i64 [ %19, %16 ], [ 0, %14 ]
  %18 = phi i16* [ %20, %16 ], [ %1, %14 ]
  %19 = add i64 %17, 1
  %20 = getelementptr inbounds i16, i16* %18, i64 1
  %21 = load i16, i16* %20, align 2
  %22 = icmp eq i16 %21, 0
  br i1 %22, label %23, label %16

23:                                               ; preds = %16
  br i1 %15, label %24, label %330

24:                                               ; preds = %6, %23
  %25 = phi i64 [ %19, %23 ], [ 0, %6 ]
  %26 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %26, i64 0, i32 1, i32 1
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %25, i64* %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i16*, i16** %32, align 8
  br label %37

34:                                               ; preds = %24
  %35 = trunc i64 %25 to i8
  store i8 %35, i8* %27, align 1
  %36 = bitcast %"class.std::__1::basic_string.1"* %0 to i16*
  br label %37

37:                                               ; preds = %34, %30
  %38 = phi i16* [ %33, %30 ], [ %36, %34 ]
  %39 = icmp eq i64 %25, 0
  br i1 %39, label %328, label %40

40:                                               ; preds = %37
  %41 = icmp ult i16* %38, %1
  br i1 %41, label %42, label %185

42:                                               ; preds = %40
  %43 = icmp ult i64 %25, 16
  br i1 %43, label %132, label %44

44:                                               ; preds = %42
  %45 = getelementptr i16, i16* %38, i64 %25
  %46 = getelementptr i16, i16* %1, i64 %25
  %47 = icmp ult i16* %38, %46
  %48 = icmp ugt i16* %45, %1
  %49 = and i1 %47, %48
  br i1 %49, label %132, label %50

50:                                               ; preds = %44
  %51 = and i64 %25, -16
  %52 = sub i64 %25, %51
  %53 = getelementptr i16, i16* %1, i64 %51
  %54 = getelementptr i16, i16* %38, i64 %51
  %55 = add i64 %51, -16
  %56 = lshr exact i64 %55, 4
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 3
  %59 = icmp ult i64 %55, 48
  br i1 %59, label %111, label %60

60:                                               ; preds = %50
  %61 = sub nsw i64 %57, %58
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i64 [ 0, %60 ], [ %108, %62 ]
  %64 = phi i64 [ %61, %60 ], [ %109, %62 ]
  %65 = getelementptr i16, i16* %1, i64 %63
  %66 = getelementptr i16, i16* %38, i64 %63
  %67 = bitcast i16* %65 to <8 x i16>*
  %68 = load <8 x i16>, <8 x i16>* %67, align 2, !alias.scope !204
  %69 = getelementptr i16, i16* %65, i64 8
  %70 = bitcast i16* %69 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !204
  %72 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %68, <8 x i16>* %72, align 2, !alias.scope !207, !noalias !204
  %73 = getelementptr i16, i16* %66, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %74, align 2, !alias.scope !207, !noalias !204
  %75 = or i64 %63, 16
  %76 = getelementptr i16, i16* %1, i64 %75
  %77 = getelementptr i16, i16* %38, i64 %75
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !204
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !204
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !207, !noalias !204
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !207, !noalias !204
  %86 = or i64 %63, 32
  %87 = getelementptr i16, i16* %1, i64 %86
  %88 = getelementptr i16, i16* %38, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !204
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !204
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !207, !noalias !204
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !207, !noalias !204
  %97 = or i64 %63, 48
  %98 = getelementptr i16, i16* %1, i64 %97
  %99 = getelementptr i16, i16* %38, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !204
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !204
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !207, !noalias !204
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !207, !noalias !204
  %108 = add i64 %63, 64
  %109 = add i64 %64, -4
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %62, !llvm.loop !209

111:                                              ; preds = %62, %50
  %112 = phi i64 [ 0, %50 ], [ %108, %62 ]
  %113 = icmp eq i64 %58, 0
  br i1 %113, label %130, label %114

114:                                              ; preds = %111, %114
  %115 = phi i64 [ %127, %114 ], [ %112, %111 ]
  %116 = phi i64 [ %128, %114 ], [ %58, %111 ]
  %117 = getelementptr i16, i16* %1, i64 %115
  %118 = getelementptr i16, i16* %38, i64 %115
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !204
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !204
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !207, !noalias !204
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !207, !noalias !204
  %127 = add i64 %115, 16
  %128 = add i64 %116, -1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %114, !llvm.loop !210

130:                                              ; preds = %114, %111
  %131 = icmp eq i64 %25, %51
  br i1 %131, label %328, label %132

132:                                              ; preds = %130, %44, %42
  %133 = phi i64 [ %25, %44 ], [ %25, %42 ], [ %52, %130 ]
  %134 = phi i16* [ %1, %44 ], [ %1, %42 ], [ %53, %130 ]
  %135 = phi i16* [ %38, %44 ], [ %38, %42 ], [ %54, %130 ]
  %136 = add i64 %133, -1
  %137 = and i64 %133, 7
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %150, label %139

139:                                              ; preds = %132, %139
  %140 = phi i64 [ %145, %139 ], [ %133, %132 ]
  %141 = phi i16* [ %147, %139 ], [ %134, %132 ]
  %142 = phi i16* [ %146, %139 ], [ %135, %132 ]
  %143 = phi i64 [ %148, %139 ], [ %137, %132 ]
  %144 = load i16, i16* %141, align 2
  store i16 %144, i16* %142, align 2
  %145 = add i64 %140, -1
  %146 = getelementptr inbounds i16, i16* %142, i64 1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = add i64 %143, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %139, !llvm.loop !211

150:                                              ; preds = %139, %132
  %151 = phi i64 [ %133, %132 ], [ %145, %139 ]
  %152 = phi i16* [ %134, %132 ], [ %147, %139 ]
  %153 = phi i16* [ %135, %132 ], [ %146, %139 ]
  %154 = icmp ult i64 %136, 7
  br i1 %154, label %328, label %155

155:                                              ; preds = %150, %155
  %156 = phi i64 [ %181, %155 ], [ %151, %150 ]
  %157 = phi i16* [ %183, %155 ], [ %152, %150 ]
  %158 = phi i16* [ %182, %155 ], [ %153, %150 ]
  %159 = load i16, i16* %157, align 2
  store i16 %159, i16* %158, align 2
  %160 = getelementptr inbounds i16, i16* %158, i64 1
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %158, i64 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %158, i64 3
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %158, i64 4
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %158, i64 5
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %158, i64 6
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %158, i64 7
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = add i64 %156, -8
  %182 = getelementptr inbounds i16, i16* %158, i64 8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = icmp eq i64 %181, 0
  br i1 %184, label %328, label %155, !llvm.loop !212

185:                                              ; preds = %40
  %186 = icmp ugt i16* %38, %1
  br i1 %186, label %187, label %328

187:                                              ; preds = %185
  %188 = getelementptr inbounds i16, i16* %1, i64 %25
  %189 = getelementptr inbounds i16, i16* %38, i64 %25
  %190 = icmp ult i64 %25, 16
  br i1 %190, label %275, label %191

191:                                              ; preds = %187
  %192 = icmp ult i16* %38, %188
  %193 = icmp ugt i16* %189, %1
  %194 = and i1 %192, %193
  br i1 %194, label %275, label %195

195:                                              ; preds = %191
  %196 = and i64 %25, -16
  %197 = sub i64 %25, %196
  %198 = sub i64 0, %196
  %199 = getelementptr i16, i16* %188, i64 %198
  %200 = sub i64 0, %196
  %201 = getelementptr i16, i16* %189, i64 %200
  %202 = add i64 %196, -16
  %203 = lshr exact i64 %202, 4
  %204 = add nuw nsw i64 %203, 1
  %205 = and i64 %204, 1
  %206 = icmp eq i64 %202, 0
  br i1 %206, label %253, label %207

207:                                              ; preds = %195
  %208 = sub nuw nsw i64 %204, %205
  %209 = getelementptr i16, i16* %188, i64 -1
  %210 = getelementptr i16, i16* %189, i64 -1
  %211 = getelementptr i16, i16* %188, i64 -1
  %212 = getelementptr i16, i16* %189, i64 -1
  br label %213

213:                                              ; preds = %213, %207
  %214 = phi i64 [ 0, %207 ], [ %248, %213 ]
  %215 = phi i64 [ %208, %207 ], [ %249, %213 ]
  %216 = sub i64 0, %214
  %217 = sub i64 0, %214
  %218 = getelementptr inbounds i16, i16* %210, i64 %217
  %219 = getelementptr inbounds i16, i16* %209, i64 %216
  %220 = getelementptr inbounds i16, i16* %219, i64 -7
  %221 = bitcast i16* %220 to <8 x i16>*
  %222 = load <8 x i16>, <8 x i16>* %221, align 2, !alias.scope !213
  %223 = getelementptr inbounds i16, i16* %219, i64 -8
  %224 = getelementptr inbounds i16, i16* %223, i64 -7
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2, !alias.scope !213
  %227 = getelementptr inbounds i16, i16* %218, i64 -7
  %228 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %222, <8 x i16>* %228, align 2, !alias.scope !216, !noalias !213
  %229 = getelementptr inbounds i16, i16* %218, i64 -8
  %230 = getelementptr inbounds i16, i16* %229, i64 -7
  %231 = bitcast i16* %230 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %231, align 2, !alias.scope !216, !noalias !213
  %232 = sub nuw nsw i64 -16, %214
  %233 = sub nuw nsw i64 -16, %214
  %234 = getelementptr inbounds i16, i16* %212, i64 %233
  %235 = getelementptr inbounds i16, i16* %211, i64 %232
  %236 = getelementptr inbounds i16, i16* %235, i64 -7
  %237 = bitcast i16* %236 to <8 x i16>*
  %238 = load <8 x i16>, <8 x i16>* %237, align 2, !alias.scope !213
  %239 = getelementptr inbounds i16, i16* %235, i64 -8
  %240 = getelementptr inbounds i16, i16* %239, i64 -7
  %241 = bitcast i16* %240 to <8 x i16>*
  %242 = load <8 x i16>, <8 x i16>* %241, align 2, !alias.scope !213
  %243 = getelementptr inbounds i16, i16* %234, i64 -7
  %244 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %238, <8 x i16>* %244, align 2, !alias.scope !216, !noalias !213
  %245 = getelementptr inbounds i16, i16* %234, i64 -8
  %246 = getelementptr inbounds i16, i16* %245, i64 -7
  %247 = bitcast i16* %246 to <8 x i16>*
  store <8 x i16> %242, <8 x i16>* %247, align 2, !alias.scope !216, !noalias !213
  %248 = add i64 %214, 32
  %249 = add i64 %215, -2
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %251, label %213, !llvm.loop !218

251:                                              ; preds = %213
  %252 = sub nuw nsw i64 -32, %214
  br label %253

253:                                              ; preds = %251, %195
  %254 = phi i64 [ 0, %195 ], [ %252, %251 ]
  %255 = icmp eq i64 %205, 0
  br i1 %255, label %273, label %256

256:                                              ; preds = %253
  %257 = getelementptr i16, i16* %188, i64 -1
  %258 = getelementptr i16, i16* %189, i64 -1
  %259 = getelementptr inbounds i16, i16* %258, i64 %254
  %260 = getelementptr inbounds i16, i16* %257, i64 %254
  %261 = getelementptr inbounds i16, i16* %260, i64 -7
  %262 = bitcast i16* %261 to <8 x i16>*
  %263 = load <8 x i16>, <8 x i16>* %262, align 2, !alias.scope !213
  %264 = getelementptr inbounds i16, i16* %260, i64 -8
  %265 = getelementptr inbounds i16, i16* %264, i64 -7
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !213
  %268 = getelementptr inbounds i16, i16* %259, i64 -7
  %269 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %263, <8 x i16>* %269, align 2, !alias.scope !216, !noalias !213
  %270 = getelementptr inbounds i16, i16* %259, i64 -8
  %271 = getelementptr inbounds i16, i16* %270, i64 -7
  %272 = bitcast i16* %271 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %272, align 2, !alias.scope !216, !noalias !213
  br label %273

273:                                              ; preds = %253, %256
  %274 = icmp eq i64 %25, %196
  br i1 %274, label %328, label %275

275:                                              ; preds = %273, %191, %187
  %276 = phi i64 [ %25, %191 ], [ %25, %187 ], [ %197, %273 ]
  %277 = phi i16* [ %188, %191 ], [ %188, %187 ], [ %199, %273 ]
  %278 = phi i16* [ %189, %191 ], [ %189, %187 ], [ %201, %273 ]
  %279 = add i64 %276, -1
  %280 = and i64 %276, 7
  %281 = icmp eq i64 %280, 0
  br i1 %281, label %293, label %282

282:                                              ; preds = %275, %282
  %283 = phi i64 [ %290, %282 ], [ %276, %275 ]
  %284 = phi i16* [ %288, %282 ], [ %277, %275 ]
  %285 = phi i16* [ %287, %282 ], [ %278, %275 ]
  %286 = phi i64 [ %291, %282 ], [ %280, %275 ]
  %287 = getelementptr inbounds i16, i16* %285, i64 -1
  %288 = getelementptr inbounds i16, i16* %284, i64 -1
  %289 = load i16, i16* %288, align 2
  store i16 %289, i16* %287, align 2
  %290 = add i64 %283, -1
  %291 = add i64 %286, -1
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %293, label %282, !llvm.loop !219

293:                                              ; preds = %282, %275
  %294 = phi i64 [ %276, %275 ], [ %290, %282 ]
  %295 = phi i16* [ %277, %275 ], [ %288, %282 ]
  %296 = phi i16* [ %278, %275 ], [ %287, %282 ]
  %297 = icmp ult i64 %279, 7
  br i1 %297, label %328, label %298

298:                                              ; preds = %293, %298
  %299 = phi i64 [ %326, %298 ], [ %294, %293 ]
  %300 = phi i16* [ %324, %298 ], [ %295, %293 ]
  %301 = phi i16* [ %323, %298 ], [ %296, %293 ]
  %302 = getelementptr inbounds i16, i16* %301, i64 -1
  %303 = getelementptr inbounds i16, i16* %300, i64 -1
  %304 = load i16, i16* %303, align 2
  store i16 %304, i16* %302, align 2
  %305 = getelementptr inbounds i16, i16* %301, i64 -2
  %306 = getelementptr inbounds i16, i16* %300, i64 -2
  %307 = load i16, i16* %306, align 2
  store i16 %307, i16* %305, align 2
  %308 = getelementptr inbounds i16, i16* %301, i64 -3
  %309 = getelementptr inbounds i16, i16* %300, i64 -3
  %310 = load i16, i16* %309, align 2
  store i16 %310, i16* %308, align 2
  %311 = getelementptr inbounds i16, i16* %301, i64 -4
  %312 = getelementptr inbounds i16, i16* %300, i64 -4
  %313 = load i16, i16* %312, align 2
  store i16 %313, i16* %311, align 2
  %314 = getelementptr inbounds i16, i16* %301, i64 -5
  %315 = getelementptr inbounds i16, i16* %300, i64 -5
  %316 = load i16, i16* %315, align 2
  store i16 %316, i16* %314, align 2
  %317 = getelementptr inbounds i16, i16* %301, i64 -6
  %318 = getelementptr inbounds i16, i16* %300, i64 -6
  %319 = load i16, i16* %318, align 2
  store i16 %319, i16* %317, align 2
  %320 = getelementptr inbounds i16, i16* %301, i64 -7
  %321 = getelementptr inbounds i16, i16* %300, i64 -7
  %322 = load i16, i16* %321, align 2
  store i16 %322, i16* %320, align 2
  %323 = getelementptr inbounds i16, i16* %301, i64 -8
  %324 = getelementptr inbounds i16, i16* %300, i64 -8
  %325 = load i16, i16* %324, align 2
  store i16 %325, i16* %323, align 2
  %326 = add i64 %299, -8
  %327 = icmp eq i64 %326, 0
  br i1 %327, label %328, label %298, !llvm.loop !220

328:                                              ; preds = %293, %298, %150, %155, %273, %130, %37, %185
  %329 = getelementptr inbounds i16, i16* %38, i64 %25
  store i16 0, i16* %329, align 2
  br label %1014

330:                                              ; preds = %23
  %331 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %332 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %331, i64 0, i32 1, i32 1
  %333 = load i8, i8* %332, align 1
  %334 = icmp slt i8 %333, 0
  br i1 %334, label %335, label %340

335:                                              ; preds = %330
  %336 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %337 = load i64, i64* %336, align 8
  %338 = and i64 %337, 9223372036854775807
  %339 = add nsw i64 %338, -1
  br label %340

340:                                              ; preds = %335, %330
  %341 = phi i64 [ %339, %335 ], [ 10, %330 ]
  %342 = icmp ugt i64 %19, %341
  br i1 %342, label %658, label %343

343:                                              ; preds = %340
  br i1 %334, label %344, label %347

344:                                              ; preds = %343
  %345 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %346 = load i16*, i16** %345, align 8
  br label %349

347:                                              ; preds = %343
  %348 = bitcast %"class.std::__1::basic_string.1"* %0 to i16*
  br label %349

349:                                              ; preds = %347, %344
  %350 = phi i16* [ %346, %344 ], [ %348, %347 ]
  %351 = icmp eq i64 %19, 0
  br i1 %351, label %650, label %352

352:                                              ; preds = %349
  %353 = icmp ult i16* %350, %1
  br i1 %353, label %354, label %507

354:                                              ; preds = %352
  store i16 %3, i16* %350, align 2
  %355 = getelementptr inbounds i16, i16* %1, i64 1
  %356 = icmp eq i64 %17, 0
  br i1 %356, label %650, label %357

357:                                              ; preds = %354
  %358 = icmp ult i64 %17, 16
  br i1 %358, label %454, label %359

359:                                              ; preds = %357
  %360 = getelementptr i16, i16* %350, i64 1
  %361 = getelementptr i16, i16* %350, i64 %19
  %362 = getelementptr i16, i16* %1, i64 %19
  %363 = icmp ult i16* %360, %362
  %364 = icmp ult i16* %355, %361
  %365 = and i1 %363, %364
  br i1 %365, label %454, label %366

366:                                              ; preds = %359
  %367 = and i64 %17, -16
  %368 = getelementptr i16, i16* %355, i64 %367
  %369 = sub i64 %17, %367
  %370 = getelementptr i16, i16* %350, i64 %367
  %371 = add i64 %367, -16
  %372 = lshr exact i64 %371, 4
  %373 = add nuw nsw i64 %372, 1
  %374 = and i64 %373, 3
  %375 = icmp ult i64 %371, 48
  br i1 %375, label %431, label %376

376:                                              ; preds = %366
  %377 = sub nsw i64 %373, %374
  %378 = getelementptr i16, i16* %350, i64 1
  %379 = getelementptr i16, i16* %350, i64 1
  %380 = getelementptr i16, i16* %350, i64 1
  %381 = getelementptr i16, i16* %350, i64 1
  br label %382

382:                                              ; preds = %382, %376
  %383 = phi i64 [ 0, %376 ], [ %428, %382 ]
  %384 = phi i64 [ %377, %376 ], [ %429, %382 ]
  %385 = getelementptr i16, i16* %355, i64 %383
  %386 = getelementptr inbounds i16, i16* %378, i64 %383
  %387 = bitcast i16* %385 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !221
  %389 = getelementptr i16, i16* %385, i64 8
  %390 = bitcast i16* %389 to <8 x i16>*
  %391 = load <8 x i16>, <8 x i16>* %390, align 2, !alias.scope !221
  %392 = bitcast i16* %386 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %392, align 2, !alias.scope !224, !noalias !221
  %393 = getelementptr inbounds i16, i16* %386, i64 8
  %394 = bitcast i16* %393 to <8 x i16>*
  store <8 x i16> %391, <8 x i16>* %394, align 2, !alias.scope !224, !noalias !221
  %395 = or i64 %383, 16
  %396 = getelementptr i16, i16* %355, i64 %395
  %397 = getelementptr inbounds i16, i16* %379, i64 %395
  %398 = bitcast i16* %396 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !221
  %400 = getelementptr i16, i16* %396, i64 8
  %401 = bitcast i16* %400 to <8 x i16>*
  %402 = load <8 x i16>, <8 x i16>* %401, align 2, !alias.scope !221
  %403 = bitcast i16* %397 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %403, align 2, !alias.scope !224, !noalias !221
  %404 = getelementptr inbounds i16, i16* %397, i64 8
  %405 = bitcast i16* %404 to <8 x i16>*
  store <8 x i16> %402, <8 x i16>* %405, align 2, !alias.scope !224, !noalias !221
  %406 = or i64 %383, 32
  %407 = getelementptr i16, i16* %355, i64 %406
  %408 = getelementptr inbounds i16, i16* %380, i64 %406
  %409 = bitcast i16* %407 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !221
  %411 = getelementptr i16, i16* %407, i64 8
  %412 = bitcast i16* %411 to <8 x i16>*
  %413 = load <8 x i16>, <8 x i16>* %412, align 2, !alias.scope !221
  %414 = bitcast i16* %408 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %414, align 2, !alias.scope !224, !noalias !221
  %415 = getelementptr inbounds i16, i16* %408, i64 8
  %416 = bitcast i16* %415 to <8 x i16>*
  store <8 x i16> %413, <8 x i16>* %416, align 2, !alias.scope !224, !noalias !221
  %417 = or i64 %383, 48
  %418 = getelementptr i16, i16* %355, i64 %417
  %419 = getelementptr inbounds i16, i16* %381, i64 %417
  %420 = bitcast i16* %418 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !221
  %422 = getelementptr i16, i16* %418, i64 8
  %423 = bitcast i16* %422 to <8 x i16>*
  %424 = load <8 x i16>, <8 x i16>* %423, align 2, !alias.scope !221
  %425 = bitcast i16* %419 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %425, align 2, !alias.scope !224, !noalias !221
  %426 = getelementptr inbounds i16, i16* %419, i64 8
  %427 = bitcast i16* %426 to <8 x i16>*
  store <8 x i16> %424, <8 x i16>* %427, align 2, !alias.scope !224, !noalias !221
  %428 = add i64 %383, 64
  %429 = add i64 %384, -4
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %431, label %382, !llvm.loop !226

431:                                              ; preds = %382, %366
  %432 = phi i64 [ 0, %366 ], [ %428, %382 ]
  %433 = icmp eq i64 %374, 0
  br i1 %433, label %452, label %434

434:                                              ; preds = %431
  %435 = getelementptr i16, i16* %350, i64 1
  br label %436

436:                                              ; preds = %436, %434
  %437 = phi i64 [ %432, %434 ], [ %449, %436 ]
  %438 = phi i64 [ %374, %434 ], [ %450, %436 ]
  %439 = getelementptr i16, i16* %355, i64 %437
  %440 = getelementptr inbounds i16, i16* %435, i64 %437
  %441 = bitcast i16* %439 to <8 x i16>*
  %442 = load <8 x i16>, <8 x i16>* %441, align 2, !alias.scope !221
  %443 = getelementptr i16, i16* %439, i64 8
  %444 = bitcast i16* %443 to <8 x i16>*
  %445 = load <8 x i16>, <8 x i16>* %444, align 2, !alias.scope !221
  %446 = bitcast i16* %440 to <8 x i16>*
  store <8 x i16> %442, <8 x i16>* %446, align 2, !alias.scope !224, !noalias !221
  %447 = getelementptr inbounds i16, i16* %440, i64 8
  %448 = bitcast i16* %447 to <8 x i16>*
  store <8 x i16> %445, <8 x i16>* %448, align 2, !alias.scope !224, !noalias !221
  %449 = add i64 %437, 16
  %450 = add i64 %438, -1
  %451 = icmp eq i64 %450, 0
  br i1 %451, label %452, label %436, !llvm.loop !227

452:                                              ; preds = %436, %431
  %453 = icmp eq i64 %17, %367
  br i1 %453, label %650, label %454

454:                                              ; preds = %452, %359, %357
  %455 = phi i16* [ %355, %359 ], [ %355, %357 ], [ %368, %452 ]
  %456 = phi i64 [ %17, %359 ], [ %17, %357 ], [ %369, %452 ]
  %457 = phi i16* [ %350, %359 ], [ %350, %357 ], [ %370, %452 ]
  %458 = add i64 %456, -1
  %459 = and i64 %456, 7
  %460 = icmp eq i64 %459, 0
  br i1 %460, label %472, label %461

461:                                              ; preds = %454, %461
  %462 = phi i16* [ %469, %461 ], [ %455, %454 ]
  %463 = phi i64 [ %468, %461 ], [ %456, %454 ]
  %464 = phi i16* [ %466, %461 ], [ %457, %454 ]
  %465 = phi i64 [ %470, %461 ], [ %459, %454 ]
  %466 = getelementptr inbounds i16, i16* %464, i64 1
  %467 = load i16, i16* %462, align 2
  store i16 %467, i16* %466, align 2
  %468 = add i64 %463, -1
  %469 = getelementptr inbounds i16, i16* %462, i64 1
  %470 = add i64 %465, -1
  %471 = icmp eq i64 %470, 0
  br i1 %471, label %472, label %461, !llvm.loop !228

472:                                              ; preds = %461, %454
  %473 = phi i16* [ %455, %454 ], [ %469, %461 ]
  %474 = phi i64 [ %456, %454 ], [ %468, %461 ]
  %475 = phi i16* [ %457, %454 ], [ %466, %461 ]
  %476 = icmp ult i64 %458, 7
  br i1 %476, label %650, label %477

477:                                              ; preds = %472, %477
  %478 = phi i16* [ %505, %477 ], [ %473, %472 ]
  %479 = phi i64 [ %504, %477 ], [ %474, %472 ]
  %480 = phi i16* [ %502, %477 ], [ %475, %472 ]
  %481 = getelementptr inbounds i16, i16* %480, i64 1
  %482 = load i16, i16* %478, align 2
  store i16 %482, i16* %481, align 2
  %483 = getelementptr inbounds i16, i16* %478, i64 1
  %484 = getelementptr inbounds i16, i16* %480, i64 2
  %485 = load i16, i16* %483, align 2
  store i16 %485, i16* %484, align 2
  %486 = getelementptr inbounds i16, i16* %478, i64 2
  %487 = getelementptr inbounds i16, i16* %480, i64 3
  %488 = load i16, i16* %486, align 2
  store i16 %488, i16* %487, align 2
  %489 = getelementptr inbounds i16, i16* %478, i64 3
  %490 = getelementptr inbounds i16, i16* %480, i64 4
  %491 = load i16, i16* %489, align 2
  store i16 %491, i16* %490, align 2
  %492 = getelementptr inbounds i16, i16* %478, i64 4
  %493 = getelementptr inbounds i16, i16* %480, i64 5
  %494 = load i16, i16* %492, align 2
  store i16 %494, i16* %493, align 2
  %495 = getelementptr inbounds i16, i16* %478, i64 5
  %496 = getelementptr inbounds i16, i16* %480, i64 6
  %497 = load i16, i16* %495, align 2
  store i16 %497, i16* %496, align 2
  %498 = getelementptr inbounds i16, i16* %478, i64 6
  %499 = getelementptr inbounds i16, i16* %480, i64 7
  %500 = load i16, i16* %498, align 2
  store i16 %500, i16* %499, align 2
  %501 = getelementptr inbounds i16, i16* %478, i64 7
  %502 = getelementptr inbounds i16, i16* %480, i64 8
  %503 = load i16, i16* %501, align 2
  store i16 %503, i16* %502, align 2
  %504 = add i64 %479, -8
  %505 = getelementptr inbounds i16, i16* %478, i64 8
  %506 = icmp eq i64 %504, 0
  br i1 %506, label %650, label %477, !llvm.loop !229

507:                                              ; preds = %352
  %508 = icmp ugt i16* %350, %1
  br i1 %508, label %509, label %650

509:                                              ; preds = %507
  %510 = getelementptr inbounds i16, i16* %1, i64 %19
  %511 = getelementptr inbounds i16, i16* %350, i64 %19
  %512 = icmp ult i64 %19, 16
  br i1 %512, label %597, label %513

513:                                              ; preds = %509
  %514 = icmp ult i16* %350, %510
  %515 = icmp ugt i16* %511, %1
  %516 = and i1 %514, %515
  br i1 %516, label %597, label %517

517:                                              ; preds = %513
  %518 = and i64 %19, -16
  %519 = sub i64 %19, %518
  %520 = sub i64 0, %518
  %521 = getelementptr i16, i16* %510, i64 %520
  %522 = sub i64 0, %518
  %523 = getelementptr i16, i16* %511, i64 %522
  %524 = add i64 %518, -16
  %525 = lshr exact i64 %524, 4
  %526 = add nuw nsw i64 %525, 1
  %527 = and i64 %526, 1
  %528 = icmp eq i64 %524, 0
  br i1 %528, label %575, label %529

529:                                              ; preds = %517
  %530 = sub nuw nsw i64 %526, %527
  %531 = getelementptr i16, i16* %1, i64 %17
  %532 = getelementptr i16, i16* %350, i64 %17
  %533 = getelementptr i16, i16* %1, i64 %17
  %534 = getelementptr i16, i16* %350, i64 %17
  br label %535

535:                                              ; preds = %535, %529
  %536 = phi i64 [ 0, %529 ], [ %570, %535 ]
  %537 = phi i64 [ %530, %529 ], [ %571, %535 ]
  %538 = sub i64 0, %536
  %539 = sub i64 0, %536
  %540 = getelementptr inbounds i16, i16* %532, i64 %539
  %541 = getelementptr inbounds i16, i16* %531, i64 %538
  %542 = getelementptr inbounds i16, i16* %541, i64 -7
  %543 = bitcast i16* %542 to <8 x i16>*
  %544 = load <8 x i16>, <8 x i16>* %543, align 2, !alias.scope !230
  %545 = getelementptr inbounds i16, i16* %541, i64 -8
  %546 = getelementptr inbounds i16, i16* %545, i64 -7
  %547 = bitcast i16* %546 to <8 x i16>*
  %548 = load <8 x i16>, <8 x i16>* %547, align 2, !alias.scope !230
  %549 = getelementptr inbounds i16, i16* %540, i64 -7
  %550 = bitcast i16* %549 to <8 x i16>*
  store <8 x i16> %544, <8 x i16>* %550, align 2, !alias.scope !233, !noalias !230
  %551 = getelementptr inbounds i16, i16* %540, i64 -8
  %552 = getelementptr inbounds i16, i16* %551, i64 -7
  %553 = bitcast i16* %552 to <8 x i16>*
  store <8 x i16> %548, <8 x i16>* %553, align 2, !alias.scope !233, !noalias !230
  %554 = sub nuw nsw i64 -16, %536
  %555 = sub nuw nsw i64 -16, %536
  %556 = getelementptr inbounds i16, i16* %534, i64 %555
  %557 = getelementptr inbounds i16, i16* %533, i64 %554
  %558 = getelementptr inbounds i16, i16* %557, i64 -7
  %559 = bitcast i16* %558 to <8 x i16>*
  %560 = load <8 x i16>, <8 x i16>* %559, align 2, !alias.scope !230
  %561 = getelementptr inbounds i16, i16* %557, i64 -8
  %562 = getelementptr inbounds i16, i16* %561, i64 -7
  %563 = bitcast i16* %562 to <8 x i16>*
  %564 = load <8 x i16>, <8 x i16>* %563, align 2, !alias.scope !230
  %565 = getelementptr inbounds i16, i16* %556, i64 -7
  %566 = bitcast i16* %565 to <8 x i16>*
  store <8 x i16> %560, <8 x i16>* %566, align 2, !alias.scope !233, !noalias !230
  %567 = getelementptr inbounds i16, i16* %556, i64 -8
  %568 = getelementptr inbounds i16, i16* %567, i64 -7
  %569 = bitcast i16* %568 to <8 x i16>*
  store <8 x i16> %564, <8 x i16>* %569, align 2, !alias.scope !233, !noalias !230
  %570 = add i64 %536, 32
  %571 = add i64 %537, -2
  %572 = icmp eq i64 %571, 0
  br i1 %572, label %573, label %535, !llvm.loop !235

573:                                              ; preds = %535
  %574 = sub nuw nsw i64 -32, %536
  br label %575

575:                                              ; preds = %573, %517
  %576 = phi i64 [ 0, %517 ], [ %574, %573 ]
  %577 = icmp eq i64 %527, 0
  br i1 %577, label %595, label %578

578:                                              ; preds = %575
  %579 = getelementptr i16, i16* %1, i64 %17
  %580 = getelementptr i16, i16* %350, i64 %17
  %581 = getelementptr inbounds i16, i16* %580, i64 %576
  %582 = getelementptr inbounds i16, i16* %579, i64 %576
  %583 = getelementptr inbounds i16, i16* %582, i64 -7
  %584 = bitcast i16* %583 to <8 x i16>*
  %585 = load <8 x i16>, <8 x i16>* %584, align 2, !alias.scope !230
  %586 = getelementptr inbounds i16, i16* %582, i64 -8
  %587 = getelementptr inbounds i16, i16* %586, i64 -7
  %588 = bitcast i16* %587 to <8 x i16>*
  %589 = load <8 x i16>, <8 x i16>* %588, align 2, !alias.scope !230
  %590 = getelementptr inbounds i16, i16* %581, i64 -7
  %591 = bitcast i16* %590 to <8 x i16>*
  store <8 x i16> %585, <8 x i16>* %591, align 2, !alias.scope !233, !noalias !230
  %592 = getelementptr inbounds i16, i16* %581, i64 -8
  %593 = getelementptr inbounds i16, i16* %592, i64 -7
  %594 = bitcast i16* %593 to <8 x i16>*
  store <8 x i16> %589, <8 x i16>* %594, align 2, !alias.scope !233, !noalias !230
  br label %595

595:                                              ; preds = %575, %578
  %596 = icmp eq i64 %19, %518
  br i1 %596, label %650, label %597

597:                                              ; preds = %595, %513, %509
  %598 = phi i64 [ %19, %513 ], [ %19, %509 ], [ %519, %595 ]
  %599 = phi i16* [ %510, %513 ], [ %510, %509 ], [ %521, %595 ]
  %600 = phi i16* [ %511, %513 ], [ %511, %509 ], [ %523, %595 ]
  %601 = add i64 %598, -1
  %602 = and i64 %598, 7
  %603 = icmp eq i64 %602, 0
  br i1 %603, label %615, label %604

604:                                              ; preds = %597, %604
  %605 = phi i64 [ %612, %604 ], [ %598, %597 ]
  %606 = phi i16* [ %610, %604 ], [ %599, %597 ]
  %607 = phi i16* [ %609, %604 ], [ %600, %597 ]
  %608 = phi i64 [ %613, %604 ], [ %602, %597 ]
  %609 = getelementptr inbounds i16, i16* %607, i64 -1
  %610 = getelementptr inbounds i16, i16* %606, i64 -1
  %611 = load i16, i16* %610, align 2
  store i16 %611, i16* %609, align 2
  %612 = add i64 %605, -1
  %613 = add i64 %608, -1
  %614 = icmp eq i64 %613, 0
  br i1 %614, label %615, label %604, !llvm.loop !236

615:                                              ; preds = %604, %597
  %616 = phi i64 [ %598, %597 ], [ %612, %604 ]
  %617 = phi i16* [ %599, %597 ], [ %610, %604 ]
  %618 = phi i16* [ %600, %597 ], [ %609, %604 ]
  %619 = icmp ult i64 %601, 7
  br i1 %619, label %650, label %620

620:                                              ; preds = %615, %620
  %621 = phi i64 [ %648, %620 ], [ %616, %615 ]
  %622 = phi i16* [ %646, %620 ], [ %617, %615 ]
  %623 = phi i16* [ %645, %620 ], [ %618, %615 ]
  %624 = getelementptr inbounds i16, i16* %623, i64 -1
  %625 = getelementptr inbounds i16, i16* %622, i64 -1
  %626 = load i16, i16* %625, align 2
  store i16 %626, i16* %624, align 2
  %627 = getelementptr inbounds i16, i16* %623, i64 -2
  %628 = getelementptr inbounds i16, i16* %622, i64 -2
  %629 = load i16, i16* %628, align 2
  store i16 %629, i16* %627, align 2
  %630 = getelementptr inbounds i16, i16* %623, i64 -3
  %631 = getelementptr inbounds i16, i16* %622, i64 -3
  %632 = load i16, i16* %631, align 2
  store i16 %632, i16* %630, align 2
  %633 = getelementptr inbounds i16, i16* %623, i64 -4
  %634 = getelementptr inbounds i16, i16* %622, i64 -4
  %635 = load i16, i16* %634, align 2
  store i16 %635, i16* %633, align 2
  %636 = getelementptr inbounds i16, i16* %623, i64 -5
  %637 = getelementptr inbounds i16, i16* %622, i64 -5
  %638 = load i16, i16* %637, align 2
  store i16 %638, i16* %636, align 2
  %639 = getelementptr inbounds i16, i16* %623, i64 -6
  %640 = getelementptr inbounds i16, i16* %622, i64 -6
  %641 = load i16, i16* %640, align 2
  store i16 %641, i16* %639, align 2
  %642 = getelementptr inbounds i16, i16* %623, i64 -7
  %643 = getelementptr inbounds i16, i16* %622, i64 -7
  %644 = load i16, i16* %643, align 2
  store i16 %644, i16* %642, align 2
  %645 = getelementptr inbounds i16, i16* %623, i64 -8
  %646 = getelementptr inbounds i16, i16* %622, i64 -8
  %647 = load i16, i16* %646, align 2
  store i16 %647, i16* %645, align 2
  %648 = add i64 %621, -8
  %649 = icmp eq i64 %648, 0
  br i1 %649, label %650, label %620, !llvm.loop !237

650:                                              ; preds = %615, %620, %472, %477, %595, %354, %452, %507, %349
  %651 = getelementptr inbounds i16, i16* %350, i64 %19
  store i16 0, i16* %651, align 2
  %652 = load i8, i8* %332, align 1
  %653 = icmp slt i8 %652, 0
  br i1 %653, label %654, label %656

654:                                              ; preds = %650
  %655 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %19, i64* %655, align 8
  br label %1014

656:                                              ; preds = %650
  %657 = trunc i64 %19 to i8
  store i8 %657, i8* %332, align 1
  br label %1014

658:                                              ; preds = %340
  br i1 %334, label %659, label %662

659:                                              ; preds = %658
  %660 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %661 = load i64, i64* %660, align 8
  br label %664

662:                                              ; preds = %658
  %663 = zext i8 %333 to i64
  br label %664

664:                                              ; preds = %662, %659
  %665 = phi i64 [ %661, %659 ], [ %663, %662 ]
  %666 = sub i64 %19, %341
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.1"* %0, i64 %341, i64 %666, i64 %665, i64 0, i64 %665, i64 %19, i16* %1) #10
  br label %1014

667:                                              ; preds = %2
  br i1 %5, label %675, label %668

668:                                              ; preds = %667, %668
  %669 = phi i64 [ %671, %668 ], [ 0, %667 ]
  %670 = phi i16* [ %672, %668 ], [ %1, %667 ]
  %671 = add i64 %669, 1
  %672 = getelementptr inbounds i16, i16* %670, i64 1
  %673 = load i16, i16* %672, align 2
  %674 = icmp eq i16 %673, 0
  br i1 %674, label %675, label %668

675:                                              ; preds = %668, %667
  %676 = phi i64 [ 0, %667 ], [ %671, %668 ]
  %677 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %678 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %677, i64 0, i32 1, i32 1
  %679 = load i8, i8* %678, align 1
  %680 = icmp slt i8 %679, 0
  br i1 %680, label %681, label %686

681:                                              ; preds = %675
  %682 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %683 = load i64, i64* %682, align 8
  %684 = and i64 %683, 9223372036854775807
  %685 = add nsw i64 %684, -1
  br label %686

686:                                              ; preds = %681, %675
  %687 = phi i64 [ %685, %681 ], [ 10, %675 ]
  %688 = icmp ugt i64 %676, %687
  br i1 %688, label %1005, label %689

689:                                              ; preds = %686
  br i1 %680, label %690, label %693

690:                                              ; preds = %689
  %691 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %692 = load i16*, i16** %691, align 8
  br label %695

693:                                              ; preds = %689
  %694 = bitcast %"class.std::__1::basic_string.1"* %0 to i16*
  br label %695

695:                                              ; preds = %693, %690
  %696 = phi i16* [ %692, %690 ], [ %694, %693 ]
  %697 = icmp eq i64 %676, 0
  br i1 %697, label %997, label %698

698:                                              ; preds = %695
  %699 = icmp ult i16* %696, %1
  br i1 %699, label %700, label %854

700:                                              ; preds = %698
  store i16 %3, i16* %696, align 2
  %701 = add i64 %676, -1
  %702 = getelementptr inbounds i16, i16* %1, i64 1
  %703 = icmp eq i64 %701, 0
  br i1 %703, label %997, label %704

704:                                              ; preds = %700
  %705 = icmp ult i64 %701, 16
  br i1 %705, label %801, label %706

706:                                              ; preds = %704
  %707 = getelementptr i16, i16* %696, i64 1
  %708 = getelementptr i16, i16* %696, i64 %676
  %709 = getelementptr i16, i16* %1, i64 %676
  %710 = icmp ult i16* %707, %709
  %711 = icmp ult i16* %702, %708
  %712 = and i1 %710, %711
  br i1 %712, label %801, label %713

713:                                              ; preds = %706
  %714 = and i64 %701, -16
  %715 = getelementptr i16, i16* %702, i64 %714
  %716 = sub i64 %701, %714
  %717 = getelementptr i16, i16* %696, i64 %714
  %718 = add i64 %714, -16
  %719 = lshr exact i64 %718, 4
  %720 = add nuw nsw i64 %719, 1
  %721 = and i64 %720, 3
  %722 = icmp ult i64 %718, 48
  br i1 %722, label %778, label %723

723:                                              ; preds = %713
  %724 = sub nsw i64 %720, %721
  %725 = getelementptr i16, i16* %696, i64 1
  %726 = getelementptr i16, i16* %696, i64 1
  %727 = getelementptr i16, i16* %696, i64 1
  %728 = getelementptr i16, i16* %696, i64 1
  br label %729

729:                                              ; preds = %729, %723
  %730 = phi i64 [ 0, %723 ], [ %775, %729 ]
  %731 = phi i64 [ %724, %723 ], [ %776, %729 ]
  %732 = getelementptr i16, i16* %702, i64 %730
  %733 = getelementptr inbounds i16, i16* %725, i64 %730
  %734 = bitcast i16* %732 to <8 x i16>*
  %735 = load <8 x i16>, <8 x i16>* %734, align 2, !alias.scope !238
  %736 = getelementptr i16, i16* %732, i64 8
  %737 = bitcast i16* %736 to <8 x i16>*
  %738 = load <8 x i16>, <8 x i16>* %737, align 2, !alias.scope !238
  %739 = bitcast i16* %733 to <8 x i16>*
  store <8 x i16> %735, <8 x i16>* %739, align 2, !alias.scope !241, !noalias !238
  %740 = getelementptr inbounds i16, i16* %733, i64 8
  %741 = bitcast i16* %740 to <8 x i16>*
  store <8 x i16> %738, <8 x i16>* %741, align 2, !alias.scope !241, !noalias !238
  %742 = or i64 %730, 16
  %743 = getelementptr i16, i16* %702, i64 %742
  %744 = getelementptr inbounds i16, i16* %726, i64 %742
  %745 = bitcast i16* %743 to <8 x i16>*
  %746 = load <8 x i16>, <8 x i16>* %745, align 2, !alias.scope !238
  %747 = getelementptr i16, i16* %743, i64 8
  %748 = bitcast i16* %747 to <8 x i16>*
  %749 = load <8 x i16>, <8 x i16>* %748, align 2, !alias.scope !238
  %750 = bitcast i16* %744 to <8 x i16>*
  store <8 x i16> %746, <8 x i16>* %750, align 2, !alias.scope !241, !noalias !238
  %751 = getelementptr inbounds i16, i16* %744, i64 8
  %752 = bitcast i16* %751 to <8 x i16>*
  store <8 x i16> %749, <8 x i16>* %752, align 2, !alias.scope !241, !noalias !238
  %753 = or i64 %730, 32
  %754 = getelementptr i16, i16* %702, i64 %753
  %755 = getelementptr inbounds i16, i16* %727, i64 %753
  %756 = bitcast i16* %754 to <8 x i16>*
  %757 = load <8 x i16>, <8 x i16>* %756, align 2, !alias.scope !238
  %758 = getelementptr i16, i16* %754, i64 8
  %759 = bitcast i16* %758 to <8 x i16>*
  %760 = load <8 x i16>, <8 x i16>* %759, align 2, !alias.scope !238
  %761 = bitcast i16* %755 to <8 x i16>*
  store <8 x i16> %757, <8 x i16>* %761, align 2, !alias.scope !241, !noalias !238
  %762 = getelementptr inbounds i16, i16* %755, i64 8
  %763 = bitcast i16* %762 to <8 x i16>*
  store <8 x i16> %760, <8 x i16>* %763, align 2, !alias.scope !241, !noalias !238
  %764 = or i64 %730, 48
  %765 = getelementptr i16, i16* %702, i64 %764
  %766 = getelementptr inbounds i16, i16* %728, i64 %764
  %767 = bitcast i16* %765 to <8 x i16>*
  %768 = load <8 x i16>, <8 x i16>* %767, align 2, !alias.scope !238
  %769 = getelementptr i16, i16* %765, i64 8
  %770 = bitcast i16* %769 to <8 x i16>*
  %771 = load <8 x i16>, <8 x i16>* %770, align 2, !alias.scope !238
  %772 = bitcast i16* %766 to <8 x i16>*
  store <8 x i16> %768, <8 x i16>* %772, align 2, !alias.scope !241, !noalias !238
  %773 = getelementptr inbounds i16, i16* %766, i64 8
  %774 = bitcast i16* %773 to <8 x i16>*
  store <8 x i16> %771, <8 x i16>* %774, align 2, !alias.scope !241, !noalias !238
  %775 = add i64 %730, 64
  %776 = add i64 %731, -4
  %777 = icmp eq i64 %776, 0
  br i1 %777, label %778, label %729, !llvm.loop !243

778:                                              ; preds = %729, %713
  %779 = phi i64 [ 0, %713 ], [ %775, %729 ]
  %780 = icmp eq i64 %721, 0
  br i1 %780, label %799, label %781

781:                                              ; preds = %778
  %782 = getelementptr i16, i16* %696, i64 1
  br label %783

783:                                              ; preds = %783, %781
  %784 = phi i64 [ %779, %781 ], [ %796, %783 ]
  %785 = phi i64 [ %721, %781 ], [ %797, %783 ]
  %786 = getelementptr i16, i16* %702, i64 %784
  %787 = getelementptr inbounds i16, i16* %782, i64 %784
  %788 = bitcast i16* %786 to <8 x i16>*
  %789 = load <8 x i16>, <8 x i16>* %788, align 2, !alias.scope !238
  %790 = getelementptr i16, i16* %786, i64 8
  %791 = bitcast i16* %790 to <8 x i16>*
  %792 = load <8 x i16>, <8 x i16>* %791, align 2, !alias.scope !238
  %793 = bitcast i16* %787 to <8 x i16>*
  store <8 x i16> %789, <8 x i16>* %793, align 2, !alias.scope !241, !noalias !238
  %794 = getelementptr inbounds i16, i16* %787, i64 8
  %795 = bitcast i16* %794 to <8 x i16>*
  store <8 x i16> %792, <8 x i16>* %795, align 2, !alias.scope !241, !noalias !238
  %796 = add i64 %784, 16
  %797 = add i64 %785, -1
  %798 = icmp eq i64 %797, 0
  br i1 %798, label %799, label %783, !llvm.loop !244

799:                                              ; preds = %783, %778
  %800 = icmp eq i64 %701, %714
  br i1 %800, label %997, label %801

801:                                              ; preds = %799, %706, %704
  %802 = phi i16* [ %702, %706 ], [ %702, %704 ], [ %715, %799 ]
  %803 = phi i64 [ %701, %706 ], [ %701, %704 ], [ %716, %799 ]
  %804 = phi i16* [ %696, %706 ], [ %696, %704 ], [ %717, %799 ]
  %805 = add i64 %803, -1
  %806 = and i64 %803, 7
  %807 = icmp eq i64 %806, 0
  br i1 %807, label %819, label %808

808:                                              ; preds = %801, %808
  %809 = phi i16* [ %816, %808 ], [ %802, %801 ]
  %810 = phi i64 [ %815, %808 ], [ %803, %801 ]
  %811 = phi i16* [ %813, %808 ], [ %804, %801 ]
  %812 = phi i64 [ %817, %808 ], [ %806, %801 ]
  %813 = getelementptr inbounds i16, i16* %811, i64 1
  %814 = load i16, i16* %809, align 2
  store i16 %814, i16* %813, align 2
  %815 = add i64 %810, -1
  %816 = getelementptr inbounds i16, i16* %809, i64 1
  %817 = add i64 %812, -1
  %818 = icmp eq i64 %817, 0
  br i1 %818, label %819, label %808, !llvm.loop !245

819:                                              ; preds = %808, %801
  %820 = phi i16* [ %802, %801 ], [ %816, %808 ]
  %821 = phi i64 [ %803, %801 ], [ %815, %808 ]
  %822 = phi i16* [ %804, %801 ], [ %813, %808 ]
  %823 = icmp ult i64 %805, 7
  br i1 %823, label %997, label %824

824:                                              ; preds = %819, %824
  %825 = phi i16* [ %852, %824 ], [ %820, %819 ]
  %826 = phi i64 [ %851, %824 ], [ %821, %819 ]
  %827 = phi i16* [ %849, %824 ], [ %822, %819 ]
  %828 = getelementptr inbounds i16, i16* %827, i64 1
  %829 = load i16, i16* %825, align 2
  store i16 %829, i16* %828, align 2
  %830 = getelementptr inbounds i16, i16* %825, i64 1
  %831 = getelementptr inbounds i16, i16* %827, i64 2
  %832 = load i16, i16* %830, align 2
  store i16 %832, i16* %831, align 2
  %833 = getelementptr inbounds i16, i16* %825, i64 2
  %834 = getelementptr inbounds i16, i16* %827, i64 3
  %835 = load i16, i16* %833, align 2
  store i16 %835, i16* %834, align 2
  %836 = getelementptr inbounds i16, i16* %825, i64 3
  %837 = getelementptr inbounds i16, i16* %827, i64 4
  %838 = load i16, i16* %836, align 2
  store i16 %838, i16* %837, align 2
  %839 = getelementptr inbounds i16, i16* %825, i64 4
  %840 = getelementptr inbounds i16, i16* %827, i64 5
  %841 = load i16, i16* %839, align 2
  store i16 %841, i16* %840, align 2
  %842 = getelementptr inbounds i16, i16* %825, i64 5
  %843 = getelementptr inbounds i16, i16* %827, i64 6
  %844 = load i16, i16* %842, align 2
  store i16 %844, i16* %843, align 2
  %845 = getelementptr inbounds i16, i16* %825, i64 6
  %846 = getelementptr inbounds i16, i16* %827, i64 7
  %847 = load i16, i16* %845, align 2
  store i16 %847, i16* %846, align 2
  %848 = getelementptr inbounds i16, i16* %825, i64 7
  %849 = getelementptr inbounds i16, i16* %827, i64 8
  %850 = load i16, i16* %848, align 2
  store i16 %850, i16* %849, align 2
  %851 = add i64 %826, -8
  %852 = getelementptr inbounds i16, i16* %825, i64 8
  %853 = icmp eq i64 %851, 0
  br i1 %853, label %997, label %824, !llvm.loop !246

854:                                              ; preds = %698
  %855 = icmp ugt i16* %696, %1
  br i1 %855, label %856, label %997

856:                                              ; preds = %854
  %857 = getelementptr inbounds i16, i16* %1, i64 %676
  %858 = getelementptr inbounds i16, i16* %696, i64 %676
  %859 = icmp ult i64 %676, 16
  br i1 %859, label %944, label %860

860:                                              ; preds = %856
  %861 = icmp ult i16* %696, %857
  %862 = icmp ugt i16* %858, %1
  %863 = and i1 %861, %862
  br i1 %863, label %944, label %864

864:                                              ; preds = %860
  %865 = and i64 %676, -16
  %866 = sub i64 %676, %865
  %867 = sub i64 0, %865
  %868 = getelementptr i16, i16* %857, i64 %867
  %869 = sub i64 0, %865
  %870 = getelementptr i16, i16* %858, i64 %869
  %871 = add i64 %865, -16
  %872 = lshr exact i64 %871, 4
  %873 = add nuw nsw i64 %872, 1
  %874 = and i64 %873, 1
  %875 = icmp eq i64 %871, 0
  br i1 %875, label %922, label %876

876:                                              ; preds = %864
  %877 = sub nuw nsw i64 %873, %874
  %878 = getelementptr i16, i16* %857, i64 -1
  %879 = getelementptr i16, i16* %858, i64 -1
  %880 = getelementptr i16, i16* %857, i64 -1
  %881 = getelementptr i16, i16* %858, i64 -1
  br label %882

882:                                              ; preds = %882, %876
  %883 = phi i64 [ 0, %876 ], [ %917, %882 ]
  %884 = phi i64 [ %877, %876 ], [ %918, %882 ]
  %885 = sub i64 0, %883
  %886 = sub i64 0, %883
  %887 = getelementptr inbounds i16, i16* %879, i64 %886
  %888 = getelementptr inbounds i16, i16* %878, i64 %885
  %889 = getelementptr inbounds i16, i16* %888, i64 -7
  %890 = bitcast i16* %889 to <8 x i16>*
  %891 = load <8 x i16>, <8 x i16>* %890, align 2, !alias.scope !247
  %892 = getelementptr inbounds i16, i16* %888, i64 -8
  %893 = getelementptr inbounds i16, i16* %892, i64 -7
  %894 = bitcast i16* %893 to <8 x i16>*
  %895 = load <8 x i16>, <8 x i16>* %894, align 2, !alias.scope !247
  %896 = getelementptr inbounds i16, i16* %887, i64 -7
  %897 = bitcast i16* %896 to <8 x i16>*
  store <8 x i16> %891, <8 x i16>* %897, align 2, !alias.scope !250, !noalias !247
  %898 = getelementptr inbounds i16, i16* %887, i64 -8
  %899 = getelementptr inbounds i16, i16* %898, i64 -7
  %900 = bitcast i16* %899 to <8 x i16>*
  store <8 x i16> %895, <8 x i16>* %900, align 2, !alias.scope !250, !noalias !247
  %901 = sub nuw nsw i64 -16, %883
  %902 = sub nuw nsw i64 -16, %883
  %903 = getelementptr inbounds i16, i16* %881, i64 %902
  %904 = getelementptr inbounds i16, i16* %880, i64 %901
  %905 = getelementptr inbounds i16, i16* %904, i64 -7
  %906 = bitcast i16* %905 to <8 x i16>*
  %907 = load <8 x i16>, <8 x i16>* %906, align 2, !alias.scope !247
  %908 = getelementptr inbounds i16, i16* %904, i64 -8
  %909 = getelementptr inbounds i16, i16* %908, i64 -7
  %910 = bitcast i16* %909 to <8 x i16>*
  %911 = load <8 x i16>, <8 x i16>* %910, align 2, !alias.scope !247
  %912 = getelementptr inbounds i16, i16* %903, i64 -7
  %913 = bitcast i16* %912 to <8 x i16>*
  store <8 x i16> %907, <8 x i16>* %913, align 2, !alias.scope !250, !noalias !247
  %914 = getelementptr inbounds i16, i16* %903, i64 -8
  %915 = getelementptr inbounds i16, i16* %914, i64 -7
  %916 = bitcast i16* %915 to <8 x i16>*
  store <8 x i16> %911, <8 x i16>* %916, align 2, !alias.scope !250, !noalias !247
  %917 = add i64 %883, 32
  %918 = add i64 %884, -2
  %919 = icmp eq i64 %918, 0
  br i1 %919, label %920, label %882, !llvm.loop !252

920:                                              ; preds = %882
  %921 = sub nuw nsw i64 -32, %883
  br label %922

922:                                              ; preds = %920, %864
  %923 = phi i64 [ 0, %864 ], [ %921, %920 ]
  %924 = icmp eq i64 %874, 0
  br i1 %924, label %942, label %925

925:                                              ; preds = %922
  %926 = getelementptr i16, i16* %857, i64 -1
  %927 = getelementptr i16, i16* %858, i64 -1
  %928 = getelementptr inbounds i16, i16* %927, i64 %923
  %929 = getelementptr inbounds i16, i16* %926, i64 %923
  %930 = getelementptr inbounds i16, i16* %929, i64 -7
  %931 = bitcast i16* %930 to <8 x i16>*
  %932 = load <8 x i16>, <8 x i16>* %931, align 2, !alias.scope !247
  %933 = getelementptr inbounds i16, i16* %929, i64 -8
  %934 = getelementptr inbounds i16, i16* %933, i64 -7
  %935 = bitcast i16* %934 to <8 x i16>*
  %936 = load <8 x i16>, <8 x i16>* %935, align 2, !alias.scope !247
  %937 = getelementptr inbounds i16, i16* %928, i64 -7
  %938 = bitcast i16* %937 to <8 x i16>*
  store <8 x i16> %932, <8 x i16>* %938, align 2, !alias.scope !250, !noalias !247
  %939 = getelementptr inbounds i16, i16* %928, i64 -8
  %940 = getelementptr inbounds i16, i16* %939, i64 -7
  %941 = bitcast i16* %940 to <8 x i16>*
  store <8 x i16> %936, <8 x i16>* %941, align 2, !alias.scope !250, !noalias !247
  br label %942

942:                                              ; preds = %922, %925
  %943 = icmp eq i64 %676, %865
  br i1 %943, label %997, label %944

944:                                              ; preds = %942, %860, %856
  %945 = phi i64 [ %676, %860 ], [ %676, %856 ], [ %866, %942 ]
  %946 = phi i16* [ %857, %860 ], [ %857, %856 ], [ %868, %942 ]
  %947 = phi i16* [ %858, %860 ], [ %858, %856 ], [ %870, %942 ]
  %948 = add i64 %945, -1
  %949 = and i64 %945, 7
  %950 = icmp eq i64 %949, 0
  br i1 %950, label %962, label %951

951:                                              ; preds = %944, %951
  %952 = phi i64 [ %959, %951 ], [ %945, %944 ]
  %953 = phi i16* [ %957, %951 ], [ %946, %944 ]
  %954 = phi i16* [ %956, %951 ], [ %947, %944 ]
  %955 = phi i64 [ %960, %951 ], [ %949, %944 ]
  %956 = getelementptr inbounds i16, i16* %954, i64 -1
  %957 = getelementptr inbounds i16, i16* %953, i64 -1
  %958 = load i16, i16* %957, align 2
  store i16 %958, i16* %956, align 2
  %959 = add i64 %952, -1
  %960 = add i64 %955, -1
  %961 = icmp eq i64 %960, 0
  br i1 %961, label %962, label %951, !llvm.loop !253

962:                                              ; preds = %951, %944
  %963 = phi i64 [ %945, %944 ], [ %959, %951 ]
  %964 = phi i16* [ %946, %944 ], [ %957, %951 ]
  %965 = phi i16* [ %947, %944 ], [ %956, %951 ]
  %966 = icmp ult i64 %948, 7
  br i1 %966, label %997, label %967

967:                                              ; preds = %962, %967
  %968 = phi i64 [ %995, %967 ], [ %963, %962 ]
  %969 = phi i16* [ %993, %967 ], [ %964, %962 ]
  %970 = phi i16* [ %992, %967 ], [ %965, %962 ]
  %971 = getelementptr inbounds i16, i16* %970, i64 -1
  %972 = getelementptr inbounds i16, i16* %969, i64 -1
  %973 = load i16, i16* %972, align 2
  store i16 %973, i16* %971, align 2
  %974 = getelementptr inbounds i16, i16* %970, i64 -2
  %975 = getelementptr inbounds i16, i16* %969, i64 -2
  %976 = load i16, i16* %975, align 2
  store i16 %976, i16* %974, align 2
  %977 = getelementptr inbounds i16, i16* %970, i64 -3
  %978 = getelementptr inbounds i16, i16* %969, i64 -3
  %979 = load i16, i16* %978, align 2
  store i16 %979, i16* %977, align 2
  %980 = getelementptr inbounds i16, i16* %970, i64 -4
  %981 = getelementptr inbounds i16, i16* %969, i64 -4
  %982 = load i16, i16* %981, align 2
  store i16 %982, i16* %980, align 2
  %983 = getelementptr inbounds i16, i16* %970, i64 -5
  %984 = getelementptr inbounds i16, i16* %969, i64 -5
  %985 = load i16, i16* %984, align 2
  store i16 %985, i16* %983, align 2
  %986 = getelementptr inbounds i16, i16* %970, i64 -6
  %987 = getelementptr inbounds i16, i16* %969, i64 -6
  %988 = load i16, i16* %987, align 2
  store i16 %988, i16* %986, align 2
  %989 = getelementptr inbounds i16, i16* %970, i64 -7
  %990 = getelementptr inbounds i16, i16* %969, i64 -7
  %991 = load i16, i16* %990, align 2
  store i16 %991, i16* %989, align 2
  %992 = getelementptr inbounds i16, i16* %970, i64 -8
  %993 = getelementptr inbounds i16, i16* %969, i64 -8
  %994 = load i16, i16* %993, align 2
  store i16 %994, i16* %992, align 2
  %995 = add i64 %968, -8
  %996 = icmp eq i64 %995, 0
  br i1 %996, label %997, label %967, !llvm.loop !254

997:                                              ; preds = %962, %967, %819, %824, %942, %700, %799, %854, %695
  %998 = getelementptr inbounds i16, i16* %696, i64 %676
  store i16 0, i16* %998, align 2
  %999 = load i8, i8* %678, align 1
  %1000 = icmp slt i8 %999, 0
  br i1 %1000, label %1001, label %1003

1001:                                             ; preds = %997
  %1002 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %676, i64* %1002, align 8
  br label %1014

1003:                                             ; preds = %997
  %1004 = trunc i64 %676 to i8
  store i8 %1004, i8* %678, align 1
  br label %1014

1005:                                             ; preds = %686
  br i1 %680, label %1006, label %1009

1006:                                             ; preds = %1005
  %1007 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1008 = load i64, i64* %1007, align 8
  br label %1011

1009:                                             ; preds = %1005
  %1010 = zext i8 %679 to i64
  br label %1011

1011:                                             ; preds = %1009, %1006
  %1012 = phi i64 [ %1008, %1006 ], [ %1010, %1009 ]
  %1013 = sub i64 %676, %687
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.1"* %0, i64 %687, i64 %1013, i64 %1012, i64 0, i64 %1012, i64 %676, i16* %1) #10
  br label %1014

1014:                                             ; preds = %1011, %1003, %1001, %664, %656, %654, %328
  ret %"class.std::__1::basic_string.1"* %0
}

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i16(i16) #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !8}
!28 = distinct !{!28, !10}
!29 = distinct !{!29, !10}
!30 = distinct !{!30, !8}
!31 = !{!32}
!32 = distinct !{!32, !33}
!33 = distinct !{!33, !"LVerDomain"}
!34 = !{!35}
!35 = distinct !{!35, !33}
!36 = distinct !{!36, !8}
!37 = distinct !{!37, !10}
!38 = distinct !{!38, !10}
!39 = distinct !{!39, !8}
!40 = !{!41}
!41 = distinct !{!41, !42}
!42 = distinct !{!42, !"LVerDomain"}
!43 = !{!44}
!44 = distinct !{!44, !42}
!45 = distinct !{!45, !8}
!46 = distinct !{!46, !10}
!47 = distinct !{!47, !10}
!48 = distinct !{!48, !8}
!49 = !{!50}
!50 = distinct !{!50, !51}
!51 = distinct !{!51, !"LVerDomain"}
!52 = !{!53}
!53 = distinct !{!53, !51}
!54 = distinct !{!54, !8}
!55 = distinct !{!55, !10}
!56 = distinct !{!56, !10}
!57 = distinct !{!57, !8}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!60 = distinct !{!60, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!63 = distinct !{!63, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!66 = distinct !{!66, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!67 = !{!68}
!68 = distinct !{!68, !69, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!69 = distinct !{!69, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!70 = !{!71}
!71 = distinct !{!71, !72, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!72 = distinct !{!72, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!73 = !{!74}
!74 = distinct !{!74, !75}
!75 = distinct !{!75, !"LVerDomain"}
!76 = !{!77}
!77 = distinct !{!77, !75}
!78 = distinct !{!78, !8}
!79 = distinct !{!79, !10}
!80 = distinct !{!80, !10}
!81 = distinct !{!81, !8}
!82 = !{!83}
!83 = distinct !{!83, !84}
!84 = distinct !{!84, !"LVerDomain"}
!85 = !{!86}
!86 = distinct !{!86, !84}
!87 = distinct !{!87, !8}
!88 = distinct !{!88, !10}
!89 = distinct !{!89, !10}
!90 = distinct !{!90, !8}
!91 = !{!92}
!92 = distinct !{!92, !93, !"_ZN12_GLOBAL__N_118GetFullProductNameERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_: argument 0"}
!93 = distinct !{!93, !"_ZN12_GLOBAL__N_118GetFullProductNameERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_"}
!94 = !{!95, !92}
!95 = distinct !{!95, !96, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!96 = distinct !{!96, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!97 = !{!98}
!98 = distinct !{!98, !99}
!99 = distinct !{!99, !"LVerDomain"}
!100 = !{!101}
!101 = distinct !{!101, !99}
!102 = !{!95, !92, !98}
!103 = distinct !{!103, !8}
!104 = distinct !{!104, !10}
!105 = distinct !{!105, !10}
!106 = distinct !{!106, !8}
!107 = !{!108}
!108 = distinct !{!108, !109, !"_ZN12_GLOBAL__N_123GetDisplayNameForDeviceEmRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE: argument 0"}
!109 = distinct !{!109, !"_ZN12_GLOBAL__N_123GetDisplayNameForDeviceEmRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE"}
!110 = !{!111}
!111 = distinct !{!111, !112}
!112 = distinct !{!112, !"LVerDomain"}
!113 = !{!114}
!114 = distinct !{!114, !112}
!115 = distinct !{!115, !8}
!116 = distinct !{!116, !10}
!117 = distinct !{!117, !10}
!118 = distinct !{!118, !8}
!119 = !{!120, !108}
!120 = distinct !{!120, !121, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!121 = distinct !{!121, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!122 = !{!120}
!123 = !{!124, !108}
!124 = distinct !{!124, !125, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!125 = distinct !{!125, !"_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!126 = !{!127}
!127 = distinct !{!127, !128}
!128 = distinct !{!128, !"LVerDomain"}
!129 = !{!124}
!130 = !{!131}
!131 = distinct !{!131, !128}
!132 = !{!124, !127}
!133 = distinct !{!133, !8}
!134 = distinct !{!134, !10}
!135 = distinct !{!135, !10}
!136 = distinct !{!136, !8}
!137 = !{!138}
!138 = distinct !{!138, !139}
!139 = distinct !{!139, !"LVerDomain"}
!140 = !{!141}
!141 = distinct !{!141, !139}
!142 = distinct !{!142, !8}
!143 = distinct !{!143, !10}
!144 = distinct !{!144, !10}
!145 = distinct !{!145, !8}
!146 = !{!147}
!147 = distinct !{!147, !148}
!148 = distinct !{!148, !"LVerDomain"}
!149 = !{!150}
!150 = distinct !{!150, !148}
!151 = distinct !{!151, !8}
!152 = distinct !{!152, !10}
!153 = distinct !{!153, !10}
!154 = distinct !{!154, !8}
!155 = !{!156}
!156 = distinct !{!156, !157}
!157 = distinct !{!157, !"LVerDomain"}
!158 = !{!159}
!159 = distinct !{!159, !157}
!160 = distinct !{!160, !8}
!161 = distinct !{!161, !10}
!162 = distinct !{!162, !10}
!163 = distinct !{!163, !8}
!164 = !{!165}
!165 = distinct !{!165, !166}
!166 = distinct !{!166, !"LVerDomain"}
!167 = !{!168}
!168 = distinct !{!168, !166}
!169 = distinct !{!169, !8}
!170 = distinct !{!170, !10}
!171 = distinct !{!171, !10}
!172 = distinct !{!172, !8}
!173 = !{!174}
!174 = distinct !{!174, !175}
!175 = distinct !{!175, !"LVerDomain"}
!176 = !{!177}
!177 = distinct !{!177, !175}
!178 = distinct !{!178, !8}
!179 = distinct !{!179, !10}
!180 = distinct !{!180, !10}
!181 = distinct !{!181, !8}
!182 = !{!183}
!183 = distinct !{!183, !184}
!184 = distinct !{!184, !"LVerDomain"}
!185 = !{!186}
!186 = distinct !{!186, !184}
!187 = distinct !{!187, !8}
!188 = distinct !{!188, !10}
!189 = distinct !{!189, !10}
!190 = distinct !{!190, !8}
!191 = distinct !{!191, !8}
!192 = distinct !{!192, !10}
!193 = distinct !{!193, !194, !8}
!194 = !{!"llvm.loop.unroll.runtime.disable"}
!195 = !{!196}
!196 = distinct !{!196, !197}
!197 = distinct !{!197, !"LVerDomain"}
!198 = !{!199}
!199 = distinct !{!199, !197}
!200 = distinct !{!200, !8}
!201 = distinct !{!201, !10}
!202 = distinct !{!202, !10}
!203 = distinct !{!203, !8}
!204 = !{!205}
!205 = distinct !{!205, !206}
!206 = distinct !{!206, !"LVerDomain"}
!207 = !{!208}
!208 = distinct !{!208, !206}
!209 = distinct !{!209, !8}
!210 = distinct !{!210, !10}
!211 = distinct !{!211, !10}
!212 = distinct !{!212, !8}
!213 = !{!214}
!214 = distinct !{!214, !215}
!215 = distinct !{!215, !"LVerDomain"}
!216 = !{!217}
!217 = distinct !{!217, !215}
!218 = distinct !{!218, !8}
!219 = distinct !{!219, !10}
!220 = distinct !{!220, !8}
!221 = !{!222}
!222 = distinct !{!222, !223}
!223 = distinct !{!223, !"LVerDomain"}
!224 = !{!225}
!225 = distinct !{!225, !223}
!226 = distinct !{!226, !8}
!227 = distinct !{!227, !10}
!228 = distinct !{!228, !10}
!229 = distinct !{!229, !8}
!230 = !{!231}
!231 = distinct !{!231, !232}
!232 = distinct !{!232, !"LVerDomain"}
!233 = !{!234}
!234 = distinct !{!234, !232}
!235 = distinct !{!235, !8}
!236 = distinct !{!236, !10}
!237 = distinct !{!237, !8}
!238 = !{!239}
!239 = distinct !{!239, !240}
!240 = distinct !{!240, !"LVerDomain"}
!241 = !{!242}
!242 = distinct !{!242, !240}
!243 = distinct !{!243, !8}
!244 = distinct !{!244, !10}
!245 = distinct !{!245, !10}
!246 = distinct !{!246, !8}
!247 = !{!248}
!248 = distinct !{!248, !249}
!249 = distinct !{!249, !"LVerDomain"}
!250 = !{!251}
!251 = distinct !{!251, !249}
!252 = distinct !{!252, !8}
!253 = distinct !{!253, !10}
!254 = distinct !{!254, !8}
