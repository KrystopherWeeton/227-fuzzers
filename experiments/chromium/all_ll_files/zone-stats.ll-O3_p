; ModuleID = '../../v8/src/compiler/zone-stats.cc'
source_filename = "../../v8/src/compiler/zone-stats.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::compiler::ZoneStats::StatsScope" = type { %"class.v8::internal::compiler::ZoneStats"*, %"class.std::__1::map", i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.18", %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i64 }
%"class.v8::internal::compiler::ZoneStats" = type { %"class.std::__1::vector", %"class.std::__1::vector.11", i64, i64, %"class.v8::internal::AccountingAllocator"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.v8::internal::Zone"**, %"class.v8::internal::Zone"**, %"class.std::__1::__compressed_pair.8" }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.v8::internal::Zone"** }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %"class.v8::internal::compiler::ZoneStats::StatsScope"**, %"class.v8::internal::compiler::ZoneStats::StatsScope"**, %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.v8::internal::compiler::ZoneStats::StatsScope"** }
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type opaque
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.27" }
%"struct.std::__1::pair.27" = type { %"class.v8::internal::Zone"*, i64 }

$_ZNSt3__16__treeINS_12__value_typeIPN2v88internal4ZoneEmEENS_19__map_value_compareIS5_S6_NS_4lessIS5_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@_ZN2v88internal8compiler9ZoneStats10StatsScopeC1EPS2_ = hidden unnamed_addr alias void (%"class.v8::internal::compiler::ZoneStats::StatsScope"*, %"class.v8::internal::compiler::ZoneStats"*), void (%"class.v8::internal::compiler::ZoneStats::StatsScope"*, %"class.v8::internal::compiler::ZoneStats"*)* @_ZN2v88internal8compiler9ZoneStats10StatsScopeC2EPS2_
@_ZN2v88internal8compiler9ZoneStats10StatsScopeD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::compiler::ZoneStats::StatsScope"*), void (%"class.v8::internal::compiler::ZoneStats::StatsScope"*)* @_ZN2v88internal8compiler9ZoneStats10StatsScopeD2Ev
@_ZN2v88internal8compiler9ZoneStatsC1EPNS0_19AccountingAllocatorE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::ZoneStats"*, %"class.v8::internal::AccountingAllocator"*), void (%"class.v8::internal::compiler::ZoneStats"*, %"class.v8::internal::AccountingAllocator"*)* @_ZN2v88internal8compiler9ZoneStatsC2EPNS0_19AccountingAllocatorE
@_ZN2v88internal8compiler9ZoneStatsD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::compiler::ZoneStats"*), void (%"class.v8::internal::compiler::ZoneStats"*)* @_ZN2v88internal8compiler9ZoneStatsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler9ZoneStats10StatsScopeC2EPS2_(%"class.v8::internal::compiler::ZoneStats::StatsScope"*, %"class.v8::internal::compiler::ZoneStats"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats::StatsScope", %"class.v8::internal::compiler::ZoneStats::StatsScope"* %0, i64 0, i32 0
  store %"class.v8::internal::compiler::ZoneStats"* %1, %"class.v8::internal::compiler::ZoneStats"** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats::StatsScope", %"class.v8::internal::compiler::ZoneStats::StatsScope"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats::StatsScope", %"class.v8::internal::compiler::ZoneStats::StatsScope"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats::StatsScope", %"class.v8::internal::compiler::ZoneStats::StatsScope"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %4, i64 0, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_node_base"** %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %6, %"class.std::__1::__tree_end_node"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats::StatsScope", %"class.v8::internal::compiler::ZoneStats::StatsScope"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %1, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %1, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.v8::internal::Zone"**, %"class.v8::internal::Zone"*** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %1, i64 0, i32 0, i32 0, i32 1
  %15 = load %"class.v8::internal::Zone"**, %"class.v8::internal::Zone"*** %14, align 8
  %16 = icmp eq %"class.v8::internal::Zone"** %13, %15
  br i1 %16, label %75, label %17

17:                                               ; preds = %2
  %18 = ptrtoint %"class.v8::internal::Zone"** %13 to i64
  %19 = getelementptr %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %15, i64 -1
  %20 = ptrtoint %"class.v8::internal::Zone"** %19 to i64
  %21 = sub i64 %20, %18
  %22 = lshr i64 %21, 3
  %23 = add nuw nsw i64 %22, 1
  %24 = and i64 %23, 1
  %25 = icmp eq i64 %22, 0
  br i1 %25, label %53, label %26

26:                                               ; preds = %17
  %27 = sub nuw nsw i64 %23, %24
  br label %28

28:                                               ; preds = %246, %26
  %29 = phi i64 [ 0, %26 ], [ %251, %246 ]
  %30 = phi %"class.v8::internal::Zone"** [ %13, %26 ], [ %252, %246 ]
  %31 = phi i64 [ %27, %26 ], [ %253, %246 ]
  %32 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %30, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %32, i64 0, i32 5
  %34 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %33, align 8
  %35 = icmp eq %"class.v8::internal::Segment"* %34, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %32, i64 0, i32 2
  %38 = load i64, i64* %37, align 8
  %39 = ptrtoint %"class.v8::internal::Segment"* %34 to i64
  %40 = sub i64 -24, %39
  %41 = add i64 %40, %38
  br label %42

42:                                               ; preds = %36, %28
  %43 = phi i64 [ %41, %36 ], [ 0, %28 ]
  %44 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %32, i64 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %43, %29
  %47 = add i64 %46, %45
  %48 = getelementptr inbounds %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %30, i64 1
  %49 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %49, i64 0, i32 5
  %51 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %50, align 8
  %52 = icmp eq %"class.v8::internal::Segment"* %51, null
  br i1 %52, label %246, label %240

53:                                               ; preds = %246, %17
  %54 = phi i64 [ undef, %17 ], [ %251, %246 ]
  %55 = phi i64 [ 0, %17 ], [ %251, %246 ]
  %56 = phi %"class.v8::internal::Zone"** [ %13, %17 ], [ %252, %246 ]
  %57 = icmp eq i64 %24, 0
  br i1 %57, label %75, label %58

58:                                               ; preds = %53
  %59 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %56, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %59, i64 0, i32 5
  %61 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %60, align 8
  %62 = icmp eq %"class.v8::internal::Segment"* %61, null
  br i1 %62, label %69, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %59, i64 0, i32 2
  %65 = load i64, i64* %64, align 8
  %66 = ptrtoint %"class.v8::internal::Segment"* %61 to i64
  %67 = sub i64 -24, %66
  %68 = add i64 %67, %65
  br label %69

69:                                               ; preds = %58, %63
  %70 = phi i64 [ %68, %63 ], [ 0, %58 ]
  %71 = add i64 %70, %55
  %72 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %59, i64 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %71, %73
  br label %75

75:                                               ; preds = %69, %53, %2
  %76 = phi i64 [ 0, %2 ], [ %54, %53 ], [ %74, %69 ]
  %77 = add i64 %76, %11
  store i64 %77, i64* %9, align 8
  %78 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats::StatsScope", %"class.v8::internal::compiler::ZoneStats::StatsScope"* %0, i64 0, i32 3
  store i64 0, i64* %78, align 8
  %79 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %1, i64 0, i32 1
  %80 = ptrtoint %"class.v8::internal::compiler::ZoneStats::StatsScope"* %0 to i64
  %81 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %1, i64 0, i32 1, i32 0, i32 1
  %82 = load %"class.v8::internal::compiler::ZoneStats::StatsScope"**, %"class.v8::internal::compiler::ZoneStats::StatsScope"*** %81, align 8
  %83 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %84 = load %"class.v8::internal::compiler::ZoneStats::StatsScope"**, %"class.v8::internal::compiler::ZoneStats::StatsScope"*** %83, align 8
  %85 = icmp ult %"class.v8::internal::compiler::ZoneStats::StatsScope"** %82, %84
  %86 = ptrtoint %"class.v8::internal::compiler::ZoneStats::StatsScope"** %84 to i64
  br i1 %85, label %87, label %92

87:                                               ; preds = %75
  %88 = bitcast %"class.v8::internal::compiler::ZoneStats::StatsScope"** %82 to i64*
  store i64 %80, i64* %88, align 8
  %89 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats::StatsScope"*, %"class.v8::internal::compiler::ZoneStats::StatsScope"** %82, i64 1
  %90 = ptrtoint %"class.v8::internal::compiler::ZoneStats::StatsScope"** %89 to i64
  %91 = bitcast %"class.v8::internal::compiler::ZoneStats::StatsScope"*** %81 to i64*
  store i64 %90, i64* %91, align 8
  br label %149

92:                                               ; preds = %75
  %93 = ptrtoint %"class.v8::internal::compiler::ZoneStats::StatsScope"** %82 to i64
  %94 = bitcast %"class.v8::internal::compiler::ZoneStats::StatsScope"*** %81 to i64*
  %95 = bitcast %"class.std::__1::vector.11"* %79 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = sub i64 %93, %96
  %98 = ashr exact i64 %97, 3
  %99 = add nsw i64 %98, 1
  %100 = icmp ugt i64 %99, 2305843009213693951
  br i1 %100, label %101, label %103

101:                                              ; preds = %92
  %102 = bitcast %"class.std::__1::vector.11"* %79 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %102) #11
  unreachable

103:                                              ; preds = %92
  %104 = bitcast %"class.v8::internal::compiler::ZoneStats::StatsScope"*** %83 to i64*
  %105 = sub i64 %86, %96
  %106 = ashr exact i64 %105, 3
  %107 = icmp ult i64 %106, 1152921504606846975
  br i1 %107, label %108, label %116

108:                                              ; preds = %103
  %109 = ashr exact i64 %105, 2
  %110 = icmp ult i64 %109, %99
  %111 = select i1 %110, i64 %99, i64 %109
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %121, label %113

113:                                              ; preds = %108
  %114 = icmp ugt i64 %111, 2305843009213693951
  br i1 %114, label %115, label %116

115:                                              ; preds = %113
  tail call void @abort() #11
  unreachable

116:                                              ; preds = %113, %103
  %117 = phi i64 [ %111, %113 ], [ 2305843009213693951, %103 ]
  %118 = shl i64 %117, 3
  %119 = tail call i8* @_Znwm(i64 %118) #12
  %120 = bitcast i8* %119 to %"class.v8::internal::compiler::ZoneStats::StatsScope"**
  br label %121

121:                                              ; preds = %116, %108
  %122 = phi i64 [ %117, %116 ], [ 0, %108 ]
  %123 = phi %"class.v8::internal::compiler::ZoneStats::StatsScope"** [ %120, %116 ], [ null, %108 ]
  %124 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats::StatsScope"*, %"class.v8::internal::compiler::ZoneStats::StatsScope"** %123, i64 %98
  %125 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats::StatsScope"*, %"class.v8::internal::compiler::ZoneStats::StatsScope"** %123, i64 %122
  %126 = ptrtoint %"class.v8::internal::compiler::ZoneStats::StatsScope"** %125 to i64
  %127 = bitcast %"class.v8::internal::compiler::ZoneStats::StatsScope"** %124 to i64*
  store i64 %80, i64* %127, align 8
  %128 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats::StatsScope"*, %"class.v8::internal::compiler::ZoneStats::StatsScope"** %124, i64 1
  %129 = ptrtoint %"class.v8::internal::compiler::ZoneStats::StatsScope"** %128 to i64
  %130 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %79, i64 0, i32 0, i32 0
  %131 = load %"class.v8::internal::compiler::ZoneStats::StatsScope"**, %"class.v8::internal::compiler::ZoneStats::StatsScope"*** %130, align 8
  %132 = load i64, i64* %94, align 8
  %133 = ptrtoint %"class.v8::internal::compiler::ZoneStats::StatsScope"** %131 to i64
  %134 = sub i64 %132, %133
  %135 = ashr exact i64 %134, 3
  %136 = sub nsw i64 0, %135
  %137 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats::StatsScope"*, %"class.v8::internal::compiler::ZoneStats::StatsScope"** %124, i64 %136
  %138 = ptrtoint %"class.v8::internal::compiler::ZoneStats::StatsScope"** %137 to i64
  %139 = icmp sgt i64 %134, 0
  br i1 %139, label %140, label %144

140:                                              ; preds = %121
  %141 = bitcast %"class.v8::internal::compiler::ZoneStats::StatsScope"** %137 to i8*
  %142 = bitcast %"class.v8::internal::compiler::ZoneStats::StatsScope"** %131 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %141, i8* align 8 %142, i64 %134, i1 false) #10
  %143 = load %"class.v8::internal::compiler::ZoneStats::StatsScope"**, %"class.v8::internal::compiler::ZoneStats::StatsScope"*** %130, align 8
  br label %144

144:                                              ; preds = %140, %121
  %145 = phi %"class.v8::internal::compiler::ZoneStats::StatsScope"** [ %131, %121 ], [ %143, %140 ]
  store i64 %138, i64* %95, align 8
  store i64 %129, i64* %94, align 8
  store i64 %126, i64* %104, align 8
  %146 = icmp eq %"class.v8::internal::compiler::ZoneStats::StatsScope"** %145, null
  br i1 %146, label %149, label %147

147:                                              ; preds = %144
  %148 = bitcast %"class.v8::internal::compiler::ZoneStats::StatsScope"** %145 to i8*
  tail call void @_ZdlPv(i8* %148) #12
  br label %149

149:                                              ; preds = %87, %144, %147
  %150 = load %"class.v8::internal::compiler::ZoneStats"*, %"class.v8::internal::compiler::ZoneStats"** %3, align 8
  %151 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %150, i64 0, i32 0, i32 0, i32 0
  %152 = load %"class.v8::internal::Zone"**, %"class.v8::internal::Zone"*** %151, align 8
  %153 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %150, i64 0, i32 0, i32 0, i32 1
  %154 = load %"class.v8::internal::Zone"**, %"class.v8::internal::Zone"*** %153, align 8
  %155 = icmp eq %"class.v8::internal::Zone"** %152, %154
  br i1 %155, label %161, label %156

156:                                              ; preds = %149
  %157 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node"**
  %158 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 0, i32 0
  %159 = bitcast %"class.std::__1::map"* %4 to i64*
  %160 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats::StatsScope", %"class.v8::internal::compiler::ZoneStats::StatsScope"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  br label %162

161:                                              ; preds = %237, %149
  ret void

162:                                              ; preds = %156, %237
  %163 = phi %"class.v8::internal::Zone"** [ %152, %156 ], [ %238, %237 ]
  %164 = bitcast %"class.v8::internal::Zone"** %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = inttoptr i64 %165 to %"class.v8::internal::Zone"*
  %167 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %166, i64 0, i32 5
  %168 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %167, align 8
  %169 = icmp eq %"class.v8::internal::Segment"* %168, null
  br i1 %169, label %176, label %170

170:                                              ; preds = %162
  %171 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %166, i64 0, i32 2
  %172 = load i64, i64* %171, align 8
  %173 = ptrtoint %"class.v8::internal::Segment"* %168 to i64
  %174 = sub i64 -24, %173
  %175 = add i64 %174, %172
  br label %176

176:                                              ; preds = %162, %170
  %177 = phi i64 [ %175, %170 ], [ 0, %162 ]
  %178 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %166, i64 0, i32 0
  %179 = load i64, i64* %178, align 8
  %180 = add i64 %179, %177
  %181 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %157, align 8
  %182 = icmp eq %"class.std::__1::__tree_node"* %181, null
  br i1 %182, label %209, label %183

183:                                              ; preds = %176, %205
  %184 = phi %"class.std::__1::__tree_node"* [ %208, %205 ], [ %181, %176 ]
  %185 = phi %"class.std::__1::__tree_node_base"** [ %207, %205 ], [ %5, %176 ]
  %186 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %184, i64 0, i32 1, i32 0, i32 0
  %187 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %186, align 8
  %188 = icmp ugt %"class.v8::internal::Zone"* %187, %166
  br i1 %188, label %189, label %195

189:                                              ; preds = %183
  %190 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %184, i64 0, i32 0, i32 0, i32 0
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %193, label %205

193:                                              ; preds = %189
  %194 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %184, i64 0, i32 0, i32 0
  br label %209

195:                                              ; preds = %183
  %196 = icmp ult %"class.v8::internal::Zone"* %187, %166
  br i1 %196, label %197, label %203

197:                                              ; preds = %195
  %198 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %184, i64 0, i32 0, i32 1
  %199 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %198, align 8
  %200 = icmp eq %"class.std::__1::__tree_node_base"* %199, null
  br i1 %200, label %201, label %205

201:                                              ; preds = %197
  %202 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %184, i64 0, i32 0, i32 0
  br label %209

203:                                              ; preds = %195
  %204 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %184, i64 0, i32 0, i32 0
  br label %209

205:                                              ; preds = %197, %189
  %206 = phi %"class.std::__1::__tree_node_base"* [ %191, %189 ], [ %199, %197 ]
  %207 = phi %"class.std::__1::__tree_node_base"** [ %190, %189 ], [ %198, %197 ]
  %208 = bitcast %"class.std::__1::__tree_node_base"* %206 to %"class.std::__1::__tree_node"*
  br label %183

209:                                              ; preds = %176, %203, %201, %193
  %210 = phi %"class.std::__1::__tree_end_node"* [ %194, %193 ], [ %202, %201 ], [ %204, %203 ], [ %6, %176 ]
  %211 = phi %"class.std::__1::__tree_node_base"** [ %190, %193 ], [ %198, %201 ], [ %185, %203 ], [ %158, %176 ]
  %212 = bitcast %"class.std::__1::__tree_node_base"** %211 to %"class.std::__1::__tree_node"**
  %213 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %212, align 8
  %214 = icmp eq %"class.std::__1::__tree_node"* %213, null
  br i1 %214, label %215, label %237

215:                                              ; preds = %209
  %216 = tail call i8* @_Znwm(i64 48) #12, !noalias !2
  %217 = getelementptr inbounds i8, i8* %216, i64 32
  %218 = bitcast i8* %217 to i64*
  store i64 %165, i64* %218, align 8, !noalias !2
  %219 = getelementptr inbounds i8, i8* %216, i64 40
  %220 = bitcast i8* %219 to i64*
  store i64 %180, i64* %220, align 8, !noalias !2
  %221 = bitcast i8* %216 to %"class.std::__1::__tree_node_base"*
  %222 = getelementptr inbounds i8, i8* %216, i64 16
  %223 = bitcast i8* %222 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %216, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %210, %"class.std::__1::__tree_end_node"** %223, align 8
  %224 = bitcast %"class.std::__1::__tree_node_base"** %211 to i8**
  store i8* %216, i8** %224, align 8
  %225 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %7, align 8
  %226 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %225, i64 0, i32 0
  %227 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %226, align 8
  %228 = icmp eq %"class.std::__1::__tree_node_base"* %227, null
  br i1 %228, label %232, label %229

229:                                              ; preds = %215
  %230 = ptrtoint %"class.std::__1::__tree_node_base"* %227 to i64
  store i64 %230, i64* %159, align 8
  %231 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %211, align 8
  br label %232

232:                                              ; preds = %229, %215
  %233 = phi %"class.std::__1::__tree_node_base"* [ %221, %215 ], [ %231, %229 ]
  %234 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %5, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %234, %"class.std::__1::__tree_node_base"* %233) #10
  %235 = load i64, i64* %160, align 8
  %236 = add i64 %235, 1
  store i64 %236, i64* %160, align 8
  br label %237

237:                                              ; preds = %209, %232
  %238 = getelementptr inbounds %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %163, i64 1
  %239 = icmp eq %"class.v8::internal::Zone"** %238, %154
  br i1 %239, label %161, label %162

240:                                              ; preds = %42
  %241 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %49, i64 0, i32 2
  %242 = load i64, i64* %241, align 8
  %243 = ptrtoint %"class.v8::internal::Segment"* %51 to i64
  %244 = sub i64 -24, %243
  %245 = add i64 %244, %242
  br label %246

246:                                              ; preds = %240, %42
  %247 = phi i64 [ %245, %240 ], [ 0, %42 ]
  %248 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %49, i64 0, i32 0
  %249 = load i64, i64* %248, align 8
  %250 = add i64 %247, %47
  %251 = add i64 %250, %249
  %252 = getelementptr inbounds %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %30, i64 2
  %253 = add i64 %31, -2
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %53, label %28
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2v88internal8compiler9ZoneStats22GetTotalAllocatedBytesEv(%"class.v8::internal::compiler::ZoneStats"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::Zone"**, %"class.v8::internal::Zone"*** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load %"class.v8::internal::Zone"**, %"class.v8::internal::Zone"*** %6, align 8
  %8 = icmp eq %"class.v8::internal::Zone"** %5, %7
  br i1 %8, label %67, label %9

9:                                                ; preds = %1
  %10 = ptrtoint %"class.v8::internal::Zone"** %5 to i64
  %11 = getelementptr %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %7, i64 -1
  %12 = ptrtoint %"class.v8::internal::Zone"** %11 to i64
  %13 = sub i64 %12, %10
  %14 = lshr i64 %13, 3
  %15 = add nuw nsw i64 %14, 1
  %16 = and i64 %15, 1
  %17 = icmp eq i64 %14, 0
  br i1 %17, label %45, label %18

18:                                               ; preds = %9
  %19 = sub nuw nsw i64 %15, %16
  br label %20

20:                                               ; preds = %76, %18
  %21 = phi i64 [ 0, %18 ], [ %81, %76 ]
  %22 = phi %"class.v8::internal::Zone"** [ %5, %18 ], [ %82, %76 ]
  %23 = phi i64 [ %19, %18 ], [ %83, %76 ]
  %24 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %22, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %24, i64 0, i32 5
  %26 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %25, align 8
  %27 = icmp eq %"class.v8::internal::Segment"* %26, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %24, i64 0, i32 2
  %30 = load i64, i64* %29, align 8
  %31 = ptrtoint %"class.v8::internal::Segment"* %26 to i64
  %32 = sub i64 -24, %31
  %33 = add i64 %32, %30
  br label %34

34:                                               ; preds = %28, %20
  %35 = phi i64 [ %33, %28 ], [ 0, %20 ]
  %36 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %24, i64 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %35, %21
  %39 = add i64 %38, %37
  %40 = getelementptr inbounds %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %22, i64 1
  %41 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %41, i64 0, i32 5
  %43 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %42, align 8
  %44 = icmp eq %"class.v8::internal::Segment"* %43, null
  br i1 %44, label %76, label %70

45:                                               ; preds = %76, %9
  %46 = phi i64 [ undef, %9 ], [ %81, %76 ]
  %47 = phi i64 [ 0, %9 ], [ %81, %76 ]
  %48 = phi %"class.v8::internal::Zone"** [ %5, %9 ], [ %82, %76 ]
  %49 = icmp eq i64 %16, 0
  br i1 %49, label %67, label %50

50:                                               ; preds = %45
  %51 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %48, align 8
  %52 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %51, i64 0, i32 5
  %53 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %52, align 8
  %54 = icmp eq %"class.v8::internal::Segment"* %53, null
  br i1 %54, label %61, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %51, i64 0, i32 2
  %57 = load i64, i64* %56, align 8
  %58 = ptrtoint %"class.v8::internal::Segment"* %53 to i64
  %59 = sub i64 -24, %58
  %60 = add i64 %59, %57
  br label %61

61:                                               ; preds = %50, %55
  %62 = phi i64 [ %60, %55 ], [ 0, %50 ]
  %63 = add i64 %62, %47
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %51, i64 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = add i64 %63, %65
  br label %67

67:                                               ; preds = %61, %45, %1
  %68 = phi i64 [ 0, %1 ], [ %46, %45 ], [ %66, %61 ]
  %69 = add i64 %68, %3
  ret i64 %69

70:                                               ; preds = %34
  %71 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %41, i64 0, i32 2
  %72 = load i64, i64* %71, align 8
  %73 = ptrtoint %"class.v8::internal::Segment"* %43 to i64
  %74 = sub i64 -24, %73
  %75 = add i64 %74, %72
  br label %76

76:                                               ; preds = %70, %34
  %77 = phi i64 [ %75, %70 ], [ 0, %34 ]
  %78 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %41, i64 0, i32 0
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %77, %39
  %81 = add i64 %80, %79
  %82 = getelementptr inbounds %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %22, i64 2
  %83 = add i64 %23, -2
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %45, label %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler9ZoneStats10StatsScopeD2Ev(%"class.v8::internal::compiler::ZoneStats::StatsScope"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats::StatsScope", %"class.v8::internal::compiler::ZoneStats::StatsScope"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::compiler::ZoneStats"*, %"class.v8::internal::compiler::ZoneStats"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %3, i64 0, i32 1, i32 0, i32 1
  %5 = load %"class.v8::internal::compiler::ZoneStats::StatsScope"**, %"class.v8::internal::compiler::ZoneStats::StatsScope"*** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats::StatsScope"*, %"class.v8::internal::compiler::ZoneStats::StatsScope"** %5, i64 -1
  store %"class.v8::internal::compiler::ZoneStats::StatsScope"** %6, %"class.v8::internal::compiler::ZoneStats::StatsScope"*** %4, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats::StatsScope", %"class.v8::internal::compiler::ZoneStats::StatsScope"* %0, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats::StatsScope", %"class.v8::internal::compiler::ZoneStats::StatsScope"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPN2v88internal4ZoneEmEENS_19__map_value_compareIS5_S6_NS_4lessIS5_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %7, %"class.std::__1::__tree_node"* %10) #10
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZN2v88internal8compiler9ZoneStats10StatsScope20GetMaxAllocatedBytesEv(%"class.v8::internal::compiler::ZoneStats::StatsScope"* readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats::StatsScope", %"class.v8::internal::compiler::ZoneStats::StatsScope"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats::StatsScope", %"class.v8::internal::compiler::ZoneStats::StatsScope"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::ZoneStats"*, %"class.v8::internal::compiler::ZoneStats"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.v8::internal::Zone"**, %"class.v8::internal::Zone"*** %5, align 8
  %7 = ptrtoint %"class.v8::internal::Zone"** %6 to i64
  %8 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %4, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.v8::internal::Zone"**, %"class.v8::internal::Zone"*** %8, align 8
  %10 = icmp eq %"class.v8::internal::Zone"** %6, %9
  br i1 %10, label %122, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats::StatsScope", %"class.v8::internal::compiler::ZoneStats::StatsScope"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node"**
  %14 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %13, align 8
  %15 = icmp eq %"class.std::__1::__tree_node"* %14, null
  br i1 %15, label %16, label %51

16:                                               ; preds = %11
  %17 = getelementptr %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %9, i64 -1
  %18 = ptrtoint %"class.v8::internal::Zone"** %17 to i64
  %19 = sub i64 %18, %7
  %20 = lshr i64 %19, 3
  %21 = add nuw nsw i64 %20, 1
  %22 = and i64 %21, 1
  %23 = icmp eq i64 %20, 0
  br i1 %23, label %100, label %24

24:                                               ; preds = %16
  %25 = sub nuw nsw i64 %21, %22
  br label %26

26:                                               ; preds = %133, %24
  %27 = phi i64 [ 0, %24 ], [ %138, %133 ]
  %28 = phi %"class.v8::internal::Zone"** [ %6, %24 ], [ %139, %133 ]
  %29 = phi i64 [ %25, %24 ], [ %140, %133 ]
  %30 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %28, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %30, i64 0, i32 5
  %32 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %31, align 8
  %33 = icmp eq %"class.v8::internal::Segment"* %32, null
  br i1 %33, label %40, label %34

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %30, i64 0, i32 2
  %36 = load i64, i64* %35, align 8
  %37 = ptrtoint %"class.v8::internal::Segment"* %32 to i64
  %38 = sub i64 -24, %37
  %39 = add i64 %38, %36
  br label %40

40:                                               ; preds = %34, %26
  %41 = phi i64 [ %39, %34 ], [ 0, %26 ]
  %42 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %30, i64 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %41, %27
  %45 = add i64 %44, %43
  %46 = getelementptr inbounds %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %28, i64 1
  %47 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %47, i64 0, i32 5
  %49 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %48, align 8
  %50 = icmp eq %"class.v8::internal::Segment"* %49, null
  br i1 %50, label %133, label %127

51:                                               ; preds = %11, %96
  %52 = phi i64 [ %97, %96 ], [ 0, %11 ]
  %53 = phi %"class.v8::internal::Zone"** [ %98, %96 ], [ %6, %11 ]
  %54 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %54, i64 0, i32 5
  %56 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %55, align 8
  %57 = icmp eq %"class.v8::internal::Segment"* %56, null
  br i1 %57, label %64, label %58

58:                                               ; preds = %51
  %59 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %54, i64 0, i32 2
  %60 = load i64, i64* %59, align 8
  %61 = ptrtoint %"class.v8::internal::Segment"* %56 to i64
  %62 = sub i64 -24, %61
  %63 = add i64 %62, %60
  br label %64

64:                                               ; preds = %58, %51
  %65 = phi i64 [ %63, %58 ], [ 0, %51 ]
  %66 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %54, i64 0, i32 0
  %67 = load i64, i64* %66, align 8
  br label %68

68:                                               ; preds = %68, %64
  %69 = phi %"class.std::__1::__tree_end_node"* [ %79, %68 ], [ %12, %64 ]
  %70 = phi %"class.std::__1::__tree_node"* [ %80, %68 ], [ %14, %64 ]
  %71 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %70, i64 0, i32 1, i32 0, i32 0
  %72 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %71, align 8
  %73 = icmp ult %"class.v8::internal::Zone"* %72, %54
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %70, i64 0, i32 0, i32 1
  %75 = bitcast %"class.std::__1::__tree_node_base"** %74 to %"class.std::__1::__tree_node"**
  %76 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %70, i64 0, i32 0, i32 0
  %77 = bitcast %"class.std::__1::__tree_node"* %70 to %"class.std::__1::__tree_node"**
  %78 = select i1 %73, %"class.std::__1::__tree_node"** %75, %"class.std::__1::__tree_node"** %77
  %79 = select i1 %73, %"class.std::__1::__tree_end_node"* %69, %"class.std::__1::__tree_end_node"* %76
  %80 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %78, align 8
  %81 = icmp eq %"class.std::__1::__tree_node"* %80, null
  br i1 %81, label %82, label %68

82:                                               ; preds = %68
  %83 = add i64 %65, %52
  %84 = add i64 %83, %67
  %85 = icmp eq %"class.std::__1::__tree_end_node"* %79, %12
  br i1 %85, label %96, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %79, i64 4
  %88 = bitcast %"class.std::__1::__tree_end_node"* %87 to %"class.v8::internal::Zone"**
  %89 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %88, align 8
  %90 = icmp ult %"class.v8::internal::Zone"* %54, %89
  br i1 %90, label %96, label %91

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %79, i64 5
  %93 = bitcast %"class.std::__1::__tree_end_node"* %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %84, %94
  br label %96

96:                                               ; preds = %91, %86, %82
  %97 = phi i64 [ %95, %91 ], [ %84, %82 ], [ %84, %86 ]
  %98 = getelementptr inbounds %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %53, i64 1
  %99 = icmp eq %"class.v8::internal::Zone"** %98, %9
  br i1 %99, label %122, label %51

100:                                              ; preds = %133, %16
  %101 = phi i64 [ undef, %16 ], [ %138, %133 ]
  %102 = phi i64 [ 0, %16 ], [ %138, %133 ]
  %103 = phi %"class.v8::internal::Zone"** [ %6, %16 ], [ %139, %133 ]
  %104 = icmp eq i64 %22, 0
  br i1 %104, label %122, label %105

105:                                              ; preds = %100
  %106 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %103, align 8
  %107 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %106, i64 0, i32 5
  %108 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %107, align 8
  %109 = icmp eq %"class.v8::internal::Segment"* %108, null
  br i1 %109, label %116, label %110

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %106, i64 0, i32 2
  %112 = load i64, i64* %111, align 8
  %113 = ptrtoint %"class.v8::internal::Segment"* %108 to i64
  %114 = sub i64 -24, %113
  %115 = add i64 %114, %112
  br label %116

116:                                              ; preds = %105, %110
  %117 = phi i64 [ %115, %110 ], [ 0, %105 ]
  %118 = add i64 %117, %102
  %119 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %106, i64 0, i32 0
  %120 = load i64, i64* %119, align 8
  %121 = add i64 %118, %120
  br label %122

122:                                              ; preds = %96, %116, %100, %1
  %123 = phi i64 [ 0, %1 ], [ %101, %100 ], [ %121, %116 ], [ %97, %96 ]
  %124 = load i64, i64* %2, align 8
  %125 = icmp ult i64 %124, %123
  %126 = select i1 %125, i64 %123, i64 %124
  ret i64 %126

127:                                              ; preds = %40
  %128 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %47, i64 0, i32 2
  %129 = load i64, i64* %128, align 8
  %130 = ptrtoint %"class.v8::internal::Segment"* %49 to i64
  %131 = sub i64 -24, %130
  %132 = add i64 %131, %129
  br label %133

133:                                              ; preds = %127, %40
  %134 = phi i64 [ %132, %127 ], [ 0, %40 ]
  %135 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %47, i64 0, i32 0
  %136 = load i64, i64* %135, align 8
  %137 = add i64 %134, %45
  %138 = add i64 %137, %136
  %139 = getelementptr inbounds %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %28, i64 2
  %140 = add i64 %29, -2
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %100, label %26
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZN2v88internal8compiler9ZoneStats10StatsScope24GetCurrentAllocatedBytesEv(%"class.v8::internal::compiler::ZoneStats::StatsScope"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats::StatsScope", %"class.v8::internal::compiler::ZoneStats::StatsScope"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::compiler::ZoneStats"*, %"class.v8::internal::compiler::ZoneStats"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::Zone"**, %"class.v8::internal::Zone"*** %4, align 8
  %6 = ptrtoint %"class.v8::internal::Zone"** %5 to i64
  %7 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %3, i64 0, i32 0, i32 0, i32 1
  %8 = load %"class.v8::internal::Zone"**, %"class.v8::internal::Zone"*** %7, align 8
  %9 = icmp eq %"class.v8::internal::Zone"** %5, %8
  br i1 %9, label %72, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats::StatsScope", %"class.v8::internal::compiler::ZoneStats::StatsScope"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node"**
  %13 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node"* %13, null
  br i1 %14, label %15, label %74

15:                                               ; preds = %10
  %16 = getelementptr %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %8, i64 -1
  %17 = ptrtoint %"class.v8::internal::Zone"** %16 to i64
  %18 = sub i64 %17, %6
  %19 = lshr i64 %18, 3
  %20 = add nuw nsw i64 %19, 1
  %21 = and i64 %20, 1
  %22 = icmp eq i64 %19, 0
  br i1 %22, label %50, label %23

23:                                               ; preds = %15
  %24 = sub nuw nsw i64 %20, %21
  br label %25

25:                                               ; preds = %129, %23
  %26 = phi i64 [ 0, %23 ], [ %134, %129 ]
  %27 = phi %"class.v8::internal::Zone"** [ %5, %23 ], [ %135, %129 ]
  %28 = phi i64 [ %24, %23 ], [ %136, %129 ]
  %29 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %27, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %29, i64 0, i32 5
  %31 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %30, align 8
  %32 = icmp eq %"class.v8::internal::Segment"* %31, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %29, i64 0, i32 2
  %35 = load i64, i64* %34, align 8
  %36 = ptrtoint %"class.v8::internal::Segment"* %31 to i64
  %37 = sub i64 -24, %36
  %38 = add i64 %37, %35
  br label %39

39:                                               ; preds = %33, %25
  %40 = phi i64 [ %38, %33 ], [ 0, %25 ]
  %41 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %29, i64 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %40, %26
  %44 = add i64 %43, %42
  %45 = getelementptr inbounds %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %27, i64 1
  %46 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %46, i64 0, i32 5
  %48 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %47, align 8
  %49 = icmp eq %"class.v8::internal::Segment"* %48, null
  br i1 %49, label %129, label %123

50:                                               ; preds = %129, %15
  %51 = phi i64 [ undef, %15 ], [ %134, %129 ]
  %52 = phi i64 [ 0, %15 ], [ %134, %129 ]
  %53 = phi %"class.v8::internal::Zone"** [ %5, %15 ], [ %135, %129 ]
  %54 = icmp eq i64 %21, 0
  br i1 %54, label %72, label %55

55:                                               ; preds = %50
  %56 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %53, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %56, i64 0, i32 5
  %58 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %57, align 8
  %59 = icmp eq %"class.v8::internal::Segment"* %58, null
  br i1 %59, label %66, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %56, i64 0, i32 2
  %62 = load i64, i64* %61, align 8
  %63 = ptrtoint %"class.v8::internal::Segment"* %58 to i64
  %64 = sub i64 -24, %63
  %65 = add i64 %64, %62
  br label %66

66:                                               ; preds = %55, %60
  %67 = phi i64 [ %65, %60 ], [ 0, %55 ]
  %68 = add i64 %67, %52
  %69 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %56, i64 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %68, %70
  br label %72

72:                                               ; preds = %119, %66, %50, %1
  %73 = phi i64 [ 0, %1 ], [ %51, %50 ], [ %71, %66 ], [ %120, %119 ]
  ret i64 %73

74:                                               ; preds = %10, %119
  %75 = phi i64 [ %120, %119 ], [ 0, %10 ]
  %76 = phi %"class.v8::internal::Zone"** [ %121, %119 ], [ %5, %10 ]
  %77 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %77, i64 0, i32 5
  %79 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %78, align 8
  %80 = icmp eq %"class.v8::internal::Segment"* %79, null
  br i1 %80, label %87, label %81

81:                                               ; preds = %74
  %82 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %77, i64 0, i32 2
  %83 = load i64, i64* %82, align 8
  %84 = ptrtoint %"class.v8::internal::Segment"* %79 to i64
  %85 = sub i64 -24, %84
  %86 = add i64 %85, %83
  br label %87

87:                                               ; preds = %74, %81
  %88 = phi i64 [ %86, %81 ], [ 0, %74 ]
  %89 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %77, i64 0, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = add i64 %88, %75
  br label %92

92:                                               ; preds = %87, %92
  %93 = phi %"class.std::__1::__tree_end_node"* [ %103, %92 ], [ %11, %87 ]
  %94 = phi %"class.std::__1::__tree_node"* [ %104, %92 ], [ %13, %87 ]
  %95 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %94, i64 0, i32 1, i32 0, i32 0
  %96 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %95, align 8
  %97 = icmp ult %"class.v8::internal::Zone"* %96, %77
  %98 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %94, i64 0, i32 0, i32 1
  %99 = bitcast %"class.std::__1::__tree_node_base"** %98 to %"class.std::__1::__tree_node"**
  %100 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %94, i64 0, i32 0, i32 0
  %101 = bitcast %"class.std::__1::__tree_node"* %94 to %"class.std::__1::__tree_node"**
  %102 = select i1 %97, %"class.std::__1::__tree_node"** %99, %"class.std::__1::__tree_node"** %101
  %103 = select i1 %97, %"class.std::__1::__tree_end_node"* %93, %"class.std::__1::__tree_end_node"* %100
  %104 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %102, align 8
  %105 = icmp eq %"class.std::__1::__tree_node"* %104, null
  br i1 %105, label %106, label %92

106:                                              ; preds = %92
  %107 = add i64 %91, %90
  %108 = icmp eq %"class.std::__1::__tree_end_node"* %103, %11
  br i1 %108, label %119, label %109

109:                                              ; preds = %106
  %110 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %103, i64 4
  %111 = bitcast %"class.std::__1::__tree_end_node"* %110 to %"class.v8::internal::Zone"**
  %112 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %111, align 8
  %113 = icmp ult %"class.v8::internal::Zone"* %77, %112
  br i1 %113, label %119, label %114

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %103, i64 5
  %116 = bitcast %"class.std::__1::__tree_end_node"* %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = sub i64 %107, %117
  br label %119

119:                                              ; preds = %109, %106, %114
  %120 = phi i64 [ %118, %114 ], [ %107, %106 ], [ %107, %109 ]
  %121 = getelementptr inbounds %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %76, i64 1
  %122 = icmp eq %"class.v8::internal::Zone"** %121, %8
  br i1 %122, label %72, label %74

123:                                              ; preds = %39
  %124 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %46, i64 0, i32 2
  %125 = load i64, i64* %124, align 8
  %126 = ptrtoint %"class.v8::internal::Segment"* %48 to i64
  %127 = sub i64 -24, %126
  %128 = add i64 %127, %125
  br label %129

129:                                              ; preds = %123, %39
  %130 = phi i64 [ %128, %123 ], [ 0, %39 ]
  %131 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %46, i64 0, i32 0
  %132 = load i64, i64* %131, align 8
  %133 = add i64 %130, %44
  %134 = add i64 %133, %132
  %135 = getelementptr inbounds %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %27, i64 2
  %136 = add i64 %28, -2
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %50, label %25
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN2v88internal8compiler9ZoneStats10StatsScope22GetTotalAllocatedBytesEv(%"class.v8::internal::compiler::ZoneStats::StatsScope"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats::StatsScope", %"class.v8::internal::compiler::ZoneStats::StatsScope"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::compiler::ZoneStats"*, %"class.v8::internal::compiler::ZoneStats"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %3, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.v8::internal::Zone"**, %"class.v8::internal::Zone"*** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %3, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.v8::internal::Zone"**, %"class.v8::internal::Zone"*** %8, align 8
  %10 = icmp eq %"class.v8::internal::Zone"** %7, %9
  br i1 %10, label %69, label %11

11:                                               ; preds = %1
  %12 = ptrtoint %"class.v8::internal::Zone"** %7 to i64
  %13 = getelementptr %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %9, i64 -1
  %14 = ptrtoint %"class.v8::internal::Zone"** %13 to i64
  %15 = sub i64 %14, %12
  %16 = lshr i64 %15, 3
  %17 = add nuw nsw i64 %16, 1
  %18 = and i64 %17, 1
  %19 = icmp eq i64 %16, 0
  br i1 %19, label %47, label %20

20:                                               ; preds = %11
  %21 = sub nuw nsw i64 %17, %18
  br label %22

22:                                               ; preds = %81, %20
  %23 = phi i64 [ 0, %20 ], [ %86, %81 ]
  %24 = phi %"class.v8::internal::Zone"** [ %7, %20 ], [ %87, %81 ]
  %25 = phi i64 [ %21, %20 ], [ %88, %81 ]
  %26 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %24, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %26, i64 0, i32 5
  %28 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %27, align 8
  %29 = icmp eq %"class.v8::internal::Segment"* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %26, i64 0, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = ptrtoint %"class.v8::internal::Segment"* %28 to i64
  %34 = sub i64 -24, %33
  %35 = add i64 %34, %32
  br label %36

36:                                               ; preds = %30, %22
  %37 = phi i64 [ %35, %30 ], [ 0, %22 ]
  %38 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %26, i64 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %37, %23
  %41 = add i64 %40, %39
  %42 = getelementptr inbounds %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %24, i64 1
  %43 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %43, i64 0, i32 5
  %45 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %44, align 8
  %46 = icmp eq %"class.v8::internal::Segment"* %45, null
  br i1 %46, label %81, label %75

47:                                               ; preds = %81, %11
  %48 = phi i64 [ undef, %11 ], [ %86, %81 ]
  %49 = phi i64 [ 0, %11 ], [ %86, %81 ]
  %50 = phi %"class.v8::internal::Zone"** [ %7, %11 ], [ %87, %81 ]
  %51 = icmp eq i64 %18, 0
  br i1 %51, label %69, label %52

52:                                               ; preds = %47
  %53 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %50, align 8
  %54 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %53, i64 0, i32 5
  %55 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %54, align 8
  %56 = icmp eq %"class.v8::internal::Segment"* %55, null
  br i1 %56, label %63, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %53, i64 0, i32 2
  %59 = load i64, i64* %58, align 8
  %60 = ptrtoint %"class.v8::internal::Segment"* %55 to i64
  %61 = sub i64 -24, %60
  %62 = add i64 %61, %59
  br label %63

63:                                               ; preds = %52, %57
  %64 = phi i64 [ %62, %57 ], [ 0, %52 ]
  %65 = add i64 %64, %49
  %66 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %53, i64 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %65, %67
  br label %69

69:                                               ; preds = %63, %47, %1
  %70 = phi i64 [ 0, %1 ], [ %48, %47 ], [ %68, %63 ]
  %71 = add i64 %70, %5
  %72 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats::StatsScope", %"class.v8::internal::compiler::ZoneStats::StatsScope"* %0, i64 0, i32 2
  %73 = load i64, i64* %72, align 8
  %74 = sub i64 %71, %73
  ret i64 %74

75:                                               ; preds = %36
  %76 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %43, i64 0, i32 2
  %77 = load i64, i64* %76, align 8
  %78 = ptrtoint %"class.v8::internal::Segment"* %45 to i64
  %79 = sub i64 -24, %78
  %80 = add i64 %79, %77
  br label %81

81:                                               ; preds = %75, %36
  %82 = phi i64 [ %80, %75 ], [ 0, %36 ]
  %83 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %43, i64 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = add i64 %82, %41
  %86 = add i64 %85, %84
  %87 = getelementptr inbounds %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %24, i64 2
  %88 = add i64 %25, -2
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %47, label %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler9ZoneStats10StatsScope12ZoneReturnedEPNS0_4ZoneE(%"class.v8::internal::compiler::ZoneStats::StatsScope"*, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats::StatsScope", %"class.v8::internal::compiler::ZoneStats::StatsScope"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::compiler::ZoneStats"*, %"class.v8::internal::compiler::ZoneStats"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.v8::internal::Zone"**, %"class.v8::internal::Zone"*** %5, align 8
  %7 = ptrtoint %"class.v8::internal::Zone"** %6 to i64
  %8 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %4, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.v8::internal::Zone"**, %"class.v8::internal::Zone"*** %8, align 8
  %10 = icmp eq %"class.v8::internal::Zone"** %6, %9
  %11 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats::StatsScope", %"class.v8::internal::compiler::ZoneStats::StatsScope"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node"**
  %13 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %12, align 8
  br i1 %10, label %14, label %16

14:                                               ; preds = %2
  %15 = bitcast %"class.std::__1::__tree_node"* %13 to %"class.std::__1::__tree_node_base"*
  br label %125

16:                                               ; preds = %2
  %17 = icmp eq %"class.std::__1::__tree_node"* %13, null
  %18 = bitcast %"class.std::__1::__tree_node"* %13 to %"class.std::__1::__tree_node_base"*
  br i1 %17, label %19, label %54

19:                                               ; preds = %16
  %20 = getelementptr %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %9, i64 -1
  %21 = ptrtoint %"class.v8::internal::Zone"** %20 to i64
  %22 = sub i64 %21, %7
  %23 = lshr i64 %22, 3
  %24 = add nuw nsw i64 %23, 1
  %25 = and i64 %24, 1
  %26 = icmp eq i64 %23, 0
  br i1 %26, label %103, label %27

27:                                               ; preds = %19
  %28 = sub nuw nsw i64 %24, %25
  br label %29

29:                                               ; preds = %206, %27
  %30 = phi i64 [ 0, %27 ], [ %211, %206 ]
  %31 = phi %"class.v8::internal::Zone"** [ %6, %27 ], [ %212, %206 ]
  %32 = phi i64 [ %28, %27 ], [ %213, %206 ]
  %33 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %31, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %33, i64 0, i32 5
  %35 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %34, align 8
  %36 = icmp eq %"class.v8::internal::Segment"* %35, null
  br i1 %36, label %43, label %37

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %33, i64 0, i32 2
  %39 = load i64, i64* %38, align 8
  %40 = ptrtoint %"class.v8::internal::Segment"* %35 to i64
  %41 = sub i64 -24, %40
  %42 = add i64 %41, %39
  br label %43

43:                                               ; preds = %37, %29
  %44 = phi i64 [ %42, %37 ], [ 0, %29 ]
  %45 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %33, i64 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %44, %30
  %48 = add i64 %47, %46
  %49 = getelementptr inbounds %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %31, i64 1
  %50 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %50, i64 0, i32 5
  %52 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %51, align 8
  %53 = icmp eq %"class.v8::internal::Segment"* %52, null
  br i1 %53, label %206, label %200

54:                                               ; preds = %16, %99
  %55 = phi i64 [ %100, %99 ], [ 0, %16 ]
  %56 = phi %"class.v8::internal::Zone"** [ %101, %99 ], [ %6, %16 ]
  %57 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %56, align 8
  %58 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %57, i64 0, i32 5
  %59 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %58, align 8
  %60 = icmp eq %"class.v8::internal::Segment"* %59, null
  br i1 %60, label %67, label %61

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %57, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = ptrtoint %"class.v8::internal::Segment"* %59 to i64
  %65 = sub i64 -24, %64
  %66 = add i64 %65, %63
  br label %67

67:                                               ; preds = %61, %54
  %68 = phi i64 [ %66, %61 ], [ 0, %54 ]
  %69 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %57, i64 0, i32 0
  %70 = load i64, i64* %69, align 8
  br label %71

71:                                               ; preds = %71, %67
  %72 = phi %"class.std::__1::__tree_end_node"* [ %82, %71 ], [ %11, %67 ]
  %73 = phi %"class.std::__1::__tree_node"* [ %83, %71 ], [ %13, %67 ]
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %73, i64 0, i32 1, i32 0, i32 0
  %75 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %74, align 8
  %76 = icmp ult %"class.v8::internal::Zone"* %75, %57
  %77 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %73, i64 0, i32 0, i32 1
  %78 = bitcast %"class.std::__1::__tree_node_base"** %77 to %"class.std::__1::__tree_node"**
  %79 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %73, i64 0, i32 0, i32 0
  %80 = bitcast %"class.std::__1::__tree_node"* %73 to %"class.std::__1::__tree_node"**
  %81 = select i1 %76, %"class.std::__1::__tree_node"** %78, %"class.std::__1::__tree_node"** %80
  %82 = select i1 %76, %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"* %79
  %83 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %81, align 8
  %84 = icmp eq %"class.std::__1::__tree_node"* %83, null
  br i1 %84, label %85, label %71

85:                                               ; preds = %71
  %86 = add i64 %68, %55
  %87 = add i64 %86, %70
  %88 = icmp eq %"class.std::__1::__tree_end_node"* %82, %11
  br i1 %88, label %99, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %82, i64 4
  %91 = bitcast %"class.std::__1::__tree_end_node"* %90 to %"class.v8::internal::Zone"**
  %92 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %91, align 8
  %93 = icmp ult %"class.v8::internal::Zone"* %57, %92
  br i1 %93, label %99, label %94

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %82, i64 5
  %96 = bitcast %"class.std::__1::__tree_end_node"* %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = sub i64 %87, %97
  br label %99

99:                                               ; preds = %94, %89, %85
  %100 = phi i64 [ %98, %94 ], [ %87, %85 ], [ %87, %89 ]
  %101 = getelementptr inbounds %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %56, i64 1
  %102 = icmp eq %"class.v8::internal::Zone"** %101, %9
  br i1 %102, label %125, label %54

103:                                              ; preds = %206, %19
  %104 = phi i64 [ undef, %19 ], [ %211, %206 ]
  %105 = phi i64 [ 0, %19 ], [ %211, %206 ]
  %106 = phi %"class.v8::internal::Zone"** [ %6, %19 ], [ %212, %206 ]
  %107 = icmp eq i64 %25, 0
  br i1 %107, label %125, label %108

108:                                              ; preds = %103
  %109 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %106, align 8
  %110 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %109, i64 0, i32 5
  %111 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %110, align 8
  %112 = icmp eq %"class.v8::internal::Segment"* %111, null
  br i1 %112, label %119, label %113

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %109, i64 0, i32 2
  %115 = load i64, i64* %114, align 8
  %116 = ptrtoint %"class.v8::internal::Segment"* %111 to i64
  %117 = sub i64 -24, %116
  %118 = add i64 %117, %115
  br label %119

119:                                              ; preds = %108, %113
  %120 = phi i64 [ %118, %113 ], [ 0, %108 ]
  %121 = add i64 %120, %105
  %122 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %109, i64 0, i32 0
  %123 = load i64, i64* %122, align 8
  %124 = add i64 %121, %123
  br label %125

125:                                              ; preds = %99, %119, %103, %14
  %126 = phi %"class.std::__1::__tree_node_base"* [ %15, %14 ], [ %18, %103 ], [ %18, %119 ], [ %18, %99 ]
  %127 = phi %"class.std::__1::__tree_node"* [ %13, %14 ], [ null, %103 ], [ null, %119 ], [ %13, %99 ]
  %128 = phi i64 [ 0, %14 ], [ %104, %103 ], [ %124, %119 ], [ %100, %99 ]
  %129 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats::StatsScope", %"class.v8::internal::compiler::ZoneStats::StatsScope"* %0, i64 0, i32 3
  %130 = load i64, i64* %129, align 8
  %131 = icmp ult i64 %130, %128
  %132 = select i1 %131, i64 %128, i64 %130
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats::StatsScope", %"class.v8::internal::compiler::ZoneStats::StatsScope"* %0, i64 0, i32 1
  %134 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats::StatsScope", %"class.v8::internal::compiler::ZoneStats::StatsScope"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %135 = icmp eq %"class.std::__1::__tree_node"* %127, null
  br i1 %135, label %199, label %136

136:                                              ; preds = %125, %136
  %137 = phi %"class.std::__1::__tree_end_node"* [ %147, %136 ], [ %134, %125 ]
  %138 = phi %"class.std::__1::__tree_node"* [ %148, %136 ], [ %127, %125 ]
  %139 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %138, i64 0, i32 1, i32 0, i32 0
  %140 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %139, align 8
  %141 = icmp ult %"class.v8::internal::Zone"* %140, %1
  %142 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %138, i64 0, i32 0, i32 1
  %143 = bitcast %"class.std::__1::__tree_node_base"** %142 to %"class.std::__1::__tree_node"**
  %144 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %138, i64 0, i32 0, i32 0
  %145 = bitcast %"class.std::__1::__tree_node"* %138 to %"class.std::__1::__tree_node"**
  %146 = select i1 %141, %"class.std::__1::__tree_node"** %143, %"class.std::__1::__tree_node"** %145
  %147 = select i1 %141, %"class.std::__1::__tree_end_node"* %137, %"class.std::__1::__tree_end_node"* %144
  %148 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %146, align 8
  %149 = icmp eq %"class.std::__1::__tree_node"* %148, null
  br i1 %149, label %150, label %136

150:                                              ; preds = %136
  %151 = icmp eq %"class.std::__1::__tree_end_node"* %147, %134
  br i1 %151, label %199, label %152

152:                                              ; preds = %150
  %153 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %147, i64 4
  %154 = bitcast %"class.std::__1::__tree_end_node"* %153 to %"class.v8::internal::Zone"**
  %155 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %154, align 8
  %156 = icmp ugt %"class.v8::internal::Zone"* %155, %1
  br i1 %156, label %199, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %147, i64 1, i32 0
  %159 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %158, align 8
  %160 = icmp eq %"class.std::__1::__tree_node_base"* %159, null
  br i1 %160, label %161, label %169

161:                                              ; preds = %157
  %162 = bitcast %"class.std::__1::__tree_end_node"* %147 to %"class.std::__1::__tree_node_base"*
  %163 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %147, i64 2
  %164 = bitcast %"class.std::__1::__tree_end_node"* %163 to %"class.std::__1::__tree_end_node"**
  %165 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %164, align 8
  %166 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %165, i64 0, i32 0
  %167 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %166, align 8
  %168 = icmp eq %"class.std::__1::__tree_node_base"* %167, %162
  br i1 %168, label %185, label %176

169:                                              ; preds = %157, %169
  %170 = phi %"class.std::__1::__tree_node_base"* [ %172, %169 ], [ %159, %157 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 0, i32 0
  %172 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %171, align 8
  %173 = icmp eq %"class.std::__1::__tree_node_base"* %172, null
  br i1 %173, label %174, label %169

174:                                              ; preds = %169
  %175 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 0
  br label %185

176:                                              ; preds = %161, %176
  %177 = phi %"class.std::__1::__tree_end_node"** [ %180, %176 ], [ %164, %161 ]
  %178 = bitcast %"class.std::__1::__tree_end_node"** %177 to %"class.std::__1::__tree_node_base"**
  %179 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %178, align 8
  %180 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %179, i64 0, i32 2
  %181 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %180, align 8
  %182 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %181, i64 0, i32 0
  %183 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %182, align 8
  %184 = icmp eq %"class.std::__1::__tree_node_base"* %183, %179
  br i1 %184, label %185, label %176

185:                                              ; preds = %176, %174, %161
  %186 = phi %"class.std::__1::__tree_end_node"* [ %175, %174 ], [ %165, %161 ], [ %181, %176 ]
  %187 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %133, i64 0, i32 0, i32 0
  %188 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %187, align 8
  %189 = icmp eq %"class.std::__1::__tree_end_node"* %188, %147
  br i1 %189, label %190, label %193

190:                                              ; preds = %185
  %191 = ptrtoint %"class.std::__1::__tree_end_node"* %186 to i64
  %192 = bitcast %"class.std::__1::map"* %133 to i64*
  store i64 %191, i64* %192, align 8
  br label %193

193:                                              ; preds = %185, %190
  %194 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats::StatsScope", %"class.v8::internal::compiler::ZoneStats::StatsScope"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %195 = load i64, i64* %194, align 8
  %196 = add i64 %195, -1
  store i64 %196, i64* %194, align 8
  %197 = bitcast %"class.std::__1::__tree_end_node"* %147 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %126, %"class.std::__1::__tree_node_base"* %197) #10
  %198 = bitcast %"class.std::__1::__tree_end_node"* %147 to i8*
  tail call void @_ZdlPv(i8* %198) #12
  br label %199

199:                                              ; preds = %152, %150, %125, %193
  ret void

200:                                              ; preds = %43
  %201 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %50, i64 0, i32 2
  %202 = load i64, i64* %201, align 8
  %203 = ptrtoint %"class.v8::internal::Segment"* %52 to i64
  %204 = sub i64 -24, %203
  %205 = add i64 %204, %202
  br label %206

206:                                              ; preds = %200, %43
  %207 = phi i64 [ %205, %200 ], [ 0, %43 ]
  %208 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %50, i64 0, i32 0
  %209 = load i64, i64* %208, align 8
  %210 = add i64 %207, %48
  %211 = add i64 %210, %209
  %212 = getelementptr inbounds %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %31, i64 2
  %213 = add i64 %32, -2
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %103, label %29
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler9ZoneStatsC2EPNS0_19AccountingAllocatorE(%"class.v8::internal::compiler::ZoneStats"* nocapture, %"class.v8::internal::AccountingAllocator"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %0, i64 0, i32 4
  %4 = bitcast %"class.v8::internal::compiler::ZoneStats"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 64, i1 false)
  store %"class.v8::internal::AccountingAllocator"* %1, %"class.v8::internal::AccountingAllocator"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler9ZoneStatsD2Ev(%"class.v8::internal::compiler::ZoneStats"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.v8::internal::compiler::ZoneStats::StatsScope"**, %"class.v8::internal::compiler::ZoneStats::StatsScope"*** %2, align 8
  %4 = icmp eq %"class.v8::internal::compiler::ZoneStats::StatsScope"** %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"class.v8::internal::compiler::ZoneStats::StatsScope"** %3 to i64
  %7 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast %"class.v8::internal::compiler::ZoneStats::StatsScope"*** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"class.v8::internal::compiler::ZoneStats::StatsScope"** %3 to i8*
  tail call void @_ZdlPv(i8* %9) #12
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.v8::internal::Zone"**, %"class.v8::internal::Zone"*** %11, align 8
  %13 = icmp eq %"class.v8::internal::Zone"** %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint %"class.v8::internal::Zone"** %12 to i64
  %16 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %0, i64 0, i32 0, i32 0, i32 1
  %17 = bitcast %"class.v8::internal::Zone"*** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast %"class.v8::internal::Zone"** %12 to i8*
  tail call void @_ZdlPv(i8* %18) #12
  br label %19

19:                                               ; preds = %10, %14
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK2v88internal8compiler9ZoneStats20GetMaxAllocatedBytesEv(%"class.v8::internal::compiler::ZoneStats"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::Zone"**, %"class.v8::internal::Zone"*** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = load %"class.v8::internal::Zone"**, %"class.v8::internal::Zone"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::Zone"** %4, %6
  br i1 %7, label %66, label %8

8:                                                ; preds = %1
  %9 = ptrtoint %"class.v8::internal::Zone"** %4 to i64
  %10 = getelementptr %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %6, i64 -1
  %11 = ptrtoint %"class.v8::internal::Zone"** %10 to i64
  %12 = sub i64 %11, %9
  %13 = lshr i64 %12, 3
  %14 = add nuw nsw i64 %13, 1
  %15 = and i64 %14, 1
  %16 = icmp eq i64 %13, 0
  br i1 %16, label %44, label %17

17:                                               ; preds = %8
  %18 = sub nuw nsw i64 %14, %15
  br label %19

19:                                               ; preds = %77, %17
  %20 = phi i64 [ 0, %17 ], [ %82, %77 ]
  %21 = phi %"class.v8::internal::Zone"** [ %4, %17 ], [ %83, %77 ]
  %22 = phi i64 [ %18, %17 ], [ %84, %77 ]
  %23 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %21, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %23, i64 0, i32 5
  %25 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %24, align 8
  %26 = icmp eq %"class.v8::internal::Segment"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %23, i64 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = ptrtoint %"class.v8::internal::Segment"* %25 to i64
  %31 = sub i64 -24, %30
  %32 = add i64 %31, %29
  br label %33

33:                                               ; preds = %27, %19
  %34 = phi i64 [ %32, %27 ], [ 0, %19 ]
  %35 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %23, i64 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %34, %20
  %38 = add i64 %37, %36
  %39 = getelementptr inbounds %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %21, i64 1
  %40 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %40, i64 0, i32 5
  %42 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %41, align 8
  %43 = icmp eq %"class.v8::internal::Segment"* %42, null
  br i1 %43, label %77, label %71

44:                                               ; preds = %77, %8
  %45 = phi i64 [ undef, %8 ], [ %82, %77 ]
  %46 = phi i64 [ 0, %8 ], [ %82, %77 ]
  %47 = phi %"class.v8::internal::Zone"** [ %4, %8 ], [ %83, %77 ]
  %48 = icmp eq i64 %15, 0
  br i1 %48, label %66, label %49

49:                                               ; preds = %44
  %50 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %47, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %50, i64 0, i32 5
  %52 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %51, align 8
  %53 = icmp eq %"class.v8::internal::Segment"* %52, null
  br i1 %53, label %60, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %50, i64 0, i32 2
  %56 = load i64, i64* %55, align 8
  %57 = ptrtoint %"class.v8::internal::Segment"* %52 to i64
  %58 = sub i64 -24, %57
  %59 = add i64 %58, %56
  br label %60

60:                                               ; preds = %49, %54
  %61 = phi i64 [ %59, %54 ], [ 0, %49 ]
  %62 = add i64 %61, %46
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %50, i64 0, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = add i64 %62, %64
  br label %66

66:                                               ; preds = %60, %44, %1
  %67 = phi i64 [ 0, %1 ], [ %45, %44 ], [ %65, %60 ]
  %68 = load i64, i64* %2, align 8
  %69 = icmp ult i64 %68, %67
  %70 = select i1 %69, i64 %67, i64 %68
  ret i64 %70

71:                                               ; preds = %33
  %72 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %40, i64 0, i32 2
  %73 = load i64, i64* %72, align 8
  %74 = ptrtoint %"class.v8::internal::Segment"* %42 to i64
  %75 = sub i64 -24, %74
  %76 = add i64 %75, %73
  br label %77

77:                                               ; preds = %71, %33
  %78 = phi i64 [ %76, %71 ], [ 0, %33 ]
  %79 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %40, i64 0, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = add i64 %78, %38
  %82 = add i64 %81, %80
  %83 = getelementptr inbounds %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %21, i64 2
  %84 = add i64 %22, -2
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %44, label %19
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK2v88internal8compiler9ZoneStats24GetCurrentAllocatedBytesEv(%"class.v8::internal::compiler::ZoneStats"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.v8::internal::Zone"**, %"class.v8::internal::Zone"*** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load %"class.v8::internal::Zone"**, %"class.v8::internal::Zone"*** %4, align 8
  %6 = icmp eq %"class.v8::internal::Zone"** %3, %5
  br i1 %6, label %40, label %7

7:                                                ; preds = %1
  %8 = ptrtoint %"class.v8::internal::Zone"** %3 to i64
  %9 = getelementptr %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %5, i64 -1
  %10 = ptrtoint %"class.v8::internal::Zone"** %9 to i64
  %11 = sub i64 %10, %8
  %12 = lshr i64 %11, 3
  %13 = add nuw nsw i64 %12, 1
  %14 = and i64 %13, 1
  %15 = icmp eq i64 %12, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %7
  %17 = sub nuw nsw i64 %13, %14
  br label %42

18:                                               ; preds = %73, %7
  %19 = phi i64 [ undef, %7 ], [ %78, %73 ]
  %20 = phi i64 [ 0, %7 ], [ %78, %73 ]
  %21 = phi %"class.v8::internal::Zone"** [ %3, %7 ], [ %79, %73 ]
  %22 = icmp eq i64 %14, 0
  br i1 %22, label %40, label %23

23:                                               ; preds = %18
  %24 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %21, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %24, i64 0, i32 5
  %26 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %25, align 8
  %27 = icmp eq %"class.v8::internal::Segment"* %26, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %24, i64 0, i32 2
  %30 = load i64, i64* %29, align 8
  %31 = ptrtoint %"class.v8::internal::Segment"* %26 to i64
  %32 = sub i64 -24, %31
  %33 = add i64 %32, %30
  br label %34

34:                                               ; preds = %23, %28
  %35 = phi i64 [ %33, %28 ], [ 0, %23 ]
  %36 = add i64 %35, %20
  %37 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %24, i64 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = add i64 %36, %38
  br label %40

40:                                               ; preds = %34, %18, %1
  %41 = phi i64 [ 0, %1 ], [ %19, %18 ], [ %39, %34 ]
  ret i64 %41

42:                                               ; preds = %73, %16
  %43 = phi i64 [ 0, %16 ], [ %78, %73 ]
  %44 = phi %"class.v8::internal::Zone"** [ %3, %16 ], [ %79, %73 ]
  %45 = phi i64 [ %17, %16 ], [ %80, %73 ]
  %46 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %44, align 8
  %47 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %46, i64 0, i32 5
  %48 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %47, align 8
  %49 = icmp eq %"class.v8::internal::Segment"* %48, null
  br i1 %49, label %56, label %50

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %46, i64 0, i32 2
  %52 = load i64, i64* %51, align 8
  %53 = ptrtoint %"class.v8::internal::Segment"* %48 to i64
  %54 = sub i64 -24, %53
  %55 = add i64 %54, %52
  br label %56

56:                                               ; preds = %42, %50
  %57 = phi i64 [ %55, %50 ], [ 0, %42 ]
  %58 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %46, i64 0, i32 0
  %59 = load i64, i64* %58, align 8
  %60 = add i64 %57, %43
  %61 = add i64 %60, %59
  %62 = getelementptr inbounds %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %44, i64 1
  %63 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %63, i64 0, i32 5
  %65 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %64, align 8
  %66 = icmp eq %"class.v8::internal::Segment"* %65, null
  br i1 %66, label %73, label %67

67:                                               ; preds = %56
  %68 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %63, i64 0, i32 2
  %69 = load i64, i64* %68, align 8
  %70 = ptrtoint %"class.v8::internal::Segment"* %65 to i64
  %71 = sub i64 -24, %70
  %72 = add i64 %71, %69
  br label %73

73:                                               ; preds = %67, %56
  %74 = phi i64 [ %72, %67 ], [ 0, %56 ]
  %75 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %63, i64 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = add i64 %74, %61
  %78 = add i64 %77, %76
  %79 = getelementptr inbounds %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %44, i64 2
  %80 = add i64 %45, -2
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %18, label %42
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::Zone"* @_ZN2v88internal8compiler9ZoneStats12NewEmptyZoneEPKcb(%"class.v8::internal::compiler::ZoneStats"*, i8*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 64) #12
  %5 = bitcast i8* %4 to %"class.v8::internal::Zone"*
  %6 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %0, i64 0, i32 4
  %7 = load %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::AccountingAllocator"** %6, align 8
  tail call void @_ZN2v88internal4ZoneC1EPNS0_19AccountingAllocatorEPKcb(%"class.v8::internal::Zone"* nonnull %5, %"class.v8::internal::AccountingAllocator"* %7, i8* %1, i1 zeroext %2) #10
  %8 = ptrtoint i8* %4 to i64
  %9 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = load %"class.v8::internal::Zone"**, %"class.v8::internal::Zone"*** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = load %"class.v8::internal::Zone"**, %"class.v8::internal::Zone"*** %11, align 8
  %13 = icmp eq %"class.v8::internal::Zone"** %10, %12
  %14 = ptrtoint %"class.v8::internal::Zone"** %12 to i64
  br i1 %13, label %20, label %15

15:                                               ; preds = %3
  %16 = bitcast %"class.v8::internal::Zone"** %10 to i64*
  store i64 %8, i64* %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %10, i64 1
  %18 = ptrtoint %"class.v8::internal::Zone"** %17 to i64
  %19 = bitcast %"class.v8::internal::Zone"*** %9 to i64*
  store i64 %18, i64* %19, align 8
  br label %77

20:                                               ; preds = %3
  %21 = ptrtoint %"class.v8::internal::Zone"** %10 to i64
  %22 = bitcast %"class.v8::internal::Zone"*** %9 to i64*
  %23 = bitcast %"class.v8::internal::compiler::ZoneStats"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %21, %24
  %26 = ashr exact i64 %25, 3
  %27 = add nsw i64 %26, 1
  %28 = icmp ugt i64 %27, 2305843009213693951
  br i1 %28, label %29, label %31

29:                                               ; preds = %20
  %30 = bitcast %"class.v8::internal::compiler::ZoneStats"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %30) #11
  unreachable

31:                                               ; preds = %20
  %32 = bitcast %"class.v8::internal::Zone"*** %11 to i64*
  %33 = sub i64 %14, %24
  %34 = ashr exact i64 %33, 3
  %35 = icmp ult i64 %34, 1152921504606846975
  br i1 %35, label %36, label %44

36:                                               ; preds = %31
  %37 = ashr exact i64 %33, 2
  %38 = icmp ult i64 %37, %27
  %39 = select i1 %38, i64 %27, i64 %37
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %49, label %41

41:                                               ; preds = %36
  %42 = icmp ugt i64 %39, 2305843009213693951
  br i1 %42, label %43, label %44

43:                                               ; preds = %41
  tail call void @abort() #11
  unreachable

44:                                               ; preds = %41, %31
  %45 = phi i64 [ %39, %41 ], [ 2305843009213693951, %31 ]
  %46 = shl i64 %45, 3
  %47 = tail call i8* @_Znwm(i64 %46) #12
  %48 = bitcast i8* %47 to %"class.v8::internal::Zone"**
  br label %49

49:                                               ; preds = %44, %36
  %50 = phi i64 [ %45, %44 ], [ 0, %36 ]
  %51 = phi %"class.v8::internal::Zone"** [ %48, %44 ], [ null, %36 ]
  %52 = getelementptr inbounds %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %51, i64 %26
  %53 = getelementptr inbounds %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %51, i64 %50
  %54 = ptrtoint %"class.v8::internal::Zone"** %53 to i64
  %55 = bitcast %"class.v8::internal::Zone"** %52 to i64*
  store i64 %8, i64* %55, align 8
  %56 = getelementptr inbounds %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %52, i64 1
  %57 = ptrtoint %"class.v8::internal::Zone"** %56 to i64
  %58 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %0, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.v8::internal::Zone"**, %"class.v8::internal::Zone"*** %58, align 8
  %60 = load i64, i64* %22, align 8
  %61 = ptrtoint %"class.v8::internal::Zone"** %59 to i64
  %62 = sub i64 %60, %61
  %63 = ashr exact i64 %62, 3
  %64 = sub nsw i64 0, %63
  %65 = getelementptr inbounds %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %52, i64 %64
  %66 = ptrtoint %"class.v8::internal::Zone"** %65 to i64
  %67 = icmp sgt i64 %62, 0
  br i1 %67, label %68, label %72

68:                                               ; preds = %49
  %69 = bitcast %"class.v8::internal::Zone"** %65 to i8*
  %70 = bitcast %"class.v8::internal::Zone"** %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 %62, i1 false) #10
  %71 = load %"class.v8::internal::Zone"**, %"class.v8::internal::Zone"*** %58, align 8
  br label %72

72:                                               ; preds = %68, %49
  %73 = phi %"class.v8::internal::Zone"** [ %59, %49 ], [ %71, %68 ]
  store i64 %66, i64* %23, align 8
  store i64 %57, i64* %22, align 8
  store i64 %54, i64* %32, align 8
  %74 = icmp eq %"class.v8::internal::Zone"** %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %72
  %76 = bitcast %"class.v8::internal::Zone"** %73 to i8*
  tail call void @_ZdlPv(i8* %76) #12
  br label %77

77:                                               ; preds = %15, %72, %75
  ret %"class.v8::internal::Zone"* %5
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN2v88internal4ZoneC1EPNS0_19AccountingAllocatorEPKcb(%"class.v8::internal::Zone"*, %"class.v8::internal::AccountingAllocator"*, i8*, i1 zeroext) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler9ZoneStats10ReturnZoneEPNS0_4ZoneE(%"class.v8::internal::compiler::ZoneStats"* nocapture, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::Zone"**, %"class.v8::internal::Zone"*** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = load %"class.v8::internal::Zone"**, %"class.v8::internal::Zone"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::Zone"** %4, %6
  br i1 %7, label %66, label %8

8:                                                ; preds = %2
  %9 = ptrtoint %"class.v8::internal::Zone"** %4 to i64
  %10 = getelementptr %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %6, i64 -1
  %11 = ptrtoint %"class.v8::internal::Zone"** %10 to i64
  %12 = sub i64 %11, %9
  %13 = lshr i64 %12, 3
  %14 = add nuw nsw i64 %13, 1
  %15 = and i64 %14, 1
  %16 = icmp eq i64 %13, 0
  br i1 %16, label %44, label %17

17:                                               ; preds = %8
  %18 = sub nuw nsw i64 %14, %15
  br label %19

19:                                               ; preds = %136, %17
  %20 = phi i64 [ 0, %17 ], [ %141, %136 ]
  %21 = phi %"class.v8::internal::Zone"** [ %4, %17 ], [ %142, %136 ]
  %22 = phi i64 [ %18, %17 ], [ %143, %136 ]
  %23 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %21, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %23, i64 0, i32 5
  %25 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %24, align 8
  %26 = icmp eq %"class.v8::internal::Segment"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %23, i64 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = ptrtoint %"class.v8::internal::Segment"* %25 to i64
  %31 = sub i64 -24, %30
  %32 = add i64 %31, %29
  br label %33

33:                                               ; preds = %27, %19
  %34 = phi i64 [ %32, %27 ], [ 0, %19 ]
  %35 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %23, i64 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %34, %20
  %38 = add i64 %37, %36
  %39 = getelementptr inbounds %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %21, i64 1
  %40 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %40, i64 0, i32 5
  %42 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %41, align 8
  %43 = icmp eq %"class.v8::internal::Segment"* %42, null
  br i1 %43, label %136, label %130

44:                                               ; preds = %136, %8
  %45 = phi i64 [ undef, %8 ], [ %141, %136 ]
  %46 = phi i64 [ 0, %8 ], [ %141, %136 ]
  %47 = phi %"class.v8::internal::Zone"** [ %4, %8 ], [ %142, %136 ]
  %48 = icmp eq i64 %15, 0
  br i1 %48, label %66, label %49

49:                                               ; preds = %44
  %50 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %47, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %50, i64 0, i32 5
  %52 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %51, align 8
  %53 = icmp eq %"class.v8::internal::Segment"* %52, null
  br i1 %53, label %60, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %50, i64 0, i32 2
  %56 = load i64, i64* %55, align 8
  %57 = ptrtoint %"class.v8::internal::Segment"* %52 to i64
  %58 = sub i64 -24, %57
  %59 = add i64 %58, %56
  br label %60

60:                                               ; preds = %49, %54
  %61 = phi i64 [ %59, %54 ], [ 0, %49 ]
  %62 = add i64 %61, %46
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %50, i64 0, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = add i64 %62, %64
  br label %66

66:                                               ; preds = %60, %44, %2
  %67 = phi i64 [ 0, %2 ], [ %45, %44 ], [ %65, %60 ]
  %68 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %0, i64 0, i32 2
  %69 = load i64, i64* %68, align 8
  %70 = icmp ult i64 %69, %67
  %71 = select i1 %70, i64 %67, i64 %69
  store i64 %71, i64* %68, align 8
  %72 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %0, i64 0, i32 1, i32 0, i32 0
  %73 = load %"class.v8::internal::compiler::ZoneStats::StatsScope"**, %"class.v8::internal::compiler::ZoneStats::StatsScope"*** %72, align 8
  %74 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %0, i64 0, i32 1, i32 0, i32 1
  %75 = load %"class.v8::internal::compiler::ZoneStats::StatsScope"**, %"class.v8::internal::compiler::ZoneStats::StatsScope"*** %74, align 8
  %76 = icmp eq %"class.v8::internal::compiler::ZoneStats::StatsScope"** %73, %75
  br i1 %76, label %80, label %122

77:                                               ; preds = %122
  %78 = load %"class.v8::internal::Zone"**, %"class.v8::internal::Zone"*** %3, align 8
  %79 = load %"class.v8::internal::Zone"**, %"class.v8::internal::Zone"*** %5, align 8
  br label %80

80:                                               ; preds = %77, %66
  %81 = phi %"class.v8::internal::Zone"** [ %79, %77 ], [ %6, %66 ]
  %82 = phi %"class.v8::internal::Zone"** [ %78, %77 ], [ %4, %66 ]
  %83 = ptrtoint %"class.v8::internal::Zone"** %81 to i64
  %84 = icmp eq %"class.v8::internal::Zone"** %82, %81
  br i1 %84, label %92, label %85

85:                                               ; preds = %80, %89
  %86 = phi %"class.v8::internal::Zone"** [ %90, %89 ], [ %82, %80 ]
  %87 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %86, align 8
  %88 = icmp eq %"class.v8::internal::Zone"* %87, %1
  br i1 %88, label %92, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %86, i64 1
  %91 = icmp eq %"class.v8::internal::Zone"** %90, %81
  br i1 %91, label %92, label %85

92:                                               ; preds = %85, %89, %80
  %93 = phi %"class.v8::internal::Zone"** [ %81, %80 ], [ %86, %85 ], [ %81, %89 ]
  %94 = getelementptr inbounds %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %93, i64 1
  %95 = ptrtoint %"class.v8::internal::Zone"** %94 to i64
  %96 = sub i64 %83, %95
  %97 = ashr exact i64 %96, 3
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %92
  %100 = bitcast %"class.v8::internal::Zone"** %93 to i8*
  %101 = bitcast %"class.v8::internal::Zone"** %94 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 %96, i1 false) #10
  br label %102

102:                                              ; preds = %92, %99
  %103 = getelementptr inbounds %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %93, i64 %97
  store %"class.v8::internal::Zone"** %103, %"class.v8::internal::Zone"*** %5, align 8
  %104 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 5
  %105 = load %"class.v8::internal::Segment"*, %"class.v8::internal::Segment"** %104, align 8
  %106 = icmp eq %"class.v8::internal::Segment"* %105, null
  br i1 %106, label %113, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %109 = load i64, i64* %108, align 8
  %110 = ptrtoint %"class.v8::internal::Segment"* %105 to i64
  %111 = sub i64 -24, %110
  %112 = add i64 %111, %109
  br label %113

113:                                              ; preds = %102, %107
  %114 = phi i64 [ %112, %107 ], [ 0, %102 ]
  %115 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 0
  %116 = load i64, i64* %115, align 8
  %117 = add i64 %116, %114
  %118 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats", %"class.v8::internal::compiler::ZoneStats"* %0, i64 0, i32 3
  %119 = load i64, i64* %118, align 8
  %120 = add i64 %117, %119
  store i64 %120, i64* %118, align 8
  %121 = icmp eq %"class.v8::internal::Zone"* %1, null
  br i1 %121, label %129, label %127

122:                                              ; preds = %66, %122
  %123 = phi %"class.v8::internal::compiler::ZoneStats::StatsScope"** [ %125, %122 ], [ %73, %66 ]
  %124 = load %"class.v8::internal::compiler::ZoneStats::StatsScope"*, %"class.v8::internal::compiler::ZoneStats::StatsScope"** %123, align 8
  tail call void @_ZN2v88internal8compiler9ZoneStats10StatsScope12ZoneReturnedEPNS0_4ZoneE(%"class.v8::internal::compiler::ZoneStats::StatsScope"* %124, %"class.v8::internal::Zone"* %1)
  %125 = getelementptr inbounds %"class.v8::internal::compiler::ZoneStats::StatsScope"*, %"class.v8::internal::compiler::ZoneStats::StatsScope"** %123, i64 1
  %126 = icmp eq %"class.v8::internal::compiler::ZoneStats::StatsScope"** %125, %75
  br i1 %126, label %77, label %122

127:                                              ; preds = %113
  tail call void @_ZN2v88internal4ZoneD1Ev(%"class.v8::internal::Zone"* nonnull %1) #10
  %128 = bitcast %"class.v8::internal::Zone"* %1 to i8*
  tail call void @_ZdlPv(i8* %128) #12
  br label %129

129:                                              ; preds = %127, %113
  ret void

130:                                              ; preds = %33
  %131 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %40, i64 0, i32 2
  %132 = load i64, i64* %131, align 8
  %133 = ptrtoint %"class.v8::internal::Segment"* %42 to i64
  %134 = sub i64 -24, %133
  %135 = add i64 %134, %132
  br label %136

136:                                              ; preds = %130, %33
  %137 = phi i64 [ %135, %130 ], [ 0, %33 ]
  %138 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %40, i64 0, i32 0
  %139 = load i64, i64* %138, align 8
  %140 = add i64 %137, %38
  %141 = add i64 %140, %139
  %142 = getelementptr inbounds %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %21, i64 2
  %143 = add i64 %22, -2
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %44, label %19
}

; Function Attrs: nounwind
declare void @_ZN2v88internal4ZoneD1Ev(%"class.v8::internal::Zone"*) unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPN2v88internal4ZoneEmEENS_19__map_value_compareIS5_S6_NS_4lessIS5_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPN2v88internal4ZoneEmEENS_19__map_value_compareIS5_S6_NS_4lessIS5_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPN2v88internal4ZoneEmEENS_19__map_value_compareIS5_S6_NS_4lessIS5_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #10
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !5
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !5
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !5
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %57, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %57
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %57, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %56, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %98
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !5
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %99, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %98, %"class.std::__1::__tree_node_base"* %99
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %140, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %138, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !5
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !5
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %143
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !5
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %143, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !5
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %142, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %142
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %142, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %142, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !5
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %98, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %99, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %98, %"class.std::__1::__tree_node_base"* %99
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %274, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %272, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !5
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !5
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !5
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %277
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !5
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %276, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %276
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %276, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %276, %306 ], [ %276, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !5
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %143, %165 ], [ %277, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__16__treeINS_12__value_typeIPN2v88internal4ZoneEmEENS_19__map_value_compareIS5_S6_NS_4lessIS5_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJNS_4pairIS5_mEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISK_EEEEEEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__16__treeINS_12__value_typeIPN2v88internal4ZoneEmEENS_19__map_value_compareIS5_S6_NS_4lessIS5_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJNS_4pairIS5_mEEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISK_EEEEEEDpOT_"}
!5 = !{i8 0, i8 2}
