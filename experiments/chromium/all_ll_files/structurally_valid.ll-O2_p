; ModuleID = '../../third_party/protobuf/src/google/protobuf/stubs/structurally_valid.cc'
source_filename = "../../third_party/protobuf/src/google/protobuf/stubs/structurally_valid.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.google::protobuf::internal::UTF8StateMachineObj" = type { i32, i32, i32, i32, i32, i32, i32, i32, i8*, %"struct.google::protobuf::internal::RemapEntry"*, i8*, i8* }
%"struct.google::protobuf::internal::RemapEntry" = type { i8, i8, i16 }

@_ZN6google8protobuf8internalL27utf8acceptnonsurrogates_objE = internal constant %"struct.google::protobuf::internal::UTF8StateMachineObj" { i32 0, i32 256, i32 2304, i32 0, i32 8, i32 1, i32 538976288, i32 0, i8* getelementptr inbounds ([2304 x i8], [2304 x i8]* @_ZN6google8protobuf8internalL23utf8acceptnonsurrogatesE, i32 0, i32 0), %"struct.google::protobuf::internal::RemapEntry"* getelementptr inbounds ([1 x %"struct.google::protobuf::internal::RemapEntry"], [1 x %"struct.google::protobuf::internal::RemapEntry"]* @_ZN6google8protobuf8internalL34utf8acceptnonsurrogates_remap_baseE, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @_ZN6google8protobuf8internalL36utf8acceptnonsurrogates_remap_stringE, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN6google8protobuf8internalL28utf8acceptnonsurrogates_fastE, i32 0, i32 0) }, align 8
@_ZN6google8protobuf8internalL23utf8acceptnonsurrogatesE = internal constant [2304 x i8] calign 16
@_ZN6google8protobuf8internalL34utf8acceptnonsurrogates_remap_baseE = internal constant [1 x %"struct.google::protobuf::internal::RemapEntry"] zeroinitializer, align 2
@_ZN6google8protobuf8internalL36utf8acceptnonsurrogates_remap_stringE = internal constant [1 x i8] zeroinitializer, align 1
@_ZN6google8protobuf8internalL28utf8acceptnonsurrogates_fastE = internal constant [256 x i8] calign 16
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN6google8protobuf8internal15UTF8GenericScanEPKNS1_19UTF8StateMachineObjEPKciPi(%"struct.google::protobuf::internal::UTF8StateMachineObj"* nocapture readonly, i8*, i32, i32* nocapture) local_unnamed_addr #0 {
  store i32 0, i32* %3, align 4
  %5 = icmp eq i32 %2, 0
  br i1 %5, label %183, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"struct.google::protobuf::internal::UTF8StateMachineObj", %"struct.google::protobuf::internal::UTF8StateMachineObj"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %2 to i64
  %10 = getelementptr inbounds i8, i8* %1, i64 %9
  %11 = icmp slt i32 %2, 7
  %12 = getelementptr inbounds i8, i8* %10, i64 -7
  %13 = select i1 %11, i8* %1, i8* %12
  %14 = getelementptr inbounds %"struct.google::protobuf::internal::UTF8StateMachineObj", %"struct.google::protobuf::internal::UTF8StateMachineObj"* %0, i64 0, i32 8
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"struct.google::protobuf::internal::UTF8StateMachineObj", %"struct.google::protobuf::internal::UTF8StateMachineObj"* %0, i64 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds i8, i8* %15, i64 %18
  %20 = getelementptr inbounds %"struct.google::protobuf::internal::UTF8StateMachineObj", %"struct.google::protobuf::internal::UTF8StateMachineObj"* %0, i64 0, i32 11
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"struct.google::protobuf::internal::UTF8StateMachineObj", %"struct.google::protobuf::internal::UTF8StateMachineObj"* %0, i64 0, i32 6
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %"struct.google::protobuf::internal::UTF8StateMachineObj", %"struct.google::protobuf::internal::UTF8StateMachineObj"* %0, i64 0, i32 7
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"struct.google::protobuf::internal::UTF8StateMachineObj", %"struct.google::protobuf::internal::UTF8StateMachineObj"* %0, i64 0, i32 1
  %27 = ptrtoint i8* %19 to i64
  br label %28

28:                                               ; preds = %171, %6
  %29 = phi i8* [ %1, %6 ], [ %172, %171 ]
  %30 = ptrtoint i8* %29 to i64
  %31 = and i64 %30, 7
  %32 = icmp ne i64 %31, 0
  %33 = icmp ult i8* %29, %10
  %34 = and i1 %33, %32
  br i1 %34, label %35, label %49

35:                                               ; preds = %28, %42
  %36 = phi i8* [ %43, %42 ], [ %29, %28 ]
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i64
  %39 = getelementptr inbounds i8, i8* %21, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %122

42:                                               ; preds = %35
  %43 = getelementptr inbounds i8, i8* %36, i64 1
  %44 = ptrtoint i8* %43 to i64
  %45 = and i64 %44, 7
  %46 = icmp ne i64 %45, 0
  %47 = icmp ult i8* %43, %10
  %48 = and i1 %47, %46
  br i1 %48, label %35, label %49

49:                                               ; preds = %42, %28
  %50 = phi i8* [ %29, %28 ], [ %43, %42 ]
  %51 = phi i64 [ %31, %28 ], [ %45, %42 ]
  %52 = icmp eq i64 %51, 0
  %53 = icmp ult i8* %50, %13
  %54 = and i1 %52, %53
  br i1 %54, label %55, label %122

55:                                               ; preds = %49, %120
  %56 = phi i8* [ %62, %120 ], [ %50, %49 ]
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds i8, i8* %56, i64 4
  %60 = bitcast i8* %59 to i32*
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds i8, i8* %56, i64 8
  %63 = sub i32 %58, %23
  %64 = add i32 %58, %25
  %65 = or i32 %63, %64
  %66 = sub i32 %61, %23
  %67 = or i32 %65, %66
  %68 = add i32 %61, %25
  %69 = or i32 %67, %68
  %70 = and i32 %69, -2139062144
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %120, label %72

72:                                               ; preds = %55
  %73 = and i32 %58, 255
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds i8, i8* %21, i64 %74
  %76 = load i8, i8* %75, align 1
  %77 = getelementptr inbounds i8, i8* %56, i64 1
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i64
  %80 = getelementptr inbounds i8, i8* %21, i64 %79
  %81 = load i8, i8* %80, align 1
  %82 = getelementptr inbounds i8, i8* %56, i64 2
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i64
  %85 = getelementptr inbounds i8, i8* %21, i64 %84
  %86 = load i8, i8* %85, align 1
  %87 = getelementptr inbounds i8, i8* %56, i64 3
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i64
  %90 = getelementptr inbounds i8, i8* %21, i64 %89
  %91 = load i8, i8* %90, align 1
  %92 = or i8 %81, %76
  %93 = or i8 %92, %86
  %94 = or i8 %93, %91
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %96, label %122

96:                                               ; preds = %72
  %97 = and i32 %61, 255
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds i8, i8* %21, i64 %98
  %100 = load i8, i8* %99, align 1
  %101 = getelementptr inbounds i8, i8* %56, i64 5
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i64
  %104 = getelementptr inbounds i8, i8* %21, i64 %103
  %105 = load i8, i8* %104, align 1
  %106 = getelementptr inbounds i8, i8* %56, i64 6
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i64
  %109 = getelementptr inbounds i8, i8* %21, i64 %108
  %110 = load i8, i8* %109, align 1
  %111 = getelementptr inbounds i8, i8* %56, i64 7
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i64
  %114 = getelementptr inbounds i8, i8* %21, i64 %113
  %115 = load i8, i8* %114, align 1
  %116 = or i8 %105, %100
  %117 = or i8 %116, %110
  %118 = or i8 %117, %115
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %120, label %122

120:                                              ; preds = %55, %96
  %121 = icmp ult i8* %62, %13
  br i1 %121, label %55, label %122

122:                                              ; preds = %35, %120, %96, %72, %49
  %123 = phi i8* [ %50, %49 ], [ %62, %120 ], [ %59, %96 ], [ %56, %72 ], [ %36, %35 ]
  %124 = icmp ult i8* %123, %10
  br i1 %124, label %125, label %154

125:                                              ; preds = %122, %134
  %126 = phi i8* [ %138, %134 ], [ %19, %122 ]
  %127 = phi i8* [ %132, %134 ], [ %123, %122 ]
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i64
  %130 = getelementptr inbounds i8, i8* %126, i64 %129
  %131 = load i8, i8* %130, align 1
  %132 = getelementptr inbounds i8, i8* %127, i64 1
  %133 = icmp ugt i8 %131, -17
  br i1 %133, label %140, label %134

134:                                              ; preds = %125
  %135 = zext i8 %131 to i32
  %136 = shl i32 %135, %8
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds i8, i8* %19, i64 %137
  %139 = icmp eq i8* %132, %10
  br i1 %139, label %154, label %125

140:                                              ; preds = %125
  %141 = ptrtoint i8* %126 to i64
  %142 = sub i64 %141, %27
  %143 = trunc i64 %142 to i32
  %144 = load i32, i32* %26, align 4
  %145 = icmp ugt i32 %144, %143
  br i1 %145, label %171, label %146

146:                                              ; preds = %140, %150
  %147 = phi i8* [ %148, %150 ], [ %127, %140 ]
  %148 = getelementptr inbounds i8, i8* %147, i64 -1
  %149 = icmp ugt i8* %148, %1
  br i1 %149, label %150, label %171

150:                                              ; preds = %146
  %151 = load i8, i8* %148, align 1
  %152 = and i8 %151, -64
  %153 = icmp eq i8 %152, -128
  br i1 %153, label %146, label %171

154:                                              ; preds = %122, %134
  %155 = phi i8* [ %138, %134 ], [ %19, %122 ]
  %156 = phi i8* [ %10, %134 ], [ %123, %122 ]
  %157 = ptrtoint i8* %155 to i64
  %158 = ptrtoint i8* %19 to i64
  %159 = sub i64 %157, %158
  %160 = trunc i64 %159 to i32
  %161 = load i32, i32* %26, align 4
  %162 = icmp ugt i32 %161, %160
  br i1 %162, label %176, label %163

163:                                              ; preds = %154, %167
  %164 = phi i8* [ %165, %167 ], [ %156, %154 ]
  %165 = getelementptr inbounds i8, i8* %164, i64 -1
  %166 = icmp ugt i8* %165, %1
  br i1 %166, label %167, label %176

167:                                              ; preds = %163
  %168 = load i8, i8* %165, align 1
  %169 = and i8 %168, -64
  %170 = icmp eq i8 %169, -128
  br i1 %170, label %163, label %176

171:                                              ; preds = %146, %150, %140
  %172 = phi i8* [ %127, %140 ], [ %148, %150 ], [ %148, %146 ]
  %173 = icmp eq i8 %131, -3
  br i1 %173, label %28, label %174

174:                                              ; preds = %171
  %175 = zext i8 %131 to i32
  br label %176

176:                                              ; preds = %167, %163, %174, %154
  %177 = phi i32 [ 241, %154 ], [ %175, %174 ], [ 240, %163 ], [ 240, %167 ]
  %178 = phi i8* [ %156, %154 ], [ %172, %174 ], [ %165, %163 ], [ %165, %167 ]
  %179 = ptrtoint i8* %178 to i64
  %180 = ptrtoint i8* %1 to i64
  %181 = sub i64 %179, %180
  %182 = trunc i64 %181 to i32
  store i32 %182, i32* %3, align 4
  br label %183

183:                                              ; preds = %176, %4
  %184 = phi i32 [ 241, %4 ], [ %177, %176 ]
  ret i32 %184
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6google8protobuf8internal24UTF8GenericScanFastAsciiEPKNS1_19UTF8StateMachineObjEPKciPi(%"struct.google::protobuf::internal::UTF8StateMachineObj"* nocapture readonly, i8*, i32, i32* nocapture) local_unnamed_addr #2 {
  %5 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  %6 = icmp eq i32 %2, 0
  br i1 %6, label %80, label %7

7:                                                ; preds = %4
  %8 = sext i32 %2 to i64
  %9 = getelementptr inbounds i8, i8* %1, i64 %8
  %10 = icmp slt i32 %2, 7
  %11 = getelementptr inbounds i8, i8* %9, i64 -7
  %12 = select i1 %10, i8* %1, i8* %11
  %13 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #3
  store i32 -1431655766, i32* %5, align 4
  %14 = ptrtoint i8* %1 to i64
  br label %15

15:                                               ; preds = %62, %7
  %16 = phi i8* [ %1, %7 ], [ %74, %62 ]
  %17 = ptrtoint i8* %16 to i64
  %18 = and i64 %17, 7
  %19 = icmp ne i64 %18, 0
  %20 = icmp ult i8* %16, %9
  %21 = and i1 %20, %19
  br i1 %21, label %22, label %33

22:                                               ; preds = %15, %26
  %23 = phi i8* [ %27, %26 ], [ %16, %15 ]
  %24 = load i8, i8* %23, align 1
  %25 = icmp sgt i8 %24, -1
  br i1 %25, label %26, label %52

26:                                               ; preds = %22
  %27 = getelementptr inbounds i8, i8* %23, i64 1
  %28 = ptrtoint i8* %27 to i64
  %29 = and i64 %28, 7
  %30 = icmp ne i64 %29, 0
  %31 = icmp ult i8* %27, %9
  %32 = and i1 %31, %30
  br i1 %32, label %22, label %33

33:                                               ; preds = %26, %15
  %34 = phi i8* [ %16, %15 ], [ %27, %26 ]
  %35 = phi i64 [ %18, %15 ], [ %29, %26 ]
  %36 = icmp eq i64 %35, 0
  %37 = icmp ult i8* %34, %12
  %38 = and i1 %36, %37
  br i1 %38, label %39, label %52

39:                                               ; preds = %33, %49
  %40 = phi i8* [ %50, %49 ], [ %34, %33 ]
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds i8, i8* %40, i64 4
  %44 = bitcast i8* %43 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = or i32 %45, %42
  %47 = and i32 %46, -2139062144
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %39
  %50 = getelementptr inbounds i8, i8* %40, i64 8
  %51 = icmp ult i8* %50, %12
  br i1 %51, label %39, label %52

52:                                               ; preds = %22, %49, %39, %33
  %53 = phi i8* [ %34, %33 ], [ %50, %49 ], [ %40, %39 ], [ %23, %22 ]
  %54 = icmp ult i8* %53, %9
  br i1 %54, label %55, label %62

55:                                               ; preds = %52, %59
  %56 = phi i8* [ %60, %59 ], [ %53, %52 ]
  %57 = load i8, i8* %56, align 1
  %58 = icmp sgt i8 %57, -1
  br i1 %58, label %59, label %62

59:                                               ; preds = %55
  %60 = getelementptr inbounds i8, i8* %56, i64 1
  %61 = icmp eq i8* %60, %9
  br i1 %61, label %62, label %55

62:                                               ; preds = %55, %59, %52
  %63 = phi i8* [ %53, %52 ], [ %9, %59 ], [ %56, %55 ]
  %64 = ptrtoint i8* %63 to i64
  %65 = sub i64 %64, %14
  %66 = trunc i64 %65 to i32
  %67 = shl i64 %65, 32
  %68 = ashr exact i64 %67, 32
  %69 = getelementptr inbounds i8, i8* %1, i64 %68
  %70 = sub nsw i32 %2, %66
  %71 = call i32 @_ZN6google8protobuf8internal15UTF8GenericScanEPKNS1_19UTF8StateMachineObjEPKciPi(%"struct.google::protobuf::internal::UTF8StateMachineObj"* %0, i8* %69, i32 %70, i32* nonnull %5)
  %72 = load i32, i32* %5, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i8, i8* %63, i64 %73
  %75 = icmp eq i32 %71, 253
  br i1 %75, label %15, label %76

76:                                               ; preds = %62
  %77 = ptrtoint i8* %74 to i64
  %78 = sub i64 %77, %14
  %79 = trunc i64 %78 to i32
  store i32 %79, i32* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #3
  br label %80

80:                                               ; preds = %4, %76
  %81 = phi i32 [ %71, %76 ], [ 241, %4 ]
  ret i32 %81
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6google8protobuf8internal23IsStructurallyValidUTF8EPKci(i8*, i32) local_unnamed_addr #2 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #3
  store i32 0, i32* %3, align 4
  %5 = call i32 @_ZN6google8protobuf8internal24UTF8GenericScanFastAsciiEPKNS1_19UTF8StateMachineObjEPKciPi(%"struct.google::protobuf::internal::UTF8StateMachineObj"* nonnull @_ZN6google8protobuf8internalL27utf8acceptnonsurrogates_objE, i8* %0, i32 %1, i32* nonnull %3)
  %6 = load i32, i32* %3, align 4
  %7 = icmp eq i32 %6, %1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #3
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6google8protobuf8internal24UTF8SpnStructurallyValidENS0_11StringPieceE(i8*, i64) local_unnamed_addr #2 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #3
  store i32 0, i32* %3, align 4
  %5 = trunc i64 %1 to i32
  %6 = call i32 @_ZN6google8protobuf8internal24UTF8GenericScanFastAsciiEPKNS1_19UTF8StateMachineObjEPKciPi(%"struct.google::protobuf::internal::UTF8StateMachineObj"* nonnull @_ZN6google8protobuf8internalL27utf8acceptnonsurrogates_objE, i8* %0, i32 %5, i32* nonnull %3)
  %7 = load i32, i32* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #3
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN6google8protobuf8internal29UTF8CoerceToStructurallyValidENS0_11StringPieceEPcc(i8*, i64, i8*, i8 signext) local_unnamed_addr #2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = trunc i64 %1 to i32
  %8 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #3
  store i32 0, i32* %5, align 4
  %9 = call i32 @_ZN6google8protobuf8internal24UTF8GenericScanFastAsciiEPKNS1_19UTF8StateMachineObjEPKciPi(%"struct.google::protobuf::internal::UTF8StateMachineObj"* nonnull @_ZN6google8protobuf8internalL27utf8acceptnonsurrogates_objE, i8* %0, i32 %7, i32* nonnull %5) #3
  %10 = load i32, i32* %5, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #3
  %11 = icmp eq i32 %10, %7
  br i1 %11, label %37, label %12

12:                                               ; preds = %4
  %13 = shl i64 %1, 32
  %14 = ashr exact i64 %13, 32
  %15 = getelementptr inbounds i8, i8* %0, i64 %14
  %16 = sext i32 %10 to i64
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %0, i64 %16, i1 false)
  %17 = icmp sgt i64 %14, %16
  br i1 %17, label %18, label %37

18:                                               ; preds = %12
  %19 = getelementptr inbounds i8, i8* %0, i64 %16
  %20 = getelementptr inbounds i8, i8* %2, i64 %16
  %21 = ptrtoint i8* %15 to i64
  %22 = bitcast i32* %6 to i8*
  br label %23

23:                                               ; preds = %18, %23
  %24 = phi i8* [ %20, %18 ], [ %35, %23 ]
  %25 = phi i8* [ %19, %18 ], [ %34, %23 ]
  store i8 %3, i8* %24, align 1
  %26 = getelementptr inbounds i8, i8* %25, i64 1
  %27 = getelementptr inbounds i8, i8* %24, i64 1
  %28 = ptrtoint i8* %26 to i64
  %29 = sub i64 %21, %28
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #3
  store i32 0, i32* %6, align 4
  %30 = trunc i64 %29 to i32
  %31 = call i32 @_ZN6google8protobuf8internal24UTF8GenericScanFastAsciiEPKNS1_19UTF8StateMachineObjEPKciPi(%"struct.google::protobuf::internal::UTF8StateMachineObj"* nonnull @_ZN6google8protobuf8internalL27utf8acceptnonsurrogates_objE, i8* %26, i32 %30, i32* nonnull %6) #3
  %32 = load i32, i32* %6, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #3
  %33 = sext i32 %32 to i64
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %26, i64 %33, i1 false)
  %34 = getelementptr inbounds i8, i8* %26, i64 %33
  %35 = getelementptr inbounds i8, i8* %27, i64 %33
  %36 = icmp ult i8* %34, %15
  br i1 %36, label %23, label %37

37:                                               ; preds = %23, %12, %4
  %38 = phi i8* [ %0, %4 ], [ %2, %12 ], [ %2, %23 ]
  ret i8* %38
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
