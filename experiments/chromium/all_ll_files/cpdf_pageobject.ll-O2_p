; ModuleID = '../../third_party/pdfium/core/fpdfapi/page/cpdf_pageobject.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/page/cpdf_pageobject.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_PageObject = type { %class.CPDF_GraphicStates, %class.CFX_FloatRect, %class.CPDF_ContentMarks, i8, i32 }
%class.CPDF_GraphicStates = type { i32 (...)**, %class.CPDF_ClipPath, %class.CFX_GraphState, %class.CPDF_ColorState, %class.CPDF_TextState, %class.CPDF_GeneralState }
%class.CPDF_ClipPath = type { %"class.fxcrt::SharedCopyOnWrite" }
%"class.fxcrt::SharedCopyOnWrite" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.CPDF_ClipPath::PathData"* }
%"class.CPDF_ClipPath::PathData" = type { %"class.fxcrt::Retainable", %"class.std::__1::vector", %"class.std::__1::vector.3" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.0" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"*, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::unique_ptr.5" = type opaque
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::unique_ptr.5"* }
%class.CFX_GraphState = type { %"class.fxcrt::SharedCopyOnWrite.12" }
%"class.fxcrt::SharedCopyOnWrite.12" = type { %"class.fxcrt::RetainPtr.13" }
%"class.fxcrt::RetainPtr.13" = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %class.CFX_RetainableGraphStateData* }
%class.CFX_RetainableGraphStateData = type { %"class.fxcrt::Retainable", %class.CFX_GraphStateData }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.17" }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { float*, float*, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { float* }
%class.CPDF_ColorState = type { %"class.fxcrt::SharedCopyOnWrite.26" }
%"class.fxcrt::SharedCopyOnWrite.26" = type { %"class.fxcrt::RetainPtr.27" }
%"class.fxcrt::RetainPtr.27" = type { %"class.std::__1::unique_ptr.28" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.CPDF_ColorState::ColorData"* }
%"class.CPDF_ColorState::ColorData" = type { %"class.fxcrt::Retainable", i32, i32, %class.CPDF_Color, %class.CPDF_Color }
%class.CPDF_Color = type { %"class.std::__1::vector.17", %"class.std::__1::unique_ptr.31", %"class.fxcrt::RetainPtr.35" }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %class.PatternValue* }
%class.PatternValue = type opaque
%"class.fxcrt::RetainPtr.35" = type { %"class.std::__1::unique_ptr.36" }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %class.CPDF_ColorSpace* }
%class.CPDF_ColorSpace = type opaque
%class.CPDF_TextState = type { %"class.fxcrt::SharedCopyOnWrite.43" }
%"class.fxcrt::SharedCopyOnWrite.43" = type { %"class.fxcrt::RetainPtr.44" }
%"class.fxcrt::RetainPtr.44" = type { %"class.std::__1::unique_ptr.45" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.CPDF_TextState::TextData"* }
%"class.CPDF_TextState::TextData" = type { %"class.fxcrt::Retainable", %"class.fxcrt::RetainPtr.48", %"class.fxcrt::UnownedPtr", float, float, float, i32, [4 x float], [4 x float] }
%"class.fxcrt::RetainPtr.48" = type { %"class.std::__1::unique_ptr.49" }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %class.CPDF_Font* }
%class.CPDF_Font = type opaque
%"class.fxcrt::UnownedPtr" = type { %class.CPDF_Document* }
%class.CPDF_Document = type opaque
%class.CPDF_GeneralState = type { %"class.fxcrt::SharedCopyOnWrite.56" }
%"class.fxcrt::SharedCopyOnWrite.56" = type { %"class.fxcrt::RetainPtr.57" }
%"class.fxcrt::RetainPtr.57" = type { %"class.std::__1::unique_ptr.58" }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.CPDF_GeneralState::StateData"* }
%"class.CPDF_GeneralState::StateData" = type { %"class.fxcrt::Retainable", %"class.fxcrt::ByteString", i32, %"class.fxcrt::RetainPtr.67", %class.CFX_Matrix, float, float, %"class.fxcrt::RetainPtr.73", %"class.fxcrt::RetainPtr.79", %class.CFX_Matrix, i32, i8, i8, i8, i8, i8, i32, %"class.fxcrt::RetainPtr.73", %"class.fxcrt::RetainPtr.73", %"class.fxcrt::RetainPtr.73", float, float }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.61" }
%"class.fxcrt::RetainPtr.61" = type { %"class.std::__1::unique_ptr.62" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.fxcrt::RetainPtr.67" = type { %"class.std::__1::unique_ptr.68" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %class.CPDF_Object* }
%class.CPDF_Object = type opaque
%"class.fxcrt::RetainPtr.79" = type { %"class.std::__1::unique_ptr.80" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %class.CPDF_TransferFunc* }
%class.CPDF_TransferFunc = type opaque
%class.CFX_Matrix = type { float, float, float, float, float, float }
%"class.fxcrt::RetainPtr.73" = type { %"class.std::__1::unique_ptr.74" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %class.CPDF_Object* }
%class.CFX_FloatRect = type { float, float, float, float }
%class.CPDF_ContentMarks = type { %"class.fxcrt::RetainPtr.87" }
%"class.fxcrt::RetainPtr.87" = type { %"class.std::__1::unique_ptr.88" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.CPDF_ContentMarks::MarkData"* }
%"class.CPDF_ContentMarks::MarkData" = type { %"class.fxcrt::Retainable", %"class.std::__1::vector.91" }
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { %"class.fxcrt::RetainPtr.93"*, %"class.fxcrt::RetainPtr.93"*, %"class.std::__1::__compressed_pair.94" }
%"class.fxcrt::RetainPtr.93" = type opaque
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.fxcrt::RetainPtr.93"* }
%class.CPDF_TextObject = type opaque
%class.CPDF_PathObject = type opaque
%class.CPDF_ImageObject = type opaque
%class.CPDF_ShadingObject = type opaque
%class.CPDF_FormObject = type opaque

@_ZTV15CPDF_PageObject = hidden unnamed_addr constant { [21 x i8*] } { [21 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CPDF_PageObject*)* @_ZN15CPDF_PageObjectD2Ev to i8*), i8* bitcast (void (%class.CPDF_PageObject*)* @_ZN15CPDF_PageObjectD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject6IsTextEv to i8*), i8* bitcast (i1 (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject6IsPathEv to i8*), i8* bitcast (i1 (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject7IsImageEv to i8*), i8* bitcast (i1 (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject9IsShadingEv to i8*), i8* bitcast (i1 (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject6IsFormEv to i8*), i8* bitcast (%class.CPDF_TextObject* (%class.CPDF_PageObject*)* @_ZN15CPDF_PageObject6AsTextEv to i8*), i8* bitcast (%class.CPDF_TextObject* (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject6AsTextEv to i8*), i8* bitcast (%class.CPDF_PathObject* (%class.CPDF_PageObject*)* @_ZN15CPDF_PageObject6AsPathEv to i8*), i8* bitcast (%class.CPDF_PathObject* (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject6AsPathEv to i8*), i8* bitcast (%class.CPDF_ImageObject* (%class.CPDF_PageObject*)* @_ZN15CPDF_PageObject7AsImageEv to i8*), i8* bitcast (%class.CPDF_ImageObject* (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject7AsImageEv to i8*), i8* bitcast (%class.CPDF_ShadingObject* (%class.CPDF_PageObject*)* @_ZN15CPDF_PageObject9AsShadingEv to i8*), i8* bitcast (%class.CPDF_ShadingObject* (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject9AsShadingEv to i8*), i8* bitcast (%class.CPDF_FormObject* (%class.CPDF_PageObject*)* @_ZN15CPDF_PageObject6AsFormEv to i8*), i8* bitcast (%class.CPDF_FormObject* (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject6AsFormEv to i8*)] }, align 8

@_ZN15CPDF_PageObjectD1Ev = hidden unnamed_addr alias void (%class.CPDF_PageObject*), void (%class.CPDF_PageObject*)* @_ZN15CPDF_PageObjectD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_PageObjectC2Ei(%class.CPDF_PageObject*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_PageObject, %class.CPDF_PageObject* %0, i64 0, i32 0
  tail call void @_ZN18CPDF_GraphicStatesC2Ev(%class.CPDF_GraphicStates* %3) #7
  %4 = getelementptr inbounds %class.CPDF_PageObject, %class.CPDF_PageObject* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV15CPDF_PageObject, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.CPDF_PageObject, %class.CPDF_PageObject* %0, i64 0, i32 1
  %6 = bitcast %class.CFX_FloatRect* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 16, i1 false) #7
  %7 = getelementptr inbounds %class.CPDF_PageObject, %class.CPDF_PageObject* %0, i64 0, i32 2
  tail call void @_ZN17CPDF_ContentMarksC1Ev(%class.CPDF_ContentMarks* %7) #7
  %8 = getelementptr inbounds %class.CPDF_PageObject, %class.CPDF_PageObject* %0, i64 0, i32 3
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %class.CPDF_PageObject, %class.CPDF_PageObject* %0, i64 0, i32 4
  store i32 %1, i32* %9, align 4
  ret void
}

declare void @_ZN18CPDF_GraphicStatesC2Ev(%class.CPDF_GraphicStates*) unnamed_addr #1

declare void @_ZN17CPDF_ContentMarksC1Ev(%class.CPDF_ContentMarks*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_PageObjectD2Ev(%class.CPDF_PageObject*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_PageObject, %class.CPDF_PageObject* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV15CPDF_PageObject, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDF_PageObject, %class.CPDF_PageObject* %0, i64 0, i32 2
  tail call void @_ZN17CPDF_ContentMarksD1Ev(%class.CPDF_ContentMarks* %3) #7
  %4 = getelementptr inbounds %class.CPDF_PageObject, %class.CPDF_PageObject* %0, i64 0, i32 0
  tail call void @_ZN18CPDF_GraphicStatesD2Ev(%class.CPDF_GraphicStates* %4) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN17CPDF_ContentMarksD1Ev(%class.CPDF_ContentMarks*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN18CPDF_GraphicStatesD2Ev(%class.CPDF_GraphicStates*) unnamed_addr #2

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN15CPDF_PageObjectD0Ev(%class.CPDF_PageObject* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK15CPDF_PageObject6IsTextEv(%class.CPDF_PageObject* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK15CPDF_PageObject6IsPathEv(%class.CPDF_PageObject* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK15CPDF_PageObject7IsImageEv(%class.CPDF_PageObject* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK15CPDF_PageObject9IsShadingEv(%class.CPDF_PageObject* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK15CPDF_PageObject6IsFormEv(%class.CPDF_PageObject* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %class.CPDF_TextObject* @_ZN15CPDF_PageObject6AsTextEv(%class.CPDF_PageObject* nocapture readnone) unnamed_addr #5 align 2 {
  ret %class.CPDF_TextObject* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %class.CPDF_TextObject* @_ZNK15CPDF_PageObject6AsTextEv(%class.CPDF_PageObject* nocapture readnone) unnamed_addr #5 align 2 {
  ret %class.CPDF_TextObject* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %class.CPDF_PathObject* @_ZN15CPDF_PageObject6AsPathEv(%class.CPDF_PageObject* nocapture readnone) unnamed_addr #5 align 2 {
  ret %class.CPDF_PathObject* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %class.CPDF_PathObject* @_ZNK15CPDF_PageObject6AsPathEv(%class.CPDF_PageObject* nocapture readnone) unnamed_addr #5 align 2 {
  ret %class.CPDF_PathObject* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %class.CPDF_ImageObject* @_ZN15CPDF_PageObject7AsImageEv(%class.CPDF_PageObject* nocapture readnone) unnamed_addr #5 align 2 {
  ret %class.CPDF_ImageObject* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %class.CPDF_ImageObject* @_ZNK15CPDF_PageObject7AsImageEv(%class.CPDF_PageObject* nocapture readnone) unnamed_addr #5 align 2 {
  ret %class.CPDF_ImageObject* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %class.CPDF_ShadingObject* @_ZN15CPDF_PageObject9AsShadingEv(%class.CPDF_PageObject* nocapture readnone) unnamed_addr #5 align 2 {
  ret %class.CPDF_ShadingObject* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %class.CPDF_ShadingObject* @_ZNK15CPDF_PageObject9AsShadingEv(%class.CPDF_PageObject* nocapture readnone) unnamed_addr #5 align 2 {
  ret %class.CPDF_ShadingObject* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %class.CPDF_FormObject* @_ZN15CPDF_PageObject6AsFormEv(%class.CPDF_PageObject* nocapture readnone) unnamed_addr #5 align 2 {
  ret %class.CPDF_FormObject* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %class.CPDF_FormObject* @_ZNK15CPDF_PageObject6AsFormEv(%class.CPDF_PageObject* nocapture readnone) unnamed_addr #5 align 2 {
  ret %class.CPDF_FormObject* null
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_PageObject8CopyDataEPKS_(%class.CPDF_PageObject*, %class.CPDF_PageObject*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_PageObject, %class.CPDF_PageObject* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.CPDF_PageObject, %class.CPDF_PageObject* %1, i64 0, i32 0
  tail call void @_ZN18CPDF_GraphicStates10CopyStatesERKS_(%class.CPDF_GraphicStates* %3, %class.CPDF_GraphicStates* dereferenceable(48) %4) #7
  %5 = getelementptr inbounds %class.CPDF_PageObject, %class.CPDF_PageObject* %1, i64 0, i32 1
  %6 = getelementptr inbounds %class.CPDF_PageObject, %class.CPDF_PageObject* %0, i64 0, i32 1
  %7 = bitcast %class.CFX_FloatRect* %6 to i8*
  %8 = bitcast %class.CFX_FloatRect* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 4 %8, i64 16, i1 false)
  %9 = getelementptr inbounds %class.CPDF_PageObject, %class.CPDF_PageObject* %0, i64 0, i32 3
  store i8 1, i8* %9, align 8
  ret void
}

declare void @_ZN18CPDF_GraphicStates10CopyStatesERKS_(%class.CPDF_GraphicStates*, %class.CPDF_GraphicStates* dereferenceable(48)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_PageObject17TransformClipPathERK10CFX_Matrix(%class.CPDF_PageObject*, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_PageObject, %class.CPDF_PageObject* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %class.CPDF_ClipPath, %class.CPDF_ClipPath* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.CPDF_ClipPath::PathData"*, %"class.CPDF_ClipPath::PathData"** %4, align 8
  %6 = icmp eq %"class.CPDF_ClipPath::PathData"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  tail call void @_ZN13CPDF_ClipPath9TransformERK10CFX_Matrix(%class.CPDF_ClipPath* %3, %class.CFX_Matrix* dereferenceable(24) %1) #7
  %8 = getelementptr inbounds %class.CPDF_PageObject, %class.CPDF_PageObject* %0, i64 0, i32 3
  store i8 1, i8* %8, align 8
  br label %9

9:                                                ; preds = %2, %7
  ret void
}

declare void @_ZN13CPDF_ClipPath9TransformERK10CFX_Matrix(%class.CPDF_ClipPath*, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_PageObject21TransformGeneralStateERK10CFX_Matrix(%class.CPDF_PageObject*, %class.CFX_Matrix* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_PageObject, %class.CPDF_PageObject* %0, i64 0, i32 0, i32 5
  %4 = getelementptr inbounds %class.CPDF_GeneralState, %class.CPDF_GeneralState* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.CPDF_GeneralState::StateData"*, %"class.CPDF_GeneralState::StateData"** %4, align 8
  %6 = icmp eq %"class.CPDF_GeneralState::StateData"* %5, null
  br i1 %6, label %63, label %7

7:                                                ; preds = %2
  %8 = tail call %class.CFX_Matrix* @_ZN17CPDF_GeneralState16GetMutableMatrixEv(%class.CPDF_GeneralState* %3) #7
  %9 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %8, i64 0, i32 0
  %10 = load float, float* %9, align 4, !noalias !2
  %11 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %8, i64 0, i32 1
  %12 = load float, float* %11, align 4, !noalias !2
  %13 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %1, i64 0, i32 2
  %14 = bitcast %class.CFX_Matrix* %1 to <2 x float>*
  %15 = load <2 x float>, <2 x float>* %14, align 4, !noalias !2
  %16 = shufflevector <2 x float> %15, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %17 = bitcast float* %13 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 4, !noalias !2
  %19 = shufflevector <2 x float> %18, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %20 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %8, i64 0, i32 2
  %21 = load float, float* %20, align 4, !noalias !2
  %22 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %8, i64 0, i32 3
  %23 = load float, float* %22, align 4, !noalias !2
  %24 = insertelement <4 x float> undef, float %10, i32 0
  %25 = shufflevector <4 x float> %24, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %26 = extractelement <2 x float> %15, i32 0
  %27 = extractelement <2 x float> %15, i32 1
  %28 = shufflevector <4 x float> %25, <4 x float> %16, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %29 = insertelement <4 x float> undef, float %26, i32 0
  %30 = insertelement <4 x float> %29, float %27, i32 1
  %31 = insertelement <4 x float> %30, float %21, i32 2
  %32 = insertelement <4 x float> %31, float %21, i32 3
  %33 = fmul <4 x float> %28, %32
  %34 = insertelement <4 x float> undef, float %12, i32 0
  %35 = shufflevector <4 x float> %34, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %36 = extractelement <2 x float> %18, i32 0
  %37 = extractelement <2 x float> %18, i32 1
  %38 = shufflevector <4 x float> %35, <4 x float> %19, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %39 = insertelement <4 x float> undef, float %36, i32 0
  %40 = insertelement <4 x float> %39, float %37, i32 1
  %41 = insertelement <4 x float> %40, float %23, i32 2
  %42 = insertelement <4 x float> %41, float %23, i32 3
  %43 = fmul <4 x float> %38, %42
  %44 = fadd <4 x float> %33, %43
  %45 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %8, i64 0, i32 4
  %46 = load float, float* %45, align 4, !noalias !2
  %47 = fmul float %26, %46
  %48 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %8, i64 0, i32 5
  %49 = load float, float* %48, align 4, !noalias !2
  %50 = fmul float %36, %49
  %51 = fadd float %47, %50
  %52 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %1, i64 0, i32 4
  %53 = load float, float* %52, align 4, !noalias !2
  %54 = fadd float %53, %51
  %55 = fmul float %27, %46
  %56 = fmul float %37, %49
  %57 = fadd float %55, %56
  %58 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %1, i64 0, i32 5
  %59 = load float, float* %58, align 4, !noalias !2
  %60 = fadd float %57, %59
  %61 = bitcast %class.CFX_Matrix* %8 to <4 x float>*
  store <4 x float> %44, <4 x float>* %61, align 4
  store float %54, float* %45, align 4
  store float %60, float* %48, align 4
  %62 = getelementptr inbounds %class.CPDF_PageObject, %class.CPDF_PageObject* %0, i64 0, i32 3
  store i8 1, i8* %62, align 8
  br label %63

63:                                               ; preds = %2, %7
  ret void
}

declare %class.CFX_Matrix* @_ZN17CPDF_GeneralState16GetMutableMatrixEv(%class.CPDF_GeneralState*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK15CPDF_PageObject7GetBBoxEv(%class.CPDF_PageObject*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_PageObject, %class.CPDF_PageObject* %0, i64 0, i32 1
  %3 = tail call { i64, i64 } @_ZNK13CFX_FloatRect12GetOuterRectEv(%class.CFX_FloatRect* %2) #7
  ret { i64, i64 } %3
}

declare { i64, i64 } @_ZNK13CFX_FloatRect12GetOuterRectEv(%class.CFX_FloatRect*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK15CPDF_PageObject18GetTransformedBBoxERK10CFX_Matrix(%class.CPDF_PageObject*, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = bitcast { <2 x float>, <2 x float> }* %3 to %class.CFX_FloatRect*
  %5 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #7
  %6 = getelementptr inbounds %class.CPDF_PageObject, %class.CPDF_PageObject* %0, i64 0, i32 1
  %7 = tail call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix* %1, %class.CFX_FloatRect* dereferenceable(16) %6) #7
  %8 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  %9 = extractvalue { <2 x float>, <2 x float> } %7, 0
  store <2 x float> %9, <2 x float>* %8, align 8
  %10 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  %11 = extractvalue { <2 x float>, <2 x float> } %7, 1
  store <2 x float> %11, <2 x float>* %10, align 8
  %12 = call { i64, i64 } @_ZNK13CFX_FloatRect12GetOuterRectEv(%class.CFX_FloatRect* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #7
  ret { i64, i64 } %12
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

declare { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix*, %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!4 = distinct !{!4, !"_ZNK10CFX_MatrixmlERKS_"}
