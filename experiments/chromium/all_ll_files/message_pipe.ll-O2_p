; ModuleID = '../../mojo/public/cpp/system/message_pipe.cc'
source_filename = "../../mojo/public/cpp/system/message_pipe.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%struct.MojoAppendMessageDataOptions = type { i32, i32 }
%struct.MojoWriteMessageOptions = type { i32, i32 }
%struct.MojoCreateMessageOptions = type { i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.mojo::ScopedHandleBase.3"*, %"class.mojo::ScopedHandleBase.3"*, %"class.std::__1::__compressed_pair.4" }
%"class.mojo::ScopedHandleBase.3" = type { %"class.mojo::Handle" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.mojo::ScopedHandleBase.3"* }
%struct.MojoReadMessageOptions = type { i32, i32 }
%struct.MojoSerializeMessageOptions = type { i32, i32 }
%struct.MojoGetMessageDataOptions = type { i32, i32 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN4mojo16ScopedHandleBaseINS1_6HandleEEENS_9allocatorIS4_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm = comdat any

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4mojo15WriteMessageRawENS_17MessagePipeHandleEPKvmPKjmj(%"class.mojo::MessagePipeHandle"* nocapture readonly, i8* nocapture readonly, i64, i32*, i64, i32) local_unnamed_addr #0 {
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.MojoAppendMessageDataOptions, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct.MojoWriteMessageOptions, align 8
  %13 = bitcast i64* %7 to %struct.MojoCreateMessageOptions*
  %14 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  store i64 8, i64* %7, align 8
  %15 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #8
  store i64 -6148914691236517206, i64* %8, align 8
  %16 = call i32 @MojoCreateMessage(%struct.MojoCreateMessageOptions* nonnull %13, i64* nonnull %8) #8
  %17 = icmp eq i32 %16, 0
  %18 = load i64, i64* %8, align 8
  %19 = select i1 %17, i64 %18, i64 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  %20 = bitcast %struct.MojoAppendMessageDataOptions* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  %21 = getelementptr inbounds %struct.MojoAppendMessageDataOptions, %struct.MojoAppendMessageDataOptions* %9, i64 0, i32 0
  %22 = getelementptr inbounds %struct.MojoAppendMessageDataOptions, %struct.MojoAppendMessageDataOptions* %9, i64 0, i32 1
  store i32 8, i32* %21, align 8
  store i32 1, i32* %22, align 4
  %23 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #8
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %24 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #8
  store i32 -1431655766, i32* %11, align 4
  %25 = icmp ult i64 %2, 4294967296
  br i1 %25, label %27, label %26, !prof !2

26:                                               ; preds = %6
  call void @llvm.trap() #8
  unreachable

27:                                               ; preds = %6
  %28 = icmp ult i64 %4, 4294967296
  br i1 %28, label %30, label %29, !prof !2

29:                                               ; preds = %27
  call void @llvm.trap() #8
  unreachable

30:                                               ; preds = %27
  %31 = trunc i64 %2 to i32
  %32 = trunc i64 %4 to i32
  %33 = call i32 @MojoAppendMessageData(i64 %19, i32 %31, i32* %3, i32 %32, %struct.MojoAppendMessageDataOptions* nonnull %9, i8** nonnull %10, i32* nonnull %11) #8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %43

35:                                               ; preds = %30
  %36 = load i8*, i8** %10, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %36, i8* align 1 %1, i64 %2, i1 false)
  %37 = bitcast %struct.MojoWriteMessageOptions* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #8
  %38 = getelementptr inbounds %struct.MojoWriteMessageOptions, %struct.MojoWriteMessageOptions* %12, i64 0, i32 0
  %39 = getelementptr inbounds %struct.MojoWriteMessageOptions, %struct.MojoWriteMessageOptions* %12, i64 0, i32 1
  store i32 8, i32* %38, align 8
  store i32 %5, i32* %39, align 4
  %40 = getelementptr inbounds %"class.mojo::MessagePipeHandle", %"class.mojo::MessagePipeHandle"* %0, i64 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = call i32 @MojoWriteMessage(i32 %41, i64 %19, %struct.MojoWriteMessageOptions* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #8
  br label %43

43:                                               ; preds = %30, %35
  %44 = phi i64 [ 0, %35 ], [ %19, %30 ]
  %45 = phi i32 [ %42, %35 ], [ 10, %30 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  %46 = icmp eq i64 %44, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %43
  %48 = call i32 @MojoDestroyMessage(i64 %44) #8
  br label %49

49:                                               ; preds = %43, %47
  ret i32 %45
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @MojoAppendMessageData(i64, i32, i32*, i32, %struct.MojoAppendMessageDataOptions*, i8**, i32*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @MojoWriteMessage(i32, i64, %struct.MojoWriteMessageOptions*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4mojo14ReadMessageRawENS_17MessagePipeHandleEPNSt3__16vectorIhNS1_9allocatorIhEEEEPNS2_INS_16ScopedHandleBaseINS_6HandleEEENS3_IS9_EEEEj(%"class.mojo::MessagePipeHandle"* nocapture readonly, %"class.std::__1::vector"*, %"class.std::__1::vector.1"*, i32) local_unnamed_addr #0 {
  %5 = alloca %struct.MojoReadMessageOptions, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = getelementptr inbounds %"class.mojo::MessagePipeHandle", %"class.mojo::MessagePipeHandle"* %0, i64 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = bitcast %struct.MojoReadMessageOptions* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #8
  %13 = getelementptr inbounds %struct.MojoReadMessageOptions, %struct.MojoReadMessageOptions* %5, i64 0, i32 0
  %14 = getelementptr inbounds %struct.MojoReadMessageOptions, %struct.MojoReadMessageOptions* %5, i64 0, i32 1
  store i32 8, i32* %13, align 8
  store i32 %3, i32* %14, align 4
  %15 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #8
  store i64 -6148914691236517206, i64* %6, align 8
  %16 = call i32 @MojoReadMessage(i32 %11, %struct.MojoReadMessageOptions* nonnull %5, i64* nonnull %6) #8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #8
  br label %129

19:                                               ; preds = %4
  %20 = load i64, i64* %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #8
  %21 = call i32 @MojoSerializeMessage(i64 %20, %struct.MojoSerializeMessageOptions* null) #8
  switch i32 %21, label %124 [
    i32 9, label %22
    i32 0, label %22
  ]

22:                                               ; preds = %19, %19
  %23 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #8
  store i8* null, i8** %7, align 8
  %24 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #8
  store i32 0, i32* %8, align 4
  %25 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #8
  store i32 0, i32* %9, align 4
  %26 = call i32 @MojoGetMessageData(i64 %20, %struct.MojoGetMessageDataOptions* null, i8** nonnull %7, i32* nonnull %8, i32* null, i32* nonnull %9) #8
  %27 = icmp eq i32 %26, 8
  br i1 %27, label %28, label %64

28:                                               ; preds = %22
  %29 = load i32, i32* %9, align 4
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %2, i64 0, i32 0, i32 1
  %32 = bitcast %"class.mojo::ScopedHandleBase.3"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.std::__1::vector.1"* %2 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %33, %35
  %37 = ashr exact i64 %36, 2
  %38 = icmp ult i64 %37, %30
  %39 = inttoptr i64 %35 to %"class.mojo::ScopedHandleBase.3"*
  %40 = inttoptr i64 %33 to %"class.mojo::ScopedHandleBase.3"*
  br i1 %38, label %41, label %43

41:                                               ; preds = %28
  %42 = sub nsw i64 %30, %37
  call void @_ZNSt3__16vectorIN4mojo16ScopedHandleBaseINS1_6HandleEEENS_9allocatorIS4_EEE8__appendEm(%"class.std::__1::vector.1"* %2, i64 %42) #8
  br label %59

43:                                               ; preds = %28
  %44 = icmp ugt i64 %37, %30
  br i1 %44, label %45, label %59

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"class.mojo::ScopedHandleBase.3", %"class.mojo::ScopedHandleBase.3"* %39, i64 %30
  %47 = icmp eq %"class.mojo::ScopedHandleBase.3"* %46, %40
  br i1 %47, label %58, label %48

48:                                               ; preds = %45, %56
  %49 = phi %"class.mojo::ScopedHandleBase.3"* [ %50, %56 ], [ %40, %45 ]
  %50 = getelementptr inbounds %"class.mojo::ScopedHandleBase.3", %"class.mojo::ScopedHandleBase.3"* %49, i64 -1
  %51 = getelementptr inbounds %"class.mojo::ScopedHandleBase.3", %"class.mojo::ScopedHandleBase.3"* %50, i64 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %48
  %55 = call i32 @MojoClose(i32 %52) #8
  br label %56

56:                                               ; preds = %54, %48
  %57 = icmp eq %"class.mojo::ScopedHandleBase.3"* %50, %46
  br i1 %57, label %58, label %48

58:                                               ; preds = %56, %45
  store %"class.mojo::ScopedHandleBase.3"* %46, %"class.mojo::ScopedHandleBase.3"** %31, align 8
  br label %59

59:                                               ; preds = %41, %43, %58
  %60 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %2, i64 0, i32 0, i32 0
  %61 = load %"class.mojo::ScopedHandleBase.3"*, %"class.mojo::ScopedHandleBase.3"** %60, align 8
  %62 = getelementptr inbounds %"class.mojo::ScopedHandleBase.3", %"class.mojo::ScopedHandleBase.3"* %61, i64 0, i32 0, i32 0
  %63 = call i32 @MojoGetMessageData(i64 %20, %struct.MojoGetMessageDataOptions* null, i8** nonnull %7, i32* nonnull %8, i32* %62, i32* nonnull %9) #8
  br label %64

64:                                               ; preds = %59, %22
  %65 = phi i32 [ %63, %59 ], [ %26, %22 ]
  %66 = load i32, i32* %8, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %92, label %68

68:                                               ; preds = %64
  %69 = load i8*, i8** %7, align 8
  %70 = zext i32 %66 to i64
  %71 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %72 = bitcast i8** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.std::__1::vector"* %1 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = sub i64 %73, %75
  %77 = icmp ult i64 %76, %70
  %78 = inttoptr i64 %75 to i8*
  br i1 %77, label %83, label %79

79:                                               ; preds = %68
  %80 = icmp ugt i64 %76, %70
  br i1 %80, label %81, label %87

81:                                               ; preds = %79
  %82 = getelementptr inbounds i8, i8* %78, i64 %70
  store i8* %82, i8** %71, align 8
  br label %87

83:                                               ; preds = %68
  %84 = sub i64 %70, %76
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"* %1, i64 %84) #8
  %85 = load i32, i32* %8, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %99, label %87

87:                                               ; preds = %81, %79, %83
  %88 = phi i32 [ %85, %83 ], [ %66, %79 ], [ %66, %81 ]
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %91, i8* align 1 %69, i64 %89, i1 false) #8
  br label %99

92:                                               ; preds = %64
  %93 = icmp eq %"class.std::__1::vector"* %1, null
  br i1 %93, label %99, label %94

94:                                               ; preds = %92
  %95 = bitcast %"class.std::__1::vector"* %1 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %98 = bitcast i8** %97 to i64*
  store i64 %96, i64* %98, align 8
  br label %99

99:                                               ; preds = %87, %83, %92, %94
  %100 = icmp eq %"class.std::__1::vector.1"* %2, null
  %101 = load i32, i32* %9, align 4
  %102 = icmp ne i32 %101, 0
  %103 = or i1 %100, %102
  br i1 %103, label %121, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %2, i64 0, i32 0, i32 0
  %106 = load %"class.mojo::ScopedHandleBase.3"*, %"class.mojo::ScopedHandleBase.3"** %105, align 8
  %107 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %2, i64 0, i32 0, i32 1
  %108 = load %"class.mojo::ScopedHandleBase.3"*, %"class.mojo::ScopedHandleBase.3"** %107, align 8
  %109 = icmp eq %"class.mojo::ScopedHandleBase.3"* %108, %106
  br i1 %109, label %120, label %110

110:                                              ; preds = %104, %118
  %111 = phi %"class.mojo::ScopedHandleBase.3"* [ %112, %118 ], [ %108, %104 ]
  %112 = getelementptr inbounds %"class.mojo::ScopedHandleBase.3", %"class.mojo::ScopedHandleBase.3"* %111, i64 -1
  %113 = getelementptr inbounds %"class.mojo::ScopedHandleBase.3", %"class.mojo::ScopedHandleBase.3"* %112, i64 0, i32 0, i32 0
  %114 = load i32, i32* %113, align 4
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %118, label %116

116:                                              ; preds = %110
  %117 = call i32 @MojoClose(i32 %114) #8
  br label %118

118:                                              ; preds = %116, %110
  %119 = icmp eq %"class.mojo::ScopedHandleBase.3"* %112, %106
  br i1 %119, label %120, label %110

120:                                              ; preds = %118, %104
  store %"class.mojo::ScopedHandleBase.3"* %106, %"class.mojo::ScopedHandleBase.3"** %107, align 8
  br label %121

121:                                              ; preds = %99, %120
  %122 = icmp eq i32 %65, 0
  %123 = select i1 %122, i32 0, i32 10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #8
  br label %124

124:                                              ; preds = %19, %121
  %125 = phi i32 [ %123, %121 ], [ 10, %19 ]
  %126 = icmp eq i64 %20, 0
  br i1 %126, label %129, label %127

127:                                              ; preds = %124
  %128 = call i32 @MojoDestroyMessage(i64 %20) #8
  br label %129

129:                                              ; preds = %18, %124, %127
  %130 = phi i32 [ %16, %18 ], [ %125, %124 ], [ %125, %127 ]
  ret i32 %130
}

declare i32 @MojoSerializeMessage(i64, %struct.MojoSerializeMessageOptions*) local_unnamed_addr #2

declare i32 @MojoGetMessageData(i64, %struct.MojoGetMessageDataOptions*, i8**, i32*, i32*, i32*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @MojoCreateMessage(%struct.MojoCreateMessageOptions*, i64*) local_unnamed_addr #2

declare i32 @MojoDestroyMessage(i64) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

declare i32 @MojoReadMessage(i32, %struct.MojoReadMessageOptions*, i64*) local_unnamed_addr #2

declare i32 @MojoClose(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4mojo16ScopedHandleBaseINS1_6HandleEEENS_9allocatorIS4_EEE8__appendEm(%"class.std::__1::vector.1"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.mojo::ScopedHandleBase.3"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.mojo::ScopedHandleBase.3"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.mojo::ScopedHandleBase.3"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.mojo::ScopedHandleBase.3", %"class.mojo::ScopedHandleBase.3"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.mojo::ScopedHandleBase.3", %"class.mojo::ScopedHandleBase.3"* %13, i64 %18, i32 0, i32 0
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #8
  %26 = ptrtoint %"class.mojo::ScopedHandleBase.3"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %196

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.1"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.1"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #9
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #9
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #10
  %54 = bitcast i8* %53 to %"class.mojo::ScopedHandleBase.3"*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"class.mojo::ScopedHandleBase.3"* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"class.mojo::ScopedHandleBase.3", %"class.mojo::ScopedHandleBase.3"* %57, i64 %33
  %59 = getelementptr inbounds %"class.mojo::ScopedHandleBase.3", %"class.mojo::ScopedHandleBase.3"* %57, i64 %56
  %60 = getelementptr inbounds %"class.mojo::ScopedHandleBase.3", %"class.mojo::ScopedHandleBase.3"* %58, i64 %1
  %61 = bitcast %"class.mojo::ScopedHandleBase.3"* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #8
  %63 = ptrtoint %"class.mojo::ScopedHandleBase.3"* %59 to i64
  %64 = ptrtoint %"class.mojo::ScopedHandleBase.3"* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 0
  %66 = load %"class.mojo::ScopedHandleBase.3"*, %"class.mojo::ScopedHandleBase.3"** %65, align 8
  %67 = ptrtoint %"class.mojo::ScopedHandleBase.3"* %66 to i64
  %68 = load %"class.mojo::ScopedHandleBase.3"*, %"class.mojo::ScopedHandleBase.3"** %6, align 8
  %69 = icmp eq %"class.mojo::ScopedHandleBase.3"* %68, %66
  br i1 %69, label %175, label %70

70:                                               ; preds = %55
  %71 = getelementptr %"class.mojo::ScopedHandleBase.3", %"class.mojo::ScopedHandleBase.3"* %68, i64 -1, i32 0, i32 0
  %72 = ptrtoint i32* %71 to i64
  %73 = sub i64 %72, %67
  %74 = lshr i64 %73, 2
  %75 = add nuw nsw i64 %74, 1
  %76 = icmp ult i64 %75, 8
  br i1 %76, label %159, label %77

77:                                               ; preds = %70
  %78 = and i64 %75, 9223372036854775800
  %79 = sub nsw i64 0, %78
  %80 = getelementptr %"class.mojo::ScopedHandleBase.3", %"class.mojo::ScopedHandleBase.3"* %58, i64 %79
  %81 = sub nsw i64 0, %78
  %82 = getelementptr %"class.mojo::ScopedHandleBase.3", %"class.mojo::ScopedHandleBase.3"* %68, i64 %81
  %83 = add nsw i64 %78, -8
  %84 = lshr exact i64 %83, 3
  %85 = add nuw nsw i64 %84, 1
  %86 = and i64 %85, 1
  %87 = icmp eq i64 %83, 0
  br i1 %87, label %136, label %88

88:                                               ; preds = %77
  %89 = sub nuw nsw i64 %85, %86
  %90 = getelementptr %"class.mojo::ScopedHandleBase.3", %"class.mojo::ScopedHandleBase.3"* %68, i64 -1
  %91 = getelementptr %"class.mojo::ScopedHandleBase.3", %"class.mojo::ScopedHandleBase.3"* %68, i64 -1
  br label %92

92:                                               ; preds = %92, %88
  %93 = phi i64 [ 0, %88 ], [ %131, %92 ]
  %94 = phi i64 [ %89, %88 ], [ %132, %92 ]
  %95 = sub i64 0, %93
  %96 = getelementptr %"class.mojo::ScopedHandleBase.3", %"class.mojo::ScopedHandleBase.3"* %58, i64 %95
  %97 = sub i64 0, %93
  %98 = getelementptr inbounds %"class.mojo::ScopedHandleBase.3", %"class.mojo::ScopedHandleBase.3"* %90, i64 %97
  %99 = getelementptr inbounds %"class.mojo::ScopedHandleBase.3", %"class.mojo::ScopedHandleBase.3"* %96, i64 -1, i32 0, i32 0
  %100 = getelementptr inbounds %"class.mojo::ScopedHandleBase.3", %"class.mojo::ScopedHandleBase.3"* %98, i64 0, i32 0, i32 0
  %101 = getelementptr inbounds i32, i32* %100, i64 -3
  %102 = bitcast i32* %101 to <4 x i32>*
  %103 = load <4 x i32>, <4 x i32>* %102, align 4, !noalias !3
  %104 = getelementptr inbounds i32, i32* %100, i64 -7
  %105 = bitcast i32* %104 to <4 x i32>*
  %106 = load <4 x i32>, <4 x i32>* %105, align 4, !noalias !3
  %107 = getelementptr inbounds i32, i32* %99, i64 -3
  %108 = bitcast i32* %107 to <4 x i32>*
  store <4 x i32> %103, <4 x i32>* %108, align 4, !alias.scope !3
  %109 = getelementptr inbounds i32, i32* %99, i64 -7
  %110 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> %106, <4 x i32>* %110, align 4, !alias.scope !3
  %111 = bitcast i32* %101 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %111, align 4, !noalias !3
  %112 = bitcast i32* %104 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %112, align 4, !noalias !3
  %113 = sub nuw nsw i64 -8, %93
  %114 = getelementptr %"class.mojo::ScopedHandleBase.3", %"class.mojo::ScopedHandleBase.3"* %58, i64 %113
  %115 = sub nuw nsw i64 -8, %93
  %116 = getelementptr inbounds %"class.mojo::ScopedHandleBase.3", %"class.mojo::ScopedHandleBase.3"* %91, i64 %115
  %117 = getelementptr inbounds %"class.mojo::ScopedHandleBase.3", %"class.mojo::ScopedHandleBase.3"* %114, i64 -1, i32 0, i32 0
  %118 = getelementptr inbounds %"class.mojo::ScopedHandleBase.3", %"class.mojo::ScopedHandleBase.3"* %116, i64 0, i32 0, i32 0
  %119 = getelementptr inbounds i32, i32* %118, i64 -3
  %120 = bitcast i32* %119 to <4 x i32>*
  %121 = load <4 x i32>, <4 x i32>* %120, align 4, !noalias !3
  %122 = getelementptr inbounds i32, i32* %118, i64 -7
  %123 = bitcast i32* %122 to <4 x i32>*
  %124 = load <4 x i32>, <4 x i32>* %123, align 4, !noalias !3
  %125 = getelementptr inbounds i32, i32* %117, i64 -3
  %126 = bitcast i32* %125 to <4 x i32>*
  store <4 x i32> %121, <4 x i32>* %126, align 4, !alias.scope !3
  %127 = getelementptr inbounds i32, i32* %117, i64 -7
  %128 = bitcast i32* %127 to <4 x i32>*
  store <4 x i32> %124, <4 x i32>* %128, align 4, !alias.scope !3
  %129 = bitcast i32* %119 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %129, align 4, !noalias !3
  %130 = bitcast i32* %122 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %130, align 4, !noalias !3
  %131 = add i64 %93, 16
  %132 = add i64 %94, -2
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %92, !llvm.loop !6

134:                                              ; preds = %92
  %135 = sub nuw nsw i64 -16, %93
  br label %136

136:                                              ; preds = %134, %77
  %137 = phi i64 [ 0, %77 ], [ %135, %134 ]
  %138 = icmp eq i64 %86, 0
  br i1 %138, label %157, label %139

139:                                              ; preds = %136
  %140 = getelementptr %"class.mojo::ScopedHandleBase.3", %"class.mojo::ScopedHandleBase.3"* %58, i64 %137
  %141 = getelementptr %"class.mojo::ScopedHandleBase.3", %"class.mojo::ScopedHandleBase.3"* %68, i64 -1
  %142 = getelementptr inbounds %"class.mojo::ScopedHandleBase.3", %"class.mojo::ScopedHandleBase.3"* %141, i64 %137
  %143 = getelementptr inbounds %"class.mojo::ScopedHandleBase.3", %"class.mojo::ScopedHandleBase.3"* %140, i64 -1, i32 0, i32 0
  %144 = getelementptr inbounds %"class.mojo::ScopedHandleBase.3", %"class.mojo::ScopedHandleBase.3"* %142, i64 0, i32 0, i32 0
  %145 = getelementptr inbounds i32, i32* %144, i64 -3
  %146 = bitcast i32* %145 to <4 x i32>*
  %147 = load <4 x i32>, <4 x i32>* %146, align 4, !noalias !3
  %148 = getelementptr inbounds i32, i32* %144, i64 -7
  %149 = bitcast i32* %148 to <4 x i32>*
  %150 = load <4 x i32>, <4 x i32>* %149, align 4, !noalias !3
  %151 = getelementptr inbounds i32, i32* %143, i64 -3
  %152 = bitcast i32* %151 to <4 x i32>*
  store <4 x i32> %147, <4 x i32>* %152, align 4, !alias.scope !3
  %153 = getelementptr inbounds i32, i32* %143, i64 -7
  %154 = bitcast i32* %153 to <4 x i32>*
  store <4 x i32> %150, <4 x i32>* %154, align 4, !alias.scope !3
  %155 = bitcast i32* %145 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %155, align 4, !noalias !3
  %156 = bitcast i32* %148 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %156, align 4, !noalias !3
  br label %157

157:                                              ; preds = %136, %139
  %158 = icmp eq i64 %75, %78
  br i1 %158, label %171, label %159

159:                                              ; preds = %157, %70
  %160 = phi %"class.mojo::ScopedHandleBase.3"* [ %58, %70 ], [ %80, %157 ]
  %161 = phi %"class.mojo::ScopedHandleBase.3"* [ %68, %70 ], [ %82, %157 ]
  br label %162

162:                                              ; preds = %159, %162
  %163 = phi %"class.mojo::ScopedHandleBase.3"* [ %169, %162 ], [ %160, %159 ]
  %164 = phi %"class.mojo::ScopedHandleBase.3"* [ %165, %162 ], [ %161, %159 ]
  %165 = getelementptr inbounds %"class.mojo::ScopedHandleBase.3", %"class.mojo::ScopedHandleBase.3"* %164, i64 -1
  %166 = getelementptr inbounds %"class.mojo::ScopedHandleBase.3", %"class.mojo::ScopedHandleBase.3"* %163, i64 -1, i32 0, i32 0
  %167 = getelementptr inbounds %"class.mojo::ScopedHandleBase.3", %"class.mojo::ScopedHandleBase.3"* %165, i64 0, i32 0, i32 0
  %168 = load i32, i32* %167, align 4, !noalias !3
  store i32 %168, i32* %166, align 4, !alias.scope !3
  store i32 0, i32* %167, align 4, !noalias !3
  %169 = getelementptr inbounds %"class.mojo::ScopedHandleBase.3", %"class.mojo::ScopedHandleBase.3"* %163, i64 -1
  %170 = icmp eq %"class.mojo::ScopedHandleBase.3"* %165, %66
  br i1 %170, label %171, label %162, !llvm.loop !8

171:                                              ; preds = %162, %157
  %172 = phi %"class.mojo::ScopedHandleBase.3"* [ %80, %157 ], [ %169, %162 ]
  %173 = load i64, i64* %30, align 8
  %174 = load %"class.mojo::ScopedHandleBase.3"*, %"class.mojo::ScopedHandleBase.3"** %6, align 8
  br label %175

175:                                              ; preds = %55, %171
  %176 = phi %"class.mojo::ScopedHandleBase.3"* [ %174, %171 ], [ %66, %55 ]
  %177 = phi %"class.mojo::ScopedHandleBase.3"* [ %172, %171 ], [ %58, %55 ]
  %178 = phi i64 [ %173, %171 ], [ %67, %55 ]
  %179 = ptrtoint %"class.mojo::ScopedHandleBase.3"* %177 to i64
  store i64 %179, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %180 = inttoptr i64 %178 to %"class.mojo::ScopedHandleBase.3"*
  %181 = icmp eq %"class.mojo::ScopedHandleBase.3"* %176, %180
  br i1 %181, label %192, label %182

182:                                              ; preds = %175, %190
  %183 = phi %"class.mojo::ScopedHandleBase.3"* [ %184, %190 ], [ %176, %175 ]
  %184 = getelementptr inbounds %"class.mojo::ScopedHandleBase.3", %"class.mojo::ScopedHandleBase.3"* %183, i64 -1
  %185 = getelementptr inbounds %"class.mojo::ScopedHandleBase.3", %"class.mojo::ScopedHandleBase.3"* %184, i64 0, i32 0, i32 0
  %186 = load i32, i32* %185, align 4
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %190, label %188

188:                                              ; preds = %182
  %189 = tail call i32 @MojoClose(i32 %186) #8
  br label %190

190:                                              ; preds = %188, %182
  %191 = icmp eq %"class.mojo::ScopedHandleBase.3"* %184, %180
  br i1 %191, label %192, label %182

192:                                              ; preds = %190, %175
  %193 = icmp eq i64 %178, 0
  br i1 %193, label %196, label %194

194:                                              ; preds = %192
  %195 = inttoptr i64 %178 to i8*
  tail call void @_ZdlPv(i8* %195) #10
  br label %196

196:                                              ; preds = %194, %192, %27
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %8 to i8*
  %13 = icmp eq i64 %1, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %12, i64 %1
  %16 = sub i64 %1, %8
  %17 = getelementptr i8, i8* %12, i64 %16
  %18 = ptrtoint i8* %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %18, i1 false) #8
  %19 = ptrtoint i8* %15 to i64
  br label %20

20:                                               ; preds = %11, %14
  %21 = phi i64 [ %19, %14 ], [ %8, %11 ]
  store i64 %21, i64* %7, align 8
  br label %68

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::vector"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %8, %24
  %26 = add i64 %25, %1
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #9
  unreachable

30:                                               ; preds = %22
  %31 = sub i64 %5, %24
  %32 = icmp ult i64 %31, 4611686018427387903
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = shl i64 %31, 1
  %35 = icmp ult i64 %34, %26
  %36 = select i1 %35, i64 %26, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30, %33
  %39 = phi i64 [ %36, %33 ], [ 9223372036854775807, %30 ]
  %40 = tail call i8* @_Znwm(i64 %39) #10
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i64 [ %39, %38 ], [ 0, %33 ]
  %43 = phi i8* [ %40, %38 ], [ null, %33 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %25
  %45 = ptrtoint i8* %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %42
  %47 = getelementptr inbounds i8, i8* %44, i64 %1
  %48 = sub i64 %1, %45
  %49 = getelementptr i8, i8* %44, i64 %48
  %50 = ptrtoint i8* %49 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %50, i1 false) #8
  %51 = ptrtoint i8* %46 to i64
  %52 = ptrtoint i8* %47 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = load i64, i64* %7, align 8
  %56 = ptrtoint i8* %54 to i64
  %57 = sub i64 %55, %56
  %58 = sub i64 0, %57
  %59 = getelementptr inbounds i8, i8* %44, i64 %58
  %60 = ptrtoint i8* %59 to i64
  %61 = icmp sgt i64 %57, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %41
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %54, i64 %57, i1 false) #8
  %63 = load i8*, i8** %53, align 8
  br label %64

64:                                               ; preds = %41, %62
  %65 = phi i8* [ %54, %41 ], [ %63, %62 ]
  store i64 %60, i64* %23, align 8
  store i64 %52, i64* %7, align 8
  store i64 %51, i64* %4, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  tail call void @_ZdlPv(i8* nonnull %65) #10
  br label %68

68:                                               ; preds = %67, %64, %20
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN4mojo16ScopedHandleBaseINS_6HandleEE7releaseEv: argument 0"}
!5 = distinct !{!5, !"_ZN4mojo16ScopedHandleBaseINS_6HandleEE7releaseEv"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.isvectorized", i32 1}
!8 = distinct !{!8, !9, !7}
!9 = !{!"llvm.loop.unroll.runtime.disable"}
