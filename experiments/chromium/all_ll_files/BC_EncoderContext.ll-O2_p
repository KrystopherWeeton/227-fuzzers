; ModuleID = '../../third_party/pdfium/fxbarcode/datamatrix/BC_EncoderContext.cpp'
source_filename = "../../third_party/pdfium/fxbarcode/datamatrix/BC_EncoderContext.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CBC_EncoderContext = type { %"class.fxcrt::WideString", %"class.fxcrt::WideString", i64, i8, %"class.fxcrt::UnownedPtr", i8, i8, i64 }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%"class.fxcrt::UnownedPtr" = type { %class.CBC_SymbolInfo* }
%class.CBC_SymbolInfo = type { i32 (...)**, %"struct.CBC_SymbolInfo::Data"* }
%"struct.CBC_SymbolInfo::Data" = type { i16, i16, i16, i8, i8, i8, i8 }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.1" }
%"class.fxcrt::RetainPtr.1" = type { %"class.std::__1::unique_ptr.2" }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.fxcrt::StringDataTemplate.5"* }
%"class.fxcrt::StringDataTemplate.5" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>

@_ZN18CBC_EncoderContextC1ERKN5fxcrt10WideStringE = hidden unnamed_addr alias void (%class.CBC_EncoderContext*, %"class.fxcrt::WideString"*), void (%class.CBC_EncoderContext*, %"class.fxcrt::WideString"*)* @_ZN18CBC_EncoderContextC2ERKN5fxcrt10WideStringE
@_ZN18CBC_EncoderContextD1Ev = hidden unnamed_addr alias void (%class.CBC_EncoderContext*), void (%class.CBC_EncoderContext*)* @_ZN18CBC_EncoderContextD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CBC_EncoderContextC2ERKN5fxcrt10WideStringE(%class.CBC_EncoderContext*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = alloca %"class.fxcrt::WideString", align 8
  %5 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %0, i64 0, i32 0
  tail call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %5) #6
  %6 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %0, i64 0, i32 1
  tail call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %6) #6
  %7 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %0, i64 0, i32 2
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %0, i64 0, i32 3
  store i8 -1, i8* %8, align 8
  %9 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %0, i64 0, i32 4, i32 0
  store %class.CBC_SymbolInfo* null, %class.CBC_SymbolInfo** %9, align 8
  %10 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %0, i64 0, i32 5
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %0, i64 0, i32 6
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %0, i64 0, i32 7
  store i64 0, i64* %12, align 8
  %13 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #6
  %14 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate.5"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate.5"*), %"class.fxcrt::StringDataTemplate.5"** %14, align 8
  call void @_ZNK5fxcrt10WideString6ToUTF8Ev(%"class.fxcrt::ByteString"* nonnull sret %3, %"class.fxcrt::WideString"* %1) #6
  %15 = load %"class.fxcrt::StringDataTemplate.5"*, %"class.fxcrt::StringDataTemplate.5"** %14, align 8
  %16 = icmp eq %"class.fxcrt::StringDataTemplate.5"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.5", %"class.fxcrt::StringDataTemplate.5"* %15, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  br label %20

20:                                               ; preds = %2, %17
  %21 = phi i64 [ %19, %17 ], [ 0, %2 ]
  %22 = bitcast %"class.fxcrt::WideString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #6
  %23 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %23, align 8
  call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* nonnull %4) #6
  call void @_ZN5fxcrt10WideString7ReserveEm(%"class.fxcrt::WideString"* nonnull %4, i64 %21) #6
  %24 = icmp eq i64 %21, 0
  br i1 %24, label %25, label %35

25:                                               ; preds = %44, %20
  %26 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"* %5, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %4) #6
  %27 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %27, align 8
  %29 = icmp eq %"class.fxcrt::StringDataTemplate"* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %28, i64 0, i32 1
  %32 = load i64, i64* %31, align 8
  br label %33

33:                                               ; preds = %25, %30
  %34 = phi i64 [ %32, %30 ], [ 0, %25 ]
  call void @_ZN5fxcrt10WideString7ReserveEm(%"class.fxcrt::WideString"* %6, i64 %34) #6
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #6
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #6
  ret void

35:                                               ; preds = %20, %44
  %36 = phi i64 [ %49, %44 ], [ 0, %20 ]
  %37 = load %"class.fxcrt::StringDataTemplate.5"*, %"class.fxcrt::StringDataTemplate.5"** %14, align 8
  %38 = icmp eq %"class.fxcrt::StringDataTemplate.5"* %37, null
  br i1 %38, label %43, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.5", %"class.fxcrt::StringDataTemplate.5"* %37, i64 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = icmp ugt i64 %41, %36
  br i1 %42, label %44, label %43, !prof !2

43:                                               ; preds = %39, %35
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #6, !srcloc !3
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #6, !srcloc !4
  unreachable

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.5", %"class.fxcrt::StringDataTemplate.5"* %37, i64 0, i32 3, i64 %36
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* nonnull %4, i32 signext %47) #6
  %49 = add nuw i64 %36, 1
  %50 = icmp eq i64 %49, %21
  br i1 %50, label %25, label %35
}

declare void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZNK5fxcrt10WideString6ToUTF8Ev(%"class.fxcrt::ByteString"* sret, %"class.fxcrt::WideString"*) local_unnamed_addr #1

declare void @_ZN5fxcrt10WideString7ReserveEm(%"class.fxcrt::WideString"*, i64) local_unnamed_addr #1

declare dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"*, i32 signext) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind
declare dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringaSEOS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CBC_EncoderContextD2Ev(%class.CBC_EncoderContext*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %0, i64 0, i32 1
  tail call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %2) #6
  %3 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %0, i64 0, i32 0
  tail call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %3) #6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN18CBC_EncoderContext12setSkipAtEndEi(%class.CBC_EncoderContext* nocapture, i32) local_unnamed_addr #4 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %0, i64 0, i32 7
  store i64 %3, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i32 @_ZN18CBC_EncoderContext14getCurrentCharEv(%class.CBC_EncoderContext* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %4, align 8
  %6 = icmp eq %"class.fxcrt::StringDataTemplate"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %5, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %9, %3
  br i1 %10, label %12, label %11, !prof !2

11:                                               ; preds = %7, %1
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #6, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #6, !srcloc !6
  unreachable

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %5, i64 0, i32 3, i64 %3
  %14 = load i32, i32* %13, align 4
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i32 @_ZN18CBC_EncoderContext10getCurrentEv(%class.CBC_EncoderContext* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %4, align 8
  %6 = icmp eq %"class.fxcrt::StringDataTemplate"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %5, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %9, %3
  br i1 %10, label %12, label %11, !prof !2

11:                                               ; preds = %7, %1
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #6, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #6, !srcloc !6
  unreachable

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %5, i64 0, i32 3, i64 %3
  %14 = load i32, i32* %13, align 4
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CBC_EncoderContext14writeCodewordsERKN5fxcrt10WideStringE(%class.CBC_EncoderContext*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %0, i64 0, i32 1
  %4 = tail call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"* %3, %"class.fxcrt::WideString"* dereferenceable(8) %1) #6
  ret void
}

declare dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLERKS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CBC_EncoderContext13writeCodewordEw(%class.CBC_EncoderContext*, i32 signext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %0, i64 0, i32 1
  %4 = tail call dereferenceable(8) %"class.fxcrt::WideString"* @_ZN5fxcrt10WideStringpLEw(%"class.fxcrt::WideString"* %3, i32 signext %1) #6
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN18CBC_EncoderContext16getCodewordCountEv(%class.CBC_EncoderContext* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %2, align 8
  %4 = icmp eq %"class.fxcrt::StringDataTemplate"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %3, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i64 [ %7, %5 ], [ 0, %1 ]
  ret i64 %9
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN18CBC_EncoderContext19SignalEncoderChangeEN20CBC_HighLevelEncoder8EncodingE(%class.CBC_EncoderContext* nocapture, i8 signext) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %0, i64 0, i32 3
  store i8 %1, i8* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN18CBC_EncoderContext18ResetEncoderSignalEv(%class.CBC_EncoderContext* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %0, i64 0, i32 3
  store i8 -1, i8* %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN18CBC_EncoderContext17hasMoreCharactersEv(%class.CBC_EncoderContext* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %4, align 8
  %6 = icmp eq %"class.fxcrt::StringDataTemplate"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %5, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  br label %10

10:                                               ; preds = %1, %7
  %11 = phi i64 [ %9, %7 ], [ 0, %1 ]
  %12 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %0, i64 0, i32 7
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = icmp ult i64 %3, %14
  ret i1 %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN18CBC_EncoderContext24getTotalMessageCharCountEv(%class.CBC_EncoderContext* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %2, align 8
  %4 = icmp eq %"class.fxcrt::StringDataTemplate"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %3, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i64 [ %7, %5 ], [ 0, %1 ]
  %10 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %0, i64 0, i32 7
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  ret i64 %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN18CBC_EncoderContext22getRemainingCharactersEv(%class.CBC_EncoderContext* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %2, align 8
  %4 = icmp eq %"class.fxcrt::StringDataTemplate"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %3, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i64 [ %7, %5 ], [ 0, %1 ]
  %10 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %0, i64 0, i32 7
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  ret i64 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN18CBC_EncoderContext16UpdateSymbolInfoEv(%class.CBC_EncoderContext* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %2, align 8
  %4 = icmp eq %"class.fxcrt::StringDataTemplate"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %3, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i64 [ %7, %5 ], [ 0, %1 ]
  %10 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %0, i64 0, i32 4, i32 0
  %11 = load %class.CBC_SymbolInfo*, %class.CBC_SymbolInfo** %10, align 8
  %12 = icmp eq %class.CBC_SymbolInfo* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %class.CBC_SymbolInfo, %class.CBC_SymbolInfo* %11, i64 0, i32 1
  %15 = load %"struct.CBC_SymbolInfo::Data"*, %"struct.CBC_SymbolInfo::Data"** %14, align 8
  %16 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %15, i64 0, i32 0
  %17 = load i16, i16* %16, align 2
  %18 = sext i16 %17 to i64
  %19 = icmp ugt i64 %9, %18
  br i1 %19, label %20, label %26

20:                                               ; preds = %13, %8
  %21 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %0, i64 0, i32 5
  %22 = load i8, i8* %21, align 8, !range !7
  %23 = icmp ne i8 %22, 0
  %24 = tail call %class.CBC_SymbolInfo* @_ZN14CBC_SymbolInfo6LookupEmb(i64 %9, i1 zeroext %23) #6
  store %class.CBC_SymbolInfo* %24, %class.CBC_SymbolInfo** %10, align 8
  %25 = icmp eq %class.CBC_SymbolInfo* %24, null
  br i1 %25, label %27, label %26

26:                                               ; preds = %20, %13
  br label %27

27:                                               ; preds = %20, %26
  %28 = phi i1 [ true, %26 ], [ false, %20 ]
  ret i1 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN18CBC_EncoderContext16UpdateSymbolInfoEm(%class.CBC_EncoderContext* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %0, i64 0, i32 4, i32 0
  %4 = load %class.CBC_SymbolInfo*, %class.CBC_SymbolInfo** %3, align 8
  %5 = icmp eq %class.CBC_SymbolInfo* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.CBC_SymbolInfo, %class.CBC_SymbolInfo* %4, i64 0, i32 1
  %8 = load %"struct.CBC_SymbolInfo::Data"*, %"struct.CBC_SymbolInfo::Data"** %7, align 8
  %9 = getelementptr inbounds %"struct.CBC_SymbolInfo::Data", %"struct.CBC_SymbolInfo::Data"* %8, i64 0, i32 0
  %10 = load i16, i16* %9, align 2
  %11 = sext i16 %10 to i64
  %12 = icmp ult i64 %11, %1
  br i1 %12, label %13, label %19

13:                                               ; preds = %2, %6
  %14 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %0, i64 0, i32 5
  %15 = load i8, i8* %14, align 8, !range !7
  %16 = icmp ne i8 %15, 0
  %17 = tail call %class.CBC_SymbolInfo* @_ZN14CBC_SymbolInfo6LookupEmb(i64 %1, i1 zeroext %16) #6
  store %class.CBC_SymbolInfo* %17, %class.CBC_SymbolInfo** %3, align 8
  %18 = icmp eq %class.CBC_SymbolInfo* %17, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %13, %6
  br label %20

20:                                               ; preds = %13, %19
  %21 = phi i1 [ true, %19 ], [ false, %13 ]
  ret i1 %21
}

declare %class.CBC_SymbolInfo* @_ZN14CBC_SymbolInfo6LookupEmb(i64, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN18CBC_EncoderContext15resetSymbolInfoEv(%class.CBC_EncoderContext* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.CBC_EncoderContext, %class.CBC_EncoderContext* %0, i64 0, i32 5
  store i8 1, i8* %2, align 8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i32 -2143832321}
!4 = !{i32 -2143832300}
!5 = !{i32 -2143845804}
!6 = !{i32 -2143845783}
!7 = !{i8 0, i8 2}
