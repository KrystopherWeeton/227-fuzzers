; ModuleID = '../../third_party/libaddressinput/src/cpp/src/ondemand_supplier.cc'
source_filename = "../../third_party/libaddressinput/src/cpp/src/ondemand_supplier.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.i18n::addressinput::OndemandSupplier" = type { %"class.i18n::addressinput::Supplier", %"class.std::__1::unique_ptr", %"class.std::__1::map" }
%"class.i18n::addressinput::Supplier" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.i18n::addressinput::Retriever"* }
%"class.i18n::addressinput::Retriever" = type { %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.4" }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.i18n::addressinput::Source"* }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.i18n::addressinput::ValidatingStorage"* }
%"class.i18n::addressinput::ValidatingStorage" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.13", %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { i64 }
%"class.i18n::addressinput::Source" = type opaque
%"class.i18n::addressinput::Storage" = type opaque
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.std::__1::basic_string", %"class.i18n::addressinput::Rule"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.i18n::addressinput::Rule" = type { %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector.29", %"class.std::__1::vector.36", %"class.std::__1::vector.36", %"class.std::__1::unique_ptr.43", %"class.std::__1::basic_string", i32, i32, i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.i18n::addressinput::FormatElement"*, %"class.i18n::addressinput::FormatElement"*, %"class.std::__1::__compressed_pair.24" }
%"class.i18n::addressinput::FormatElement" = type opaque
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.i18n::addressinput::FormatElement"* }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { i32*, i32*, %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { i32* }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.i18n::addressinput::RE2ptr"* }
%"struct.i18n::addressinput::RE2ptr" = type opaque
%"class.i18n::addressinput::LookupKey" = type { %"class.std::__1::map.49", %"class.std::__1::basic_string" }
%"class.std::__1::map.49" = type { %"class.std::__1::__tree.50" }
%"class.std::__1::__tree.50" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.51", %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.i18n::addressinput::Callback" = type opaque
%"class.i18n::addressinput::OndemandSupplyTask" = type <{ %"struct.i18n::addressinput::Supplier::RuleHierarchy", %"class.std::__1::set", %"class.i18n::addressinput::LookupKey"*, %"class.std::__1::map"*, %"class.i18n::addressinput::Callback"*, %"class.std::__1::unique_ptr.67", i8, [7 x i8] }>
%"struct.i18n::addressinput::Supplier::RuleHierarchy" = type { [4 x %"class.i18n::addressinput::Rule"*] }
%"class.std::__1::set" = type { %"class.std::__1::__tree.60" }
%"class.std::__1::__tree.60" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.i18n::addressinput::Callback.70"* }
%"class.i18n::addressinput::Callback.70" = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPKN4i18n12addressinput4RuleEEENS_19__map_value_compareIS7_SD_NS_4lessIS7_EELb1EEENS5_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPKN4i18n12addressinput4RuleEEENS_19__map_value_compareIS7_SD_NS_4lessIS7_EELb1EEENS5_ISD_EEE4findIS7_EENS_15__tree_iteratorISD_PNS_11__tree_nodeISD_PvEElEERKT_ = comdat any

@_ZTVN4i18n12addressinput16OndemandSupplierE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.i18n::addressinput::OndemandSupplier"*)* @_ZN4i18n12addressinput16OndemandSupplierD2Ev to i8*), i8* bitcast (void (%"class.i18n::addressinput::OndemandSupplier"*)* @_ZN4i18n12addressinput16OndemandSupplierD0Ev to i8*), i8* bitcast (void (%"class.i18n::addressinput::OndemandSupplier"*, %"class.i18n::addressinput::LookupKey"*, %"class.i18n::addressinput::Callback"*)* @_ZN4i18n12addressinput16OndemandSupplier6SupplyERKNS0_9LookupKeyERKNS0_8CallbackIS4_RKNS0_8Supplier13RuleHierarchyEEE to i8*), i8* bitcast (void (%"class.i18n::addressinput::OndemandSupplier"*, %"class.i18n::addressinput::LookupKey"*, %"class.i18n::addressinput::Callback"*)* @_ZN4i18n12addressinput16OndemandSupplier14SupplyGloballyERKNS0_9LookupKeyERKNS0_8CallbackIS4_RKNS0_8Supplier13RuleHierarchyEEE to i8*), i8* bitcast (i64 (%"class.i18n::addressinput::OndemandSupplier"*, %"class.std::__1::basic_string"*)* @_ZNK4i18n12addressinput16OndemandSupplier18GetLoadedRuleDepthERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE to i8*)] }, align 8

@_ZN4i18n12addressinput16OndemandSupplierC1EPKNS0_6SourceEPNS0_7StorageE = hidden unnamed_addr alias void (%"class.i18n::addressinput::OndemandSupplier"*, %"class.i18n::addressinput::Source"*, %"class.i18n::addressinput::Storage"*), void (%"class.i18n::addressinput::OndemandSupplier"*, %"class.i18n::addressinput::Source"*, %"class.i18n::addressinput::Storage"*)* @_ZN4i18n12addressinput16OndemandSupplierC2EPKNS0_6SourceEPNS0_7StorageE
@_ZN4i18n12addressinput16OndemandSupplierD1Ev = hidden unnamed_addr alias void (%"class.i18n::addressinput::OndemandSupplier"*), void (%"class.i18n::addressinput::OndemandSupplier"*)* @_ZN4i18n12addressinput16OndemandSupplierD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4i18n12addressinput16OndemandSupplierC2EPKNS0_6SourceEPNS0_7StorageE(%"class.i18n::addressinput::OndemandSupplier"*, %"class.i18n::addressinput::Source"*, %"class.i18n::addressinput::Storage"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.i18n::addressinput::OndemandSupplier", %"class.i18n::addressinput::OndemandSupplier"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4i18n12addressinput16OndemandSupplierE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.i18n::addressinput::OndemandSupplier", %"class.i18n::addressinput::OndemandSupplier"* %0, i64 0, i32 1
  %6 = tail call i8* @_Znwm(i64 16) #8
  %7 = bitcast i8* %6 to %"class.i18n::addressinput::Retriever"*
  tail call void @_ZN4i18n12addressinput9RetrieverC1EPKNS0_6SourceEPNS0_7StorageE(%"class.i18n::addressinput::Retriever"* nonnull %7, %"class.i18n::addressinput::Source"* %1, %"class.i18n::addressinput::Storage"* %2) #9
  %8 = ptrtoint i8* %6 to i64
  %9 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %"class.i18n::addressinput::OndemandSupplier", %"class.i18n::addressinput::OndemandSupplier"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.i18n::addressinput::OndemandSupplier", %"class.i18n::addressinput::OndemandSupplier"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %12 = getelementptr inbounds %"class.i18n::addressinput::OndemandSupplier", %"class.i18n::addressinput::OndemandSupplier"* %0, i64 0, i32 2, i32 0, i32 0
  %13 = bitcast %"class.std::__1::__tree_node_base"** %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %11, %"class.std::__1::__tree_end_node"** %12, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

declare void @_ZN4i18n12addressinput9RetrieverC1EPKNS0_6SourceEPNS0_7StorageE(%"class.i18n::addressinput::Retriever"*, %"class.i18n::addressinput::Source"*, %"class.i18n::addressinput::Storage"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4i18n12addressinput16OndemandSupplierD2Ev(%"class.i18n::addressinput::OndemandSupplier"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.i18n::addressinput::OndemandSupplier", %"class.i18n::addressinput::OndemandSupplier"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4i18n12addressinput16OndemandSupplierE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.i18n::addressinput::OndemandSupplier", %"class.i18n::addressinput::OndemandSupplier"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %4, align 8
  %6 = getelementptr inbounds %"class.i18n::addressinput::OndemandSupplier", %"class.i18n::addressinput::OndemandSupplier"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %7 = icmp eq %"class.std::__1::__tree_end_node"* %5, %6
  br i1 %7, label %8, label %18

8:                                                ; preds = %54, %1
  %9 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %3, i64 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node"**
  %11 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPKN4i18n12addressinput4RuleEEENS_19__map_value_compareIS7_SD_NS_4lessIS7_EELb1EEENS5_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE(%"class.std::__1::__tree"* %9, %"class.std::__1::__tree_node"* %11) #9
  %12 = getelementptr inbounds %"class.i18n::addressinput::OndemandSupplier", %"class.i18n::addressinput::OndemandSupplier"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.i18n::addressinput::Retriever"*, %"class.i18n::addressinput::Retriever"** %12, align 8
  store %"class.i18n::addressinput::Retriever"* null, %"class.i18n::addressinput::Retriever"** %12, align 8
  %14 = icmp eq %"class.i18n::addressinput::Retriever"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  tail call void @_ZN4i18n12addressinput9RetrieverD1Ev(%"class.i18n::addressinput::Retriever"* nonnull %13) #9
  %16 = bitcast %"class.i18n::addressinput::Retriever"* %13 to i8*
  tail call void @_ZdlPv(i8* %16) #8
  br label %17

17:                                               ; preds = %8, %15
  ret void

18:                                               ; preds = %1, %54
  %19 = phi %"class.std::__1::__tree_end_node"* [ %55, %54 ], [ %5, %1 ]
  %20 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 7
  %21 = bitcast %"class.std::__1::__tree_end_node"* %20 to %"class.i18n::addressinput::Rule"**
  %22 = load %"class.i18n::addressinput::Rule"*, %"class.i18n::addressinput::Rule"** %21, align 8
  %23 = icmp eq %"class.i18n::addressinput::Rule"* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %18
  tail call void @_ZN4i18n12addressinput4RuleD1Ev(%"class.i18n::addressinput::Rule"* nonnull %22) #9
  %25 = bitcast %"class.i18n::addressinput::Rule"* %22 to i8*
  tail call void @_ZdlPv(i8* %25) #8
  br label %26

26:                                               ; preds = %24, %18
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 1, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, null
  br i1 %29, label %30, label %38

30:                                               ; preds = %26
  %31 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 2
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_end_node"**
  %34 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 0, i32 0
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, %31
  br i1 %37, label %54, label %45

38:                                               ; preds = %26, %38
  %39 = phi %"class.std::__1::__tree_node_base"* [ %41, %38 ], [ %28, %26 ]
  %40 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node_base"* %41, null
  br i1 %42, label %43, label %38

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %39, i64 0, i32 0
  br label %54

45:                                               ; preds = %30, %45
  %46 = phi %"class.std::__1::__tree_end_node"** [ %49, %45 ], [ %33, %30 ]
  %47 = bitcast %"class.std::__1::__tree_end_node"** %46 to %"class.std::__1::__tree_node_base"**
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %48, i64 0, i32 2
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %49, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  %52 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %51, align 8
  %53 = icmp eq %"class.std::__1::__tree_node_base"* %52, %48
  br i1 %53, label %54, label %45

54:                                               ; preds = %45, %30, %43
  %55 = phi %"class.std::__1::__tree_end_node"* [ %44, %43 ], [ %34, %30 ], [ %50, %45 ]
  %56 = icmp eq %"class.std::__1::__tree_end_node"* %55, %6
  br i1 %56, label %8, label %18
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind
declare void @_ZN4i18n12addressinput4RuleD1Ev(%"class.i18n::addressinput::Rule"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4i18n12addressinput16OndemandSupplierD0Ev(%"class.i18n::addressinput::OndemandSupplier"*) unnamed_addr #0 align 2 {
  tail call void @_ZN4i18n12addressinput16OndemandSupplierD2Ev(%"class.i18n::addressinput::OndemandSupplier"* %0) #9
  %2 = bitcast %"class.i18n::addressinput::OndemandSupplier"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4i18n12addressinput16OndemandSupplier14SupplyGloballyERKNS0_9LookupKeyERKNS0_8CallbackIS4_RKNS0_8Supplier13RuleHierarchyEEE(%"class.i18n::addressinput::OndemandSupplier"*, %"class.i18n::addressinput::LookupKey"* dereferenceable(48), %"class.i18n::addressinput::Callback"*) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.i18n::addressinput::OndemandSupplier"* %0 to void (%"class.i18n::addressinput::OndemandSupplier"*, %"class.i18n::addressinput::LookupKey"*, %"class.i18n::addressinput::Callback"*)***
  %5 = load void (%"class.i18n::addressinput::OndemandSupplier"*, %"class.i18n::addressinput::LookupKey"*, %"class.i18n::addressinput::Callback"*)**, void (%"class.i18n::addressinput::OndemandSupplier"*, %"class.i18n::addressinput::LookupKey"*, %"class.i18n::addressinput::Callback"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.i18n::addressinput::OndemandSupplier"*, %"class.i18n::addressinput::LookupKey"*, %"class.i18n::addressinput::Callback"*)*, void (%"class.i18n::addressinput::OndemandSupplier"*, %"class.i18n::addressinput::LookupKey"*, %"class.i18n::addressinput::Callback"*)** %5, i64 2
  %7 = load void (%"class.i18n::addressinput::OndemandSupplier"*, %"class.i18n::addressinput::LookupKey"*, %"class.i18n::addressinput::Callback"*)*, void (%"class.i18n::addressinput::OndemandSupplier"*, %"class.i18n::addressinput::LookupKey"*, %"class.i18n::addressinput::Callback"*)** %6, align 8
  tail call void %7(%"class.i18n::addressinput::OndemandSupplier"* %0, %"class.i18n::addressinput::LookupKey"* dereferenceable(48) %1, %"class.i18n::addressinput::Callback"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4i18n12addressinput16OndemandSupplier6SupplyERKNS0_9LookupKeyERKNS0_8CallbackIS4_RKNS0_8Supplier13RuleHierarchyEEE(%"class.i18n::addressinput::OndemandSupplier"*, %"class.i18n::addressinput::LookupKey"* dereferenceable(48), %"class.i18n::addressinput::Callback"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = tail call i8* @_Znwm(i64 96) #8
  %6 = bitcast i8* %5 to %"class.i18n::addressinput::OndemandSupplyTask"*
  %7 = getelementptr inbounds %"class.i18n::addressinput::OndemandSupplier", %"class.i18n::addressinput::OndemandSupplier"* %0, i64 0, i32 2
  tail call void @_ZN4i18n12addressinput18OndemandSupplyTaskC1ERKNS0_9LookupKeyEPNSt3__13mapINS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEPKNS0_4RuleENS5_4lessISC_EENSA_INS5_4pairIKSC_SF_EEEEEERKNS0_8CallbackIS4_RKNS0_8Supplier13RuleHierarchyEEE(%"class.i18n::addressinput::OndemandSupplyTask"* nonnull %6, %"class.i18n::addressinput::LookupKey"* dereferenceable(48) %1, %"class.std::__1::map"* %7, %"class.i18n::addressinput::Callback"* %2) #9
  %8 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4i18n12addressinput9LookupKey13GetRegionCodeEv(%"class.i18n::addressinput::LookupKey"* %1) #9
  %9 = tail call zeroext i1 @_ZN4i18n12addressinput19RegionDataConstants11IsSupportedERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %8) #9
  br i1 %9, label %10, label %43

10:                                               ; preds = %3
  %11 = tail call i64 @_ZNK4i18n12addressinput9LookupKey8GetDepthEv(%"class.i18n::addressinput::LookupKey"* %1) #9
  %12 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4i18n12addressinput9LookupKey13GetRegionCodeEv(%"class.i18n::addressinput::LookupKey"* %1) #9
  %13 = tail call i64 @_ZN4i18n12addressinput19RegionDataConstants20GetMaxLookupKeyDepthERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %12) #9
  %14 = icmp ult i64 %13, %11
  %15 = select i1 %14, i64 %13, i64 %11
  %16 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %7, i64 0, i32 0
  %19 = getelementptr inbounds %"class.i18n::addressinput::OndemandSupplier", %"class.i18n::addressinput::OndemandSupplier"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %20 = bitcast i8* %5 to [4 x %"class.i18n::addressinput::Rule"*]*
  %21 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  br label %24

24:                                               ; preds = %10, %40
  %25 = phi i64 [ 0, %10 ], [ %41, %40 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 24, i1 false)
  call void @_ZNK4i18n12addressinput9LookupKey11ToKeyStringEm(%"class.std::__1::basic_string"* nonnull sret %4, %"class.i18n::addressinput::LookupKey"* %1, i64 %25) #9
  %26 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPKN4i18n12addressinput4RuleEEENS_19__map_value_compareIS7_SD_NS_4lessIS7_EELb1EEENS5_ISD_EEE4findIS7_EENS_15__tree_iteratorISD_PNS_11__tree_nodeISD_PvEElEERKT_(%"class.std::__1::__tree"* %18, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #9
  %27 = icmp eq %"class.std::__1::__tree_end_node"* %26, %19
  br i1 %27, label %34, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 7
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds [4 x %"class.i18n::addressinput::Rule"*], [4 x %"class.i18n::addressinput::Rule"*]* %20, i64 0, i64 %25
  %33 = bitcast %"class.i18n::addressinput::Rule"** %32 to i64*
  store i64 %31, i64* %33, align 8
  br label %35

34:                                               ; preds = %24
  call void @_ZN4i18n12addressinput18OndemandSupplyTask5QueueERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.i18n::addressinput::OndemandSupplyTask"* nonnull %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #9
  br label %35

35:                                               ; preds = %34, %28
  %36 = load i8, i8* %22, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %35
  %39 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %39) #8
  br label %40

40:                                               ; preds = %35, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #9
  %41 = add i64 %25, 1
  %42 = icmp ugt i64 %41, %15
  br i1 %42, label %43, label %24

43:                                               ; preds = %40, %3
  %44 = getelementptr inbounds %"class.i18n::addressinput::OndemandSupplier", %"class.i18n::addressinput::OndemandSupplier"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %45 = load %"class.i18n::addressinput::Retriever"*, %"class.i18n::addressinput::Retriever"** %44, align 8
  call void @_ZN4i18n12addressinput18OndemandSupplyTask8RetrieveERKNS0_9RetrieverE(%"class.i18n::addressinput::OndemandSupplyTask"* nonnull %6, %"class.i18n::addressinput::Retriever"* dereferenceable(16) %45) #9
  ret void
}

declare void @_ZN4i18n12addressinput18OndemandSupplyTaskC1ERKNS0_9LookupKeyEPNSt3__13mapINS5_12basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEPKNS0_4RuleENS5_4lessISC_EENSA_INS5_4pairIKSC_SF_EEEEEERKNS0_8CallbackIS4_RKNS0_8Supplier13RuleHierarchyEEE(%"class.i18n::addressinput::OndemandSupplyTask"*, %"class.i18n::addressinput::LookupKey"* dereferenceable(48), %"class.std::__1::map"*, %"class.i18n::addressinput::Callback"*) unnamed_addr #2

declare zeroext i1 @_ZN4i18n12addressinput19RegionDataConstants11IsSupportedERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4i18n12addressinput9LookupKey13GetRegionCodeEv(%"class.i18n::addressinput::LookupKey"*) local_unnamed_addr #2

declare i64 @_ZNK4i18n12addressinput9LookupKey8GetDepthEv(%"class.i18n::addressinput::LookupKey"*) local_unnamed_addr #2

declare i64 @_ZN4i18n12addressinput19RegionDataConstants20GetMaxLookupKeyDepthERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZNK4i18n12addressinput9LookupKey11ToKeyStringEm(%"class.std::__1::basic_string"* sret, %"class.i18n::addressinput::LookupKey"*, i64) local_unnamed_addr #2

declare void @_ZN4i18n12addressinput18OndemandSupplyTask5QueueERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.i18n::addressinput::OndemandSupplyTask"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN4i18n12addressinput18OndemandSupplyTask8RetrieveERKNS0_9RetrieverE(%"class.i18n::addressinput::OndemandSupplyTask"*, %"class.i18n::addressinput::Retriever"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK4i18n12addressinput16OndemandSupplier18GetLoadedRuleDepthERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.i18n::addressinput::OndemandSupplier"* nocapture readnone, %"class.std::__1::basic_string"* nocapture readnone dereferenceable(24)) unnamed_addr #6 align 2 {
  ret i64 4
}

; Function Attrs: nounwind
declare void @_ZN4i18n12addressinput9RetrieverD1Ev(%"class.i18n::addressinput::Retriever"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPKN4i18n12addressinput4RuleEEENS_19__map_value_compareIS7_SD_NS_4lessIS7_EELb1EEENS5_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPKN4i18n12addressinput4RuleEEENS_19__map_value_compareIS7_SD_NS_4lessIS7_EELb1EEENS5_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #9
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPKN4i18n12addressinput4RuleEEENS_19__map_value_compareIS7_SD_NS_4lessIS7_EELb1EEENS5_ISD_EEE7destroyEPNS_11__tree_nodeISD_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #9
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0
  %11 = bitcast %"struct.std::__1::pair"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #8
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #8
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPKN4i18n12addressinput4RuleEEENS_19__map_value_compareIS7_SD_NS_4lessIS7_EELb1EEENS5_ISD_EEE4findIS7_EENS_15__tree_iteratorISD_PNS_11__tree_nodeISD_PvEElEERKT_(%"class.std::__1::__tree"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %84, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %46, %7
  %21 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %54, %46 ]
  %22 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %55, %46 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1
  %24 = bitcast %"struct.std::__1::__value_type"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %15, %31
  %33 = select i1 %32, i64 %15, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"struct.std::__1::__value_type"* %23 to i8*
  %39 = select i1 %27, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %39, i8* %19, i64 %33) #9
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %35, %20
  %43 = icmp ult i64 %31, %15
  %44 = zext i1 %32 to i32
  %45 = select i1 %43, i32 -1, i32 %44
  br label %46

46:                                               ; preds = %42, %35
  %47 = phi i32 [ %45, %42 ], [ %40, %35 ]
  %48 = icmp slt i32 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.std::__1::__tree_node"**
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::__tree_node"* %22 to %"class.std::__1::__tree_node"**
  %53 = select i1 %48, %"class.std::__1::__tree_node"** %50, %"class.std::__1::__tree_node"** %52
  %54 = select i1 %48, %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"* %51
  %55 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %53, align 8
  %56 = icmp eq %"class.std::__1::__tree_node"* %55, null
  br i1 %56, label %57, label %20

57:                                               ; preds = %46
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %54, %3
  br i1 %58, label %84, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 4
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %63 to i64
  %69 = select i1 %64, i64 %67, i64 %68
  %70 = icmp ult i64 %69, %15
  %71 = select i1 %70, i64 %69, i64 %15
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %59
  %74 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8*
  %77 = select i1 %64, i8* %75, i8* %76
  %78 = tail call i32 @memcmp(i8* %19, i8* %77, i64 %71) #9
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %73, %59
  %81 = icmp ult i64 %15, %69
  br i1 %81, label %84, label %85

82:                                               ; preds = %73
  %83 = icmp slt i32 %78, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %57, %80, %2, %82
  br label %85

85:                                               ; preds = %80, %82, %84
  %86 = phi %"class.std::__1::__tree_end_node"* [ %3, %84 ], [ %54, %82 ], [ %54, %80 ]
  ret %"class.std::__1::__tree_end_node"* %86
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
