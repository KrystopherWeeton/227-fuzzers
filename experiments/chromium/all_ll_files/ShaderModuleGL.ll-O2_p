; ModuleID = '../../third_party/dawn/src/dawn_native/opengl/ShaderModuleGL.cpp'
source_filename = "../../third_party/dawn/src/dawn_native/opengl/ShaderModuleGL.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.tint::Program" = type <{ %"class.tint::ProgramID", [4 x i8], %"class.tint::sem::Manager", %"class.tint::BlockAllocator.129", %"class.tint::BlockAllocator.138", %"class.tint::ast::Module"*, %"class.tint::sem::Info", %"class.tint::SymbolTable", %"class.tint::diag::List", i8, i8, [6 x i8] }>
%"class.tint::ProgramID" = type { i32 }
%"class.tint::sem::Manager" = type { %"class.std::__1::unordered_map", %"class.tint::BlockAllocator" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.100" }
%"class.std::__1::__hash_table.100" = type <{ %"class.std::__1::unique_ptr.101", %"class.std::__1::__compressed_pair.111", %"class.std::__1::__compressed_pair.116", %"class.std::__1::__compressed_pair.118", [4 x i8] }>
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103", %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.std::__1::__hash_node_base.104"** }
%"struct.std::__1::__hash_node_base.104" = type { %"struct.std::__1::__hash_node_base.104"* }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.std::__1::__bucket_list_deallocator.106" }
%"class.std::__1::__bucket_list_deallocator.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { i64 }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"struct.std::__1::__hash_node_base.104" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { float }
%"class.tint::BlockAllocator" = type { %"class.std::__1::vector.121" }
%"class.std::__1::vector.121" = type { %"class.std::__1::__vector_base.122" }
%"class.std::__1::__vector_base.122" = type { %"class.std::__1::unique_ptr.123"*, %"class.std::__1::unique_ptr.123"*, %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::unique_ptr.123" = type opaque
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.std::__1::unique_ptr.123"* }
%"class.tint::BlockAllocator.129" = type { %"class.std::__1::vector.130" }
%"class.std::__1::vector.130" = type { %"class.std::__1::__vector_base.131" }
%"class.std::__1::__vector_base.131" = type { %"class.std::__1::unique_ptr.132"*, %"class.std::__1::unique_ptr.132"*, %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.958" }
%"class.std::__1::__compressed_pair.958" = type { %"struct.std::__1::__compressed_pair_elem.959" }
%"struct.std::__1::__compressed_pair_elem.959" = type { %"class.tint::ast::Node"* }
%"class.tint::ast::Node" = type { %"class.tint::Castable.147", %"class.tint::ProgramID", %"class.tint::Source" }
%"class.tint::Castable.147" = type { %"class.tint::Cloneable" }
%"class.tint::Cloneable" = type { %"class.tint::Castable.148" }
%"class.tint::Castable.148" = type { %"class.tint::CastableBase" }
%"class.tint::CastableBase" = type { i32 (...)** }
%"class.tint::Source" = type { %"class.tint::Source::Range", %"class.std::__1::basic_string", %"class.tint::Source::FileContent"* }
%"class.tint::Source::Range" = type { %"class.tint::Source::Location", %"class.tint::Source::Location" }
%"class.tint::Source::Location" = type { i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.tint::Source::FileContent" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.149" }
%"class.std::__1::vector.149" = type { %"class.std::__1::__vector_base.150" }
%"class.std::__1::__vector_base.150" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.std::__1::unique_ptr.132"* }
%"class.tint::BlockAllocator.138" = type { %"class.std::__1::vector.139" }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"class.std::__1::unique_ptr.141"*, %"class.std::__1::unique_ptr.141"*, %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::unique_ptr.141" = type opaque
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.std::__1::unique_ptr.141"* }
%"class.tint::ast::Module" = type { %"class.tint::Castable", %"class.std::__1::vector.156", %"class.std::__1::vector.163", %"class.tint::ast::FunctionList", %"class.std::__1::vector.175" }
%"class.tint::Castable" = type { %"class.tint::ast::Node" }
%"class.std::__1::vector.156" = type { %"class.std::__1::__vector_base.157" }
%"class.std::__1::__vector_base.157" = type { %"class.tint::ast::Node"**, %"class.tint::ast::Node"**, %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.tint::ast::Node"** }
%"class.std::__1::vector.163" = type { %"class.std::__1::__vector_base.164" }
%"class.std::__1::__vector_base.164" = type { %"class.tint::ast::NamedType"**, %"class.tint::ast::NamedType"**, %"class.std::__1::__compressed_pair.167" }
%"class.tint::ast::NamedType" = type { %"class.tint::Castable.165", %"class.tint::Symbol" }
%"class.tint::Castable.165" = type { %"class.tint::ast::Type" }
%"class.tint::ast::Type" = type { %"class.tint::Castable.166" }
%"class.tint::Castable.166" = type { %"class.tint::ast::Node" }
%"class.tint::Symbol" = type { i32, %"class.tint::ProgramID" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.tint::ast::NamedType"** }
%"class.tint::ast::FunctionList" = type { %"class.std::__1::vector.172" }
%"class.std::__1::vector.172" = type { %"class.std::__1::__vector_base.173" }
%"class.std::__1::__vector_base.173" = type { %"class.tint::ast::Function"**, %"class.tint::ast::Function"**, %"class.std::__1::__compressed_pair.201" }
%"class.tint::ast::Function" = type { %"class.tint::Castable.174", %"class.tint::Symbol", %"class.std::__1::vector.175", %"class.tint::ast::Type"*, %"class.tint::ast::BlockStatement"*, %"class.std::__1::vector.179", %"class.std::__1::vector.179" }
%"class.tint::Castable.174" = type { %"class.tint::ast::Node" }
%"class.tint::ast::BlockStatement" = type { %"class.tint::Castable.192", %"class.std::__1::vector.194" }
%"class.tint::Castable.192" = type { %"class.tint::ast::Statement" }
%"class.tint::ast::Statement" = type { %"class.tint::Castable.193" }
%"class.tint::Castable.193" = type { %"class.tint::ast::Node" }
%"class.std::__1::vector.194" = type { %"class.std::__1::__vector_base.195" }
%"class.std::__1::__vector_base.195" = type { %"class.tint::ast::Statement"**, %"class.tint::ast::Statement"**, %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.tint::ast::Statement"** }
%"class.std::__1::vector.179" = type { %"class.std::__1::__vector_base.180" }
%"class.std::__1::__vector_base.180" = type { %"class.tint::ast::Decoration"**, %"class.tint::ast::Decoration"**, %"class.std::__1::__compressed_pair.182" }
%"class.tint::ast::Decoration" = type { %"class.tint::Castable.181" }
%"class.tint::Castable.181" = type { %"class.tint::ast::Node" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.tint::ast::Decoration"** }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.tint::ast::Function"** }
%"class.std::__1::vector.175" = type { %"class.std::__1::__vector_base.176" }
%"class.std::__1::__vector_base.176" = type { %"class.tint::ast::Variable"**, %"class.tint::ast::Variable"**, %"class.std::__1::__compressed_pair.187" }
%"class.tint::ast::Variable" = type <{ %"class.tint::Castable.177", %"class.tint::Symbol", %"class.tint::ast::Type"*, i8, [7 x i8], %"class.tint::ast::Expression"*, %"class.std::__1::vector.179", i32, [4 x i8] }>
%"class.tint::Castable.177" = type { %"class.tint::ast::Node" }
%"class.tint::ast::Expression" = type { %"class.tint::Castable.178" }
%"class.tint::Castable.178" = type { %"class.tint::ast::Node" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.tint::ast::Variable"** }
%"class.tint::sem::Info" = type { %"class.std::__1::unordered_map.206" }
%"class.std::__1::unordered_map.206" = type { %"class.std::__1::__hash_table.207" }
%"class.std::__1::__hash_table.207" = type <{ %"class.std::__1::unique_ptr.208", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.223", %"class.std::__1::__compressed_pair.228", [4 x i8] }>
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210", %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"struct.std::__1::__hash_node_base.211"** }
%"struct.std::__1::__hash_node_base.211" = type { %"struct.std::__1::__hash_node_base.211"* }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.std::__1::__bucket_list_deallocator.213" }
%"class.std::__1::__bucket_list_deallocator.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.std::__1::__hash_node_base.211" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.tint::SymbolTable" = type { i32, [4 x i8], %"class.std::__1::unordered_map.234", %"class.std::__1::unordered_map.260", %"class.tint::ProgramID", [4 x i8] }
%"class.std::__1::unordered_map.234" = type { %"class.std::__1::__hash_table.235" }
%"class.std::__1::__hash_table.235" = type <{ %"class.std::__1::unique_ptr.236", %"class.std::__1::__compressed_pair.246", %"class.std::__1::__compressed_pair.251", %"class.std::__1::__compressed_pair.254", [4 x i8] }>
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238", %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base.239"** }
%"struct.std::__1::__hash_node_base.239" = type { %"struct.std::__1::__hash_node_base.239"* }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.std::__1::__bucket_list_deallocator.241" }
%"class.std::__1::__bucket_list_deallocator.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"struct.std::__1::__hash_node_base.239" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.std::__1::unordered_map.260" = type { %"class.std::__1::__hash_table.261" }
%"class.std::__1::__hash_table.261" = type <{ %"class.std::__1::unique_ptr.262", %"class.std::__1::__compressed_pair.272", %"class.std::__1::__compressed_pair.277", %"class.std::__1::__compressed_pair.280", [4 x i8] }>
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264", %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"struct.std::__1::__hash_node_base.265"** }
%"struct.std::__1::__hash_node_base.265" = type { %"struct.std::__1::__hash_node_base.265"* }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"class.std::__1::__bucket_list_deallocator.267" }
%"class.std::__1::__bucket_list_deallocator.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"struct.std::__1::__hash_node_base.265" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.tint::diag::List" = type { %"class.std::__1::vector.284", i64 }
%"class.std::__1::vector.284" = type { %"class.std::__1::__vector_base.285" }
%"class.std::__1::__vector_base.285" = type { %"class.tint::diag::Diagnostic"*, %"class.tint::diag::Diagnostic"*, %"class.std::__1::__compressed_pair.286" }
%"class.tint::diag::Diagnostic" = type { i32, %"class.tint::Source", %"class.std::__1::basic_string", i8* }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"class.tint::diag::Diagnostic"* }
%"class.std::__1::unique_ptr.347" = type { %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"class.dawn_native::ErrorData"* }
%"class.dawn_native::ErrorData" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector.350" }
%"class.std::__1::vector.350" = type { %"class.std::__1::__vector_base.351" }
%"class.std::__1::__vector_base.351" = type { %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"class.std::__1::__compressed_pair.352" }
%"struct.dawn_native::ErrorData::BacktraceRecord" = type { i8*, i8*, i32 }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"struct.dawn_native::ErrorData::BacktraceRecord"* }
%"class.std::__1::unordered_map.322" = type { %"class.std::__1::__hash_table.323" }
%"class.std::__1::__hash_table.323" = type <{ %"class.std::__1::unique_ptr.324", %"class.std::__1::__compressed_pair.334", %"class.std::__1::__compressed_pair.339", %"class.std::__1::__compressed_pair.342", [4 x i8] }>
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326", %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"struct.std::__1::__hash_node_base.327"** }
%"struct.std::__1::__hash_node_base.327" = type { %"struct.std::__1::__hash_node_base.327"* }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.std::__1::__bucket_list_deallocator.329" }
%"class.std::__1::__bucket_list_deallocator.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"struct.std::__1::__hash_node_base.327" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.std::__1::unique_ptr.586" = type { %"class.std::__1::__compressed_pair.587" }
%"class.std::__1::__compressed_pair.587" = type { %"struct.std::__1::__compressed_pair_elem.588" }
%"struct.std::__1::__compressed_pair_elem.588" = type { %"struct.spirv_cross::ObjectPoolGroup"* }
%"struct.spirv_cross::ObjectPoolGroup" = type { [14 x %"class.std::__1::unique_ptr.589"] }
%"class.std::__1::unique_ptr.589" = type { %"class.std::__1::__compressed_pair.590" }
%"class.std::__1::__compressed_pair.590" = type { %"struct.std::__1::__compressed_pair_elem.591" }
%"struct.std::__1::__compressed_pair_elem.591" = type { %"class.spirv_cross::ObjectPoolBase"* }
%"class.spirv_cross::ObjectPoolBase" = type { i32 (...)** }
%"class.std::__1::vector.300" = type { %"class.std::__1::__vector_base.301" }
%"class.std::__1::__vector_base.301" = type { i32*, i32*, %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { i32* }
%"class.spirv_cross::SmallVector" = type { %"class.spirv_cross::VectorView", i64, %"class.spirv_cross::AlignedBuffer" }
%"class.spirv_cross::VectorView" = type { %"class.spirv_cross::Variant"*, i64 }
%"class.spirv_cross::Variant" = type <{ %"struct.spirv_cross::ObjectPoolGroup"*, %"struct.spirv_cross::IVariant"*, i32, i8, [3 x i8] }>
%"struct.spirv_cross::IVariant" = type <{ i32 (...)**, %"class.spirv_cross::TypedID", [4 x i8] }>
%"class.spirv_cross::TypedID" = type { i32 }
%"class.spirv_cross::AlignedBuffer" = type { [192 x i8] }
%"class.std::__1::unordered_map.598" = type { %"class.std::__1::__hash_table.599" }
%"class.std::__1::__hash_table.599" = type <{ %"class.std::__1::unique_ptr.600", %"class.std::__1::__compressed_pair.610", %"class.std::__1::__compressed_pair.615", %"class.std::__1::__compressed_pair.619", [4 x i8] }>
%"class.std::__1::unique_ptr.600" = type { %"class.std::__1::__compressed_pair.601" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.602", %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"struct.std::__1::__hash_node_base.603"** }
%"struct.std::__1::__hash_node_base.603" = type { %"struct.std::__1::__hash_node_base.603"* }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.std::__1::__bucket_list_deallocator.605" }
%"class.std::__1::__bucket_list_deallocator.605" = type { %"class.std::__1::__compressed_pair.606" }
%"class.std::__1::__compressed_pair.606" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"struct.std::__1::__hash_node_base.603" }
%"class.std::__1::__compressed_pair.615" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.spirv_cross::SmallVector.625" = type { %"class.spirv_cross::VectorView.626", i64, %"class.spirv_cross::AlignedBuffer.627" }
%"class.spirv_cross::VectorView.626" = type { %"class.spirv_cross::TypedID"*, i64 }
%"class.spirv_cross::AlignedBuffer.627" = type { [32 x i8] }
%"class.spirv_cross::SmallVector.628" = type { %"class.spirv_cross::VectorView.629", i64, %"class.spirv_cross::AlignedBuffer.630" }
%"class.spirv_cross::VectorView.629" = type { i32*, i64 }
%"class.spirv_cross::AlignedBuffer.630" = type { [32 x i8] }
%"class.spirv_cross::SmallVector.634" = type { %"class.spirv_cross::VectorView.635", i64, %"class.spirv_cross::AlignedBuffer.636" }
%"class.spirv_cross::VectorView.635" = type { i8*, i64 }
%"class.spirv_cross::AlignedBuffer.636" = type { [8 x i8] }
%"class.std::__1::unordered_map.637" = type { %"class.std::__1::__hash_table.638" }
%"class.std::__1::__hash_table.638" = type <{ %"class.std::__1::unique_ptr.639", %"class.std::__1::__compressed_pair.649", %"class.std::__1::__compressed_pair.654", %"class.std::__1::__compressed_pair.658", [4 x i8] }>
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641", %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"struct.std::__1::__hash_node_base.642"** }
%"struct.std::__1::__hash_node_base.642" = type { %"struct.std::__1::__hash_node_base.642"* }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"class.std::__1::__bucket_list_deallocator.644" }
%"class.std::__1::__bucket_list_deallocator.644" = type { %"class.std::__1::__compressed_pair.645" }
%"class.std::__1::__compressed_pair.645" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.649" = type { %"struct.std::__1::__compressed_pair_elem.650" }
%"struct.std::__1::__compressed_pair_elem.650" = type { %"struct.std::__1::__hash_node_base.642" }
%"class.std::__1::__compressed_pair.654" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.658" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.std::__1::unordered_map.664" = type { %"class.std::__1::__hash_table.665" }
%"class.std::__1::__hash_table.665" = type <{ %"class.std::__1::unique_ptr.666", %"class.std::__1::__compressed_pair.676", %"class.std::__1::__compressed_pair.681", %"class.std::__1::__compressed_pair.685", [4 x i8] }>
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668", %"struct.std::__1::__compressed_pair_elem.670" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"struct.std::__1::__hash_node_base.669"** }
%"struct.std::__1::__hash_node_base.669" = type { %"struct.std::__1::__hash_node_base.669"* }
%"struct.std::__1::__compressed_pair_elem.670" = type { %"class.std::__1::__bucket_list_deallocator.671" }
%"class.std::__1::__bucket_list_deallocator.671" = type { %"class.std::__1::__compressed_pair.672" }
%"class.std::__1::__compressed_pair.672" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.676" = type { %"struct.std::__1::__compressed_pair_elem.677" }
%"struct.std::__1::__compressed_pair_elem.677" = type { %"struct.std::__1::__hash_node_base.669" }
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.685" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.spirv_cross::TypedID.691" = type { i32 }
%"struct.spirv_cross::ParsedIR::Source" = type <{ i32, i8, i8, i8, i8 }>
%"struct.spirv_cross::SPIRFunction" = type <{ %"struct.spirv_cross::IVariant.base", %"class.spirv_cross::TypedID.695", %"class.spirv_cross::TypedID.695", [4 x i8], %"class.spirv_cross::SmallVector.696", %"class.spirv_cross::SmallVector.696", %"class.spirv_cross::SmallVector.699", %"class.spirv_cross::TypedID.703", [4 x i8], %"class.spirv_cross::SmallVector.704", %"class.spirv_cross::SmallVector.707", %"struct.spirv_cross::SPIRFunction::EntryLine", %"class.spirv_cross::SmallVector.710", %"class.spirv_cross::SmallVector.710", %"class.spirv_cross::SmallVector.625", i8, i8, i8, [5 x i8] }>
%"struct.spirv_cross::IVariant.base" = type <{ i32 (...)**, %"class.spirv_cross::TypedID" }>
%"class.spirv_cross::TypedID.695" = type { i32 }
%"class.spirv_cross::SmallVector.696" = type { %"class.spirv_cross::VectorView.697", i64, %"class.spirv_cross::AlignedBuffer.698" }
%"class.spirv_cross::VectorView.697" = type { %"struct.spirv_cross::SPIRFunction::Parameter"*, i64 }
%"struct.spirv_cross::SPIRFunction::Parameter" = type <{ %"class.spirv_cross::TypedID.695", %"class.spirv_cross::TypedID", i32, i32, i8, [3 x i8] }>
%"class.spirv_cross::AlignedBuffer.698" = type { [160 x i8] }
%"class.spirv_cross::SmallVector.699" = type { %"class.spirv_cross::VectorView.700", i64, %"class.spirv_cross::AlignedBuffer.702" }
%"class.spirv_cross::VectorView.700" = type { %"class.spirv_cross::TypedID.701"*, i64 }
%"class.spirv_cross::TypedID.701" = type { i32 }
%"class.spirv_cross::AlignedBuffer.702" = type { [32 x i8] }
%"class.spirv_cross::TypedID.703" = type { i32 }
%"class.spirv_cross::SmallVector.704" = type { %"class.spirv_cross::VectorView.705", i64, %"class.spirv_cross::AlignedBuffer.706" }
%"class.spirv_cross::VectorView.705" = type { %"class.spirv_cross::TypedID.703"*, i64 }
%"class.spirv_cross::AlignedBuffer.706" = type { [32 x i8] }
%"class.spirv_cross::SmallVector.707" = type { %"class.spirv_cross::VectorView.708", i64, %"class.spirv_cross::AlignedBuffer.709" }
%"class.spirv_cross::VectorView.708" = type { %"struct.spirv_cross::SPIRFunction::CombinedImageSamplerParameter"*, i64 }
%"struct.spirv_cross::SPIRFunction::CombinedImageSamplerParameter" = type <{ %"class.spirv_cross::TypedID.701", %"class.spirv_cross::TypedID.701", %"class.spirv_cross::TypedID.701", i8, i8, i8, i8 }>
%"class.spirv_cross::AlignedBuffer.709" = type { [128 x i8] }
%"struct.spirv_cross::SPIRFunction::EntryLine" = type { i32, i32 }
%"class.spirv_cross::SmallVector.710" = type <{ %"class.spirv_cross::VectorView.711", i64, %"class.spirv_cross::AlignedBuffer.712", [7 x i8] }>
%"class.spirv_cross::VectorView.711" = type { %"class.std::__1::function"*, i64 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func.956" }
%"class.std::__1::__function::__policy_func.956" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.957", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker.957" = type { void (%"union.std::__1::__function::__policy_storage"*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.spirv_cross::AlignedBuffer.712" = type { i8 }
%"class.std::__1::unordered_set.726" = type { %"class.std::__1::__hash_table.727" }
%"class.std::__1::__hash_table.727" = type <{ %"class.std::__1::unique_ptr.728", %"class.std::__1::__compressed_pair.738", %"class.std::__1::__compressed_pair.743", %"class.std::__1::__compressed_pair.746", [4 x i8] }>
%"class.std::__1::unique_ptr.728" = type { %"class.std::__1::__compressed_pair.729" }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.730", %"struct.std::__1::__compressed_pair_elem.732" }
%"struct.std::__1::__compressed_pair_elem.730" = type { %"struct.std::__1::__hash_node_base.731"** }
%"struct.std::__1::__hash_node_base.731" = type { %"struct.std::__1::__hash_node_base.731"* }
%"struct.std::__1::__compressed_pair_elem.732" = type { %"class.std::__1::__bucket_list_deallocator.733" }
%"class.std::__1::__bucket_list_deallocator.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.738" = type { %"struct.std::__1::__compressed_pair_elem.739" }
%"struct.std::__1::__compressed_pair_elem.739" = type { %"struct.std::__1::__hash_node_base.731" }
%"class.std::__1::__compressed_pair.743" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.spirv_cross::SmallVector.751" = type { %"class.spirv_cross::VectorView.752", i64, %"class.spirv_cross::AlignedBuffer.753" }
%"class.spirv_cross::VectorView.752" = type { %"struct.spirv_cross::CombinedImageSampler"*, i64 }
%"struct.spirv_cross::CombinedImageSampler" = type { %"class.spirv_cross::TypedID.701", %"class.spirv_cross::TypedID.701", %"class.spirv_cross::TypedID.701" }
%"class.spirv_cross::AlignedBuffer.753" = type { [96 x i8] }
%"class.std::__1::function.754" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, %"struct.spirv_cross::SPIRType"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)* }
%"struct.spirv_cross::SPIRType" = type { %"struct.spirv_cross::IVariant.base", i32, i32, i32, i32, %"class.spirv_cross::SmallVector.692", %"class.spirv_cross::SmallVector.755", i32, i8, i8, i32, %"class.spirv_cross::SmallVector.758", %"class.spirv_cross::SmallVector.692", %"struct.spirv_cross::SPIRType::ImageType", %"class.spirv_cross::TypedID.695", %"class.spirv_cross::TypedID.695", %"class.std::__1::unordered_set" }
%"class.spirv_cross::SmallVector.755" = type { %"class.spirv_cross::VectorView.756", i64, %"class.spirv_cross::AlignedBuffer.757" }
%"class.spirv_cross::VectorView.756" = type { i8*, i64 }
%"class.spirv_cross::AlignedBuffer.757" = type { [8 x i8] }
%"struct.spirv_cross::SPIRType::ImageType" = type { %"class.spirv_cross::TypedID.695", i32, i8, i8, i8, i32, i32, i32 }
%"class.spirv_cross::Bitset" = type { i64, %"class.std::__1::unordered_set.541" }
%"class.std::__1::unordered_map.761" = type { %"class.std::__1::__hash_table.762" }
%"class.std::__1::__hash_table.762" = type <{ %"class.std::__1::unique_ptr.763", %"class.std::__1::__compressed_pair.773", %"class.std::__1::__compressed_pair.778", %"class.std::__1::__compressed_pair.781", [4 x i8] }>
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765", %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.std::__1::__hash_node_base.766"** }
%"struct.std::__1::__hash_node_base.766" = type { %"struct.std::__1::__hash_node_base.766"* }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.std::__1::__bucket_list_deallocator.768" }
%"class.std::__1::__bucket_list_deallocator.768" = type { %"class.std::__1::__compressed_pair.769" }
%"class.std::__1::__compressed_pair.769" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.773" = type { %"struct.std::__1::__compressed_pair_elem.774" }
%"struct.std::__1::__compressed_pair_elem.774" = type { %"struct.std::__1::__hash_node_base.766" }
%"class.std::__1::__compressed_pair.778" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.spirv_cross::SmallVector.692" = type { %"class.spirv_cross::VectorView.693", i64, %"class.spirv_cross::AlignedBuffer.694" }
%"class.spirv_cross::VectorView.693" = type { i32*, i64 }
%"class.spirv_cross::AlignedBuffer.694" = type { [32 x i8] }
%"class.spirv_cross::StringStream" = type { %"struct.spirv_cross::StringStream<4096, 4096>::Buffer", [4096 x i8], %"class.spirv_cross::SmallVector.809" }
%"struct.spirv_cross::StringStream<4096, 4096>::Buffer" = type { i8*, i64, i64 }
%"class.spirv_cross::SmallVector.809" = type { %"class.spirv_cross::VectorView.810", i64, %"class.spirv_cross::AlignedBuffer.811" }
%"class.spirv_cross::VectorView.810" = type { %"struct.spirv_cross::StringStream<4096, 4096>::Buffer"*, i64 }
%"class.spirv_cross::AlignedBuffer.811" = type { [192 x i8] }
%"struct.spirv_cross::SPIRBlock" = type { %"struct.spirv_cross::IVariant.base", i32, i32, i32, %"class.spirv_cross::TypedID.703", %"class.spirv_cross::TypedID.703", %"class.spirv_cross::TypedID.703", %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID.703", %"class.spirv_cross::TypedID.703", %"class.spirv_cross::TypedID.703", %"class.spirv_cross::SmallVector.713", %"class.spirv_cross::SmallVector.716", %"class.spirv_cross::SmallVector.719", %"class.spirv_cross::SmallVector.719", %"class.spirv_cross::SmallVector.723", i8, i8, i8, %"class.spirv_cross::TypedID.703", %"class.spirv_cross::TypedID.703", %"class.spirv_cross::SmallVector.699", %"class.spirv_cross::SmallVector.699", %"class.spirv_cross::SmallVector.625" }
%"class.spirv_cross::SmallVector.713" = type { %"class.spirv_cross::VectorView.714", i64, %"class.spirv_cross::AlignedBuffer.715" }
%"class.spirv_cross::VectorView.714" = type { %"struct.spirv_cross::Instruction"*, i64 }
%"struct.spirv_cross::Instruction" = type { i16, i16, i32, i32 }
%"class.spirv_cross::AlignedBuffer.715" = type { [96 x i8] }
%"class.spirv_cross::SmallVector.716" = type { %"class.spirv_cross::VectorView.717", i64, %"class.spirv_cross::AlignedBuffer.718" }
%"class.spirv_cross::VectorView.717" = type { %"struct.spirv_cross::SPIRBlock::Phi"*, i64 }
%"struct.spirv_cross::SPIRBlock::Phi" = type { %"class.spirv_cross::TypedID", %"class.spirv_cross::TypedID.703", %"class.spirv_cross::TypedID.701" }
%"class.spirv_cross::AlignedBuffer.718" = type { [96 x i8] }
%"class.spirv_cross::SmallVector.719" = type { %"class.spirv_cross::VectorView.720", i64, %"class.spirv_cross::AlignedBuffer.722" }
%"class.spirv_cross::VectorView.720" = type { %"struct.std::__1::pair.721"*, i64 }
%"struct.std::__1::pair.721" = type { %"class.spirv_cross::TypedID.695", %"class.spirv_cross::TypedID" }
%"class.spirv_cross::AlignedBuffer.722" = type { [64 x i8] }
%"class.spirv_cross::SmallVector.723" = type { %"class.spirv_cross::VectorView.724", i64, %"class.spirv_cross::AlignedBuffer.725" }
%"class.spirv_cross::VectorView.724" = type { %"struct.spirv_cross::SPIRBlock::Case"*, i64 }
%"struct.spirv_cross::SPIRBlock::Case" = type { i32, %"class.spirv_cross::TypedID.703" }
%"class.spirv_cross::AlignedBuffer.725" = type { [64 x i8] }
%"struct.spirv_cross::CompilerGLSL::Options::VertexOptions" = type { i8, i8, i8 }
%"struct.spirv_cross::CompilerGLSL::Options::FragmentOptions" = type { i32, i32 }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.68", %"class.std::__1::__compressed_pair.76", %"class.std::__1::__compressed_pair.81", %"class.std::__1::__compressed_pair.83", [4 x i8] }>
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70", %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.std::__1::unordered_map.812" = type { %"class.std::__1::__hash_table.813" }
%"class.std::__1::__hash_table.813" = type <{ %"class.std::__1::unique_ptr.814", %"class.std::__1::__compressed_pair.824", %"class.std::__1::__compressed_pair.829", %"class.std::__1::__compressed_pair.832", [4 x i8] }>
%"class.std::__1::unique_ptr.814" = type { %"class.std::__1::__compressed_pair.815" }
%"class.std::__1::__compressed_pair.815" = type { %"struct.std::__1::__compressed_pair_elem.816", %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.816" = type { %"struct.std::__1::__hash_node_base.817"** }
%"struct.std::__1::__hash_node_base.817" = type { %"struct.std::__1::__hash_node_base.817"* }
%"struct.std::__1::__compressed_pair_elem.818" = type { %"class.std::__1::__bucket_list_deallocator.819" }
%"class.std::__1::__bucket_list_deallocator.819" = type { %"class.std::__1::__compressed_pair.820" }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.825" }
%"struct.std::__1::__compressed_pair_elem.825" = type { %"struct.std::__1::__hash_node_base.817" }
%"class.std::__1::__compressed_pair.829" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.std::__1::unordered_map.785" = type { %"class.std::__1::__hash_table.786" }
%"class.std::__1::__hash_table.786" = type <{ %"class.std::__1::unique_ptr.787", %"class.std::__1::__compressed_pair.797", %"class.std::__1::__compressed_pair.802", %"class.std::__1::__compressed_pair.805", [4 x i8] }>
%"class.std::__1::unique_ptr.787" = type { %"class.std::__1::__compressed_pair.788" }
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789", %"struct.std::__1::__compressed_pair_elem.791" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"struct.std::__1::__hash_node_base.790"** }
%"struct.std::__1::__hash_node_base.790" = type { %"struct.std::__1::__hash_node_base.790"* }
%"struct.std::__1::__compressed_pair_elem.791" = type { %"class.std::__1::__bucket_list_deallocator.792" }
%"class.std::__1::__bucket_list_deallocator.792" = type { %"class.std::__1::__compressed_pair.793" }
%"class.std::__1::__compressed_pair.793" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.797" = type { %"struct.std::__1::__compressed_pair_elem.798" }
%"struct.std::__1::__compressed_pair_elem.798" = type { %"struct.std::__1::__hash_node_base.790" }
%"class.std::__1::__compressed_pair.802" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.spirv_cross::CompilerGLSL::BackendVariations" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i8, i8, i8, [4 x i8], i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8] }>
%"class.std::__1::unordered_map.836" = type { %"class.std::__1::__hash_table.837" }
%"class.std::__1::__hash_table.837" = type <{ %"class.std::__1::unique_ptr.838", %"class.std::__1::__compressed_pair.848", %"class.std::__1::__compressed_pair.853", %"class.std::__1::__compressed_pair.856", [4 x i8] }>
%"class.std::__1::unique_ptr.838" = type { %"class.std::__1::__compressed_pair.839" }
%"class.std::__1::__compressed_pair.839" = type { %"struct.std::__1::__compressed_pair_elem.840", %"struct.std::__1::__compressed_pair_elem.842" }
%"struct.std::__1::__compressed_pair_elem.840" = type { %"struct.std::__1::__hash_node_base.841"** }
%"struct.std::__1::__hash_node_base.841" = type { %"struct.std::__1::__hash_node_base.841"* }
%"struct.std::__1::__compressed_pair_elem.842" = type { %"class.std::__1::__bucket_list_deallocator.843" }
%"class.std::__1::__bucket_list_deallocator.843" = type { %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.848" = type { %"struct.std::__1::__compressed_pair_elem.849" }
%"struct.std::__1::__compressed_pair_elem.849" = type { %"struct.std::__1::__hash_node_base.841" }
%"class.std::__1::__compressed_pair.853" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.856" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.spirv_cross::CompilerGLSL::ShaderSubgroupSupportHelper" = type { i32 }
%"class.spirv_cross::SmallVector.631" = type { %"class.spirv_cross::VectorView.632", i64, %"class.spirv_cross::AlignedBuffer.633" }
%"class.spirv_cross::VectorView.632" = type { %"class.std::__1::basic_string"*, i64 }
%"class.spirv_cross::AlignedBuffer.633" = type { [192 x i8] }
%"class.std::__1::unordered_map.860" = type { %"class.std::__1::__hash_table.861" }
%"class.std::__1::__hash_table.861" = type <{ %"class.std::__1::unique_ptr.862", %"class.std::__1::__compressed_pair.872", %"class.std::__1::__compressed_pair.877", %"class.std::__1::__compressed_pair.880", [4 x i8] }>
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864", %"struct.std::__1::__compressed_pair_elem.866" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"struct.std::__1::__hash_node_base.865"** }
%"struct.std::__1::__hash_node_base.865" = type { %"struct.std::__1::__hash_node_base.865"* }
%"struct.std::__1::__compressed_pair_elem.866" = type { %"class.std::__1::__bucket_list_deallocator.867" }
%"class.std::__1::__bucket_list_deallocator.867" = type { %"class.std::__1::__compressed_pair.868" }
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.872" = type { %"struct.std::__1::__compressed_pair_elem.873" }
%"struct.std::__1::__compressed_pair_elem.873" = type { %"struct.std::__1::__hash_node_base.865" }
%"class.std::__1::__compressed_pair.877" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.880" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.spirv_cross::SmallVector.758" = type { %"class.spirv_cross::VectorView.759", i64, %"class.spirv_cross::AlignedBuffer.760" }
%"class.spirv_cross::VectorView.759" = type { %"class.spirv_cross::TypedID.695"*, i64 }
%"class.spirv_cross::AlignedBuffer.760" = type { [32 x i8] }
%"class.std::__1::vector.884" = type { %"class.std::__1::__vector_base.885" }
%"class.std::__1::__vector_base.885" = type { %"struct.spirv_cross::PlsRemap"*, %"struct.spirv_cross::PlsRemap"*, %"class.std::__1::__compressed_pair.886" }
%"struct.spirv_cross::PlsRemap" = type { i32, i32 }
%"class.std::__1::__compressed_pair.886" = type { %"struct.std::__1::__compressed_pair_elem.887" }
%"struct.std::__1::__compressed_pair_elem.887" = type { %"struct.spirv_cross::PlsRemap"* }
%"class.std::__1::vector.891" = type { %"class.std::__1::__vector_base.892" }
%"class.std::__1::__vector_base.892" = type { %"struct.std::__1::pair.893"*, %"struct.std::__1::pair.893"*, %"class.std::__1::__compressed_pair.894" }
%"struct.std::__1::pair.893" = type { i32, i32 }
%"class.std::__1::__compressed_pair.894" = type { %"struct.std::__1::__compressed_pair_elem.895" }
%"struct.std::__1::__compressed_pair_elem.895" = type { %"struct.std::__1::pair.893"* }
%"class.std::__1::vector.899" = type { %"class.std::__1::__vector_base.900" }
%"class.std::__1::__vector_base.900" = type { %"struct.std::__1::pair.901"*, %"struct.std::__1::pair.901"*, %"class.std::__1::__compressed_pair.902" }
%"struct.std::__1::pair.901" = type <{ i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { %"struct.std::__1::pair.901"* }
%"class.std::__1::unordered_set.907" = type { %"class.std::__1::__hash_table.908" }
%"class.std::__1::__hash_table.908" = type <{ %"class.std::__1::unique_ptr.909", %"class.std::__1::__compressed_pair.919", %"class.std::__1::__compressed_pair.924", %"class.std::__1::__compressed_pair.926", [4 x i8] }>
%"class.std::__1::unique_ptr.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.911", %"struct.std::__1::__compressed_pair_elem.913" }
%"struct.std::__1::__compressed_pair_elem.911" = type { %"struct.std::__1::__hash_node_base.912"** }
%"struct.std::__1::__hash_node_base.912" = type { %"struct.std::__1::__hash_node_base.912"* }
%"struct.std::__1::__compressed_pair_elem.913" = type { %"class.std::__1::__bucket_list_deallocator.914" }
%"class.std::__1::__bucket_list_deallocator.914" = type { %"class.std::__1::__compressed_pair.915" }
%"class.std::__1::__compressed_pair.915" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.919" = type { %"struct.std::__1::__compressed_pair_elem.920" }
%"struct.std::__1::__compressed_pair_elem.920" = type { %"struct.std::__1::__hash_node_base.912" }
%"class.std::__1::__compressed_pair.924" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.std::__1::unordered_set.541" = type { %"class.std::__1::__hash_table.542" }
%"class.std::__1::__hash_table.542" = type <{ %"class.std::__1::unique_ptr.543", %"class.std::__1::__compressed_pair.553", %"class.std::__1::__compressed_pair.558", %"class.std::__1::__compressed_pair.560", [4 x i8] }>
%"class.std::__1::unique_ptr.543" = type { %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545", %"struct.std::__1::__compressed_pair_elem.547" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"struct.std::__1::__hash_node_base.546"** }
%"struct.std::__1::__hash_node_base.546" = type { %"struct.std::__1::__hash_node_base.546"* }
%"struct.std::__1::__compressed_pair_elem.547" = type { %"class.std::__1::__bucket_list_deallocator.548" }
%"class.std::__1::__bucket_list_deallocator.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.554" }
%"struct.std::__1::__compressed_pair_elem.554" = type { %"struct.std::__1::__hash_node_base.546" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.560" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.dawn_native::opengl::ShaderModule" = type { %"class.dawn_native::ShaderModuleBase", %"class.std::__1::vector.300", %"class.std::__1::unordered_map.322" }
%"class.dawn_native::ShaderModuleBase" = type { %"class.dawn_native::CachedObject.base", i32, %"class.std::__1::vector.300", %"class.std::__1::basic_string", %"class.std::__1::unordered_map.322", %"class.std::__1::vector.300", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.294", %"class.std::__1::unique_ptr.307" }
%"class.dawn_native::CachedObject.base" = type <{ %"class.dawn_native::ObjectBase", i8, [7 x i8], i64, i8 }>
%"class.dawn_native::ObjectBase" = type { %class.RefCounted, %"class.dawn_native::DeviceBase"* }
%class.RefCounted = type { i32 (...)**, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.dawn_native::DeviceBase" = type { %class.RefCounted, i64, i64, i64, void (i32, i8*, i8*)*, i8*, void (i8*, i8*)*, i8*, %"class.std::__1::unique_ptr", %class.Ref, %"class.dawn_native::AdapterBase"*, %"class.std::__1::unique_ptr.11", %class.Ref.17, %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.38", %class.Ref.44, %"class.std::__1::unique_ptr.46", i32, %"struct.std::__1::array.52", %"struct.dawn_native::TogglesSet", %"struct.dawn_native::TogglesSet", i64, %"struct.dawn_native::ExtensionsSet", %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.62" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.dawn_native::ErrorScopeStack"* }
%"class.dawn_native::ErrorScopeStack" = type opaque
%class.Ref = type { %class.RefBase }
%class.RefBase = type { %"class.dawn_native::InstanceBase"* }
%"class.dawn_native::InstanceBase" = type opaque
%"class.dawn_native::AdapterBase" = type opaque
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.dawn_native::DeviceBase::Caches"* }
%"struct.dawn_native::DeviceBase::Caches" = type opaque
%class.Ref.17 = type { %class.RefBase.18 }
%class.RefBase.18 = type { %"class.dawn_native::BindGroupLayoutBase"* }
%"class.dawn_native::BindGroupLayoutBase" = type { %"class.dawn_native::CachedObject.base", %"struct.dawn_native::BindingCounts", %"class.ityp::vector", %"class.std::__1::map" }
%"struct.dawn_native::BindingCounts" = type { i32, i32, i32, i32, i32, %"class.dawn_native::PerStage" }
%"class.dawn_native::PerStage" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [3 x %"struct.dawn_native::PerStageBindingCounts"] }
%"struct.dawn_native::PerStageBindingCounts" = type { i32, i32, i32, i32, i32 }
%"class.ityp::vector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.dawn_native::BindingInfo"*, %"struct.dawn_native::BindingInfo"*, %"class.std::__1::__compressed_pair.19" }
%"struct.dawn_native::BindingInfo" = type { i32, i32, i32, %"struct.dawn_native::BufferBindingLayout", %"struct.dawn_native::SamplerBindingLayout", %"struct.dawn_native::TextureBindingLayout", %"struct.dawn_native::StorageTextureBindingLayout" }
%"struct.dawn_native::BufferBindingLayout" = type { %"struct.dawn_native::ChainedStruct"*, i32, i8, i64 }
%"struct.dawn_native::ChainedStruct" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, [4 x i8] }>
%"struct.dawn_native::SamplerBindingLayout" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, [4 x i8] }>
%"struct.dawn_native::TextureBindingLayout" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, i32, i8, [7 x i8] }>
%"struct.dawn_native::StorageTextureBindingLayout" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.dawn_native::BindingInfo"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.24", %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.dawn_native::DynamicUploader"* }
%"class.dawn_native::DynamicUploader" = type opaque
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.dawn_native::CallbackTaskManager"* }
%"class.dawn_native::CallbackTaskManager" = type opaque
%class.Ref.44 = type { %class.RefBase.45 }
%class.RefBase.45 = type { %"class.dawn_native::QueueBase"* }
%"class.dawn_native::QueueBase" = type opaque
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.dawn_native::DeviceBase::DeprecationWarnings"* }
%"struct.dawn_native::DeviceBase::DeprecationWarnings" = type opaque
%"struct.std::__1::array.52" = type { [55 x %"struct.dawn_native::Format"] }
%"struct.dawn_native::Format" = type { i32, i8, i8, i8, i8, i8, %"struct.std::__1::array.53" }
%"struct.std::__1::array.53" = type { [3 x %"struct.dawn_native::AspectInfo"] }
%"struct.dawn_native::AspectInfo" = type { %"struct.dawn_native::TexelBlockInfo", i32, i8, i32 }
%"struct.dawn_native::TexelBlockInfo" = type { i32, i32, i32 }
%"struct.dawn_native::TogglesSet" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"struct.dawn_native::ExtensionsSet" = type { %"class.std::__1::bitset.54" }
%"class.std::__1::bitset.54" = type { %"class.std::__1::__bitset.55" }
%"class.std::__1::__bitset.55" = type { i64 }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.dawn_native::InternalPipelineStore"* }
%"struct.dawn_native::InternalPipelineStore" = type opaque
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.dawn_native::PersistentCache"* }
%"class.dawn_native::PersistentCache" = type opaque
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.tint::Program"* }
%"class.std::__1::unique_ptr.294" = type { %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"class.dawn_native::TintSource"* }
%"class.dawn_native::TintSource" = type opaque
%"class.std::__1::unique_ptr.307" = type { %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"class.dawn_native::OwnedCompilationMessages"* }
%"class.dawn_native::OwnedCompilationMessages" = type { %struct.WGPUCompilationInfo, %"class.std::__1::vector.149", %"class.std::__1::vector.310" }
%struct.WGPUCompilationInfo = type { i32, %struct.WGPUCompilationMessage* }
%struct.WGPUCompilationMessage = type { i8*, i32, i64, i64, i64, i64 }
%"class.std::__1::vector.310" = type { %"class.std::__1::__vector_base.311" }
%"class.std::__1::__vector_base.311" = type { %struct.WGPUCompilationMessage*, %struct.WGPUCompilationMessage*, %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %struct.WGPUCompilationMessage* }
%"class.dawn_native::opengl::Device" = type <{ %"class.dawn_native::DeviceBase", %"struct.dawn_native::opengl::OpenGLFunctions", %"class.std::__1::queue", %"struct.std::__1::array.96", [4 x i8] }>
%"struct.dawn_native::opengl::OpenGLFunctions" = type { %"struct.dawn_native::opengl::OpenGLFunctionsBase", %"struct.dawn_native::opengl::OpenGLVersion", [4 x i8], %"class.std::__1::unordered_set" }
%"struct.dawn_native::opengl::OpenGLFunctionsBase" = type { void (i32)*, void (i32, i32)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (float, float, float, float)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i64, i8*)*, i32 (i32)*, void (i32)*, void (float, float, float, float)*, void (float)*, void (i32)*, void (i8, i8, i8, i8)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, i32 ()*, i32 (i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32)*, void (i8)*, void (float, float)*, void (i32, i32)*, void (i32)*, void (i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i8*)*, void (i32)*, void (i32)*, void ()*, void ()*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i8*)*, void (i32, i32, i32*)*, i32 ()*, void (i32, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, i8* (i32)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, i32 (i32, i8*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i8**)*, void (i32, i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, void (float)*, void (i32)*, void (i32, i32)*, void (float, float)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void ()*, void (i32, i32, i32, i32)*, void (float, i8)*, void (i32, i32, i32, i32)*, void (i32, i32*, i32, i8*, i32)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, float)*, void (i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32)*, void (i32)*, void (i32, float)*, void (i32, float*)*, void (i32, float, float)*, void (i32, float*)*, void (i32, float, float, float)*, void (i32, float*)*, void (i32, float, float, float, float)*, void (i32, float*)*, void (i32, i32, i32, i8, i32, i8*)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32*)*, void (i32, i32*)*, i8 (i32)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, i8 (i32)*, void (i32, i32, i8**)*, void (i32, i32*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, i8* (i32, i64, i64, i32)*, void (i32, i64, i64)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, i8 (i32)*, void (i32, i32, i32*)*, void (i32)*, void ()*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32)*, void (i32, i32, i8**, i32)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32*)*, i32 (i32, i8*)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, float, i32)*, i8* (i32, i32)*, void (i32, i32, i64, i64, i64)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*, i32, i32*)*, i32 (i32, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i8*, i32)*, %struct.__GLsync* (i32, i32)*, i8 (%struct.__GLsync*)*, void (%struct.__GLsync*)*, i32 (%struct.__GLsync*, i32, i64)*, void (%struct.__GLsync*, i32, i64)*, void (i32, i64*)*, void (%struct.__GLsync*, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i64*)*, void (i32, i32*)*, void (i32, i32*)*, i8 (i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32*)*, i8 (i32)*, void ()*, void ()*, void (i32, i32, i32*, i32*, i8*)*, void (i32, i32, i8*, i32)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32*)*, void (i32, i32, i32)*, void (i64)*, void (i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32, i32, i32*, i32, i32*, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i32)*, i32 (i32, i32, i8**)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, i8 (i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, float)*, void (i32, i32, float, float)*, void (i32, i32, float, float, float)*, void (i32, i32, float, float, float, float)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i8, i32, i32, i32)*, void (i32, i32, i8*)*, void (i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, float*)*, void (i32, i32, i64, i32)*, void (i32, i32, i32, i8, i32)*, void (i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i32)*, void ()*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32*, i8)*, void (i32, i32, i32, i32, i32, i8*)*, void (void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*)*, i32 (i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i8*)*, void ()*, void (i32, i32, i32, i8*)*, void (i32, i32, i32, i32*, i8*)*, void (i8*, i32, i8*)*, void (i8*, i32, i32*, i8*)*, void (i32, i8**)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i8, i8, i8, i8)*, i8 (i32, i32)*, void (i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i8*, i32, i32)*, void (i32, i32, i32, i32)*, void (float, float, float, float, float, float, float, float)*, i32 ()*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (float)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i8)*, void (float)*, void (i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32)*, void (double)*, void (i32)*, void (i32, float)*, void (i32, double*)*, void (i32, i32, i32, i32, i8*)*, void (double, double)*, void (i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32*, i32*, i32)*, void (i32, i32*, i32, i8**, i32)*, void (i32, float)*, void (i32, float*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32, i32*)*, void (i32, i64, i64, i8*)*, i8* (i32, i32)*, void (i32, i32, double*)*, void (i32, double)*, void (i32, double*)*, void (i32, i16)*, void (i32, i16*)*, void (i32, double, double)*, void (i32, double*)*, void (i32, i16, i16)*, void (i32, i16*)*, void (i32, double, double, double)*, void (i32, double*)*, void (i32, i16, i16, i16)*, void (i32, i16*)*, void (i32, i8*)*, void (i32, i32*)*, void (i32, i16*)*, void (i32, i8, i8, i8, i8)*, void (i32, i8*)*, void (i32, i32*)*, void (i32, i16*)*, void (i32, i8*)*, void (i32, double, double, double, double)*, void (i32, double*)*, void (i32, i32*)*, void (i32, i16, i16, i16, i16)*, void (i32, i16*)*, void (i32, i8*)*, void (i32, i32*)*, void (i32, i16*)*, void (i32, i32)*, void (i32, i32)*, void ()*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i8*)*, void (i32, i16*)*, void (i32, i8*)*, void (i32, i16*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i32*, i32, i8**, i32, i32*)*, void (i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i8*)*, i32 (i32, i8*)*, void (i32, i32)*, void (i32, i32, i64*)*, void (i32, i32, i64*)*, void (i32, i32, i8, i32)*, void (i32, i32, i8, i32*)*, void (i32, i32, i8, i32)*, void (i32, i32, i8, i32*)*, void (i32, i32, i8, i32)*, void (i32, i32, i8, i32*)*, void (i32, i32, i8, i32)*, void (i32, i32, i8, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, double)*, void (i32, double, double)*, void (i32, double, double, double)*, void (i32, double, double, double, double)*, void (i32, i32, double*)*, void (i32, i32, double*)*, void (i32, i32, double*)*, void (i32, i32, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, double*)*, i32 (i32, i32, i8*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, float*)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, double)*, void (i32, i32, i32, double*)*, void (i32, i32, double, double)*, void (i32, i32, i32, double*)*, void (i32, i32, double, double, double)*, void (i32, i32, i32, double*)*, void (i32, i32, double, double, double, double)*, void (i32, i32, i32, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, double*)*, void (i32, double)*, void (i32, double, double)*, void (i32, double, double, double)*, void (i32, double, double, double, double)*, void (i32, double*)*, void (i32, double*)*, void (i32, double*)*, void (i32, double*)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, double*)*, void (i32, i32, float*)*, void (i32, float, float, float, float)*, void (i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, double*)*, void (i32, double, double)*, void (i32, i32, float*)*, void (i32, i32, double*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i8*, i32, i32)*, void (i32, i32, i32, i8*, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i32, i32, i8*)*, void (i32, i32, i32, i32, i64*)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i64, i64)*, void (i32)*, void (i32, i8*, i32, i32)*, void (i32, i32, i8*, i32, i32)*, i32 (i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i64, i8*, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*, i64*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i64*, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i64*)*, void (i32, i32*)*, void (i32, i64, i8*, i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i64, i8*)*, void (i32, i32, i64, i64, i64)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i32, i32, i8*)*, i8* (i32, i32)*, i8* (i32, i64, i64, i32)*, i8 (i32)*, void (i32, i64, i64)*, void (i32, i32, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i8**)*, void (i32, i64, i64, i8*)*, void (i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, float, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, i32 (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32)*, void (i32, i32)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i64, i32)*, void (i32, i32, i32, i32*, i64*, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, i8, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i64*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i64)*, void (i32, i32, i32, i64)*, void (i32, i32, i32, i64)*, void (i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, double*)*, void (i32, i32, i32, double*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i16*)*, void (i32, i8*)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i8*, i32, i8*, i8*)*, void (i32, i8, i32, i32, i32, i8*)*, void (i32, i8, i32, i32, i32, i8*)*, void ()*, void (i32, i8*, i32, i32*, i32*)*, void (i32, i8*, i64, i32, i32)*, void (i32, i32, i8*, i64, i32, i32)*, void (float, float, float)* }
%struct.__GLsync = type opaque
%"struct.dawn_native::opengl::OpenGLVersion" = type { i32, i32, i32 }
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.92" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair"**, %"struct.std::__1::pair"**, %"struct.std::__1::pair"**, %"class.std::__1::__compressed_pair.87" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"struct.std::__1::pair"** }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::array.96" = type { [55 x %"struct.dawn_native::opengl::GLFormat"] }
%"struct.dawn_native::opengl::GLFormat" = type { i32, i32, i32, i8, i32 }
%"struct.dawn_native::ShaderModuleDescriptor" = type { %"struct.dawn_native::ChainedStruct"*, i8* }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"struct.dawn_native::opengl::BindingLocation" = type { i32, i32 }
%"struct.dawn_native::opengl::CombinedSampler" = type { %"struct.dawn_native::opengl::BindingLocation", %"struct.dawn_native::opengl::BindingLocation", i8 }
%class.Result = type { i64 }
%"struct.dawn_native::ShaderModuleParseResult" = type { %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.294", %"class.std::__1::vector.300", %"class.std::__1::unique_ptr.307" }
%class.Result.346 = type { %"class.std::__1::unique_ptr.347" }
%"class.std::__1::unique_ptr.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"class.tint::transform::Transform"* }
%"class.tint::transform::Transform" = type { i32 (...)** }
%"class.dawn_native::ScopedTintICEHandler" = type { i8 }
%"class.tint::transform::Manager" = type { %"class.tint::transform::Transform", %"class.std::__1::vector.360" }
%"class.std::__1::vector.360" = type { %"class.std::__1::__vector_base.361" }
%"class.std::__1::__vector_base.361" = type { %"class.std::__1::unique_ptr.362"*, %"class.std::__1::unique_ptr.362"*, %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"class.std::__1::unique_ptr.362"* }
%"class.tint::transform::DataMap" = type { %"class.std::__1::unordered_map.379" }
%"class.std::__1::unordered_map.379" = type { %"class.std::__1::__hash_table.380" }
%"class.std::__1::__hash_table.380" = type <{ %"class.std::__1::unique_ptr.381", %"class.std::__1::__compressed_pair.391", %"class.std::__1::__compressed_pair.396", %"class.std::__1::__compressed_pair.401", [4 x i8] }>
%"class.std::__1::unique_ptr.381" = type { %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.383", %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.383" = type { %"struct.std::__1::__hash_node_base.384"** }
%"struct.std::__1::__hash_node_base.384" = type { %"struct.std::__1::__hash_node_base.384"* }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"class.std::__1::__bucket_list_deallocator.386" }
%"class.std::__1::__bucket_list_deallocator.386" = type { %"class.std::__1::__compressed_pair.387" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.392" }
%"struct.std::__1::__compressed_pair_elem.392" = type { %"struct.std::__1::__hash_node_base.384" }
%"class.std::__1::__compressed_pair.396" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%class.Result.407 = type { i32, %"class.std::__1::unique_ptr.347", %"class.tint::Program" }
%"class.tint::writer::spirv::Generator" = type { %"class.tint::writer::Writer", %"class.std::__1::unique_ptr.408", %"class.std::__1::unique_ptr.566" }
%"class.tint::writer::Writer" = type { i32 (...)**, %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"class.tint::writer::spirv::Builder"* }
%"class.tint::writer::spirv::Builder" = type <{ %"class.tint::ProgramBuilder", %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.411", %"class.std::__1::vector.411", %"class.std::__1::vector.411", %"class.std::__1::vector.411", %"class.std::__1::vector.411", %"class.std::__1::vector.411", %"class.std::__1::vector.411", %"class.std::__1::vector.411", %"class.std::__1::vector.411", %"class.std::__1::vector.425", %"class.std::__1::unordered_map.432", %"class.std::__1::unordered_map.456", %"class.std::__1::unordered_map.432", %"class.std::__1::unordered_map.480", %"class.std::__1::unordered_map.432", %"class.std::__1::unordered_map.432", %"class.std::__1::unordered_map.432", %"class.tint::ScopeStack", %"class.std::__1::unordered_map.514", %"class.std::__1::vector.300", %"class.std::__1::vector.300", %"class.std::__1::unordered_set.541", i8, [7 x i8] }>
%"class.tint::ProgramBuilder" = type <{ i32 (...)**, %"class.tint::ProgramBuilder::TypesBuilder", %"class.tint::ProgramID", [4 x i8], %"class.tint::sem::Manager", %"class.tint::BlockAllocator.129", %"class.tint::BlockAllocator.138", %"class.tint::ast::Module"*, %"class.tint::sem::Info", %"class.tint::SymbolTable", %"class.tint::diag::List", %"class.tint::Source", i8, i8, [6 x i8] }>
%"class.tint::ProgramBuilder::TypesBuilder" = type { %"class.tint::ProgramBuilder"* }
%"class.std::__1::vector.411" = type { %"class.std::__1::__vector_base.412" }
%"class.std::__1::__vector_base.412" = type { %"class.tint::writer::spirv::Instruction"*, %"class.tint::writer::spirv::Instruction"*, %"class.std::__1::__compressed_pair.420" }
%"class.tint::writer::spirv::Instruction" = type { i32, %"class.std::__1::vector.413" }
%"class.std::__1::vector.413" = type { %"class.std::__1::__vector_base.414" }
%"class.std::__1::__vector_base.414" = type { %"class.tint::writer::spirv::Operand"*, %"class.tint::writer::spirv::Operand"*, %"class.std::__1::__compressed_pair.415" }
%"class.tint::writer::spirv::Operand" = type { i32, float, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"class.tint::writer::spirv::Operand"* }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.421" }
%"struct.std::__1::__compressed_pair_elem.421" = type { %"class.tint::writer::spirv::Instruction"* }
%"class.std::__1::vector.425" = type { %"class.std::__1::__vector_base.426" }
%"class.std::__1::__vector_base.426" = type { %"class.tint::writer::spirv::Function"*, %"class.tint::writer::spirv::Function"*, %"class.std::__1::__compressed_pair.427" }
%"class.tint::writer::spirv::Function" = type { %"class.tint::writer::spirv::Instruction", %"class.tint::writer::spirv::Operand", %"class.std::__1::vector.411", %"class.std::__1::vector.411", %"class.std::__1::vector.411" }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.428" }
%"struct.std::__1::__compressed_pair_elem.428" = type { %"class.tint::writer::spirv::Function"* }
%"class.std::__1::unordered_map.456" = type { %"class.std::__1::__hash_table.457" }
%"class.std::__1::__hash_table.457" = type <{ %"class.std::__1::unique_ptr.458", %"class.std::__1::__compressed_pair.468", %"class.std::__1::__compressed_pair.473", %"class.std::__1::__compressed_pair.476", [4 x i8] }>
%"class.std::__1::unique_ptr.458" = type { %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460", %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"struct.std::__1::__hash_node_base.461"** }
%"struct.std::__1::__hash_node_base.461" = type { %"struct.std::__1::__hash_node_base.461"* }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.std::__1::__bucket_list_deallocator.463" }
%"class.std::__1::__bucket_list_deallocator.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.469" }
%"struct.std::__1::__compressed_pair_elem.469" = type { %"struct.std::__1::__hash_node_base.461" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.std::__1::unordered_map.480" = type { %"class.std::__1::__hash_table.481" }
%"class.std::__1::__hash_table.481" = type <{ %"class.std::__1::unique_ptr.482", %"class.std::__1::__compressed_pair.492", %"class.std::__1::__compressed_pair.497", %"class.std::__1::__compressed_pair.501", [4 x i8] }>
%"class.std::__1::unique_ptr.482" = type { %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484", %"struct.std::__1::__compressed_pair_elem.486" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"struct.std::__1::__hash_node_base.485"** }
%"struct.std::__1::__hash_node_base.485" = type { %"struct.std::__1::__hash_node_base.485"* }
%"struct.std::__1::__compressed_pair_elem.486" = type { %"class.std::__1::__bucket_list_deallocator.487" }
%"class.std::__1::__bucket_list_deallocator.487" = type { %"class.std::__1::__compressed_pair.488" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"struct.std::__1::__hash_node_base.485" }
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.std::__1::unordered_map.432" = type { %"class.std::__1::__hash_table.433" }
%"class.std::__1::__hash_table.433" = type <{ %"class.std::__1::unique_ptr.434", %"class.std::__1::__compressed_pair.444", %"class.std::__1::__compressed_pair.449", %"class.std::__1::__compressed_pair.452", [4 x i8] }>
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436", %"struct.std::__1::__compressed_pair_elem.438" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"struct.std::__1::__hash_node_base.437"** }
%"struct.std::__1::__hash_node_base.437" = type { %"struct.std::__1::__hash_node_base.437"* }
%"struct.std::__1::__compressed_pair_elem.438" = type { %"class.std::__1::__bucket_list_deallocator.439" }
%"class.std::__1::__bucket_list_deallocator.439" = type { %"class.std::__1::__compressed_pair.440" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"struct.std::__1::__hash_node_base.437" }
%"class.std::__1::__compressed_pair.449" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.tint::ScopeStack" = type { %"class.std::__1::vector.507" }
%"class.std::__1::vector.507" = type { %"class.std::__1::__vector_base.508" }
%"class.std::__1::__vector_base.508" = type { %"class.std::__1::unordered_map.456"*, %"class.std::__1::unordered_map.456"*, %"class.std::__1::__compressed_pair.509" }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.510" }
%"struct.std::__1::__compressed_pair_elem.510" = type { %"class.std::__1::unordered_map.456"* }
%"class.std::__1::unordered_map.514" = type { %"class.std::__1::__hash_table.515" }
%"class.std::__1::__hash_table.515" = type <{ %"class.std::__1::unique_ptr.516", %"class.std::__1::__compressed_pair.526", %"class.std::__1::__compressed_pair.531", %"class.std::__1::__compressed_pair.536", [4 x i8] }>
%"class.std::__1::unique_ptr.516" = type { %"class.std::__1::__compressed_pair.517" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518", %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"struct.std::__1::__hash_node_base.519"** }
%"struct.std::__1::__hash_node_base.519" = type { %"struct.std::__1::__hash_node_base.519"* }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"class.std::__1::__bucket_list_deallocator.521" }
%"class.std::__1::__bucket_list_deallocator.521" = type { %"class.std::__1::__compressed_pair.522" }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.527" }
%"struct.std::__1::__compressed_pair_elem.527" = type { %"struct.std::__1::__hash_node_base.519" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.std::__1::unique_ptr.566" = type { %"class.std::__1::__compressed_pair.567" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.568" }
%"struct.std::__1::__compressed_pair_elem.568" = type { %"class.tint::writer::spirv::BinaryWriter"* }
%"class.tint::writer::spirv::BinaryWriter" = type { %"class.std::__1::vector.300" }
%class.Result.572 = type { i32, %"class.std::__1::unique_ptr.347", %"class.std::__1::unordered_map.322" }
%"class.tint::transform::Spirv" = type { %"class.tint::transform::Transform" }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::allocator.337" = type { i8 }
%"struct.std::__1::pair.1094" = type { %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.942" }
%"class.std::__1::unique_ptr.942" = type { %"class.std::__1::__compressed_pair.943" }
%"class.std::__1::__compressed_pair.943" = type { %"struct.std::__1::__compressed_pair_elem.944" }
%"struct.std::__1::__compressed_pair_elem.944" = type { %"struct.dawn_native::EntryPointMetadata"* }
%"struct.dawn_native::EntryPointMetadata" = type { %"class.ityp::array.931", %"class.std::__1::bitset.945", %"class.ityp::array.947", %"class.ityp::bitset.949", %"struct.dawn_native::Origin3D", i32 }
%"class.ityp::array.931" = type { %"struct.std::__1::array.932" }
%"struct.std::__1::array.932" = type { [4 x %"class.std::__1::map.933"] }
%"class.std::__1::map.933" = type { %"class.std::__1::__tree.934" }
%"class.std::__1::__tree.934" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.935", %"class.std::__1::__compressed_pair.939" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::bitset.945" = type { %"class.std::__1::__bitset.946" }
%"class.std::__1::__bitset.946" = type { i64 }
%"class.ityp::array.947" = type { %"struct.std::__1::array.948" }
%"struct.std::__1::array.948" = type { [4 x i32] }
%"class.ityp::bitset.949" = type { %"class.std::__1::bitset.581" }
%"class.std::__1::bitset.581" = type { %"class.std::__1::__bitset.582" }
%"class.std::__1::__bitset.582" = type { i64 }
%"struct.dawn_native::Origin3D" = type { i32, i32, i32 }
%"class.std::__1::vector.573" = type { %"class.std::__1::__vector_base.574" }
%"class.std::__1::__vector_base.574" = type { %"struct.dawn_native::opengl::CombinedSampler"*, %"struct.dawn_native::opengl::CombinedSampler"*, %"class.std::__1::__compressed_pair.575" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.576" }
%"struct.std::__1::__compressed_pair_elem.576" = type { %"struct.dawn_native::opengl::CombinedSampler"* }
%"class.dawn_native::opengl::PipelineLayout" = type { %"class.dawn_native::PipelineLayoutBase", %"class.ityp::array.583", i64, i64 }
%"class.dawn_native::PipelineLayoutBase" = type { %"class.dawn_native::CachedObject.base", %"class.ityp::array", %"class.ityp::bitset" }
%"class.ityp::array" = type { %"struct.std::__1::array.580" }
%"struct.std::__1::array.580" = type { [4 x %class.Ref.17] }
%"class.ityp::bitset" = type { %"class.std::__1::bitset.581" }
%"class.ityp::array.583" = type { %"struct.std::__1::array.584" }
%"struct.std::__1::array.584" = type { [4 x %"class.ityp::vector.585"] }
%"class.ityp::vector.585" = type { %"class.std::__1::vector.300" }
%"class.std::__1::__bit_iterator" = type <{ i64*, i32, [4 x i8] }>
%"class.spirv_cross::CompilerGLSL" = type { %"class.spirv_cross::Compiler", %"struct.spirv_cross::SPIRBlock"*, %"struct.spirv_cross::SPIRBlock"*, i8, %"class.spirv_cross::StringStream", %"class.spirv_cross::SmallVector.631"*, %"struct.spirv_cross::SPIRBlock"*, %"struct.spirv_cross::CompilerGLSL::Options", [4 x i8], %"class.std::__1::unordered_set", %"class.std::__1::unordered_set", %"class.std::__1::unordered_set", %"class.std::__1::unordered_set", %"class.std::__1::unordered_set", %"class.std::__1::unordered_set", %"class.std::__1::unordered_set", %"class.std::__1::unordered_map.812", %"class.std::__1::unordered_map.785", i8, [7 x i8], %"struct.spirv_cross::CompilerGLSL::BackendVariations", i32, [4 x i8], %"class.std::__1::unordered_set.541", %"class.std::__1::unordered_set.541", %"class.std::__1::unordered_set.541", %"class.std::__1::unordered_map.836", %"struct.spirv_cross::CompilerGLSL::ShaderSubgroupSupportHelper", [4 x i8], %"class.std::__1::unordered_map.860", %"class.spirv_cross::SmallVector.631", %"class.spirv_cross::SmallVector.631", %"class.std::__1::unordered_map.860", %"class.spirv_cross::SmallVector.758", i32, i8, i8, i8, i8, %"class.std::__1::vector.884", %"class.std::__1::vector.884", %"class.std::__1::vector.891", %"class.std::__1::vector.899", i8, [7 x i8], %"class.std::__1::unordered_set.907", %"class.std::__1::unordered_set.541" }
%"class.spirv_cross::Compiler" = type { i32 (...)**, %"class.spirv_cross::ParsedIR", %"class.spirv_cross::SmallVector.692", %"class.spirv_cross::SmallVector.692", %"struct.spirv_cross::SPIRFunction"*, %"struct.spirv_cross::SPIRBlock"*, i32, [4 x i8], %"class.std::__1::unordered_set.726", i8, [7 x i8], %"class.std::__1::unordered_set.541", i8, %"class.spirv_cross::SmallVector.751", %"class.spirv_cross::SmallVector.692", %"class.std::__1::function.754", %"class.std::__1::unordered_set.541", %"class.std::__1::unordered_set.541", %"class.std::__1::unordered_set.541", %"class.std::__1::unordered_set.541", %"class.std::__1::unordered_set.541", %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset", i32, i32, i8, [7 x i8], %"class.std::__1::unordered_set.541", i8, i32, %"class.std::__1::unordered_map.761", %"class.spirv_cross::SmallVector.692", %"class.std::__1::unordered_set.541", i8, [7 x i8], %"class.std::__1::unordered_map.785" }
%"class.spirv_cross::ParsedIR" = type { %"class.std::__1::unique_ptr.586", %"class.std::__1::vector.300", %"class.spirv_cross::SmallVector", %"class.std::__1::unordered_map.598", [14 x %"class.spirv_cross::SmallVector.625"], %"class.spirv_cross::SmallVector.625", %"class.spirv_cross::SmallVector.625", %"class.spirv_cross::SmallVector.628", %"class.spirv_cross::SmallVector.631", %"class.spirv_cross::SmallVector.634", %"class.std::__1::unordered_map.637", %"class.std::__1::unordered_map.664", %"class.spirv_cross::TypedID.691", %"struct.spirv_cross::ParsedIR::Source", i32, i32, i32, i32, %"class.std::__1::basic_string", %"class.spirv_cross::Bitset", %"class.std::__1::unordered_set.541" }
%"struct.spirv_cross::CompilerGLSL::Options" = type { i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.spirv_cross::CompilerGLSL::Options::VertexOptions", %"struct.spirv_cross::CompilerGLSL::Options::FragmentOptions" }
%"class.BitSetIterator<4, unsigned int>::Iterator" = type { %"class.std::__1::bitset.581", i64, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::pair.953" = type { i32, %"struct.dawn_native::EntryPointMetadata::ShaderBindingInfo" }
%"struct.dawn_native::EntryPointMetadata::ShaderBindingInfo" = type { %"struct.dawn_native::BindingInfo", i32, i32 }
%"struct.std::__1::__hash_node_base.991" = type { %"struct.std::__1::__hash_node_base.991"* }
%"class.spirv_cross::CFG" = type <{ %"class.spirv_cross::Compiler"*, %"struct.spirv_cross::SPIRFunction"*, %"class.std::__1::unordered_map.1020", %"class.std::__1::unordered_map.1020", %"class.std::__1::unordered_map.860", %"class.std::__1::unordered_map.1044", %"class.spirv_cross::SmallVector.692", %"class.spirv_cross::SmallVector.692", i32, [4 x i8] }>
%"class.std::__1::unordered_map.1020" = type { %"class.std::__1::__hash_table.1021" }
%"class.std::__1::__hash_table.1021" = type <{ %"class.std::__1::unique_ptr.1022", %"class.std::__1::__compressed_pair.1032", %"class.std::__1::__compressed_pair.1037", %"class.std::__1::__compressed_pair.1040", [4 x i8] }>
%"class.std::__1::unique_ptr.1022" = type { %"class.std::__1::__compressed_pair.1023" }
%"class.std::__1::__compressed_pair.1023" = type { %"struct.std::__1::__compressed_pair_elem.1024", %"struct.std::__1::__compressed_pair_elem.1026" }
%"struct.std::__1::__compressed_pair_elem.1024" = type { %"struct.std::__1::__hash_node_base.1025"** }
%"struct.std::__1::__hash_node_base.1025" = type { %"struct.std::__1::__hash_node_base.1025"* }
%"struct.std::__1::__compressed_pair_elem.1026" = type { %"class.std::__1::__bucket_list_deallocator.1027" }
%"class.std::__1::__bucket_list_deallocator.1027" = type { %"class.std::__1::__compressed_pair.1028" }
%"class.std::__1::__compressed_pair.1028" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.1032" = type { %"struct.std::__1::__compressed_pair_elem.1033" }
%"struct.std::__1::__compressed_pair_elem.1033" = type { %"struct.std::__1::__hash_node_base.1025" }
%"class.std::__1::__compressed_pair.1037" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.1040" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.std::__1::unordered_map.1044" = type { %"class.std::__1::__hash_table.1045" }
%"class.std::__1::__hash_table.1045" = type <{ %"class.std::__1::unique_ptr.1046", %"class.std::__1::__compressed_pair.1056", %"class.std::__1::__compressed_pair.1061", %"class.std::__1::__compressed_pair.1064", [4 x i8] }>
%"class.std::__1::unique_ptr.1046" = type { %"class.std::__1::__compressed_pair.1047" }
%"class.std::__1::__compressed_pair.1047" = type { %"struct.std::__1::__compressed_pair_elem.1048", %"struct.std::__1::__compressed_pair_elem.1050" }
%"struct.std::__1::__compressed_pair_elem.1048" = type { %"struct.std::__1::__hash_node_base.1049"** }
%"struct.std::__1::__hash_node_base.1049" = type { %"struct.std::__1::__hash_node_base.1049"* }
%"struct.std::__1::__compressed_pair_elem.1050" = type { %"class.std::__1::__bucket_list_deallocator.1051" }
%"class.std::__1::__bucket_list_deallocator.1051" = type { %"class.std::__1::__compressed_pair.1052" }
%"class.std::__1::__compressed_pair.1052" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.1056" = type { %"struct.std::__1::__compressed_pair_elem.1057" }
%"struct.std::__1::__compressed_pair_elem.1057" = type { %"struct.std::__1::__hash_node_base.1049" }
%"class.std::__1::__compressed_pair.1061" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.1064" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.std::__1::allocator.679" = type { i8 }
%"struct.std::__1::pair.1081" = type { %"class.spirv_cross::TypedID.691", [4 x i8], %"struct.spirv_cross::SPIREntryPoint" }
%"struct.spirv_cross::SPIREntryPoint" = type <{ %"class.spirv_cross::TypedID.691", [4 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.spirv_cross::SmallVector.699", %"class.spirv_cross::Bitset", %"struct.spirv_cross::SPIREntryPoint::WorkgroupSize", i32, i32, i32, i8, [3 x i8] }>
%"struct.spirv_cross::SPIREntryPoint::WorkgroupSize" = type { i32, i32, i32, i32 }
%"struct.std::__1::pair.1087" = type { %"class.spirv_cross::TypedID", %"struct.spirv_cross::Meta" }
%"struct.spirv_cross::Meta" = type { %"struct.spirv_cross::Meta::Decoration", %"class.spirv_cross::SmallVector.1088", %"class.std::__1::unordered_map.860", i8, i32 }
%"struct.spirv_cross::Meta::Decoration" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.spirv_cross::Bitset", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, %"struct.spirv_cross::Meta::Decoration::Extended" }
%"struct.spirv_cross::Meta::Decoration::Extended" = type { %"class.spirv_cross::Bitset", [16 x i32] }
%"class.spirv_cross::SmallVector.1088" = type <{ %"class.spirv_cross::VectorView.1089", i64, %"class.spirv_cross::AlignedBuffer.1090", [7 x i8] }>
%"class.spirv_cross::VectorView.1089" = type { %"struct.spirv_cross::Meta::Decoration"*, i64 }
%"class.spirv_cross::AlignedBuffer.1090" = type { i8 }
%"class.std::__1::allocator.613" = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.953" }
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }

$_ZN6ResultINSt3__113unordered_mapINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS0_10unique_ptrIN11dawn_native18EntryPointMetadataENS0_14default_deleteISA_EEEENS0_4hashIS7_EENS0_8equal_toIS7_EENS5_INS0_4pairIKS7_SD_EEEEEENS9_9ErrorDataEED2Ev = comdat any

$_ZN11spirv_cross12CompilerGLSLC2ENSt3__16vectorIjNS1_9allocatorIjEEEE = comdat any

$_ZN11spirv_cross12CompilerGLSLD2Ev = comdat any

$_ZN11dawn_native6opengl12ShaderModuleD2Ev = comdat any

$_ZN11dawn_native6opengl12ShaderModuleD0Ev = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN4tint9transform9TransformENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_ = comdat any

$_ZN11spirv_cross8CompilerD2Ev = comdat any

$_ZN11spirv_cross8ParsedIRD2Ev = comdat any

$_ZN11spirv_cross3CFGD2Ev = comdat any

$_ZNSt3__116allocator_traitsINS_9allocatorINS_11__hash_nodeINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS4_5TypesE4EEENS4_14SPIREntryPointEEEPvEEEEE7destroyINS_4pairIKS7_S8_EEvvEEvRSC_PT_ = comdat any

$_ZNSt3__116allocator_traitsINS_9allocatorINS_11__hash_nodeINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS4_5TypesE0EEENS4_4MetaEEEPvEEEEE7destroyINS_4pairIKS7_S8_EEvvEEvRSC_PT_ = comdat any

$_ZN11spirv_cross4Meta10DecorationD2Ev = comdat any

$_ZN11spirv_cross15ObjectPoolGroupD2Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZNSt3__116allocator_traitsINS_9allocatorINS_11__hash_nodeINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS1_IcEEEENS_10unique_ptrIN11dawn_native18EntryPointMetadataENS_14default_deleteISB_EEEEEEPvEEEEE7destroyINS_4pairIKS8_SE_EEvvEEvRSI_PT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIjN11dawn_native18EntryPointMetadata17ShaderBindingInfoEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN11dawn_native18EntryPointMetadataENS_14default_deleteISA_EEEEEENS_22__unordered_map_hasherIS7_SE_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SE_SJ_SH_Lb1EEENS5_ISE_EEE13__move_assignERSO_NS_17integral_constantIbLb1EEE = comdat any

$_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN11dawn_native18EntryPointMetadataENS_14default_deleteISA_EEEEEENS_22__unordered_map_hasherIS7_SE_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SE_SJ_SH_Lb1EEENS5_ISE_EEE4findIS7_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISE_PvEEEERKT_ = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_ = comdat any

$_ZTVN11dawn_native6opengl12ShaderModuleE = comdat any

$_ZZN14BitSetIteratorILm4EjE8Iterator10getNextBitEvE8wordMask = comdat any

@.str = private unnamed_addr constant [14 x i8] c"dawn_binding_\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"_\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"dawn_combined\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"_dummy_sampler\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"_with_\00", align 1
@.str.5 = private unnamed_addr constant [65 x i8] c"../../third_party/dawn/src/dawn_native/opengl/ShaderModuleGL.cpp\00", align 1
@__func__._ZN11dawn_native6opengl12ShaderModule6CreateEPNS0_6DeviceEPKNS_22ShaderModuleDescriptorEPNS_23ShaderModuleParseResultE = private unnamed_addr constant [7 x i8] c"Create\00", align 1
@_ZTVN11dawn_native6opengl12ShaderModuleE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.dawn_native::opengl::ShaderModule"*)* @_ZN11dawn_native6opengl12ShaderModuleD2Ev to i8*), i8* bitcast (void (%"class.dawn_native::opengl::ShaderModule"*)* @_ZN11dawn_native6opengl12ShaderModuleD0Ev to i8*), i8* bitcast (void (%class.RefCounted*)* @_ZN10RefCounted10DeleteThisEv to i8*), i8* bitcast (i64 (%"class.dawn_native::ShaderModuleBase"*)* @_ZN11dawn_native16ShaderModuleBase18ComputeContentHashEv to i8*)] }, comdat, align 8
@__func__._ZN11dawn_native6opengl12ShaderModule10InitializeEPNS_23ShaderModuleParseResultE = private unnamed_addr constant [11 x i8] c"Initialize\00", align 1
@__const._ZN11dawn_native6opengl12ShaderModule10InitializeEPNS_23ShaderModuleParseResultE.program = private unnamed_addr constant %"class.tint::Program" <{ %"class.tint::ProgramID" { i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %"class.tint::sem::Manager" { %"class.std::__1::unordered_map" { %"class.std::__1::__hash_table.100" <{ %"class.std::__1::unique_ptr.101" { %"class.std::__1::__compressed_pair.102" { %"struct.std::__1::__compressed_pair_elem.103" { %"struct.std::__1::__hash_node_base.104"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.104"**) }, %"struct.std::__1::__compressed_pair_elem.105" { %"class.std::__1::__bucket_list_deallocator.106" { %"class.std::__1::__compressed_pair.107" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.111" { %"struct.std::__1::__compressed_pair_elem.112" { %"struct.std::__1::__hash_node_base.104" { %"struct.std::__1::__hash_node_base.104"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.104"*) } } }, %"class.std::__1::__compressed_pair.116" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.118" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.tint::BlockAllocator" { %"class.std::__1::vector.121" { %"class.std::__1::__vector_base.122" { %"class.std::__1::unique_ptr.123"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.123"*), %"class.std::__1::unique_ptr.123"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.123"*), %"class.std::__1::__compressed_pair.124" { %"struct.std::__1::__compressed_pair_elem.125" { %"class.std::__1::unique_ptr.123"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.123"*) } } } } } }, %"class.tint::BlockAllocator.129" { %"class.std::__1::vector.130" { %"class.std::__1::__vector_base.131" { %"class.std::__1::unique_ptr.132"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.132"*), %"class.std::__1::unique_ptr.132"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.132"*), %"class.std::__1::__compressed_pair.133" { %"struct.std::__1::__compressed_pair_elem.134" { %"class.std::__1::unique_ptr.132"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.132"*) } } } } }, %"class.tint::BlockAllocator.138" { %"class.std::__1::vector.139" { %"class.std::__1::__vector_base.140" { %"class.std::__1::unique_ptr.141"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.141"*), %"class.std::__1::unique_ptr.141"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.141"*), %"class.std::__1::__compressed_pair.142" { %"struct.std::__1::__compressed_pair_elem.143" { %"class.std::__1::unique_ptr.141"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.141"*) } } } } }, %"class.tint::ast::Module"* inttoptr (i64 -6148914691236517206 to %"class.tint::ast::Module"*), %"class.tint::sem::Info" { %"class.std::__1::unordered_map.206" { %"class.std::__1::__hash_table.207" <{ %"class.std::__1::unique_ptr.208" { %"class.std::__1::__compressed_pair.209" { %"struct.std::__1::__compressed_pair_elem.210" { %"struct.std::__1::__hash_node_base.211"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.211"**) }, %"struct.std::__1::__compressed_pair_elem.212" { %"class.std::__1::__bucket_list_deallocator.213" { %"class.std::__1::__compressed_pair.214" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.218" { %"struct.std::__1::__compressed_pair_elem.219" { %"struct.std::__1::__hash_node_base.211" { %"struct.std::__1::__hash_node_base.211"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.211"*) } } }, %"class.std::__1::__compressed_pair.223" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.228" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> } }, %"class.tint::SymbolTable" { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unordered_map.234" { %"class.std::__1::__hash_table.235" <{ %"class.std::__1::unique_ptr.236" { %"class.std::__1::__compressed_pair.237" { %"struct.std::__1::__compressed_pair_elem.238" { %"struct.std::__1::__hash_node_base.239"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.239"**) }, %"struct.std::__1::__compressed_pair_elem.240" { %"class.std::__1::__bucket_list_deallocator.241" { %"class.std::__1::__compressed_pair.242" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.246" { %"struct.std::__1::__compressed_pair_elem.247" { %"struct.std::__1::__hash_node_base.239" { %"struct.std::__1::__hash_node_base.239"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.239"*) } } }, %"class.std::__1::__compressed_pair.251" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.254" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_map.260" { %"class.std::__1::__hash_table.261" <{ %"class.std::__1::unique_ptr.262" { %"class.std::__1::__compressed_pair.263" { %"struct.std::__1::__compressed_pair_elem.264" { %"struct.std::__1::__hash_node_base.265"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.265"**) }, %"struct.std::__1::__compressed_pair_elem.266" { %"class.std::__1::__bucket_list_deallocator.267" { %"class.std::__1::__compressed_pair.268" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.272" { %"struct.std::__1::__compressed_pair_elem.273" { %"struct.std::__1::__hash_node_base.265" { %"struct.std::__1::__hash_node_base.265"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.265"*) } } }, %"class.std::__1::__compressed_pair.277" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.280" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.tint::ProgramID" { i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA" }, %"class.tint::diag::List" { %"class.std::__1::vector.284" { %"class.std::__1::__vector_base.285" { %"class.tint::diag::Diagnostic"* inttoptr (i64 -6148914691236517206 to %"class.tint::diag::Diagnostic"*), %"class.tint::diag::Diagnostic"* inttoptr (i64 -6148914691236517206 to %"class.tint::diag::Diagnostic"*), %"class.std::__1::__compressed_pair.286" { %"struct.std::__1::__compressed_pair_elem.287" { %"class.tint::diag::Diagnostic"* inttoptr (i64 -6148914691236517206 to %"class.tint::diag::Diagnostic"*) } } } }, i64 -6148914691236517206 }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }>, align 8
@__const._ZN11dawn_native6opengl12ShaderModule10InitializeEPNS_23ShaderModuleParseResultE._localVar95 = private unnamed_addr constant { i32, [4 x i8], %"class.std::__1::unique_ptr.347", %"class.tint::Program" } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unique_ptr.347" { %"class.std::__1::__compressed_pair.348" { %"struct.std::__1::__compressed_pair_elem.349" { %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*) } } }, %"class.tint::Program" <{ %"class.tint::ProgramID" { i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %"class.tint::sem::Manager" { %"class.std::__1::unordered_map" { %"class.std::__1::__hash_table.100" <{ %"class.std::__1::unique_ptr.101" { %"class.std::__1::__compressed_pair.102" { %"struct.std::__1::__compressed_pair_elem.103" { %"struct.std::__1::__hash_node_base.104"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.104"**) }, %"struct.std::__1::__compressed_pair_elem.105" { %"class.std::__1::__bucket_list_deallocator.106" { %"class.std::__1::__compressed_pair.107" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.111" { %"struct.std::__1::__compressed_pair_elem.112" { %"struct.std::__1::__hash_node_base.104" { %"struct.std::__1::__hash_node_base.104"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.104"*) } } }, %"class.std::__1::__compressed_pair.116" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.118" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.tint::BlockAllocator" { %"class.std::__1::vector.121" { %"class.std::__1::__vector_base.122" { %"class.std::__1::unique_ptr.123"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.123"*), %"class.std::__1::unique_ptr.123"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.123"*), %"class.std::__1::__compressed_pair.124" { %"struct.std::__1::__compressed_pair_elem.125" { %"class.std::__1::unique_ptr.123"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.123"*) } } } } } }, %"class.tint::BlockAllocator.129" { %"class.std::__1::vector.130" { %"class.std::__1::__vector_base.131" { %"class.std::__1::unique_ptr.132"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.132"*), %"class.std::__1::unique_ptr.132"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.132"*), %"class.std::__1::__compressed_pair.133" { %"struct.std::__1::__compressed_pair_elem.134" { %"class.std::__1::unique_ptr.132"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.132"*) } } } } }, %"class.tint::BlockAllocator.138" { %"class.std::__1::vector.139" { %"class.std::__1::__vector_base.140" { %"class.std::__1::unique_ptr.141"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.141"*), %"class.std::__1::unique_ptr.141"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.141"*), %"class.std::__1::__compressed_pair.142" { %"struct.std::__1::__compressed_pair_elem.143" { %"class.std::__1::unique_ptr.141"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.141"*) } } } } }, %"class.tint::ast::Module"* inttoptr (i64 -6148914691236517206 to %"class.tint::ast::Module"*), %"class.tint::sem::Info" { %"class.std::__1::unordered_map.206" { %"class.std::__1::__hash_table.207" <{ %"class.std::__1::unique_ptr.208" { %"class.std::__1::__compressed_pair.209" { %"struct.std::__1::__compressed_pair_elem.210" { %"struct.std::__1::__hash_node_base.211"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.211"**) }, %"struct.std::__1::__compressed_pair_elem.212" { %"class.std::__1::__bucket_list_deallocator.213" { %"class.std::__1::__compressed_pair.214" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.218" { %"struct.std::__1::__compressed_pair_elem.219" { %"struct.std::__1::__hash_node_base.211" { %"struct.std::__1::__hash_node_base.211"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.211"*) } } }, %"class.std::__1::__compressed_pair.223" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.228" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> } }, %"class.tint::SymbolTable" { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unordered_map.234" { %"class.std::__1::__hash_table.235" <{ %"class.std::__1::unique_ptr.236" { %"class.std::__1::__compressed_pair.237" { %"struct.std::__1::__compressed_pair_elem.238" { %"struct.std::__1::__hash_node_base.239"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.239"**) }, %"struct.std::__1::__compressed_pair_elem.240" { %"class.std::__1::__bucket_list_deallocator.241" { %"class.std::__1::__compressed_pair.242" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.246" { %"struct.std::__1::__compressed_pair_elem.247" { %"struct.std::__1::__hash_node_base.239" { %"struct.std::__1::__hash_node_base.239"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.239"*) } } }, %"class.std::__1::__compressed_pair.251" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.254" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_map.260" { %"class.std::__1::__hash_table.261" <{ %"class.std::__1::unique_ptr.262" { %"class.std::__1::__compressed_pair.263" { %"struct.std::__1::__compressed_pair_elem.264" { %"struct.std::__1::__hash_node_base.265"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.265"**) }, %"struct.std::__1::__compressed_pair_elem.266" { %"class.std::__1::__bucket_list_deallocator.267" { %"class.std::__1::__compressed_pair.268" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.272" { %"struct.std::__1::__compressed_pair_elem.273" { %"struct.std::__1::__hash_node_base.265" { %"struct.std::__1::__hash_node_base.265"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.265"*) } } }, %"class.std::__1::__compressed_pair.277" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.280" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.tint::ProgramID" { i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA" }, %"class.tint::diag::List" { %"class.std::__1::vector.284" { %"class.std::__1::__vector_base.285" { %"class.tint::diag::Diagnostic"* inttoptr (i64 -6148914691236517206 to %"class.tint::diag::Diagnostic"*), %"class.tint::diag::Diagnostic"* inttoptr (i64 -6148914691236517206 to %"class.tint::diag::Diagnostic"*), %"class.std::__1::__compressed_pair.286" { %"struct.std::__1::__compressed_pair_elem.287" { %"class.tint::diag::Diagnostic"* inttoptr (i64 -6148914691236517206 to %"class.tint::diag::Diagnostic"*) } } } }, i64 -6148914691236517206 }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }> }, align 8
@.str.6 = private unnamed_addr constant [12 x i8] c"Generator: \00", align 1
@__const._ZN11dawn_native6opengl12ShaderModule10InitializeEPNS_23ShaderModuleParseResultE._localVar105 = private unnamed_addr constant { i32, [4 x i8], %"class.std::__1::unique_ptr.347", %"class.std::__1::unordered_map.322" } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unique_ptr.347" { %"class.std::__1::__compressed_pair.348" { %"struct.std::__1::__compressed_pair_elem.349" { %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*) } } }, %"class.std::__1::unordered_map.322" { %"class.std::__1::__hash_table.323" <{ %"class.std::__1::unique_ptr.324" { %"class.std::__1::__compressed_pair.325" { %"struct.std::__1::__compressed_pair_elem.326" { %"struct.std::__1::__hash_node_base.327"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.327"**) }, %"struct.std::__1::__compressed_pair_elem.328" { %"class.std::__1::__bucket_list_deallocator.329" { %"class.std::__1::__compressed_pair.330" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.334" { %"struct.std::__1::__compressed_pair_elem.335" { %"struct.std::__1::__hash_node_base.327" { %"struct.std::__1::__hash_node_base.327"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.327"*) } } }, %"class.std::__1::__compressed_pair.339" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.342" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> } }, align 8
@__const._ZNK11dawn_native6opengl12ShaderModule15TranslateToGLSLEPKcNS_17SingleShaderStageEPNSt3__16vectorINS0_15CombinedSamplerENS5_9allocatorIS7_EEEEPKNS0_14PipelineLayoutEPb.compiler = private unnamed_addr constant { { i32 (...)**, { %"class.std::__1::unique_ptr.586", %"class.std::__1::vector.300", %"class.spirv_cross::SmallVector", %"class.std::__1::unordered_map.598", [14 x %"class.spirv_cross::SmallVector.625"], %"class.spirv_cross::SmallVector.625", %"class.spirv_cross::SmallVector.625", %"class.spirv_cross::SmallVector.628", %"class.spirv_cross::SmallVector.631", %"class.spirv_cross::SmallVector.634", %"class.std::__1::unordered_map.637", %"class.std::__1::unordered_map.664", %"class.spirv_cross::TypedID.691", %"struct.spirv_cross::ParsedIR::Source", i32, i32, i32, i32, [4 x i8], %"class.std::__1::basic_string", %"class.spirv_cross::Bitset", %"class.std::__1::unordered_set.541" }, %"class.spirv_cross::SmallVector.692", %"class.spirv_cross::SmallVector.692", %"struct.spirv_cross::SPIRFunction"*, %"struct.spirv_cross::SPIRBlock"*, i32, [4 x i8], %"class.std::__1::unordered_set.726", i8, [7 x i8], %"class.std::__1::unordered_set.541", i8, [7 x i8], %"class.spirv_cross::SmallVector.751", %"class.spirv_cross::SmallVector.692", %"class.std::__1::function.754", %"class.std::__1::unordered_set.541", %"class.std::__1::unordered_set.541", %"class.std::__1::unordered_set.541", %"class.std::__1::unordered_set.541", %"class.std::__1::unordered_set.541", %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset", i32, i32, i8, [7 x i8], %"class.std::__1::unordered_set.541", i8, [3 x i8], i32, %"class.std::__1::unordered_map.761", %"class.spirv_cross::SmallVector.692", %"class.std::__1::unordered_set.541", i8, [7 x i8], %"class.std::__1::unordered_map.785" }, %"struct.spirv_cross::SPIRBlock"*, %"struct.spirv_cross::SPIRBlock"*, i8, [7 x i8], %"class.spirv_cross::StringStream", %"class.spirv_cross::SmallVector.631"*, %"struct.spirv_cross::SPIRBlock"*, { i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.spirv_cross::CompilerGLSL::Options::VertexOptions", [1 x i8], %"struct.spirv_cross::CompilerGLSL::Options::FragmentOptions" }, [4 x i8], %"class.std::__1::unordered_set", %"class.std::__1::unordered_set", %"class.std::__1::unordered_set", %"class.std::__1::unordered_set", %"class.std::__1::unordered_set", %"class.std::__1::unordered_set", %"class.std::__1::unordered_set", %"class.std::__1::unordered_map.812", %"class.std::__1::unordered_map.785", i8, [7 x i8], %"struct.spirv_cross::CompilerGLSL::BackendVariations", i32, [4 x i8], %"class.std::__1::unordered_set.541", %"class.std::__1::unordered_set.541", %"class.std::__1::unordered_set.541", %"class.std::__1::unordered_map.836", %"struct.spirv_cross::CompilerGLSL::ShaderSubgroupSupportHelper", [4 x i8], %"class.std::__1::unordered_map.860", %"class.spirv_cross::SmallVector.631", %"class.spirv_cross::SmallVector.631", %"class.std::__1::unordered_map.860", %"class.spirv_cross::SmallVector.758", i32, i8, i8, i8, i8, %"class.std::__1::vector.884", %"class.std::__1::vector.884", %"class.std::__1::vector.891", %"class.std::__1::vector.899", i8, [7 x i8], %"class.std::__1::unordered_set.907", %"class.std::__1::unordered_set.541" } { { i32 (...)**, { %"class.std::__1::unique_ptr.586", %"class.std::__1::vector.300", %"class.spirv_cross::SmallVector", %"class.std::__1::unordered_map.598", [14 x %"class.spirv_cross::SmallVector.625"], %"class.spirv_cross::SmallVector.625", %"class.spirv_cross::SmallVector.625", %"class.spirv_cross::SmallVector.628", %"class.spirv_cross::SmallVector.631", %"class.spirv_cross::SmallVector.634", %"class.std::__1::unordered_map.637", %"class.std::__1::unordered_map.664", %"class.spirv_cross::TypedID.691", %"struct.spirv_cross::ParsedIR::Source", i32, i32, i32, i32, [4 x i8], %"class.std::__1::basic_string", %"class.spirv_cross::Bitset", %"class.std::__1::unordered_set.541" }, %"class.spirv_cross::SmallVector.692", %"class.spirv_cross::SmallVector.692", %"struct.spirv_cross::SPIRFunction"*, %"struct.spirv_cross::SPIRBlock"*, i32, [4 x i8], %"class.std::__1::unordered_set.726", i8, [7 x i8], %"class.std::__1::unordered_set.541", i8, [7 x i8], %"class.spirv_cross::SmallVector.751", %"class.spirv_cross::SmallVector.692", %"class.std::__1::function.754", %"class.std::__1::unordered_set.541", %"class.std::__1::unordered_set.541", %"class.std::__1::unordered_set.541", %"class.std::__1::unordered_set.541", %"class.std::__1::unordered_set.541", %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset", i32, i32, i8, [7 x i8], %"class.std::__1::unordered_set.541", i8, [3 x i8], i32, %"class.std::__1::unordered_map.761", %"class.spirv_cross::SmallVector.692", %"class.std::__1::unordered_set.541", i8, [7 x i8], %"class.std::__1::unordered_map.785" } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), { %"class.std::__1::unique_ptr.586", %"class.std::__1::vector.300", %"class.spirv_cross::SmallVector", %"class.std::__1::unordered_map.598", [14 x %"class.spirv_cross::SmallVector.625"], %"class.spirv_cross::SmallVector.625", %"class.spirv_cross::SmallVector.625", %"class.spirv_cross::SmallVector.628", %"class.spirv_cross::SmallVector.631", %"class.spirv_cross::SmallVector.634", %"class.std::__1::unordered_map.637", %"class.std::__1::unordered_map.664", %"class.spirv_cross::TypedID.691", %"struct.spirv_cross::ParsedIR::Source", i32, i32, i32, i32, [4 x i8], %"class.std::__1::basic_string", %"class.spirv_cross::Bitset", %"class.std::__1::unordered_set.541" } { %"class.std::__1::unique_ptr.586" { %"class.std::__1::__compressed_pair.587" { %"struct.std::__1::__compressed_pair_elem.588" { %"struct.spirv_cross::ObjectPoolGroup"* inttoptr (i64 -6148914691236517206 to %"struct.spirv_cross::ObjectPoolGroup"*) } } }, %"class.std::__1::vector.300" { %"class.std::__1::__vector_base.301" { i32* inttoptr (i64 -6148914691236517206 to i32*), i32* inttoptr (i64 -6148914691236517206 to i32*), %"class.std::__1::__compressed_pair.302" { %"struct.std::__1::__compressed_pair_elem.303" { i32* inttoptr (i64 -6148914691236517206 to i32*) } } } }, %"class.spirv_cross::SmallVector" { %"class.spirv_cross::VectorView" { %"class.spirv_cross::Variant"* inttoptr (i64 -6148914691236517206 to %"class.spirv_cross::Variant"*), i64 -6148914691236517206 }, i64 -6148914691236517206, %"class.spirv_cross::AlignedBuffer" { [192 x i8] c} }, %"class.std::__1::unordered_map.598" { %"class.std::__1::__hash_table.599" <{ %"class.std::__1::unique_ptr.600" { %"class.std::__1::__compressed_pair.601" { %"struct.std::__1::__compressed_pair_elem.602" { %"struct.std::__1::__hash_node_base.603"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.603"**) }, %"struct.std::__1::__compressed_pair_elem.604" { %"class.std::__1::__bucket_list_deallocator.605" { %"class.std::__1::__compressed_pair.606" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.610" { %"struct.std::__1::__compressed_pair_elem.611" { %"struct.std::__1::__hash_node_base.603" { %"struct.std::__1::__hash_node_base.603"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.603"*) } } }, %"class.std::__1::__compressed_pair.615" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.619" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, [14 x %"class.spirv_cross::SmallVector.625"] [%"class.spirv_cross::SmallVector.625" { %"class.spirv_cross::VectorView.626" { %"class.spirv_cross::TypedID"* inttoptr (i64 -6148914691236517206 to %"class.spirv_cross::TypedID"*), i64 -6148914691236517206 }, i64 -6148914691236517206, %"class.spirv_cross::AlignedBuffer.627" { [32 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, %"class.spirv_cross::SmallVector.625" { %"class.spirv_cross::VectorView.626" { %"class.spirv_cross::TypedID"* inttoptr (i64 -6148914691236517206 to %"class.spirv_cross::TypedID"*), i64 -6148914691236517206 }, i64 -6148914691236517206, %"class.spirv_cross::AlignedBuffer.627" { [32 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, %"class.spirv_cross::SmallVector.625" { %"class.spirv_cross::VectorView.626" { %"class.spirv_cross::TypedID"* inttoptr (i64 -6148914691236517206 to %"class.spirv_cross::TypedID"*), i64 -6148914691236517206 }, i64 -6148914691236517206, %"class.spirv_cross::AlignedBuffer.627" { [32 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, %"class.spirv_cross::SmallVector.625" { %"class.spirv_cross::VectorView.626" { %"class.spirv_cross::TypedID"* inttoptr (i64 -6148914691236517206 to %"class.spirv_cross::TypedID"*), i64 -6148914691236517206 }, i64 -6148914691236517206, %"class.spirv_cross::AlignedBuffer.627" { [32 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, %"class.spirv_cross::SmallVector.625" { %"class.spirv_cross::VectorView.626" { %"class.spirv_cross::TypedID"* inttoptr (i64 -6148914691236517206 to %"class.spirv_cross::TypedID"*), i64 -6148914691236517206 }, i64 -6148914691236517206, %"class.spirv_cross::AlignedBuffer.627" { [32 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, %"class.spirv_cross::SmallVector.625" { %"class.spirv_cross::VectorView.626" { %"class.spirv_cross::TypedID"* inttoptr (i64 -6148914691236517206 to %"class.spirv_cross::TypedID"*), i64 -6148914691236517206 }, i64 -6148914691236517206, %"class.spirv_cross::AlignedBuffer.627" { [32 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, %"class.spirv_cross::SmallVector.625" { %"class.spirv_cross::VectorView.626" { %"class.spirv_cross::TypedID"* inttoptr (i64 -6148914691236517206 to %"class.spirv_cross::TypedID"*), i64 -6148914691236517206 }, i64 -6148914691236517206, %"class.spirv_cross::AlignedBuffer.627" { [32 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, %"class.spirv_cross::SmallVector.625" { %"class.spirv_cross::VectorView.626" { %"class.spirv_cross::TypedID"* inttoptr (i64 -6148914691236517206 to %"class.spirv_cross::TypedID"*), i64 -6148914691236517206 }, i64 -6148914691236517206, %"class.spirv_cross::AlignedBuffer.627" { [32 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, %"class.spirv_cross::SmallVector.625" { %"class.spirv_cross::VectorView.626" { %"class.spirv_cross::TypedID"* inttoptr (i64 -6148914691236517206 to %"class.spirv_cross::TypedID"*), i64 -6148914691236517206 }, i64 -6148914691236517206, %"class.spirv_cross::AlignedBuffer.627" { [32 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, %"class.spirv_cross::SmallVector.625" { %"class.spirv_cross::VectorView.626" { %"class.spirv_cross::TypedID"* inttoptr (i64 -6148914691236517206 to %"class.spirv_cross::TypedID"*), i64 -6148914691236517206 }, i64 -6148914691236517206, %"class.spirv_cross::AlignedBuffer.627" { [32 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, %"class.spirv_cross::SmallVector.625" { %"class.spirv_cross::VectorView.626" { %"class.spirv_cross::TypedID"* inttoptr (i64 -6148914691236517206 to %"class.spirv_cross::TypedID"*), i64 -6148914691236517206 }, i64 -6148914691236517206, %"class.spirv_cross::AlignedBuffer.627" { [32 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, %"class.spirv_cross::SmallVector.625" { %"class.spirv_cross::VectorView.626" { %"class.spirv_cross::TypedID"* inttoptr (i64 -6148914691236517206 to %"class.spirv_cross::TypedID"*), i64 -6148914691236517206 }, i64 -6148914691236517206, %"class.spirv_cross::AlignedBuffer.627" { [32 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, %"class.spirv_cross::SmallVector.625" { %"class.spirv_cross::VectorView.626" { %"class.spirv_cross::TypedID"* inttoptr (i64 -6148914691236517206 to %"class.spirv_cross::TypedID"*), i64 -6148914691236517206 }, i64 -6148914691236517206, %"class.spirv_cross::AlignedBuffer.627" { [32 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, %"class.spirv_cross::SmallVector.625" { %"class.spirv_cross::VectorView.626" { %"class.spirv_cross::TypedID"* inttoptr (i64 -6148914691236517206 to %"class.spirv_cross::TypedID"*), i64 -6148914691236517206 }, i64 -6148914691236517206, %"class.spirv_cross::AlignedBuffer.627" { [32 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }], %"class.spirv_cross::SmallVector.625" { %"class.spirv_cross::VectorView.626" { %"class.spirv_cross::TypedID"* inttoptr (i64 -6148914691236517206 to %"class.spirv_cross::TypedID"*), i64 -6148914691236517206 }, i64 -6148914691236517206, %"class.spirv_cross::AlignedBuffer.627" { [32 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, %"class.spirv_cross::SmallVector.625" { %"class.spirv_cross::VectorView.626" { %"class.spirv_cross::TypedID"* inttoptr (i64 -6148914691236517206 to %"class.spirv_cross::TypedID"*), i64 -6148914691236517206 }, i64 -6148914691236517206, %"class.spirv_cross::AlignedBuffer.627" { [32 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, %"class.spirv_cross::SmallVector.628" { %"class.spirv_cross::VectorView.629" { i32* inttoptr (i64 -6148914691236517206 to i32*), i64 -6148914691236517206 }, i64 -6148914691236517206, %"class.spirv_cross::AlignedBuffer.630" { [32 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, %"class.spirv_cross::SmallVector.631" { %"class.spirv_cross::VectorView.632" { %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*), i64 -6148914691236517206 }, i64 -6148914691236517206, %"class.spirv_cross::AlignedBuffer.633" { [192 x i8] c} }, %"class.spirv_cross::SmallVector.634" { %"class.spirv_cross::VectorView.635" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206 }, i64 -6148914691236517206, %"class.spirv_cross::AlignedBuffer.636" { [8 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA" } }, %"class.std::__1::unordered_map.637" { %"class.std::__1::__hash_table.638" <{ %"class.std::__1::unique_ptr.639" { %"class.std::__1::__compressed_pair.640" { %"struct.std::__1::__compressed_pair_elem.641" { %"struct.std::__1::__hash_node_base.642"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.642"**) }, %"struct.std::__1::__compressed_pair_elem.643" { %"class.std::__1::__bucket_list_deallocator.644" { %"class.std::__1::__compressed_pair.645" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.649" { %"struct.std::__1::__compressed_pair_elem.650" { %"struct.std::__1::__hash_node_base.642" { %"struct.std::__1::__hash_node_base.642"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.642"*) } } }, %"class.std::__1::__compressed_pair.654" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.658" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_map.664" { %"class.std::__1::__hash_table.665" <{ %"class.std::__1::unique_ptr.666" { %"class.std::__1::__compressed_pair.667" { %"struct.std::__1::__compressed_pair_elem.668" { %"struct.std::__1::__hash_node_base.669"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.669"**) }, %"struct.std::__1::__compressed_pair_elem.670" { %"class.std::__1::__bucket_list_deallocator.671" { %"class.std::__1::__compressed_pair.672" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.676" { %"struct.std::__1::__compressed_pair_elem.677" { %"struct.std::__1::__hash_node_base.669" { %"struct.std::__1::__hash_node_base.669"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.669"*) } } }, %"class.std::__1::__compressed_pair.681" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.685" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.spirv_cross::TypedID.691" { i32 -1431655766 }, %"struct.spirv_cross::ParsedIR::Source" <{ i32 -1431655766, i8 -86, i8 -86, i8 -86, i8 -86 }>, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.spirv_cross::Bitset" { i64 -6148914691236517206, %"class.std::__1::unordered_set.541" { %"class.std::__1::__hash_table.542" <{ %"class.std::__1::unique_ptr.543" { %"class.std::__1::__compressed_pair.544" { %"struct.std::__1::__compressed_pair_elem.545" { %"struct.std::__1::__hash_node_base.546"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.546"**) }, %"struct.std::__1::__compressed_pair_elem.547" { %"class.std::__1::__bucket_list_deallocator.548" { %"class.std::__1::__compressed_pair.549" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.553" { %"struct.std::__1::__compressed_pair_elem.554" { %"struct.std::__1::__hash_node_base.546" { %"struct.std::__1::__hash_node_base.546"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.546"*) } } }, %"class.std::__1::__compressed_pair.558" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.560" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> } }, %"class.std::__1::unordered_set.541" { %"class.std::__1::__hash_table.542" <{ %"class.std::__1::unique_ptr.543" { %"class.std::__1::__compressed_pair.544" { %"struct.std::__1::__compressed_pair_elem.545" { %"struct.std::__1::__hash_node_base.546"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.546"**) }, %"struct.std::__1::__compressed_pair_elem.547" { %"class.std::__1::__bucket_list_deallocator.548" { %"class.std::__1::__compressed_pair.549" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.553" { %"struct.std::__1::__compressed_pair_elem.554" { %"struct.std::__1::__hash_node_base.546" { %"struct.std::__1::__hash_node_base.546"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.546"*) } } }, %"class.std::__1::__compressed_pair.558" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.560" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> } }, %"class.spirv_cross::SmallVector.692" { %"class.spirv_cross::VectorView.693" { i32* inttoptr (i64 -6148914691236517206 to i32*), i64 -6148914691236517206 }, i64 -6148914691236517206, %"class.spirv_cross::AlignedBuffer.694" { [32 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, %"class.spirv_cross::SmallVector.692" { %"class.spirv_cross::VectorView.693" { i32* inttoptr (i64 -6148914691236517206 to i32*), i64 -6148914691236517206 }, i64 -6148914691236517206, %"class.spirv_cross::AlignedBuffer.694" { [32 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, %"struct.spirv_cross::SPIRFunction"* inttoptr (i64 -6148914691236517206 to %"struct.spirv_cross::SPIRFunction"*), %"struct.spirv_cross::SPIRBlock"* inttoptr (i64 -6148914691236517206 to %"struct.spirv_cross::SPIRBlock"*), i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unordered_set.726" { %"class.std::__1::__hash_table.727" <{ %"class.std::__1::unique_ptr.728" { %"class.std::__1::__compressed_pair.729" { %"struct.std::__1::__compressed_pair_elem.730" { %"struct.std::__1::__hash_node_base.731"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.731"**) }, %"struct.std::__1::__compressed_pair_elem.732" { %"class.std::__1::__bucket_list_deallocator.733" { %"class.std::__1::__compressed_pair.734" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.738" { %"struct.std::__1::__compressed_pair_elem.739" { %"struct.std::__1::__hash_node_base.731" { %"struct.std::__1::__hash_node_base.731"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.731"*) } } }, %"class.std::__1::__compressed_pair.743" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.746" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"class.std::__1::unordered_set.541" { %"class.std::__1::__hash_table.542" <{ %"class.std::__1::unique_ptr.543" { %"class.std::__1::__compressed_pair.544" { %"struct.std::__1::__compressed_pair_elem.545" { %"struct.std::__1::__hash_node_base.546"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.546"**) }, %"struct.std::__1::__compressed_pair_elem.547" { %"class.std::__1::__bucket_list_deallocator.548" { %"class.std::__1::__compressed_pair.549" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.553" { %"struct.std::__1::__compressed_pair_elem.554" { %"struct.std::__1::__hash_node_base.546" { %"struct.std::__1::__hash_node_base.546"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.546"*) } } }, %"class.std::__1::__compressed_pair.558" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.560" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"class.spirv_cross::SmallVector.751" { %"class.spirv_cross::VectorView.752" { %"struct.spirv_cross::CombinedImageSampler"* inttoptr (i64 -6148914691236517206 to %"struct.spirv_cross::CombinedImageSampler"*), i64 -6148914691236517206 }, i64 -6148914691236517206, %"class.spirv_cross::AlignedBuffer.753" { [96 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, %"class.spirv_cross::SmallVector.692" { %"class.spirv_cross::VectorView.693" { i32* inttoptr (i64 -6148914691236517206 to i32*), i64 -6148914691236517206 }, i64 -6148914691236517206, %"class.spirv_cross::AlignedBuffer.694" { [32 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, %"class.std::__1::function.754" { %"class.std::__1::__function::__policy_func" { %"union.std::__1::__function::__policy_storage" { i8* inttoptr (i64 -6148914691236517206 to i8*), [8 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA" }, %"struct.std::__1::__function::__policy_invoker" { void (%"union.std::__1::__function::__policy_storage"*, %"struct.spirv_cross::SPIRType"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)* inttoptr (i64 -6148914691236517206 to void (%"union.std::__1::__function::__policy_storage"*, %"struct.spirv_cross::SPIRType"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)*) }, %"struct.std::__1::__function::__policy"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__function::__policy"*) } }, %"class.std::__1::unordered_set.541" { %"class.std::__1::__hash_table.542" <{ %"class.std::__1::unique_ptr.543" { %"class.std::__1::__compressed_pair.544" { %"struct.std::__1::__compressed_pair_elem.545" { %"struct.std::__1::__hash_node_base.546"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.546"**) }, %"struct.std::__1::__compressed_pair_elem.547" { %"class.std::__1::__bucket_list_deallocator.548" { %"class.std::__1::__compressed_pair.549" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.553" { %"struct.std::__1::__compressed_pair_elem.554" { %"struct.std::__1::__hash_node_base.546" { %"struct.std::__1::__hash_node_base.546"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.546"*) } } }, %"class.std::__1::__compressed_pair.558" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.560" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_set.541" { %"class.std::__1::__hash_table.542" <{ %"class.std::__1::unique_ptr.543" { %"class.std::__1::__compressed_pair.544" { %"struct.std::__1::__compressed_pair_elem.545" { %"struct.std::__1::__hash_node_base.546"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.546"**) }, %"struct.std::__1::__compressed_pair_elem.547" { %"class.std::__1::__bucket_list_deallocator.548" { %"class.std::__1::__compressed_pair.549" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.553" { %"struct.std::__1::__compressed_pair_elem.554" { %"struct.std::__1::__hash_node_base.546" { %"struct.std::__1::__hash_node_base.546"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.546"*) } } }, %"class.std::__1::__compressed_pair.558" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.560" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_set.541" { %"class.std::__1::__hash_table.542" <{ %"class.std::__1::unique_ptr.543" { %"class.std::__1::__compressed_pair.544" { %"struct.std::__1::__compressed_pair_elem.545" { %"struct.std::__1::__hash_node_base.546"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.546"**) }, %"struct.std::__1::__compressed_pair_elem.547" { %"class.std::__1::__bucket_list_deallocator.548" { %"class.std::__1::__compressed_pair.549" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.553" { %"struct.std::__1::__compressed_pair_elem.554" { %"struct.std::__1::__hash_node_base.546" { %"struct.std::__1::__hash_node_base.546"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.546"*) } } }, %"class.std::__1::__compressed_pair.558" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.560" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_set.541" { %"class.std::__1::__hash_table.542" <{ %"class.std::__1::unique_ptr.543" { %"class.std::__1::__compressed_pair.544" { %"struct.std::__1::__compressed_pair_elem.545" { %"struct.std::__1::__hash_node_base.546"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.546"**) }, %"struct.std::__1::__compressed_pair_elem.547" { %"class.std::__1::__bucket_list_deallocator.548" { %"class.std::__1::__compressed_pair.549" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.553" { %"struct.std::__1::__compressed_pair_elem.554" { %"struct.std::__1::__hash_node_base.546" { %"struct.std::__1::__hash_node_base.546"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.546"*) } } }, %"class.std::__1::__compressed_pair.558" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.560" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_set.541" { %"class.std::__1::__hash_table.542" <{ %"class.std::__1::unique_ptr.543" { %"class.std::__1::__compressed_pair.544" { %"struct.std::__1::__compressed_pair_elem.545" { %"struct.std::__1::__hash_node_base.546"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.546"**) }, %"struct.std::__1::__compressed_pair_elem.547" { %"class.std::__1::__bucket_list_deallocator.548" { %"class.std::__1::__compressed_pair.549" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.553" { %"struct.std::__1::__compressed_pair_elem.554" { %"struct.std::__1::__hash_node_base.546" { %"struct.std::__1::__hash_node_base.546"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.546"*) } } }, %"class.std::__1::__compressed_pair.558" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.560" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.spirv_cross::Bitset" { i64 -6148914691236517206, %"class.std::__1::unordered_set.541" { %"class.std::__1::__hash_table.542" <{ %"class.std::__1::unique_ptr.543" { %"class.std::__1::__compressed_pair.544" { %"struct.std::__1::__compressed_pair_elem.545" { %"struct.std::__1::__hash_node_base.546"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.546"**) }, %"struct.std::__1::__compressed_pair_elem.547" { %"class.std::__1::__bucket_list_deallocator.548" { %"class.std::__1::__compressed_pair.549" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.553" { %"struct.std::__1::__compressed_pair_elem.554" { %"struct.std::__1::__hash_node_base.546" { %"struct.std::__1::__hash_node_base.546"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.546"*) } } }, %"class.std::__1::__compressed_pair.558" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.560" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> } }, %"class.spirv_cross::Bitset" { i64 -6148914691236517206, %"class.std::__1::unordered_set.541" { %"class.std::__1::__hash_table.542" <{ %"class.std::__1::unique_ptr.543" { %"class.std::__1::__compressed_pair.544" { %"struct.std::__1::__compressed_pair_elem.545" { %"struct.std::__1::__hash_node_base.546"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.546"**) }, %"struct.std::__1::__compressed_pair_elem.547" { %"class.std::__1::__bucket_list_deallocator.548" { %"class.std::__1::__compressed_pair.549" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.553" { %"struct.std::__1::__compressed_pair_elem.554" { %"struct.std::__1::__hash_node_base.546" { %"struct.std::__1::__hash_node_base.546"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.546"*) } } }, %"class.std::__1::__compressed_pair.558" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.560" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> } }, i32 -1431655766, i32 -1431655766, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"class.std::__1::unordered_set.541" { %"class.std::__1::__hash_table.542" <{ %"class.std::__1::unique_ptr.543" { %"class.std::__1::__compressed_pair.544" { %"struct.std::__1::__compressed_pair_elem.545" { %"struct.std::__1::__hash_node_base.546"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.546"**) }, %"struct.std::__1::__compressed_pair_elem.547" { %"class.std::__1::__bucket_list_deallocator.548" { %"class.std::__1::__compressed_pair.549" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.553" { %"struct.std::__1::__compressed_pair_elem.554" { %"struct.std::__1::__hash_node_base.546" { %"struct.std::__1::__hash_node_base.546"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.546"*) } } }, %"class.std::__1::__compressed_pair.558" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.560" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, %"class.std::__1::unordered_map.761" { %"class.std::__1::__hash_table.762" <{ %"class.std::__1::unique_ptr.763" { %"class.std::__1::__compressed_pair.764" { %"struct.std::__1::__compressed_pair_elem.765" { %"struct.std::__1::__hash_node_base.766"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.766"**) }, %"struct.std::__1::__compressed_pair_elem.767" { %"class.std::__1::__bucket_list_deallocator.768" { %"class.std::__1::__compressed_pair.769" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.773" { %"struct.std::__1::__compressed_pair_elem.774" { %"struct.std::__1::__hash_node_base.766" { %"struct.std::__1::__hash_node_base.766"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.766"*) } } }, %"class.std::__1::__compressed_pair.778" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.781" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.spirv_cross::SmallVector.692" { %"class.spirv_cross::VectorView.693" { i32* inttoptr (i64 -6148914691236517206 to i32*), i64 -6148914691236517206 }, i64 -6148914691236517206, %"class.spirv_cross::AlignedBuffer.694" { [32 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, %"class.std::__1::unordered_set.541" { %"class.std::__1::__hash_table.542" <{ %"class.std::__1::unique_ptr.543" { %"class.std::__1::__compressed_pair.544" { %"struct.std::__1::__compressed_pair_elem.545" { %"struct.std::__1::__hash_node_base.546"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.546"**) }, %"struct.std::__1::__compressed_pair_elem.547" { %"class.std::__1::__bucket_list_deallocator.548" { %"class.std::__1::__compressed_pair.549" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.553" { %"struct.std::__1::__compressed_pair_elem.554" { %"struct.std::__1::__hash_node_base.546" { %"struct.std::__1::__hash_node_base.546"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.546"*) } } }, %"class.std::__1::__compressed_pair.558" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.560" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"class.std::__1::unordered_map.785" { %"class.std::__1::__hash_table.786" <{ %"class.std::__1::unique_ptr.787" { %"class.std::__1::__compressed_pair.788" { %"struct.std::__1::__compressed_pair_elem.789" { %"struct.std::__1::__hash_node_base.790"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.790"**) }, %"struct.std::__1::__compressed_pair_elem.791" { %"class.std::__1::__bucket_list_deallocator.792" { %"class.std::__1::__compressed_pair.793" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.797" { %"struct.std::__1::__compressed_pair_elem.798" { %"struct.std::__1::__hash_node_base.790" { %"struct.std::__1::__hash_node_base.790"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.790"*) } } }, %"class.std::__1::__compressed_pair.802" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.805" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> } }, %"struct.spirv_cross::SPIRBlock"* inttoptr (i64 -6148914691236517206 to %"struct.spirv_cross::SPIRBlock"*), %"struct.spirv_cross::SPIRBlock"* inttoptr (i64 -6148914691236517206 to %"struct.spirv_cross::SPIRBlock"*), i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"class.spirv_cross::StringStream" { %"struct.spirv_cross::StringStream<4096, 4096>::Buffer" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 }, [4096 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA", %"class.spirv_cross::SmallVector.809" { %"class.spirv_cross::VectorView.810" { %"struct.spirv_cross::StringStream<4096, 4096>::Buffer"* inttoptr (i64 -6148914691236517206 to %"struct.spirv_cross::StringStream<4096, 4096>::Buffer"*), i64 -6148914691236517206 }, i64 -6148914691236517206, %"class.spirv_cross::AlignedBuffer.811" { [192 x i8] c} } }, %"class.spirv_cross::SmallVector.631"* inttoptr (i64 -6148914691236517206 to %"class.spirv_cross::SmallVector.631"*), %"struct.spirv_cross::SPIRBlock"* inttoptr (i64 -6148914691236517206 to %"struct.spirv_cross::SPIRBlock"*), { i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.spirv_cross::CompilerGLSL::Options::VertexOptions", [1 x i8], %"struct.spirv_cross::CompilerGLSL::Options::FragmentOptions" } { i32 -1431655766, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, %"struct.spirv_cross::CompilerGLSL::Options::VertexOptions" { i8 -86, i8 -86, i8 -86 }, [1 x i8] c"\AA", %"struct.spirv_cross::CompilerGLSL::Options::FragmentOptions" { i32 -1431655766, i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unordered_set" { %"class.std::__1::__hash_table" <{ %"class.std::__1::unique_ptr.68" { %"class.std::__1::__compressed_pair.69" { %"struct.std::__1::__compressed_pair_elem.70" { %"struct.std::__1::__hash_node_base"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base"**) }, %"struct.std::__1::__compressed_pair_elem.71" { %"class.std::__1::__bucket_list_deallocator" { %"class.std::__1::__compressed_pair.72" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.76" { %"struct.std::__1::__compressed_pair_elem.77" { %"struct.std::__1::__hash_node_base" { %"struct.std::__1::__hash_node_base"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base"*) } } }, %"class.std::__1::__compressed_pair.81" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.83" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_set" { %"class.std::__1::__hash_table" <{ %"class.std::__1::unique_ptr.68" { %"class.std::__1::__compressed_pair.69" { %"struct.std::__1::__compressed_pair_elem.70" { %"struct.std::__1::__hash_node_base"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base"**) }, %"struct.std::__1::__compressed_pair_elem.71" { %"class.std::__1::__bucket_list_deallocator" { %"class.std::__1::__compressed_pair.72" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.76" { %"struct.std::__1::__compressed_pair_elem.77" { %"struct.std::__1::__hash_node_base" { %"struct.std::__1::__hash_node_base"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base"*) } } }, %"class.std::__1::__compressed_pair.81" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.83" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_set" { %"class.std::__1::__hash_table" <{ %"class.std::__1::unique_ptr.68" { %"class.std::__1::__compressed_pair.69" { %"struct.std::__1::__compressed_pair_elem.70" { %"struct.std::__1::__hash_node_base"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base"**) }, %"struct.std::__1::__compressed_pair_elem.71" { %"class.std::__1::__bucket_list_deallocator" { %"class.std::__1::__compressed_pair.72" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.76" { %"struct.std::__1::__compressed_pair_elem.77" { %"struct.std::__1::__hash_node_base" { %"struct.std::__1::__hash_node_base"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base"*) } } }, %"class.std::__1::__compressed_pair.81" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.83" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_set" { %"class.std::__1::__hash_table" <{ %"class.std::__1::unique_ptr.68" { %"class.std::__1::__compressed_pair.69" { %"struct.std::__1::__compressed_pair_elem.70" { %"struct.std::__1::__hash_node_base"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base"**) }, %"struct.std::__1::__compressed_pair_elem.71" { %"class.std::__1::__bucket_list_deallocator" { %"class.std::__1::__compressed_pair.72" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.76" { %"struct.std::__1::__compressed_pair_elem.77" { %"struct.std::__1::__hash_node_base" { %"struct.std::__1::__hash_node_base"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base"*) } } }, %"class.std::__1::__compressed_pair.81" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.83" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_set" { %"class.std::__1::__hash_table" <{ %"class.std::__1::unique_ptr.68" { %"class.std::__1::__compressed_pair.69" { %"struct.std::__1::__compressed_pair_elem.70" { %"struct.std::__1::__hash_node_base"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base"**) }, %"struct.std::__1::__compressed_pair_elem.71" { %"class.std::__1::__bucket_list_deallocator" { %"class.std::__1::__compressed_pair.72" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.76" { %"struct.std::__1::__compressed_pair_elem.77" { %"struct.std::__1::__hash_node_base" { %"struct.std::__1::__hash_node_base"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base"*) } } }, %"class.std::__1::__compressed_pair.81" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.83" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_set" { %"class.std::__1::__hash_table" <{ %"class.std::__1::unique_ptr.68" { %"class.std::__1::__compressed_pair.69" { %"struct.std::__1::__compressed_pair_elem.70" { %"struct.std::__1::__hash_node_base"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base"**) }, %"struct.std::__1::__compressed_pair_elem.71" { %"class.std::__1::__bucket_list_deallocator" { %"class.std::__1::__compressed_pair.72" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.76" { %"struct.std::__1::__compressed_pair_elem.77" { %"struct.std::__1::__hash_node_base" { %"struct.std::__1::__hash_node_base"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base"*) } } }, %"class.std::__1::__compressed_pair.81" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.83" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_set" { %"class.std::__1::__hash_table" <{ %"class.std::__1::unique_ptr.68" { %"class.std::__1::__compressed_pair.69" { %"struct.std::__1::__compressed_pair_elem.70" { %"struct.std::__1::__hash_node_base"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base"**) }, %"struct.std::__1::__compressed_pair_elem.71" { %"class.std::__1::__bucket_list_deallocator" { %"class.std::__1::__compressed_pair.72" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.76" { %"struct.std::__1::__compressed_pair_elem.77" { %"struct.std::__1::__hash_node_base" { %"struct.std::__1::__hash_node_base"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base"*) } } }, %"class.std::__1::__compressed_pair.81" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.83" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_map.812" { %"class.std::__1::__hash_table.813" <{ %"class.std::__1::unique_ptr.814" { %"class.std::__1::__compressed_pair.815" { %"struct.std::__1::__compressed_pair_elem.816" { %"struct.std::__1::__hash_node_base.817"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.817"**) }, %"struct.std::__1::__compressed_pair_elem.818" { %"class.std::__1::__bucket_list_deallocator.819" { %"class.std::__1::__compressed_pair.820" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.824" { %"struct.std::__1::__compressed_pair_elem.825" { %"struct.std::__1::__hash_node_base.817" { %"struct.std::__1::__hash_node_base.817"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.817"*) } } }, %"class.std::__1::__compressed_pair.829" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.832" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_map.785" { %"class.std::__1::__hash_table.786" <{ %"class.std::__1::unique_ptr.787" { %"class.std::__1::__compressed_pair.788" { %"struct.std::__1::__compressed_pair_elem.789" { %"struct.std::__1::__hash_node_base.790"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.790"**) }, %"struct.std::__1::__compressed_pair_elem.791" { %"class.std::__1::__bucket_list_deallocator.792" { %"class.std::__1::__compressed_pair.793" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.797" { %"struct.std::__1::__compressed_pair_elem.798" { %"struct.std::__1::__hash_node_base.790" { %"struct.std::__1::__hash_node_base.790"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.790"*) } } }, %"class.std::__1::__compressed_pair.802" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.805" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.spirv_cross::CompilerGLSL::BackendVariations" <{ %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i8 -86, i8 -86, i8 -86, i8 -86, [4 x i8] c"\AA\AA\AA\AA", i8* inttoptr (i64 -6148914691236517206 to i8*), i8* inttoptr (i64 -6148914691236517206 to i8*), i8* inttoptr (i64 -6148914691236517206 to i8*), i8* inttoptr (i64 -6148914691236517206 to i8*), i8* inttoptr (i64 -6148914691236517206 to i8*), i8* inttoptr (i64 -6148914691236517206 to i8*), i8* inttoptr (i64 -6148914691236517206 to i8*), i8* inttoptr (i64 -6148914691236517206 to i8*), i8* inttoptr (i64 -6148914691236517206 to i8*), i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, [5 x i8] c"\AA\AA\AA\AA\AA" }>, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unordered_set.541" { %"class.std::__1::__hash_table.542" <{ %"class.std::__1::unique_ptr.543" { %"class.std::__1::__compressed_pair.544" { %"struct.std::__1::__compressed_pair_elem.545" { %"struct.std::__1::__hash_node_base.546"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.546"**) }, %"struct.std::__1::__compressed_pair_elem.547" { %"class.std::__1::__bucket_list_deallocator.548" { %"class.std::__1::__compressed_pair.549" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.553" { %"struct.std::__1::__compressed_pair_elem.554" { %"struct.std::__1::__hash_node_base.546" { %"struct.std::__1::__hash_node_base.546"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.546"*) } } }, %"class.std::__1::__compressed_pair.558" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.560" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_set.541" { %"class.std::__1::__hash_table.542" <{ %"class.std::__1::unique_ptr.543" { %"class.std::__1::__compressed_pair.544" { %"struct.std::__1::__compressed_pair_elem.545" { %"struct.std::__1::__hash_node_base.546"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.546"**) }, %"struct.std::__1::__compressed_pair_elem.547" { %"class.std::__1::__bucket_list_deallocator.548" { %"class.std::__1::__compressed_pair.549" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.553" { %"struct.std::__1::__compressed_pair_elem.554" { %"struct.std::__1::__hash_node_base.546" { %"struct.std::__1::__hash_node_base.546"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.546"*) } } }, %"class.std::__1::__compressed_pair.558" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.560" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_set.541" { %"class.std::__1::__hash_table.542" <{ %"class.std::__1::unique_ptr.543" { %"class.std::__1::__compressed_pair.544" { %"struct.std::__1::__compressed_pair_elem.545" { %"struct.std::__1::__hash_node_base.546"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.546"**) }, %"struct.std::__1::__compressed_pair_elem.547" { %"class.std::__1::__bucket_list_deallocator.548" { %"class.std::__1::__compressed_pair.549" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.553" { %"struct.std::__1::__compressed_pair_elem.554" { %"struct.std::__1::__hash_node_base.546" { %"struct.std::__1::__hash_node_base.546"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.546"*) } } }, %"class.std::__1::__compressed_pair.558" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.560" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_map.836" { %"class.std::__1::__hash_table.837" <{ %"class.std::__1::unique_ptr.838" { %"class.std::__1::__compressed_pair.839" { %"struct.std::__1::__compressed_pair_elem.840" { %"struct.std::__1::__hash_node_base.841"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.841"**) }, %"struct.std::__1::__compressed_pair_elem.842" { %"class.std::__1::__bucket_list_deallocator.843" { %"class.std::__1::__compressed_pair.844" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.848" { %"struct.std::__1::__compressed_pair_elem.849" { %"struct.std::__1::__hash_node_base.841" { %"struct.std::__1::__hash_node_base.841"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.841"*) } } }, %"class.std::__1::__compressed_pair.853" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.856" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"struct.spirv_cross::CompilerGLSL::ShaderSubgroupSupportHelper" { i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unordered_map.860" { %"class.std::__1::__hash_table.861" <{ %"class.std::__1::unique_ptr.862" { %"class.std::__1::__compressed_pair.863" { %"struct.std::__1::__compressed_pair_elem.864" { %"struct.std::__1::__hash_node_base.865"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.865"**) }, %"struct.std::__1::__compressed_pair_elem.866" { %"class.std::__1::__bucket_list_deallocator.867" { %"class.std::__1::__compressed_pair.868" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.872" { %"struct.std::__1::__compressed_pair_elem.873" { %"struct.std::__1::__hash_node_base.865" { %"struct.std::__1::__hash_node_base.865"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.865"*) } } }, %"class.std::__1::__compressed_pair.877" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.880" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.spirv_cross::SmallVector.631" { %"class.spirv_cross::VectorView.632" { %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*), i64 -6148914691236517206 }, i64 -6148914691236517206, %"class.spirv_cross::AlignedBuffer.633" { [192 x i8] c} }, %"class.spirv_cross::SmallVector.631" { %"class.spirv_cross::VectorView.632" { %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*), i64 -6148914691236517206 }, i64 -6148914691236517206, %"class.spirv_cross::AlignedBuffer.633" { [192 x i8] c} }, %"class.std::__1::unordered_map.860" { %"class.std::__1::__hash_table.861" <{ %"class.std::__1::unique_ptr.862" { %"class.std::__1::__compressed_pair.863" { %"struct.std::__1::__compressed_pair_elem.864" { %"struct.std::__1::__hash_node_base.865"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.865"**) }, %"struct.std::__1::__compressed_pair_elem.866" { %"class.std::__1::__bucket_list_deallocator.867" { %"class.std::__1::__compressed_pair.868" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.872" { %"struct.std::__1::__compressed_pair_elem.873" { %"struct.std::__1::__hash_node_base.865" { %"struct.std::__1::__hash_node_base.865"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.865"*) } } }, %"class.std::__1::__compressed_pair.877" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.880" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.spirv_cross::SmallVector.758" { %"class.spirv_cross::VectorView.759" { %"class.spirv_cross::TypedID.695"* inttoptr (i64 -6148914691236517206 to %"class.spirv_cross::TypedID.695"*), i64 -6148914691236517206 }, i64 -6148914691236517206, %"class.spirv_cross::AlignedBuffer.760" { [32 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, i32 -1431655766, i8 -86, i8 -86, i8 -86, i8 -86, %"class.std::__1::vector.884" { %"class.std::__1::__vector_base.885" { %"struct.spirv_cross::PlsRemap"* inttoptr (i64 -6148914691236517206 to %"struct.spirv_cross::PlsRemap"*), %"struct.spirv_cross::PlsRemap"* inttoptr (i64 -6148914691236517206 to %"struct.spirv_cross::PlsRemap"*), %"class.std::__1::__compressed_pair.886" { %"struct.std::__1::__compressed_pair_elem.887" { %"struct.spirv_cross::PlsRemap"* inttoptr (i64 -6148914691236517206 to %"struct.spirv_cross::PlsRemap"*) } } } }, %"class.std::__1::vector.884" { %"class.std::__1::__vector_base.885" { %"struct.spirv_cross::PlsRemap"* inttoptr (i64 -6148914691236517206 to %"struct.spirv_cross::PlsRemap"*), %"struct.spirv_cross::PlsRemap"* inttoptr (i64 -6148914691236517206 to %"struct.spirv_cross::PlsRemap"*), %"class.std::__1::__compressed_pair.886" { %"struct.std::__1::__compressed_pair_elem.887" { %"struct.spirv_cross::PlsRemap"* inttoptr (i64 -6148914691236517206 to %"struct.spirv_cross::PlsRemap"*) } } } }, %"class.std::__1::vector.891" { %"class.std::__1::__vector_base.892" { %"struct.std::__1::pair.893"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.893"*), %"struct.std::__1::pair.893"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.893"*), %"class.std::__1::__compressed_pair.894" { %"struct.std::__1::__compressed_pair_elem.895" { %"struct.std::__1::pair.893"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.893"*) } } } }, %"class.std::__1::vector.899" { %"class.std::__1::__vector_base.900" { %"struct.std::__1::pair.901"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.901"*), %"struct.std::__1::pair.901"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.901"*), %"class.std::__1::__compressed_pair.902" { %"struct.std::__1::__compressed_pair_elem.903" { %"struct.std::__1::pair.901"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.901"*) } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"class.std::__1::unordered_set.907" { %"class.std::__1::__hash_table.908" <{ %"class.std::__1::unique_ptr.909" { %"class.std::__1::__compressed_pair.910" { %"struct.std::__1::__compressed_pair_elem.911" { %"struct.std::__1::__hash_node_base.912"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.912"**) }, %"struct.std::__1::__compressed_pair_elem.913" { %"class.std::__1::__bucket_list_deallocator.914" { %"class.std::__1::__compressed_pair.915" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.919" { %"struct.std::__1::__compressed_pair_elem.920" { %"struct.std::__1::__hash_node_base.912" { %"struct.std::__1::__hash_node_base.912"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.912"*) } } }, %"class.std::__1::__compressed_pair.924" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.926" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_set.541" { %"class.std::__1::__hash_table.542" <{ %"class.std::__1::unique_ptr.543" { %"class.std::__1::__compressed_pair.544" { %"struct.std::__1::__compressed_pair_elem.545" { %"struct.std::__1::__hash_node_base.546"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.546"**) }, %"struct.std::__1::__compressed_pair_elem.547" { %"class.std::__1::__bucket_list_deallocator.548" { %"class.std::__1::__compressed_pair.549" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.553" { %"struct.std::__1::__compressed_pair_elem.554" { %"struct.std::__1::__hash_node_base.546" { %"struct.std::__1::__hash_node_base.546"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.546"*) } } }, %"class.std::__1::__compressed_pair.558" { %"struct.std::__1::__compressed_pair_elem.30" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.560" { %"struct.std::__1::__compressed_pair_elem.84" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> } }, align 8
@_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [4 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@_ZTVN11spirv_cross12CompilerGLSLE = external unnamed_addr constant { [63 x i8*] }, align 8
@.str.9 = private unnamed_addr constant [8 x i8] c"discard\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"demote\00", align 1
@.str.11 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"uint\00", align 1
@.str.13 = private unnamed_addr constant [7 x i8] c"int8_t\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"uint8_t\00", align 1
@.str.15 = private unnamed_addr constant [8 x i8] c"int16_t\00", align 1
@.str.16 = private unnamed_addr constant [9 x i8] c"uint16_t\00", align 1
@.str.17 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.18 = private unnamed_addr constant [3 x i8] c"us\00", align 1
@.str.19 = private unnamed_addr constant [14 x i8] c"nonuniformEXT\00", align 1
@.str.20 = private unnamed_addr constant [4 x i8] c"mix\00", align 1
@_ZTVN11spirv_cross8CompilerE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZZN14BitSetIteratorILm4EjE8Iterator10getNextBitEvE8wordMask = linkonce_odr hidden local_unnamed_addr global { i64 } { i64 15 }, comdat, align 8

@_ZN11dawn_native6opengl12ShaderModuleC1EPNS0_6DeviceEPKNS_22ShaderModuleDescriptorE = hidden unnamed_addr alias void (%"class.dawn_native::opengl::ShaderModule"*, %"class.dawn_native::opengl::Device"*, %"struct.dawn_native::ShaderModuleDescriptor"*), void (%"class.dawn_native::opengl::ShaderModule"*, %"class.dawn_native::opengl::Device"*, %"struct.dawn_native::ShaderModuleDescriptor"*)* @_ZN11dawn_native6opengl12ShaderModuleC2EPNS0_6DeviceEPKNS_22ShaderModuleDescriptorE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl14GetBindingNameEjj(%"class.std::__1::basic_string"* noalias sret, i32, i32) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_ostringstream", align 8
  %5 = bitcast %"class.std::__1::basic_ostringstream"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 1
  %7 = bitcast %"class.std::__1::basic_stringbuf"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 256, i1 false)
  %8 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 2, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %10, i64 0, i32 0
  %12 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %13 = bitcast %"class.std::__1::basic_ostringstream"* %4 to i64*
  store i64 %12, i64* %13, align 8
  %14 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %15 = bitcast %"class.std::__1::basic_ostringstream"* %4 to i8**
  %16 = inttoptr i64 %12 to i8*
  %17 = getelementptr i8, i8* %16, i64 -24
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds i8, i8* %5, i64 %19
  %21 = bitcast i8* %20 to i64*
  store i64 %14, i64* %21, align 8
  %22 = load i8*, i8** %15, align 8
  %23 = getelementptr i8, i8* %22, i64 -24
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds i8, i8* %5, i64 %25
  %27 = bitcast i8* %26 to %"class.std::__1::ios_base"*
  %28 = bitcast %"class.std::__1::basic_stringbuf"* %10 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %27, i8* %28) #13
  %29 = getelementptr inbounds i8, i8* %26, i64 136
  %30 = bitcast i8* %29 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %30, align 8
  %31 = getelementptr inbounds i8, i8* %26, i64 144
  %32 = bitcast i8* %31 to i32*
  store i32 -1, i32* %32, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %11) #13
  %33 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %10, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 1, i32 1
  %35 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 1, i32 3
  %36 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 32, i1 false) #13
  store i32 16, i32* %35, align 8
  %37 = bitcast %"class.std::__1::basic_ostringstream"* %4 to %"class.std::__1::basic_ostream"*
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %37, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i64 13) #13
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %38, i32 %1) #13
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %39, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #13
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %40, i32 %2) #13
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret %0, %"class.std::__1::basic_stringbuf"* %10) #13
  %42 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %42, i64* %13, align 8
  %43 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %44 = inttoptr i64 %42 to i8*
  %45 = getelementptr i8, i8* %44, i64 -24
  %46 = bitcast i8* %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds i8, i8* %5, i64 %47
  %49 = bitcast i8* %48 to i64*
  store i64 %43, i64* %49, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  %50 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %3
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  call void @_ZdlPv(i8* %56) #14
  br label %57

57:                                               ; preds = %3, %54
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %11) #13
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %37, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #13
  %58 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 2
  %59 = bitcast %"class.std::__1::basic_ios.base"* %58 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %59) #13
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %5) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN11dawn_native6openglltERKNS0_15BindingLocationES3_(%"struct.dawn_native::opengl::BindingLocation"* dereferenceable(8), %"struct.dawn_native::opengl::BindingLocation"* dereferenceable(8)) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %"struct.dawn_native::opengl::BindingLocation", %"struct.dawn_native::opengl::BindingLocation"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.dawn_native::opengl::BindingLocation", %"struct.dawn_native::opengl::BindingLocation"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"struct.dawn_native::opengl::BindingLocation", %"struct.dawn_native::opengl::BindingLocation"* %1, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.dawn_native::opengl::BindingLocation", %"struct.dawn_native::opengl::BindingLocation"* %1, i64 0, i32 1
  %7 = load i32, i32* %3, align 4
  %8 = load i32, i32* %5, align 4
  %9 = icmp ult i32 %7, %8
  br i1 %9, label %16, label %10

10:                                               ; preds = %2
  %11 = icmp ult i32 %8, %7
  br i1 %11, label %16, label %12

12:                                               ; preds = %10
  %13 = load i32, i32* %4, align 4
  %14 = load i32, i32* %6, align 4
  %15 = icmp ult i32 %13, %14
  br label %16

16:                                               ; preds = %2, %10, %12
  %17 = phi i1 [ %15, %12 ], [ true, %2 ], [ false, %10 ]
  ret i1 %17
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN11dawn_native6openglltERKNS0_15CombinedSamplerES3_(%"struct.dawn_native::opengl::CombinedSampler"* dereferenceable(20), %"struct.dawn_native::opengl::CombinedSampler"* dereferenceable(20)) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %"struct.dawn_native::opengl::CombinedSampler", %"struct.dawn_native::opengl::CombinedSampler"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"struct.dawn_native::opengl::CombinedSampler", %"struct.dawn_native::opengl::CombinedSampler"* %1, i64 0, i32 2
  %5 = load i8, i8* %3, align 1, !range !2
  %6 = load i8, i8* %4, align 1, !range !2
  %7 = icmp ult i8 %5, %6
  br i1 %7, label %24, label %8

8:                                                ; preds = %2
  %9 = icmp ult i8 %6, %5
  br i1 %9, label %24, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"struct.dawn_native::opengl::CombinedSampler", %"struct.dawn_native::opengl::CombinedSampler"* %0, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"struct.dawn_native::opengl::CombinedSampler", %"struct.dawn_native::opengl::CombinedSampler"* %0, i64 0, i32 1, i32 1
  %13 = getelementptr inbounds %"struct.dawn_native::opengl::CombinedSampler", %"struct.dawn_native::opengl::CombinedSampler"* %1, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"struct.dawn_native::opengl::CombinedSampler", %"struct.dawn_native::opengl::CombinedSampler"* %1, i64 0, i32 1, i32 1
  %15 = load i32, i32* %11, align 4
  %16 = load i32, i32* %13, align 4
  %17 = icmp ult i32 %15, %16
  br i1 %17, label %24, label %18

18:                                               ; preds = %10
  %19 = icmp ult i32 %16, %15
  br i1 %19, label %24, label %20

20:                                               ; preds = %18
  %21 = load i32, i32* %12, align 4
  %22 = load i32, i32* %14, align 4
  %23 = icmp ult i32 %21, %22
  br label %24

24:                                               ; preds = %2, %8, %10, %18, %20
  %25 = phi i1 [ true, %2 ], [ false, %8 ], [ %23, %20 ], [ false, %18 ], [ true, %10 ]
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK11dawn_native6opengl15CombinedSampler7GetNameEv(%"class.std::__1::basic_string"* noalias sret, %"struct.dawn_native::opengl::CombinedSampler"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_ostringstream", align 8
  %4 = bitcast %"class.std::__1::basic_ostringstream"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 1
  %6 = bitcast %"class.std::__1::basic_stringbuf"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 256, i1 false)
  %7 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 2, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %9, i64 0, i32 0
  %11 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %12 = bitcast %"class.std::__1::basic_ostringstream"* %3 to i64*
  store i64 %11, i64* %12, align 8
  %13 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %14 = bitcast %"class.std::__1::basic_ostringstream"* %3 to i8**
  %15 = inttoptr i64 %11 to i8*
  %16 = getelementptr i8, i8* %15, i64 -24
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds i8, i8* %4, i64 %18
  %20 = bitcast i8* %19 to i64*
  store i64 %13, i64* %20, align 8
  %21 = load i8*, i8** %14, align 8
  %22 = getelementptr i8, i8* %21, i64 -24
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds i8, i8* %4, i64 %24
  %26 = bitcast i8* %25 to %"class.std::__1::ios_base"*
  %27 = bitcast %"class.std::__1::basic_stringbuf"* %9 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %26, i8* %27) #13
  %28 = getelementptr inbounds i8, i8* %25, i64 136
  %29 = bitcast i8* %28 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %29, align 8
  %30 = getelementptr inbounds i8, i8* %25, i64 144
  %31 = bitcast i8* %30 to i32*
  store i32 -1, i32* %31, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %7, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %10) #13
  %32 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %9, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 1, i32 1
  %34 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 1, i32 3
  %35 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 32, i1 false) #13
  store i32 16, i32* %34, align 8
  %36 = bitcast %"class.std::__1::basic_ostringstream"* %3 to %"class.std::__1::basic_ostream"*
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %36, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i64 13) #13
  %38 = getelementptr inbounds %"struct.dawn_native::opengl::CombinedSampler", %"struct.dawn_native::opengl::CombinedSampler"* %1, i64 0, i32 2
  %39 = load i8, i8* %38, align 4, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %2
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %36, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i64 14) #13
  br label %52

43:                                               ; preds = %2
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #13
  %45 = getelementptr inbounds %"struct.dawn_native::opengl::CombinedSampler", %"struct.dawn_native::opengl::CombinedSampler"* %1, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %44, i32 %46) #13
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %47, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #13
  %49 = getelementptr inbounds %"struct.dawn_native::opengl::CombinedSampler", %"struct.dawn_native::opengl::CombinedSampler"* %1, i64 0, i32 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %48, i32 %50) #13
  br label %52

52:                                               ; preds = %43, %41
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %36, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i64 6) #13
  %54 = getelementptr inbounds %"struct.dawn_native::opengl::CombinedSampler", %"struct.dawn_native::opengl::CombinedSampler"* %1, i64 0, i32 1, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %53, i32 %55) #13
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %56, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #13
  %58 = getelementptr inbounds %"struct.dawn_native::opengl::CombinedSampler", %"struct.dawn_native::opengl::CombinedSampler"* %1, i64 0, i32 1, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %57, i32 %59) #13
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret %0, %"class.std::__1::basic_stringbuf"* %9) #13
  %61 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %61, i64* %12, align 8
  %62 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %63 = inttoptr i64 %61 to i8*
  %64 = getelementptr i8, i8* %63, i64 -24
  %65 = bitcast i8* %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds i8, i8* %4, i64 %66
  %68 = bitcast i8* %67 to i64*
  store i64 %62, i64* %68, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %69 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %52
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  call void @_ZdlPv(i8* %75) #14
  br label %76

76:                                               ; preds = %52, %73
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %10) #13
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %36, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #13
  %77 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 2
  %78 = bitcast %"class.std::__1::basic_ios.base"* %77 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %78) #13
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl12ShaderModule6CreateEPNS0_6DeviceEPKNS_22ShaderModuleDescriptorEPNS_23ShaderModuleParseResultE(%class.Result* noalias nocapture sret, %"class.dawn_native::opengl::Device"*, %"struct.dawn_native::ShaderModuleDescriptor"*, %"struct.dawn_native::ShaderModuleParseResult"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.Result.346, align 8
  %6 = tail call i8* @_Znwm(i64 248) #14
  %7 = bitcast i8* %6 to %"class.dawn_native::opengl::ShaderModule"*
  %8 = bitcast i8* %6 to %"class.dawn_native::ShaderModuleBase"*
  %9 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %1, i64 0, i32 0
  tail call void @_ZN11dawn_native16ShaderModuleBaseC2EPNS_10DeviceBaseEPKNS_22ShaderModuleDescriptorE(%"class.dawn_native::ShaderModuleBase"* nonnull %8, %"class.dawn_native::DeviceBase"* %9, %"struct.dawn_native::ShaderModuleDescriptor"* %2) #13
  %10 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11dawn_native6opengl12ShaderModuleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %6, i64 184
  %12 = getelementptr inbounds i8, i8* %6, i64 240
  %13 = bitcast i8* %12 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 56, i1 false) #13
  store i32 1065353216, i32* %13, align 4
  %14 = bitcast %class.Result.346* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  %15 = getelementptr inbounds %class.Result.346, %class.Result.346* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*), %"class.dawn_native::ErrorData"** %15, align 8
  call void @_ZN11dawn_native6opengl12ShaderModule10InitializeEPNS_23ShaderModuleParseResultE(%class.Result.346* nonnull sret %5, %"class.dawn_native::opengl::ShaderModule"* nonnull %7, %"struct.dawn_native::ShaderModuleParseResult"* %3)
  %16 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %15, align 8
  %17 = icmp eq %"class.dawn_native::ErrorData"* %16, null
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %15, align 8
  br i1 %17, label %18, label %20, !prof !3

18:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  %19 = tail call i64 @_ZN6detail11MakePayloadEPKvNS_11PayloadTypeE(i8* nonnull %6, i32 0) #13
  br label %24

20:                                               ; preds = %4
  tail call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %16, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__func__._ZN11dawn_native6opengl12ShaderModule6CreateEPNS0_6DeviceEPKNS_22ShaderModuleDescriptorEPNS_23ShaderModuleParseResultE, i64 0, i64 0), i32 72) #13
  %21 = bitcast %"class.dawn_native::ErrorData"* %16 to i8*
  %22 = tail call i64 @_ZN6detail11MakePayloadEPKvNS_11PayloadTypeE(i8* nonnull %21, i32 1) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  %23 = bitcast i8* %6 to %class.RefCounted*
  tail call void @_ZN10RefCounted7ReleaseEv(%class.RefCounted* nonnull %23) #13
  br label %24

24:                                               ; preds = %18, %20
  %25 = phi i64 [ %19, %18 ], [ %22, %20 ]
  %26 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 0
  store i64 %25, i64* %26, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl12ShaderModule10InitializeEPNS_23ShaderModuleParseResultE(%class.Result.346* noalias nocapture sret, %"class.dawn_native::opengl::ShaderModule"*, %"struct.dawn_native::ShaderModuleParseResult"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::unique_ptr.362", align 8
  %6 = alloca %"class.dawn_native::ScopedTintICEHandler", align 1
  %7 = alloca %class.Result.346, align 8
  %8 = alloca %"class.tint::transform::Manager", align 8
  %9 = alloca %"class.tint::transform::DataMap", align 8
  %10 = alloca %"class.tint::Program", align 8
  %11 = alloca %class.Result.407, align 8
  %12 = alloca %"class.tint::writer::spirv::Generator", align 8
  %13 = alloca %"class.std::__1::basic_ostringstream", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %class.Result.572, align 8
  %17 = getelementptr inbounds %"class.dawn_native::ScopedTintICEHandler", %"class.dawn_native::ScopedTintICEHandler"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #13
  store i8 -86, i8* %17, align 1
  %18 = getelementptr inbounds %"class.dawn_native::opengl::ShaderModule", %"class.dawn_native::opengl::ShaderModule"* %1, i64 0, i32 0, i32 0, i32 0
  %19 = tail call %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"* %18) #13
  call void @_ZN11dawn_native20ScopedTintICEHandlerC1EPNS_10DeviceBaseE(%"class.dawn_native::ScopedTintICEHandler"* nonnull %6, %"class.dawn_native::DeviceBase"* %19) #13
  %20 = bitcast %class.Result.346* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  %21 = getelementptr inbounds %class.Result.346, %class.Result.346* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*), %"class.dawn_native::ErrorData"** %21, align 8
  %22 = getelementptr inbounds %"class.dawn_native::opengl::ShaderModule", %"class.dawn_native::opengl::ShaderModule"* %1, i64 0, i32 0
  call void @_ZN11dawn_native16ShaderModuleBase14InitializeBaseEPNS_23ShaderModuleParseResultE(%class.Result.346* nonnull sret %7, %"class.dawn_native::ShaderModuleBase"* %22, %"struct.dawn_native::ShaderModuleParseResult"* %2) #13
  %23 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %21, align 8
  %24 = icmp eq %"class.dawn_native::ErrorData"* %23, null
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %21, align 8
  br i1 %24, label %51, label %25, !prof !3

25:                                               ; preds = %3
  %26 = ptrtoint %"class.dawn_native::ErrorData"* %23 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %23, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__._ZN11dawn_native6opengl12ShaderModule10InitializeEPNS_23ShaderModuleParseResultE, i64 0, i64 0), i32 83) #13
  %27 = bitcast %class.Result.346* %0 to i64*
  store i64 %26, i64* %27, align 8
  %28 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %21, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %21, align 8
  %29 = icmp eq %"class.dawn_native::ErrorData"* %28, null
  br i1 %29, label %50, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %28, i64 0, i32 2, i32 0, i32 0
  %32 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %31, align 8
  %33 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %30
  %35 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %32 to i64
  %36 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %28, i64 0, i32 2, i32 0, i32 1
  %37 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %32 to i8*
  call void @_ZdlPv(i8* %38) #14
  br label %39

39:                                               ; preds = %34, %30
  %40 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %28, i64 0, i32 1
  %41 = bitcast %"class.std::__1::basic_string"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %47) #14
  br label %48

48:                                               ; preds = %45, %39
  %49 = bitcast %"class.dawn_native::ErrorData"* %28 to i8*
  call void @_ZdlPv(i8* %49) #14
  br label %50

50:                                               ; preds = %25, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %308

51:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  %52 = call %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"* %18) #13
  %53 = call zeroext i1 @_ZNK11dawn_native10DeviceBase15IsToggleEnabledENS_6ToggleE(%"class.dawn_native::DeviceBase"* %52, i32 24) #13
  br i1 %53, label %54, label %306

54:                                               ; preds = %51
  %55 = bitcast %"class.tint::transform::Manager"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %55) #13
  %56 = getelementptr inbounds %"class.tint::transform::Manager", %"class.tint::transform::Manager"* %8, i64 0, i32 1, i32 0, i32 1
  %57 = getelementptr inbounds %"class.tint::transform::Manager", %"class.tint::transform::Manager"* %8, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %58 = bitcast %"class.tint::transform::Manager"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 32, i1 false)
  call void @_ZN4tint9transform7ManagerC1Ev(%"class.tint::transform::Manager"* nonnull %8) #13
  %59 = call i8* @_Znwm(i64 8) #14
  %60 = bitcast i8* %59 to %"class.tint::transform::Spirv"*
  call void @_ZN4tint9transform5SpirvC1Ev(%"class.tint::transform::Spirv"* nonnull %60) #13
  %61 = bitcast %"class.std::__1::unique_ptr.362"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61)
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.362"* %5, i64 0, i32 0, i32 0, i32 0
  %63 = bitcast %"class.std::__1::unique_ptr.362"* %5 to i8**
  store i8* %59, i8** %63, align 8
  %64 = load %"class.std::__1::unique_ptr.362"*, %"class.std::__1::unique_ptr.362"** %56, align 8
  %65 = load %"class.std::__1::unique_ptr.362"*, %"class.std::__1::unique_ptr.362"** %57, align 8
  %66 = icmp ult %"class.std::__1::unique_ptr.362"* %64, %65
  br i1 %66, label %67, label %73

67:                                               ; preds = %54
  %68 = ptrtoint i8* %59 to i64
  store %"class.tint::transform::Transform"* null, %"class.tint::transform::Transform"** %62, align 8
  %69 = bitcast %"class.std::__1::unique_ptr.362"* %64 to i64*
  store i64 %68, i64* %69, align 8
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.362"* %64, i64 1
  %71 = ptrtoint %"class.std::__1::unique_ptr.362"* %70 to i64
  %72 = bitcast %"class.std::__1::unique_ptr.362"** %56 to i64*
  store i64 %71, i64* %72, align 8
  br label %75

73:                                               ; preds = %54
  %74 = getelementptr inbounds %"class.tint::transform::Manager", %"class.tint::transform::Manager"* %8, i64 0, i32 1
  call void @_ZNSt3__16vectorINS_10unique_ptrIN4tint9transform9TransformENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.360"* %74, %"class.std::__1::unique_ptr.362"* nonnull dereferenceable(8) %5) #13
  br label %75

75:                                               ; preds = %73, %67
  %76 = load %"class.tint::transform::Transform"*, %"class.tint::transform::Transform"** %62, align 8
  store %"class.tint::transform::Transform"* null, %"class.tint::transform::Transform"** %62, align 8
  %77 = icmp eq %"class.tint::transform::Transform"* %76, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %75
  %79 = bitcast %"class.tint::transform::Transform"* %76 to void (%"class.tint::transform::Transform"*)***
  %80 = load void (%"class.tint::transform::Transform"*)**, void (%"class.tint::transform::Transform"*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.tint::transform::Transform"*)*, void (%"class.tint::transform::Transform"*)** %80, i64 1
  %82 = load void (%"class.tint::transform::Transform"*)*, void (%"class.tint::transform::Transform"*)** %81, align 8
  call void %82(%"class.tint::transform::Transform"* nonnull %76) #13
  br label %83

83:                                               ; preds = %78, %75
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61)
  %84 = bitcast %"class.tint::transform::DataMap"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %84) #13
  %85 = getelementptr inbounds %"class.tint::transform::DataMap", %"class.tint::transform::DataMap"* %9, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %86 = bitcast %"class.tint::transform::DataMap"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 32, i1 false)
  store float 0xFFFFFFFFE0000000, float* %85, align 8
  %87 = getelementptr inbounds %"class.tint::transform::DataMap", %"class.tint::transform::DataMap"* %9, i64 0, i32 0, i32 0, i32 4, i64 0
  %88 = bitcast i8* %87 to i32*
  store i32 -1431655766, i32* %88, align 4
  call void @_ZN4tint9transform7DataMapC1Ev(%"class.tint::transform::DataMap"* nonnull %9) #13
  %89 = bitcast %"class.tint::Program"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %89) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %89, i8* align 8 bitcast (%"class.tint::Program"* @__const._ZN11dawn_native6opengl12ShaderModule10InitializeEPNS_23ShaderModuleParseResultE.program to i8*), i64 304, i1 false)
  call void @_ZN4tint7ProgramC1Ev(%"class.tint::Program"* nonnull %10) #13
  %90 = bitcast %class.Result.407* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 320, i8* nonnull %90) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %90, i8* align 8 bitcast ({ i32, [4 x i8], %"class.std::__1::unique_ptr.347", %"class.tint::Program" }* @__const._ZN11dawn_native6opengl12ShaderModule10InitializeEPNS_23ShaderModuleParseResultE._localVar95 to i8*), i64 320, i1 false)
  %91 = getelementptr inbounds %"class.tint::transform::Manager", %"class.tint::transform::Manager"* %8, i64 0, i32 0
  %92 = call %"class.tint::Program"* @_ZNK11dawn_native16ShaderModuleBase14GetTintProgramEv(%"class.dawn_native::ShaderModuleBase"* %22) #13
  %93 = getelementptr inbounds %"class.dawn_native::opengl::ShaderModule", %"class.dawn_native::opengl::ShaderModule"* %1, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0
  %94 = load %"class.dawn_native::OwnedCompilationMessages"*, %"class.dawn_native::OwnedCompilationMessages"** %93, align 8
  call void @_ZN11dawn_native13RunTransformsEPN4tint9transform9TransformEPKNS0_7ProgramERKNS1_7DataMapEPS7_PNS_24OwnedCompilationMessagesE(%class.Result.407* nonnull sret %11, %"class.tint::transform::Transform"* nonnull %91, %"class.tint::Program"* %92, %"class.tint::transform::DataMap"* nonnull dereferenceable(40) %9, %"class.tint::transform::DataMap"* null, %"class.dawn_native::OwnedCompilationMessages"* %94) #13
  %95 = getelementptr inbounds %class.Result.407, %class.Result.407* %11, i64 0, i32 0
  %96 = load i32, i32* %95, align 8
  %97 = icmp eq i32 %96, 1
  store i32 2, i32* %95, align 8
  br i1 %97, label %98, label %103, !prof !4

98:                                               ; preds = %83
  %99 = getelementptr inbounds %class.Result.407, %class.Result.407* %11, i64 0, i32 1, i32 0, i32 0, i32 0
  %100 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %99, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %99, align 8
  %101 = ptrtoint %"class.dawn_native::ErrorData"* %100 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* %100, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__._ZN11dawn_native6opengl12ShaderModule10InitializeEPNS_23ShaderModuleParseResultE, i64 0, i64 0), i32 95) #13
  %102 = bitcast %class.Result.346* %0 to i64*
  store i64 %101, i64* %102, align 8
  br label %106

103:                                              ; preds = %83
  %104 = getelementptr inbounds %class.Result.407, %class.Result.407* %11, i64 0, i32 2
  %105 = call dereferenceable(304) %"class.tint::Program"* @_ZN4tint7ProgramaSEOS0_(%"class.tint::Program"* nonnull %10, %"class.tint::Program"* dereferenceable(304) %104) #13
  br label %106

106:                                              ; preds = %103, %98
  %107 = phi i32 [ 1, %98 ], [ 0, %103 ]
  %108 = getelementptr inbounds %class.Result.407, %class.Result.407* %11, i64 0, i32 2
  call void @_ZN4tint7ProgramD1Ev(%"class.tint::Program"* %108) #13
  %109 = getelementptr inbounds %class.Result.407, %class.Result.407* %11, i64 0, i32 1, i32 0, i32 0, i32 0
  %110 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %109, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %109, align 8
  %111 = icmp eq %"class.dawn_native::ErrorData"* %110, null
  br i1 %111, label %132, label %112

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %110, i64 0, i32 2, i32 0, i32 0
  %114 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %113, align 8
  %115 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %114, null
  br i1 %115, label %121, label %116

116:                                              ; preds = %112
  %117 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %114 to i64
  %118 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %110, i64 0, i32 2, i32 0, i32 1
  %119 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %118 to i64*
  store i64 %117, i64* %119, align 8
  %120 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %114 to i8*
  call void @_ZdlPv(i8* %120) #14
  br label %121

121:                                              ; preds = %116, %112
  %122 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %110, i64 0, i32 1
  %123 = bitcast %"class.std::__1::basic_string"* %122 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %124 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %123, i64 0, i32 1, i32 0
  %125 = load i8, i8* %124, align 1
  %126 = icmp slt i8 %125, 0
  br i1 %126, label %127, label %130

127:                                              ; preds = %121
  %128 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %122, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load i8*, i8** %128, align 8
  call void @_ZdlPv(i8* %129) #14
  br label %130

130:                                              ; preds = %127, %121
  %131 = bitcast %"class.dawn_native::ErrorData"* %110 to i8*
  call void @_ZdlPv(i8* %131) #14
  br label %132

132:                                              ; preds = %106, %130
  call void @llvm.lifetime.end.p0i8(i64 320, i8* nonnull %90) #13
  %133 = icmp eq i32 %107, 0
  br i1 %133, label %134, label %303

134:                                              ; preds = %132
  %135 = bitcast %"class.tint::writer::spirv::Generator"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %135) #13
  %136 = bitcast %"class.tint::writer::spirv::Generator"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %136, i8 -86, i64 48, i1 false)
  call void @_ZN4tint6writer5spirv9GeneratorC1EPKNS_7ProgramE(%"class.tint::writer::spirv::Generator"* nonnull %12, %"class.tint::Program"* nonnull %10) #13
  %137 = call zeroext i1 @_ZN4tint6writer5spirv9Generator8GenerateEv(%"class.tint::writer::spirv::Generator"* nonnull %12) #13
  br i1 %137, label %274, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"class.tint::writer::spirv::Generator", %"class.tint::writer::spirv::Generator"* %12, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %140 = bitcast %"class.std::__1::basic_ostringstream"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %140) #13
  %141 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %13, i64 0, i32 1
  %142 = bitcast %"class.std::__1::basic_stringbuf"* %141 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %142, i8 -86, i64 256, i1 false)
  %143 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %13, i64 0, i32 2, i32 0, i32 0
  %144 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %13, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %143, align 8
  %145 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %13, i64 0, i32 1
  %146 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %145, i64 0, i32 0
  %147 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %148 = bitcast %"class.std::__1::basic_ostringstream"* %13 to i64*
  store i64 %147, i64* %148, align 8
  %149 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %150 = bitcast %"class.std::__1::basic_ostringstream"* %13 to i8**
  %151 = inttoptr i64 %147 to i8*
  %152 = getelementptr i8, i8* %151, i64 -24
  %153 = bitcast i8* %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = getelementptr inbounds i8, i8* %140, i64 %154
  %156 = bitcast i8* %155 to i64*
  store i64 %149, i64* %156, align 8
  %157 = load i8*, i8** %150, align 8
  %158 = getelementptr i8, i8* %157, i64 -24
  %159 = bitcast i8* %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = getelementptr inbounds i8, i8* %140, i64 %160
  %162 = bitcast i8* %161 to %"class.std::__1::ios_base"*
  %163 = bitcast %"class.std::__1::basic_stringbuf"* %145 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %162, i8* %163) #13
  %164 = getelementptr inbounds i8, i8* %161, i64 136
  %165 = bitcast i8* %164 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %165, align 8
  %166 = getelementptr inbounds i8, i8* %161, i64 144
  %167 = bitcast i8* %166 to i32*
  store i32 -1, i32* %167, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %144, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %143, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %146) #13
  %168 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %145, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %168, align 8
  %169 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %13, i64 0, i32 1, i32 1
  %170 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %13, i64 0, i32 1, i32 3
  %171 = bitcast %"class.std::__1::basic_string"* %169 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %171, i8 0, i64 32, i1 false) #13
  store i32 16, i32* %170, align 8
  %172 = bitcast %"class.std::__1::basic_ostringstream"* %13 to %"class.std::__1::basic_ostream"*
  %173 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %172, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i64 11) #13
  %174 = getelementptr inbounds %"class.tint::writer::spirv::Generator", %"class.tint::writer::spirv::Generator"* %12, i64 0, i32 0, i32 1
  %175 = bitcast %"class.std::__1::basic_string"* %174 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %176 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %175, i64 0, i32 1, i32 0
  %177 = load i8, i8* %176, align 1
  %178 = icmp slt i8 %177, 0
  %179 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %174, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load i8*, i8** %179, align 8
  %181 = load i64, i64* %139, align 8
  %182 = bitcast %"class.std::__1::basic_string"* %174 to i8*
  %183 = zext i8 %177 to i64
  %184 = select i1 %178, i8* %180, i8* %182
  %185 = select i1 %178, i64 %181, i64 %183
  %186 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %173, i8* %184, i64 %185) #13
  %187 = bitcast %"class.std::__1::basic_ostream"* %186 to i8**
  %188 = load i8*, i8** %187, align 8
  %189 = getelementptr i8, i8* %188, i64 -24
  %190 = bitcast i8* %189 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = bitcast %"class.std::__1::basic_ostream"* %186 to i8*
  %193 = getelementptr inbounds i8, i8* %192, i64 %191
  %194 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %194) #13
  %195 = bitcast i8* %193 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %195) #13
  %196 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #13
  %197 = bitcast %"class.std::__1::locale::facet"* %196 to %"class.std::__1::ctype"*
  %198 = bitcast %"class.std::__1::locale::facet"* %196 to i8 (%"class.std::__1::ctype"*, i8)***
  %199 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %198, align 8
  %200 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %199, i64 7
  %201 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %200, align 8
  %202 = call signext i8 %201(%"class.std::__1::ctype"* %197, i8 signext 10) #13
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %194) #13
  %203 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"* %186, i8 signext %202) #13
  %204 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"* %186) #13
  %205 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %205) #13
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %15, %"class.std::__1::basic_stringbuf"* %145) #13
  %206 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %207 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %206, i64 0, i32 1, i32 0
  %208 = load i8, i8* %207, align 1
  %209 = icmp slt i8 %208, 0
  %210 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load i8*, i8** %210, align 8
  %212 = select i1 %209, i8* %211, i8* %205
  %213 = call i64 @strlen(i8* %212) #13
  %214 = icmp ugt i64 %213, -17
  br i1 %214, label %215, label %217

215:                                              ; preds = %138
  %216 = bitcast %"class.std::__1::basic_string"* %14 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %216) #15
  unreachable

217:                                              ; preds = %138
  %218 = icmp ult i64 %213, 23
  br i1 %218, label %228, label %219

219:                                              ; preds = %217
  %220 = add nuw i64 %213, 16
  %221 = and i64 %220, -16
  %222 = call i8* @_Znwm(i64 %221) #14
  %223 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %222, i8** %223, align 8
  %224 = or i64 %221, -9223372036854775808
  %225 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %224, i64* %225, align 8
  %226 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %213, i64* %226, align 8
  %227 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %234

228:                                              ; preds = %217
  %229 = trunc i64 %213 to i8
  %230 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %231 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %230, i64 0, i32 1, i32 0
  store i8 %229, i8* %231, align 1
  %232 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %233 = icmp eq i64 %213, 0
  br i1 %233, label %237, label %234

234:                                              ; preds = %228, %219
  %235 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %230, %228 ], [ %227, %219 ]
  %236 = phi i8* [ %232, %228 ], [ %222, %219 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %236, i8* align 1 %212, i64 %213, i1 false) #13
  br label %237

237:                                              ; preds = %228, %234
  %238 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %230, %228 ], [ %235, %234 ]
  %239 = phi i8* [ %232, %228 ], [ %236, %234 ]
  %240 = getelementptr inbounds i8, i8* %239, i64 %213
  store i8 0, i8* %240, align 1
  %241 = call %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32 0, %"class.std::__1::basic_string"* nonnull %14, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__._ZN11dawn_native6opengl12ShaderModule10InitializeEPNS_23ShaderModuleParseResultE, i64 0, i64 0), i32 101) #13
  %242 = ptrtoint %"class.dawn_native::ErrorData"* %241 to i64
  %243 = bitcast %class.Result.346* %0 to i64*
  store i64 %242, i64* %243, align 8
  %244 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %238, i64 0, i32 1, i32 0
  %245 = load i8, i8* %244, align 1
  %246 = icmp slt i8 %245, 0
  br i1 %246, label %247, label %250

247:                                              ; preds = %237
  %248 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %249 = load i8*, i8** %248, align 8
  call void @_ZdlPv(i8* %249) #14
  br label %250

250:                                              ; preds = %237, %247
  %251 = load i8, i8* %207, align 1
  %252 = icmp slt i8 %251, 0
  br i1 %252, label %253, label %255

253:                                              ; preds = %250
  %254 = load i8*, i8** %210, align 8
  call void @_ZdlPv(i8* %254) #14
  br label %255

255:                                              ; preds = %250, %253
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %205) #13
  %256 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %256, i64* %148, align 8
  %257 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %258 = inttoptr i64 %256 to i8*
  %259 = getelementptr i8, i8* %258, i64 -24
  %260 = bitcast i8* %259 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = getelementptr inbounds i8, i8* %140, i64 %261
  %263 = bitcast i8* %262 to i64*
  store i64 %257, i64* %263, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %168, align 8
  %264 = bitcast %"class.std::__1::basic_string"* %169 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %265 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %264, i64 0, i32 1, i32 0
  %266 = load i8, i8* %265, align 1
  %267 = icmp slt i8 %266, 0
  br i1 %267, label %268, label %271

268:                                              ; preds = %255
  %269 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %169, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %270 = load i8*, i8** %269, align 8
  call void @_ZdlPv(i8* %270) #14
  br label %271

271:                                              ; preds = %255, %268
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %146) #13
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %172, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #13
  %272 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %13, i64 0, i32 2
  %273 = bitcast %"class.std::__1::basic_ios.base"* %272 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %273) #13
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %140) #13
  br label %301

274:                                              ; preds = %134
  %275 = getelementptr inbounds %"class.tint::writer::spirv::Generator", %"class.tint::writer::spirv::Generator"* %12, i64 0, i32 2, i32 0, i32 0, i32 0
  %276 = load %"class.tint::writer::spirv::BinaryWriter"*, %"class.tint::writer::spirv::BinaryWriter"** %275, align 8
  %277 = getelementptr inbounds %"class.tint::writer::spirv::BinaryWriter", %"class.tint::writer::spirv::BinaryWriter"* %276, i64 0, i32 0
  %278 = getelementptr inbounds %"class.dawn_native::opengl::ShaderModule", %"class.dawn_native::opengl::ShaderModule"* %1, i64 0, i32 1
  %279 = icmp eq %"class.std::__1::vector.300"* %278, %277
  br i1 %279, label %285, label %280

280:                                              ; preds = %274
  %281 = getelementptr inbounds %"class.tint::writer::spirv::BinaryWriter", %"class.tint::writer::spirv::BinaryWriter"* %276, i64 0, i32 0, i32 0, i32 0
  %282 = load i32*, i32** %281, align 8
  %283 = getelementptr inbounds %"class.tint::writer::spirv::BinaryWriter", %"class.tint::writer::spirv::BinaryWriter"* %276, i64 0, i32 0, i32 0, i32 1
  %284 = load i32*, i32** %283, align 8
  call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.300"* %278, i32* %282, i32* %284) #13
  br label %285

285:                                              ; preds = %274, %280
  %286 = bitcast %class.Result.572* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %286) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %286, i8* align 8 bitcast ({ i32, [4 x i8], %"class.std::__1::unique_ptr.347", %"class.std::__1::unordered_map.322" }* @__const._ZN11dawn_native6opengl12ShaderModule10InitializeEPNS_23ShaderModuleParseResultE._localVar105 to i8*), i64 56, i1 false)
  %287 = call %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"* %18) #13
  call void @_ZN11dawn_native16ShaderModuleBase28ReflectShaderUsingSPIRVCrossEPNS_10DeviceBaseERKNSt3__16vectorIjNS3_9allocatorIjEEEE(%class.Result.572* nonnull sret %16, %"class.dawn_native::DeviceBase"* %287, %"class.std::__1::vector.300"* dereferenceable(24) %278) #13
  %288 = getelementptr inbounds %class.Result.572, %class.Result.572* %16, i64 0, i32 0
  %289 = load i32, i32* %288, align 8
  %290 = icmp eq i32 %289, 1
  store i32 2, i32* %288, align 8
  br i1 %290, label %291, label %296, !prof !4

291:                                              ; preds = %285
  %292 = getelementptr inbounds %class.Result.572, %class.Result.572* %16, i64 0, i32 1, i32 0, i32 0, i32 0
  %293 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %292, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %292, align 8
  %294 = ptrtoint %"class.dawn_native::ErrorData"* %293 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* %293, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__._ZN11dawn_native6opengl12ShaderModule10InitializeEPNS_23ShaderModuleParseResultE, i64 0, i64 0), i32 105) #13
  %295 = bitcast %class.Result.346* %0 to i64*
  store i64 %294, i64* %295, align 8
  br label %299

296:                                              ; preds = %285
  %297 = getelementptr inbounds %class.Result.572, %class.Result.572* %16, i64 0, i32 2, i32 0
  %298 = getelementptr inbounds %"class.dawn_native::opengl::ShaderModule", %"class.dawn_native::opengl::ShaderModule"* %1, i64 0, i32 2, i32 0
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN11dawn_native18EntryPointMetadataENS_14default_deleteISA_EEEEEENS_22__unordered_map_hasherIS7_SE_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SE_SJ_SH_Lb1EEENS5_ISE_EEE13__move_assignERSO_NS_17integral_constantIbLb1EEE(%"class.std::__1::__hash_table.323"* %298, %"class.std::__1::__hash_table.323"* dereferenceable(40) %297) #13
  br label %299

299:                                              ; preds = %296, %291
  %300 = phi i32 [ 1, %291 ], [ 0, %296 ]
  call void @_ZN6ResultINSt3__113unordered_mapINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS0_10unique_ptrIN11dawn_native18EntryPointMetadataENS0_14default_deleteISA_EEEENS0_4hashIS7_EENS0_8equal_toIS7_EENS5_INS0_4pairIKS7_SD_EEEEEENS9_9ErrorDataEED2Ev(%class.Result.572* nonnull %16) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %286) #13
  br label %301

301:                                              ; preds = %299, %271
  %302 = phi i32 [ 1, %271 ], [ %300, %299 ]
  call void @_ZN4tint6writer5spirv9GeneratorD1Ev(%"class.tint::writer::spirv::Generator"* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %135) #13
  br label %303

303:                                              ; preds = %132, %301
  %304 = phi i32 [ %302, %301 ], [ 1, %132 ]
  call void @_ZN4tint7ProgramD1Ev(%"class.tint::Program"* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %89) #13
  call void @_ZN4tint9transform7DataMapD1Ev(%"class.tint::transform::DataMap"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %84) #13
  call void @_ZN4tint9transform7ManagerD1Ev(%"class.tint::transform::Manager"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %55) #13
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %306, label %308

306:                                              ; preds = %303, %51
  %307 = bitcast %class.Result.346* %0 to i64*
  store i64 0, i64* %307, align 8
  br label %308

308:                                              ; preds = %50, %303, %306
  call void @_ZN11dawn_native20ScopedTintICEHandlerD1Ev(%"class.dawn_native::ScopedTintICEHandler"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #13
  ret void
}

declare void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"*, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl12ShaderModuleC2EPNS0_6DeviceEPKNS_22ShaderModuleDescriptorE(%"class.dawn_native::opengl::ShaderModule"*, %"class.dawn_native::opengl::Device"*, %"struct.dawn_native::ShaderModuleDescriptor"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.dawn_native::opengl::ShaderModule", %"class.dawn_native::opengl::ShaderModule"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.dawn_native::opengl::Device", %"class.dawn_native::opengl::Device"* %1, i64 0, i32 0
  tail call void @_ZN11dawn_native16ShaderModuleBaseC2EPNS_10DeviceBaseEPKNS_22ShaderModuleDescriptorE(%"class.dawn_native::ShaderModuleBase"* %4, %"class.dawn_native::DeviceBase"* %5, %"struct.dawn_native::ShaderModuleDescriptor"* %2) #13
  %6 = getelementptr inbounds %"class.dawn_native::opengl::ShaderModule", %"class.dawn_native::opengl::ShaderModule"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11dawn_native6opengl12ShaderModuleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.dawn_native::opengl::ShaderModule", %"class.dawn_native::opengl::ShaderModule"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.dawn_native::opengl::ShaderModule", %"class.dawn_native::opengl::ShaderModule"* %0, i64 0, i32 2, i32 0, i32 3
  %9 = bitcast %"class.std::__1::__compressed_pair.342"* %8 to i32*
  %10 = bitcast %"class.std::__1::vector.300"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 56, i1 false)
  store i32 1065353216, i32* %9, align 4
  ret void
}

declare void @_ZN11dawn_native16ShaderModuleBaseC2EPNS_10DeviceBaseEPKNS_22ShaderModuleDescriptorE(%"class.dawn_native::ShaderModuleBase"*, %"class.dawn_native::DeviceBase"*, %"struct.dawn_native::ShaderModuleDescriptor"*) unnamed_addr #2

declare %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"*) local_unnamed_addr #2

declare void @_ZN11dawn_native20ScopedTintICEHandlerC1EPNS_10DeviceBaseE(%"class.dawn_native::ScopedTintICEHandler"*, %"class.dawn_native::DeviceBase"*) unnamed_addr #2

declare void @_ZN11dawn_native16ShaderModuleBase14InitializeBaseEPNS_23ShaderModuleParseResultE(%class.Result.346* sret, %"class.dawn_native::ShaderModuleBase"*, %"struct.dawn_native::ShaderModuleParseResult"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK11dawn_native10DeviceBase15IsToggleEnabledENS_6ToggleE(%"class.dawn_native::DeviceBase"*, i32) local_unnamed_addr #2

declare void @_ZN4tint9transform7ManagerC1Ev(%"class.tint::transform::Manager"*) unnamed_addr #2

declare void @_ZN4tint9transform7DataMapC1Ev(%"class.tint::transform::DataMap"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN4tint7ProgramC1Ev(%"class.tint::Program"*) unnamed_addr #2

declare void @_ZN11dawn_native13RunTransformsEPN4tint9transform9TransformEPKNS0_7ProgramERKNS1_7DataMapEPS7_PNS_24OwnedCompilationMessagesE(%class.Result.407* sret, %"class.tint::transform::Transform"*, %"class.tint::Program"*, %"class.tint::transform::DataMap"* dereferenceable(40), %"class.tint::transform::DataMap"*, %"class.dawn_native::OwnedCompilationMessages"*) local_unnamed_addr #2

declare %"class.tint::Program"* @_ZNK11dawn_native16ShaderModuleBase14GetTintProgramEv(%"class.dawn_native::ShaderModuleBase"*) local_unnamed_addr #2

declare dereferenceable(304) %"class.tint::Program"* @_ZN4tint7ProgramaSEOS0_(%"class.tint::Program"*, %"class.tint::Program"* dereferenceable(304)) local_unnamed_addr #2

declare void @_ZN4tint6writer5spirv9GeneratorC1EPKNS_7ProgramE(%"class.tint::writer::spirv::Generator"*, %"class.tint::Program"*) unnamed_addr #2

declare zeroext i1 @_ZN4tint6writer5spirv9Generator8GenerateEv(%"class.tint::writer::spirv::Generator"*) unnamed_addr #2

declare %"class.dawn_native::ErrorData"* @_ZN11dawn_native9ErrorData6CreateENS_17InternalErrorTypeENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEPKcSA_i(i32, %"class.std::__1::basic_string"*, i8*, i8*, i32) local_unnamed_addr #2

declare void @_ZN11dawn_native16ShaderModuleBase28ReflectShaderUsingSPIRVCrossEPNS_10DeviceBaseERKNSt3__16vectorIjNS3_9allocatorIjEEEE(%class.Result.572* sret, %"class.dawn_native::DeviceBase"*, %"class.std::__1::vector.300"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6ResultINSt3__113unordered_mapINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS0_10unique_ptrIN11dawn_native18EntryPointMetadataENS0_14default_deleteISA_EEEENS0_4hashIS7_EENS0_8equal_toIS7_EENS5_INS0_4pairIKS7_SD_EEEEEENS9_9ErrorDataEED2Ev(%class.Result.572*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.Result.572, %class.Result.572* %0, i64 0, i32 2, i32 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::__compressed_pair.334", %"class.std::__1::__compressed_pair.334"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.327"*, %"struct.std::__1::__hash_node_base.327"** %3, align 8
  %5 = bitcast %"class.std::__1::__compressed_pair.334"* %2 to %"class.std::__1::allocator.337"*
  %6 = icmp eq %"struct.std::__1::__hash_node_base.327"* %4, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %1, %7
  %8 = phi %"struct.std::__1::__hash_node_base.327"* [ %10, %7 ], [ %4, %1 ]
  %9 = getelementptr inbounds %"struct.std::__1::__hash_node_base.327", %"struct.std::__1::__hash_node_base.327"* %8, i64 0, i32 0
  %10 = load %"struct.std::__1::__hash_node_base.327"*, %"struct.std::__1::__hash_node_base.327"** %9, align 8
  %11 = getelementptr inbounds %"struct.std::__1::__hash_node_base.327", %"struct.std::__1::__hash_node_base.327"* %8, i64 2
  %12 = bitcast %"struct.std::__1::__hash_node_base.327"* %11 to %"struct.std::__1::pair.1094"*
  tail call void @_ZNSt3__116allocator_traitsINS_9allocatorINS_11__hash_nodeINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS1_IcEEEENS_10unique_ptrIN11dawn_native18EntryPointMetadataENS_14default_deleteISB_EEEEEEPvEEEEE7destroyINS_4pairIKS8_SE_EEvvEEvRSI_PT_(%"class.std::__1::allocator.337"* dereferenceable(1) %5, %"struct.std::__1::pair.1094"* %12) #13
  %13 = bitcast %"struct.std::__1::__hash_node_base.327"* %8 to i8*
  tail call void @_ZdlPv(i8* %13) #14
  %14 = icmp eq %"struct.std::__1::__hash_node_base.327"* %10, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %1
  %16 = getelementptr inbounds %class.Result.572, %class.Result.572* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"struct.std::__1::__hash_node_base.327"**, %"struct.std::__1::__hash_node_base.327"*** %16, align 8
  store %"struct.std::__1::__hash_node_base.327"** null, %"struct.std::__1::__hash_node_base.327"*** %16, align 8
  %18 = icmp eq %"struct.std::__1::__hash_node_base.327"** %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  %20 = bitcast %"struct.std::__1::__hash_node_base.327"** %17 to i8*
  tail call void @_ZdlPv(i8* %20) #14
  br label %21

21:                                               ; preds = %15, %19
  %22 = getelementptr inbounds %class.Result.572, %class.Result.572* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %23 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %22, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %22, align 8
  %24 = icmp eq %"class.dawn_native::ErrorData"* %23, null
  br i1 %24, label %45, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %23, i64 0, i32 2, i32 0, i32 0
  %27 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %26, align 8
  %28 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %25
  %30 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %27 to i64
  %31 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %23, i64 0, i32 2, i32 0, i32 1
  %32 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %27 to i8*
  tail call void @_ZdlPv(i8* %33) #14
  br label %34

34:                                               ; preds = %29, %25
  %35 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %23, i64 0, i32 1
  %36 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  tail call void @_ZdlPv(i8* %42) #14
  br label %43

43:                                               ; preds = %40, %34
  %44 = bitcast %"class.dawn_native::ErrorData"* %23 to i8*
  tail call void @_ZdlPv(i8* %44) #14
  br label %45

45:                                               ; preds = %21, %43
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4tint6writer5spirv9GeneratorD1Ev(%"class.tint::writer::spirv::Generator"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4tint7ProgramD1Ev(%"class.tint::Program"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4tint9transform7DataMapD1Ev(%"class.tint::transform::DataMap"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4tint9transform7ManagerD1Ev(%"class.tint::transform::Manager"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN11dawn_native20ScopedTintICEHandlerD1Ev(%"class.dawn_native::ScopedTintICEHandler"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK11dawn_native6opengl12ShaderModule15TranslateToGLSLEPKcNS_17SingleShaderStageEPNSt3__16vectorINS0_15CombinedSamplerENS5_9allocatorIS7_EEEEPKNS0_14PipelineLayoutEPb(%"class.std::__1::basic_string"* noalias sret, %"class.dawn_native::opengl::ShaderModule"*, i8* nocapture readonly, i32, %"class.std::__1::vector.573"*, %"class.dawn_native::opengl::PipelineLayout"*, i8* nocapture) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.std::__1::__bit_iterator", align 8
  %9 = alloca %"class.std::__1::__bit_iterator", align 8
  %10 = alloca %"class.std::__1::__bit_iterator", align 8
  %11 = alloca %"class.std::__1::__bit_iterator", align 8
  %12 = alloca %"class.std::__1::__bit_iterator", align 8
  %13 = alloca %"class.std::__1::__bit_iterator", align 8
  %14 = alloca %"class.std::__1::__bit_iterator", align 8
  %15 = alloca %"class.std::__1::__bit_iterator", align 8
  %16 = alloca %"class.spirv_cross::CompilerGLSL", align 8
  %17 = alloca %"class.std::__1::vector.300", align 8
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %"class.std::__1::basic_string", align 8
  %20 = alloca %"class.std::__1::basic_string", align 8
  %21 = alloca %"class.std::__1::basic_string", align 8
  %22 = alloca %"class.BitSetIterator<4, unsigned int>::Iterator", align 8
  %23 = alloca %"class.std::__1::basic_string", align 8
  %24 = getelementptr inbounds %"class.dawn_native::opengl::ShaderModule", %"class.dawn_native::opengl::ShaderModule"* %1, i64 0, i32 0, i32 0, i32 0
  %25 = tail call %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"* %24) #13
  %26 = getelementptr inbounds %"class.dawn_native::DeviceBase", %"class.dawn_native::DeviceBase"* %25, i64 1
  %27 = bitcast %"class.dawn_native::DeviceBase"* %26 to %"struct.dawn_native::opengl::OpenGLFunctions"*
  %28 = tail call dereferenceable(12) %"struct.dawn_native::opengl::OpenGLVersion"* @_ZNK11dawn_native6opengl15OpenGLFunctions10GetVersionEv(%"struct.dawn_native::opengl::OpenGLFunctions"* %27) #13
  %29 = tail call zeroext i1 @_ZNK11dawn_native6opengl13OpenGLVersion9IsDesktopEv(%"struct.dawn_native::opengl::OpenGLVersion"* %28) #13
  %30 = tail call zeroext i1 @_ZNK11dawn_native6opengl13OpenGLVersion4IsESEv(%"struct.dawn_native::opengl::OpenGLVersion"* %28) #13
  %31 = zext i1 %30 to i8
  %32 = tail call i32 @_ZNK11dawn_native6opengl13OpenGLVersion8GetMajorEv(%"struct.dawn_native::opengl::OpenGLVersion"* %28) #13
  %33 = mul i32 %32, 100
  %34 = tail call i32 @_ZNK11dawn_native6opengl13OpenGLVersion8GetMinorEv(%"struct.dawn_native::opengl::OpenGLVersion"* %28) #13
  %35 = mul i32 %34, 10
  %36 = add i32 %35, %33
  %37 = bitcast %"class.spirv_cross::CompilerGLSL"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8608, i8* nonnull %37) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* align 8 bitcast ({ { i32 (...)**, { %"class.std::__1::unique_ptr.586", %"class.std::__1::vector.300", %"class.spirv_cross::SmallVector", %"class.std::__1::unordered_map.598", [14 x %"class.spirv_cross::SmallVector.625"], %"class.spirv_cross::SmallVector.625", %"class.spirv_cross::SmallVector.625", %"class.spirv_cross::SmallVector.628", %"class.spirv_cross::SmallVector.631", %"class.spirv_cross::SmallVector.634", %"class.std::__1::unordered_map.637", %"class.std::__1::unordered_map.664", %"class.spirv_cross::TypedID.691", %"struct.spirv_cross::ParsedIR::Source", i32, i32, i32, i32, [4 x i8], %"class.std::__1::basic_string", %"class.spirv_cross::Bitset", %"class.std::__1::unordered_set.541" }, %"class.spirv_cross::SmallVector.692", %"class.spirv_cross::SmallVector.692", %"struct.spirv_cross::SPIRFunction"*, %"struct.spirv_cross::SPIRBlock"*, i32, [4 x i8], %"class.std::__1::unordered_set.726", i8, [7 x i8], %"class.std::__1::unordered_set.541", i8, [7 x i8], %"class.spirv_cross::SmallVector.751", %"class.spirv_cross::SmallVector.692", %"class.std::__1::function.754", %"class.std::__1::unordered_set.541", %"class.std::__1::unordered_set.541", %"class.std::__1::unordered_set.541", %"class.std::__1::unordered_set.541", %"class.std::__1::unordered_set.541", %"class.spirv_cross::Bitset", %"class.spirv_cross::Bitset", i32, i32, i8, [7 x i8], %"class.std::__1::unordered_set.541", i8, [3 x i8], i32, %"class.std::__1::unordered_map.761", %"class.spirv_cross::SmallVector.692", %"class.std::__1::unordered_set.541", i8, [7 x i8], %"class.std::__1::unordered_map.785" }, %"struct.spirv_cross::SPIRBlock"*, %"struct.spirv_cross::SPIRBlock"*, i8, [7 x i8], %"class.spirv_cross::StringStream", %"class.spirv_cross::SmallVector.631"*, %"struct.spirv_cross::SPIRBlock"*, { i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.spirv_cross::CompilerGLSL::Options::VertexOptions", [1 x i8], %"struct.spirv_cross::CompilerGLSL::Options::FragmentOptions" }, [4 x i8], %"class.std::__1::unordered_set", %"class.std::__1::unordered_set", %"class.std::__1::unordered_set", %"class.std::__1::unordered_set", %"class.std::__1::unordered_set", %"class.std::__1::unordered_set", %"class.std::__1::unordered_set", %"class.std::__1::unordered_map.812", %"class.std::__1::unordered_map.785", i8, [7 x i8], %"struct.spirv_cross::CompilerGLSL::BackendVariations", i32, [4 x i8], %"class.std::__1::unordered_set.541", %"class.std::__1::unordered_set.541", %"class.std::__1::unordered_set.541", %"class.std::__1::unordered_map.836", %"struct.spirv_cross::CompilerGLSL::ShaderSubgroupSupportHelper", [4 x i8], %"class.std::__1::unordered_map.860", %"class.spirv_cross::SmallVector.631", %"class.spirv_cross::SmallVector.631", %"class.std::__1::unordered_map.860", %"class.spirv_cross::SmallVector.758", i32, i8, i8, i8, i8, %"class.std::__1::vector.884", %"class.std::__1::vector.884", %"class.std::__1::vector.891", %"class.std::__1::vector.899", i8, [7 x i8], %"class.std::__1::unordered_set.907", %"class.std::__1::unordered_set.541" }* @__const._ZNK11dawn_native6opengl12ShaderModule15TranslateToGLSLEPKcNS_17SingleShaderStageEPNSt3__16vectorINS0_15CombinedSamplerENS5_9allocatorIS7_EEEEPKNS0_14PipelineLayoutEPb.compiler to i8*), i64 8608, i1 false)
  %38 = tail call %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"* %24) #13
  %39 = tail call zeroext i1 @_ZNK11dawn_native10DeviceBase15IsToggleEnabledENS_6ToggleE(%"class.dawn_native::DeviceBase"* %38, i32 24) #13
  br i1 %39, label %40, label %42

40:                                               ; preds = %7
  %41 = getelementptr inbounds %"class.dawn_native::opengl::ShaderModule", %"class.dawn_native::opengl::ShaderModule"* %1, i64 0, i32 1
  br label %45

42:                                               ; preds = %7
  %43 = getelementptr inbounds %"class.dawn_native::opengl::ShaderModule", %"class.dawn_native::opengl::ShaderModule"* %1, i64 0, i32 0
  %44 = tail call dereferenceable(24) %"class.std::__1::vector.300"* @_ZNK11dawn_native16ShaderModuleBase8GetSpirvEv(%"class.dawn_native::ShaderModuleBase"* %43) #13
  br label %45

45:                                               ; preds = %42, %40
  %46 = phi %"class.std::__1::vector.300"* [ %41, %40 ], [ %44, %42 ]
  %47 = bitcast %"class.std::__1::vector.300"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 24, i1 false) #13
  %48 = getelementptr inbounds %"class.std::__1::vector.300", %"class.std::__1::vector.300"* %46, i64 0, i32 0, i32 1
  %49 = bitcast i32** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.std::__1::vector.300"* %46 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %50, %52
  %54 = ashr exact i64 %53, 2
  %55 = icmp eq i64 %53, 0
  br i1 %55, label %83, label %56

56:                                               ; preds = %45
  %57 = icmp ugt i64 %54, 4611686018427387903
  br i1 %57, label %58, label %60

58:                                               ; preds = %56
  %59 = bitcast %"class.std::__1::vector.300"* %17 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %59) #15
  unreachable

60:                                               ; preds = %56
  %61 = tail call i8* @_Znwm(i64 %53) #14
  %62 = bitcast i8* %61 to i32*
  %63 = getelementptr inbounds %"class.std::__1::vector.300", %"class.std::__1::vector.300"* %17, i64 0, i32 0, i32 1
  %64 = bitcast i32** %63 to i8**
  store i8* %61, i8** %64, align 8
  %65 = bitcast %"class.std::__1::vector.300"* %17 to i8**
  store i8* %61, i8** %65, align 8
  %66 = getelementptr inbounds i32, i32* %62, i64 %54
  %67 = getelementptr inbounds %"class.std::__1::vector.300", %"class.std::__1::vector.300"* %17, i64 0, i32 0, i32 2, i32 0, i32 0
  store i32* %66, i32** %67, align 8
  %68 = getelementptr inbounds %"class.std::__1::vector.300", %"class.std::__1::vector.300"* %46, i64 0, i32 0, i32 0
  %69 = load i32*, i32** %68, align 8
  %70 = load i64, i64* %49, align 8
  %71 = bitcast i32** %63 to i64*
  %72 = ptrtoint i8* %61 to i64
  %73 = ptrtoint i32* %69 to i64
  %74 = sub i64 %70, %73
  %75 = icmp sgt i64 %74, 0
  br i1 %75, label %76, label %81

76:                                               ; preds = %60
  %77 = lshr exact i64 %74, 2
  %78 = bitcast i32* %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %61, i8* align 4 %78, i64 %74, i1 false) #13
  %79 = getelementptr inbounds i32, i32* %62, i64 %77
  %80 = ptrtoint i32* %79 to i64
  br label %81

81:                                               ; preds = %76, %60
  %82 = phi i64 [ %80, %76 ], [ %72, %60 ]
  store i64 %82, i64* %71, align 8
  br label %83

83:                                               ; preds = %45, %81
  call void @_ZN11spirv_cross12CompilerGLSLC2ENSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spirv_cross::CompilerGLSL"* nonnull %16, %"class.std::__1::vector.300"* nonnull %17)
  %84 = getelementptr inbounds %"class.std::__1::vector.300", %"class.std::__1::vector.300"* %17, i64 0, i32 0, i32 0
  %85 = load i32*, i32** %84, align 8
  %86 = icmp eq i32* %85, null
  br i1 %86, label %92, label %87

87:                                               ; preds = %83
  %88 = ptrtoint i32* %85 to i64
  %89 = getelementptr inbounds %"class.std::__1::vector.300", %"class.std::__1::vector.300"* %17, i64 0, i32 0, i32 1
  %90 = bitcast i32** %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = bitcast i32* %85 to i8*
  call void @_ZdlPv(i8* %91) #14
  br label %92

92:                                               ; preds = %83, %87
  %93 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %16, i64 0, i32 7, i32 0
  store i32 %36, i32* %93, align 8
  %94 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %16, i64 0, i32 7, i32 1
  store i8 %31, i8* %94, align 4
  %95 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %16, i64 0, i32 7, i32 2
  %96 = bitcast i8* %95 to i32*
  store i32 0, i32* %96, align 1
  %97 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %16, i64 0, i32 7, i32 6
  store i8 1, i8* %97, align 1
  %98 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %16, i64 0, i32 7, i32 7
  store i8 0, i8* %98, align 2
  %99 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %16, i64 0, i32 7, i32 8
  store i8 0, i8* %99, align 1
  %100 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %16, i64 0, i32 7, i32 9
  store i8 0, i8* %100, align 4
  %101 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %16, i64 0, i32 7, i32 10
  store i8 1, i8* %101, align 1
  %102 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %16, i64 0, i32 7, i32 11
  %103 = bitcast i8* %102 to i32*
  store i32 16842752, i32* %103, align 2
  %104 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %16, i64 0, i32 7, i32 13, i32 2
  store i8 1, i8* %104, align 2
  %105 = getelementptr inbounds i8, i8* %37, i64 7099
  store i8 -86, i8* %105, align 1
  %106 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %16, i64 0, i32 7, i32 14, i32 0
  store i32 2, i32* %106, align 4
  %107 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %16, i64 0, i32 7, i32 14, i32 1
  store i32 3, i32* %107, align 8
  %108 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %16, i64 0, i32 0
  %109 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %109) #13
  %110 = call i64 @strlen(i8* %2) #13
  %111 = icmp ugt i64 %110, -17
  br i1 %111, label %112, label %114

112:                                              ; preds = %92
  %113 = bitcast %"class.std::__1::basic_string"* %18 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %113) #15
  unreachable

114:                                              ; preds = %92
  %115 = icmp ult i64 %110, 23
  br i1 %115, label %125, label %116

116:                                              ; preds = %114
  %117 = add nuw i64 %110, 16
  %118 = and i64 %117, -16
  %119 = call i8* @_Znwm(i64 %118) #14
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %119, i8** %120, align 8
  %121 = or i64 %118, -9223372036854775808
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %121, i64* %122, align 8
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %110, i64* %123, align 8
  %124 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %130

125:                                              ; preds = %114
  %126 = trunc i64 %110 to i8
  %127 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %128 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %127, i64 0, i32 1, i32 0
  store i8 %126, i8* %128, align 1
  %129 = icmp eq i64 %110, 0
  br i1 %129, label %133, label %130

130:                                              ; preds = %125, %116
  %131 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %127, %125 ], [ %124, %116 ]
  %132 = phi i8* [ %109, %125 ], [ %119, %116 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %132, i8* align 1 %2, i64 %110, i1 false) #13
  br label %133

133:                                              ; preds = %125, %130
  %134 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %127, %125 ], [ %131, %130 ]
  %135 = phi i8* [ %109, %125 ], [ %132, %130 ]
  %136 = getelementptr inbounds i8, i8* %135, i64 %110
  store i8 0, i8* %136, align 1
  %137 = call i32 @_ZN11dawn_native27ShaderStageToExecutionModelENS_17SingleShaderStageE(i32 %3) #13
  call void @_ZN11spirv_cross8Compiler15set_entry_pointERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN3spv14ExecutionModelE(%"class.spirv_cross::Compiler"* nonnull %108, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %18, i32 %137) #13
  %138 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %134, i64 0, i32 1, i32 0
  %139 = load i8, i8* %138, align 1
  %140 = icmp slt i8 %139, 0
  br i1 %140, label %141, label %144

141:                                              ; preds = %133
  %142 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load i8*, i8** %142, align 8
  call void @_ZdlPv(i8* %143) #14
  br label %144

144:                                              ; preds = %133, %141
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %109) #13
  %145 = call i32 @_ZN11spirv_cross8Compiler39build_dummy_sampler_for_combined_imagesEv(%"class.spirv_cross::Compiler"* nonnull %108) #13
  call void @_ZN11spirv_cross8Compiler29build_combined_image_samplersEv(%"class.spirv_cross::Compiler"* nonnull %108) #13
  %146 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %16, i64 0, i32 0, i32 13, i32 0, i32 0
  %147 = load %"struct.spirv_cross::CombinedImageSampler"*, %"struct.spirv_cross::CombinedImageSampler"** %146, align 8
  %148 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %16, i64 0, i32 0, i32 13, i32 0, i32 1
  %149 = load i64, i64* %148, align 8
  %150 = getelementptr inbounds %"struct.spirv_cross::CombinedImageSampler", %"struct.spirv_cross::CombinedImageSampler"* %147, i64 %149
  %151 = icmp eq i64 %149, 0
  br i1 %151, label %163, label %152

152:                                              ; preds = %144
  %153 = getelementptr inbounds %"class.std::__1::vector.573", %"class.std::__1::vector.573"* %4, i64 0, i32 0, i32 1
  %154 = getelementptr inbounds %"class.std::__1::vector.573", %"class.std::__1::vector.573"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %155 = bitcast %"struct.dawn_native::opengl::CombinedSampler"** %153 to i64*
  %156 = bitcast %"class.std::__1::vector.573"* %4 to i64*
  %157 = bitcast %"struct.dawn_native::opengl::CombinedSampler"** %154 to i64*
  %158 = getelementptr inbounds %"class.std::__1::vector.573", %"class.std::__1::vector.573"* %4, i64 0, i32 0, i32 0
  %159 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %160 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %161 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %160, i64 0, i32 1, i32 0
  %162 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %166

163:                                              ; preds = %258, %144
  %164 = call %"class.dawn_native::DeviceBase"* @_ZNK11dawn_native10ObjectBase9GetDeviceEv(%"class.dawn_native::ObjectBase"* %24) #13
  %165 = call zeroext i1 @_ZNK11dawn_native10DeviceBase15IsToggleEnabledENS_6ToggleE(%"class.dawn_native::DeviceBase"* %164, i32 24) #13
  br i1 %165, label %261, label %291

166:                                              ; preds = %152, %258
  %167 = phi %"struct.spirv_cross::CombinedImageSampler"* [ %147, %152 ], [ %259, %258 ]
  %168 = load %"struct.dawn_native::opengl::CombinedSampler"*, %"struct.dawn_native::opengl::CombinedSampler"** %153, align 8
  %169 = load %"struct.dawn_native::opengl::CombinedSampler"*, %"struct.dawn_native::opengl::CombinedSampler"** %154, align 8
  %170 = icmp ult %"struct.dawn_native::opengl::CombinedSampler"* %168, %169
  %171 = ptrtoint %"struct.dawn_native::opengl::CombinedSampler"* %169 to i64
  br i1 %170, label %172, label %176

172:                                              ; preds = %166
  %173 = bitcast %"struct.dawn_native::opengl::CombinedSampler"* %168 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %173, i8 0, i64 20, i1 false) #13
  %174 = getelementptr inbounds %"struct.dawn_native::opengl::CombinedSampler", %"struct.dawn_native::opengl::CombinedSampler"* %168, i64 1
  %175 = ptrtoint %"struct.dawn_native::opengl::CombinedSampler"* %174 to i64
  store i64 %175, i64* %155, align 8
  br label %226

176:                                              ; preds = %166
  %177 = ptrtoint %"struct.dawn_native::opengl::CombinedSampler"* %168 to i64
  %178 = load i64, i64* %156, align 8
  %179 = sub i64 %177, %178
  %180 = sdiv exact i64 %179, 20
  %181 = add nsw i64 %180, 1
  %182 = icmp ugt i64 %181, 922337203685477580
  br i1 %182, label %183, label %185

183:                                              ; preds = %176
  %184 = bitcast %"class.std::__1::vector.573"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %184) #15
  unreachable

185:                                              ; preds = %176
  %186 = sub i64 %171, %178
  %187 = sdiv exact i64 %186, 20
  %188 = icmp ult i64 %187, 461168601842738790
  br i1 %188, label %189, label %194

189:                                              ; preds = %185
  %190 = shl nsw i64 %187, 1
  %191 = icmp ult i64 %190, %181
  %192 = select i1 %191, i64 %181, i64 %190
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %199, label %194

194:                                              ; preds = %189, %185
  %195 = phi i64 [ %192, %189 ], [ 922337203685477580, %185 ]
  %196 = mul i64 %195, 20
  %197 = call i8* @_Znwm(i64 %196) #14
  %198 = bitcast i8* %197 to %"struct.dawn_native::opengl::CombinedSampler"*
  br label %199

199:                                              ; preds = %194, %189
  %200 = phi i64 [ %195, %194 ], [ 0, %189 ]
  %201 = phi %"struct.dawn_native::opengl::CombinedSampler"* [ %198, %194 ], [ null, %189 ]
  %202 = getelementptr inbounds %"struct.dawn_native::opengl::CombinedSampler", %"struct.dawn_native::opengl::CombinedSampler"* %201, i64 %180
  %203 = getelementptr inbounds %"struct.dawn_native::opengl::CombinedSampler", %"struct.dawn_native::opengl::CombinedSampler"* %201, i64 %200
  %204 = ptrtoint %"struct.dawn_native::opengl::CombinedSampler"* %203 to i64
  %205 = bitcast %"struct.dawn_native::opengl::CombinedSampler"* %202 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %205, i8 0, i64 20, i1 false) #13
  %206 = getelementptr inbounds %"struct.dawn_native::opengl::CombinedSampler", %"struct.dawn_native::opengl::CombinedSampler"* %202, i64 1
  %207 = ptrtoint %"struct.dawn_native::opengl::CombinedSampler"* %206 to i64
  %208 = load %"struct.dawn_native::opengl::CombinedSampler"*, %"struct.dawn_native::opengl::CombinedSampler"** %158, align 8
  %209 = load i64, i64* %155, align 8
  %210 = ptrtoint %"struct.dawn_native::opengl::CombinedSampler"* %208 to i64
  %211 = sub i64 %209, %210
  %212 = sdiv exact i64 %211, -20
  %213 = getelementptr inbounds %"struct.dawn_native::opengl::CombinedSampler", %"struct.dawn_native::opengl::CombinedSampler"* %202, i64 %212
  %214 = ptrtoint %"struct.dawn_native::opengl::CombinedSampler"* %213 to i64
  %215 = icmp sgt i64 %211, 0
  br i1 %215, label %216, label %220

216:                                              ; preds = %199
  %217 = bitcast %"struct.dawn_native::opengl::CombinedSampler"* %213 to i8*
  %218 = bitcast %"struct.dawn_native::opengl::CombinedSampler"* %208 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %217, i8* align 4 %218, i64 %211, i1 false) #13
  %219 = load %"struct.dawn_native::opengl::CombinedSampler"*, %"struct.dawn_native::opengl::CombinedSampler"** %158, align 8
  br label %220

220:                                              ; preds = %216, %199
  %221 = phi %"struct.dawn_native::opengl::CombinedSampler"* [ %208, %199 ], [ %219, %216 ]
  store i64 %214, i64* %156, align 8
  store i64 %207, i64* %155, align 8
  store i64 %204, i64* %157, align 8
  %222 = icmp eq %"struct.dawn_native::opengl::CombinedSampler"* %221, null
  br i1 %222, label %226, label %223

223:                                              ; preds = %220
  %224 = bitcast %"struct.dawn_native::opengl::CombinedSampler"* %221 to i8*
  call void @_ZdlPv(i8* %224) #14
  %225 = load %"struct.dawn_native::opengl::CombinedSampler"*, %"struct.dawn_native::opengl::CombinedSampler"** %153, align 8
  br label %226

226:                                              ; preds = %172, %220, %223
  %227 = phi %"struct.dawn_native::opengl::CombinedSampler"* [ %174, %172 ], [ %206, %220 ], [ %225, %223 ]
  %228 = getelementptr inbounds %"struct.dawn_native::opengl::CombinedSampler", %"struct.dawn_native::opengl::CombinedSampler"* %227, i64 -1
  %229 = getelementptr inbounds %"struct.spirv_cross::CombinedImageSampler", %"struct.spirv_cross::CombinedImageSampler"* %167, i64 0, i32 2, i32 0
  %230 = load i32, i32* %229, align 4
  %231 = icmp eq i32 %230, %145
  br i1 %231, label %232, label %235

232:                                              ; preds = %226
  store i8 1, i8* %6, align 1
  %233 = getelementptr inbounds %"struct.dawn_native::opengl::CombinedSampler", %"struct.dawn_native::opengl::CombinedSampler"* %227, i64 -1, i32 2
  store i8 1, i8* %233, align 4
  %234 = getelementptr inbounds %"struct.dawn_native::opengl::CombinedSampler", %"struct.dawn_native::opengl::CombinedSampler"* %228, i64 0, i32 0, i32 0
  store i32 0, i32* %234, align 4
  br label %242

235:                                              ; preds = %226
  %236 = getelementptr inbounds %"struct.dawn_native::opengl::CombinedSampler", %"struct.dawn_native::opengl::CombinedSampler"* %227, i64 -1, i32 2
  store i8 0, i8* %236, align 4
  %237 = load i32, i32* %229, align 4
  %238 = call i32 @_ZNK11spirv_cross8Compiler14get_decorationENS_7TypedIDILNS_5TypesE0EEEN3spv10DecorationE(%"class.spirv_cross::Compiler"* nonnull %108, i32 %237, i32 34) #13
  %239 = getelementptr inbounds %"struct.dawn_native::opengl::CombinedSampler", %"struct.dawn_native::opengl::CombinedSampler"* %228, i64 0, i32 0, i32 0
  store i32 %238, i32* %239, align 4
  %240 = load i32, i32* %229, align 4
  %241 = call i32 @_ZNK11spirv_cross8Compiler14get_decorationENS_7TypedIDILNS_5TypesE0EEEN3spv10DecorationE(%"class.spirv_cross::Compiler"* nonnull %108, i32 %240, i32 33) #13
  br label %242

242:                                              ; preds = %235, %232
  %243 = phi i32 [ %241, %235 ], [ 0, %232 ]
  %244 = getelementptr inbounds %"struct.dawn_native::opengl::CombinedSampler", %"struct.dawn_native::opengl::CombinedSampler"* %227, i64 -1, i32 0, i32 1
  store i32 %243, i32* %244, align 4
  %245 = getelementptr inbounds %"struct.spirv_cross::CombinedImageSampler", %"struct.spirv_cross::CombinedImageSampler"* %167, i64 0, i32 1, i32 0
  %246 = load i32, i32* %245, align 4
  %247 = call i32 @_ZNK11spirv_cross8Compiler14get_decorationENS_7TypedIDILNS_5TypesE0EEEN3spv10DecorationE(%"class.spirv_cross::Compiler"* nonnull %108, i32 %246, i32 34) #13
  %248 = getelementptr inbounds %"struct.dawn_native::opengl::CombinedSampler", %"struct.dawn_native::opengl::CombinedSampler"* %227, i64 -1, i32 1, i32 0
  store i32 %247, i32* %248, align 4
  %249 = load i32, i32* %245, align 4
  %250 = call i32 @_ZNK11spirv_cross8Compiler14get_decorationENS_7TypedIDILNS_5TypesE0EEEN3spv10DecorationE(%"class.spirv_cross::Compiler"* nonnull %108, i32 %249, i32 33) #13
  %251 = getelementptr inbounds %"struct.dawn_native::opengl::CombinedSampler", %"struct.dawn_native::opengl::CombinedSampler"* %227, i64 -1, i32 1, i32 1
  store i32 %250, i32* %251, align 4
  %252 = getelementptr inbounds %"struct.spirv_cross::CombinedImageSampler", %"struct.spirv_cross::CombinedImageSampler"* %167, i64 0, i32 0, i32 0
  %253 = load i32, i32* %252, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %159) #13
  call void @_ZNK11dawn_native6opengl15CombinedSampler7GetNameEv(%"class.std::__1::basic_string"* nonnull sret %19, %"struct.dawn_native::opengl::CombinedSampler"* %228)
  call void @_ZN11spirv_cross8Compiler8set_nameENS_7TypedIDILNS_5TypesE0EEERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.spirv_cross::Compiler"* nonnull %108, i32 %253, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %19) #13
  %254 = load i8, i8* %161, align 1
  %255 = icmp slt i8 %254, 0
  br i1 %255, label %256, label %258

256:                                              ; preds = %242
  %257 = load i8*, i8** %162, align 8
  call void @_ZdlPv(i8* %257) #14
  br label %258

258:                                              ; preds = %242, %256
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %159) #13
  %259 = getelementptr inbounds %"struct.spirv_cross::CombinedImageSampler", %"struct.spirv_cross::CombinedImageSampler"* %167, i64 1
  %260 = icmp eq %"struct.spirv_cross::CombinedImageSampler"* %259, %150
  br i1 %260, label %163, label %166

261:                                              ; preds = %163
  %262 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %262) #13
  %263 = call i64 @strlen(i8* %2) #13
  %264 = icmp ugt i64 %263, -17
  br i1 %264, label %265, label %267

265:                                              ; preds = %261
  %266 = bitcast %"class.std::__1::basic_string"* %20 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %266) #15
  unreachable

267:                                              ; preds = %261
  %268 = icmp ult i64 %263, 23
  br i1 %268, label %277, label %269

269:                                              ; preds = %267
  %270 = add nuw i64 %263, 16
  %271 = and i64 %270, -16
  %272 = call i8* @_Znwm(i64 %271) #14
  %273 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %272, i8** %273, align 8
  %274 = or i64 %271, -9223372036854775808
  %275 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %274, i64* %275, align 8
  %276 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %263, i64* %276, align 8
  br label %282

277:                                              ; preds = %267
  %278 = trunc i64 %263 to i8
  %279 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %280 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %279, i64 0, i32 1, i32 0
  store i8 %278, i8* %280, align 1
  %281 = icmp eq i64 %263, 0
  br i1 %281, label %284, label %282

282:                                              ; preds = %277, %269
  %283 = phi i8* [ %272, %269 ], [ %262, %277 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %283, i8* align 1 %2, i64 %263, i1 false) #13
  br label %284

284:                                              ; preds = %277, %282
  %285 = phi i8* [ %262, %277 ], [ %283, %282 ]
  %286 = getelementptr inbounds i8, i8* %285, i64 %263
  store i8 0, i8* %286, align 1
  %287 = getelementptr inbounds %"class.dawn_native::opengl::ShaderModule", %"class.dawn_native::opengl::ShaderModule"* %1, i64 0, i32 2, i32 0
  %288 = call %"struct.std::__1::__hash_node_base.327"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN11dawn_native18EntryPointMetadataENS_14default_deleteISA_EEEEEENS_22__unordered_map_hasherIS7_SE_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SE_SJ_SH_Lb1EEENS5_ISE_EEE4findIS7_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISE_PvEEEERKT_(%"class.std::__1::__hash_table.323"* %287, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %20) #13
  %289 = icmp eq %"struct.std::__1::__hash_node_base.327"* %288, null
  br i1 %289, label %290, label %328

290:                                              ; preds = %284
  call void @abort() #15
  unreachable

291:                                              ; preds = %163
  %292 = getelementptr inbounds %"class.dawn_native::opengl::ShaderModule", %"class.dawn_native::opengl::ShaderModule"* %1, i64 0, i32 0
  %293 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %293) #13
  %294 = call i64 @strlen(i8* %2) #13
  %295 = icmp ugt i64 %294, -17
  br i1 %295, label %296, label %298

296:                                              ; preds = %291
  %297 = bitcast %"class.std::__1::basic_string"* %21 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %297) #15
  unreachable

298:                                              ; preds = %291
  %299 = icmp ult i64 %294, 23
  br i1 %299, label %309, label %300

300:                                              ; preds = %298
  %301 = add nuw i64 %294, 16
  %302 = and i64 %301, -16
  %303 = call i8* @_Znwm(i64 %302) #14
  %304 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %303, i8** %304, align 8
  %305 = or i64 %302, -9223372036854775808
  %306 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %294, i64* %307, align 8
  %308 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %314

309:                                              ; preds = %298
  %310 = trunc i64 %294 to i8
  %311 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %312 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %311, i64 0, i32 1, i32 0
  store i8 %310, i8* %312, align 1
  %313 = icmp eq i64 %294, 0
  br i1 %313, label %317, label %314

314:                                              ; preds = %309, %300
  %315 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %311, %309 ], [ %308, %300 ]
  %316 = phi i8* [ %293, %309 ], [ %303, %300 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %316, i8* align 1 %2, i64 %294, i1 false) #13
  br label %317

317:                                              ; preds = %314, %309
  %318 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %315, %314 ], [ %311, %309 ]
  %319 = phi i8* [ %316, %314 ], [ %293, %309 ]
  %320 = getelementptr inbounds i8, i8* %319, i64 %294
  store i8 0, i8* %320, align 1
  %321 = call dereferenceable(144) %"struct.dawn_native::EntryPointMetadata"* @_ZNK11dawn_native16ShaderModuleBase13GetEntryPointERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.dawn_native::ShaderModuleBase"* %292, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %21) #13
  %322 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %318, i64 0, i32 1, i32 0
  %323 = load i8, i8* %322, align 1
  %324 = icmp slt i8 %323, 0
  br i1 %324, label %325, label %339

325:                                              ; preds = %317
  %326 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %327 = load i8*, i8** %326, align 8
  call void @_ZdlPv(i8* %327) #14
  br label %339

328:                                              ; preds = %284
  %329 = getelementptr inbounds %"struct.std::__1::__hash_node_base.327", %"struct.std::__1::__hash_node_base.327"* %288, i64 5
  %330 = bitcast %"struct.std::__1::__hash_node_base.327"* %329 to %"struct.dawn_native::EntryPointMetadata"**
  %331 = load %"struct.dawn_native::EntryPointMetadata"*, %"struct.dawn_native::EntryPointMetadata"** %330, align 8
  %332 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %333 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %332, i64 0, i32 1, i32 0
  %334 = load i8, i8* %333, align 1
  %335 = icmp slt i8 %334, 0
  br i1 %335, label %336, label %339

336:                                              ; preds = %328
  %337 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %338 = load i8*, i8** %337, align 8
  call void @_ZdlPv(i8* %338) #14
  br label %339

339:                                              ; preds = %336, %328, %317, %325
  %340 = phi i8* [ %293, %325 ], [ %293, %317 ], [ %262, %328 ], [ %262, %336 ]
  %341 = phi %"struct.dawn_native::EntryPointMetadata"* [ %321, %325 ], [ %321, %317 ], [ %331, %328 ], [ %331, %336 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %340) #13
  %342 = call dereferenceable(96) %"class.ityp::array.583"* @_ZNK11dawn_native6opengl14PipelineLayout19GetBindingIndexInfoEv(%"class.dawn_native::opengl::PipelineLayout"* %5) #13
  %343 = getelementptr inbounds %"class.dawn_native::opengl::PipelineLayout", %"class.dawn_native::opengl::PipelineLayout"* %5, i64 0, i32 0
  %344 = call dereferenceable(8) %"class.ityp::bitset"* @_ZNK11dawn_native18PipelineLayoutBase23GetBindGroupLayoutsMaskEv(%"class.dawn_native::PipelineLayoutBase"* %343) #13
  %345 = getelementptr inbounds %"class.ityp::bitset", %"class.ityp::bitset"* %344, i64 0, i32 0, i32 0, i32 0
  %346 = load i64, i64* %345, align 8, !noalias !5
  %347 = bitcast %"class.BitSetIterator<4, unsigned int>::Iterator"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %347) #13
  %348 = getelementptr inbounds %"class.BitSetIterator<4, unsigned int>::Iterator", %"class.BitSetIterator<4, unsigned int>::Iterator"* %22, i64 0, i32 0, i32 0, i32 0
  %349 = getelementptr inbounds %"class.BitSetIterator<4, unsigned int>::Iterator", %"class.BitSetIterator<4, unsigned int>::Iterator"* %22, i64 0, i32 1
  %350 = getelementptr inbounds %"class.BitSetIterator<4, unsigned int>::Iterator", %"class.BitSetIterator<4, unsigned int>::Iterator"* %22, i64 0, i32 2
  store i64 %346, i64* %348, align 8, !alias.scope !8
  %351 = bitcast i64* %349 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %351, i8 0, i64 16, i1 false) #13, !alias.scope !8
  %352 = and i64 %346, 15
  %353 = icmp eq i64 %352, 0
  br i1 %353, label %387, label %354

354:                                              ; preds = %339
  %355 = ptrtoint %"class.BitSetIterator<4, unsigned int>::Iterator"* %22 to i64
  %356 = bitcast %"class.std::__1::__bit_iterator"* %11 to i8*
  %357 = bitcast %"class.std::__1::__bit_iterator"* %8 to i8*
  %358 = bitcast %"class.std::__1::__bit_iterator"* %9 to i8*
  %359 = bitcast %"class.std::__1::__bit_iterator"* %10 to i8*
  %360 = bitcast %"class.std::__1::__bit_iterator"* %8 to i64*
  %361 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %8, i64 0, i32 1
  %362 = bitcast %"class.std::__1::__bit_iterator"* %9 to i64*
  %363 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %9, i64 0, i32 1
  %364 = bitcast %"class.std::__1::__bit_iterator"* %10 to i64*
  %365 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %10, i64 0, i32 1
  br label %366

366:                                              ; preds = %378, %354
  %367 = phi i64 [ %346, %354 ], [ %380, %378 ]
  %368 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm4EjE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %369 = and i64 %368, %367
  %370 = and i64 %369, 4294967295
  %371 = icmp eq i64 %370, 0
  br i1 %371, label %378, label %372

372:                                              ; preds = %366
  %373 = trunc i64 %369 to i32
  %374 = call i32 @_Z11ScanForwardj(i32 %373) #13
  %375 = zext i32 %374 to i64
  %376 = load i64, i64* %350, align 8, !alias.scope !8
  %377 = add i64 %376, %375
  br label %384

378:                                              ; preds = %366
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %356) #13, !noalias !8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %357) #13, !noalias !8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %358) #13, !noalias !8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %359) #13, !noalias !8
  store i64 %355, i64* %360, align 8, !noalias !11
  store i32 4, i32* %361, align 8, !noalias !11
  store i64 %355, i64* %362, align 8, !noalias !11
  store i32 4, i32* %363, align 8, !noalias !11
  store i64 %355, i64* %364, align 8, !noalias !11
  store i32 0, i32* %365, align 8, !noalias !11
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* nonnull sret %11, %"class.std::__1::__bit_iterator"* nonnull %8, %"class.std::__1::__bit_iterator"* nonnull %9, %"class.std::__1::__bit_iterator"* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %357) #13, !noalias !8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %358) #13, !noalias !8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %359) #13, !noalias !8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %356) #13, !noalias !8
  %379 = load i64, i64* %348, align 8, !alias.scope !8
  %380 = and i64 %379, -16
  store i64 %380, i64* %348, align 8, !alias.scope !8
  %381 = load i64, i64* %350, align 8, !alias.scope !8
  %382 = add i64 %381, 32
  store i64 %382, i64* %350, align 8, !alias.scope !8
  %383 = icmp ult i64 %382, 4
  br i1 %383, label %366, label %384

384:                                              ; preds = %378, %372
  %385 = phi i64 [ %376, %372 ], [ %382, %378 ]
  %386 = phi i64 [ %377, %372 ], [ 0, %378 ]
  store i64 %386, i64* %349, align 8, !alias.scope !8
  br label %389

387:                                              ; preds = %339
  store i64 32, i64* %350, align 8, !alias.scope !8
  %388 = ptrtoint %"class.BitSetIterator<4, unsigned int>::Iterator"* %22 to i64
  br label %389

389:                                              ; preds = %384, %387
  %390 = phi i64 [ %355, %384 ], [ %388, %387 ]
  %391 = phi i64 [ %386, %384 ], [ 0, %387 ]
  %392 = phi i64 [ %385, %384 ], [ 32, %387 ]
  %393 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  %394 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %395 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %394, i64 0, i32 1, i32 0
  %396 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %397 = bitcast %"class.std::__1::__bit_iterator"* %15 to i8*
  %398 = bitcast %"class.std::__1::__bit_iterator"* %12 to i8*
  %399 = bitcast %"class.std::__1::__bit_iterator"* %13 to i8*
  %400 = bitcast %"class.std::__1::__bit_iterator"* %14 to i8*
  %401 = bitcast %"class.std::__1::__bit_iterator"* %12 to i64*
  %402 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %12, i64 0, i32 1
  %403 = bitcast %"class.std::__1::__bit_iterator"* %13 to i64*
  %404 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %13, i64 0, i32 1
  %405 = bitcast %"class.std::__1::__bit_iterator"* %14 to i64*
  %406 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %14, i64 0, i32 1
  br label %407

407:                                              ; preds = %458, %389
  %408 = phi i64 [ %459, %458 ], [ %392, %389 ]
  %409 = phi i64 [ %460, %458 ], [ %391, %389 ]
  %410 = icmp eq i64 %408, 32
  br i1 %410, label %411, label %416

411:                                              ; preds = %407
  %412 = load i64, i64* %348, align 8
  %413 = and i64 %412, 15
  %414 = icmp eq i64 %413, 0
  br i1 %414, label %415, label %416

415:                                              ; preds = %411
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %347) #13
  call void @_ZN11spirv_cross12CompilerGLSL7compileEv(%"class.std::__1::basic_string"* sret %0, %"class.spirv_cross::CompilerGLSL"* nonnull %16) #13
  call void @_ZN11spirv_cross12CompilerGLSLD2Ev(%"class.spirv_cross::CompilerGLSL"* nonnull %16) #13
  call void @llvm.lifetime.end.p0i8(i64 8608, i8* nonnull %37) #13
  ret void

416:                                              ; preds = %411, %407
  %417 = trunc i64 %409 to i32
  %418 = and i64 %409, 4294967295
  %419 = getelementptr inbounds %"struct.dawn_native::EntryPointMetadata", %"struct.dawn_native::EntryPointMetadata"* %341, i64 0, i32 0, i32 0, i32 0, i64 %418, i32 0, i32 0
  %420 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %419, align 8
  %421 = getelementptr inbounds %"struct.dawn_native::EntryPointMetadata", %"struct.dawn_native::EntryPointMetadata"* %341, i64 0, i32 0, i32 0, i32 0, i64 %418, i32 0, i32 1, i32 0, i32 0
  %422 = icmp eq %"class.std::__1::__tree_end_node"* %420, %421
  br i1 %422, label %428, label %423

423:                                              ; preds = %416
  %424 = getelementptr inbounds %"class.ityp::array.583", %"class.ityp::array.583"* %342, i64 0, i32 0, i32 0, i64 %418, i32 0, i32 0, i32 0
  br label %461

425:                                              ; preds = %514
  %426 = load i64, i64* %349, align 8
  %427 = load i64, i64* %350, align 8
  br label %428

428:                                              ; preds = %425, %416
  %429 = phi i64 [ %427, %425 ], [ %408, %416 ]
  %430 = phi i64 [ %426, %425 ], [ %409, %416 ]
  %431 = sub i64 %430, %429
  %432 = icmp ugt i64 %431, 3
  br i1 %432, label %433, label %434

433:                                              ; preds = %428
  call void @abort() #15
  unreachable

434:                                              ; preds = %428
  %435 = shl i64 1, %431
  %436 = xor i64 %435, -1
  %437 = load i64, i64* %348, align 8
  %438 = and i64 %437, %436
  store i64 %438, i64* %348, align 8
  %439 = icmp ult i64 %429, 4
  br i1 %439, label %440, label %458

440:                                              ; preds = %434, %452
  %441 = phi i64 [ %454, %452 ], [ %438, %434 ]
  %442 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm4EjE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %443 = and i64 %442, %441
  %444 = and i64 %443, 4294967295
  %445 = icmp eq i64 %444, 0
  br i1 %445, label %452, label %446

446:                                              ; preds = %440
  %447 = trunc i64 %443 to i32
  %448 = call i32 @_Z11ScanForwardj(i32 %447) #13
  %449 = zext i32 %448 to i64
  %450 = load i64, i64* %350, align 8
  %451 = add i64 %450, %449
  br label %458

452:                                              ; preds = %440
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %397) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %398) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %399) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %400) #13
  store i64 %390, i64* %401, align 8, !noalias !14
  store i32 4, i32* %402, align 8, !noalias !14
  store i64 %390, i64* %403, align 8, !noalias !14
  store i32 4, i32* %404, align 8, !noalias !14
  store i64 %390, i64* %405, align 8, !noalias !14
  store i32 0, i32* %406, align 8, !noalias !14
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* nonnull sret %15, %"class.std::__1::__bit_iterator"* nonnull %12, %"class.std::__1::__bit_iterator"* nonnull %13, %"class.std::__1::__bit_iterator"* nonnull %14) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %398) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %399) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %400) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %397) #13
  %453 = load i64, i64* %348, align 8
  %454 = and i64 %453, -16
  store i64 %454, i64* %348, align 8
  %455 = load i64, i64* %350, align 8
  %456 = add i64 %455, 32
  store i64 %456, i64* %350, align 8
  %457 = icmp ult i64 %456, 4
  br i1 %457, label %440, label %458

458:                                              ; preds = %452, %434, %446
  %459 = phi i64 [ %450, %446 ], [ %429, %434 ], [ %456, %452 ]
  %460 = phi i64 [ %451, %446 ], [ 0, %434 ], [ 0, %452 ]
  store i64 %460, i64* %349, align 8
  br label %407

461:                                              ; preds = %423, %514
  %462 = phi %"class.std::__1::__tree_end_node"* [ %420, %423 ], [ %515, %514 ]
  %463 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %462, i64 4
  %464 = call %"class.dawn_native::BindGroupLayoutBase"* @_ZNK11dawn_native18PipelineLayoutBase18GetBindGroupLayoutEj(%"class.dawn_native::PipelineLayoutBase"* %343, i32 %417) #13
  %465 = bitcast %"class.std::__1::__tree_end_node"* %463 to i32*
  %466 = load i32, i32* %465, align 8
  %467 = call zeroext i1 @_ZNK11dawn_native19BindGroupLayoutBase10HasBindingEj(%"class.dawn_native::BindGroupLayoutBase"* %464, i32 %466) #13
  br i1 %467, label %468, label %486

468:                                              ; preds = %461
  %469 = bitcast %"class.std::__1::__tree_end_node"* %463 to %"struct.std::__1::pair.953"*
  %470 = getelementptr inbounds %"struct.std::__1::pair.953", %"struct.std::__1::pair.953"* %469, i64 0, i32 1, i32 2
  %471 = load i32, i32* %470, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %393) #13
  store i8 0, i8* %395, align 1
  store i8 0, i8* %393, align 8
  call void @_ZN11spirv_cross8Compiler8set_nameENS_7TypedIDILNS_5TypesE0EEERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.spirv_cross::Compiler"* nonnull %108, i32 %471, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %23) #13
  %472 = load i8, i8* %395, align 1
  %473 = icmp slt i8 %472, 0
  br i1 %473, label %474, label %476

474:                                              ; preds = %468
  %475 = load i8*, i8** %396, align 8
  call void @_ZdlPv(i8* %475) #14
  br label %476

476:                                              ; preds = %468, %474
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %393) #13
  %477 = call i32 @_ZNK11dawn_native19BindGroupLayoutBase15GetBindingIndexEj(%"class.dawn_native::BindGroupLayoutBase"* %464, i32 %466) #13
  %478 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %462, i64 18
  %479 = bitcast %"class.std::__1::__tree_end_node"* %478 to i32*
  %480 = load i32, i32* %479, align 8
  call void @_ZN11spirv_cross8Compiler16unset_decorationENS_7TypedIDILNS_5TypesE0EEEN3spv10DecorationE(%"class.spirv_cross::Compiler"* nonnull %108, i32 %480, i32 34) #13
  %481 = load i32, i32* %479, align 8
  %482 = zext i32 %477 to i64
  %483 = load i32*, i32** %424, align 8
  %484 = getelementptr inbounds i32, i32* %483, i64 %482
  %485 = load i32, i32* %484, align 4
  call void @_ZN11spirv_cross8Compiler14set_decorationENS_7TypedIDILNS_5TypesE0EEEN3spv10DecorationEj(%"class.spirv_cross::Compiler"* nonnull %108, i32 %481, i32 33, i32 %485) #13
  br label %486

486:                                              ; preds = %461, %476
  %487 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %462, i64 1, i32 0
  %488 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %487, align 8
  %489 = icmp eq %"class.std::__1::__tree_node_base"* %488, null
  br i1 %489, label %490, label %498

490:                                              ; preds = %486
  %491 = bitcast %"class.std::__1::__tree_end_node"* %462 to %"class.std::__1::__tree_node_base"*
  %492 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %462, i64 2
  %493 = bitcast %"class.std::__1::__tree_end_node"* %492 to %"class.std::__1::__tree_end_node"**
  %494 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %493, align 8
  %495 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %494, i64 0, i32 0
  %496 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %495, align 8
  %497 = icmp eq %"class.std::__1::__tree_node_base"* %496, %491
  br i1 %497, label %514, label %505

498:                                              ; preds = %486, %498
  %499 = phi %"class.std::__1::__tree_node_base"* [ %501, %498 ], [ %488, %486 ]
  %500 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %499, i64 0, i32 0, i32 0
  %501 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %500, align 8
  %502 = icmp eq %"class.std::__1::__tree_node_base"* %501, null
  br i1 %502, label %503, label %498

503:                                              ; preds = %498
  %504 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %499, i64 0, i32 0
  br label %514

505:                                              ; preds = %490, %505
  %506 = phi %"class.std::__1::__tree_end_node"** [ %509, %505 ], [ %493, %490 ]
  %507 = bitcast %"class.std::__1::__tree_end_node"** %506 to %"class.std::__1::__tree_node_base"**
  %508 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %507, align 8
  %509 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %508, i64 0, i32 2
  %510 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %509, align 8
  %511 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %510, i64 0, i32 0
  %512 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %511, align 8
  %513 = icmp eq %"class.std::__1::__tree_node_base"* %512, %508
  br i1 %513, label %514, label %505

514:                                              ; preds = %505, %490, %503
  %515 = phi %"class.std::__1::__tree_end_node"* [ %504, %503 ], [ %494, %490 ], [ %510, %505 ]
  %516 = icmp eq %"class.std::__1::__tree_end_node"* %515, %421
  br i1 %516, label %425, label %461
}

declare dereferenceable(12) %"struct.dawn_native::opengl::OpenGLVersion"* @_ZNK11dawn_native6opengl15OpenGLFunctions10GetVersionEv(%"struct.dawn_native::opengl::OpenGLFunctions"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK11dawn_native6opengl13OpenGLVersion9IsDesktopEv(%"struct.dawn_native::opengl::OpenGLVersion"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK11dawn_native6opengl13OpenGLVersion4IsESEv(%"struct.dawn_native::opengl::OpenGLVersion"*) local_unnamed_addr #2

declare i32 @_ZNK11dawn_native6opengl13OpenGLVersion8GetMajorEv(%"struct.dawn_native::opengl::OpenGLVersion"*) local_unnamed_addr #2

declare i32 @_ZNK11dawn_native6opengl13OpenGLVersion8GetMinorEv(%"struct.dawn_native::opengl::OpenGLVersion"*) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::vector.300"* @_ZNK11dawn_native16ShaderModuleBase8GetSpirvEv(%"class.dawn_native::ShaderModuleBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross12CompilerGLSLC2ENSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spirv_cross::CompilerGLSL"*, %"class.std::__1::vector.300"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::vector.300", align 16
  %4 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 0
  %5 = bitcast %"class.std::__1::vector.300"* %1 to <2 x i64>*
  %6 = load <2 x i64>, <2 x i64>* %5, align 8
  %7 = bitcast %"class.std::__1::vector.300"* %3 to <2 x i64>*
  store <2 x i64> %6, <2 x i64>* %7, align 16
  %8 = getelementptr inbounds %"class.std::__1::vector.300", %"class.std::__1::vector.300"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.300", %"class.std::__1::vector.300"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast i32** %11 to i64*
  store i64 %10, i64* %12, align 16
  %13 = bitcast %"class.std::__1::vector.300"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #13
  call void @_ZN11spirv_cross8CompilerC2ENSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spirv_cross::Compiler"* %4, %"class.std::__1::vector.300"* nonnull %3) #13
  %14 = getelementptr inbounds %"class.std::__1::vector.300", %"class.std::__1::vector.300"* %3, i64 0, i32 0, i32 0
  %15 = load i32*, i32** %14, align 16
  %16 = icmp eq i32* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.std::__1::vector.300", %"class.std::__1::vector.300"* %3, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = ptrtoint i32* %15 to i64
  store i64 %20, i64* %19, align 8
  %21 = bitcast i32* %15 to i8*
  call void @_ZdlPv(i8* %21) #14
  br label %22

22:                                               ; preds = %2, %17
  %23 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*] }, { [63 x i8*] }* @_ZTVN11spirv_cross12CompilerGLSLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 1
  %25 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 4, i32 2
  %26 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 4, i32 2, i32 2
  %27 = bitcast %"class.spirv_cross::SmallVector.809"* %25 to %"class.spirv_cross::AlignedBuffer.811"**
  %28 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 4, i32 2, i32 0, i32 1
  %29 = bitcast %"struct.spirv_cross::SPIRBlock"** %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 17, i1 false)
  store %"class.spirv_cross::AlignedBuffer.811"* %26, %"class.spirv_cross::AlignedBuffer.811"** %27, align 8
  %30 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 4, i32 0, i32 0
  %31 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 4, i32 1, i64 0
  %32 = bitcast i64* %28 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %32, align 8
  store i8* %31, i8** %30, align 8
  %33 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 4, i32 0, i32 1
  %34 = bitcast i64* %33 to <2 x i64>*
  store <2 x i64> <i64 0, i64 4096>, <2 x i64>* %34, align 8
  %35 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 5
  %36 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 7, i32 0
  %37 = bitcast %"class.spirv_cross::SmallVector.631"** %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false)
  store i32 450, i32* %36, align 4
  %38 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 7, i32 1
  %39 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 7, i32 6
  call void @llvm.memset.p0i8.i64(i8* align 4 %38, i8 0, i64 5, i1 false) #13
  store i8 1, i8* %39, align 1
  %40 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 7, i32 7
  store i8 0, i8* %40, align 2
  %41 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 7, i32 8
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 7, i32 9
  store i8 0, i8* %42, align 4
  %43 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 7, i32 10
  store i8 1, i8* %43, align 1
  %44 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 7, i32 11
  %45 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 7, i32 13, i32 2
  %46 = bitcast i8* %44 to i32*
  store i32 0, i32* %46, align 2
  store i8 1, i8* %45, align 1
  %47 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 7, i32 14, i32 0
  store i32 2, i32* %47, align 4
  %48 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 7, i32 14, i32 1
  store i32 3, i32* %48, align 4
  %49 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 9
  %50 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 9, i32 0, i32 3
  %51 = bitcast %"class.std::__1::__compressed_pair.83"* %50 to i32*
  %52 = bitcast %"class.std::__1::unordered_set"* %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %51, align 4
  %53 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 10
  %54 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 10, i32 0, i32 3
  %55 = bitcast %"class.std::__1::__compressed_pair.83"* %54 to i32*
  %56 = bitcast %"class.std::__1::unordered_set"* %53 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %55, align 4
  %57 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 11
  %58 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 11, i32 0, i32 3
  %59 = bitcast %"class.std::__1::__compressed_pair.83"* %58 to i32*
  %60 = bitcast %"class.std::__1::unordered_set"* %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %59, align 4
  %61 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 12
  %62 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 12, i32 0, i32 3
  %63 = bitcast %"class.std::__1::__compressed_pair.83"* %62 to i32*
  %64 = bitcast %"class.std::__1::unordered_set"* %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %63, align 4
  %65 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 13
  %66 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 13, i32 0, i32 3
  %67 = bitcast %"class.std::__1::__compressed_pair.83"* %66 to i32*
  %68 = bitcast %"class.std::__1::unordered_set"* %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %67, align 4
  %69 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 14
  %70 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 14, i32 0, i32 3
  %71 = bitcast %"class.std::__1::__compressed_pair.83"* %70 to i32*
  %72 = bitcast %"class.std::__1::unordered_set"* %69 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %71, align 4
  %73 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 15
  %74 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 15, i32 0, i32 3
  %75 = bitcast %"class.std::__1::__compressed_pair.83"* %74 to i32*
  %76 = bitcast %"class.std::__1::unordered_set"* %73 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %75, align 4
  %77 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 16
  %78 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 16, i32 0, i32 3
  %79 = bitcast %"class.std::__1::__compressed_pair.832"* %78 to i32*
  %80 = bitcast %"class.std::__1::unordered_map.812"* %77 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %79, align 4
  %81 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 17
  %82 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 17, i32 0, i32 3
  %83 = bitcast %"class.std::__1::__compressed_pair.805"* %82 to i32*
  %84 = bitcast %"class.std::__1::unordered_map.785"* %81 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %83, align 4
  %85 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 18
  store i8 0, i8* %85, align 8
  %86 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 20
  %87 = bitcast %"struct.spirv_cross::CompilerGLSL::BackendVariations"* %86 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  store i8 7, i8* %88, align 1
  %89 = bitcast %"struct.spirv_cross::CompilerGLSL::BackendVariations"* %86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %89, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i64 7, i1 false) #13
  %90 = getelementptr inbounds i8, i8* %89, i64 7
  store i8 0, i8* %90, align 1
  %91 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 20, i32 1
  %92 = bitcast %"class.std::__1::basic_string"* %91 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  store i8 6, i8* %93, align 1
  %94 = bitcast %"class.std::__1::basic_string"* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %94, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i64 6, i1 false) #13
  %95 = getelementptr inbounds i8, i8* %94, i64 6
  store i8 0, i8* %95, align 1
  %96 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 20, i32 2
  %97 = bitcast %"class.std::__1::basic_string"* %96 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  store i8 0, i8* %98, align 1
  %99 = bitcast %"class.std::__1::basic_string"* %96 to i8*
  store i8 0, i8* %99, align 1
  %100 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 20, i32 3
  store i8 0, i8* %100, align 8
  %101 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 20, i32 4
  store i8 1, i8* %101, align 1
  %102 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 20, i32 5
  store i8 1, i8* %102, align 2
  %103 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 20, i32 6
  store i8 0, i8* %103, align 1
  %104 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 20, i32 8
  %105 = bitcast i8** %104 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0)>, <2 x i8*>* %105, align 8
  %106 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 20, i32 10
  %107 = bitcast i8** %106 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0)>, <2 x i8*>* %107, align 8
  %108 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 20, i32 12
  %109 = bitcast i8** %108 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0)>, <2 x i8*>* %109, align 8
  %110 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 20, i32 14
  %111 = bitcast i8** %110 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0)>, <2 x i8*>* %111, align 8
  %112 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 20, i32 16
  %113 = bitcast i8** %112 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20, i64 0, i64 0)>, <2 x i8*>* %113, align 8
  %114 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 20, i32 18
  store i8 0, i8* %114, align 8
  %115 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 20, i32 19
  store i8 0, i8* %115, align 1
  %116 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 20, i32 20
  store i8 1, i8* %116, align 2
  %117 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 20, i32 21
  store i8 0, i8* %117, align 1
  %118 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 20, i32 22
  store i8 0, i8* %118, align 4
  %119 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 20, i32 23
  store i8 0, i8* %119, align 1
  %120 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 20, i32 24
  %121 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 20, i32 28
  %122 = bitcast i8* %120 to i32*
  store i32 16843009, i32* %122, align 2
  store i8 0, i8* %121, align 2
  %123 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 20, i32 29
  store i8 0, i8* %123, align 1
  %124 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 20, i32 30
  store i8 0, i8* %124, align 4
  %125 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 20, i32 31
  store i8 1, i8* %125, align 1
  %126 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 20, i32 32
  store i8 0, i8* %126, align 2
  %127 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 20, i32 33
  store i8 0, i8* %127, align 1
  %128 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 20, i32 34
  store i8 0, i8* %128, align 8
  %129 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 20, i32 35
  store i8 1, i8* %129, align 1
  %130 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 20, i32 36
  store i8 1, i8* %130, align 2
  %131 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 20, i32 37
  store i8 0, i8* %131, align 1
  %132 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 20, i32 38
  store i8 0, i8* %132, align 4
  %133 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 20, i32 39
  store i8 0, i8* %133, align 1
  %134 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 20, i32 40
  store i8 1, i8* %134, align 2
  %135 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 20, i32 41
  %136 = bitcast i8* %135 to i32*
  store i32 0, i32* %136, align 1
  %137 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 21
  store i32 0, i32* %137, align 8
  %138 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 23
  %139 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 23, i32 0, i32 3
  %140 = bitcast %"class.std::__1::__compressed_pair.560"* %139 to i32*
  %141 = bitcast %"class.std::__1::unordered_set.541"* %138 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %141, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %140, align 4
  %142 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 24
  %143 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 24, i32 0, i32 3
  %144 = bitcast %"class.std::__1::__compressed_pair.560"* %143 to i32*
  %145 = bitcast %"class.std::__1::unordered_set.541"* %142 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %145, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %144, align 4
  %146 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 25
  %147 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 25, i32 0, i32 3
  %148 = bitcast %"class.std::__1::__compressed_pair.560"* %147 to i32*
  %149 = bitcast %"class.std::__1::unordered_set.541"* %146 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %149, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %148, align 4
  %150 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 26
  %151 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 26, i32 0, i32 3
  %152 = bitcast %"class.std::__1::__compressed_pair.856"* %151 to i32*
  %153 = bitcast %"class.std::__1::unordered_map.836"* %150 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %153, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %152, align 4
  %154 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 27, i32 0
  store i32 0, i32* %154, align 4
  %155 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 29
  %156 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 29, i32 0, i32 3
  %157 = bitcast %"class.std::__1::__compressed_pair.880"* %156 to i32*
  %158 = bitcast %"class.std::__1::unordered_map.860"* %155 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %158, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %157, align 4
  %159 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 30
  %160 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 30, i32 2
  %161 = bitcast %"class.spirv_cross::SmallVector.631"* %159 to %"class.spirv_cross::AlignedBuffer.633"**
  %162 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 30, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.633"* %160, %"class.spirv_cross::AlignedBuffer.633"** %161, align 8
  %163 = bitcast i64* %162 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %163, align 8
  %164 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 31
  %165 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 31, i32 1
  %166 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 31, i32 2
  %167 = bitcast %"class.spirv_cross::SmallVector.631"* %164 to %"class.spirv_cross::AlignedBuffer.633"**
  %168 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 31, i32 0, i32 1
  store i64 0, i64* %168, align 8
  store %"class.spirv_cross::AlignedBuffer.633"* %166, %"class.spirv_cross::AlignedBuffer.633"** %167, align 8
  store i64 8, i64* %165, align 8
  %169 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 32
  %170 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 32, i32 0, i32 3
  %171 = bitcast %"class.std::__1::__compressed_pair.880"* %170 to i32*
  %172 = bitcast %"class.std::__1::unordered_map.860"* %169 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %172, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %171, align 4
  %173 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 33
  %174 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 33, i32 2
  %175 = bitcast %"class.spirv_cross::SmallVector.758"* %173 to %"class.spirv_cross::AlignedBuffer.760"**
  %176 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 33, i32 0, i32 1
  store %"class.spirv_cross::AlignedBuffer.760"* %174, %"class.spirv_cross::AlignedBuffer.760"** %175, align 8
  %177 = bitcast i64* %176 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8>, <2 x i64>* %177, align 8
  %178 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 34
  %179 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 43
  %180 = bitcast i32* %178 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %180, i8 0, i64 104, i1 false)
  store i8 46, i8* %179, align 8
  %181 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 45
  %182 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 45, i32 0, i32 3
  %183 = bitcast %"class.std::__1::__compressed_pair.926"* %182 to i32*
  %184 = bitcast %"class.std::__1::unordered_set.907"* %181 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %184, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %183, align 4
  %185 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 46
  %186 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 46, i32 0, i32 3
  %187 = bitcast %"class.std::__1::__compressed_pair.560"* %186 to i32*
  %188 = bitcast %"class.std::__1::unordered_set.541"* %185 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %188, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %187, align 4
  call void @_ZN11spirv_cross12CompilerGLSL4initEv(%"class.spirv_cross::CompilerGLSL"* %0) #13
  ret void
}

declare void @_ZN11spirv_cross8Compiler15set_entry_pointERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN3spv14ExecutionModelE(%"class.spirv_cross::Compiler"*, %"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #2

declare i32 @_ZN11dawn_native27ShaderStageToExecutionModelENS_17SingleShaderStageE(i32) local_unnamed_addr #2

declare i32 @_ZN11spirv_cross8Compiler39build_dummy_sampler_for_combined_imagesEv(%"class.spirv_cross::Compiler"*) local_unnamed_addr #2

declare void @_ZN11spirv_cross8Compiler29build_combined_image_samplersEv(%"class.spirv_cross::Compiler"*) local_unnamed_addr #2

declare i32 @_ZNK11spirv_cross8Compiler14get_decorationENS_7TypedIDILNS_5TypesE0EEEN3spv10DecorationE(%"class.spirv_cross::Compiler"*, i32, i32) local_unnamed_addr #2

declare void @_ZN11spirv_cross8Compiler8set_nameENS_7TypedIDILNS_5TypesE0EEERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.spirv_cross::Compiler"*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare dereferenceable(144) %"struct.dawn_native::EntryPointMetadata"* @_ZNK11dawn_native16ShaderModuleBase13GetEntryPointERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.dawn_native::ShaderModuleBase"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare dereferenceable(96) %"class.ityp::array.583"* @_ZNK11dawn_native6opengl14PipelineLayout19GetBindingIndexInfoEv(%"class.dawn_native::opengl::PipelineLayout"*) local_unnamed_addr #2

declare dereferenceable(8) %"class.ityp::bitset"* @_ZNK11dawn_native18PipelineLayoutBase23GetBindGroupLayoutsMaskEv(%"class.dawn_native::PipelineLayoutBase"*) local_unnamed_addr #2

declare %"class.dawn_native::BindGroupLayoutBase"* @_ZNK11dawn_native18PipelineLayoutBase18GetBindGroupLayoutEj(%"class.dawn_native::PipelineLayoutBase"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK11dawn_native19BindGroupLayoutBase10HasBindingEj(%"class.dawn_native::BindGroupLayoutBase"*, i32) local_unnamed_addr #2

declare i32 @_ZNK11dawn_native19BindGroupLayoutBase15GetBindingIndexEj(%"class.dawn_native::BindGroupLayoutBase"*, i32) local_unnamed_addr #2

declare void @_ZN11spirv_cross8Compiler16unset_decorationENS_7TypedIDILNS_5TypesE0EEEN3spv10DecorationE(%"class.spirv_cross::Compiler"*, i32, i32) local_unnamed_addr #2

declare void @_ZN11spirv_cross8Compiler14set_decorationENS_7TypedIDILNS_5TypesE0EEEN3spv10DecorationEj(%"class.spirv_cross::Compiler"*, i32, i32, i32) local_unnamed_addr #2

declare void @_ZN11spirv_cross12CompilerGLSL7compileEv(%"class.std::__1::basic_string"* sret, %"class.spirv_cross::CompilerGLSL"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross12CompilerGLSLD2Ev(%"class.spirv_cross::CompilerGLSL"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*] }, { [63 x i8*] }* @_ZTVN11spirv_cross12CompilerGLSLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 46, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.546"*, %"struct.std::__1::__hash_node_base.546"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.546"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base.546"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.546", %"struct.std::__1::__hash_node_base.546"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.546"*, %"struct.std::__1::__hash_node_base.546"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base.546"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  %11 = icmp eq %"struct.std::__1::__hash_node_base.546"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 46, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.546"**, %"struct.std::__1::__hash_node_base.546"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.546"** null, %"struct.std::__1::__hash_node_base.546"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.546"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base.546"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #14
  br label %18

18:                                               ; preds = %12, %16
  %19 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 45, i32 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base.912"*, %"struct.std::__1::__hash_node_base.912"** %19, align 8
  %21 = icmp eq %"struct.std::__1::__hash_node_base.912"* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %18, %22
  %23 = phi %"struct.std::__1::__hash_node_base.912"* [ %25, %22 ], [ %20, %18 ]
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.912", %"struct.std::__1::__hash_node_base.912"* %23, i64 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base.912"*, %"struct.std::__1::__hash_node_base.912"** %24, align 8
  %26 = bitcast %"struct.std::__1::__hash_node_base.912"* %23 to i8*
  tail call void @_ZdlPv(i8* %26) #14
  %27 = icmp eq %"struct.std::__1::__hash_node_base.912"* %25, null
  br i1 %27, label %28, label %22

28:                                               ; preds = %22, %18
  %29 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 45, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.912"**, %"struct.std::__1::__hash_node_base.912"*** %29, align 8
  store %"struct.std::__1::__hash_node_base.912"** null, %"struct.std::__1::__hash_node_base.912"*** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.912"** %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = bitcast %"struct.std::__1::__hash_node_base.912"** %30 to i8*
  tail call void @_ZdlPv(i8* %33) #14
  br label %34

34:                                               ; preds = %28, %32
  %35 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 42, i32 0, i32 0
  %36 = load %"struct.std::__1::pair.901"*, %"struct.std::__1::pair.901"** %35, align 8
  %37 = icmp eq %"struct.std::__1::pair.901"* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %34
  %39 = ptrtoint %"struct.std::__1::pair.901"* %36 to i64
  %40 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 42, i32 0, i32 1
  %41 = bitcast %"struct.std::__1::pair.901"** %40 to i64*
  store i64 %39, i64* %41, align 8
  %42 = bitcast %"struct.std::__1::pair.901"* %36 to i8*
  tail call void @_ZdlPv(i8* %42) #14
  br label %43

43:                                               ; preds = %34, %38
  %44 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 41, i32 0, i32 0
  %45 = load %"struct.std::__1::pair.893"*, %"struct.std::__1::pair.893"** %44, align 8
  %46 = icmp eq %"struct.std::__1::pair.893"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = ptrtoint %"struct.std::__1::pair.893"* %45 to i64
  %49 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 41, i32 0, i32 1
  %50 = bitcast %"struct.std::__1::pair.893"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = bitcast %"struct.std::__1::pair.893"* %45 to i8*
  tail call void @_ZdlPv(i8* %51) #14
  br label %52

52:                                               ; preds = %43, %47
  %53 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 40, i32 0, i32 0
  %54 = load %"struct.spirv_cross::PlsRemap"*, %"struct.spirv_cross::PlsRemap"** %53, align 8
  %55 = icmp eq %"struct.spirv_cross::PlsRemap"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = ptrtoint %"struct.spirv_cross::PlsRemap"* %54 to i64
  %58 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 40, i32 0, i32 1
  %59 = bitcast %"struct.spirv_cross::PlsRemap"** %58 to i64*
  store i64 %57, i64* %59, align 8
  %60 = bitcast %"struct.spirv_cross::PlsRemap"* %54 to i8*
  tail call void @_ZdlPv(i8* %60) #14
  br label %61

61:                                               ; preds = %52, %56
  %62 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 39, i32 0, i32 0
  %63 = load %"struct.spirv_cross::PlsRemap"*, %"struct.spirv_cross::PlsRemap"** %62, align 8
  %64 = icmp eq %"struct.spirv_cross::PlsRemap"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %61
  %66 = ptrtoint %"struct.spirv_cross::PlsRemap"* %63 to i64
  %67 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 39, i32 0, i32 1
  %68 = bitcast %"struct.spirv_cross::PlsRemap"** %67 to i64*
  store i64 %66, i64* %68, align 8
  %69 = bitcast %"struct.spirv_cross::PlsRemap"* %63 to i8*
  tail call void @_ZdlPv(i8* %69) #14
  br label %70

70:                                               ; preds = %61, %65
  %71 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 33, i32 0, i32 1
  store i64 0, i64* %71, align 8
  %72 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 33, i32 0, i32 0
  %73 = load %"class.spirv_cross::TypedID.695"*, %"class.spirv_cross::TypedID.695"** %72, align 8
  %74 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 33, i32 2
  %75 = bitcast %"class.spirv_cross::AlignedBuffer.760"* %74 to %"class.spirv_cross::TypedID.695"*
  %76 = icmp eq %"class.spirv_cross::TypedID.695"* %73, %75
  br i1 %76, label %79, label %77

77:                                               ; preds = %70
  %78 = bitcast %"class.spirv_cross::TypedID.695"* %73 to i8*
  tail call void @free(i8* %78) #13
  br label %79

79:                                               ; preds = %70, %77
  %80 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 32, i32 0, i32 1, i32 0, i32 0, i32 0
  %81 = load %"struct.std::__1::__hash_node_base.865"*, %"struct.std::__1::__hash_node_base.865"** %80, align 8
  %82 = icmp eq %"struct.std::__1::__hash_node_base.865"* %81, null
  br i1 %82, label %89, label %83

83:                                               ; preds = %79, %83
  %84 = phi %"struct.std::__1::__hash_node_base.865"* [ %86, %83 ], [ %81, %79 ]
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node_base.865", %"struct.std::__1::__hash_node_base.865"* %84, i64 0, i32 0
  %86 = load %"struct.std::__1::__hash_node_base.865"*, %"struct.std::__1::__hash_node_base.865"** %85, align 8
  %87 = bitcast %"struct.std::__1::__hash_node_base.865"* %84 to i8*
  tail call void @_ZdlPv(i8* %87) #14
  %88 = icmp eq %"struct.std::__1::__hash_node_base.865"* %86, null
  br i1 %88, label %89, label %83

89:                                               ; preds = %83, %79
  %90 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 32, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load %"struct.std::__1::__hash_node_base.865"**, %"struct.std::__1::__hash_node_base.865"*** %90, align 8
  store %"struct.std::__1::__hash_node_base.865"** null, %"struct.std::__1::__hash_node_base.865"*** %90, align 8
  %92 = icmp eq %"struct.std::__1::__hash_node_base.865"** %91, null
  br i1 %92, label %95, label %93

93:                                               ; preds = %89
  %94 = bitcast %"struct.std::__1::__hash_node_base.865"** %91 to i8*
  tail call void @_ZdlPv(i8* %94) #14
  br label %95

95:                                               ; preds = %89, %93
  %96 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 31
  %97 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 31, i32 0, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %119, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.spirv_cross::SmallVector.631", %"class.spirv_cross::SmallVector.631"* %96, i64 0, i32 0, i32 0
  br label %102

102:                                              ; preds = %115, %100
  %103 = phi i64 [ %98, %100 ], [ %116, %115 ]
  %104 = phi i64 [ 0, %100 ], [ %117, %115 ]
  %105 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %101, align 8
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %105, i64 %104
  %107 = bitcast %"class.std::__1::basic_string"* %106 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %115

111:                                              ; preds = %102
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %106, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  tail call void @_ZdlPv(i8* %113) #14
  %114 = load i64, i64* %97, align 8
  br label %115

115:                                              ; preds = %111, %102
  %116 = phi i64 [ %103, %102 ], [ %114, %111 ]
  %117 = add nuw i64 %104, 1
  %118 = icmp ult i64 %117, %116
  br i1 %118, label %102, label %119

119:                                              ; preds = %115, %95
  store i64 0, i64* %97, align 8
  %120 = getelementptr inbounds %"class.spirv_cross::SmallVector.631", %"class.spirv_cross::SmallVector.631"* %96, i64 0, i32 0, i32 0
  %121 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %120, align 8
  %122 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 31, i32 2
  %123 = bitcast %"class.spirv_cross::AlignedBuffer.633"* %122 to %"class.std::__1::basic_string"*
  %124 = icmp eq %"class.std::__1::basic_string"* %121, %123
  br i1 %124, label %127, label %125

125:                                              ; preds = %119
  %126 = bitcast %"class.std::__1::basic_string"* %121 to i8*
  tail call void @free(i8* %126) #13
  br label %127

127:                                              ; preds = %119, %125
  %128 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 30
  %129 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 30, i32 0, i32 1
  %130 = load i64, i64* %129, align 8
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %151, label %132

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.spirv_cross::SmallVector.631", %"class.spirv_cross::SmallVector.631"* %128, i64 0, i32 0, i32 0
  br label %134

134:                                              ; preds = %147, %132
  %135 = phi i64 [ %130, %132 ], [ %148, %147 ]
  %136 = phi i64 [ 0, %132 ], [ %149, %147 ]
  %137 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %133, align 8
  %138 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %137, i64 %136
  %139 = bitcast %"class.std::__1::basic_string"* %138 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %140 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %139, i64 0, i32 1, i32 0
  %141 = load i8, i8* %140, align 1
  %142 = icmp slt i8 %141, 0
  br i1 %142, label %143, label %147

143:                                              ; preds = %134
  %144 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %138, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load i8*, i8** %144, align 8
  tail call void @_ZdlPv(i8* %145) #14
  %146 = load i64, i64* %129, align 8
  br label %147

147:                                              ; preds = %143, %134
  %148 = phi i64 [ %135, %134 ], [ %146, %143 ]
  %149 = add nuw i64 %136, 1
  %150 = icmp ult i64 %149, %148
  br i1 %150, label %134, label %151

151:                                              ; preds = %147, %127
  store i64 0, i64* %129, align 8
  %152 = getelementptr inbounds %"class.spirv_cross::SmallVector.631", %"class.spirv_cross::SmallVector.631"* %128, i64 0, i32 0, i32 0
  %153 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %152, align 8
  %154 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 30, i32 2
  %155 = bitcast %"class.spirv_cross::AlignedBuffer.633"* %154 to %"class.std::__1::basic_string"*
  %156 = icmp eq %"class.std::__1::basic_string"* %153, %155
  br i1 %156, label %159, label %157

157:                                              ; preds = %151
  %158 = bitcast %"class.std::__1::basic_string"* %153 to i8*
  tail call void @free(i8* %158) #13
  br label %159

159:                                              ; preds = %151, %157
  %160 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 29, i32 0, i32 1, i32 0, i32 0, i32 0
  %161 = load %"struct.std::__1::__hash_node_base.865"*, %"struct.std::__1::__hash_node_base.865"** %160, align 8
  %162 = icmp eq %"struct.std::__1::__hash_node_base.865"* %161, null
  br i1 %162, label %169, label %163

163:                                              ; preds = %159, %163
  %164 = phi %"struct.std::__1::__hash_node_base.865"* [ %166, %163 ], [ %161, %159 ]
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base.865", %"struct.std::__1::__hash_node_base.865"* %164, i64 0, i32 0
  %166 = load %"struct.std::__1::__hash_node_base.865"*, %"struct.std::__1::__hash_node_base.865"** %165, align 8
  %167 = bitcast %"struct.std::__1::__hash_node_base.865"* %164 to i8*
  tail call void @_ZdlPv(i8* %167) #14
  %168 = icmp eq %"struct.std::__1::__hash_node_base.865"* %166, null
  br i1 %168, label %169, label %163

169:                                              ; preds = %163, %159
  %170 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 29, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load %"struct.std::__1::__hash_node_base.865"**, %"struct.std::__1::__hash_node_base.865"*** %170, align 8
  store %"struct.std::__1::__hash_node_base.865"** null, %"struct.std::__1::__hash_node_base.865"*** %170, align 8
  %172 = icmp eq %"struct.std::__1::__hash_node_base.865"** %171, null
  br i1 %172, label %175, label %173

173:                                              ; preds = %169
  %174 = bitcast %"struct.std::__1::__hash_node_base.865"** %171 to i8*
  tail call void @_ZdlPv(i8* %174) #14
  br label %175

175:                                              ; preds = %169, %173
  %176 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 26, i32 0, i32 1, i32 0, i32 0, i32 0
  %177 = load %"struct.std::__1::__hash_node_base.841"*, %"struct.std::__1::__hash_node_base.841"** %176, align 8
  %178 = icmp eq %"struct.std::__1::__hash_node_base.841"* %177, null
  br i1 %178, label %185, label %179

179:                                              ; preds = %175, %179
  %180 = phi %"struct.std::__1::__hash_node_base.841"* [ %182, %179 ], [ %177, %175 ]
  %181 = getelementptr inbounds %"struct.std::__1::__hash_node_base.841", %"struct.std::__1::__hash_node_base.841"* %180, i64 0, i32 0
  %182 = load %"struct.std::__1::__hash_node_base.841"*, %"struct.std::__1::__hash_node_base.841"** %181, align 8
  %183 = bitcast %"struct.std::__1::__hash_node_base.841"* %180 to i8*
  tail call void @_ZdlPv(i8* %183) #14
  %184 = icmp eq %"struct.std::__1::__hash_node_base.841"* %182, null
  br i1 %184, label %185, label %179

185:                                              ; preds = %179, %175
  %186 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 26, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = load %"struct.std::__1::__hash_node_base.841"**, %"struct.std::__1::__hash_node_base.841"*** %186, align 8
  store %"struct.std::__1::__hash_node_base.841"** null, %"struct.std::__1::__hash_node_base.841"*** %186, align 8
  %188 = icmp eq %"struct.std::__1::__hash_node_base.841"** %187, null
  br i1 %188, label %191, label %189

189:                                              ; preds = %185
  %190 = bitcast %"struct.std::__1::__hash_node_base.841"** %187 to i8*
  tail call void @_ZdlPv(i8* %190) #14
  br label %191

191:                                              ; preds = %185, %189
  %192 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 25, i32 0, i32 1, i32 0, i32 0, i32 0
  %193 = load %"struct.std::__1::__hash_node_base.546"*, %"struct.std::__1::__hash_node_base.546"** %192, align 8
  %194 = icmp eq %"struct.std::__1::__hash_node_base.546"* %193, null
  br i1 %194, label %201, label %195

195:                                              ; preds = %191, %195
  %196 = phi %"struct.std::__1::__hash_node_base.546"* [ %198, %195 ], [ %193, %191 ]
  %197 = getelementptr inbounds %"struct.std::__1::__hash_node_base.546", %"struct.std::__1::__hash_node_base.546"* %196, i64 0, i32 0
  %198 = load %"struct.std::__1::__hash_node_base.546"*, %"struct.std::__1::__hash_node_base.546"** %197, align 8
  %199 = bitcast %"struct.std::__1::__hash_node_base.546"* %196 to i8*
  tail call void @_ZdlPv(i8* %199) #14
  %200 = icmp eq %"struct.std::__1::__hash_node_base.546"* %198, null
  br i1 %200, label %201, label %195

201:                                              ; preds = %195, %191
  %202 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 25, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load %"struct.std::__1::__hash_node_base.546"**, %"struct.std::__1::__hash_node_base.546"*** %202, align 8
  store %"struct.std::__1::__hash_node_base.546"** null, %"struct.std::__1::__hash_node_base.546"*** %202, align 8
  %204 = icmp eq %"struct.std::__1::__hash_node_base.546"** %203, null
  br i1 %204, label %207, label %205

205:                                              ; preds = %201
  %206 = bitcast %"struct.std::__1::__hash_node_base.546"** %203 to i8*
  tail call void @_ZdlPv(i8* %206) #14
  br label %207

207:                                              ; preds = %201, %205
  %208 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 24, i32 0, i32 1, i32 0, i32 0, i32 0
  %209 = load %"struct.std::__1::__hash_node_base.546"*, %"struct.std::__1::__hash_node_base.546"** %208, align 8
  %210 = icmp eq %"struct.std::__1::__hash_node_base.546"* %209, null
  br i1 %210, label %217, label %211

211:                                              ; preds = %207, %211
  %212 = phi %"struct.std::__1::__hash_node_base.546"* [ %214, %211 ], [ %209, %207 ]
  %213 = getelementptr inbounds %"struct.std::__1::__hash_node_base.546", %"struct.std::__1::__hash_node_base.546"* %212, i64 0, i32 0
  %214 = load %"struct.std::__1::__hash_node_base.546"*, %"struct.std::__1::__hash_node_base.546"** %213, align 8
  %215 = bitcast %"struct.std::__1::__hash_node_base.546"* %212 to i8*
  tail call void @_ZdlPv(i8* %215) #14
  %216 = icmp eq %"struct.std::__1::__hash_node_base.546"* %214, null
  br i1 %216, label %217, label %211

217:                                              ; preds = %211, %207
  %218 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 24, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = load %"struct.std::__1::__hash_node_base.546"**, %"struct.std::__1::__hash_node_base.546"*** %218, align 8
  store %"struct.std::__1::__hash_node_base.546"** null, %"struct.std::__1::__hash_node_base.546"*** %218, align 8
  %220 = icmp eq %"struct.std::__1::__hash_node_base.546"** %219, null
  br i1 %220, label %223, label %221

221:                                              ; preds = %217
  %222 = bitcast %"struct.std::__1::__hash_node_base.546"** %219 to i8*
  tail call void @_ZdlPv(i8* %222) #14
  br label %223

223:                                              ; preds = %217, %221
  %224 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 23, i32 0, i32 1, i32 0, i32 0, i32 0
  %225 = load %"struct.std::__1::__hash_node_base.546"*, %"struct.std::__1::__hash_node_base.546"** %224, align 8
  %226 = icmp eq %"struct.std::__1::__hash_node_base.546"* %225, null
  br i1 %226, label %233, label %227

227:                                              ; preds = %223, %227
  %228 = phi %"struct.std::__1::__hash_node_base.546"* [ %230, %227 ], [ %225, %223 ]
  %229 = getelementptr inbounds %"struct.std::__1::__hash_node_base.546", %"struct.std::__1::__hash_node_base.546"* %228, i64 0, i32 0
  %230 = load %"struct.std::__1::__hash_node_base.546"*, %"struct.std::__1::__hash_node_base.546"** %229, align 8
  %231 = bitcast %"struct.std::__1::__hash_node_base.546"* %228 to i8*
  tail call void @_ZdlPv(i8* %231) #14
  %232 = icmp eq %"struct.std::__1::__hash_node_base.546"* %230, null
  br i1 %232, label %233, label %227

233:                                              ; preds = %227, %223
  %234 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 23, i32 0, i32 0, i32 0, i32 0, i32 0
  %235 = load %"struct.std::__1::__hash_node_base.546"**, %"struct.std::__1::__hash_node_base.546"*** %234, align 8
  store %"struct.std::__1::__hash_node_base.546"** null, %"struct.std::__1::__hash_node_base.546"*** %234, align 8
  %236 = icmp eq %"struct.std::__1::__hash_node_base.546"** %235, null
  br i1 %236, label %239, label %237

237:                                              ; preds = %233
  %238 = bitcast %"struct.std::__1::__hash_node_base.546"** %235 to i8*
  tail call void @_ZdlPv(i8* %238) #14
  br label %239

239:                                              ; preds = %233, %237
  %240 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 20
  %241 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 20, i32 2
  %242 = bitcast %"class.std::__1::basic_string"* %241 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %243 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %242, i64 0, i32 1, i32 0
  %244 = load i8, i8* %243, align 1
  %245 = icmp slt i8 %244, 0
  br i1 %245, label %246, label %249

246:                                              ; preds = %239
  %247 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %241, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %248 = load i8*, i8** %247, align 8
  tail call void @_ZdlPv(i8* %248) #14
  br label %249

249:                                              ; preds = %246, %239
  %250 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 20, i32 1
  %251 = bitcast %"class.std::__1::basic_string"* %250 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %252 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %251, i64 0, i32 1, i32 0
  %253 = load i8, i8* %252, align 1
  %254 = icmp slt i8 %253, 0
  br i1 %254, label %255, label %258

255:                                              ; preds = %249
  %256 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %250, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %257 = load i8*, i8** %256, align 8
  tail call void @_ZdlPv(i8* %257) #14
  br label %258

258:                                              ; preds = %255, %249
  %259 = bitcast %"struct.spirv_cross::CompilerGLSL::BackendVariations"* %240 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %260 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %259, i64 0, i32 1, i32 0
  %261 = load i8, i8* %260, align 1
  %262 = icmp slt i8 %261, 0
  br i1 %262, label %263, label %266

263:                                              ; preds = %258
  %264 = getelementptr inbounds %"struct.spirv_cross::CompilerGLSL::BackendVariations", %"struct.spirv_cross::CompilerGLSL::BackendVariations"* %240, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %265 = load i8*, i8** %264, align 8
  tail call void @_ZdlPv(i8* %265) #14
  br label %266

266:                                              ; preds = %258, %263
  %267 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 17, i32 0, i32 1, i32 0, i32 0, i32 0
  %268 = load %"struct.std::__1::__hash_node_base.790"*, %"struct.std::__1::__hash_node_base.790"** %267, align 8
  %269 = icmp eq %"struct.std::__1::__hash_node_base.790"* %268, null
  br i1 %269, label %285, label %270

270:                                              ; preds = %266, %282
  %271 = phi %"struct.std::__1::__hash_node_base.790"* [ %273, %282 ], [ %268, %266 ]
  %272 = getelementptr inbounds %"struct.std::__1::__hash_node_base.790", %"struct.std::__1::__hash_node_base.790"* %271, i64 0, i32 0
  %273 = load %"struct.std::__1::__hash_node_base.790"*, %"struct.std::__1::__hash_node_base.790"** %272, align 8
  %274 = getelementptr inbounds %"struct.std::__1::__hash_node_base.790", %"struct.std::__1::__hash_node_base.790"* %271, i64 3
  %275 = bitcast %"struct.std::__1::__hash_node_base.790"* %274 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %276 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %275, i64 0, i32 1, i32 0
  %277 = load i8, i8* %276, align 1
  %278 = icmp slt i8 %277, 0
  br i1 %278, label %279, label %282

279:                                              ; preds = %270
  %280 = bitcast %"struct.std::__1::__hash_node_base.790"* %274 to i8**
  %281 = load i8*, i8** %280, align 8
  tail call void @_ZdlPv(i8* %281) #14
  br label %282

282:                                              ; preds = %279, %270
  %283 = bitcast %"struct.std::__1::__hash_node_base.790"* %271 to i8*
  tail call void @_ZdlPv(i8* %283) #14
  %284 = icmp eq %"struct.std::__1::__hash_node_base.790"* %273, null
  br i1 %284, label %285, label %270

285:                                              ; preds = %282, %266
  %286 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0, i32 0
  %287 = load %"struct.std::__1::__hash_node_base.790"**, %"struct.std::__1::__hash_node_base.790"*** %286, align 8
  store %"struct.std::__1::__hash_node_base.790"** null, %"struct.std::__1::__hash_node_base.790"*** %286, align 8
  %288 = icmp eq %"struct.std::__1::__hash_node_base.790"** %287, null
  br i1 %288, label %291, label %289

289:                                              ; preds = %285
  %290 = bitcast %"struct.std::__1::__hash_node_base.790"** %287 to i8*
  tail call void @_ZdlPv(i8* %290) #14
  br label %291

291:                                              ; preds = %285, %289
  %292 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0, i32 0
  %293 = load %"struct.std::__1::__hash_node_base.817"*, %"struct.std::__1::__hash_node_base.817"** %292, align 8
  %294 = icmp eq %"struct.std::__1::__hash_node_base.817"* %293, null
  br i1 %294, label %328, label %295

295:                                              ; preds = %291, %325
  %296 = phi %"struct.std::__1::__hash_node_base.817"* [ %298, %325 ], [ %293, %291 ]
  %297 = getelementptr inbounds %"struct.std::__1::__hash_node_base.817", %"struct.std::__1::__hash_node_base.817"* %296, i64 0, i32 0
  %298 = load %"struct.std::__1::__hash_node_base.817"*, %"struct.std::__1::__hash_node_base.817"** %297, align 8
  %299 = getelementptr inbounds %"struct.std::__1::__hash_node_base.817", %"struct.std::__1::__hash_node_base.817"* %296, i64 2
  %300 = getelementptr inbounds %"struct.std::__1::__hash_node_base.817", %"struct.std::__1::__hash_node_base.817"* %296, i64 7
  %301 = bitcast %"struct.std::__1::__hash_node_base.817"* %300 to %"struct.std::__1::__hash_node_base.991"**
  %302 = load %"struct.std::__1::__hash_node_base.991"*, %"struct.std::__1::__hash_node_base.991"** %301, align 8
  %303 = icmp eq %"struct.std::__1::__hash_node_base.991"* %302, null
  br i1 %303, label %310, label %304

304:                                              ; preds = %295, %304
  %305 = phi %"struct.std::__1::__hash_node_base.991"* [ %307, %304 ], [ %302, %295 ]
  %306 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %305, i64 0, i32 0
  %307 = load %"struct.std::__1::__hash_node_base.991"*, %"struct.std::__1::__hash_node_base.991"** %306, align 8
  %308 = bitcast %"struct.std::__1::__hash_node_base.991"* %305 to i8*
  tail call void @_ZdlPv(i8* %308) #14
  %309 = icmp eq %"struct.std::__1::__hash_node_base.991"* %307, null
  br i1 %309, label %310, label %304

310:                                              ; preds = %304, %295
  %311 = getelementptr inbounds %"struct.std::__1::__hash_node_base.817", %"struct.std::__1::__hash_node_base.817"* %296, i64 5
  %312 = bitcast %"struct.std::__1::__hash_node_base.817"* %311 to %"struct.std::__1::__hash_node_base.991"***
  %313 = load %"struct.std::__1::__hash_node_base.991"**, %"struct.std::__1::__hash_node_base.991"*** %312, align 8
  store %"struct.std::__1::__hash_node_base.991"** null, %"struct.std::__1::__hash_node_base.991"*** %312, align 8
  %314 = icmp eq %"struct.std::__1::__hash_node_base.991"** %313, null
  br i1 %314, label %317, label %315

315:                                              ; preds = %310
  %316 = bitcast %"struct.std::__1::__hash_node_base.991"** %313 to i8*
  tail call void @_ZdlPv(i8* %316) #14
  br label %317

317:                                              ; preds = %315, %310
  %318 = bitcast %"struct.std::__1::__hash_node_base.817"* %299 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %319 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %318, i64 0, i32 1, i32 0
  %320 = load i8, i8* %319, align 1
  %321 = icmp slt i8 %320, 0
  br i1 %321, label %322, label %325

322:                                              ; preds = %317
  %323 = bitcast %"struct.std::__1::__hash_node_base.817"* %299 to i8**
  %324 = load i8*, i8** %323, align 8
  tail call void @_ZdlPv(i8* %324) #14
  br label %325

325:                                              ; preds = %322, %317
  %326 = bitcast %"struct.std::__1::__hash_node_base.817"* %296 to i8*
  tail call void @_ZdlPv(i8* %326) #14
  %327 = icmp eq %"struct.std::__1::__hash_node_base.817"* %298, null
  br i1 %327, label %328, label %295

328:                                              ; preds = %325, %291
  %329 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0, i32 0
  %330 = load %"struct.std::__1::__hash_node_base.817"**, %"struct.std::__1::__hash_node_base.817"*** %329, align 8
  store %"struct.std::__1::__hash_node_base.817"** null, %"struct.std::__1::__hash_node_base.817"*** %329, align 8
  %331 = icmp eq %"struct.std::__1::__hash_node_base.817"** %330, null
  br i1 %331, label %334, label %332

332:                                              ; preds = %328
  %333 = bitcast %"struct.std::__1::__hash_node_base.817"** %330 to i8*
  tail call void @_ZdlPv(i8* %333) #14
  br label %334

334:                                              ; preds = %328, %332
  %335 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 15, i32 0, i32 1, i32 0, i32 0, i32 0
  %336 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %335, align 8
  %337 = icmp eq %"struct.std::__1::__hash_node_base"* %336, null
  br i1 %337, label %353, label %338

338:                                              ; preds = %334, %350
  %339 = phi %"struct.std::__1::__hash_node_base"* [ %341, %350 ], [ %336, %334 ]
  %340 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %339, i64 0, i32 0
  %341 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %340, align 8
  %342 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %339, i64 2
  %343 = bitcast %"struct.std::__1::__hash_node_base"* %342 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %344 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %343, i64 0, i32 1, i32 0
  %345 = load i8, i8* %344, align 1
  %346 = icmp slt i8 %345, 0
  br i1 %346, label %347, label %350

347:                                              ; preds = %338
  %348 = bitcast %"struct.std::__1::__hash_node_base"* %342 to i8**
  %349 = load i8*, i8** %348, align 8
  tail call void @_ZdlPv(i8* %349) #14
  br label %350

350:                                              ; preds = %347, %338
  %351 = bitcast %"struct.std::__1::__hash_node_base"* %339 to i8*
  tail call void @_ZdlPv(i8* %351) #14
  %352 = icmp eq %"struct.std::__1::__hash_node_base"* %341, null
  br i1 %352, label %353, label %338

353:                                              ; preds = %350, %334
  %354 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0
  %355 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %354, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %354, align 8
  %356 = icmp eq %"struct.std::__1::__hash_node_base"** %355, null
  br i1 %356, label %359, label %357

357:                                              ; preds = %353
  %358 = bitcast %"struct.std::__1::__hash_node_base"** %355 to i8*
  tail call void @_ZdlPv(i8* %358) #14
  br label %359

359:                                              ; preds = %353, %357
  %360 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 14, i32 0, i32 1, i32 0, i32 0, i32 0
  %361 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %360, align 8
  %362 = icmp eq %"struct.std::__1::__hash_node_base"* %361, null
  br i1 %362, label %378, label %363

363:                                              ; preds = %359, %375
  %364 = phi %"struct.std::__1::__hash_node_base"* [ %366, %375 ], [ %361, %359 ]
  %365 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %364, i64 0, i32 0
  %366 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %365, align 8
  %367 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %364, i64 2
  %368 = bitcast %"struct.std::__1::__hash_node_base"* %367 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %369 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %368, i64 0, i32 1, i32 0
  %370 = load i8, i8* %369, align 1
  %371 = icmp slt i8 %370, 0
  br i1 %371, label %372, label %375

372:                                              ; preds = %363
  %373 = bitcast %"struct.std::__1::__hash_node_base"* %367 to i8**
  %374 = load i8*, i8** %373, align 8
  tail call void @_ZdlPv(i8* %374) #14
  br label %375

375:                                              ; preds = %372, %363
  %376 = bitcast %"struct.std::__1::__hash_node_base"* %364 to i8*
  tail call void @_ZdlPv(i8* %376) #14
  %377 = icmp eq %"struct.std::__1::__hash_node_base"* %366, null
  br i1 %377, label %378, label %363

378:                                              ; preds = %375, %359
  %379 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %380 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %379, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %379, align 8
  %381 = icmp eq %"struct.std::__1::__hash_node_base"** %380, null
  br i1 %381, label %384, label %382

382:                                              ; preds = %378
  %383 = bitcast %"struct.std::__1::__hash_node_base"** %380 to i8*
  tail call void @_ZdlPv(i8* %383) #14
  br label %384

384:                                              ; preds = %378, %382
  %385 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0, i32 0
  %386 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %385, align 8
  %387 = icmp eq %"struct.std::__1::__hash_node_base"* %386, null
  br i1 %387, label %403, label %388

388:                                              ; preds = %384, %400
  %389 = phi %"struct.std::__1::__hash_node_base"* [ %391, %400 ], [ %386, %384 ]
  %390 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %389, i64 0, i32 0
  %391 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %390, align 8
  %392 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %389, i64 2
  %393 = bitcast %"struct.std::__1::__hash_node_base"* %392 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %394 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %393, i64 0, i32 1, i32 0
  %395 = load i8, i8* %394, align 1
  %396 = icmp slt i8 %395, 0
  br i1 %396, label %397, label %400

397:                                              ; preds = %388
  %398 = bitcast %"struct.std::__1::__hash_node_base"* %392 to i8**
  %399 = load i8*, i8** %398, align 8
  tail call void @_ZdlPv(i8* %399) #14
  br label %400

400:                                              ; preds = %397, %388
  %401 = bitcast %"struct.std::__1::__hash_node_base"* %389 to i8*
  tail call void @_ZdlPv(i8* %401) #14
  %402 = icmp eq %"struct.std::__1::__hash_node_base"* %391, null
  br i1 %402, label %403, label %388

403:                                              ; preds = %400, %384
  %404 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0
  %405 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %404, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %404, align 8
  %406 = icmp eq %"struct.std::__1::__hash_node_base"** %405, null
  br i1 %406, label %409, label %407

407:                                              ; preds = %403
  %408 = bitcast %"struct.std::__1::__hash_node_base"** %405 to i8*
  tail call void @_ZdlPv(i8* %408) #14
  br label %409

409:                                              ; preds = %403, %407
  %410 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 12, i32 0, i32 1, i32 0, i32 0, i32 0
  %411 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %410, align 8
  %412 = icmp eq %"struct.std::__1::__hash_node_base"* %411, null
  br i1 %412, label %428, label %413

413:                                              ; preds = %409, %425
  %414 = phi %"struct.std::__1::__hash_node_base"* [ %416, %425 ], [ %411, %409 ]
  %415 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %414, i64 0, i32 0
  %416 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %415, align 8
  %417 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %414, i64 2
  %418 = bitcast %"struct.std::__1::__hash_node_base"* %417 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %419 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %418, i64 0, i32 1, i32 0
  %420 = load i8, i8* %419, align 1
  %421 = icmp slt i8 %420, 0
  br i1 %421, label %422, label %425

422:                                              ; preds = %413
  %423 = bitcast %"struct.std::__1::__hash_node_base"* %417 to i8**
  %424 = load i8*, i8** %423, align 8
  tail call void @_ZdlPv(i8* %424) #14
  br label %425

425:                                              ; preds = %422, %413
  %426 = bitcast %"struct.std::__1::__hash_node_base"* %414 to i8*
  tail call void @_ZdlPv(i8* %426) #14
  %427 = icmp eq %"struct.std::__1::__hash_node_base"* %416, null
  br i1 %427, label %428, label %413

428:                                              ; preds = %425, %409
  %429 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0
  %430 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %429, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %429, align 8
  %431 = icmp eq %"struct.std::__1::__hash_node_base"** %430, null
  br i1 %431, label %434, label %432

432:                                              ; preds = %428
  %433 = bitcast %"struct.std::__1::__hash_node_base"** %430 to i8*
  tail call void @_ZdlPv(i8* %433) #14
  br label %434

434:                                              ; preds = %428, %432
  %435 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  %436 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %435, align 8
  %437 = icmp eq %"struct.std::__1::__hash_node_base"* %436, null
  br i1 %437, label %453, label %438

438:                                              ; preds = %434, %450
  %439 = phi %"struct.std::__1::__hash_node_base"* [ %441, %450 ], [ %436, %434 ]
  %440 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %439, i64 0, i32 0
  %441 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %440, align 8
  %442 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %439, i64 2
  %443 = bitcast %"struct.std::__1::__hash_node_base"* %442 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %444 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %443, i64 0, i32 1, i32 0
  %445 = load i8, i8* %444, align 1
  %446 = icmp slt i8 %445, 0
  br i1 %446, label %447, label %450

447:                                              ; preds = %438
  %448 = bitcast %"struct.std::__1::__hash_node_base"* %442 to i8**
  %449 = load i8*, i8** %448, align 8
  tail call void @_ZdlPv(i8* %449) #14
  br label %450

450:                                              ; preds = %447, %438
  %451 = bitcast %"struct.std::__1::__hash_node_base"* %439 to i8*
  tail call void @_ZdlPv(i8* %451) #14
  %452 = icmp eq %"struct.std::__1::__hash_node_base"* %441, null
  br i1 %452, label %453, label %438

453:                                              ; preds = %450, %434
  %454 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %455 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %454, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %454, align 8
  %456 = icmp eq %"struct.std::__1::__hash_node_base"** %455, null
  br i1 %456, label %459, label %457

457:                                              ; preds = %453
  %458 = bitcast %"struct.std::__1::__hash_node_base"** %455 to i8*
  tail call void @_ZdlPv(i8* %458) #14
  br label %459

459:                                              ; preds = %453, %457
  %460 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  %461 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %460, align 8
  %462 = icmp eq %"struct.std::__1::__hash_node_base"* %461, null
  br i1 %462, label %478, label %463

463:                                              ; preds = %459, %475
  %464 = phi %"struct.std::__1::__hash_node_base"* [ %466, %475 ], [ %461, %459 ]
  %465 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %464, i64 0, i32 0
  %466 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %465, align 8
  %467 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %464, i64 2
  %468 = bitcast %"struct.std::__1::__hash_node_base"* %467 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %469 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %468, i64 0, i32 1, i32 0
  %470 = load i8, i8* %469, align 1
  %471 = icmp slt i8 %470, 0
  br i1 %471, label %472, label %475

472:                                              ; preds = %463
  %473 = bitcast %"struct.std::__1::__hash_node_base"* %467 to i8**
  %474 = load i8*, i8** %473, align 8
  tail call void @_ZdlPv(i8* %474) #14
  br label %475

475:                                              ; preds = %472, %463
  %476 = bitcast %"struct.std::__1::__hash_node_base"* %464 to i8*
  tail call void @_ZdlPv(i8* %476) #14
  %477 = icmp eq %"struct.std::__1::__hash_node_base"* %466, null
  br i1 %477, label %478, label %463

478:                                              ; preds = %475, %459
  %479 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0
  %480 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %479, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %479, align 8
  %481 = icmp eq %"struct.std::__1::__hash_node_base"** %480, null
  br i1 %481, label %484, label %482

482:                                              ; preds = %478
  %483 = bitcast %"struct.std::__1::__hash_node_base"** %480 to i8*
  tail call void @_ZdlPv(i8* %483) #14
  br label %484

484:                                              ; preds = %478, %482
  %485 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %486 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %485, align 8
  %487 = icmp eq %"struct.std::__1::__hash_node_base"* %486, null
  br i1 %487, label %503, label %488

488:                                              ; preds = %484, %500
  %489 = phi %"struct.std::__1::__hash_node_base"* [ %491, %500 ], [ %486, %484 ]
  %490 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %489, i64 0, i32 0
  %491 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %490, align 8
  %492 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %489, i64 2
  %493 = bitcast %"struct.std::__1::__hash_node_base"* %492 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %494 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %493, i64 0, i32 1, i32 0
  %495 = load i8, i8* %494, align 1
  %496 = icmp slt i8 %495, 0
  br i1 %496, label %497, label %500

497:                                              ; preds = %488
  %498 = bitcast %"struct.std::__1::__hash_node_base"* %492 to i8**
  %499 = load i8*, i8** %498, align 8
  tail call void @_ZdlPv(i8* %499) #14
  br label %500

500:                                              ; preds = %497, %488
  %501 = bitcast %"struct.std::__1::__hash_node_base"* %489 to i8*
  tail call void @_ZdlPv(i8* %501) #14
  %502 = icmp eq %"struct.std::__1::__hash_node_base"* %491, null
  br i1 %502, label %503, label %488

503:                                              ; preds = %500, %484
  %504 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %505 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %504, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %504, align 8
  %506 = icmp eq %"struct.std::__1::__hash_node_base"** %505, null
  br i1 %506, label %509, label %507

507:                                              ; preds = %503
  %508 = bitcast %"struct.std::__1::__hash_node_base"** %505 to i8*
  tail call void @_ZdlPv(i8* %508) #14
  br label %509

509:                                              ; preds = %503, %507
  %510 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 4, i32 2, i32 0, i32 0
  %511 = load %"struct.spirv_cross::StringStream<4096, 4096>::Buffer"*, %"struct.spirv_cross::StringStream<4096, 4096>::Buffer"** %510, align 8
  %512 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 4, i32 2, i32 0, i32 1
  %513 = load i64, i64* %512, align 8
  %514 = getelementptr inbounds %"struct.spirv_cross::StringStream<4096, 4096>::Buffer", %"struct.spirv_cross::StringStream<4096, 4096>::Buffer"* %511, i64 %513
  %515 = icmp eq i64 %513, 0
  br i1 %515, label %518, label %516

516:                                              ; preds = %509
  %517 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 4, i32 1, i64 0
  br label %523

518:                                              ; preds = %529, %509
  %519 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 4, i32 0, i32 0
  %520 = load i8*, i8** %519, align 8
  %521 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 4, i32 1, i64 0
  %522 = icmp eq i8* %520, %521
  br i1 %522, label %533, label %532

523:                                              ; preds = %529, %516
  %524 = phi %"struct.spirv_cross::StringStream<4096, 4096>::Buffer"* [ %511, %516 ], [ %530, %529 ]
  %525 = getelementptr inbounds %"struct.spirv_cross::StringStream<4096, 4096>::Buffer", %"struct.spirv_cross::StringStream<4096, 4096>::Buffer"* %524, i64 0, i32 0
  %526 = load i8*, i8** %525, align 8
  %527 = icmp eq i8* %526, %517
  br i1 %527, label %529, label %528

528:                                              ; preds = %523
  tail call void @free(i8* %526) #13
  br label %529

529:                                              ; preds = %528, %523
  %530 = getelementptr inbounds %"struct.spirv_cross::StringStream<4096, 4096>::Buffer", %"struct.spirv_cross::StringStream<4096, 4096>::Buffer"* %524, i64 1
  %531 = icmp eq %"struct.spirv_cross::StringStream<4096, 4096>::Buffer"* %530, %514
  br i1 %531, label %518, label %523

532:                                              ; preds = %518
  tail call void @free(i8* %520) #13
  br label %533

533:                                              ; preds = %532, %518
  store i8* %521, i8** %519, align 8
  %534 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 4, i32 0, i32 1
  %535 = bitcast i64* %534 to <2 x i64>*
  store <2 x i64> <i64 0, i64 4096>, <2 x i64>* %535, align 8
  store i64 0, i64* %512, align 8
  %536 = load %"struct.spirv_cross::StringStream<4096, 4096>::Buffer"*, %"struct.spirv_cross::StringStream<4096, 4096>::Buffer"** %510, align 8
  %537 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 4, i32 2, i32 2
  %538 = bitcast %"class.spirv_cross::AlignedBuffer.811"* %537 to %"struct.spirv_cross::StringStream<4096, 4096>::Buffer"*
  %539 = icmp eq %"struct.spirv_cross::StringStream<4096, 4096>::Buffer"* %536, %538
  br i1 %539, label %542, label %540

540:                                              ; preds = %533
  %541 = bitcast %"struct.spirv_cross::StringStream<4096, 4096>::Buffer"* %536 to i8*
  tail call void @free(i8* %541) #13
  br label %542

542:                                              ; preds = %533, %540
  %543 = getelementptr inbounds %"class.spirv_cross::CompilerGLSL", %"class.spirv_cross::CompilerGLSL"* %0, i64 0, i32 0
  tail call void @_ZN11spirv_cross8CompilerD2Ev(%"class.spirv_cross::Compiler"* %543) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11dawn_native6opengl12ShaderModuleD2Ev(%"class.dawn_native::opengl::ShaderModule"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::opengl::ShaderModule", %"class.dawn_native::opengl::ShaderModule"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11dawn_native6opengl12ShaderModuleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.dawn_native::opengl::ShaderModule", %"class.dawn_native::opengl::ShaderModule"* %0, i64 0, i32 2, i32 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::__compressed_pair.334", %"class.std::__1::__compressed_pair.334"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::__hash_node_base.327"*, %"struct.std::__1::__hash_node_base.327"** %4, align 8
  %6 = bitcast %"class.std::__1::__compressed_pair.334"* %3 to %"class.std::__1::allocator.337"*
  %7 = icmp eq %"struct.std::__1::__hash_node_base.327"* %5, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %1, %8
  %9 = phi %"struct.std::__1::__hash_node_base.327"* [ %11, %8 ], [ %5, %1 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.327", %"struct.std::__1::__hash_node_base.327"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.327"*, %"struct.std::__1::__hash_node_base.327"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.327", %"struct.std::__1::__hash_node_base.327"* %9, i64 2
  %13 = bitcast %"struct.std::__1::__hash_node_base.327"* %12 to %"struct.std::__1::pair.1094"*
  tail call void @_ZNSt3__116allocator_traitsINS_9allocatorINS_11__hash_nodeINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS1_IcEEEENS_10unique_ptrIN11dawn_native18EntryPointMetadataENS_14default_deleteISB_EEEEEEPvEEEEE7destroyINS_4pairIKS8_SE_EEvvEEvRSI_PT_(%"class.std::__1::allocator.337"* dereferenceable(1) %6, %"struct.std::__1::pair.1094"* %13) #13
  %14 = bitcast %"struct.std::__1::__hash_node_base.327"* %9 to i8*
  tail call void @_ZdlPv(i8* %14) #14
  %15 = icmp eq %"struct.std::__1::__hash_node_base.327"* %11, null
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %1
  %17 = getelementptr inbounds %"class.dawn_native::opengl::ShaderModule", %"class.dawn_native::opengl::ShaderModule"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %"struct.std::__1::__hash_node_base.327"**, %"struct.std::__1::__hash_node_base.327"*** %17, align 8
  store %"struct.std::__1::__hash_node_base.327"** null, %"struct.std::__1::__hash_node_base.327"*** %17, align 8
  %19 = icmp eq %"struct.std::__1::__hash_node_base.327"** %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  %21 = bitcast %"struct.std::__1::__hash_node_base.327"** %18 to i8*
  tail call void @_ZdlPv(i8* %21) #14
  br label %22

22:                                               ; preds = %16, %20
  %23 = getelementptr inbounds %"class.dawn_native::opengl::ShaderModule", %"class.dawn_native::opengl::ShaderModule"* %0, i64 0, i32 1, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = icmp eq i32* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %22
  %27 = ptrtoint i32* %24 to i64
  %28 = getelementptr inbounds %"class.dawn_native::opengl::ShaderModule", %"class.dawn_native::opengl::ShaderModule"* %0, i64 0, i32 1, i32 0, i32 1
  %29 = bitcast i32** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = bitcast i32* %24 to i8*
  tail call void @_ZdlPv(i8* %30) #14
  br label %31

31:                                               ; preds = %22, %26
  %32 = getelementptr inbounds %"class.dawn_native::opengl::ShaderModule", %"class.dawn_native::opengl::ShaderModule"* %0, i64 0, i32 0
  tail call void @_ZN11dawn_native16ShaderModuleBaseD2Ev(%"class.dawn_native::ShaderModuleBase"* %32) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11dawn_native6opengl12ShaderModuleD0Ev(%"class.dawn_native::opengl::ShaderModule"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::opengl::ShaderModule", %"class.dawn_native::opengl::ShaderModule"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11dawn_native6opengl12ShaderModuleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.dawn_native::opengl::ShaderModule", %"class.dawn_native::opengl::ShaderModule"* %0, i64 0, i32 2, i32 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::__compressed_pair.334", %"class.std::__1::__compressed_pair.334"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::__hash_node_base.327"*, %"struct.std::__1::__hash_node_base.327"** %4, align 8
  %6 = bitcast %"class.std::__1::__compressed_pair.334"* %3 to %"class.std::__1::allocator.337"*
  %7 = icmp eq %"struct.std::__1::__hash_node_base.327"* %5, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %1, %8
  %9 = phi %"struct.std::__1::__hash_node_base.327"* [ %11, %8 ], [ %5, %1 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.327", %"struct.std::__1::__hash_node_base.327"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.327"*, %"struct.std::__1::__hash_node_base.327"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.327", %"struct.std::__1::__hash_node_base.327"* %9, i64 2
  %13 = bitcast %"struct.std::__1::__hash_node_base.327"* %12 to %"struct.std::__1::pair.1094"*
  tail call void @_ZNSt3__116allocator_traitsINS_9allocatorINS_11__hash_nodeINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS1_IcEEEENS_10unique_ptrIN11dawn_native18EntryPointMetadataENS_14default_deleteISB_EEEEEEPvEEEEE7destroyINS_4pairIKS8_SE_EEvvEEvRSI_PT_(%"class.std::__1::allocator.337"* dereferenceable(1) %6, %"struct.std::__1::pair.1094"* %13) #13
  %14 = bitcast %"struct.std::__1::__hash_node_base.327"* %9 to i8*
  tail call void @_ZdlPv(i8* %14) #14
  %15 = icmp eq %"struct.std::__1::__hash_node_base.327"* %11, null
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %1
  %17 = getelementptr inbounds %"class.dawn_native::opengl::ShaderModule", %"class.dawn_native::opengl::ShaderModule"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %"struct.std::__1::__hash_node_base.327"**, %"struct.std::__1::__hash_node_base.327"*** %17, align 8
  store %"struct.std::__1::__hash_node_base.327"** null, %"struct.std::__1::__hash_node_base.327"*** %17, align 8
  %19 = icmp eq %"struct.std::__1::__hash_node_base.327"** %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  %21 = bitcast %"struct.std::__1::__hash_node_base.327"** %18 to i8*
  tail call void @_ZdlPv(i8* %21) #14
  br label %22

22:                                               ; preds = %20, %16
  %23 = getelementptr inbounds %"class.dawn_native::opengl::ShaderModule", %"class.dawn_native::opengl::ShaderModule"* %0, i64 0, i32 1, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = icmp eq i32* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %22
  %27 = ptrtoint i32* %24 to i64
  %28 = getelementptr inbounds %"class.dawn_native::opengl::ShaderModule", %"class.dawn_native::opengl::ShaderModule"* %0, i64 0, i32 1, i32 0, i32 1
  %29 = bitcast i32** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = bitcast i32* %24 to i8*
  tail call void @_ZdlPv(i8* %30) #14
  br label %31

31:                                               ; preds = %22, %26
  %32 = getelementptr inbounds %"class.dawn_native::opengl::ShaderModule", %"class.dawn_native::opengl::ShaderModule"* %0, i64 0, i32 0
  tail call void @_ZN11dawn_native16ShaderModuleBaseD2Ev(%"class.dawn_native::ShaderModuleBase"* %32) #13
  %33 = bitcast %"class.dawn_native::opengl::ShaderModule"* %0 to i8*
  tail call void @_ZdlPv(i8* %33) #14
  ret void
}

declare void @_ZN10RefCounted10DeleteThisEv(%class.RefCounted*) unnamed_addr #2

declare i64 @_ZN11dawn_native16ShaderModuleBase18ComputeContentHashEv(%"class.dawn_native::ShaderModuleBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #5

declare void @_ZN10RefCounted7ReleaseEv(%class.RefCounted*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN4tint9transform9TransformENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.360"*, %"class.std::__1::unique_ptr.362"* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.360", %"class.std::__1::vector.360"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.362"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.360"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.360"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.360", %"class.std::__1::vector.360"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.362"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.362"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.362"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.362"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.362"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.362"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.362"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.362"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.tint::transform::Transform"* null, %"class.tint::transform::Transform"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.362"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.362"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.362"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.360", %"class.std::__1::vector.360"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.362"*, %"class.std::__1::unique_ptr.362"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.362"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.362"*, %"class.std::__1::unique_ptr.362"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.362"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.362"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.tint::transform::Transform"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.362"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.362"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.362"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.362"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.362"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.362"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.tint::transform::Transform"* null, %"class.tint::transform::Transform"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.362"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !17

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.362"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.362"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.362"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.362"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.362"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.362"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.362"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.362"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.362"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.tint::transform::Transform"* null, %"class.tint::transform::Transform"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.362"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.362"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.362"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.362"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.362"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.tint::transform::Transform"* null, %"class.tint::transform::Transform"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.362"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.362"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.362"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.362"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.362"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.tint::transform::Transform"* null, %"class.tint::transform::Transform"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.362"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.362"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.362"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.362"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.362"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.tint::transform::Transform"* null, %"class.tint::transform::Transform"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.362"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.362"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.362"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.362"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.362"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.tint::transform::Transform"* null, %"class.tint::transform::Transform"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.362"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.362"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.362"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.362"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.362"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.tint::transform::Transform"* null, %"class.tint::transform::Transform"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.362"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.362"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.362"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.362"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.362"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.tint::transform::Transform"* null, %"class.tint::transform::Transform"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.362"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.362"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.362"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.362"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.362"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.tint::transform::Transform"* null, %"class.tint::transform::Transform"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.362"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.362"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.362"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.362"*, %"class.std::__1::unique_ptr.362"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.362"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.362"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.362"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.362"*
  %138 = icmp eq %"class.std::__1::unique_ptr.362"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.362"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.362"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.362"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.tint::transform::Transform"*, %"class.tint::transform::Transform"** %142, align 8
  store %"class.tint::transform::Transform"* null, %"class.tint::transform::Transform"** %142, align 8
  %144 = icmp eq %"class.tint::transform::Transform"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.tint::transform::Transform"* %143 to void (%"class.tint::transform::Transform"*)***
  %147 = load void (%"class.tint::transform::Transform"*)**, void (%"class.tint::transform::Transform"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.tint::transform::Transform"*)*, void (%"class.tint::transform::Transform"*)** %147, i64 1
  %149 = load void (%"class.tint::transform::Transform"*)*, void (%"class.tint::transform::Transform"*)** %148, align 8
  tail call void %149(%"class.tint::transform::Transform"* nonnull %143) #13
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.362"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #14
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZN11spirv_cross8CompilerC2ENSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.spirv_cross::Compiler"*, %"class.std::__1::vector.300"*) unnamed_addr #2

declare void @_ZN11spirv_cross12CompilerGLSL4initEv(%"class.spirv_cross::CompilerGLSL"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross8CompilerD2Ev(%"class.spirv_cross::Compiler"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN11spirv_cross8CompilerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 35, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.790"*, %"struct.std::__1::__hash_node_base.790"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.790"* %4, null
  br i1 %5, label %21, label %6

6:                                                ; preds = %1, %18
  %7 = phi %"struct.std::__1::__hash_node_base.790"* [ %9, %18 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.790", %"struct.std::__1::__hash_node_base.790"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.790"*, %"struct.std::__1::__hash_node_base.790"** %8, align 8
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.790", %"struct.std::__1::__hash_node_base.790"* %7, i64 3
  %11 = bitcast %"struct.std::__1::__hash_node_base.790"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %6
  %16 = bitcast %"struct.std::__1::__hash_node_base.790"* %10 to i8**
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #14
  br label %18

18:                                               ; preds = %15, %6
  %19 = bitcast %"struct.std::__1::__hash_node_base.790"* %7 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  %20 = icmp eq %"struct.std::__1::__hash_node_base.790"* %9, null
  br i1 %20, label %21, label %6

21:                                               ; preds = %18, %1
  %22 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 35, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base.790"**, %"struct.std::__1::__hash_node_base.790"*** %22, align 8
  store %"struct.std::__1::__hash_node_base.790"** null, %"struct.std::__1::__hash_node_base.790"*** %22, align 8
  %24 = icmp eq %"struct.std::__1::__hash_node_base.790"** %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = bitcast %"struct.std::__1::__hash_node_base.790"** %23 to i8*
  tail call void @_ZdlPv(i8* %26) #14
  br label %27

27:                                               ; preds = %21, %25
  %28 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 32, i32 0, i32 1, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.546"*, %"struct.std::__1::__hash_node_base.546"** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.546"* %29, null
  br i1 %30, label %37, label %31

31:                                               ; preds = %27, %31
  %32 = phi %"struct.std::__1::__hash_node_base.546"* [ %34, %31 ], [ %29, %27 ]
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base.546", %"struct.std::__1::__hash_node_base.546"* %32, i64 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.546"*, %"struct.std::__1::__hash_node_base.546"** %33, align 8
  %35 = bitcast %"struct.std::__1::__hash_node_base.546"* %32 to i8*
  tail call void @_ZdlPv(i8* %35) #14
  %36 = icmp eq %"struct.std::__1::__hash_node_base.546"* %34, null
  br i1 %36, label %37, label %31

37:                                               ; preds = %31, %27
  %38 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 32, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.546"**, %"struct.std::__1::__hash_node_base.546"*** %38, align 8
  store %"struct.std::__1::__hash_node_base.546"** null, %"struct.std::__1::__hash_node_base.546"*** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.546"** %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  %42 = bitcast %"struct.std::__1::__hash_node_base.546"** %39 to i8*
  tail call void @_ZdlPv(i8* %42) #14
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 31, i32 0, i32 1
  store i64 0, i64* %44, align 8
  %45 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 31, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8
  %47 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 31, i32 2
  %48 = bitcast %"class.spirv_cross::AlignedBuffer.694"* %47 to i32*
  %49 = icmp eq i32* %46, %48
  br i1 %49, label %52, label %50

50:                                               ; preds = %43
  %51 = bitcast i32* %46 to i8*
  tail call void @free(i8* %51) #13
  br label %52

52:                                               ; preds = %43, %50
  %53 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 30, i32 0, i32 1, i32 0, i32 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base.766"*, %"struct.std::__1::__hash_node_base.766"** %53, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base.766"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %52, %66
  %57 = phi %"struct.std::__1::__hash_node_base.766"* [ %59, %66 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.766", %"struct.std::__1::__hash_node_base.766"* %57, i64 0, i32 0
  %59 = load %"struct.std::__1::__hash_node_base.766"*, %"struct.std::__1::__hash_node_base.766"** %58, align 8
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.766", %"struct.std::__1::__hash_node_base.766"* %57, i64 3
  %61 = bitcast %"struct.std::__1::__hash_node_base.766"* %60 to %"class.spirv_cross::CFG"**
  %62 = load %"class.spirv_cross::CFG"*, %"class.spirv_cross::CFG"** %61, align 8
  store %"class.spirv_cross::CFG"* null, %"class.spirv_cross::CFG"** %61, align 8
  %63 = icmp eq %"class.spirv_cross::CFG"* %62, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %56
  tail call void @_ZN11spirv_cross3CFGD2Ev(%"class.spirv_cross::CFG"* nonnull %62) #13
  %65 = bitcast %"class.spirv_cross::CFG"* %62 to i8*
  tail call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %64, %56
  %67 = bitcast %"struct.std::__1::__hash_node_base.766"* %57 to i8*
  tail call void @_ZdlPv(i8* %67) #14
  %68 = icmp eq %"struct.std::__1::__hash_node_base.766"* %59, null
  br i1 %68, label %69, label %56

69:                                               ; preds = %66, %52
  %70 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 30, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load %"struct.std::__1::__hash_node_base.766"**, %"struct.std::__1::__hash_node_base.766"*** %70, align 8
  store %"struct.std::__1::__hash_node_base.766"** null, %"struct.std::__1::__hash_node_base.766"*** %70, align 8
  %72 = icmp eq %"struct.std::__1::__hash_node_base.766"** %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %69
  %74 = bitcast %"struct.std::__1::__hash_node_base.766"** %71 to i8*
  tail call void @_ZdlPv(i8* %74) #14
  br label %75

75:                                               ; preds = %69, %73
  %76 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 27, i32 0, i32 1, i32 0, i32 0, i32 0
  %77 = load %"struct.std::__1::__hash_node_base.546"*, %"struct.std::__1::__hash_node_base.546"** %76, align 8
  %78 = icmp eq %"struct.std::__1::__hash_node_base.546"* %77, null
  br i1 %78, label %85, label %79

79:                                               ; preds = %75, %79
  %80 = phi %"struct.std::__1::__hash_node_base.546"* [ %82, %79 ], [ %77, %75 ]
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node_base.546", %"struct.std::__1::__hash_node_base.546"* %80, i64 0, i32 0
  %82 = load %"struct.std::__1::__hash_node_base.546"*, %"struct.std::__1::__hash_node_base.546"** %81, align 8
  %83 = bitcast %"struct.std::__1::__hash_node_base.546"* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #14
  %84 = icmp eq %"struct.std::__1::__hash_node_base.546"* %82, null
  br i1 %84, label %85, label %79

85:                                               ; preds = %79, %75
  %86 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load %"struct.std::__1::__hash_node_base.546"**, %"struct.std::__1::__hash_node_base.546"*** %86, align 8
  store %"struct.std::__1::__hash_node_base.546"** null, %"struct.std::__1::__hash_node_base.546"*** %86, align 8
  %88 = icmp eq %"struct.std::__1::__hash_node_base.546"** %87, null
  br i1 %88, label %91, label %89

89:                                               ; preds = %85
  %90 = bitcast %"struct.std::__1::__hash_node_base.546"** %87 to i8*
  tail call void @_ZdlPv(i8* %90) #14
  br label %91

91:                                               ; preds = %85, %89
  %92 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 22, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %93 = load %"struct.std::__1::__hash_node_base.546"*, %"struct.std::__1::__hash_node_base.546"** %92, align 8
  %94 = icmp eq %"struct.std::__1::__hash_node_base.546"* %93, null
  br i1 %94, label %101, label %95

95:                                               ; preds = %91, %95
  %96 = phi %"struct.std::__1::__hash_node_base.546"* [ %98, %95 ], [ %93, %91 ]
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.546", %"struct.std::__1::__hash_node_base.546"* %96, i64 0, i32 0
  %98 = load %"struct.std::__1::__hash_node_base.546"*, %"struct.std::__1::__hash_node_base.546"** %97, align 8
  %99 = bitcast %"struct.std::__1::__hash_node_base.546"* %96 to i8*
  tail call void @_ZdlPv(i8* %99) #14
  %100 = icmp eq %"struct.std::__1::__hash_node_base.546"* %98, null
  br i1 %100, label %101, label %95

101:                                              ; preds = %95, %91
  %102 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 22, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load %"struct.std::__1::__hash_node_base.546"**, %"struct.std::__1::__hash_node_base.546"*** %102, align 8
  store %"struct.std::__1::__hash_node_base.546"** null, %"struct.std::__1::__hash_node_base.546"*** %102, align 8
  %104 = icmp eq %"struct.std::__1::__hash_node_base.546"** %103, null
  br i1 %104, label %107, label %105

105:                                              ; preds = %101
  %106 = bitcast %"struct.std::__1::__hash_node_base.546"** %103 to i8*
  tail call void @_ZdlPv(i8* %106) #14
  br label %107

107:                                              ; preds = %101, %105
  %108 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 21, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base.546"*, %"struct.std::__1::__hash_node_base.546"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.546"* %109, null
  br i1 %110, label %117, label %111

111:                                              ; preds = %107, %111
  %112 = phi %"struct.std::__1::__hash_node_base.546"* [ %114, %111 ], [ %109, %107 ]
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.546", %"struct.std::__1::__hash_node_base.546"* %112, i64 0, i32 0
  %114 = load %"struct.std::__1::__hash_node_base.546"*, %"struct.std::__1::__hash_node_base.546"** %113, align 8
  %115 = bitcast %"struct.std::__1::__hash_node_base.546"* %112 to i8*
  tail call void @_ZdlPv(i8* %115) #14
  %116 = icmp eq %"struct.std::__1::__hash_node_base.546"* %114, null
  br i1 %116, label %117, label %111

117:                                              ; preds = %111, %107
  %118 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 21, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.546"**, %"struct.std::__1::__hash_node_base.546"*** %118, align 8
  store %"struct.std::__1::__hash_node_base.546"** null, %"struct.std::__1::__hash_node_base.546"*** %118, align 8
  %120 = icmp eq %"struct.std::__1::__hash_node_base.546"** %119, null
  br i1 %120, label %123, label %121

121:                                              ; preds = %117
  %122 = bitcast %"struct.std::__1::__hash_node_base.546"** %119 to i8*
  tail call void @_ZdlPv(i8* %122) #14
  br label %123

123:                                              ; preds = %117, %121
  %124 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 20, i32 0, i32 1, i32 0, i32 0, i32 0
  %125 = load %"struct.std::__1::__hash_node_base.546"*, %"struct.std::__1::__hash_node_base.546"** %124, align 8
  %126 = icmp eq %"struct.std::__1::__hash_node_base.546"* %125, null
  br i1 %126, label %133, label %127

127:                                              ; preds = %123, %127
  %128 = phi %"struct.std::__1::__hash_node_base.546"* [ %130, %127 ], [ %125, %123 ]
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base.546", %"struct.std::__1::__hash_node_base.546"* %128, i64 0, i32 0
  %130 = load %"struct.std::__1::__hash_node_base.546"*, %"struct.std::__1::__hash_node_base.546"** %129, align 8
  %131 = bitcast %"struct.std::__1::__hash_node_base.546"* %128 to i8*
  tail call void @_ZdlPv(i8* %131) #14
  %132 = icmp eq %"struct.std::__1::__hash_node_base.546"* %130, null
  br i1 %132, label %133, label %127

133:                                              ; preds = %127, %123
  %134 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 20, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load %"struct.std::__1::__hash_node_base.546"**, %"struct.std::__1::__hash_node_base.546"*** %134, align 8
  store %"struct.std::__1::__hash_node_base.546"** null, %"struct.std::__1::__hash_node_base.546"*** %134, align 8
  %136 = icmp eq %"struct.std::__1::__hash_node_base.546"** %135, null
  br i1 %136, label %139, label %137

137:                                              ; preds = %133
  %138 = bitcast %"struct.std::__1::__hash_node_base.546"** %135 to i8*
  tail call void @_ZdlPv(i8* %138) #14
  br label %139

139:                                              ; preds = %133, %137
  %140 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 19, i32 0, i32 1, i32 0, i32 0, i32 0
  %141 = load %"struct.std::__1::__hash_node_base.546"*, %"struct.std::__1::__hash_node_base.546"** %140, align 8
  %142 = icmp eq %"struct.std::__1::__hash_node_base.546"* %141, null
  br i1 %142, label %149, label %143

143:                                              ; preds = %139, %143
  %144 = phi %"struct.std::__1::__hash_node_base.546"* [ %146, %143 ], [ %141, %139 ]
  %145 = getelementptr inbounds %"struct.std::__1::__hash_node_base.546", %"struct.std::__1::__hash_node_base.546"* %144, i64 0, i32 0
  %146 = load %"struct.std::__1::__hash_node_base.546"*, %"struct.std::__1::__hash_node_base.546"** %145, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base.546"* %144 to i8*
  tail call void @_ZdlPv(i8* %147) #14
  %148 = icmp eq %"struct.std::__1::__hash_node_base.546"* %146, null
  br i1 %148, label %149, label %143

149:                                              ; preds = %143, %139
  %150 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load %"struct.std::__1::__hash_node_base.546"**, %"struct.std::__1::__hash_node_base.546"*** %150, align 8
  store %"struct.std::__1::__hash_node_base.546"** null, %"struct.std::__1::__hash_node_base.546"*** %150, align 8
  %152 = icmp eq %"struct.std::__1::__hash_node_base.546"** %151, null
  br i1 %152, label %155, label %153

153:                                              ; preds = %149
  %154 = bitcast %"struct.std::__1::__hash_node_base.546"** %151 to i8*
  tail call void @_ZdlPv(i8* %154) #14
  br label %155

155:                                              ; preds = %149, %153
  %156 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 18, i32 0, i32 1, i32 0, i32 0, i32 0
  %157 = load %"struct.std::__1::__hash_node_base.546"*, %"struct.std::__1::__hash_node_base.546"** %156, align 8
  %158 = icmp eq %"struct.std::__1::__hash_node_base.546"* %157, null
  br i1 %158, label %165, label %159

159:                                              ; preds = %155, %159
  %160 = phi %"struct.std::__1::__hash_node_base.546"* [ %162, %159 ], [ %157, %155 ]
  %161 = getelementptr inbounds %"struct.std::__1::__hash_node_base.546", %"struct.std::__1::__hash_node_base.546"* %160, i64 0, i32 0
  %162 = load %"struct.std::__1::__hash_node_base.546"*, %"struct.std::__1::__hash_node_base.546"** %161, align 8
  %163 = bitcast %"struct.std::__1::__hash_node_base.546"* %160 to i8*
  tail call void @_ZdlPv(i8* %163) #14
  %164 = icmp eq %"struct.std::__1::__hash_node_base.546"* %162, null
  br i1 %164, label %165, label %159

165:                                              ; preds = %159, %155
  %166 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = load %"struct.std::__1::__hash_node_base.546"**, %"struct.std::__1::__hash_node_base.546"*** %166, align 8
  store %"struct.std::__1::__hash_node_base.546"** null, %"struct.std::__1::__hash_node_base.546"*** %166, align 8
  %168 = icmp eq %"struct.std::__1::__hash_node_base.546"** %167, null
  br i1 %168, label %171, label %169

169:                                              ; preds = %165
  %170 = bitcast %"struct.std::__1::__hash_node_base.546"** %167 to i8*
  tail call void @_ZdlPv(i8* %170) #14
  br label %171

171:                                              ; preds = %165, %169
  %172 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 17, i32 0, i32 1, i32 0, i32 0, i32 0
  %173 = load %"struct.std::__1::__hash_node_base.546"*, %"struct.std::__1::__hash_node_base.546"** %172, align 8
  %174 = icmp eq %"struct.std::__1::__hash_node_base.546"* %173, null
  br i1 %174, label %181, label %175

175:                                              ; preds = %171, %175
  %176 = phi %"struct.std::__1::__hash_node_base.546"* [ %178, %175 ], [ %173, %171 ]
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node_base.546", %"struct.std::__1::__hash_node_base.546"* %176, i64 0, i32 0
  %178 = load %"struct.std::__1::__hash_node_base.546"*, %"struct.std::__1::__hash_node_base.546"** %177, align 8
  %179 = bitcast %"struct.std::__1::__hash_node_base.546"* %176 to i8*
  tail call void @_ZdlPv(i8* %179) #14
  %180 = icmp eq %"struct.std::__1::__hash_node_base.546"* %178, null
  br i1 %180, label %181, label %175

181:                                              ; preds = %175, %171
  %182 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load %"struct.std::__1::__hash_node_base.546"**, %"struct.std::__1::__hash_node_base.546"*** %182, align 8
  store %"struct.std::__1::__hash_node_base.546"** null, %"struct.std::__1::__hash_node_base.546"*** %182, align 8
  %184 = icmp eq %"struct.std::__1::__hash_node_base.546"** %183, null
  br i1 %184, label %187, label %185

185:                                              ; preds = %181
  %186 = bitcast %"struct.std::__1::__hash_node_base.546"** %183 to i8*
  tail call void @_ZdlPv(i8* %186) #14
  br label %187

187:                                              ; preds = %181, %185
  %188 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0, i32 0
  %189 = load %"struct.std::__1::__hash_node_base.546"*, %"struct.std::__1::__hash_node_base.546"** %188, align 8
  %190 = icmp eq %"struct.std::__1::__hash_node_base.546"* %189, null
  br i1 %190, label %197, label %191

191:                                              ; preds = %187, %191
  %192 = phi %"struct.std::__1::__hash_node_base.546"* [ %194, %191 ], [ %189, %187 ]
  %193 = getelementptr inbounds %"struct.std::__1::__hash_node_base.546", %"struct.std::__1::__hash_node_base.546"* %192, i64 0, i32 0
  %194 = load %"struct.std::__1::__hash_node_base.546"*, %"struct.std::__1::__hash_node_base.546"** %193, align 8
  %195 = bitcast %"struct.std::__1::__hash_node_base.546"* %192 to i8*
  tail call void @_ZdlPv(i8* %195) #14
  %196 = icmp eq %"struct.std::__1::__hash_node_base.546"* %194, null
  br i1 %196, label %197, label %191

197:                                              ; preds = %191, %187
  %198 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = load %"struct.std::__1::__hash_node_base.546"**, %"struct.std::__1::__hash_node_base.546"*** %198, align 8
  store %"struct.std::__1::__hash_node_base.546"** null, %"struct.std::__1::__hash_node_base.546"*** %198, align 8
  %200 = icmp eq %"struct.std::__1::__hash_node_base.546"** %199, null
  br i1 %200, label %203, label %201

201:                                              ; preds = %197
  %202 = bitcast %"struct.std::__1::__hash_node_base.546"** %199 to i8*
  tail call void @_ZdlPv(i8* %202) #14
  br label %203

203:                                              ; preds = %197, %201
  %204 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 15, i32 0, i32 2
  %205 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %204, align 8
  %206 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %205, i64 0, i32 1
  %207 = load void (i8*)*, void (i8*)** %206, align 8
  %208 = icmp eq void (i8*)* %207, null
  br i1 %208, label %212, label %209

209:                                              ; preds = %203
  %210 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %211 = load i8*, i8** %210, align 8
  tail call void %207(i8* %211) #13
  br label %212

212:                                              ; preds = %203, %209
  %213 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 14, i32 0, i32 1
  store i64 0, i64* %213, align 8
  %214 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 14, i32 0, i32 0
  %215 = load i32*, i32** %214, align 8
  %216 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 14, i32 2
  %217 = bitcast %"class.spirv_cross::AlignedBuffer.694"* %216 to i32*
  %218 = icmp eq i32* %215, %217
  br i1 %218, label %221, label %219

219:                                              ; preds = %212
  %220 = bitcast i32* %215 to i8*
  tail call void @free(i8* %220) #13
  br label %221

221:                                              ; preds = %212, %219
  %222 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 13, i32 0, i32 1
  store i64 0, i64* %222, align 8
  %223 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 13, i32 0, i32 0
  %224 = load %"struct.spirv_cross::CombinedImageSampler"*, %"struct.spirv_cross::CombinedImageSampler"** %223, align 8
  %225 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 13, i32 2
  %226 = bitcast %"class.spirv_cross::AlignedBuffer.753"* %225 to %"struct.spirv_cross::CombinedImageSampler"*
  %227 = icmp eq %"struct.spirv_cross::CombinedImageSampler"* %224, %226
  br i1 %227, label %230, label %228

228:                                              ; preds = %221
  %229 = bitcast %"struct.spirv_cross::CombinedImageSampler"* %224 to i8*
  tail call void @free(i8* %229) #13
  br label %230

230:                                              ; preds = %221, %228
  %231 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  %232 = load %"struct.std::__1::__hash_node_base.546"*, %"struct.std::__1::__hash_node_base.546"** %231, align 8
  %233 = icmp eq %"struct.std::__1::__hash_node_base.546"* %232, null
  br i1 %233, label %240, label %234

234:                                              ; preds = %230, %234
  %235 = phi %"struct.std::__1::__hash_node_base.546"* [ %237, %234 ], [ %232, %230 ]
  %236 = getelementptr inbounds %"struct.std::__1::__hash_node_base.546", %"struct.std::__1::__hash_node_base.546"* %235, i64 0, i32 0
  %237 = load %"struct.std::__1::__hash_node_base.546"*, %"struct.std::__1::__hash_node_base.546"** %236, align 8
  %238 = bitcast %"struct.std::__1::__hash_node_base.546"* %235 to i8*
  tail call void @_ZdlPv(i8* %238) #14
  %239 = icmp eq %"struct.std::__1::__hash_node_base.546"* %237, null
  br i1 %239, label %240, label %234

240:                                              ; preds = %234, %230
  %241 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = load %"struct.std::__1::__hash_node_base.546"**, %"struct.std::__1::__hash_node_base.546"*** %241, align 8
  store %"struct.std::__1::__hash_node_base.546"** null, %"struct.std::__1::__hash_node_base.546"*** %241, align 8
  %243 = icmp eq %"struct.std::__1::__hash_node_base.546"** %242, null
  br i1 %243, label %246, label %244

244:                                              ; preds = %240
  %245 = bitcast %"struct.std::__1::__hash_node_base.546"** %242 to i8*
  tail call void @_ZdlPv(i8* %245) #14
  br label %246

246:                                              ; preds = %240, %244
  %247 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %248 = load %"struct.std::__1::__hash_node_base.731"*, %"struct.std::__1::__hash_node_base.731"** %247, align 8
  %249 = icmp eq %"struct.std::__1::__hash_node_base.731"* %248, null
  br i1 %249, label %256, label %250

250:                                              ; preds = %246, %250
  %251 = phi %"struct.std::__1::__hash_node_base.731"* [ %253, %250 ], [ %248, %246 ]
  %252 = getelementptr inbounds %"struct.std::__1::__hash_node_base.731", %"struct.std::__1::__hash_node_base.731"* %251, i64 0, i32 0
  %253 = load %"struct.std::__1::__hash_node_base.731"*, %"struct.std::__1::__hash_node_base.731"** %252, align 8
  %254 = bitcast %"struct.std::__1::__hash_node_base.731"* %251 to i8*
  tail call void @_ZdlPv(i8* %254) #14
  %255 = icmp eq %"struct.std::__1::__hash_node_base.731"* %253, null
  br i1 %255, label %256, label %250

256:                                              ; preds = %250, %246
  %257 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %258 = load %"struct.std::__1::__hash_node_base.731"**, %"struct.std::__1::__hash_node_base.731"*** %257, align 8
  store %"struct.std::__1::__hash_node_base.731"** null, %"struct.std::__1::__hash_node_base.731"*** %257, align 8
  %259 = icmp eq %"struct.std::__1::__hash_node_base.731"** %258, null
  br i1 %259, label %262, label %260

260:                                              ; preds = %256
  %261 = bitcast %"struct.std::__1::__hash_node_base.731"** %258 to i8*
  tail call void @_ZdlPv(i8* %261) #14
  br label %262

262:                                              ; preds = %256, %260
  %263 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 3, i32 0, i32 1
  store i64 0, i64* %263, align 8
  %264 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 3, i32 0, i32 0
  %265 = load i32*, i32** %264, align 8
  %266 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 3, i32 2
  %267 = bitcast %"class.spirv_cross::AlignedBuffer.694"* %266 to i32*
  %268 = icmp eq i32* %265, %267
  br i1 %268, label %271, label %269

269:                                              ; preds = %262
  %270 = bitcast i32* %265 to i8*
  tail call void @free(i8* %270) #13
  br label %271

271:                                              ; preds = %262, %269
  %272 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 2, i32 0, i32 1
  store i64 0, i64* %272, align 8
  %273 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 2, i32 0, i32 0
  %274 = load i32*, i32** %273, align 8
  %275 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 2, i32 2
  %276 = bitcast %"class.spirv_cross::AlignedBuffer.694"* %275 to i32*
  %277 = icmp eq i32* %274, %276
  br i1 %277, label %280, label %278

278:                                              ; preds = %271
  %279 = bitcast i32* %274 to i8*
  tail call void @free(i8* %279) #13
  br label %280

280:                                              ; preds = %271, %278
  %281 = getelementptr inbounds %"class.spirv_cross::Compiler", %"class.spirv_cross::Compiler"* %0, i64 0, i32 1
  tail call void @_ZN11spirv_cross8ParsedIRD2Ev(%"class.spirv_cross::ParsedIR"* %281) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross8ParsedIRD2Ev(%"class.spirv_cross::ParsedIR"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 20, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.546"*, %"struct.std::__1::__hash_node_base.546"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.546"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.546"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.546", %"struct.std::__1::__hash_node_base.546"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.546"*, %"struct.std::__1::__hash_node_base.546"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.546"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #14
  %10 = icmp eq %"struct.std::__1::__hash_node_base.546"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 20, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.546"**, %"struct.std::__1::__hash_node_base.546"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.546"** null, %"struct.std::__1::__hash_node_base.546"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.546"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.546"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 19, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.546"*, %"struct.std::__1::__hash_node_base.546"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.546"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %17, %21
  %22 = phi %"struct.std::__1::__hash_node_base.546"* [ %24, %21 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.546", %"struct.std::__1::__hash_node_base.546"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.546"*, %"struct.std::__1::__hash_node_base.546"** %23, align 8
  %25 = bitcast %"struct.std::__1::__hash_node_base.546"* %22 to i8*
  tail call void @_ZdlPv(i8* %25) #14
  %26 = icmp eq %"struct.std::__1::__hash_node_base.546"* %24, null
  br i1 %26, label %27, label %21

27:                                               ; preds = %21, %17
  %28 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 19, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.546"**, %"struct.std::__1::__hash_node_base.546"*** %28, align 8
  store %"struct.std::__1::__hash_node_base.546"** null, %"struct.std::__1::__hash_node_base.546"*** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.546"** %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = bitcast %"struct.std::__1::__hash_node_base.546"** %29 to i8*
  tail call void @_ZdlPv(i8* %32) #14
  br label %33

33:                                               ; preds = %27, %31
  %34 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 18
  %35 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  tail call void @_ZdlPv(i8* %41) #14
  br label %42

42:                                               ; preds = %33, %39
  %43 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 11, i32 0, i32 1
  %44 = getelementptr inbounds %"class.std::__1::__compressed_pair.676", %"class.std::__1::__compressed_pair.676"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.669"*, %"struct.std::__1::__hash_node_base.669"** %44, align 8
  %46 = bitcast %"class.std::__1::__compressed_pair.676"* %43 to %"class.std::__1::allocator.679"*
  %47 = icmp eq %"struct.std::__1::__hash_node_base.669"* %45, null
  br i1 %47, label %56, label %48

48:                                               ; preds = %42, %48
  %49 = phi %"struct.std::__1::__hash_node_base.669"* [ %51, %48 ], [ %45, %42 ]
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.669", %"struct.std::__1::__hash_node_base.669"* %49, i64 0, i32 0
  %51 = load %"struct.std::__1::__hash_node_base.669"*, %"struct.std::__1::__hash_node_base.669"** %50, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.669", %"struct.std::__1::__hash_node_base.669"* %49, i64 2
  %53 = bitcast %"struct.std::__1::__hash_node_base.669"* %52 to %"struct.std::__1::pair.1081"*
  tail call void @_ZNSt3__116allocator_traitsINS_9allocatorINS_11__hash_nodeINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS4_5TypesE4EEENS4_14SPIREntryPointEEEPvEEEEE7destroyINS_4pairIKS7_S8_EEvvEEvRSC_PT_(%"class.std::__1::allocator.679"* dereferenceable(1) %46, %"struct.std::__1::pair.1081"* %53) #13
  %54 = bitcast %"struct.std::__1::__hash_node_base.669"* %49 to i8*
  tail call void @_ZdlPv(i8* %54) #14
  %55 = icmp eq %"struct.std::__1::__hash_node_base.669"* %51, null
  br i1 %55, label %56, label %48

56:                                               ; preds = %48, %42
  %57 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load %"struct.std::__1::__hash_node_base.669"**, %"struct.std::__1::__hash_node_base.669"*** %57, align 8
  store %"struct.std::__1::__hash_node_base.669"** null, %"struct.std::__1::__hash_node_base.669"*** %57, align 8
  %59 = icmp eq %"struct.std::__1::__hash_node_base.669"** %58, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %56
  %61 = bitcast %"struct.std::__1::__hash_node_base.669"** %58 to i8*
  tail call void @_ZdlPv(i8* %61) #14
  br label %62

62:                                               ; preds = %56, %60
  %63 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  %64 = load %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %63, align 8
  %65 = icmp eq %"struct.std::__1::__hash_node_base.642"* %64, null
  br i1 %65, label %72, label %66

66:                                               ; preds = %62, %66
  %67 = phi %"struct.std::__1::__hash_node_base.642"* [ %69, %66 ], [ %64, %62 ]
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base.642", %"struct.std::__1::__hash_node_base.642"* %67, i64 0, i32 0
  %69 = load %"struct.std::__1::__hash_node_base.642"*, %"struct.std::__1::__hash_node_base.642"** %68, align 8
  %70 = bitcast %"struct.std::__1::__hash_node_base.642"* %67 to i8*
  tail call void @_ZdlPv(i8* %70) #14
  %71 = icmp eq %"struct.std::__1::__hash_node_base.642"* %69, null
  br i1 %71, label %72, label %66

72:                                               ; preds = %66, %62
  %73 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load %"struct.std::__1::__hash_node_base.642"**, %"struct.std::__1::__hash_node_base.642"*** %73, align 8
  store %"struct.std::__1::__hash_node_base.642"** null, %"struct.std::__1::__hash_node_base.642"*** %73, align 8
  %75 = icmp eq %"struct.std::__1::__hash_node_base.642"** %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %72
  %77 = bitcast %"struct.std::__1::__hash_node_base.642"** %74 to i8*
  tail call void @_ZdlPv(i8* %77) #14
  br label %78

78:                                               ; preds = %72, %76
  %79 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 9, i32 0, i32 1
  store i64 0, i64* %79, align 8
  %80 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 9, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  %82 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 9, i32 2, i32 0, i64 0
  %83 = icmp eq i8* %81, %82
  br i1 %83, label %85, label %84

84:                                               ; preds = %78
  tail call void @free(i8* %81) #13
  br label %85

85:                                               ; preds = %78, %84
  %86 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 8
  %87 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 8, i32 0, i32 1
  %88 = load i64, i64* %87, align 8
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %109, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.spirv_cross::SmallVector.631", %"class.spirv_cross::SmallVector.631"* %86, i64 0, i32 0, i32 0
  br label %92

92:                                               ; preds = %105, %90
  %93 = phi i64 [ %88, %90 ], [ %106, %105 ]
  %94 = phi i64 [ 0, %90 ], [ %107, %105 ]
  %95 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %91, align 8
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %95, i64 %94
  %97 = bitcast %"class.std::__1::basic_string"* %96 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %105

101:                                              ; preds = %92
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %96, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i8*, i8** %102, align 8
  tail call void @_ZdlPv(i8* %103) #14
  %104 = load i64, i64* %87, align 8
  br label %105

105:                                              ; preds = %101, %92
  %106 = phi i64 [ %93, %92 ], [ %104, %101 ]
  %107 = add nuw i64 %94, 1
  %108 = icmp ult i64 %107, %106
  br i1 %108, label %92, label %109

109:                                              ; preds = %105, %85
  store i64 0, i64* %87, align 8
  %110 = getelementptr inbounds %"class.spirv_cross::SmallVector.631", %"class.spirv_cross::SmallVector.631"* %86, i64 0, i32 0, i32 0
  %111 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %110, align 8
  %112 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 8, i32 2
  %113 = bitcast %"class.spirv_cross::AlignedBuffer.633"* %112 to %"class.std::__1::basic_string"*
  %114 = icmp eq %"class.std::__1::basic_string"* %111, %113
  br i1 %114, label %117, label %115

115:                                              ; preds = %109
  %116 = bitcast %"class.std::__1::basic_string"* %111 to i8*
  tail call void @free(i8* %116) #13
  br label %117

117:                                              ; preds = %109, %115
  %118 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 7, i32 0, i32 1
  store i64 0, i64* %118, align 8
  %119 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 7, i32 0, i32 0
  %120 = load i32*, i32** %119, align 8
  %121 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 7, i32 2
  %122 = bitcast %"class.spirv_cross::AlignedBuffer.630"* %121 to i32*
  %123 = icmp eq i32* %120, %122
  br i1 %123, label %126, label %124

124:                                              ; preds = %117
  %125 = bitcast i32* %120 to i8*
  tail call void @free(i8* %125) #13
  br label %126

126:                                              ; preds = %117, %124
  %127 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 6, i32 0, i32 1
  store i64 0, i64* %127, align 8
  %128 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 6, i32 0, i32 0
  %129 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %128, align 8
  %130 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 6, i32 2
  %131 = bitcast %"class.spirv_cross::AlignedBuffer.627"* %130 to %"class.spirv_cross::TypedID"*
  %132 = icmp eq %"class.spirv_cross::TypedID"* %129, %131
  br i1 %132, label %135, label %133

133:                                              ; preds = %126
  %134 = bitcast %"class.spirv_cross::TypedID"* %129 to i8*
  tail call void @free(i8* %134) #13
  br label %135

135:                                              ; preds = %126, %133
  %136 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 5, i32 0, i32 1
  store i64 0, i64* %136, align 8
  %137 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 5, i32 0, i32 0
  %138 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %137, align 8
  %139 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 5, i32 2
  %140 = bitcast %"class.spirv_cross::AlignedBuffer.627"* %139 to %"class.spirv_cross::TypedID"*
  %141 = icmp eq %"class.spirv_cross::TypedID"* %138, %140
  br i1 %141, label %144, label %142

142:                                              ; preds = %135
  %143 = bitcast %"class.spirv_cross::TypedID"* %138 to i8*
  tail call void @free(i8* %143) #13
  br label %144

144:                                              ; preds = %135, %142
  %145 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 13, i32 0, i32 1
  store i64 0, i64* %145, align 8
  %146 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 13, i32 0, i32 0
  %147 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %146, align 8
  %148 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 13, i32 2
  %149 = bitcast %"class.spirv_cross::AlignedBuffer.627"* %148 to %"class.spirv_cross::TypedID"*
  %150 = icmp eq %"class.spirv_cross::TypedID"* %147, %149
  br i1 %150, label %153, label %151

151:                                              ; preds = %144
  %152 = bitcast %"class.spirv_cross::TypedID"* %147 to i8*
  tail call void @free(i8* %152) #13
  br label %153

153:                                              ; preds = %144, %151
  %154 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 12, i32 0, i32 1
  store i64 0, i64* %154, align 8
  %155 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 12, i32 0, i32 0
  %156 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %155, align 8
  %157 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 12, i32 2
  %158 = bitcast %"class.spirv_cross::AlignedBuffer.627"* %157 to %"class.spirv_cross::TypedID"*
  %159 = icmp eq %"class.spirv_cross::TypedID"* %156, %158
  br i1 %159, label %232, label %230

160:                                              ; preds = %340, %160
  %161 = phi %"struct.std::__1::__hash_node_base.603"* [ %163, %160 ], [ %343, %340 ]
  %162 = getelementptr inbounds %"struct.std::__1::__hash_node_base.603", %"struct.std::__1::__hash_node_base.603"* %161, i64 0, i32 0
  %163 = load %"struct.std::__1::__hash_node_base.603"*, %"struct.std::__1::__hash_node_base.603"** %162, align 8
  %164 = getelementptr inbounds %"struct.std::__1::__hash_node_base.603", %"struct.std::__1::__hash_node_base.603"* %161, i64 2
  %165 = bitcast %"struct.std::__1::__hash_node_base.603"* %164 to %"struct.std::__1::pair.1087"*
  tail call void @_ZNSt3__116allocator_traitsINS_9allocatorINS_11__hash_nodeINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS4_5TypesE0EEENS4_4MetaEEEPvEEEEE7destroyINS_4pairIKS7_S8_EEvvEEvRSC_PT_(%"class.std::__1::allocator.613"* dereferenceable(1) %344, %"struct.std::__1::pair.1087"* %165) #13
  %166 = bitcast %"struct.std::__1::__hash_node_base.603"* %161 to i8*
  tail call void @_ZdlPv(i8* %166) #14
  %167 = icmp eq %"struct.std::__1::__hash_node_base.603"* %163, null
  br i1 %167, label %168, label %160

168:                                              ; preds = %160, %340
  %169 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = load %"struct.std::__1::__hash_node_base.603"**, %"struct.std::__1::__hash_node_base.603"*** %169, align 8
  store %"struct.std::__1::__hash_node_base.603"** null, %"struct.std::__1::__hash_node_base.603"*** %169, align 8
  %171 = icmp eq %"struct.std::__1::__hash_node_base.603"** %170, null
  br i1 %171, label %174, label %172

172:                                              ; preds = %168
  %173 = bitcast %"struct.std::__1::__hash_node_base.603"** %170 to i8*
  tail call void @_ZdlPv(i8* %173) #14
  br label %174

174:                                              ; preds = %168, %172
  %175 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 2
  %176 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 2, i32 0, i32 1
  %177 = load i64, i64* %176, align 8
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %206, label %179

179:                                              ; preds = %174
  %180 = getelementptr inbounds %"class.spirv_cross::SmallVector", %"class.spirv_cross::SmallVector"* %175, i64 0, i32 0, i32 0
  br label %181

181:                                              ; preds = %202, %179
  %182 = phi i64 [ %177, %179 ], [ %203, %202 ]
  %183 = phi i64 [ 0, %179 ], [ %204, %202 ]
  %184 = load %"class.spirv_cross::Variant"*, %"class.spirv_cross::Variant"** %180, align 8
  %185 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %184, i64 %183, i32 1
  %186 = load %"struct.spirv_cross::IVariant"*, %"struct.spirv_cross::IVariant"** %185, align 8
  %187 = icmp eq %"struct.spirv_cross::IVariant"* %186, null
  br i1 %187, label %202, label %188

188:                                              ; preds = %181
  %189 = bitcast %"struct.spirv_cross::IVariant"* %186 to i8*
  %190 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %184, i64 %183, i32 0
  %191 = load %"struct.spirv_cross::ObjectPoolGroup"*, %"struct.spirv_cross::ObjectPoolGroup"** %190, align 8
  %192 = getelementptr inbounds %"class.spirv_cross::Variant", %"class.spirv_cross::Variant"* %184, i64 %183, i32 2
  %193 = load i32, i32* %192, align 8
  %194 = zext i32 %193 to i64
  %195 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %191, i64 0, i32 0, i64 %194, i32 0, i32 0, i32 0
  %196 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %195, align 8
  %197 = bitcast %"class.spirv_cross::ObjectPoolBase"* %196 to void (%"class.spirv_cross::ObjectPoolBase"*, i8*)***
  %198 = load void (%"class.spirv_cross::ObjectPoolBase"*, i8*)**, void (%"class.spirv_cross::ObjectPoolBase"*, i8*)*** %197, align 8
  %199 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*, i8*)*, void (%"class.spirv_cross::ObjectPoolBase"*, i8*)** %198, i64 2
  %200 = load void (%"class.spirv_cross::ObjectPoolBase"*, i8*)*, void (%"class.spirv_cross::ObjectPoolBase"*, i8*)** %199, align 8
  tail call void %200(%"class.spirv_cross::ObjectPoolBase"* %196, i8* nonnull %189) #13
  %201 = load i64, i64* %176, align 8
  br label %202

202:                                              ; preds = %188, %181
  %203 = phi i64 [ %182, %181 ], [ %201, %188 ]
  %204 = add nuw i64 %183, 1
  %205 = icmp ult i64 %204, %203
  br i1 %205, label %181, label %206

206:                                              ; preds = %202, %174
  store i64 0, i64* %176, align 8
  %207 = getelementptr inbounds %"class.spirv_cross::SmallVector", %"class.spirv_cross::SmallVector"* %175, i64 0, i32 0, i32 0
  %208 = load %"class.spirv_cross::Variant"*, %"class.spirv_cross::Variant"** %207, align 8
  %209 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 2, i32 2
  %210 = bitcast %"class.spirv_cross::AlignedBuffer"* %209 to %"class.spirv_cross::Variant"*
  %211 = icmp eq %"class.spirv_cross::Variant"* %208, %210
  br i1 %211, label %214, label %212

212:                                              ; preds = %206
  %213 = bitcast %"class.spirv_cross::Variant"* %208 to i8*
  tail call void @free(i8* %213) #13
  br label %214

214:                                              ; preds = %206, %212
  %215 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 1, i32 0, i32 0
  %216 = load i32*, i32** %215, align 8
  %217 = icmp eq i32* %216, null
  br i1 %217, label %223, label %218

218:                                              ; preds = %214
  %219 = ptrtoint i32* %216 to i64
  %220 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 1, i32 0, i32 1
  %221 = bitcast i32** %220 to i64*
  store i64 %219, i64* %221, align 8
  %222 = bitcast i32* %216 to i8*
  tail call void @_ZdlPv(i8* %222) #14
  br label %223

223:                                              ; preds = %214, %218
  %224 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %225 = load %"struct.spirv_cross::ObjectPoolGroup"*, %"struct.spirv_cross::ObjectPoolGroup"** %224, align 8
  store %"struct.spirv_cross::ObjectPoolGroup"* null, %"struct.spirv_cross::ObjectPoolGroup"** %224, align 8
  %226 = icmp eq %"struct.spirv_cross::ObjectPoolGroup"* %225, null
  br i1 %226, label %229, label %227

227:                                              ; preds = %223
  tail call void @_ZN11spirv_cross15ObjectPoolGroupD2Ev(%"struct.spirv_cross::ObjectPoolGroup"* nonnull %225) #13
  %228 = bitcast %"struct.spirv_cross::ObjectPoolGroup"* %225 to i8*
  tail call void @_ZdlPv(i8* %228) #14
  br label %229

229:                                              ; preds = %223, %227
  ret void

230:                                              ; preds = %153
  %231 = bitcast %"class.spirv_cross::TypedID"* %156 to i8*
  tail call void @free(i8* %231) #13
  br label %232

232:                                              ; preds = %230, %153
  %233 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 11, i32 0, i32 1
  store i64 0, i64* %233, align 8
  %234 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 11, i32 0, i32 0
  %235 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %234, align 8
  %236 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 11, i32 2
  %237 = bitcast %"class.spirv_cross::AlignedBuffer.627"* %236 to %"class.spirv_cross::TypedID"*
  %238 = icmp eq %"class.spirv_cross::TypedID"* %235, %237
  br i1 %238, label %241, label %239

239:                                              ; preds = %232
  %240 = bitcast %"class.spirv_cross::TypedID"* %235 to i8*
  tail call void @free(i8* %240) #13
  br label %241

241:                                              ; preds = %239, %232
  %242 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 10, i32 0, i32 1
  store i64 0, i64* %242, align 8
  %243 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 10, i32 0, i32 0
  %244 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %243, align 8
  %245 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 10, i32 2
  %246 = bitcast %"class.spirv_cross::AlignedBuffer.627"* %245 to %"class.spirv_cross::TypedID"*
  %247 = icmp eq %"class.spirv_cross::TypedID"* %244, %246
  br i1 %247, label %250, label %248

248:                                              ; preds = %241
  %249 = bitcast %"class.spirv_cross::TypedID"* %244 to i8*
  tail call void @free(i8* %249) #13
  br label %250

250:                                              ; preds = %248, %241
  %251 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 9, i32 0, i32 1
  store i64 0, i64* %251, align 8
  %252 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 9, i32 0, i32 0
  %253 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %252, align 8
  %254 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 9, i32 2
  %255 = bitcast %"class.spirv_cross::AlignedBuffer.627"* %254 to %"class.spirv_cross::TypedID"*
  %256 = icmp eq %"class.spirv_cross::TypedID"* %253, %255
  br i1 %256, label %259, label %257

257:                                              ; preds = %250
  %258 = bitcast %"class.spirv_cross::TypedID"* %253 to i8*
  tail call void @free(i8* %258) #13
  br label %259

259:                                              ; preds = %257, %250
  %260 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 8, i32 0, i32 1
  store i64 0, i64* %260, align 8
  %261 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 8, i32 0, i32 0
  %262 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %261, align 8
  %263 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 8, i32 2
  %264 = bitcast %"class.spirv_cross::AlignedBuffer.627"* %263 to %"class.spirv_cross::TypedID"*
  %265 = icmp eq %"class.spirv_cross::TypedID"* %262, %264
  br i1 %265, label %268, label %266

266:                                              ; preds = %259
  %267 = bitcast %"class.spirv_cross::TypedID"* %262 to i8*
  tail call void @free(i8* %267) #13
  br label %268

268:                                              ; preds = %266, %259
  %269 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 7, i32 0, i32 1
  store i64 0, i64* %269, align 8
  %270 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 7, i32 0, i32 0
  %271 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %270, align 8
  %272 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 7, i32 2
  %273 = bitcast %"class.spirv_cross::AlignedBuffer.627"* %272 to %"class.spirv_cross::TypedID"*
  %274 = icmp eq %"class.spirv_cross::TypedID"* %271, %273
  br i1 %274, label %277, label %275

275:                                              ; preds = %268
  %276 = bitcast %"class.spirv_cross::TypedID"* %271 to i8*
  tail call void @free(i8* %276) #13
  br label %277

277:                                              ; preds = %275, %268
  %278 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 6, i32 0, i32 1
  store i64 0, i64* %278, align 8
  %279 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 6, i32 0, i32 0
  %280 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %279, align 8
  %281 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 6, i32 2
  %282 = bitcast %"class.spirv_cross::AlignedBuffer.627"* %281 to %"class.spirv_cross::TypedID"*
  %283 = icmp eq %"class.spirv_cross::TypedID"* %280, %282
  br i1 %283, label %286, label %284

284:                                              ; preds = %277
  %285 = bitcast %"class.spirv_cross::TypedID"* %280 to i8*
  tail call void @free(i8* %285) #13
  br label %286

286:                                              ; preds = %284, %277
  %287 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 5, i32 0, i32 1
  store i64 0, i64* %287, align 8
  %288 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 5, i32 0, i32 0
  %289 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %288, align 8
  %290 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 5, i32 2
  %291 = bitcast %"class.spirv_cross::AlignedBuffer.627"* %290 to %"class.spirv_cross::TypedID"*
  %292 = icmp eq %"class.spirv_cross::TypedID"* %289, %291
  br i1 %292, label %295, label %293

293:                                              ; preds = %286
  %294 = bitcast %"class.spirv_cross::TypedID"* %289 to i8*
  tail call void @free(i8* %294) #13
  br label %295

295:                                              ; preds = %293, %286
  %296 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 4, i32 0, i32 1
  store i64 0, i64* %296, align 8
  %297 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 4, i32 0, i32 0
  %298 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %297, align 8
  %299 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 4, i32 2
  %300 = bitcast %"class.spirv_cross::AlignedBuffer.627"* %299 to %"class.spirv_cross::TypedID"*
  %301 = icmp eq %"class.spirv_cross::TypedID"* %298, %300
  br i1 %301, label %304, label %302

302:                                              ; preds = %295
  %303 = bitcast %"class.spirv_cross::TypedID"* %298 to i8*
  tail call void @free(i8* %303) #13
  br label %304

304:                                              ; preds = %302, %295
  %305 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 3, i32 0, i32 1
  store i64 0, i64* %305, align 8
  %306 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 3, i32 0, i32 0
  %307 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %306, align 8
  %308 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 3, i32 2
  %309 = bitcast %"class.spirv_cross::AlignedBuffer.627"* %308 to %"class.spirv_cross::TypedID"*
  %310 = icmp eq %"class.spirv_cross::TypedID"* %307, %309
  br i1 %310, label %313, label %311

311:                                              ; preds = %304
  %312 = bitcast %"class.spirv_cross::TypedID"* %307 to i8*
  tail call void @free(i8* %312) #13
  br label %313

313:                                              ; preds = %311, %304
  %314 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 2, i32 0, i32 1
  store i64 0, i64* %314, align 8
  %315 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 2, i32 0, i32 0
  %316 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %315, align 8
  %317 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 2, i32 2
  %318 = bitcast %"class.spirv_cross::AlignedBuffer.627"* %317 to %"class.spirv_cross::TypedID"*
  %319 = icmp eq %"class.spirv_cross::TypedID"* %316, %318
  br i1 %319, label %322, label %320

320:                                              ; preds = %313
  %321 = bitcast %"class.spirv_cross::TypedID"* %316 to i8*
  tail call void @free(i8* %321) #13
  br label %322

322:                                              ; preds = %320, %313
  %323 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 1, i32 0, i32 1
  store i64 0, i64* %323, align 8
  %324 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 1, i32 0, i32 0
  %325 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %324, align 8
  %326 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 1, i32 2
  %327 = bitcast %"class.spirv_cross::AlignedBuffer.627"* %326 to %"class.spirv_cross::TypedID"*
  %328 = icmp eq %"class.spirv_cross::TypedID"* %325, %327
  br i1 %328, label %331, label %329

329:                                              ; preds = %322
  %330 = bitcast %"class.spirv_cross::TypedID"* %325 to i8*
  tail call void @free(i8* %330) #13
  br label %331

331:                                              ; preds = %329, %322
  %332 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 0, i32 0, i32 1
  store i64 0, i64* %332, align 8
  %333 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 0, i32 0, i32 0
  %334 = load %"class.spirv_cross::TypedID"*, %"class.spirv_cross::TypedID"** %333, align 8
  %335 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 4, i64 0, i32 2
  %336 = bitcast %"class.spirv_cross::AlignedBuffer.627"* %335 to %"class.spirv_cross::TypedID"*
  %337 = icmp eq %"class.spirv_cross::TypedID"* %334, %336
  br i1 %337, label %340, label %338

338:                                              ; preds = %331
  %339 = bitcast %"class.spirv_cross::TypedID"* %334 to i8*
  tail call void @free(i8* %339) #13
  br label %340

340:                                              ; preds = %338, %331
  %341 = getelementptr inbounds %"class.spirv_cross::ParsedIR", %"class.spirv_cross::ParsedIR"* %0, i64 0, i32 3, i32 0, i32 1
  %342 = getelementptr inbounds %"class.std::__1::__compressed_pair.610", %"class.std::__1::__compressed_pair.610"* %341, i64 0, i32 0, i32 0, i32 0
  %343 = load %"struct.std::__1::__hash_node_base.603"*, %"struct.std::__1::__hash_node_base.603"** %342, align 8
  %344 = bitcast %"class.std::__1::__compressed_pair.610"* %341 to %"class.std::__1::allocator.613"*
  %345 = icmp eq %"struct.std::__1::__hash_node_base.603"* %343, null
  br i1 %345, label %168, label %160
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross3CFGD2Ev(%"class.spirv_cross::CFG"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.spirv_cross::CFG", %"class.spirv_cross::CFG"* %0, i64 0, i32 7, i32 0, i32 1
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"class.spirv_cross::CFG", %"class.spirv_cross::CFG"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = getelementptr inbounds %"class.spirv_cross::CFG", %"class.spirv_cross::CFG"* %0, i64 0, i32 7, i32 2
  %6 = bitcast %"class.spirv_cross::AlignedBuffer.694"* %5 to i32*
  %7 = icmp eq i32* %4, %6
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = bitcast i32* %4 to i8*
  tail call void @free(i8* %9) #13
  br label %10

10:                                               ; preds = %1, %8
  %11 = getelementptr inbounds %"class.spirv_cross::CFG", %"class.spirv_cross::CFG"* %0, i64 0, i32 6, i32 0, i32 1
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.spirv_cross::CFG", %"class.spirv_cross::CFG"* %0, i64 0, i32 6, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = getelementptr inbounds %"class.spirv_cross::CFG", %"class.spirv_cross::CFG"* %0, i64 0, i32 6, i32 2
  %15 = bitcast %"class.spirv_cross::AlignedBuffer.694"* %14 to i32*
  %16 = icmp eq i32* %13, %15
  br i1 %16, label %19, label %17

17:                                               ; preds = %10
  %18 = bitcast i32* %13 to i8*
  tail call void @free(i8* %18) #13
  br label %19

19:                                               ; preds = %10, %17
  %20 = getelementptr inbounds %"class.spirv_cross::CFG", %"class.spirv_cross::CFG"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.1049"*, %"struct.std::__1::__hash_node_base.1049"** %20, align 8
  %22 = icmp eq %"struct.std::__1::__hash_node_base.1049"* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %19, %23
  %24 = phi %"struct.std::__1::__hash_node_base.1049"* [ %26, %23 ], [ %21, %19 ]
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1049", %"struct.std::__1::__hash_node_base.1049"* %24, i64 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.1049"*, %"struct.std::__1::__hash_node_base.1049"** %25, align 8
  %27 = bitcast %"struct.std::__1::__hash_node_base.1049"* %24 to i8*
  tail call void @_ZdlPv(i8* %27) #14
  %28 = icmp eq %"struct.std::__1::__hash_node_base.1049"* %26, null
  br i1 %28, label %29, label %23

29:                                               ; preds = %23, %19
  %30 = getelementptr inbounds %"class.spirv_cross::CFG", %"class.spirv_cross::CFG"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.1049"**, %"struct.std::__1::__hash_node_base.1049"*** %30, align 8
  store %"struct.std::__1::__hash_node_base.1049"** null, %"struct.std::__1::__hash_node_base.1049"*** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.1049"** %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = bitcast %"struct.std::__1::__hash_node_base.1049"** %31 to i8*
  tail call void @_ZdlPv(i8* %34) #14
  br label %35

35:                                               ; preds = %29, %33
  %36 = getelementptr inbounds %"class.spirv_cross::CFG", %"class.spirv_cross::CFG"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.865"*, %"struct.std::__1::__hash_node_base.865"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.865"* %37, null
  br i1 %38, label %45, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"struct.std::__1::__hash_node_base.865"* [ %42, %39 ], [ %37, %35 ]
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base.865", %"struct.std::__1::__hash_node_base.865"* %40, i64 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base.865"*, %"struct.std::__1::__hash_node_base.865"** %41, align 8
  %43 = bitcast %"struct.std::__1::__hash_node_base.865"* %40 to i8*
  tail call void @_ZdlPv(i8* %43) #14
  %44 = icmp eq %"struct.std::__1::__hash_node_base.865"* %42, null
  br i1 %44, label %45, label %39

45:                                               ; preds = %39, %35
  %46 = getelementptr inbounds %"class.spirv_cross::CFG", %"class.spirv_cross::CFG"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.865"**, %"struct.std::__1::__hash_node_base.865"*** %46, align 8
  store %"struct.std::__1::__hash_node_base.865"** null, %"struct.std::__1::__hash_node_base.865"*** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.865"** %47, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %45
  %50 = bitcast %"struct.std::__1::__hash_node_base.865"** %47 to i8*
  tail call void @_ZdlPv(i8* %50) #14
  br label %51

51:                                               ; preds = %45, %49
  %52 = getelementptr inbounds %"class.spirv_cross::CFG", %"class.spirv_cross::CFG"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %53 = load %"struct.std::__1::__hash_node_base.1025"*, %"struct.std::__1::__hash_node_base.1025"** %52, align 8
  %54 = icmp eq %"struct.std::__1::__hash_node_base.1025"* %53, null
  br i1 %54, label %72, label %55

55:                                               ; preds = %51, %69
  %56 = phi %"struct.std::__1::__hash_node_base.1025"* [ %58, %69 ], [ %53, %51 ]
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025", %"struct.std::__1::__hash_node_base.1025"* %56, i64 0, i32 0
  %58 = load %"struct.std::__1::__hash_node_base.1025"*, %"struct.std::__1::__hash_node_base.1025"** %57, align 8
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025", %"struct.std::__1::__hash_node_base.1025"* %56, i64 4
  %60 = bitcast %"struct.std::__1::__hash_node_base.1025"* %59 to i64*
  store i64 0, i64* %60, align 8
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025", %"struct.std::__1::__hash_node_base.1025"* %56, i64 3
  %62 = bitcast %"struct.std::__1::__hash_node_base.1025"* %61 to i32**
  %63 = load i32*, i32** %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025", %"struct.std::__1::__hash_node_base.1025"* %56, i64 6
  %65 = bitcast %"struct.std::__1::__hash_node_base.1025"* %64 to i32*
  %66 = icmp eq i32* %63, %65
  br i1 %66, label %69, label %67

67:                                               ; preds = %55
  %68 = bitcast i32* %63 to i8*
  tail call void @free(i8* %68) #13
  br label %69

69:                                               ; preds = %67, %55
  %70 = bitcast %"struct.std::__1::__hash_node_base.1025"* %56 to i8*
  tail call void @_ZdlPv(i8* %70) #14
  %71 = icmp eq %"struct.std::__1::__hash_node_base.1025"* %58, null
  br i1 %71, label %72, label %55

72:                                               ; preds = %69, %51
  %73 = getelementptr inbounds %"class.spirv_cross::CFG", %"class.spirv_cross::CFG"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load %"struct.std::__1::__hash_node_base.1025"**, %"struct.std::__1::__hash_node_base.1025"*** %73, align 8
  store %"struct.std::__1::__hash_node_base.1025"** null, %"struct.std::__1::__hash_node_base.1025"*** %73, align 8
  %75 = icmp eq %"struct.std::__1::__hash_node_base.1025"** %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %72
  %77 = bitcast %"struct.std::__1::__hash_node_base.1025"** %74 to i8*
  tail call void @_ZdlPv(i8* %77) #14
  br label %78

78:                                               ; preds = %72, %76
  %79 = getelementptr inbounds %"class.spirv_cross::CFG", %"class.spirv_cross::CFG"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %80 = load %"struct.std::__1::__hash_node_base.1025"*, %"struct.std::__1::__hash_node_base.1025"** %79, align 8
  %81 = icmp eq %"struct.std::__1::__hash_node_base.1025"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %78, %96
  %83 = phi %"struct.std::__1::__hash_node_base.1025"* [ %85, %96 ], [ %80, %78 ]
  %84 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025", %"struct.std::__1::__hash_node_base.1025"* %83, i64 0, i32 0
  %85 = load %"struct.std::__1::__hash_node_base.1025"*, %"struct.std::__1::__hash_node_base.1025"** %84, align 8
  %86 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025", %"struct.std::__1::__hash_node_base.1025"* %83, i64 4
  %87 = bitcast %"struct.std::__1::__hash_node_base.1025"* %86 to i64*
  store i64 0, i64* %87, align 8
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025", %"struct.std::__1::__hash_node_base.1025"* %83, i64 3
  %89 = bitcast %"struct.std::__1::__hash_node_base.1025"* %88 to i32**
  %90 = load i32*, i32** %89, align 8
  %91 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025", %"struct.std::__1::__hash_node_base.1025"* %83, i64 6
  %92 = bitcast %"struct.std::__1::__hash_node_base.1025"* %91 to i32*
  %93 = icmp eq i32* %90, %92
  br i1 %93, label %96, label %94

94:                                               ; preds = %82
  %95 = bitcast i32* %90 to i8*
  tail call void @free(i8* %95) #13
  br label %96

96:                                               ; preds = %94, %82
  %97 = bitcast %"struct.std::__1::__hash_node_base.1025"* %83 to i8*
  tail call void @_ZdlPv(i8* %97) #14
  %98 = icmp eq %"struct.std::__1::__hash_node_base.1025"* %85, null
  br i1 %98, label %99, label %82

99:                                               ; preds = %96, %78
  %100 = getelementptr inbounds %"class.spirv_cross::CFG", %"class.spirv_cross::CFG"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load %"struct.std::__1::__hash_node_base.1025"**, %"struct.std::__1::__hash_node_base.1025"*** %100, align 8
  store %"struct.std::__1::__hash_node_base.1025"** null, %"struct.std::__1::__hash_node_base.1025"*** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.1025"** %101, null
  br i1 %102, label %105, label %103

103:                                              ; preds = %99
  %104 = bitcast %"struct.std::__1::__hash_node_base.1025"** %101 to i8*
  tail call void @_ZdlPv(i8* %104) #14
  br label %105

105:                                              ; preds = %99, %103
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116allocator_traitsINS_9allocatorINS_11__hash_nodeINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS4_5TypesE4EEENS4_14SPIREntryPointEEEPvEEEEE7destroyINS_4pairIKS7_S8_EEvvEEvRSC_PT_(%"class.std::__1::allocator.679"* dereferenceable(1), %"struct.std::__1::pair.1081"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::pair.1081", %"struct.std::__1::pair.1081"* %1, i64 0, i32 2, i32 5, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.546"*, %"struct.std::__1::__hash_node_base.546"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.546"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2, %6
  %7 = phi %"struct.std::__1::__hash_node_base.546"* [ %9, %6 ], [ %4, %2 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.546", %"struct.std::__1::__hash_node_base.546"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.546"*, %"struct.std::__1::__hash_node_base.546"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base.546"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  %11 = icmp eq %"struct.std::__1::__hash_node_base.546"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %2
  %13 = getelementptr inbounds %"struct.std::__1::pair.1081", %"struct.std::__1::pair.1081"* %1, i64 0, i32 2, i32 5, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.546"**, %"struct.std::__1::__hash_node_base.546"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.546"** null, %"struct.std::__1::__hash_node_base.546"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.546"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base.546"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #14
  br label %18

18:                                               ; preds = %16, %12
  %19 = getelementptr inbounds %"struct.std::__1::pair.1081", %"struct.std::__1::pair.1081"* %1, i64 0, i32 2, i32 4, i32 0, i32 1
  store i64 0, i64* %19, align 8
  %20 = getelementptr inbounds %"struct.std::__1::pair.1081", %"struct.std::__1::pair.1081"* %1, i64 0, i32 2, i32 4, i32 0, i32 0
  %21 = load %"class.spirv_cross::TypedID.701"*, %"class.spirv_cross::TypedID.701"** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::pair.1081", %"struct.std::__1::pair.1081"* %1, i64 0, i32 2, i32 4, i32 2
  %23 = bitcast %"class.spirv_cross::AlignedBuffer.702"* %22 to %"class.spirv_cross::TypedID.701"*
  %24 = icmp eq %"class.spirv_cross::TypedID.701"* %21, %23
  br i1 %24, label %27, label %25

25:                                               ; preds = %18
  %26 = bitcast %"class.spirv_cross::TypedID.701"* %21 to i8*
  tail call void @free(i8* %26) #13
  br label %27

27:                                               ; preds = %25, %18
  %28 = getelementptr inbounds %"struct.std::__1::pair.1081", %"struct.std::__1::pair.1081"* %1, i64 0, i32 2, i32 3
  %29 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  tail call void @_ZdlPv(i8* %35) #14
  br label %36

36:                                               ; preds = %33, %27
  %37 = getelementptr inbounds %"struct.std::__1::pair.1081", %"struct.std::__1::pair.1081"* %1, i64 0, i32 2, i32 2
  %38 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  tail call void @_ZdlPv(i8* %44) #14
  br label %45

45:                                               ; preds = %36, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116allocator_traitsINS_9allocatorINS_11__hash_nodeINS_17__hash_value_typeIN11spirv_cross7TypedIDILNS4_5TypesE0EEENS4_4MetaEEEPvEEEEE7destroyINS_4pairIKS7_S8_EEvvEEvRSC_PT_(%"class.std::__1::allocator.613"* dereferenceable(1), %"struct.std::__1::pair.1087"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::pair.1087", %"struct.std::__1::pair.1087"* %1, i64 0, i32 1, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.865"*, %"struct.std::__1::__hash_node_base.865"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.865"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2, %6
  %7 = phi %"struct.std::__1::__hash_node_base.865"* [ %9, %6 ], [ %4, %2 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.865", %"struct.std::__1::__hash_node_base.865"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.865"*, %"struct.std::__1::__hash_node_base.865"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base.865"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  %11 = icmp eq %"struct.std::__1::__hash_node_base.865"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %2
  %13 = getelementptr inbounds %"struct.std::__1::pair.1087", %"struct.std::__1::pair.1087"* %1, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.865"**, %"struct.std::__1::__hash_node_base.865"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.865"** null, %"struct.std::__1::__hash_node_base.865"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.865"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base.865"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #14
  br label %18

18:                                               ; preds = %16, %12
  %19 = getelementptr inbounds %"struct.std::__1::pair.1087", %"struct.std::__1::pair.1087"* %1, i64 0, i32 1, i32 1
  %20 = getelementptr inbounds %"struct.std::__1::pair.1087", %"struct.std::__1::pair.1087"* %1, i64 0, i32 1, i32 1, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %32, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.spirv_cross::SmallVector.1088", %"class.spirv_cross::SmallVector.1088"* %19, i64 0, i32 0, i32 0
  br label %25

25:                                               ; preds = %25, %23
  %26 = phi i64 [ 0, %23 ], [ %29, %25 ]
  %27 = load %"struct.spirv_cross::Meta::Decoration"*, %"struct.spirv_cross::Meta::Decoration"** %24, align 8
  %28 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %27, i64 %26
  tail call void @_ZN11spirv_cross4Meta10DecorationD2Ev(%"struct.spirv_cross::Meta::Decoration"* %28) #13
  %29 = add nuw i64 %26, 1
  %30 = load i64, i64* %20, align 8
  %31 = icmp ult i64 %29, %30
  br i1 %31, label %25, label %32

32:                                               ; preds = %25, %18
  store i64 0, i64* %20, align 8
  %33 = getelementptr inbounds %"class.spirv_cross::SmallVector.1088", %"class.spirv_cross::SmallVector.1088"* %19, i64 0, i32 0, i32 0
  %34 = load %"struct.spirv_cross::Meta::Decoration"*, %"struct.spirv_cross::Meta::Decoration"** %33, align 8
  %35 = icmp eq %"struct.spirv_cross::Meta::Decoration"* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %32
  %37 = bitcast %"struct.spirv_cross::Meta::Decoration"* %34 to i8*
  tail call void @free(i8* %37) #13
  br label %38

38:                                               ; preds = %32, %36
  %39 = getelementptr inbounds %"struct.std::__1::pair.1087", %"struct.std::__1::pair.1087"* %1, i64 0, i32 1, i32 0
  tail call void @_ZN11spirv_cross4Meta10DecorationD2Ev(%"struct.spirv_cross::Meta::Decoration"* %39) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross4Meta10DecorationD2Ev(%"struct.spirv_cross::Meta::Decoration"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %0, i64 0, i32 20, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.546"*, %"struct.std::__1::__hash_node_base.546"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.546"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.546"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.546", %"struct.std::__1::__hash_node_base.546"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.546"*, %"struct.std::__1::__hash_node_base.546"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.546"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #14
  %10 = icmp eq %"struct.std::__1::__hash_node_base.546"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %0, i64 0, i32 20, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.546"**, %"struct.std::__1::__hash_node_base.546"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.546"** null, %"struct.std::__1::__hash_node_base.546"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.546"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.546"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %0, i64 0, i32 3, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.546"*, %"struct.std::__1::__hash_node_base.546"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.546"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %17, %21
  %22 = phi %"struct.std::__1::__hash_node_base.546"* [ %24, %21 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.546", %"struct.std::__1::__hash_node_base.546"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.546"*, %"struct.std::__1::__hash_node_base.546"** %23, align 8
  %25 = bitcast %"struct.std::__1::__hash_node_base.546"* %22 to i8*
  tail call void @_ZdlPv(i8* %25) #14
  %26 = icmp eq %"struct.std::__1::__hash_node_base.546"* %24, null
  br i1 %26, label %27, label %21

27:                                               ; preds = %21, %17
  %28 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.546"**, %"struct.std::__1::__hash_node_base.546"*** %28, align 8
  store %"struct.std::__1::__hash_node_base.546"** null, %"struct.std::__1::__hash_node_base.546"*** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.546"** %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = bitcast %"struct.std::__1::__hash_node_base.546"** %29 to i8*
  tail call void @_ZdlPv(i8* %32) #14
  br label %33

33:                                               ; preds = %27, %31
  %34 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %0, i64 0, i32 2
  %35 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  tail call void @_ZdlPv(i8* %41) #14
  br label %42

42:                                               ; preds = %33, %39
  %43 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %0, i64 0, i32 1
  %44 = bitcast %"class.std::__1::basic_string"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  tail call void @_ZdlPv(i8* %50) #14
  br label %51

51:                                               ; preds = %42, %48
  %52 = bitcast %"struct.spirv_cross::Meta::Decoration"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"struct.spirv_cross::Meta::Decoration", %"struct.spirv_cross::Meta::Decoration"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  tail call void @_ZdlPv(i8* %58) #14
  br label %59

59:                                               ; preds = %51, %56
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11spirv_cross15ObjectPoolGroupD2Ev(%"struct.spirv_cross::ObjectPoolGroup"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %0, i64 0, i32 0, i64 13, i32 0, i32 0, i32 0
  %3 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %2, align 8
  store %"class.spirv_cross::ObjectPoolBase"* null, %"class.spirv_cross::ObjectPoolBase"** %2, align 8
  %4 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.spirv_cross::ObjectPoolBase"* %3 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %7 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %7, i64 1
  %9 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %8, align 8
  tail call void %9(%"class.spirv_cross::ObjectPoolBase"* nonnull %3) #13
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %0, i64 0, i32 0, i64 12, i32 0, i32 0, i32 0
  %12 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %11, align 8
  store %"class.spirv_cross::ObjectPoolBase"* null, %"class.spirv_cross::ObjectPoolBase"** %11, align 8
  %13 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.spirv_cross::ObjectPoolBase"* %12 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %16 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %16, i64 1
  %18 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %17, align 8
  tail call void %18(%"class.spirv_cross::ObjectPoolBase"* nonnull %12) #13
  br label %19

19:                                               ; preds = %14, %10
  %20 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %0, i64 0, i32 0, i64 11, i32 0, i32 0, i32 0
  %21 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %20, align 8
  store %"class.spirv_cross::ObjectPoolBase"* null, %"class.spirv_cross::ObjectPoolBase"** %20, align 8
  %22 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.spirv_cross::ObjectPoolBase"* %21 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %25 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %25, i64 1
  %27 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %26, align 8
  tail call void %27(%"class.spirv_cross::ObjectPoolBase"* nonnull %21) #13
  br label %28

28:                                               ; preds = %23, %19
  %29 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %0, i64 0, i32 0, i64 10, i32 0, i32 0, i32 0
  %30 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %29, align 8
  store %"class.spirv_cross::ObjectPoolBase"* null, %"class.spirv_cross::ObjectPoolBase"** %29, align 8
  %31 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %28
  %33 = bitcast %"class.spirv_cross::ObjectPoolBase"* %30 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %34 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %34, i64 1
  %36 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %35, align 8
  tail call void %36(%"class.spirv_cross::ObjectPoolBase"* nonnull %30) #13
  br label %37

37:                                               ; preds = %32, %28
  %38 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %0, i64 0, i32 0, i64 9, i32 0, i32 0, i32 0
  %39 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %38, align 8
  store %"class.spirv_cross::ObjectPoolBase"* null, %"class.spirv_cross::ObjectPoolBase"** %38, align 8
  %40 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %37
  %42 = bitcast %"class.spirv_cross::ObjectPoolBase"* %39 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %43 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %43, i64 1
  %45 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %44, align 8
  tail call void %45(%"class.spirv_cross::ObjectPoolBase"* nonnull %39) #13
  br label %46

46:                                               ; preds = %41, %37
  %47 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %0, i64 0, i32 0, i64 8, i32 0, i32 0, i32 0
  %48 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %47, align 8
  store %"class.spirv_cross::ObjectPoolBase"* null, %"class.spirv_cross::ObjectPoolBase"** %47, align 8
  %49 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = bitcast %"class.spirv_cross::ObjectPoolBase"* %48 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %52 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %52, i64 1
  %54 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %53, align 8
  tail call void %54(%"class.spirv_cross::ObjectPoolBase"* nonnull %48) #13
  br label %55

55:                                               ; preds = %50, %46
  %56 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %0, i64 0, i32 0, i64 7, i32 0, i32 0, i32 0
  %57 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %56, align 8
  store %"class.spirv_cross::ObjectPoolBase"* null, %"class.spirv_cross::ObjectPoolBase"** %56, align 8
  %58 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = bitcast %"class.spirv_cross::ObjectPoolBase"* %57 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %61 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %61, i64 1
  %63 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %62, align 8
  tail call void %63(%"class.spirv_cross::ObjectPoolBase"* nonnull %57) #13
  br label %64

64:                                               ; preds = %59, %55
  %65 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %0, i64 0, i32 0, i64 6, i32 0, i32 0, i32 0
  %66 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %65, align 8
  store %"class.spirv_cross::ObjectPoolBase"* null, %"class.spirv_cross::ObjectPoolBase"** %65, align 8
  %67 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %66, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %64
  %69 = bitcast %"class.spirv_cross::ObjectPoolBase"* %66 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %70 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %70, i64 1
  %72 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %71, align 8
  tail call void %72(%"class.spirv_cross::ObjectPoolBase"* nonnull %66) #13
  br label %73

73:                                               ; preds = %68, %64
  %74 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %0, i64 0, i32 0, i64 5, i32 0, i32 0, i32 0
  %75 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %74, align 8
  store %"class.spirv_cross::ObjectPoolBase"* null, %"class.spirv_cross::ObjectPoolBase"** %74, align 8
  %76 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %75, null
  br i1 %76, label %82, label %77

77:                                               ; preds = %73
  %78 = bitcast %"class.spirv_cross::ObjectPoolBase"* %75 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %79 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %79, i64 1
  %81 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %80, align 8
  tail call void %81(%"class.spirv_cross::ObjectPoolBase"* nonnull %75) #13
  br label %82

82:                                               ; preds = %77, %73
  %83 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %0, i64 0, i32 0, i64 4, i32 0, i32 0, i32 0
  %84 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %83, align 8
  store %"class.spirv_cross::ObjectPoolBase"* null, %"class.spirv_cross::ObjectPoolBase"** %83, align 8
  %85 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %84, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %82
  %87 = bitcast %"class.spirv_cross::ObjectPoolBase"* %84 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %88 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %87, align 8
  %89 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %88, i64 1
  %90 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %89, align 8
  tail call void %90(%"class.spirv_cross::ObjectPoolBase"* nonnull %84) #13
  br label %91

91:                                               ; preds = %86, %82
  %92 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %0, i64 0, i32 0, i64 3, i32 0, i32 0, i32 0
  %93 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %92, align 8
  store %"class.spirv_cross::ObjectPoolBase"* null, %"class.spirv_cross::ObjectPoolBase"** %92, align 8
  %94 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %93, null
  br i1 %94, label %100, label %95

95:                                               ; preds = %91
  %96 = bitcast %"class.spirv_cross::ObjectPoolBase"* %93 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %97 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %97, i64 1
  %99 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %98, align 8
  tail call void %99(%"class.spirv_cross::ObjectPoolBase"* nonnull %93) #13
  br label %100

100:                                              ; preds = %95, %91
  %101 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %0, i64 0, i32 0, i64 2, i32 0, i32 0, i32 0
  %102 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %101, align 8
  store %"class.spirv_cross::ObjectPoolBase"* null, %"class.spirv_cross::ObjectPoolBase"** %101, align 8
  %103 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %102, null
  br i1 %103, label %109, label %104

104:                                              ; preds = %100
  %105 = bitcast %"class.spirv_cross::ObjectPoolBase"* %102 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %106 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %105, align 8
  %107 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %106, i64 1
  %108 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %107, align 8
  tail call void %108(%"class.spirv_cross::ObjectPoolBase"* nonnull %102) #13
  br label %109

109:                                              ; preds = %104, %100
  %110 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %0, i64 0, i32 0, i64 1, i32 0, i32 0, i32 0
  %111 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %110, align 8
  store %"class.spirv_cross::ObjectPoolBase"* null, %"class.spirv_cross::ObjectPoolBase"** %110, align 8
  %112 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %111, null
  br i1 %112, label %118, label %113

113:                                              ; preds = %109
  %114 = bitcast %"class.spirv_cross::ObjectPoolBase"* %111 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %115 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %114, align 8
  %116 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %115, i64 1
  %117 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %116, align 8
  tail call void %117(%"class.spirv_cross::ObjectPoolBase"* nonnull %111) #13
  br label %118

118:                                              ; preds = %113, %109
  %119 = getelementptr inbounds %"struct.spirv_cross::ObjectPoolGroup", %"struct.spirv_cross::ObjectPoolGroup"* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i32 0
  %120 = load %"class.spirv_cross::ObjectPoolBase"*, %"class.spirv_cross::ObjectPoolBase"** %119, align 8
  store %"class.spirv_cross::ObjectPoolBase"* null, %"class.spirv_cross::ObjectPoolBase"** %119, align 8
  %121 = icmp eq %"class.spirv_cross::ObjectPoolBase"* %120, null
  br i1 %121, label %127, label %122

122:                                              ; preds = %118
  %123 = bitcast %"class.spirv_cross::ObjectPoolBase"* %120 to void (%"class.spirv_cross::ObjectPoolBase"*)***
  %124 = load void (%"class.spirv_cross::ObjectPoolBase"*)**, void (%"class.spirv_cross::ObjectPoolBase"*)*** %123, align 8
  %125 = getelementptr inbounds void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %124, i64 1
  %126 = load void (%"class.spirv_cross::ObjectPoolBase"*)*, void (%"class.spirv_cross::ObjectPoolBase"*)** %125, align 8
  tail call void %126(%"class.spirv_cross::ObjectPoolBase"* nonnull %120) #13
  br label %127

127:                                              ; preds = %122, %118
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #13
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #13
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #13
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #13
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #13
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #13
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #14
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #13
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #13
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #13
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #5

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #5

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #2

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #2

declare i64 @_ZN6detail11MakePayloadEPKvNS_11PayloadTypeE(i8*, i32) local_unnamed_addr #2

declare void @_ZN4tint9transform5SpirvC1Ev(%"class.tint::transform::Spirv"*) unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"*, i8 signext) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.300"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.300", %"class.std::__1::vector.300"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.300"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.300", %"class.std::__1::vector.300"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #13
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #13
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.300", %"class.std::__1::vector.300"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #14
  %55 = bitcast %"class.std::__1::vector.300"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #13
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.300"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #15
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.300"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #15
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #14
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.300", %"class.std::__1::vector.300"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.300"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #13
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116allocator_traitsINS_9allocatorINS_11__hash_nodeINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS1_IcEEEENS_10unique_ptrIN11dawn_native18EntryPointMetadataENS_14default_deleteISB_EEEEEEPvEEEEE7destroyINS_4pairIKS8_SE_EEvvEEvRSI_PT_(%"class.std::__1::allocator.337"* dereferenceable(1), %"struct.std::__1::pair.1094"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::pair.1094", %"struct.std::__1::pair.1094"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.dawn_native::EntryPointMetadata"*, %"struct.dawn_native::EntryPointMetadata"** %3, align 8
  store %"struct.dawn_native::EntryPointMetadata"* null, %"struct.dawn_native::EntryPointMetadata"** %3, align 8
  %5 = icmp eq %"struct.dawn_native::EntryPointMetadata"* %4, null
  br i1 %5, label %24, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.dawn_native::EntryPointMetadata", %"struct.dawn_native::EntryPointMetadata"* %4, i64 0, i32 0, i32 0, i32 0, i64 3, i32 0
  %8 = getelementptr inbounds %"struct.dawn_native::EntryPointMetadata", %"struct.dawn_native::EntryPointMetadata"* %4, i64 0, i32 0, i32 0, i32 0, i64 3, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjN11dawn_native18EntryPointMetadata17ShaderBindingInfoEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.934"* %7, %"class.std::__1::__tree_node"* %10) #13
  %11 = getelementptr inbounds %"struct.dawn_native::EntryPointMetadata", %"struct.dawn_native::EntryPointMetadata"* %4, i64 0, i32 0, i32 0, i32 0, i64 2, i32 0
  %12 = getelementptr inbounds %"struct.dawn_native::EntryPointMetadata", %"struct.dawn_native::EntryPointMetadata"* %4, i64 0, i32 0, i32 0, i32 0, i64 2, i32 0, i32 1, i32 0, i32 0
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.std::__1::__tree_node"**
  %14 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %13, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjN11dawn_native18EntryPointMetadata17ShaderBindingInfoEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.934"* %11, %"class.std::__1::__tree_node"* %14) #13
  %15 = getelementptr inbounds %"struct.dawn_native::EntryPointMetadata", %"struct.dawn_native::EntryPointMetadata"* %4, i64 0, i32 0, i32 0, i32 0, i64 1, i32 0
  %16 = getelementptr inbounds %"struct.dawn_native::EntryPointMetadata", %"struct.dawn_native::EntryPointMetadata"* %4, i64 0, i32 0, i32 0, i32 0, i64 1, i32 0, i32 1, i32 0, i32 0
  %17 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node"**
  %18 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %17, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjN11dawn_native18EntryPointMetadata17ShaderBindingInfoEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.934"* %15, %"class.std::__1::__tree_node"* %18) #13
  %19 = getelementptr inbounds %"struct.dawn_native::EntryPointMetadata", %"struct.dawn_native::EntryPointMetadata"* %4, i64 0, i32 0, i32 0, i32 0, i64 0, i32 0
  %20 = getelementptr inbounds %"struct.dawn_native::EntryPointMetadata", %"struct.dawn_native::EntryPointMetadata"* %4, i64 0, i32 0, i32 0, i32 0, i64 0, i32 0, i32 1, i32 0, i32 0
  %21 = bitcast %"class.std::__1::__tree_end_node"* %20 to %"class.std::__1::__tree_node"**
  %22 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %21, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjN11dawn_native18EntryPointMetadata17ShaderBindingInfoEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.934"* %19, %"class.std::__1::__tree_node"* %22) #13
  %23 = bitcast %"struct.dawn_native::EntryPointMetadata"* %4 to i8*
  tail call void @_ZdlPv(i8* %23) #14
  br label %24

24:                                               ; preds = %6, %2
  %25 = bitcast %"struct.std::__1::pair.1094"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"struct.std::__1::pair.1094", %"struct.std::__1::pair.1094"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  tail call void @_ZdlPv(i8* %31) #14
  br label %32

32:                                               ; preds = %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIjN11dawn_native18EntryPointMetadata17ShaderBindingInfoEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.934"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjN11dawn_native18EntryPointMetadata17ShaderBindingInfoEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.934"* %0, %"class.std::__1::__tree_node"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjN11dawn_native18EntryPointMetadata17ShaderBindingInfoEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.934"* %0, %"class.std::__1::__tree_node"* %9) #13
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN11dawn_native18EntryPointMetadataENS_14default_deleteISA_EEEEEENS_22__unordered_map_hasherIS7_SE_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SE_SJ_SH_Lb1EEENS5_ISE_EEE13__move_assignERSO_NS_17integral_constantIbLb1EEE(%"class.std::__1::__hash_table.323"*, %"class.std::__1::__hash_table.323"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.323", %"class.std::__1::__hash_table.323"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %60, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__hash_table.323", %"class.std::__1::__hash_table.323"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::__compressed_pair.334", %"class.std::__1::__compressed_pair.334"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.327"*, %"struct.std::__1::__hash_node_base.327"** %8, align 8
  %10 = bitcast %"class.std::__1::__compressed_pair.334"* %7 to %"class.std::__1::allocator.337"*
  %11 = icmp eq %"struct.std::__1::__hash_node_base.327"* %9, null
  br i1 %11, label %20, label %12

12:                                               ; preds = %6, %12
  %13 = phi %"struct.std::__1::__hash_node_base.327"* [ %15, %12 ], [ %9, %6 ]
  %14 = getelementptr inbounds %"struct.std::__1::__hash_node_base.327", %"struct.std::__1::__hash_node_base.327"* %13, i64 0, i32 0
  %15 = load %"struct.std::__1::__hash_node_base.327"*, %"struct.std::__1::__hash_node_base.327"** %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.327", %"struct.std::__1::__hash_node_base.327"* %13, i64 2
  %17 = bitcast %"struct.std::__1::__hash_node_base.327"* %16 to %"struct.std::__1::pair.1094"*
  tail call void @_ZNSt3__116allocator_traitsINS_9allocatorINS_11__hash_nodeINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS1_IcEEEENS_10unique_ptrIN11dawn_native18EntryPointMetadataENS_14default_deleteISB_EEEEEEPvEEEEE7destroyINS_4pairIKS8_SE_EEvvEEvRSI_PT_(%"class.std::__1::allocator.337"* dereferenceable(1) %10, %"struct.std::__1::pair.1094"* %17) #13
  %18 = bitcast %"struct.std::__1::__hash_node_base.327"* %13 to i8*
  tail call void @_ZdlPv(i8* %18) #14
  %19 = icmp eq %"struct.std::__1::__hash_node_base.327"* %15, null
  br i1 %19, label %20, label %12

20:                                               ; preds = %12, %6
  store %"struct.std::__1::__hash_node_base.327"* null, %"struct.std::__1::__hash_node_base.327"** %8, align 8
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.323", %"class.std::__1::__hash_table.323"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %42, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.323", %"class.std::__1::__hash_table.323"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = add i64 %22, -1
  %27 = and i64 %22, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub i64 %22, %27
  br label %43

31:                                               ; preds = %43, %24
  %32 = phi i64 [ 0, %24 ], [ %57, %43 ]
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %31, %34
  %35 = phi i64 [ %39, %34 ], [ %32, %31 ]
  %36 = phi i64 [ %40, %34 ], [ %27, %31 ]
  %37 = load %"struct.std::__1::__hash_node_base.327"**, %"struct.std::__1::__hash_node_base.327"*** %25, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.327"*, %"struct.std::__1::__hash_node_base.327"** %37, i64 %35
  store %"struct.std::__1::__hash_node_base.327"* null, %"struct.std::__1::__hash_node_base.327"** %38, align 8
  %39 = add nuw i64 %35, 1
  %40 = add i64 %36, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !19

42:                                               ; preds = %31, %34, %20
  store i64 0, i64* %3, align 8
  br label %60

43:                                               ; preds = %43, %29
  %44 = phi i64 [ 0, %29 ], [ %57, %43 ]
  %45 = phi i64 [ %30, %29 ], [ %58, %43 ]
  %46 = load %"struct.std::__1::__hash_node_base.327"**, %"struct.std::__1::__hash_node_base.327"*** %25, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.327"*, %"struct.std::__1::__hash_node_base.327"** %46, i64 %44
  store %"struct.std::__1::__hash_node_base.327"* null, %"struct.std::__1::__hash_node_base.327"** %47, align 8
  %48 = or i64 %44, 1
  %49 = load %"struct.std::__1::__hash_node_base.327"**, %"struct.std::__1::__hash_node_base.327"*** %25, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.327"*, %"struct.std::__1::__hash_node_base.327"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.327"* null, %"struct.std::__1::__hash_node_base.327"** %50, align 8
  %51 = or i64 %44, 2
  %52 = load %"struct.std::__1::__hash_node_base.327"**, %"struct.std::__1::__hash_node_base.327"*** %25, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.327"*, %"struct.std::__1::__hash_node_base.327"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.327"* null, %"struct.std::__1::__hash_node_base.327"** %53, align 8
  %54 = or i64 %44, 3
  %55 = load %"struct.std::__1::__hash_node_base.327"**, %"struct.std::__1::__hash_node_base.327"*** %25, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.327"*, %"struct.std::__1::__hash_node_base.327"** %55, i64 %54
  store %"struct.std::__1::__hash_node_base.327"* null, %"struct.std::__1::__hash_node_base.327"** %56, align 8
  %57 = add nuw i64 %44, 4
  %58 = add i64 %45, -4
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %31, label %43

60:                                               ; preds = %2, %42
  %61 = getelementptr inbounds %"class.std::__1::__hash_table.323", %"class.std::__1::__hash_table.323"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %62 = bitcast %"class.std::__1::__hash_table.323"* %1 to i64*
  %63 = load i64, i64* %62, align 8
  store %"struct.std::__1::__hash_node_base.327"** null, %"struct.std::__1::__hash_node_base.327"*** %61, align 8
  %64 = getelementptr inbounds %"class.std::__1::__hash_table.323", %"class.std::__1::__hash_table.323"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %"struct.std::__1::__hash_node_base.327"**, %"struct.std::__1::__hash_node_base.327"*** %64, align 8
  %66 = bitcast %"class.std::__1::__hash_table.323"* %0 to i64*
  store i64 %63, i64* %66, align 8
  %67 = icmp eq %"struct.std::__1::__hash_node_base.327"** %65, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %60
  %69 = bitcast %"struct.std::__1::__hash_node_base.327"** %65 to i8*
  tail call void @_ZdlPv(i8* %69) #14
  br label %70

70:                                               ; preds = %60, %68
  %71 = getelementptr inbounds %"class.std::__1::__hash_table.323", %"class.std::__1::__hash_table.323"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.323", %"class.std::__1::__hash_table.323"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %72, i64* %73, align 8
  store i64 0, i64* %71, align 8
  %74 = getelementptr inbounds %"class.std::__1::__hash_table.323", %"class.std::__1::__hash_table.323"* %1, i64 0, i32 2, i32 0, i32 0
  %75 = load i64, i64* %74, align 8
  store i64 %75, i64* %3, align 8
  %76 = getelementptr inbounds %"class.std::__1::__hash_table.323", %"class.std::__1::__hash_table.323"* %1, i64 0, i32 3, i32 0, i32 0
  %77 = bitcast float* %76 to i32*
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %"class.std::__1::__hash_table.323", %"class.std::__1::__hash_table.323"* %0, i64 0, i32 3, i32 0, i32 0
  %80 = bitcast float* %79 to i32*
  store i32 %78, i32* %80, align 4
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.323", %"class.std::__1::__hash_table.323"* %1, i64 0, i32 1, i32 0, i32 0
  %82 = bitcast %"struct.std::__1::__hash_node_base.327"* %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %"class.std::__1::__hash_table.323", %"class.std::__1::__hash_table.323"* %0, i64 0, i32 1, i32 0, i32 0
  %85 = bitcast %"struct.std::__1::__hash_node_base.327"* %84 to i64*
  store i64 %83, i64* %85, align 8
  %86 = icmp eq i64 %75, 0
  br i1 %86, label %107, label %87

87:                                               ; preds = %70
  %88 = inttoptr i64 %83 to %"struct.std::__1::__hash_node_base.327"*
  %89 = getelementptr inbounds %"struct.std::__1::__hash_node_base.327", %"struct.std::__1::__hash_node_base.327"* %88, i64 1
  %90 = bitcast %"struct.std::__1::__hash_node_base.327"* %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = load i64, i64* %73, align 8
  %93 = tail call i64 @llvm.ctpop.i64(i64 %92) #13, !range !20
  %94 = icmp ugt i64 %93, 1
  br i1 %94, label %98, label %95

95:                                               ; preds = %87
  %96 = add i64 %92, -1
  %97 = and i64 %96, %91
  br label %102

98:                                               ; preds = %87
  %99 = icmp ult i64 %91, %92
  br i1 %99, label %102, label %100

100:                                              ; preds = %98
  %101 = urem i64 %91, %92
  br label %102

102:                                              ; preds = %95, %98, %100
  %103 = phi i64 [ %97, %95 ], [ %101, %100 ], [ %91, %98 ]
  %104 = load %"struct.std::__1::__hash_node_base.327"**, %"struct.std::__1::__hash_node_base.327"*** %64, align 8
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.327"*, %"struct.std::__1::__hash_node_base.327"** %104, i64 %103
  store %"struct.std::__1::__hash_node_base.327"* %84, %"struct.std::__1::__hash_node_base.327"** %105, align 8
  %106 = bitcast %"struct.std::__1::__hash_node_base.327"* %81 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %106, i8 0, i64 16, i1 false)
  br label %107

107:                                              ; preds = %70, %102
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.327"* @_ZNKSt3__112__hash_tableINS_17__hash_value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN11dawn_native18EntryPointMetadataENS_14default_deleteISA_EEEEEENS_22__unordered_map_hasherIS7_SE_NS_4hashIS7_EENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_SE_SJ_SH_Lb1EEENS5_ISE_EEE4findIS7_EENS_21__hash_const_iteratorIPNS_11__hash_nodeISE_PvEEEERKT_(%"class.std::__1::__hash_table.323"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i8* %9, i8* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #13
  %17 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %14, i64 %15) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #13
  %18 = getelementptr inbounds %"class.std::__1::__hash_table.323", %"class.std::__1::__hash_table.323"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %111, label %21

21:                                               ; preds = %2
  %22 = call i64 @llvm.ctpop.i64(i64 %19) #13, !range !20
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, -1
  %26 = and i64 %25, %17
  br label %31

27:                                               ; preds = %21
  %28 = icmp ult i64 %17, %19
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %17, %19
  br label %31

31:                                               ; preds = %24, %27, %29
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %17, %27 ]
  %33 = getelementptr inbounds %"class.std::__1::__hash_table.323", %"class.std::__1::__hash_table.323"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.327"**, %"struct.std::__1::__hash_node_base.327"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.327"*, %"struct.std::__1::__hash_node_base.327"** %34, i64 %32
  %36 = load %"struct.std::__1::__hash_node_base.327"*, %"struct.std::__1::__hash_node_base.327"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.327"* %36, null
  br i1 %37, label %111, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.327", %"struct.std::__1::__hash_node_base.327"* %36, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base.327"*, %"struct.std::__1::__hash_node_base.327"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.327"* %40, null
  br i1 %41, label %111, label %42

42:                                               ; preds = %38
  %43 = add i64 %19, -1
  %44 = load i8, i8* %5, align 1
  %45 = icmp slt i8 %44, 0
  %46 = load i64, i64* %10, align 8
  %47 = zext i8 %44 to i64
  %48 = select i1 %45, i64 %46, i64 %47
  %49 = load i8*, i8** %8, align 8
  %50 = select i1 %45, i8* %49, i8* %12
  %51 = icmp eq i64 %48, 0
  br label %52

52:                                               ; preds = %42, %107
  %53 = phi %"struct.std::__1::__hash_node_base.327"* [ %40, %42 ], [ %109, %107 ]
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.327", %"struct.std::__1::__hash_node_base.327"* %53, i64 1
  %55 = bitcast %"struct.std::__1::__hash_node_base.327"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %17, %56
  br i1 %57, label %68, label %58

58:                                               ; preds = %52
  br i1 %23, label %61, label %59

59:                                               ; preds = %58
  %60 = and i64 %56, %43
  br label %65

61:                                               ; preds = %58
  %62 = icmp ult i64 %56, %19
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = urem i64 %56, %19
  br label %65

65:                                               ; preds = %59, %61, %63
  %66 = phi i64 [ %60, %59 ], [ %64, %63 ], [ %56, %61 ]
  %67 = icmp eq i64 %66, %32
  br i1 %67, label %107, label %111

68:                                               ; preds = %52
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.327", %"struct.std::__1::__hash_node_base.327"* %53, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base.327"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.327", %"struct.std::__1::__hash_node_base.327"* %53, i64 3
  %75 = bitcast %"struct.std::__1::__hash_node_base.327"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = zext i8 %72 to i64
  %78 = select i1 %73, i64 %76, i64 %77
  %79 = icmp eq i64 %78, %48
  br i1 %79, label %80, label %107

80:                                               ; preds = %68
  %81 = bitcast %"struct.std::__1::__hash_node_base.327"* %69 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = bitcast %"struct.std::__1::__hash_node_base.327"* %69 to i8*
  %84 = select i1 %73, i8* %82, i8* %83
  br i1 %73, label %91, label %85

85:                                               ; preds = %80
  br i1 %51, label %111, label %86

86:                                               ; preds = %85
  %87 = ptrtoint i8* %82 to i64
  %88 = trunc i64 %87 to i8
  %89 = load i8, i8* %50, align 1
  %90 = icmp eq i8 %89, %88
  br i1 %90, label %92, label %107

91:                                               ; preds = %80
  br i1 %51, label %111, label %104

92:                                               ; preds = %86, %99
  %93 = phi i64 [ %96, %99 ], [ %77, %86 ]
  %94 = phi i8* [ %97, %99 ], [ %83, %86 ]
  %95 = phi i8* [ %100, %99 ], [ %50, %86 ]
  %96 = add i64 %93, -1
  %97 = getelementptr inbounds i8, i8* %94, i64 1
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %111, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds i8, i8* %95, i64 1
  %101 = load i8, i8* %97, align 1
  %102 = load i8, i8* %100, align 1
  %103 = icmp eq i8 %101, %102
  br i1 %103, label %92, label %107

104:                                              ; preds = %91
  %105 = call i32 @bcmp(i8* %84, i8* %50, i64 %48) #13
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %99, %86, %68, %65, %104
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base.327", %"struct.std::__1::__hash_node_base.327"* %53, i64 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base.327"*, %"struct.std::__1::__hash_node_base.327"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.327"* %109, null
  br i1 %110, label %111, label %52

111:                                              ; preds = %104, %107, %65, %91, %85, %92, %38, %2, %31
  %112 = phi %"struct.std::__1::__hash_node_base.327"* [ null, %31 ], [ null, %2 ], [ null, %38 ], [ %53, %92 ], [ %53, %104 ], [ null, %107 ], [ null, %65 ], [ %53, %91 ], [ %53, %85 ]
  ret %"struct.std::__1::__hash_node_base.327"* %112
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #6 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %50

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2)
  br label %329

9:                                                ; preds = %5
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = mul i64 %11, -5435081209227447693
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = mul i64 %19, -7286425919675154353
  %21 = getelementptr inbounds i8, i8* %16, i64 -16
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = mul i64 %23, -4348849565147123417
  %25 = sub i64 %12, %15
  %26 = lshr i64 %25, 43
  %27 = shl i64 %25, 21
  %28 = or i64 %27, %26
  %29 = lshr i64 %20, 30
  %30 = mul i64 %19, -4737503975807385600
  %31 = or i64 %29, %30
  %32 = add i64 %24, %28
  %33 = add i64 %32, %31
  %34 = xor i64 %15, -3942382747735136937
  %35 = lshr i64 %34, 20
  %36 = shl i64 %34, 44
  %37 = or i64 %36, %35
  %38 = add i64 %12, %2
  %39 = sub i64 %38, %20
  %40 = add i64 %39, %37
  %41 = xor i64 %33, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %329

50:                                               ; preds = %3
  %51 = icmp ult i64 %2, 65
  br i1 %51, label %52, label %132

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %1, i64 24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast i8* %1 to i64*
  %57 = load i64, i64* %56, align 1
  %58 = getelementptr inbounds i8, i8* %1, i64 %2
  %59 = getelementptr inbounds i8, i8* %58, i64 -16
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 1
  %62 = add i64 %61, %2
  %63 = mul i64 %62, -4348849565147123417
  %64 = add i64 %63, %57
  %65 = add i64 %64, %55
  %66 = lshr i64 %65, 52
  %67 = shl i64 %65, 12
  %68 = or i64 %67, %66
  %69 = lshr i64 %64, 37
  %70 = shl i64 %64, 27
  %71 = or i64 %70, %69
  %72 = getelementptr inbounds i8, i8* %1, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 1
  %75 = add i64 %64, %74
  %76 = lshr i64 %75, 7
  %77 = shl i64 %75, 57
  %78 = or i64 %77, %76
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = add i64 %75, %81
  %83 = lshr i64 %82, 31
  %84 = shl i64 %82, 33
  %85 = or i64 %84, %83
  %86 = add i64 %78, %71
  %87 = add i64 %86, %68
  %88 = add i64 %87, %85
  %89 = getelementptr inbounds i8, i8* %58, i64 -32
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 1
  %92 = add i64 %91, %81
  %93 = getelementptr inbounds i8, i8* %58, i64 -8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 1
  %96 = add i64 %95, %55
  %97 = add i64 %96, %92
  %98 = lshr i64 %97, 52
  %99 = shl i64 %97, 12
  %100 = or i64 %99, %98
  %101 = lshr i64 %92, 37
  %102 = shl i64 %92, 27
  %103 = or i64 %102, %101
  %104 = getelementptr inbounds i8, i8* %58, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = add i64 %106, %92
  %108 = lshr i64 %107, 7
  %109 = shl i64 %107, 57
  %110 = or i64 %109, %108
  %111 = add i64 %107, %61
  %112 = add i64 %111, %96
  %113 = lshr i64 %111, 31
  %114 = shl i64 %111, 33
  %115 = or i64 %114, %113
  %116 = add i64 %82, %55
  %117 = add i64 %116, %103
  %118 = add i64 %117, %110
  %119 = add i64 %118, %100
  %120 = add i64 %119, %115
  %121 = mul i64 %120, -7286425919675154353
  %122 = add i64 %112, %88
  %123 = mul i64 %122, -4348849565147123417
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 47
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, -4348849565147123417
  %128 = add i64 %127, %88
  %129 = lshr i64 %128, 47
  %130 = xor i64 %129, %128
  %131 = mul i64 %130, -7286425919675154353
  br label %329

132:                                              ; preds = %50
  %133 = getelementptr inbounds i8, i8* %1, i64 %2
  %134 = getelementptr inbounds i8, i8* %133, i64 -40
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 1
  %137 = getelementptr inbounds i8, i8* %133, i64 -16
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 1
  %140 = getelementptr inbounds i8, i8* %133, i64 -56
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 1
  %143 = add i64 %142, %139
  %144 = getelementptr inbounds i8, i8* %133, i64 -48
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 1
  %147 = add i64 %146, %2
  %148 = getelementptr inbounds i8, i8* %133, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 1
  %151 = xor i64 %150, %147
  %152 = mul i64 %151, -7070675565921424023
  %153 = lshr i64 %152, 47
  %154 = xor i64 %152, %150
  %155 = xor i64 %154, %153
  %156 = mul i64 %155, -7070675565921424023
  %157 = lshr i64 %156, 47
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, -7070675565921424023
  %160 = getelementptr inbounds i8, i8* %133, i64 -64
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 1
  %163 = add i64 %162, %2
  %164 = add i64 %136, %163
  %165 = add i64 %164, %159
  %166 = lshr i64 %165, 21
  %167 = shl i64 %165, 43
  %168 = or i64 %167, %166
  %169 = add i64 %163, %142
  %170 = add i64 %169, %146
  %171 = lshr i64 %170, 44
  %172 = shl i64 %170, 20
  %173 = or i64 %172, %171
  %174 = add i64 %170, %136
  %175 = add i64 %173, %163
  %176 = add i64 %175, %168
  %177 = getelementptr inbounds i8, i8* %133, i64 -32
  %178 = add i64 %143, -5435081209227447693
  %179 = bitcast i8* %177 to i64*
  %180 = load i64, i64* %179, align 1
  %181 = getelementptr inbounds i8, i8* %177, i64 24
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 1
  %184 = add i64 %178, %180
  %185 = add i64 %184, %136
  %186 = add i64 %185, %183
  %187 = lshr i64 %186, 21
  %188 = shl i64 %186, 43
  %189 = or i64 %188, %187
  %190 = add i64 %184, %150
  %191 = add i64 %190, %139
  %192 = lshr i64 %191, 44
  %193 = shl i64 %191, 20
  %194 = or i64 %193, %192
  %195 = add i64 %191, %183
  %196 = add i64 %194, %184
  %197 = add i64 %196, %189
  %198 = mul i64 %136, -5435081209227447693
  %199 = bitcast i8* %1 to i64*
  %200 = load i64, i64* %199, align 1
  %201 = add i64 %200, %198
  %202 = add i64 %2, -1
  %203 = and i64 %202, -64
  br label %204

204:                                              ; preds = %292, %132
  %205 = phi i64 [ %200, %132 ], [ %294, %292 ]
  %206 = phi i64 [ %197, %132 ], [ %288, %292 ]
  %207 = phi i64 [ %195, %132 ], [ %286, %292 ]
  %208 = phi i64 [ %174, %132 ], [ %264, %292 ]
  %209 = phi i64 [ %176, %132 ], [ %266, %292 ]
  %210 = phi i64 [ %159, %132 ], [ %234, %292 ]
  %211 = phi i64 [ %201, %132 ], [ %244, %292 ]
  %212 = phi i64 [ %203, %132 ], [ %290, %292 ]
  %213 = phi i8* [ %1, %132 ], [ %289, %292 ]
  %214 = phi i64 [ %143, %132 ], [ %239, %292 ]
  %215 = getelementptr inbounds i8, i8* %213, i64 8
  %216 = bitcast i8* %215 to i64*
  %217 = load i64, i64* %216, align 1
  %218 = add i64 %211, %208
  %219 = add i64 %218, %214
  %220 = add i64 %219, %217
  %221 = lshr i64 %220, 37
  %222 = shl i64 %220, 27
  %223 = or i64 %222, %221
  %224 = mul i64 %223, -5435081209227447693
  %225 = add i64 %214, %209
  %226 = getelementptr inbounds i8, i8* %213, i64 48
  %227 = bitcast i8* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = add i64 %225, %228
  %230 = lshr i64 %229, 42
  %231 = shl i64 %229, 22
  %232 = or i64 %231, %230
  %233 = mul i64 %232, -5435081209227447693
  %234 = xor i64 %224, %206
  %235 = getelementptr inbounds i8, i8* %213, i64 40
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 1
  %238 = add i64 %237, %208
  %239 = add i64 %238, %233
  %240 = add i64 %210, %207
  %241 = lshr i64 %240, 33
  %242 = shl i64 %240, 31
  %243 = or i64 %242, %241
  %244 = mul i64 %243, -5435081209227447693
  %245 = mul i64 %209, -5435081209227447693
  %246 = getelementptr inbounds i8, i8* %213, i64 16
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = getelementptr inbounds i8, i8* %213, i64 24
  %250 = bitcast i8* %249 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = add i64 %205, %245
  %253 = add i64 %252, %207
  %254 = add i64 %253, %251
  %255 = add i64 %254, %234
  %256 = lshr i64 %255, 21
  %257 = shl i64 %255, 43
  %258 = or i64 %257, %256
  %259 = add i64 %252, %217
  %260 = add i64 %259, %248
  %261 = lshr i64 %260, 44
  %262 = shl i64 %260, 20
  %263 = or i64 %262, %261
  %264 = add i64 %260, %251
  %265 = add i64 %263, %252
  %266 = add i64 %265, %258
  %267 = getelementptr inbounds i8, i8* %213, i64 32
  %268 = add i64 %244, %206
  %269 = add i64 %239, %248
  %270 = bitcast i8* %267 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = getelementptr inbounds i8, i8* %213, i64 56
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 1
  %275 = add i64 %268, %271
  %276 = add i64 %269, %275
  %277 = add i64 %276, %274
  %278 = lshr i64 %277, 21
  %279 = shl i64 %277, 43
  %280 = or i64 %279, %278
  %281 = add i64 %275, %237
  %282 = add i64 %281, %228
  %283 = lshr i64 %282, 44
  %284 = shl i64 %282, 20
  %285 = or i64 %284, %283
  %286 = add i64 %282, %274
  %287 = add i64 %285, %275
  %288 = add i64 %287, %280
  %289 = getelementptr inbounds i8, i8* %213, i64 64
  %290 = add i64 %212, -64
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %204
  %293 = bitcast i8* %289 to i64*
  %294 = load i64, i64* %293, align 1
  br label %204

295:                                              ; preds = %204
  %296 = xor i64 %286, %264
  %297 = mul i64 %296, -7070675565921424023
  %298 = lshr i64 %297, 47
  %299 = xor i64 %297, %286
  %300 = xor i64 %299, %298
  %301 = mul i64 %300, -7070675565921424023
  %302 = lshr i64 %301, 47
  %303 = xor i64 %302, %301
  %304 = mul i64 %303, -7070675565921424023
  %305 = lshr i64 %239, 47
  %306 = xor i64 %305, %239
  %307 = mul i64 %306, -5435081209227447693
  %308 = add i64 %307, %234
  %309 = add i64 %308, %304
  %310 = xor i64 %288, %266
  %311 = mul i64 %310, -7070675565921424023
  %312 = lshr i64 %311, 47
  %313 = xor i64 %311, %288
  %314 = xor i64 %313, %312
  %315 = mul i64 %314, -7070675565921424023
  %316 = lshr i64 %315, 47
  %317 = xor i64 %316, %315
  %318 = mul i64 %317, -7070675565921424023
  %319 = add i64 %318, %244
  %320 = xor i64 %319, %309
  %321 = mul i64 %320, -7070675565921424023
  %322 = lshr i64 %321, 47
  %323 = xor i64 %321, %319
  %324 = xor i64 %323, %322
  %325 = mul i64 %324, -7070675565921424023
  %326 = lshr i64 %325, 47
  %327 = xor i64 %326, %325
  %328 = mul i64 %327, -7070675565921424023
  br label %329

329:                                              ; preds = %295, %52, %9, %7
  %330 = phi i64 [ %8, %7 ], [ %49, %9 ], [ %131, %52 ], [ %328, %295 ]
  ret i64 %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

declare i32 @_Z11ScanForwardj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* noalias sret, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*) local_unnamed_addr #0 comdat {
  %5 = bitcast %"class.std::__1::__bit_iterator"* %2 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::__bit_iterator"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = shl i64 %9, 3
  %11 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %2, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = add nsw i64 %10, %13
  %15 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %18, 0
  %20 = inttoptr i64 %8 to i64*
  br i1 %19, label %21, label %185

21:                                               ; preds = %4
  %22 = icmp eq i32 %16, 0
  br i1 %22, label %93, label %23

23:                                               ; preds = %21
  %24 = sub i32 64, %16
  %25 = zext i32 %24 to i64
  %26 = icmp slt i64 %18, %25
  %27 = select i1 %26, i64 %18, i64 %25
  %28 = sub nsw i64 %18, %27
  %29 = shl i64 -1, %17
  %30 = sub nsw i64 %25, %27
  %31 = lshr i64 -1, %30
  %32 = and i64 %31, %29
  %33 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %34 = load i64, i64* %20, align 8
  %35 = and i64 %32, %34
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = sub i32 64, %37
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %27, %39
  %41 = select i1 %40, i64 %39, i64 %27
  %42 = zext i32 %37 to i64
  %43 = shl i64 -1, %42
  %44 = sub nsw i64 %39, %41
  %45 = lshr i64 -1, %44
  %46 = and i64 %45, %43
  %47 = xor i64 %46, -1
  %48 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, %47
  store i64 %51, i64* %49, align 8
  %52 = load i32, i32* %36, align 8
  %53 = load i32, i32* %15, align 8
  %54 = icmp ugt i32 %52, %53
  %55 = sub i32 %53, %52
  %56 = zext i32 %55 to i64
  %57 = lshr i64 %35, %56
  %58 = sub i32 %52, %53
  %59 = zext i32 %58 to i64
  %60 = shl i64 %35, %59
  %61 = select i1 %54, i64 %60, i64 %57
  %62 = load i64*, i64** %48, align 8
  %63 = load i64, i64* %62, align 8
  %64 = or i64 %63, %61
  store i64 %64, i64* %62, align 8
  %65 = load i32, i32* %36, align 8
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %41, %66
  %68 = lshr i64 %67, 6
  %69 = load i64*, i64** %48, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 %68
  store i64* %70, i64** %48, align 8
  %71 = trunc i64 %41 to i32
  %72 = add i32 %65, %71
  %73 = and i32 %72, 63
  store i32 %73, i32* %36, align 8
  %74 = sub i64 %27, %41
  %75 = icmp sgt i64 %74, 0
  br i1 %75, label %76, label %90

76:                                               ; preds = %23
  %77 = sub nsw i64 64, %74
  %78 = lshr i64 -1, %77
  %79 = xor i64 %78, -1
  %80 = load i64, i64* %70, align 8
  %81 = and i64 %80, %79
  store i64 %81, i64* %70, align 8
  %82 = load i32, i32* %15, align 8
  %83 = zext i32 %82 to i64
  %84 = add nuw nsw i64 %41, %83
  %85 = lshr i64 %35, %84
  %86 = load i64*, i64** %48, align 8
  %87 = load i64, i64* %86, align 8
  %88 = or i64 %85, %87
  store i64 %88, i64* %86, align 8
  %89 = trunc i64 %74 to i32
  store i32 %89, i32* %36, align 8
  br label %90

90:                                               ; preds = %76, %23
  %91 = load i64*, i64** %33, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 1
  store i64* %92, i64** %33, align 8
  br label %93

93:                                               ; preds = %21, %90
  %94 = phi i64* [ %20, %21 ], [ %92, %90 ]
  %95 = phi i64 [ %18, %21 ], [ %28, %90 ]
  %96 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = sub i32 64, %97
  %99 = zext i32 %97 to i64
  %100 = shl i64 -1, %99
  %101 = icmp sgt i64 %95, 63
  br i1 %101, label %102, label %134

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %104 = xor i64 %100, -1
  %105 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %106 = zext i32 %98 to i64
  br label %107

107:                                              ; preds = %102, %107
  %108 = phi i64* [ %94, %102 ], [ %130, %107 ]
  %109 = phi i64 [ %95, %102 ], [ %128, %107 ]
  %110 = load i64, i64* %108, align 8
  %111 = load i64*, i64** %105, align 8
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, %104
  store i64 %113, i64* %111, align 8
  %114 = load i32, i32* %96, align 8
  %115 = zext i32 %114 to i64
  %116 = shl i64 %110, %115
  %117 = load i64*, i64** %105, align 8
  %118 = load i64, i64* %117, align 8
  %119 = or i64 %118, %116
  store i64 %119, i64* %117, align 8
  %120 = load i64*, i64** %105, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 1
  store i64* %121, i64** %105, align 8
  %122 = load i64, i64* %121, align 8
  %123 = and i64 %122, %100
  store i64 %123, i64* %121, align 8
  %124 = lshr i64 %110, %106
  %125 = load i64*, i64** %105, align 8
  %126 = load i64, i64* %125, align 8
  %127 = or i64 %126, %124
  store i64 %127, i64* %125, align 8
  %128 = add nsw i64 %109, -64
  %129 = load i64*, i64** %103, align 8
  %130 = getelementptr inbounds i64, i64* %129, i64 1
  store i64* %130, i64** %103, align 8
  %131 = icmp sgt i64 %128, 63
  br i1 %131, label %107, label %132

132:                                              ; preds = %107
  %133 = and i64 %95, 63
  br label %134

134:                                              ; preds = %132, %93
  %135 = phi i64* [ %94, %93 ], [ %130, %132 ]
  %136 = phi i64 [ %95, %93 ], [ %133, %132 ]
  %137 = icmp sgt i64 %136, 0
  br i1 %137, label %138, label %185

138:                                              ; preds = %134
  %139 = sub nuw nsw i64 64, %136
  %140 = lshr i64 -1, %139
  %141 = load i64, i64* %135, align 8
  %142 = and i64 %141, %140
  %143 = zext i32 %98 to i64
  %144 = icmp sgt i64 %136, %143
  %145 = select i1 %144, i64 %143, i64 %136
  %146 = load i32, i32* %96, align 8
  %147 = zext i32 %146 to i64
  %148 = shl i64 -1, %147
  %149 = sub nsw i64 %143, %145
  %150 = lshr i64 -1, %149
  %151 = and i64 %148, %150
  %152 = xor i64 %151, -1
  %153 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %154 = load i64*, i64** %153, align 8
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, %152
  store i64 %156, i64* %154, align 8
  %157 = load i32, i32* %96, align 8
  %158 = zext i32 %157 to i64
  %159 = shl i64 %142, %158
  %160 = load i64*, i64** %153, align 8
  %161 = load i64, i64* %160, align 8
  %162 = or i64 %161, %159
  store i64 %162, i64* %160, align 8
  %163 = load i32, i32* %96, align 8
  %164 = zext i32 %163 to i64
  %165 = add nuw nsw i64 %145, %164
  %166 = lshr i64 %165, 6
  %167 = load i64*, i64** %153, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 %166
  store i64* %168, i64** %153, align 8
  %169 = trunc i64 %145 to i32
  %170 = add i32 %163, %169
  %171 = and i32 %170, 63
  store i32 %171, i32* %96, align 8
  %172 = sub nsw i64 %136, %145
  %173 = icmp sgt i64 %172, 0
  br i1 %173, label %174, label %185

174:                                              ; preds = %138
  %175 = sub nuw nsw i64 64, %172
  %176 = lshr i64 -1, %175
  %177 = xor i64 %176, -1
  %178 = load i64, i64* %168, align 8
  %179 = and i64 %178, %177
  store i64 %179, i64* %168, align 8
  %180 = lshr i64 %142, %145
  %181 = load i64*, i64** %153, align 8
  %182 = load i64, i64* %181, align 8
  %183 = or i64 %182, %180
  store i64 %183, i64* %181, align 8
  %184 = trunc i64 %172 to i32
  store i32 %184, i32* %96, align 8
  br label %185

185:                                              ; preds = %134, %174, %138, %4
  %186 = bitcast %"class.std::__1::__bit_iterator"* %3 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = bitcast %"class.std::__1::__bit_iterator"* %0 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %0, i64 0, i32 1
  %190 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %191 = load i32, i32* %190, align 8
  store i32 %191, i32* %189, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN11dawn_native16ShaderModuleBaseD2Ev(%"class.dawn_native::ShaderModuleBase"*) unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #11

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nofree nounwind readonly }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN4ityp13IterateBitSetERKNS_6bitsetIjLm4EEE: argument 0"}
!7 = distinct !{!7, !"_ZN4ityp13IterateBitSetERKNS_6bitsetIjLm4EEE"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK14BitSetIteratorILm4EjE5beginEv: argument 0"}
!10 = distinct !{!10, !"_ZNK14BitSetIteratorILm4EjE5beginEv"}
!11 = !{!12, !9}
!12 = distinct !{!12, !13, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!16 = distinct !{!16, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!17 = distinct !{!17, !18}
!18 = !{!"llvm.loop.unroll.disable"}
!19 = distinct !{!19, !18}
!20 = !{i64 0, i64 65}
