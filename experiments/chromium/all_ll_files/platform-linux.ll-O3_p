; ModuleID = '../../v8/src/base/platform/platform-linux.cc'
source_filename = "../../v8/src/base/platform/platform-linux.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::base::TimezoneCache" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.v8::base::OS::SharedLibraryAddress"*, %"struct.v8::base::OS::SharedLibraryAddress"*, %"class.std::__1::__compressed_pair.1" }
%"struct.v8::base::OS::SharedLibraryAddress" = type { %"class.std::__1::basic_string", i64, i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.v8::base::OS::SharedLibraryAddress"* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN2v84base2OS20SharedLibraryAddressENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_ = comdat any

@.str = private unnamed_addr constant [16 x i8] c"/proc/self/maps\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"%lx-%lx\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c" %c%c%c%c\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"%lx\00", align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"%08lx-%08lx\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"w+\00", align 1
@.str.7 = private unnamed_addr constant [19 x i8] c"Failed to open %s\0A\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.9 = private unnamed_addr constant [17 x i8] c"Free(addr, size)\00", align 1
@_ZTVN2v84base25PosixDefaultTimezoneCacheE = external unnamed_addr constant { [8 x i8*] }, align 8

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias nonnull %"class.v8::base::TimezoneCache"* @_ZN2v84base2OS19CreateTimezoneCacheEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i8* @_Znwm(i64 8) #12
  %2 = bitcast i8* %1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v84base25PosixDefaultTimezoneCacheE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = bitcast i8* %1 to %"class.v8::base::TimezoneCache"*
  ret %"class.v8::base::TimezoneCache"* %3
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v84base2OS25GetSharedLibraryAddressesEv(%"class.std::__1::vector"* noalias sret) local_unnamed_addr #3 align 2 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca %"struct.v8::base::OS::SharedLibraryAddress", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #13
  %12 = tail call %struct._IO_FILE* @fopen64(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  %13 = icmp eq %struct._IO_FILE* %12, null
  br i1 %13, label %127, label %14

14:                                               ; preds = %1
  %15 = tail call noalias i8* @malloc(i64 4097) #13
  %16 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  %18 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #13
  %19 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* nonnull %12, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i64* nonnull %2, i64* nonnull %3) #13
  %20 = icmp eq i32 %19, 2
  br i1 %20, label %21, label %125

21:                                               ; preds = %14
  %22 = bitcast %"struct.v8::base::OS::SharedLibraryAddress"* %9 to i8*
  %23 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = getelementptr inbounds %"struct.v8::base::OS::SharedLibraryAddress", %"struct.v8::base::OS::SharedLibraryAddress"* %9, i64 0, i32 0
  %30 = getelementptr inbounds %"struct.v8::base::OS::SharedLibraryAddress", %"struct.v8::base::OS::SharedLibraryAddress"* %9, i64 0, i32 1
  %31 = getelementptr inbounds %"struct.v8::base::OS::SharedLibraryAddress", %"struct.v8::base::OS::SharedLibraryAddress"* %9, i64 0, i32 2
  %32 = getelementptr inbounds %"struct.v8::base::OS::SharedLibraryAddress", %"struct.v8::base::OS::SharedLibraryAddress"* %9, i64 0, i32 3
  %33 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %35 = bitcast i64* %30 to i8*
  %36 = bitcast %"struct.v8::base::OS::SharedLibraryAddress"** %33 to i64*
  %37 = bitcast %"struct.v8::base::OS::SharedLibraryAddress"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = getelementptr inbounds %"struct.v8::base::OS::SharedLibraryAddress", %"struct.v8::base::OS::SharedLibraryAddress"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %40

40:                                               ; preds = %21, %122
  %41 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* nonnull %12, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %5, i8* nonnull %6, i8* nonnull %7, i8* nonnull %8) #13
  %42 = icmp eq i32 %41, 4
  br i1 %42, label %43, label %125

43:                                               ; preds = %40
  %44 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* nonnull %12, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i64* nonnull %4) #13
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %125

46:                                               ; preds = %43
  %47 = load i8, i8* %5, align 1
  %48 = icmp eq i8 %47, 114
  %49 = load i8, i8* %6, align 1
  %50 = icmp ne i8 %49, 119
  %51 = and i1 %48, %50
  %52 = load i8, i8* %7, align 1
  %53 = icmp eq i8 %52, 120
  %54 = and i1 %51, %53
  br i1 %54, label %55, label %120

55:                                               ; preds = %46, %55
  %56 = call i32 @getc(%struct._IO_FILE* nonnull %12)
  switch i32 %56, label %55 [
    i32 -1, label %125
    i32 91, label %57
    i32 47, label %57
    i32 10, label %65
  ]

57:                                               ; preds = %55, %55
  %58 = call i32 @ungetc(i32 %56, %struct._IO_FILE* nonnull %12)
  %59 = call i8* @fgets(i8* %15, i32 4097, %struct._IO_FILE* nonnull %12)
  %60 = icmp eq i8* %59, null
  br i1 %60, label %125, label %61

61:                                               ; preds = %57
  %62 = call i64 @strlen(i8* %15) #14
  %63 = add i64 %62, -1
  %64 = getelementptr inbounds i8, i8* %15, i64 %63
  store i8 0, i8* %64, align 1
  br label %69

65:                                               ; preds = %55
  %66 = load i64, i64* %2, align 8
  %67 = load i64, i64* %3, align 8
  %68 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %15, i64 4097, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0), i64 %66, i64 %67) #13
  br label %69

69:                                               ; preds = %65, %61
  %70 = load i64, i64* %4, align 8
  %71 = load i64, i64* %2, align 8
  %72 = sub i64 %71, %70
  store i64 %72, i64* %2, align 8
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %22) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #13
  %73 = call i64 @strlen(i8* %15) #13
  %74 = icmp ugt i64 %73, -17
  br i1 %74, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.std::__1::basic_string"* %10 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %76) #15
  unreachable

77:                                               ; preds = %69
  %78 = icmp ult i64 %73, 23
  br i1 %78, label %84, label %79

79:                                               ; preds = %77
  %80 = add nuw i64 %73, 16
  %81 = and i64 %80, -16
  %82 = call i8* @_Znwm(i64 %81) #12
  store i8* %82, i8** %24, align 8
  %83 = or i64 %81, -9223372036854775808
  store i64 %83, i64* %25, align 8
  store i64 %73, i64* %26, align 8
  br label %87

84:                                               ; preds = %77
  %85 = trunc i64 %73 to i8
  store i8 %85, i8* %28, align 1
  %86 = icmp eq i64 %73, 0
  br i1 %86, label %89, label %87

87:                                               ; preds = %84, %79
  %88 = phi i8* [ %82, %79 ], [ %23, %84 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %88, i8* align 1 %15, i64 %73, i1 false) #13
  br label %89

89:                                               ; preds = %84, %87
  %90 = phi i8* [ %23, %84 ], [ %88, %87 ]
  %91 = getelementptr inbounds i8, i8* %90, i64 %73
  store i8 0, i8* %91, align 1
  %92 = load i64, i64* %3, align 8
  %93 = load i8, i8* %28, align 1
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %96, label %95

95:                                               ; preds = %89
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %23, i64 24, i1 false) #13
  br label %99

96:                                               ; preds = %89
  %97 = load i8*, i8** %24, align 8
  %98 = load i64, i64* %26, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %29, i8* %97, i64 %98) #13
  br label %99

99:                                               ; preds = %95, %96
  store i64 %72, i64* %30, align 8
  store i64 %92, i64* %31, align 8
  store i64 0, i64* %32, align 8
  %100 = load %"struct.v8::base::OS::SharedLibraryAddress"*, %"struct.v8::base::OS::SharedLibraryAddress"** %33, align 8
  %101 = load %"struct.v8::base::OS::SharedLibraryAddress"*, %"struct.v8::base::OS::SharedLibraryAddress"** %34, align 8
  %102 = icmp ult %"struct.v8::base::OS::SharedLibraryAddress"* %100, %101
  br i1 %102, label %103, label %109

103:                                              ; preds = %99
  %104 = bitcast %"struct.v8::base::OS::SharedLibraryAddress"* %100 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* nonnull align 8 %22, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 24, i1 false) #13
  %105 = getelementptr inbounds %"struct.v8::base::OS::SharedLibraryAddress", %"struct.v8::base::OS::SharedLibraryAddress"* %100, i64 0, i32 1
  %106 = bitcast i64* %105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* align 8 %35, i64 24, i1 false) #13
  %107 = getelementptr inbounds %"struct.v8::base::OS::SharedLibraryAddress", %"struct.v8::base::OS::SharedLibraryAddress"* %100, i64 1
  %108 = ptrtoint %"struct.v8::base::OS::SharedLibraryAddress"* %107 to i64
  store i64 %108, i64* %36, align 8
  br label %114

109:                                              ; preds = %99
  call void @_ZNSt3__16vectorIN2v84base2OS20SharedLibraryAddressENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector"* %0, %"struct.v8::base::OS::SharedLibraryAddress"* nonnull dereferenceable(48) %9) #13
  %110 = load i8, i8* %38, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %112, label %114

112:                                              ; preds = %109
  %113 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %113) #12
  br label %114

114:                                              ; preds = %103, %109, %112
  %115 = load i8, i8* %28, align 1
  %116 = icmp slt i8 %115, 0
  br i1 %116, label %117, label %119

117:                                              ; preds = %114
  %118 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %118) #12
  br label %119

119:                                              ; preds = %114, %117
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #13
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %22) #13
  br label %122

120:                                              ; preds = %46, %120
  %121 = call i32 @getc(%struct._IO_FILE* nonnull %12)
  switch i32 %121, label %120 [
    i32 -1, label %125
    i32 10, label %122
  ]

122:                                              ; preds = %120, %119
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #13
  %123 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* nonnull %12, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i64* nonnull %2, i64* nonnull %3) #13
  %124 = icmp eq i32 %123, 2
  br i1 %124, label %40, label %125

125:                                              ; preds = %43, %40, %122, %57, %120, %55, %14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  call void @free(i8* %15) #13
  %126 = call i32 @fclose(%struct._IO_FILE* nonnull %12)
  br label %127

127:                                              ; preds = %125, %1
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare noalias %struct._IO_FILE* @fopen64(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #4

declare i32 @__isoc99_fscanf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare i32 @getc(%struct._IO_FILE* nocapture) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare i32 @ungetc(i32, %struct._IO_FILE* nocapture) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare i8* @fgets(i8*, i32, %struct._IO_FILE* nocapture) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v84base2OS18SignalCodeMovingGCEv() local_unnamed_addr #3 align 2 {
  %1 = tail call i64 @sysconf(i32 30) #13
  %2 = tail call i8* @_ZN2v84base2OS17GetGCFakeMMapFileEv() #13
  %3 = tail call %struct._IO_FILE* @fopen64(i8* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0))
  %4 = icmp eq %struct._IO_FILE* %3, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %0
  %6 = tail call i8* @_ZN2v84base2OS17GetGCFakeMMapFileEv() #13
  tail call void (i8*, ...) @_ZN2v84base2OS10PrintErrorEPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7, i64 0, i64 0), i8* %6) #13
  tail call void @_ZN2v84base2OS5AbortEv() #15
  unreachable

7:                                                ; preds = %0
  %8 = tail call i8* @_ZN2v84base2OS17GetRandomMmapAddrEv() #13
  %9 = tail call i32 @fileno(%struct._IO_FILE* nonnull %3) #13
  %10 = tail call i8* @mmap64(i8* %8, i64 %1, i32 5, i32 2, i32 %9, i64 0) #13
  %11 = tail call zeroext i1 @_ZN2v84base2OS4FreeEPvm(i8* %10, i64 %1) #13
  br i1 %11, label %13, label %12, !prof !2

12:                                               ; preds = %7
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0)) #15
  unreachable

13:                                               ; preds = %7
  %14 = tail call i32 @fclose(%struct._IO_FILE* nonnull %3)
  ret void
}

; Function Attrs: nounwind
declare i64 @sysconf(i32) local_unnamed_addr #7

declare i8* @_ZN2v84base2OS17GetGCFakeMMapFileEv() local_unnamed_addr #5

declare void @_ZN2v84base2OS10PrintErrorEPKcz(i8*, ...) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZN2v84base2OS5AbortEv() local_unnamed_addr #8

; Function Attrs: nounwind
declare i8* @mmap64(i8*, i64, i32, i32, i32, i64) local_unnamed_addr #7

declare i8* @_ZN2v84base2OS17GetRandomMmapAddrEv() local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare i32 @fileno(%struct._IO_FILE* nocapture) local_unnamed_addr #4

declare zeroext i1 @_ZN2v84base2OS4FreeEPvm(i8*, i64) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2v84base2OS22AdjustSchedulingParamsEv() local_unnamed_addr #9 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v84base2OS11RemapSharedEPvS2_m(i8*, i8*, i64) local_unnamed_addr #3 align 2 {
  %4 = tail call i8* (i8*, i64, i64, i32, ...) @mremap(i8* %0, i64 0, i64 %2, i32 3, i8* %1) #13
  %5 = icmp eq i8* %4, inttoptr (i64 -1 to i8*)
  %6 = select i1 %5, i8* null, i8* %4
  ret i8* %6
}

; Function Attrs: nounwind
declare i8* @mremap(i8*, i64, i64, i32, ...) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v84base2OS20SharedLibraryAddressENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector"*, %"struct.v8::base::OS::SharedLibraryAddress"* dereferenceable(48)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.v8::base::OS::SharedLibraryAddress"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.v8::base::OS::SharedLibraryAddress"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"struct.v8::base::OS::SharedLibraryAddress"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.v8::base::OS::SharedLibraryAddress"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.v8::base::OS::SharedLibraryAddress", %"struct.v8::base::OS::SharedLibraryAddress"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.v8::base::OS::SharedLibraryAddress", %"struct.v8::base::OS::SharedLibraryAddress"* %33, i64 %32
  %36 = ptrtoint %"struct.v8::base::OS::SharedLibraryAddress"* %35 to i64
  %37 = bitcast %"struct.v8::base::OS::SharedLibraryAddress"* %34 to i8*
  %38 = bitcast %"struct.v8::base::OS::SharedLibraryAddress"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #13
  %39 = getelementptr inbounds %"struct.v8::base::OS::SharedLibraryAddress", %"struct.v8::base::OS::SharedLibraryAddress"* %33, i64 %9, i32 1
  %40 = getelementptr inbounds %"struct.v8::base::OS::SharedLibraryAddress", %"struct.v8::base::OS::SharedLibraryAddress"* %1, i64 0, i32 1
  %41 = bitcast i64* %39 to i8*
  %42 = bitcast i64* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 24, i1 false) #13
  %43 = getelementptr inbounds %"struct.v8::base::OS::SharedLibraryAddress", %"struct.v8::base::OS::SharedLibraryAddress"* %34, i64 1
  %44 = ptrtoint %"struct.v8::base::OS::SharedLibraryAddress"* %43 to i64
  %45 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %46 = load %"struct.v8::base::OS::SharedLibraryAddress"*, %"struct.v8::base::OS::SharedLibraryAddress"** %45, align 8
  %47 = load %"struct.v8::base::OS::SharedLibraryAddress"*, %"struct.v8::base::OS::SharedLibraryAddress"** %3, align 8
  %48 = icmp eq %"struct.v8::base::OS::SharedLibraryAddress"* %47, %46
  br i1 %48, label %49, label %51

49:                                               ; preds = %31
  %50 = ptrtoint %"struct.v8::base::OS::SharedLibraryAddress"* %46 to i64
  br label %66

51:                                               ; preds = %31, %51
  %52 = phi %"struct.v8::base::OS::SharedLibraryAddress"* [ %54, %51 ], [ %34, %31 ]
  %53 = phi %"struct.v8::base::OS::SharedLibraryAddress"* [ %55, %51 ], [ %47, %31 ]
  %54 = getelementptr inbounds %"struct.v8::base::OS::SharedLibraryAddress", %"struct.v8::base::OS::SharedLibraryAddress"* %52, i64 -1
  %55 = getelementptr inbounds %"struct.v8::base::OS::SharedLibraryAddress", %"struct.v8::base::OS::SharedLibraryAddress"* %53, i64 -1
  %56 = bitcast %"struct.v8::base::OS::SharedLibraryAddress"* %54 to i8*
  %57 = bitcast %"struct.v8::base::OS::SharedLibraryAddress"* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false) #13
  %58 = getelementptr inbounds %"struct.v8::base::OS::SharedLibraryAddress", %"struct.v8::base::OS::SharedLibraryAddress"* %52, i64 -1, i32 1
  %59 = getelementptr inbounds %"struct.v8::base::OS::SharedLibraryAddress", %"struct.v8::base::OS::SharedLibraryAddress"* %53, i64 -1, i32 1
  %60 = bitcast i64* %58 to i8*
  %61 = bitcast i64* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 24, i1 false) #13
  %62 = icmp eq %"struct.v8::base::OS::SharedLibraryAddress"* %55, %46
  br i1 %62, label %63, label %51

63:                                               ; preds = %51
  %64 = load i64, i64* %6, align 8
  %65 = load %"struct.v8::base::OS::SharedLibraryAddress"*, %"struct.v8::base::OS::SharedLibraryAddress"** %3, align 8
  br label %66

66:                                               ; preds = %49, %63
  %67 = phi %"struct.v8::base::OS::SharedLibraryAddress"* [ %46, %49 ], [ %65, %63 ]
  %68 = phi %"struct.v8::base::OS::SharedLibraryAddress"* [ %34, %49 ], [ %54, %63 ]
  %69 = phi i64 [ %50, %49 ], [ %64, %63 ]
  %70 = ptrtoint %"struct.v8::base::OS::SharedLibraryAddress"* %68 to i64
  store i64 %70, i64* %6, align 8
  store i64 %44, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %71 = inttoptr i64 %69 to %"struct.v8::base::OS::SharedLibraryAddress"*
  %72 = icmp eq %"struct.v8::base::OS::SharedLibraryAddress"* %67, %71
  br i1 %72, label %85, label %73

73:                                               ; preds = %66, %83
  %74 = phi %"struct.v8::base::OS::SharedLibraryAddress"* [ %75, %83 ], [ %67, %66 ]
  %75 = getelementptr inbounds %"struct.v8::base::OS::SharedLibraryAddress", %"struct.v8::base::OS::SharedLibraryAddress"* %74, i64 -1
  %76 = bitcast %"struct.v8::base::OS::SharedLibraryAddress"* %75 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %78 = load i8, i8* %77, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %73
  %81 = getelementptr inbounds %"struct.v8::base::OS::SharedLibraryAddress", %"struct.v8::base::OS::SharedLibraryAddress"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  tail call void @_ZdlPv(i8* %82) #12
  br label %83

83:                                               ; preds = %80, %73
  %84 = icmp eq %"struct.v8::base::OS::SharedLibraryAddress"* %75, %71
  br i1 %84, label %85, label %73

85:                                               ; preds = %83, %66
  %86 = icmp eq i64 %69, 0
  br i1 %86, label %89, label %87

87:                                               ; preds = %85
  %88 = inttoptr i64 %69 to i8*
  tail call void @_ZdlPv(i8* %88) #12
  br label %89

89:                                               ; preds = %85, %87
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind }
attributes #14 = { nounwind readonly }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
