; ModuleID = '../../extensions/browser/preload_check_group.cc'
source_filename = "../../extensions/browser/preload_check_group.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::PreloadCheckGroup" = type { %"class.extensions::PreloadCheck", %"class.base::ThreadChecker", i8, %"class.std::__1::vector.87", %"class.base::OnceCallback", i32, %"class.std::__1::set.96", %"class.base::WeakPtrFactory" }
%"class.extensions::PreloadCheck" = type { i32 (...)**, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.extensions::Extension"* }
%"class.extensions::Extension" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.base::FilePath", %"class.extensions::URLPatternSet", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.13", %"class.std::__1::vector", %class.GURL, %"class.base::Version", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.37", %"class.std::__1::map", i8, %"class.base::ThreadChecker", i8, i8, i8, i32, %"class.base::GUID" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.extensions::URLPatternSet" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2", %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.extensions::PermissionsParser"* }
%"class.extensions::PermissionsParser" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.extensions::PermissionsData"* }
%"class.extensions::PermissionsData" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.extensions::InstallWarning"*, %"struct.extensions::InstallWarning"*, %"class.std::__1::__compressed_pair.19" }
%"struct.extensions::InstallWarning" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.extensions::InstallWarning"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.24" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %class.GURL* }
%"class.base::Version" = type { %"class.std::__1::vector.30" }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { i32*, i32*, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { i32* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.extensions::Manifest"* }
%"class.extensions::Manifest" = type { %"class.std::__1::basic_string", %"class.extensions::HashedExtensionId", i32, %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40", i32, i32 }
%"class.extensions::HashedExtensionId" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.base::DictionaryValue"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.43" }
%"union.absl::variant_internal::DestructibleUnionImpl.43" = type { %"union.absl::variant_internal::DestructibleUnionImpl.44" }
%"union.absl::variant_internal::DestructibleUnionImpl.44" = type { %"union.absl::variant_internal::DestructibleUnionImpl.45" }
%"union.absl::variant_internal::DestructibleUnionImpl.45" = type { %"union.absl::variant_internal::DestructibleUnionImpl.46" }
%"union.absl::variant_internal::DestructibleUnionImpl.46" = type { %"class.std::__1::basic_string" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.78" }
%"class.std::__1::__tree.78" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.base::GUID" = type { %"class.std::__1::basic_string" }
%"class.base::ThreadChecker" = type { i8 }
%"class.std::__1::vector.87" = type { %"class.std::__1::__vector_base.88" }
%"class.std::__1::__vector_base.88" = type { %"class.extensions::PreloadCheck"**, %"class.extensions::PreloadCheck"**, %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.extensions::PreloadCheck"** }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.94 }
%class.scoped_refptr.94 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.95", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.95" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::set.96" = type { %"class.std::__1::__tree.97" }
%"class.std::__1::__tree.97" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.106 }
%class.scoped_refptr.106 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.107", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.107" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.108" }
%"struct.std::__1::atomic.108" = type { %"struct.std::__1::__atomic_base.109" }
%"struct.std::__1::__atomic_base.109" = type { %"struct.std::__1::__atomic_base.110" }
%"struct.std::__1::__atomic_base.110" = type { %"struct.std::__1::__cxx_atomic_impl.111" }
%"struct.std::__1::__cxx_atomic_impl.111" = type { %"struct.std::__1::__cxx_atomic_base_impl.112" }
%"struct.std::__1::__cxx_atomic_base_impl.112" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.113 }
%class.scoped_refptr.113 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.std::__1::basic_string.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.117 }
%union.anon.117 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNSt3__16__treeIN10extensions12PreloadCheck5ErrorENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN10extensions17PreloadCheckGroupEFvRKNSt3__13setINS3_12PreloadCheck5ErrorENS5_4lessIS8_EENS5_9allocatorIS8_EEEEEJNS_7WeakPtrIS4_EEEEEFvSF_EE7RunOnceEPNS0_13BindStateBaseESF_ = comdat any

$_ZN4base8internal9BindStateIMN10extensions17PreloadCheckGroupEFvRKNSt3__13setINS2_12PreloadCheck5ErrorENS4_4lessIS7_EENS4_9allocatorIS7_EEEEEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN10extensions17PreloadCheckGroupEFvRKNSt3__13setINS3_12PreloadCheck5ErrorENS5_4lessIS8_EENS5_9allocatorIS8_EEEEEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSL_21CancellationQueryModeE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@_ZTVN10extensions17PreloadCheckGroupE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::PreloadCheckGroup"*)* @_ZN10extensions17PreloadCheckGroupD2Ev to i8*), i8* bitcast (void (%"class.extensions::PreloadCheckGroup"*)* @_ZN10extensions17PreloadCheckGroupD0Ev to i8*), i8* bitcast (void (%"class.extensions::PreloadCheckGroup"*, %"class.base::OnceCallback"*)* @_ZN10extensions17PreloadCheckGroup5StartEN4base12OnceCallbackIFvRKNSt3__13setINS_12PreloadCheck5ErrorENS3_4lessIS6_EENS3_9allocatorIS6_EEEEEEE to i8*), i8* bitcast (void (%"class.std::__1::basic_string.114"*, %"class.extensions::PreloadCheck"*)* @_ZNK10extensions12PreloadCheck15GetErrorMessageEv to i8*), i8* bitcast (void (%"class.extensions::PreloadCheckGroup"*, %"class.std::__1::set.96"*)* @_ZN10extensions17PreloadCheckGroup15OnCheckCompleteERKNSt3__13setINS_12PreloadCheck5ErrorENS1_4lessIS4_EENS1_9allocatorIS4_EEEE to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN10extensions17PreloadCheckGroupC1Ev = hidden unnamed_addr alias void (%"class.extensions::PreloadCheckGroup"*), void (%"class.extensions::PreloadCheckGroup"*)* @_ZN10extensions17PreloadCheckGroupC2Ev
@_ZN10extensions17PreloadCheckGroupD1Ev = hidden unnamed_addr alias void (%"class.extensions::PreloadCheckGroup"*), void (%"class.extensions::PreloadCheckGroup"*)* @_ZN10extensions17PreloadCheckGroupD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions17PreloadCheckGroupC2Ev(%"class.extensions::PreloadCheckGroup"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 0
  tail call void @_ZN10extensions12PreloadCheckC2E13scoped_refptrIKNS_9ExtensionEE(%"class.extensions::PreloadCheck"* %2, %"class.extensions::Extension"* null) #8
  %3 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN10extensions17PreloadCheckGroupE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 2
  store i8 0, i8* %4, align 1
  %5 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %8 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 6, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_node_base"** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #8
  %10 = bitcast %"class.std::__1::vector.87"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 36, i1 false)
  store %"class.std::__1::__tree_end_node"* %7, %"class.std::__1::__tree_end_node"** %8, align 8
  %11 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 7, i32 0
  %12 = ptrtoint %"class.extensions::PreloadCheckGroup"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %11, i64 %12) #8
  ret void
}

declare void @_ZN10extensions12PreloadCheckC2E13scoped_refptrIKNS_9ExtensionEE(%"class.extensions::PreloadCheck"*, %"class.extensions::Extension"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions17PreloadCheckGroupD2Ev(%"class.extensions::PreloadCheckGroup"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN10extensions17PreloadCheckGroupE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 7, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #8
  %4 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 6, i32 0
  %5 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  tail call void @_ZNSt3__16__treeIN10extensions12PreloadCheck5ErrorENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.97"* %4, %"class.std::__1::__tree_node"* %7) #8
  %8 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %8) #8
  %9 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.extensions::PreloadCheck"**, %"class.extensions::PreloadCheck"*** %9, align 8
  %11 = icmp eq %"class.extensions::PreloadCheck"** %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %1
  %13 = ptrtoint %"class.extensions::PreloadCheck"** %10 to i64
  %14 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 3, i32 0, i32 1
  %15 = bitcast %"class.extensions::PreloadCheck"*** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = bitcast %"class.extensions::PreloadCheck"** %10 to i8*
  tail call void @_ZdlPv(i8* %16) #9
  br label %17

17:                                               ; preds = %1, %12
  %18 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 0
  tail call void @_ZN10extensions12PreloadCheckD2Ev(%"class.extensions::PreloadCheck"* %18) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN10extensions12PreloadCheckD2Ev(%"class.extensions::PreloadCheck"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions17PreloadCheckGroupD0Ev(%"class.extensions::PreloadCheckGroup"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN10extensions17PreloadCheckGroupE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 7, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #8
  %4 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 6, i32 0
  %5 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  tail call void @_ZNSt3__16__treeIN10extensions12PreloadCheck5ErrorENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.97"* %4, %"class.std::__1::__tree_node"* %7) #8
  %8 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %8) #8
  %9 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.extensions::PreloadCheck"**, %"class.extensions::PreloadCheck"*** %9, align 8
  %11 = icmp eq %"class.extensions::PreloadCheck"** %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %1
  %13 = ptrtoint %"class.extensions::PreloadCheck"** %10 to i64
  %14 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 3, i32 0, i32 1
  %15 = bitcast %"class.extensions::PreloadCheck"*** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = bitcast %"class.extensions::PreloadCheck"** %10 to i8*
  tail call void @_ZdlPv(i8* %16) #9
  br label %17

17:                                               ; preds = %1, %12
  %18 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 0
  tail call void @_ZN10extensions12PreloadCheckD2Ev(%"class.extensions::PreloadCheck"* %18) #8
  %19 = bitcast %"class.extensions::PreloadCheckGroup"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions17PreloadCheckGroup8AddCheckEPNS_12PreloadCheckE(%"class.extensions::PreloadCheckGroup"*, %"class.extensions::PreloadCheck"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.extensions::PreloadCheck"* %1 to i64
  %4 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 3, i32 0, i32 1
  %6 = load %"class.extensions::PreloadCheck"**, %"class.extensions::PreloadCheck"*** %5, align 8
  %7 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.extensions::PreloadCheck"**, %"class.extensions::PreloadCheck"*** %7, align 8
  %9 = icmp eq %"class.extensions::PreloadCheck"** %6, %8
  %10 = ptrtoint %"class.extensions::PreloadCheck"** %8 to i64
  br i1 %9, label %16, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.extensions::PreloadCheck"** %6 to i64*
  store i64 %3, i64* %12, align 8
  %13 = getelementptr inbounds %"class.extensions::PreloadCheck"*, %"class.extensions::PreloadCheck"** %6, i64 1
  %14 = ptrtoint %"class.extensions::PreloadCheck"** %13 to i64
  %15 = bitcast %"class.extensions::PreloadCheck"*** %5 to i64*
  store i64 %14, i64* %15, align 8
  br label %73

16:                                               ; preds = %2
  %17 = ptrtoint %"class.extensions::PreloadCheck"** %6 to i64
  %18 = bitcast %"class.extensions::PreloadCheck"*** %5 to i64*
  %19 = bitcast %"class.std::__1::vector.87"* %4 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = add nsw i64 %22, 1
  %24 = icmp ugt i64 %23, 2305843009213693951
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::vector.87"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #10
  unreachable

27:                                               ; preds = %16
  %28 = bitcast %"class.extensions::PreloadCheck"*** %7 to i64*
  %29 = sub i64 %10, %20
  %30 = ashr exact i64 %29, 3
  %31 = icmp ult i64 %30, 1152921504606846975
  br i1 %31, label %32, label %40

32:                                               ; preds = %27
  %33 = ashr exact i64 %29, 2
  %34 = icmp ult i64 %33, %23
  %35 = select i1 %34, i64 %23, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %32
  %38 = icmp ugt i64 %35, 2305843009213693951
  br i1 %38, label %39, label %40

39:                                               ; preds = %37
  tail call void @abort() #10
  unreachable

40:                                               ; preds = %37, %27
  %41 = phi i64 [ %35, %37 ], [ 2305843009213693951, %27 ]
  %42 = shl i64 %41, 3
  %43 = tail call i8* @_Znwm(i64 %42) #9
  %44 = bitcast i8* %43 to %"class.extensions::PreloadCheck"**
  br label %45

45:                                               ; preds = %40, %32
  %46 = phi i64 [ %41, %40 ], [ 0, %32 ]
  %47 = phi %"class.extensions::PreloadCheck"** [ %44, %40 ], [ null, %32 ]
  %48 = getelementptr inbounds %"class.extensions::PreloadCheck"*, %"class.extensions::PreloadCheck"** %47, i64 %22
  %49 = getelementptr inbounds %"class.extensions::PreloadCheck"*, %"class.extensions::PreloadCheck"** %47, i64 %46
  %50 = ptrtoint %"class.extensions::PreloadCheck"** %49 to i64
  %51 = bitcast %"class.extensions::PreloadCheck"** %48 to i64*
  store i64 %3, i64* %51, align 8
  %52 = getelementptr inbounds %"class.extensions::PreloadCheck"*, %"class.extensions::PreloadCheck"** %48, i64 1
  %53 = ptrtoint %"class.extensions::PreloadCheck"** %52 to i64
  %54 = getelementptr inbounds %"class.std::__1::vector.87", %"class.std::__1::vector.87"* %4, i64 0, i32 0, i32 0
  %55 = load %"class.extensions::PreloadCheck"**, %"class.extensions::PreloadCheck"*** %54, align 8
  %56 = load i64, i64* %18, align 8
  %57 = ptrtoint %"class.extensions::PreloadCheck"** %55 to i64
  %58 = sub i64 %56, %57
  %59 = ashr exact i64 %58, 3
  %60 = sub nsw i64 0, %59
  %61 = getelementptr inbounds %"class.extensions::PreloadCheck"*, %"class.extensions::PreloadCheck"** %48, i64 %60
  %62 = ptrtoint %"class.extensions::PreloadCheck"** %61 to i64
  %63 = icmp sgt i64 %58, 0
  br i1 %63, label %64, label %68

64:                                               ; preds = %45
  %65 = bitcast %"class.extensions::PreloadCheck"** %61 to i8*
  %66 = bitcast %"class.extensions::PreloadCheck"** %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 %58, i1 false) #8
  %67 = load %"class.extensions::PreloadCheck"**, %"class.extensions::PreloadCheck"*** %54, align 8
  br label %68

68:                                               ; preds = %64, %45
  %69 = phi %"class.extensions::PreloadCheck"** [ %55, %45 ], [ %67, %64 ]
  store i64 %62, i64* %19, align 8
  store i64 %53, i64* %18, align 8
  store i64 %50, i64* %28, align 8
  %70 = icmp eq %"class.extensions::PreloadCheck"** %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %68
  %72 = bitcast %"class.extensions::PreloadCheck"** %69 to i8*
  tail call void @_ZdlPv(i8* %72) #9
  br label %73

73:                                               ; preds = %11, %68, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions17PreloadCheckGroup5StartEN4base12OnceCallbackIFvRKNSt3__13setINS_12PreloadCheck5ErrorENS3_4lessIS6_EENS3_9allocatorIS6_EEEEEEE(%"class.extensions::PreloadCheckGroup"*, %"class.base::OnceCallback"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::WeakPtr", align 8
  %6 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 4, i32 0
  %7 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0
  %8 = tail call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %6, %"class.base::internal::CallbackBase"* dereferenceable(8) %7) #8
  %9 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 3, i32 0, i32 1
  %11 = bitcast %"class.extensions::PreloadCheck"*** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.87"* %9 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = lshr exact i64 %15, 3
  %17 = trunc i64 %16 to i32
  %18 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 5
  store i32 %17, i32* %18, align 8
  %19 = inttoptr i64 %14 to %"class.extensions::PreloadCheck"**
  %20 = inttoptr i64 %12 to %"class.extensions::PreloadCheck"**
  %21 = icmp eq %"class.extensions::PreloadCheck"** %19, %20
  br i1 %21, label %54, label %22

22:                                               ; preds = %2
  %23 = bitcast %"class.base::WeakPtr"* %5 to i8*
  %24 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  %25 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 7, i32 0, i32 0
  %26 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 7, i32 0, i32 1
  %27 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0
  %28 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0, i32 1
  %30 = bitcast %"class.base::OnceCallback"* %4 to i8**
  %31 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  br label %32

32:                                               ; preds = %32, %22
  %33 = phi %"class.extensions::PreloadCheck"** [ %19, %22 ], [ %51, %32 ]
  %34 = load %"class.extensions::PreloadCheck"*, %"class.extensions::PreloadCheck"** %33, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #8, !noalias !2
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %25) #8, !noalias !2
  %35 = load i64, i64* %26, align 8, !noalias !2
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %27, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %35) #8
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #8, !noalias !2
  %36 = call i8* @_Znwm(i64 64) #9, !noalias !5
  %37 = bitcast i8* %36 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %37, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.std::__1::set.96"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN10extensions17PreloadCheckGroupEFvRKNSt3__13setINS3_12PreloadCheck5ErrorENS5_4lessIS8_EENS5_9allocatorIS8_EEEEEJNS_7WeakPtrIS4_EEEEEFvSF_EE7RunOnceEPNS0_13BindStateBaseESF_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN10extensions17PreloadCheckGroupEFvRKNSt3__13setINS2_12PreloadCheck5ErrorENS4_4lessIS7_EENS4_9allocatorIS7_EEEEEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN10extensions17PreloadCheckGroupEFvRKNSt3__13setINS3_12PreloadCheck5ErrorENS5_4lessIS8_EENS5_9allocatorIS8_EEEEEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSL_21CancellationQueryModeE) #8, !noalias !5
  %38 = getelementptr inbounds i8, i8* %36, i64 32
  %39 = bitcast i8* %38 to <2 x i64>*
  store <2 x i64> <i64 33, i64 0>, <2 x i64>* %39, align 8, !noalias !5
  %40 = getelementptr inbounds i8, i8* %36, i64 48
  %41 = bitcast i8* %40 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %41, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %28) #8, !noalias !5
  %42 = getelementptr inbounds i8, i8* %36, i64 56
  %43 = bitcast i8* %42 to i64*
  %44 = load i64, i64* %29, align 8, !noalias !5
  store i64 %44, i64* %43, align 8, !noalias !5
  store i8* %36, i8** %30, align 8, !alias.scope !5
  %45 = bitcast %"class.extensions::PreloadCheck"* %34 to void (%"class.extensions::PreloadCheck"*, %"class.base::OnceCallback"*)***
  %46 = load void (%"class.extensions::PreloadCheck"*, %"class.base::OnceCallback"*)**, void (%"class.extensions::PreloadCheck"*, %"class.base::OnceCallback"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.extensions::PreloadCheck"*, %"class.base::OnceCallback"*)*, void (%"class.extensions::PreloadCheck"*, %"class.base::OnceCallback"*)** %46, i64 2
  %48 = load void (%"class.extensions::PreloadCheck"*, %"class.base::OnceCallback"*)*, void (%"class.extensions::PreloadCheck"*, %"class.base::OnceCallback"*)** %47, align 8
  call void %48(%"class.extensions::PreloadCheck"* %34, %"class.base::OnceCallback"* nonnull %4) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %31) #8
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %27) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #8
  %49 = load i32, i32* %18, align 8
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.extensions::PreloadCheck"*, %"class.extensions::PreloadCheck"** %33, i64 1
  %52 = icmp eq %"class.extensions::PreloadCheck"** %51, %20
  %53 = or i1 %50, %52
  br i1 %53, label %54, label %32

54:                                               ; preds = %32, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions17PreloadCheckGroup15OnCheckCompleteERKNSt3__13setINS_12PreloadCheck5ErrorENS1_4lessIS4_EENS1_9allocatorIS4_EEEE(%"class.extensions::PreloadCheckGroup"*, %"class.std::__1::set.96"* readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 6
  %5 = getelementptr inbounds %"class.std::__1::set.96", %"class.std::__1::set.96"* %1, i64 0, i32 0, i32 0
  %6 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::set.96", %"class.std::__1::set.96"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %9 = icmp eq %"class.std::__1::__tree_end_node"* %6, %7
  br i1 %9, label %142, label %10

10:                                               ; preds = %2
  %11 = ptrtoint %"class.std::__1::__tree_end_node"* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::set.96", %"class.std::__1::set.96"* %4, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 0, i32 0
  %14 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = bitcast %"class.std::__1::set.96"* %4 to i64*
  %16 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  br label %17

17:                                               ; preds = %10, %139
  %18 = phi %"class.std::__1::__tree_end_node"* [ %140, %139 ], [ %6, %10 ]
  %19 = bitcast %"class.std::__1::__tree_end_node"* %18 to %"class.std::__1::__tree_node"*
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %12, align 8
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %21, %8
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %13, align 8
  br i1 %22, label %50, label %24

24:                                               ; preds = %17
  %25 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %24, %26
  %27 = phi %"class.std::__1::__tree_node_base"* [ %29, %26 ], [ %23, %24 ]
  %28 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %27, i64 0, i32 1
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, null
  br i1 %30, label %42, label %26

31:                                               ; preds = %24, %31
  %32 = phi %"class.std::__1::__tree_end_node"* [ %36, %31 ], [ %8, %24 ]
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node_base"*
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %32, i64 2
  %35 = bitcast %"class.std::__1::__tree_end_node"* %34 to %"class.std::__1::__tree_end_node"**
  %36 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %35, align 8
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %36, i64 0, i32 0
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = icmp eq %"class.std::__1::__tree_node_base"* %38, %33
  br i1 %39, label %31, label %40

40:                                               ; preds = %31
  %41 = bitcast %"class.std::__1::__tree_end_node"* %36 to %"class.std::__1::__tree_node_base"*
  br label %42

42:                                               ; preds = %26, %40
  %43 = phi %"class.std::__1::__tree_node_base"* [ %41, %40 ], [ %27, %26 ]
  %44 = ptrtoint %"class.std::__1::__tree_node_base"* %43 to i64
  %45 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %43, i64 0, i32 4, i64 3
  %46 = bitcast i8* %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = load i32, i32* %20, align 4
  %49 = icmp slt i32 %47, %48
  br i1 %49, label %50, label %56

50:                                               ; preds = %42, %17
  %51 = phi i64 [ %44, %42 ], [ %11, %17 ]
  %52 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %52, label %84, label %53

53:                                               ; preds = %50
  %54 = inttoptr i64 %51 to %"class.std::__1::__tree_node_base"*
  %55 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %54, i64 0, i32 1
  br label %84

56:                                               ; preds = %42
  %57 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %57, label %84, label %58

58:                                               ; preds = %56, %77
  %59 = phi %"class.std::__1::__tree_node_base"* [ %78, %77 ], [ %23, %56 ]
  %60 = phi %"class.std::__1::__tree_node_base"** [ %79, %77 ], [ %14, %56 ]
  %61 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %59, i64 0, i32 4, i64 3
  %62 = bitcast i8* %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = icmp slt i32 %48, %63
  br i1 %64, label %65, label %71

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %59, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = icmp eq %"class.std::__1::__tree_node_base"* %67, null
  br i1 %68, label %69, label %77

69:                                               ; preds = %65
  %70 = ptrtoint %"class.std::__1::__tree_node_base"* %59 to i64
  br label %84

71:                                               ; preds = %58
  %72 = icmp slt i32 %63, %48
  br i1 %72, label %73, label %82

73:                                               ; preds = %71
  %74 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %59, i64 0, i32 1
  %75 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %74, align 8
  %76 = icmp eq %"class.std::__1::__tree_node_base"* %75, null
  br i1 %76, label %80, label %77

77:                                               ; preds = %73, %65
  %78 = phi %"class.std::__1::__tree_node_base"* [ %67, %65 ], [ %75, %73 ]
  %79 = phi %"class.std::__1::__tree_node_base"** [ %66, %65 ], [ %74, %73 ]
  br label %58

80:                                               ; preds = %73
  %81 = ptrtoint %"class.std::__1::__tree_node_base"* %59 to i64
  br label %84

82:                                               ; preds = %71
  %83 = ptrtoint %"class.std::__1::__tree_node_base"* %59 to i64
  br label %84

84:                                               ; preds = %56, %50, %53, %69, %80, %82
  %85 = phi i64 [ %51, %53 ], [ %70, %69 ], [ %81, %80 ], [ %83, %82 ], [ %11, %50 ], [ %11, %56 ]
  %86 = phi %"class.std::__1::__tree_node_base"** [ %55, %53 ], [ %66, %69 ], [ %74, %80 ], [ %60, %82 ], [ %13, %50 ], [ %13, %56 ]
  %87 = bitcast %"class.std::__1::__tree_node_base"** %86 to %"class.std::__1::__tree_node"**
  %88 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %87, align 8
  %89 = icmp eq %"class.std::__1::__tree_node"* %88, null
  br i1 %89, label %90, label %111

90:                                               ; preds = %84
  %91 = tail call i8* @_Znwm(i64 32) #9, !noalias !10
  %92 = getelementptr inbounds i8, i8* %91, i64 28
  %93 = bitcast i8* %92 to i32*
  %94 = load i32, i32* %20, align 4, !noalias !10
  store i32 %94, i32* %93, align 4, !noalias !10
  %95 = bitcast i8* %91 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds i8, i8* %91, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %91, i8 0, i64 16, i1 false) #8
  %97 = bitcast i8* %96 to i64*
  store i64 %85, i64* %97, align 8
  %98 = bitcast %"class.std::__1::__tree_node_base"** %86 to i8**
  store i8* %91, i8** %98, align 8
  %99 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %12, align 8
  %100 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %99, i64 0, i32 0
  %101 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %100, align 8
  %102 = icmp eq %"class.std::__1::__tree_node_base"* %101, null
  br i1 %102, label %106, label %103

103:                                              ; preds = %90
  %104 = ptrtoint %"class.std::__1::__tree_node_base"* %101 to i64
  store i64 %104, i64* %15, align 8
  %105 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %86, align 8
  br label %106

106:                                              ; preds = %103, %90
  %107 = phi %"class.std::__1::__tree_node_base"* [ %95, %90 ], [ %105, %103 ]
  %108 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %14, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %108, %"class.std::__1::__tree_node_base"* %107) #8
  %109 = load i64, i64* %16, align 8
  %110 = add i64 %109, 1
  store i64 %110, i64* %16, align 8
  br label %111

111:                                              ; preds = %84, %106
  %112 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 1, i32 0
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %112, align 8
  %114 = icmp eq %"class.std::__1::__tree_node_base"* %113, null
  br i1 %114, label %115, label %123

115:                                              ; preds = %111
  %116 = bitcast %"class.std::__1::__tree_end_node"* %18 to %"class.std::__1::__tree_node_base"*
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 2
  %118 = bitcast %"class.std::__1::__tree_end_node"* %117 to %"class.std::__1::__tree_end_node"**
  %119 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %118, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %119, i64 0, i32 0
  %121 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %120, align 8
  %122 = icmp eq %"class.std::__1::__tree_node_base"* %121, %116
  br i1 %122, label %139, label %130

123:                                              ; preds = %111, %123
  %124 = phi %"class.std::__1::__tree_node_base"* [ %126, %123 ], [ %113, %111 ]
  %125 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0, i32 0
  %126 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %125, align 8
  %127 = icmp eq %"class.std::__1::__tree_node_base"* %126, null
  br i1 %127, label %128, label %123

128:                                              ; preds = %123
  %129 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  br label %139

130:                                              ; preds = %115, %130
  %131 = phi %"class.std::__1::__tree_end_node"** [ %134, %130 ], [ %118, %115 ]
  %132 = bitcast %"class.std::__1::__tree_end_node"** %131 to %"class.std::__1::__tree_node_base"**
  %133 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %132, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %133, i64 0, i32 2
  %135 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %134, align 8
  %136 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %135, i64 0, i32 0
  %137 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %136, align 8
  %138 = icmp eq %"class.std::__1::__tree_node_base"* %137, %133
  br i1 %138, label %139, label %130

139:                                              ; preds = %130, %128, %115
  %140 = phi %"class.std::__1::__tree_end_node"* [ %129, %128 ], [ %119, %115 ], [ %135, %130 ]
  %141 = icmp eq %"class.std::__1::__tree_end_node"* %140, %7
  br i1 %141, label %142, label %17

142:                                              ; preds = %139, %2
  %143 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 5
  %144 = load i32, i32* %143, align 8
  %145 = add nsw i32 %144, -1
  store i32 %145, i32* %143, align 8
  %146 = icmp sgt i32 %145, 0
  br i1 %146, label %147, label %155

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %149 = load i64, i64* %148, align 8
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %168, label %151

151:                                              ; preds = %147
  %152 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 2
  %153 = load i8, i8* %152, align 1, !range !13
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %168, label %155

155:                                              ; preds = %151, %142
  %156 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 7, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %156) #8
  store i32 0, i32* %143, align 8
  %157 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 4
  %158 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %158) #8
  %159 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %157, i64 0, i32 0, i32 0, i32 0
  %160 = bitcast %"class.base::OnceCallback"* %157 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %161, i64* %162, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %159, align 8
  %163 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %164 = inttoptr i64 %161 to %"class.base::internal::BindStateBase"*
  %165 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %164, i64 0, i32 1
  %166 = bitcast void ()** %165 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::set.96"*)**
  %167 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::set.96"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::set.96"*)** %166, align 8
  tail call void %167(%"class.base::internal::BindStateBase"* %164, %"class.std::__1::set.96"* dereferenceable(24) %4) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %163) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %158) #8
  br label %168

168:                                              ; preds = %147, %151, %155
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions17PreloadCheckGroup19MaybeInvokeCallbackEv(%"class.extensions::PreloadCheckGroup"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %14

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %28, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 2
  %12 = load i8, i8* %11, align 1, !range !13
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %28, label %14

14:                                               ; preds = %10, %1
  %15 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 7, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %15) #8
  store i32 0, i32* %3, align 8
  %16 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 4
  %17 = getelementptr inbounds %"class.extensions::PreloadCheckGroup", %"class.extensions::PreloadCheckGroup"* %0, i64 0, i32 6
  %18 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8
  %19 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %16, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.base::OnceCallback"* %16 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %21, i64* %22, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %19, align 8
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %24 = inttoptr i64 %21 to %"class.base::internal::BindStateBase"*
  %25 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %24, i64 0, i32 1
  %26 = bitcast void ()** %25 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::set.96"*)**
  %27 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::set.96"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::set.96"*)** %26, align 8
  tail call void %27(%"class.base::internal::BindStateBase"* %24, %"class.std::__1::set.96"* dereferenceable(24) %17) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8
  br label %28

28:                                               ; preds = %10, %6, %14
  ret void
}

declare void @_ZNK10extensions12PreloadCheck15GetErrorMessageEv(%"class.std::__1::basic_string.114"* sret, %"class.extensions::PreloadCheck"*) unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN10extensions12PreloadCheck5ErrorENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.97"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIN10extensions12PreloadCheck5ErrorENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.97"* %0, %"class.std::__1::__tree_node"* %6) #8
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIN10extensions12PreloadCheck5ErrorENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.97"* %0, %"class.std::__1::__tree_node"* %9) #8
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #9
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #2

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN10extensions17PreloadCheckGroupEFvRKNSt3__13setINS3_12PreloadCheck5ErrorENS5_4lessIS8_EENS5_9allocatorIS8_EEEEEJNS_7WeakPtrIS4_EEEEEFvSF_EE7RunOnceEPNS0_13BindStateBaseESF_(%"class.base::internal::BindStateBase"*, %"class.std::__1::set.96"* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %"class.base::internal::WeakReference"*
  %7 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #8
  br i1 %7, label %8, label %43

8:                                                ; preds = %2
  %9 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 1
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to %"class.extensions::PreloadCheckGroup"**
  %11 = load %"class.extensions::PreloadCheckGroup"*, %"class.extensions::PreloadCheckGroup"** %10, align 8
  %12 = icmp eq %"class.extensions::PreloadCheckGroup"* %11, null
  br i1 %12, label %43, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %17 = bitcast void ()** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #8
  br i1 %19, label %23, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #8
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  br label %23

23:                                               ; preds = %20, %13
  %24 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #8
  %25 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = select i1 %24, i8* %26, i8* null
  %28 = getelementptr inbounds i8, i8* %27, i64 %18
  %29 = bitcast i8* %28 to %"class.extensions::PreloadCheckGroup"*
  %30 = and i64 %15, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %23
  %33 = bitcast i8* %28 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = add i64 %15, -1
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = bitcast i8* %36 to void (%"class.extensions::PreloadCheckGroup"*, %"class.std::__1::set.96"*)**
  %38 = load void (%"class.extensions::PreloadCheckGroup"*, %"class.std::__1::set.96"*)*, void (%"class.extensions::PreloadCheckGroup"*, %"class.std::__1::set.96"*)** %37, align 8
  br label %41

39:                                               ; preds = %23
  %40 = inttoptr i64 %15 to void (%"class.extensions::PreloadCheckGroup"*, %"class.std::__1::set.96"*)*
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi void (%"class.extensions::PreloadCheckGroup"*, %"class.std::__1::set.96"*)* [ %38, %32 ], [ %40, %39 ]
  call void %42(%"class.extensions::PreloadCheckGroup"* %29, %"class.std::__1::set.96"* dereferenceable(24) %1) #8
  br label %43

43:                                               ; preds = %2, %8, %41
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN10extensions17PreloadCheckGroupEFvRKNSt3__13setINS2_12PreloadCheck5ErrorENS4_4lessIS7_EENS4_9allocatorIS7_EEEEEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #8
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #9
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN10extensions17PreloadCheckGroupEFvRKNSt3__13setINS3_12PreloadCheck5ErrorENS5_4lessIS8_EENS5_9allocatorIS8_EEEEEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSL_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #8
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.extensions::PreloadCheckGroup"**
  %9 = load %"class.extensions::PreloadCheckGroup"*, %"class.extensions::PreloadCheckGroup"** %8, align 8
  %10 = icmp ne %"class.extensions::PreloadCheckGroup"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #8
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !13
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !13
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !13
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base14WeakPtrFactoryIN10extensions17PreloadCheckGroupEE10GetWeakPtrEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base14WeakPtrFactoryIN10extensions17PreloadCheckGroupEE10GetWeakPtrEv"}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN10extensions17PreloadCheckGroupEFvRKNSt3__13setINS3_12PreloadCheck5ErrorENS5_4lessIS8_EENS5_9allocatorIS8_EEEEEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN10extensions17PreloadCheckGroupEFvRKNSt3__13setINS3_12PreloadCheck5ErrorENS5_4lessIS8_EENS5_9allocatorIS8_EEEEEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!8 = distinct !{!8, !9, !"_ZN4base8BindOnceIMN10extensions17PreloadCheckGroupEFvRKNSt3__13setINS1_12PreloadCheck5ErrorENS3_4lessIS6_EENS3_9allocatorIS6_EEEEEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8BindOnceIMN10extensions17PreloadCheckGroupEFvRKNSt3__13setINS1_12PreloadCheck5ErrorENS3_4lessIS6_EENS3_9allocatorIS6_EEEEEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNSt3__16__treeIN10extensions12PreloadCheck5ErrorENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__16__treeIN10extensions12PreloadCheck5ErrorENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_"}
!13 = !{i8 0, i8 2}
