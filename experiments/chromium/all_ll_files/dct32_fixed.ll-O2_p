; ModuleID = '../../third_party/ffmpeg/libavcodec/dct32_fixed.c'
source_filename = "../../third_party/ffmpeg/libavcodec/dct32_fixed.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @ff_dct32_fixed(i32*, i32* readonly) local_unnamed_addr #0 {
  %3 = load i32, i32* %1, align 4
  %4 = getelementptr inbounds i32, i32* %1, i64 31
  %5 = load i32, i32* %4, align 4
  %6 = add i32 %5, %3
  %7 = sub i32 %3, %5
  %8 = shl i32 %7, 1
  %9 = sext i32 %8 to i64
  %10 = mul nsw i64 %9, 1075036753
  %11 = lshr i64 %10, 32
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds i32, i32* %1, i64 15
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds i32, i32* %1, i64 16
  %16 = load i32, i32* %15, align 4
  %17 = add i32 %16, %14
  %18 = sub i32 %14, %16
  %19 = shl i32 %18, 5
  %20 = sext i32 %19 to i64
  %21 = mul nsw i64 %20, 1367679739
  %22 = lshr i64 %21, 32
  %23 = trunc i64 %22 to i32
  %24 = add i32 %17, %6
  %25 = sub i32 %6, %17
  %26 = shl i32 %25, 1
  %27 = sext i32 %26 to i64
  %28 = mul nsw i64 %27, 1078937202
  %29 = lshr i64 %28, 32
  %30 = trunc i64 %29 to i32
  %31 = add i32 %23, %12
  %32 = sub i32 %23, %12
  %33 = shl i32 %32, 1
  %34 = sext i32 %33 to i64
  %35 = mul nsw i64 %34, -1078937202
  %36 = lshr i64 %35, 32
  %37 = trunc i64 %36 to i32
  %38 = getelementptr inbounds i32, i32* %1, i64 7
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds i32, i32* %1, i64 24
  %41 = load i32, i32* %40, align 4
  %42 = add i32 %41, %39
  %43 = sub i32 %39, %41
  %44 = shl i32 %43, 1
  %45 = sext i32 %44 to i64
  %46 = mul nsw i64 %45, 1449139879
  %47 = lshr i64 %46, 32
  %48 = trunc i64 %47 to i32
  %49 = getelementptr inbounds i32, i32* %1, i64 8
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds i32, i32* %1, i64 23
  %52 = load i32, i32* %51, align 4
  %53 = add i32 %52, %50
  %54 = sub i32 %50, %52
  %55 = shl i32 %54, 1
  %56 = sext i32 %55 to i64
  %57 = mul nsw i64 %56, 1598879467
  %58 = lshr i64 %57, 32
  %59 = trunc i64 %58 to i32
  %60 = add i32 %53, %42
  %61 = sub i32 %42, %53
  %62 = shl i32 %61, 4
  %63 = sext i32 %62 to i64
  %64 = mul nsw i64 %63, 1369329156
  %65 = lshr i64 %64, 32
  %66 = trunc i64 %65 to i32
  %67 = add i32 %59, %48
  %68 = sub i32 %59, %48
  %69 = shl i32 %68, 4
  %70 = sext i32 %69 to i64
  %71 = mul nsw i64 %70, -1369329156
  %72 = lshr i64 %71, 32
  %73 = trunc i64 %72 to i32
  %74 = add i32 %60, %24
  %75 = sub i32 %24, %60
  %76 = shl i32 %75, 1
  %77 = sext i32 %76 to i64
  %78 = mul nsw i64 %77, 1094777670
  %79 = lshr i64 %78, 32
  %80 = trunc i64 %79 to i32
  %81 = add i32 %66, %30
  %82 = sub i32 %66, %30
  %83 = shl i32 %82, 1
  %84 = sext i32 %83 to i64
  %85 = mul nsw i64 %84, -1094777670
  %86 = lshr i64 %85, 32
  %87 = trunc i64 %86 to i32
  %88 = add i32 %67, %31
  %89 = sub i32 %31, %67
  %90 = shl i32 %89, 1
  %91 = sext i32 %90 to i64
  %92 = mul nsw i64 %91, 1094777670
  %93 = lshr i64 %92, 32
  %94 = trunc i64 %93 to i32
  %95 = add i32 %73, %37
  %96 = sub i32 %73, %37
  %97 = shl i32 %96, 1
  %98 = sext i32 %97 to i64
  %99 = mul nsw i64 %98, -1094777670
  %100 = lshr i64 %99, 32
  %101 = trunc i64 %100 to i32
  %102 = getelementptr inbounds i32, i32* %1, i64 3
  %103 = load i32, i32* %102, align 4
  %104 = getelementptr inbounds i32, i32* %1, i64 28
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, %103
  %107 = sub i32 %103, %105
  %108 = shl i32 %107, 1
  %109 = sext i32 %108 to i64
  %110 = mul nsw i64 %109, 1140405281
  %111 = lshr i64 %110, 32
  %112 = trunc i64 %111 to i32
  %113 = getelementptr inbounds i32, i32* %1, i64 12
  %114 = load i32, i32* %113, align 4
  %115 = getelementptr inbounds i32, i32* %1, i64 19
  %116 = load i32, i32* %115, align 4
  %117 = add i32 %116, %114
  %118 = sub i32 %114, %116
  %119 = shl i32 %118, 2
  %120 = sext i32 %119 to i64
  %121 = mul nsw i64 %120, 1593609622
  %122 = lshr i64 %121, 32
  %123 = trunc i64 %122 to i32
  %124 = add i32 %117, %106
  %125 = sub i32 %106, %117
  %126 = shl i32 %125, 1
  %127 = sext i32 %126 to i64
  %128 = mul nsw i64 %127, 1389039203
  %129 = lshr i64 %128, 32
  %130 = trunc i64 %129 to i32
  %131 = add i32 %123, %112
  %132 = sub i32 %123, %112
  %133 = shl i32 %132, 1
  %134 = sext i32 %133 to i64
  %135 = mul nsw i64 %134, -1389039203
  %136 = lshr i64 %135, 32
  %137 = trunc i64 %136 to i32
  %138 = getelementptr inbounds i32, i32* %1, i64 4
  %139 = load i32, i32* %138, align 4
  %140 = getelementptr inbounds i32, i32* %1, i64 27
  %141 = load i32, i32* %140, align 4
  %142 = add i32 %141, %139
  %143 = sub i32 %139, %141
  %144 = shl i32 %143, 1
  %145 = sext i32 %144 to i64
  %146 = mul nsw i64 %145, 1187781572
  %147 = lshr i64 %146, 32
  %148 = trunc i64 %147 to i32
  %149 = getelementptr inbounds i32, i32* %1, i64 11
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds i32, i32* %1, i64 20
  %152 = load i32, i32* %151, align 4
  %153 = add i32 %152, %150
  %154 = sub i32 %150, %152
  %155 = shl i32 %154, 2
  %156 = sext i32 %155 to i64
  %157 = mul nsw i64 %156, 1255676567
  %158 = lshr i64 %157, 32
  %159 = trunc i64 %158 to i32
  %160 = add i32 %153, %142
  %161 = sub i32 %142, %153
  %162 = shl i32 %161, 1
  %163 = sext i32 %162 to i64
  %164 = mul nsw i64 %163, 1692549166
  %165 = lshr i64 %164, 32
  %166 = trunc i64 %165 to i32
  %167 = add i32 %159, %148
  %168 = sub i32 %159, %148
  %169 = shl i32 %168, 1
  %170 = sext i32 %169 to i64
  %171 = mul nsw i64 %170, -1692549166
  %172 = lshr i64 %171, 32
  %173 = trunc i64 %172 to i32
  %174 = add i32 %160, %124
  %175 = sub i32 %124, %160
  %176 = shl i32 %175, 3
  %177 = sext i32 %176 to i64
  %178 = mul nsw i64 %177, 1375954754
  %179 = lshr i64 %178, 32
  %180 = trunc i64 %179 to i32
  %181 = add i32 %166, %130
  %182 = sub i32 %166, %130
  %183 = shl i32 %182, 3
  %184 = sext i32 %183 to i64
  %185 = mul nsw i64 %184, -1375954754
  %186 = lshr i64 %185, 32
  %187 = trunc i64 %186 to i32
  %188 = add i32 %167, %131
  %189 = sub i32 %131, %167
  %190 = shl i32 %189, 3
  %191 = sext i32 %190 to i64
  %192 = mul nsw i64 %191, 1375954754
  %193 = lshr i64 %192, 32
  %194 = trunc i64 %193 to i32
  %195 = add i32 %173, %137
  %196 = sub i32 %173, %137
  %197 = shl i32 %196, 3
  %198 = sext i32 %197 to i64
  %199 = mul nsw i64 %198, -1375954754
  %200 = lshr i64 %199, 32
  %201 = trunc i64 %200 to i32
  %202 = add i32 %174, %74
  %203 = sub i32 %74, %174
  %204 = shl i32 %203, 1
  %205 = sext i32 %204 to i64
  %206 = mul nsw i64 %205, 1162209775
  %207 = lshr i64 %206, 32
  %208 = trunc i64 %207 to i32
  %209 = add i32 %180, %80
  %210 = sub i32 %180, %80
  %211 = shl i32 %210, 1
  %212 = sext i32 %211 to i64
  %213 = mul nsw i64 %212, -1162209775
  %214 = lshr i64 %213, 32
  %215 = trunc i64 %214 to i32
  %216 = add i32 %181, %81
  %217 = sub i32 %81, %181
  %218 = shl i32 %217, 1
  %219 = sext i32 %218 to i64
  %220 = mul nsw i64 %219, 1162209775
  %221 = lshr i64 %220, 32
  %222 = trunc i64 %221 to i32
  %223 = add i32 %187, %87
  %224 = sub i32 %187, %87
  %225 = shl i32 %224, 1
  %226 = sext i32 %225 to i64
  %227 = mul nsw i64 %226, -1162209775
  %228 = lshr i64 %227, 32
  %229 = trunc i64 %228 to i32
  %230 = add i32 %188, %88
  %231 = sub i32 %88, %188
  %232 = shl i32 %231, 1
  %233 = sext i32 %232 to i64
  %234 = mul nsw i64 %233, 1162209775
  %235 = lshr i64 %234, 32
  %236 = trunc i64 %235 to i32
  %237 = add i32 %194, %94
  %238 = sub i32 %194, %94
  %239 = shl i32 %238, 1
  %240 = sext i32 %239 to i64
  %241 = mul nsw i64 %240, -1162209775
  %242 = lshr i64 %241, 32
  %243 = trunc i64 %242 to i32
  %244 = add i32 %195, %95
  %245 = sub i32 %95, %195
  %246 = shl i32 %245, 1
  %247 = sext i32 %246 to i64
  %248 = mul nsw i64 %247, 1162209775
  %249 = lshr i64 %248, 32
  %250 = trunc i64 %249 to i32
  %251 = add i32 %201, %101
  %252 = sub i32 %201, %101
  %253 = shl i32 %252, 1
  %254 = sext i32 %253 to i64
  %255 = mul nsw i64 %254, -1162209775
  %256 = lshr i64 %255, 32
  %257 = trunc i64 %256 to i32
  %258 = getelementptr inbounds i32, i32* %1, i64 1
  %259 = load i32, i32* %258, align 4
  %260 = getelementptr inbounds i32, i32* %1, i64 30
  %261 = load i32, i32* %260, align 4
  %262 = add i32 %261, %259
  %263 = sub i32 %259, %261
  %264 = shl i32 %263, 1
  %265 = sext i32 %264 to i64
  %266 = mul nsw i64 %265, 1085490621
  %267 = lshr i64 %266, 32
  %268 = trunc i64 %267 to i32
  %269 = getelementptr inbounds i32, i32* %1, i64 14
  %270 = load i32, i32* %269, align 4
  %271 = getelementptr inbounds i32, i32* %1, i64 17
  %272 = load i32, i32* %271, align 4
  %273 = add i32 %272, %270
  %274 = sub i32 %270, %272
  %275 = shl i32 %274, 3
  %276 = sext i32 %275 to i64
  %277 = mul nsw i64 %276, 1829445839
  %278 = lshr i64 %277, 32
  %279 = trunc i64 %278 to i32
  %280 = add i32 %273, %262
  %281 = sub i32 %262, %273
  %282 = shl i32 %281, 1
  %283 = sext i32 %282 to i64
  %284 = mul nsw i64 %283, 1122057232
  %285 = lshr i64 %284, 32
  %286 = trunc i64 %285 to i32
  %287 = add i32 %279, %268
  %288 = sub i32 %279, %268
  %289 = shl i32 %288, 1
  %290 = sext i32 %289 to i64
  %291 = mul nsw i64 %290, -1122057232
  %292 = lshr i64 %291, 32
  %293 = trunc i64 %292 to i32
  %294 = getelementptr inbounds i32, i32* %1, i64 6
  %295 = load i32, i32* %294, align 4
  %296 = getelementptr inbounds i32, i32* %1, i64 25
  %297 = load i32, i32* %296, align 4
  %298 = add i32 %297, %295
  %299 = sub i32 %295, %297
  %300 = shl i32 %299, 1
  %301 = sext i32 %300 to i64
  %302 = mul nsw i64 %301, 1336817425
  %303 = lshr i64 %302, 32
  %304 = trunc i64 %303 to i32
  %305 = getelementptr inbounds i32, i32* %1, i64 9
  %306 = load i32, i32* %305, align 4
  %307 = getelementptr inbounds i32, i32* %1, i64 22
  %308 = load i32, i32* %307, align 4
  %309 = add i32 %308, %306
  %310 = sub i32 %306, %308
  %311 = shl i32 %310, 1
  %312 = sext i32 %311 to i64
  %313 = mul nsw i64 %312, 1802489638
  %314 = lshr i64 %313, 32
  %315 = trunc i64 %314 to i32
  %316 = add i32 %309, %298
  %317 = sub i32 %298, %309
  %318 = shl i32 %317, 2
  %319 = sext i32 %318 to i64
  %320 = mul nsw i64 %319, 1849463489
  %321 = lshr i64 %320, 32
  %322 = trunc i64 %321 to i32
  %323 = add i32 %315, %304
  %324 = sub i32 %315, %304
  %325 = shl i32 %324, 2
  %326 = sext i32 %325 to i64
  %327 = mul nsw i64 %326, -1849463489
  %328 = lshr i64 %327, 32
  %329 = trunc i64 %328 to i32
  %330 = add i32 %316, %280
  %331 = sub i32 %280, %316
  %332 = shl i32 %331, 1
  %333 = sext i32 %332 to i64
  %334 = mul nsw i64 %333, 1291378312
  %335 = lshr i64 %334, 32
  %336 = trunc i64 %335 to i32
  %337 = add i32 %322, %286
  %338 = sub i32 %322, %286
  %339 = shl i32 %338, 1
  %340 = sext i32 %339 to i64
  %341 = mul nsw i64 %340, -1291378312
  %342 = lshr i64 %341, 32
  %343 = trunc i64 %342 to i32
  %344 = add i32 %323, %287
  %345 = sub i32 %287, %323
  %346 = shl i32 %345, 1
  %347 = sext i32 %346 to i64
  %348 = mul nsw i64 %347, 1291378312
  %349 = lshr i64 %348, 32
  %350 = trunc i64 %349 to i32
  %351 = add i32 %329, %293
  %352 = sub i32 %329, %293
  %353 = shl i32 %352, 1
  %354 = sext i32 %353 to i64
  %355 = mul nsw i64 %354, -1291378312
  %356 = lshr i64 %355, 32
  %357 = trunc i64 %356 to i32
  %358 = getelementptr inbounds i32, i32* %1, i64 2
  %359 = load i32, i32* %358, align 4
  %360 = getelementptr inbounds i32, i32* %1, i64 29
  %361 = load i32, i32* %360, align 4
  %362 = add i32 %361, %359
  %363 = sub i32 %359, %361
  %364 = shl i32 %363, 1
  %365 = sext i32 %364 to i64
  %366 = mul nsw i64 %365, 1106914669
  %367 = lshr i64 %366, 32
  %368 = trunc i64 %367 to i32
  %369 = getelementptr inbounds i32, i32* %1, i64 13
  %370 = load i32, i32* %369, align 4
  %371 = getelementptr inbounds i32, i32* %1, i64 18
  %372 = load i32, i32* %371, align 4
  %373 = add i32 %372, %370
  %374 = sub i32 %370, %372
  %375 = shl i32 %374, 3
  %376 = sext i32 %375 to i64
  %377 = mul nsw i64 %376, 1104762768
  %378 = lshr i64 %377, 32
  %379 = trunc i64 %378 to i32
  %380 = add i32 %373, %362
  %381 = sub i32 %362, %373
  %382 = shl i32 %381, 1
  %383 = sext i32 %382 to i64
  %384 = mul nsw i64 %383, 1217503044
  %385 = lshr i64 %384, 32
  %386 = trunc i64 %385 to i32
  %387 = add i32 %379, %368
  %388 = sub i32 %379, %368
  %389 = shl i32 %388, 1
  %390 = sext i32 %389 to i64
  %391 = mul nsw i64 %390, -1217503044
  %392 = lshr i64 %391, 32
  %393 = trunc i64 %392 to i32
  %394 = getelementptr inbounds i32, i32* %1, i64 5
  %395 = load i32, i32* %394, align 4
  %396 = getelementptr inbounds i32, i32* %1, i64 26
  %397 = load i32, i32* %396, align 4
  %398 = add i32 %397, %395
  %399 = sub i32 %395, %397
  %400 = shl i32 %399, 1
  %401 = sext i32 %400 to i64
  %402 = mul nsw i64 %401, 1251843312
  %403 = lshr i64 %402, 32
  %404 = trunc i64 %403 to i32
  %405 = getelementptr inbounds i32, i32* %1, i64 10
  %406 = load i32, i32* %405, align 4
  %407 = getelementptr inbounds i32, i32* %1, i64 21
  %408 = load i32, i32* %407, align 4
  %409 = add i32 %408, %406
  %410 = sub i32 %406, %408
  %411 = shl i32 %410, 1
  %412 = sext i32 %411 to i64
  %413 = mul nsw i64 %412, 2088574387
  %414 = lshr i64 %413, 32
  %415 = trunc i64 %414 to i32
  %416 = add i32 %409, %398
  %417 = sub i32 %398, %409
  %418 = shl i32 %417, 2
  %419 = sext i32 %418 to i64
  %420 = mul nsw i64 %419, 1138893993
  %421 = lshr i64 %420, 32
  %422 = trunc i64 %421 to i32
  %423 = add i32 %415, %404
  %424 = sub i32 %415, %404
  %425 = shl i32 %424, 2
  %426 = sext i32 %425 to i64
  %427 = mul nsw i64 %426, -1138893993
  %428 = lshr i64 %427, 32
  %429 = trunc i64 %428 to i32
  %430 = add i32 %416, %380
  %431 = sub i32 %380, %416
  %432 = shl i32 %431, 1
  %433 = sext i32 %432 to i64
  %434 = mul nsw i64 %433, 1932684223
  %435 = lshr i64 %434, 32
  %436 = trunc i64 %435 to i32
  %437 = add i32 %422, %386
  %438 = sub i32 %422, %386
  %439 = shl i32 %438, 1
  %440 = sext i32 %439 to i64
  %441 = mul nsw i64 %440, -1932684223
  %442 = lshr i64 %441, 32
  %443 = trunc i64 %442 to i32
  %444 = add i32 %423, %387
  %445 = sub i32 %387, %423
  %446 = shl i32 %445, 1
  %447 = sext i32 %446 to i64
  %448 = mul nsw i64 %447, 1932684223
  %449 = lshr i64 %448, 32
  %450 = trunc i64 %449 to i32
  %451 = add i32 %429, %393
  %452 = sub i32 %429, %393
  %453 = shl i32 %452, 1
  %454 = sext i32 %453 to i64
  %455 = mul nsw i64 %454, -1932684223
  %456 = lshr i64 %455, 32
  %457 = trunc i64 %456 to i32
  %458 = add i32 %430, %330
  %459 = sub i32 %330, %430
  %460 = shl i32 %459, 2
  %461 = sext i32 %460 to i64
  %462 = mul nsw i64 %461, 1402911301
  %463 = lshr i64 %462, 32
  %464 = trunc i64 %463 to i32
  %465 = add i32 %436, %336
  %466 = sub i32 %436, %336
  %467 = shl i32 %466, 2
  %468 = sext i32 %467 to i64
  %469 = mul nsw i64 %468, -1402911301
  %470 = lshr i64 %469, 32
  %471 = trunc i64 %470 to i32
  %472 = add i32 %437, %337
  %473 = sub i32 %337, %437
  %474 = shl i32 %473, 2
  %475 = sext i32 %474 to i64
  %476 = mul nsw i64 %475, 1402911301
  %477 = lshr i64 %476, 32
  %478 = trunc i64 %477 to i32
  %479 = add i32 %443, %343
  %480 = sub i32 %443, %343
  %481 = shl i32 %480, 2
  %482 = sext i32 %481 to i64
  %483 = mul nsw i64 %482, -1402911301
  %484 = lshr i64 %483, 32
  %485 = trunc i64 %484 to i32
  %486 = add i32 %444, %344
  %487 = sub i32 %344, %444
  %488 = shl i32 %487, 2
  %489 = sext i32 %488 to i64
  %490 = mul nsw i64 %489, 1402911301
  %491 = lshr i64 %490, 32
  %492 = trunc i64 %491 to i32
  %493 = add i32 %450, %350
  %494 = sub i32 %450, %350
  %495 = shl i32 %494, 2
  %496 = sext i32 %495 to i64
  %497 = mul nsw i64 %496, -1402911301
  %498 = lshr i64 %497, 32
  %499 = trunc i64 %498 to i32
  %500 = add i32 %451, %351
  %501 = sub i32 %351, %451
  %502 = shl i32 %501, 2
  %503 = sext i32 %502 to i64
  %504 = mul nsw i64 %503, 1402911301
  %505 = lshr i64 %504, 32
  %506 = trunc i64 %505 to i32
  %507 = add i32 %457, %357
  %508 = sub i32 %457, %357
  %509 = shl i32 %508, 2
  %510 = sext i32 %509 to i64
  %511 = mul nsw i64 %510, -1402911301
  %512 = lshr i64 %511, 32
  %513 = trunc i64 %512 to i32
  %514 = add i32 %458, %202
  %515 = sub i32 %202, %458
  %516 = shl i32 %515, 1
  %517 = sext i32 %516 to i64
  %518 = mul nsw i64 %517, 1518500250
  %519 = lshr i64 %518, 32
  %520 = trunc i64 %519 to i32
  %521 = add i32 %464, %208
  %522 = sub i32 %464, %208
  %523 = shl i32 %522, 1
  %524 = sext i32 %523 to i64
  %525 = mul nsw i64 %524, -1518500250
  %526 = lshr i64 %525, 32
  %527 = trunc i64 %526 to i32
  %528 = add i32 %521, %527
  %529 = add i32 %465, %209
  %530 = sub i32 %209, %465
  %531 = shl i32 %530, 1
  %532 = sext i32 %531 to i64
  %533 = mul nsw i64 %532, 1518500250
  %534 = lshr i64 %533, 32
  %535 = trunc i64 %534 to i32
  %536 = add i32 %471, %215
  %537 = sub i32 %471, %215
  %538 = shl i32 %537, 1
  %539 = sext i32 %538 to i64
  %540 = mul nsw i64 %539, -1518500250
  %541 = lshr i64 %540, 32
  %542 = trunc i64 %541 to i32
  %543 = add i32 %536, %542
  %544 = add i32 %529, %543
  %545 = add i32 %543, %535
  %546 = add i32 %542, %535
  %547 = add i32 %472, %216
  %548 = sub i32 %216, %472
  %549 = shl i32 %548, 1
  %550 = sext i32 %549 to i64
  %551 = mul nsw i64 %550, 1518500250
  %552 = lshr i64 %551, 32
  %553 = trunc i64 %552 to i32
  %554 = add i32 %478, %222
  %555 = sub i32 %478, %222
  %556 = shl i32 %555, 1
  %557 = sext i32 %556 to i64
  %558 = mul nsw i64 %557, -1518500250
  %559 = lshr i64 %558, 32
  %560 = trunc i64 %559 to i32
  %561 = add i32 %554, %560
  %562 = add i32 %479, %223
  %563 = sub i32 %223, %479
  %564 = shl i32 %563, 1
  %565 = sext i32 %564 to i64
  %566 = mul nsw i64 %565, 1518500250
  %567 = lshr i64 %566, 32
  %568 = trunc i64 %567 to i32
  %569 = add i32 %485, %229
  %570 = sub i32 %485, %229
  %571 = shl i32 %570, 1
  %572 = sext i32 %571 to i64
  %573 = mul nsw i64 %572, -1518500250
  %574 = lshr i64 %573, 32
  %575 = trunc i64 %574 to i32
  %576 = add i32 %569, %575
  %577 = add i32 %562, %576
  %578 = add i32 %576, %568
  %579 = add i32 %575, %568
  %580 = add i32 %486, %230
  %581 = sub i32 %230, %486
  %582 = shl i32 %581, 1
  %583 = sext i32 %582 to i64
  %584 = mul nsw i64 %583, 1518500250
  %585 = lshr i64 %584, 32
  %586 = trunc i64 %585 to i32
  %587 = add i32 %492, %236
  %588 = sub i32 %492, %236
  %589 = shl i32 %588, 1
  %590 = sext i32 %589 to i64
  %591 = mul nsw i64 %590, -1518500250
  %592 = lshr i64 %591, 32
  %593 = trunc i64 %592 to i32
  %594 = add i32 %587, %593
  %595 = add i32 %493, %237
  %596 = sub i32 %237, %493
  %597 = shl i32 %596, 1
  %598 = sext i32 %597 to i64
  %599 = mul nsw i64 %598, 1518500250
  %600 = lshr i64 %599, 32
  %601 = trunc i64 %600 to i32
  %602 = add i32 %499, %243
  %603 = sub i32 %499, %243
  %604 = shl i32 %603, 1
  %605 = sext i32 %604 to i64
  %606 = mul nsw i64 %605, -1518500250
  %607 = lshr i64 %606, 32
  %608 = trunc i64 %607 to i32
  %609 = add i32 %602, %608
  %610 = add i32 %595, %609
  %611 = add i32 %609, %601
  %612 = add i32 %608, %601
  %613 = add i32 %500, %244
  %614 = sub i32 %244, %500
  %615 = shl i32 %614, 1
  %616 = sext i32 %615 to i64
  %617 = mul nsw i64 %616, 1518500250
  %618 = lshr i64 %617, 32
  %619 = trunc i64 %618 to i32
  %620 = add i32 %506, %250
  %621 = sub i32 %506, %250
  %622 = shl i32 %621, 1
  %623 = sext i32 %622 to i64
  %624 = mul nsw i64 %623, -1518500250
  %625 = lshr i64 %624, 32
  %626 = trunc i64 %625 to i32
  %627 = add i32 %620, %626
  %628 = add i32 %507, %251
  %629 = sub i32 %251, %507
  %630 = shl i32 %629, 1
  %631 = sext i32 %630 to i64
  %632 = mul nsw i64 %631, 1518500250
  %633 = lshr i64 %632, 32
  %634 = trunc i64 %633 to i32
  %635 = add i32 %513, %257
  %636 = sub i32 %513, %257
  %637 = shl i32 %636, 1
  %638 = sext i32 %637 to i64
  %639 = mul nsw i64 %638, -1518500250
  %640 = lshr i64 %639, 32
  %641 = trunc i64 %640 to i32
  %642 = add i32 %635, %641
  %643 = add i32 %628, %642
  %644 = add i32 %642, %634
  %645 = add i32 %641, %634
  %646 = add i32 %547, %577
  %647 = add i32 %577, %561
  %648 = add i32 %578, %561
  %649 = add i32 %578, %553
  %650 = add i32 %579, %553
  %651 = add i32 %579, %560
  %652 = add i32 %575, %560
  store i32 %514, i32* %0, align 4
  %653 = getelementptr inbounds i32, i32* %0, i64 16
  store i32 %520, i32* %653, align 4
  %654 = getelementptr inbounds i32, i32* %0, i64 8
  store i32 %528, i32* %654, align 4
  %655 = getelementptr inbounds i32, i32* %0, i64 24
  store i32 %527, i32* %655, align 4
  %656 = getelementptr inbounds i32, i32* %0, i64 4
  store i32 %544, i32* %656, align 4
  %657 = getelementptr inbounds i32, i32* %0, i64 20
  store i32 %546, i32* %657, align 4
  %658 = getelementptr inbounds i32, i32* %0, i64 12
  store i32 %545, i32* %658, align 4
  %659 = getelementptr inbounds i32, i32* %0, i64 28
  store i32 %542, i32* %659, align 4
  %660 = getelementptr inbounds i32, i32* %0, i64 2
  store i32 %646, i32* %660, align 4
  %661 = getelementptr inbounds i32, i32* %0, i64 18
  store i32 %650, i32* %661, align 4
  %662 = getelementptr inbounds i32, i32* %0, i64 10
  store i32 %648, i32* %662, align 4
  %663 = getelementptr inbounds i32, i32* %0, i64 26
  store i32 %652, i32* %663, align 4
  %664 = getelementptr inbounds i32, i32* %0, i64 6
  store i32 %647, i32* %664, align 4
  %665 = getelementptr inbounds i32, i32* %0, i64 22
  store i32 %651, i32* %665, align 4
  %666 = getelementptr inbounds i32, i32* %0, i64 14
  store i32 %649, i32* %666, align 4
  %667 = getelementptr inbounds i32, i32* %0, i64 30
  store i32 %575, i32* %667, align 4
  %668 = add i32 %613, %643
  %669 = add i32 %643, %627
  %670 = add i32 %644, %627
  %671 = add i32 %644, %619
  %672 = add i32 %645, %619
  %673 = add i32 %645, %626
  %674 = add i32 %641, %626
  %675 = add i32 %580, %668
  %676 = getelementptr inbounds i32, i32* %0, i64 1
  store i32 %675, i32* %676, align 4
  %677 = add i32 %672, %586
  %678 = getelementptr inbounds i32, i32* %0, i64 17
  store i32 %677, i32* %678, align 4
  %679 = add i32 %670, %594
  %680 = getelementptr inbounds i32, i32* %0, i64 9
  store i32 %679, i32* %680, align 4
  %681 = add i32 %674, %593
  %682 = getelementptr inbounds i32, i32* %0, i64 25
  store i32 %681, i32* %682, align 4
  %683 = add i32 %669, %610
  %684 = getelementptr inbounds i32, i32* %0, i64 5
  store i32 %683, i32* %684, align 4
  %685 = add i32 %673, %612
  %686 = getelementptr inbounds i32, i32* %0, i64 21
  store i32 %685, i32* %686, align 4
  %687 = add i32 %671, %611
  %688 = getelementptr inbounds i32, i32* %0, i64 13
  store i32 %687, i32* %688, align 4
  %689 = add i32 %641, %608
  %690 = getelementptr inbounds i32, i32* %0, i64 29
  store i32 %689, i32* %690, align 4
  %691 = add i32 %668, %610
  %692 = getelementptr inbounds i32, i32* %0, i64 3
  store i32 %691, i32* %692, align 4
  %693 = add i32 %672, %612
  %694 = getelementptr inbounds i32, i32* %0, i64 19
  store i32 %693, i32* %694, align 4
  %695 = add i32 %670, %611
  %696 = getelementptr inbounds i32, i32* %0, i64 11
  store i32 %695, i32* %696, align 4
  %697 = add i32 %674, %608
  %698 = getelementptr inbounds i32, i32* %0, i64 27
  store i32 %697, i32* %698, align 4
  %699 = add i32 %669, %594
  %700 = getelementptr inbounds i32, i32* %0, i64 7
  store i32 %699, i32* %700, align 4
  %701 = add i32 %673, %593
  %702 = getelementptr inbounds i32, i32* %0, i64 23
  store i32 %701, i32* %702, align 4
  %703 = add i32 %671, %586
  %704 = getelementptr inbounds i32, i32* %0, i64 15
  store i32 %703, i32* %704, align 4
  %705 = getelementptr inbounds i32, i32* %0, i64 31
  store i32 %641, i32* %705, align 4
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
