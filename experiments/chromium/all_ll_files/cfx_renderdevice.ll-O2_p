; ModuleID = '../../third_party/pdfium/core/fxge/cfx_renderdevice.cpp'
source_filename = "../../third_party/pdfium/core/fxge/cfx_renderdevice.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%union.anon = type { %class.CFX_FloatRect }
%class.CFX_FloatRect = type { float, float, float, float }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { float*, float*, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { float* }
%class.CFX_RenderDevice = type { i32 (...)**, %"class.fxcrt::RetainPtr", i32, i32, i32, i32, i8, %struct.FX_RECT, %"class.std::__1::unique_ptr.1" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CFX_DIBitmap* }
%class.CFX_DIBitmap = type { %class.CFX_DIBBase, %"class.fxcrt::MaybeOwned" }
%class.CFX_DIBBase = type { %"class.fxcrt::Retainable", i16, i32, i32, i32, %"class.fxcrt::RetainPtr", %"class.std::__1::vector" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i32* }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.8", %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i8* }
%"class.fxcrt::UnownedPtr" = type { i8* }
%struct.FX_RECT = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.RenderDeviceDriverIface* }
%class.RenderDeviceDriverIface = type { i32 (...)** }
%"class.CFX_RenderDevice::StateRestorer" = type { %"class.fxcrt::UnownedPtr.189" }
%"class.fxcrt::UnownedPtr.189" = type { %class.CFX_RenderDevice* }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%class.CFX_PathData = type { %"class.std::__1::vector.12" }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %class.FX_PATHPOINT*, %class.FX_PATHPOINT*, %"class.std::__1::__compressed_pair.14" }
%class.FX_PATHPOINT = type <{ %class.CFX_PTemplate, i8, i8, [2 x i8] }>
%class.CFX_PTemplate = type { float, float }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %class.FX_PATHPOINT* }
%struct.CFX_FillRenderOptions = type { i8, i8 }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.17" }
%"class.pdfium::Optional" = type { %"class.pdfium::internal::OptionalBase" }
%"class.pdfium::internal::OptionalBase" = type { %"struct.pdfium::internal::OptionalStorage" }
%"struct.pdfium::internal::OptionalStorage" = type { %"struct.pdfium::internal::OptionalStorageBase" }
%"struct.pdfium::internal::OptionalStorageBase" = type { i8, %union.anon }
%"class.fxcrt::RetainPtr.25" = type { %"class.std::__1::unique_ptr.26" }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %class.CFX_DIBBase* }
%class.CFX_DefaultRenderDevice = type { %class.CFX_RenderDevice }
%class.CFX_ClipRgn = type opaque
%struct.FXDIB_ResampleOptions = type { i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.31" = type opaque
%class.CFX_ImageRenderer = type <{ %"class.fxcrt::RetainPtr", %"class.fxcrt::UnownedPtr.32", %class.CFX_Matrix, %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.39", %class.CFX_BitmapComposer, %struct.FX_RECT, i32, i32, i32, i8, [3 x i8] }>
%"class.fxcrt::UnownedPtr.32" = type { %class.CFX_ClipRgn* }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %class.CFX_ImageTransformer* }
%class.CFX_ImageTransformer = type opaque
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %class.CFX_ImageStretcher* }
%class.CFX_ImageStretcher = type opaque
%class.CFX_BitmapComposer = type { %class.ScanlineComposerIface, %"class.fxcrt::RetainPtr", %"class.fxcrt::UnownedPtr.32", i16, i32, i32, i32, i32, i32, i32, %"class.fxcrt::RetainPtr", %class.CFX_ScanlineCompositor, i8, i8, i8, i8, i32, %"class.std::__1::vector.47", %"class.std::__1::vector.47", %"class.std::__1::vector.47", %"class.std::__1::vector.47" }
%class.ScanlineComposerIface = type { i32 (...)** }
%class.CFX_ScanlineCompositor = type <{ i32, i16, i16, %"class.CFX_ScanlineCompositor::Palette", i32, i32, i32, i32, i32, i8, [3 x i8] }>
%"class.CFX_ScanlineCompositor::Palette" = type { i64, i64, %"class.std::__1::unique_ptr.45" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::vector.47" = type { %"class.std::__1::__vector_base.48" }
%"class.std::__1::__vector_base.48" = type { i8*, i8*, %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%class.PauseIndicatorIface = type opaque
%class.TextCharPos = type { %class.CFX_PTemplate, i32, i32, i32, i32, i8, i8, [4 x float] }
%class.CFX_Font = type <{ %"class.fxcrt::RetainPtr.53", %"class.std::__1::unique_ptr.59", %"class.fxcrt::RetainPtr.65", %"class.fxcrt::RetainPtr.89", %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.8", %"class.std::__1::vector.47", %"class.pdfium::span.121", i8, i8, [6 x i8] }>
%"class.fxcrt::RetainPtr.53" = type { %"class.std::__1::unique_ptr.54" }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type opaque
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %struct.FT_StreamRec_* }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%"class.fxcrt::RetainPtr.65" = type { %"class.std::__1::unique_ptr.66" }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %class.CFX_Face* }
%class.CFX_Face = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.77", %"class.fxcrt::RetainPtr.81" }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.69", %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { i64 }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %struct.FT_FaceRec_* }
%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_LibraryRec_ = type opaque
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type opaque
%struct.FT_Slot_InternalRec_ = type opaque
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type opaque
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type opaque
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Face_InternalRec_ = type opaque
%"class.fxcrt::RetainPtr.81" = type { %"class.std::__1::unique_ptr.82" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.fxcrt::Retainable"* }
%"class.fxcrt::RetainPtr.89" = type { %"class.std::__1::unique_ptr.90" }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %class.CFX_GlyphCache* }
%class.CFX_GlyphCache = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::RetainPtr.65", %"class.std::__1::map", %"class.std::__1::map.102" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.93" }
%"class.std::__1::__tree.93" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.94", %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::map.102" = type { %"class.std::__1::__tree.103" }
%"class.std::__1::__tree.103" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.104", %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %class.CFX_SubstFont* }
%class.CFX_SubstFont = type opaque
%"class.pdfium::span.121" = type { %"class.fxcrt::UnownedPtr", i64 }
%struct.CFX_TextRenderOptions = type <{ i32, i8, i8, [2 x i8] }>
%"class.std::__1::vector.159" = type { %"class.std::__1::__vector_base.160" }
%"class.std::__1::__vector_base.160" = type { %class.TextGlyphPos*, %class.TextGlyphPos*, %"class.std::__1::__compressed_pair.163" }
%class.TextGlyphPos = type { %"class.fxcrt::UnownedPtr.161", %class.CFX_PTemplate.162, %class.CFX_PTemplate }
%"class.fxcrt::UnownedPtr.161" = type { %class.CFX_GlyphBitmap* }
%class.CFX_GlyphBitmap = type { i32, i32, %"class.fxcrt::RetainPtr" }
%class.CFX_PTemplate.162 = type { i32, i32 }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %class.TextGlyphPos* }
%"class.pdfium::Optional.168" = type { %"class.pdfium::internal::OptionalBase.169" }
%"class.pdfium::internal::OptionalBase.169" = type { %"struct.pdfium::internal::OptionalStorage.170" }
%"struct.pdfium::internal::OptionalStorage.170" = type { %"struct.pdfium::internal::OptionalStorageBase.171" }
%"struct.pdfium::internal::OptionalStorageBase.171" = type { i8, %union.anon.172 }
%union.anon.172 = type { %class.CFX_PTemplate.162 }
%class.CFX_GEModule = type { %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.153", i8** }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.CFX_GEModule::PlatformIface"* }
%"class.CFX_GEModule::PlatformIface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %class.CFX_FontMgr* }
%class.CFX_FontMgr = type <{ %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.135", %"class.std::__1::map.141", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %struct.FT_LibraryRec_* }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %class.CFX_FontMapper* }
%class.CFX_FontMapper = type opaque
%"class.std::__1::map.141" = type { %"class.std::__1::__tree.142" }
%"class.std::__1::__tree.142" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.143", %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %class.CFX_FontCache* }
%class.CFX_FontCache = type opaque
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %class.CFX_PTemplate*, %class.CFX_PTemplate*, %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %class.CFX_PTemplate* }
%struct.CFX_Color = type { i32, float, float, float, float }

$_ZNSt3__16vectorI12FX_PATHPOINTNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_ = comdat any

$_ZNSt3__16vectorIfNS_9allocatorIfEEE6assignIPKfEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_ = comdat any

@_ZTV16CFX_RenderDevice = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CFX_RenderDevice*)* @_ZN16CFX_RenderDeviceD2Ev to i8*), i8* bitcast (void (%class.CFX_RenderDevice*)* @_ZN16CFX_RenderDeviceD0Ev to i8*)] }, align 8
@__const._ZN16CFX_RenderDevice17DrawPathWithBlendEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions9BlendMode.maybe_rect_f = private unnamed_addr constant { { { { i8, [3 x i8], %union.anon } } } } { { { { i8, [3 x i8], %union.anon } } } { { { i8, [3 x i8], %union.anon } } { { i8, [3 x i8], %union.anon } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon { %class.CFX_FloatRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } } } } } }, align 4
@.ref.tmp = private constant [2 x float] [float 3.000000e+00, float 3.000000e+00], align 4
@__const._ZN16CFX_RenderDevice10DrawBorderEPK10CFX_MatrixRK13CFX_FloatRectfRK9CFX_ColorS8_S8_11BorderStylei.gsd.3 = private unnamed_addr constant { i8, i8, [2 x i8], float, float, float, %"class.std::__1::vector.17" } { i8 -86, i8 -86, [2 x i8] c"\AA\AA", float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %"class.std::__1::vector.17" { %"class.std::__1::__vector_base.18" { float* inttoptr (i64 -6148914691236517206 to float*), float* inttoptr (i64 -6148914691236517206 to float*), %"class.std::__1::__compressed_pair.19" { %"struct.std::__1::__compressed_pair_elem.20" { float* inttoptr (i64 -6148914691236517206 to float*) } } } } }, align 8
@_ZN12_GLOBAL__N_117g_TextGammaAdjustE = internal unnamed_addr constant [256 x i8] c"\00\02\03\04\06\07\08\0A\0B\0C\0D\0F\10\11\12\13\15\16\17\18\19\1A\1B\1D\1E\1F !\22#$&'()*+,-./013456789:;<=>?@ABCDEGHIJKLMNOPQRSTUVWXYZ[\5C]^_`abcdefghijklmnopqrstuvwxyz{|}~\7F\80\81\81\82\83\84\85\86\87\88\89\8A\8B\8C\8D\8E\8F\90\91\92\93\94\95\96\97\98\99\9A\9B\9C\9C\9D\9E\9F\A0\A1\A2\A3\A4\A5\A6\A7\A8\A9\AA\AB\AC\AD\AE\AE\AF\B0\B1\B2\B3\B4\B5\B6\B7\B8\B9\BA\BB\BC\BD\BE\BE\BF\C0\C1\C2\C3\C4\C5\C6\C7\C8\C9\CA\CB\CC\CC\CD\CE\CF\D0\D1\D2\D3\D4\D5\D6\D7\D8\D9\D9\DA\DB\DC\DD\DE\DF\E0\E1\E2\E3\E4\E4\E5\E6\E7\E8\E9\EA\EB\EC\ED\EE\EF\EF\F0\F1\F2\F3\F4\F5\F6\F7\F8\F9\FA\FA\FB\FC\FD\FE\FF", align 16

@_ZN16CFX_RenderDeviceC1Ev = hidden unnamed_addr alias void (%class.CFX_RenderDevice*), void (%class.CFX_RenderDevice*)* @_ZN16CFX_RenderDeviceC2Ev
@_ZN16CFX_RenderDeviceD1Ev = hidden unnamed_addr alias void (%class.CFX_RenderDevice*), void (%class.CFX_RenderDevice*)* @_ZN16CFX_RenderDeviceD2Ev
@_ZN16CFX_RenderDevice13StateRestorerC1EPS_ = hidden unnamed_addr alias void (%"class.CFX_RenderDevice::StateRestorer"*, %class.CFX_RenderDevice*), void (%"class.CFX_RenderDevice::StateRestorer"*, %class.CFX_RenderDevice*)* @_ZN16CFX_RenderDevice13StateRestorerC2EPS_
@_ZN16CFX_RenderDevice13StateRestorerD1Ev = hidden unnamed_addr alias void (%"class.CFX_RenderDevice::StateRestorer"*), void (%"class.CFX_RenderDevice::StateRestorer"*)* @_ZN16CFX_RenderDevice13StateRestorerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_RenderDeviceC2Ev(%class.CFX_RenderDevice* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV16CFX_RenderDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7
  %5 = bitcast %struct.FX_RECT* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 16, i1 false) #11
  %6 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 8
  %7 = bitcast %"class.std::__1::unique_ptr.1"* %6 to i64*
  store i64 0, i64* %7, align 8
  %8 = bitcast %"class.fxcrt::RetainPtr"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 25, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_RenderDeviceD2Ev(%class.CFX_RenderDevice*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV16CFX_RenderDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %4 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %3, align 8
  %5 = icmp eq %class.RenderDeviceDriverIface* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  store %class.RenderDeviceDriverIface* null, %class.RenderDeviceDriverIface** %3, align 8
  br label %36

7:                                                ; preds = %1
  %8 = bitcast %class.RenderDeviceDriverIface* %4 to void (%class.RenderDeviceDriverIface*, i1)***
  %9 = load void (%class.RenderDeviceDriverIface*, i1)**, void (%class.RenderDeviceDriverIface*, i1)*** %8, align 8
  %10 = getelementptr inbounds void (%class.RenderDeviceDriverIface*, i1)*, void (%class.RenderDeviceDriverIface*, i1)** %9, i64 5
  %11 = load void (%class.RenderDeviceDriverIface*, i1)*, void (%class.RenderDeviceDriverIface*, i1)** %10, align 8
  tail call void %11(%class.RenderDeviceDriverIface* nonnull %4, i1 zeroext false) #11
  %12 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %3, align 8
  %13 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7
  %14 = bitcast %class.RenderDeviceDriverIface* %12 to i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)***
  %15 = load i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)**, i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)*, i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)** %15, i64 12
  %17 = load i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)*, i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)** %16, align 8
  %18 = tail call zeroext i1 %17(%class.RenderDeviceDriverIface* %12, %struct.FX_RECT* %13) #11
  br i1 %18, label %28, label %19

19:                                               ; preds = %7
  %20 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %13, i64 0, i32 0
  store i32 0, i32* %20, align 4
  %21 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7, i32 1
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7, i32 2
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7, i32 3
  store i32 %26, i32* %27, align 4
  br label %28

28:                                               ; preds = %7, %19
  %29 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %3, align 8
  store %class.RenderDeviceDriverIface* null, %class.RenderDeviceDriverIface** %3, align 8
  %30 = icmp eq %class.RenderDeviceDriverIface* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = bitcast %class.RenderDeviceDriverIface* %29 to void (%class.RenderDeviceDriverIface*)***
  %33 = load void (%class.RenderDeviceDriverIface*)**, void (%class.RenderDeviceDriverIface*)*** %32, align 8
  %34 = getelementptr inbounds void (%class.RenderDeviceDriverIface*)*, void (%class.RenderDeviceDriverIface*)** %33, i64 1
  %35 = load void (%class.RenderDeviceDriverIface*)*, void (%class.RenderDeviceDriverIface*)** %34, align 8
  tail call void %35(%class.RenderDeviceDriverIface* nonnull %29) #11
  br label %36

36:                                               ; preds = %6, %28, %31
  %37 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %38 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %37, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %37, align 8
  %39 = icmp eq %class.CFX_DIBitmap* %38, null
  br i1 %39, label %51, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %38, i64 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = add nsw i64 %42, -1
  store i64 %43, i64* %41, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %51

45:                                               ; preds = %40
  %46 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %38, i64 0, i32 0, i32 0
  %47 = bitcast %class.CFX_DIBitmap* %38 to void (%"class.fxcrt::Retainable"*)***
  %48 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %48, i64 1
  %50 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %49, align 8
  tail call void %50(%"class.fxcrt::Retainable"* nonnull %46) #11
  br label %51

51:                                               ; preds = %36, %40, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_RenderDevice12RestoreStateEb(%class.CFX_RenderDevice*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %4 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %3, align 8
  %5 = icmp eq %class.RenderDeviceDriverIface* %4, null
  br i1 %5, label %27, label %6

6:                                                ; preds = %2
  %7 = bitcast %class.RenderDeviceDriverIface* %4 to void (%class.RenderDeviceDriverIface*, i1)***
  %8 = load void (%class.RenderDeviceDriverIface*, i1)**, void (%class.RenderDeviceDriverIface*, i1)*** %7, align 8
  %9 = getelementptr inbounds void (%class.RenderDeviceDriverIface*, i1)*, void (%class.RenderDeviceDriverIface*, i1)** %8, i64 5
  %10 = load void (%class.RenderDeviceDriverIface*, i1)*, void (%class.RenderDeviceDriverIface*, i1)** %9, align 8
  tail call void %10(%class.RenderDeviceDriverIface* nonnull %4, i1 zeroext %1) #11
  %11 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %3, align 8
  %12 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7
  %13 = bitcast %class.RenderDeviceDriverIface* %11 to i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)***
  %14 = load i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)**, i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)*, i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)** %14, i64 12
  %16 = load i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)*, i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)** %15, align 8
  %17 = tail call zeroext i1 %16(%class.RenderDeviceDriverIface* %11, %struct.FX_RECT* %12) #11
  br i1 %17, label %27, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %12, i64 0, i32 0
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7, i32 1
  store i32 0, i32* %20, align 4
  %21 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7, i32 2
  store i32 %22, i32* %23, align 4
  %24 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7, i32 3
  store i32 %25, i32* %26, align 4
  br label %27

27:                                               ; preds = %2, %18, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_RenderDeviceD0Ev(%class.CFX_RenderDevice*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV16CFX_RenderDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %4 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %3, align 8
  %5 = icmp eq %class.RenderDeviceDriverIface* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  store %class.RenderDeviceDriverIface* null, %class.RenderDeviceDriverIface** %3, align 8
  br label %36

7:                                                ; preds = %1
  %8 = bitcast %class.RenderDeviceDriverIface* %4 to void (%class.RenderDeviceDriverIface*, i1)***
  %9 = load void (%class.RenderDeviceDriverIface*, i1)**, void (%class.RenderDeviceDriverIface*, i1)*** %8, align 8
  %10 = getelementptr inbounds void (%class.RenderDeviceDriverIface*, i1)*, void (%class.RenderDeviceDriverIface*, i1)** %9, i64 5
  %11 = load void (%class.RenderDeviceDriverIface*, i1)*, void (%class.RenderDeviceDriverIface*, i1)** %10, align 8
  tail call void %11(%class.RenderDeviceDriverIface* nonnull %4, i1 zeroext false) #11
  %12 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %3, align 8
  %13 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7
  %14 = bitcast %class.RenderDeviceDriverIface* %12 to i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)***
  %15 = load i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)**, i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)*, i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)** %15, i64 12
  %17 = load i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)*, i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)** %16, align 8
  %18 = tail call zeroext i1 %17(%class.RenderDeviceDriverIface* %12, %struct.FX_RECT* %13) #11
  br i1 %18, label %28, label %19

19:                                               ; preds = %7
  %20 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %13, i64 0, i32 0
  store i32 0, i32* %20, align 4
  %21 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7, i32 1
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7, i32 2
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7, i32 3
  store i32 %26, i32* %27, align 4
  br label %28

28:                                               ; preds = %19, %7
  %29 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %3, align 8
  store %class.RenderDeviceDriverIface* null, %class.RenderDeviceDriverIface** %3, align 8
  %30 = icmp eq %class.RenderDeviceDriverIface* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = bitcast %class.RenderDeviceDriverIface* %29 to void (%class.RenderDeviceDriverIface*)***
  %33 = load void (%class.RenderDeviceDriverIface*)**, void (%class.RenderDeviceDriverIface*)*** %32, align 8
  %34 = getelementptr inbounds void (%class.RenderDeviceDriverIface*)*, void (%class.RenderDeviceDriverIface*)** %33, i64 1
  %35 = load void (%class.RenderDeviceDriverIface*)*, void (%class.RenderDeviceDriverIface*)** %34, align 8
  tail call void %35(%class.RenderDeviceDriverIface* nonnull %29) #11
  br label %36

36:                                               ; preds = %31, %28, %6
  %37 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %38 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %37, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %37, align 8
  %39 = icmp eq %class.CFX_DIBitmap* %38, null
  br i1 %39, label %51, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %38, i64 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = add nsw i64 %42, -1
  store i64 %43, i64* %41, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %51

45:                                               ; preds = %40
  %46 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %38, i64 0, i32 0, i32 0
  %47 = bitcast %class.CFX_DIBitmap* %38 to void (%"class.fxcrt::Retainable"*)***
  %48 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %48, i64 1
  %50 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %49, align 8
  tail call void %50(%"class.fxcrt::Retainable"* nonnull %46) #11
  br label %51

51:                                               ; preds = %36, %40, %45
  %52 = bitcast %class.CFX_RenderDevice* %0 to i8*
  tail call void @_ZdlPv(i8* %52) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN16CFX_RenderDevice13GetFlipMatrixEffff(%class.CFX_Matrix* noalias nocapture sret, float, float, float, float) local_unnamed_addr #2 align 2 {
  %6 = fsub float -0.000000e+00, %2
  %7 = fadd float %2, %4
  %8 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %0, i64 0, i32 0
  store float %1, float* %8, align 4
  %9 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %0, i64 0, i32 1
  store float 0.000000e+00, float* %9, align 4
  %10 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %0, i64 0, i32 2
  store float 0.000000e+00, float* %10, align 4
  %11 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %0, i64 0, i32 3
  store float %6, float* %11, align 4
  %12 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %0, i64 0, i32 4
  store float %3, float* %12, align 4
  %13 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %0, i64 0, i32 5
  store float %7, float* %13, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_RenderDevice15SetDeviceDriverENSt3__110unique_ptrI23RenderDeviceDriverIfaceNS0_14default_deleteIS2_EEEE(%class.CFX_RenderDevice*, %class.RenderDeviceDriverIface*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %class.RenderDeviceDriverIface* %1 to i64
  %4 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %5, align 8
  %7 = bitcast %"class.std::__1::unique_ptr.1"* %4 to i64*
  store i64 %3, i64* %7, align 8
  %8 = icmp eq %class.RenderDeviceDriverIface* %6, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %2
  %10 = bitcast %class.RenderDeviceDriverIface* %6 to void (%class.RenderDeviceDriverIface*)***
  %11 = load void (%class.RenderDeviceDriverIface*)**, void (%class.RenderDeviceDriverIface*)*** %10, align 8
  %12 = getelementptr inbounds void (%class.RenderDeviceDriverIface*)*, void (%class.RenderDeviceDriverIface*)** %11, i64 1
  %13 = load void (%class.RenderDeviceDriverIface*)*, void (%class.RenderDeviceDriverIface*)** %12, align 8
  tail call void %13(%class.RenderDeviceDriverIface* nonnull %6) #11
  %14 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %15 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %14, align 8
  br label %16

16:                                               ; preds = %2, %9
  %17 = phi %class.RenderDeviceDriverIface* [ %1, %2 ], [ %15, %9 ]
  %18 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %19 = bitcast %class.RenderDeviceDriverIface* %17 to i32 (%class.RenderDeviceDriverIface*, i32)***
  %20 = load i32 (%class.RenderDeviceDriverIface*, i32)**, i32 (%class.RenderDeviceDriverIface*, i32)*** %19, align 8
  %21 = getelementptr inbounds i32 (%class.RenderDeviceDriverIface*, i32)*, i32 (%class.RenderDeviceDriverIface*, i32)** %20, i64 3
  %22 = load i32 (%class.RenderDeviceDriverIface*, i32)*, i32 (%class.RenderDeviceDriverIface*, i32)** %21, align 8
  %23 = tail call i32 %22(%class.RenderDeviceDriverIface* %17, i32 2) #11
  %24 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 2
  store i32 %23, i32* %24, align 8
  %25 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %18, align 8
  %26 = bitcast %class.RenderDeviceDriverIface* %25 to i32 (%class.RenderDeviceDriverIface*, i32)***
  %27 = load i32 (%class.RenderDeviceDriverIface*, i32)**, i32 (%class.RenderDeviceDriverIface*, i32)*** %26, align 8
  %28 = getelementptr inbounds i32 (%class.RenderDeviceDriverIface*, i32)*, i32 (%class.RenderDeviceDriverIface*, i32)** %27, i64 3
  %29 = load i32 (%class.RenderDeviceDriverIface*, i32)*, i32 (%class.RenderDeviceDriverIface*, i32)** %28, align 8
  %30 = tail call i32 %29(%class.RenderDeviceDriverIface* %25, i32 3) #11
  %31 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 3
  store i32 %30, i32* %31, align 4
  %32 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %18, align 8
  %33 = bitcast %class.RenderDeviceDriverIface* %32 to i32 (%class.RenderDeviceDriverIface*, i32)***
  %34 = load i32 (%class.RenderDeviceDriverIface*, i32)**, i32 (%class.RenderDeviceDriverIface*, i32)*** %33, align 8
  %35 = getelementptr inbounds i32 (%class.RenderDeviceDriverIface*, i32)*, i32 (%class.RenderDeviceDriverIface*, i32)** %34, i64 3
  %36 = load i32 (%class.RenderDeviceDriverIface*, i32)*, i32 (%class.RenderDeviceDriverIface*, i32)** %35, align 8
  %37 = tail call i32 %36(%class.RenderDeviceDriverIface* %32, i32 4) #11
  %38 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 4
  store i32 %37, i32* %38, align 8
  %39 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %18, align 8
  %40 = bitcast %class.RenderDeviceDriverIface* %39 to i32 (%class.RenderDeviceDriverIface*, i32)***
  %41 = load i32 (%class.RenderDeviceDriverIface*, i32)**, i32 (%class.RenderDeviceDriverIface*, i32)*** %40, align 8
  %42 = getelementptr inbounds i32 (%class.RenderDeviceDriverIface*, i32)*, i32 (%class.RenderDeviceDriverIface*, i32)** %41, i64 3
  %43 = load i32 (%class.RenderDeviceDriverIface*, i32)*, i32 (%class.RenderDeviceDriverIface*, i32)** %42, align 8
  %44 = tail call i32 %43(%class.RenderDeviceDriverIface* %39, i32 7) #11
  %45 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 5
  store i32 %44, i32* %45, align 4
  %46 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %18, align 8
  %47 = bitcast %class.RenderDeviceDriverIface* %46 to i1 (%class.RenderDeviceDriverIface*)***
  %48 = load i1 (%class.RenderDeviceDriverIface*)**, i1 (%class.RenderDeviceDriverIface*)*** %47, align 8
  %49 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*)*, i1 (%class.RenderDeviceDriverIface*)** %48, i64 2
  %50 = load i1 (%class.RenderDeviceDriverIface*)*, i1 (%class.RenderDeviceDriverIface*)** %49, align 8
  %51 = tail call zeroext i1 %50(%class.RenderDeviceDriverIface* %46) #11
  %52 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 6
  %53 = zext i1 %51 to i8
  store i8 %53, i8* %52, align 8
  %54 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %18, align 8
  %55 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7
  %56 = bitcast %class.RenderDeviceDriverIface* %54 to i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)***
  %57 = load i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)**, i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)*** %56, align 8
  %58 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)*, i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)** %57, i64 12
  %59 = load i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)*, i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)** %58, align 8
  %60 = tail call zeroext i1 %59(%class.RenderDeviceDriverIface* %54, %struct.FX_RECT* %55) #11
  br i1 %60, label %68, label %61

61:                                               ; preds = %16
  %62 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %55, i64 0, i32 0
  store i32 0, i32* %62, align 4
  %63 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7, i32 1
  store i32 0, i32* %63, align 4
  %64 = load i32, i32* %24, align 8
  %65 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7, i32 2
  store i32 %64, i32* %65, align 4
  %66 = load i32, i32* %31, align 4
  %67 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7, i32 3
  store i32 %66, i32* %67, align 4
  br label %68

68:                                               ; preds = %61, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_RenderDevice14InitDeviceInfoEv(%class.CFX_RenderDevice*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %3 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %2, align 8
  %4 = bitcast %class.RenderDeviceDriverIface* %3 to i32 (%class.RenderDeviceDriverIface*, i32)***
  %5 = load i32 (%class.RenderDeviceDriverIface*, i32)**, i32 (%class.RenderDeviceDriverIface*, i32)*** %4, align 8
  %6 = getelementptr inbounds i32 (%class.RenderDeviceDriverIface*, i32)*, i32 (%class.RenderDeviceDriverIface*, i32)** %5, i64 3
  %7 = load i32 (%class.RenderDeviceDriverIface*, i32)*, i32 (%class.RenderDeviceDriverIface*, i32)** %6, align 8
  %8 = tail call i32 %7(%class.RenderDeviceDriverIface* %3, i32 2) #11
  %9 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 2
  store i32 %8, i32* %9, align 8
  %10 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %2, align 8
  %11 = bitcast %class.RenderDeviceDriverIface* %10 to i32 (%class.RenderDeviceDriverIface*, i32)***
  %12 = load i32 (%class.RenderDeviceDriverIface*, i32)**, i32 (%class.RenderDeviceDriverIface*, i32)*** %11, align 8
  %13 = getelementptr inbounds i32 (%class.RenderDeviceDriverIface*, i32)*, i32 (%class.RenderDeviceDriverIface*, i32)** %12, i64 3
  %14 = load i32 (%class.RenderDeviceDriverIface*, i32)*, i32 (%class.RenderDeviceDriverIface*, i32)** %13, align 8
  %15 = tail call i32 %14(%class.RenderDeviceDriverIface* %10, i32 3) #11
  %16 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 3
  store i32 %15, i32* %16, align 4
  %17 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %2, align 8
  %18 = bitcast %class.RenderDeviceDriverIface* %17 to i32 (%class.RenderDeviceDriverIface*, i32)***
  %19 = load i32 (%class.RenderDeviceDriverIface*, i32)**, i32 (%class.RenderDeviceDriverIface*, i32)*** %18, align 8
  %20 = getelementptr inbounds i32 (%class.RenderDeviceDriverIface*, i32)*, i32 (%class.RenderDeviceDriverIface*, i32)** %19, i64 3
  %21 = load i32 (%class.RenderDeviceDriverIface*, i32)*, i32 (%class.RenderDeviceDriverIface*, i32)** %20, align 8
  %22 = tail call i32 %21(%class.RenderDeviceDriverIface* %17, i32 4) #11
  %23 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 4
  store i32 %22, i32* %23, align 8
  %24 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %2, align 8
  %25 = bitcast %class.RenderDeviceDriverIface* %24 to i32 (%class.RenderDeviceDriverIface*, i32)***
  %26 = load i32 (%class.RenderDeviceDriverIface*, i32)**, i32 (%class.RenderDeviceDriverIface*, i32)*** %25, align 8
  %27 = getelementptr inbounds i32 (%class.RenderDeviceDriverIface*, i32)*, i32 (%class.RenderDeviceDriverIface*, i32)** %26, i64 3
  %28 = load i32 (%class.RenderDeviceDriverIface*, i32)*, i32 (%class.RenderDeviceDriverIface*, i32)** %27, align 8
  %29 = tail call i32 %28(%class.RenderDeviceDriverIface* %24, i32 7) #11
  %30 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 5
  store i32 %29, i32* %30, align 4
  %31 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %2, align 8
  %32 = bitcast %class.RenderDeviceDriverIface* %31 to i1 (%class.RenderDeviceDriverIface*)***
  %33 = load i1 (%class.RenderDeviceDriverIface*)**, i1 (%class.RenderDeviceDriverIface*)*** %32, align 8
  %34 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*)*, i1 (%class.RenderDeviceDriverIface*)** %33, i64 2
  %35 = load i1 (%class.RenderDeviceDriverIface*)*, i1 (%class.RenderDeviceDriverIface*)** %34, align 8
  %36 = tail call zeroext i1 %35(%class.RenderDeviceDriverIface* %31) #11
  %37 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 6
  %38 = zext i1 %36 to i8
  store i8 %38, i8* %37, align 8
  %39 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %2, align 8
  %40 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7
  %41 = bitcast %class.RenderDeviceDriverIface* %39 to i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)***
  %42 = load i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)**, i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)*** %41, align 8
  %43 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)*, i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)** %42, i64 12
  %44 = load i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)*, i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)** %43, align 8
  %45 = tail call zeroext i1 %44(%class.RenderDeviceDriverIface* %39, %struct.FX_RECT* %40) #11
  br i1 %45, label %53, label %46

46:                                               ; preds = %1
  %47 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %40, i64 0, i32 0
  store i32 0, i32* %47, align 4
  %48 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7, i32 1
  store i32 0, i32* %48, align 4
  %49 = load i32, i32* %9, align 8
  %50 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7, i32 2
  store i32 %49, i32* %50, align 4
  %51 = load i32, i32* %16, align 4
  %52 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7, i32 3
  store i32 %51, i32* %52, align 4
  br label %53

53:                                               ; preds = %46, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_RenderDevice9SaveStateEv(%class.CFX_RenderDevice* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %3 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %2, align 8
  %4 = bitcast %class.RenderDeviceDriverIface* %3 to void (%class.RenderDeviceDriverIface*)***
  %5 = load void (%class.RenderDeviceDriverIface*)**, void (%class.RenderDeviceDriverIface*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.RenderDeviceDriverIface*)*, void (%class.RenderDeviceDriverIface*)** %5, i64 4
  %7 = load void (%class.RenderDeviceDriverIface*)*, void (%class.RenderDeviceDriverIface*)** %6, align 8
  tail call void %7(%class.RenderDeviceDriverIface* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_RenderDevice13UpdateClipBoxEv(%class.CFX_RenderDevice*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %3 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %2, align 8
  %4 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7
  %5 = bitcast %class.RenderDeviceDriverIface* %3 to i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)***
  %6 = load i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)**, i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)*, i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)** %6, i64 12
  %8 = load i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)*, i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)** %7, align 8
  %9 = tail call zeroext i1 %8(%class.RenderDeviceDriverIface* %3, %struct.FX_RECT* %4) #11
  br i1 %9, label %19, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %4, i64 0, i32 0
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7, i32 1
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7, i32 2
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7, i32 3
  store i32 %17, i32* %18, align 4
  br label %19

19:                                               ; preds = %1, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK16CFX_RenderDevice13GetDeviceCapsEi(%class.CFX_RenderDevice* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %4 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %3, align 8
  %5 = bitcast %class.RenderDeviceDriverIface* %4 to i32 (%class.RenderDeviceDriverIface*, i32)***
  %6 = load i32 (%class.RenderDeviceDriverIface*, i32)**, i32 (%class.RenderDeviceDriverIface*, i32)*** %5, align 8
  %7 = getelementptr inbounds i32 (%class.RenderDeviceDriverIface*, i32)*, i32 (%class.RenderDeviceDriverIface*, i32)** %6, i64 3
  %8 = load i32 (%class.RenderDeviceDriverIface*, i32)*, i32 (%class.RenderDeviceDriverIface*, i32)** %7, align 8
  %9 = tail call i32 %8(%class.RenderDeviceDriverIface* %4, i32 %1) #11
  ret i32 %9
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK16CFX_RenderDevice9GetBitmapEv(%"class.fxcrt::RetainPtr"* noalias nocapture sret, %class.CFX_RenderDevice* nocapture readonly) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %3, align 8
  %5 = ptrtoint %class.CFX_DIBitmap* %4 to i64
  %6 = bitcast %"class.fxcrt::RetainPtr"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = icmp eq %class.CFX_DIBitmap* %4, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %4, i64 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add nsw i64 %10, 1
  store i64 %11, i64* %9, align 8
  br label %12

12:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_RenderDevice9SetBitmapERKN5fxcrt9RetainPtrI12CFX_DIBitmapEE(%class.CFX_RenderDevice* nocapture, %"class.fxcrt::RetainPtr"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %3, align 8
  %5 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %5, align 8
  %7 = icmp eq %class.CFX_DIBitmap* %4, %6
  br i1 %7, label %29, label %8

8:                                                ; preds = %2
  %9 = icmp eq %class.CFX_DIBitmap* %6, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %6, i64 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = add nsw i64 %12, 1
  store i64 %13, i64* %11, align 8
  %14 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %3, align 8
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi %class.CFX_DIBitmap* [ %14, %10 ], [ %4, %8 ]
  store %class.CFX_DIBitmap* %6, %class.CFX_DIBitmap** %3, align 8
  %17 = icmp eq %class.CFX_DIBitmap* %16, null
  br i1 %17, label %29, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %16, i64 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = add nsw i64 %20, -1
  store i64 %21, i64* %19, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %29

23:                                               ; preds = %18
  %24 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %16, i64 0, i32 0, i32 0
  %25 = bitcast %class.CFX_DIBitmap* %16 to void (%"class.fxcrt::Retainable"*)***
  %26 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %26, i64 1
  %28 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %27, align 8
  tail call void %28(%"class.fxcrt::Retainable"* nonnull %24) #11
  br label %29

29:                                               ; preds = %2, %15, %18, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK16CFX_RenderDevice22CreateCompatibleBitmapERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEii(%class.CFX_RenderDevice* nocapture readonly, %"class.fxcrt::RetainPtr"* nocapture readonly dereferenceable(8), i32, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 5
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 2048
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %9, align 8
  br i1 %8, label %11, label %15

11:                                               ; preds = %4
  %12 = and i32 %6, 64
  %13 = icmp eq i32 %12, 0
  %14 = select i1 %13, i16 24, i16 544
  br label %15

15:                                               ; preds = %4, %11
  %16 = phi i16 [ %14, %11 ], [ 264, %4 ]
  %17 = tail call zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap* %10, i32 %2, i32 %3, i16 zeroext %16) #11
  ret i1 %17
}

declare zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap*, i32, i32, i16 zeroext) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_RenderDevice11SetBaseClipERK7FX_RECT(%class.CFX_RenderDevice* nocapture readonly, %struct.FX_RECT* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %4 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %3, align 8
  %5 = bitcast %class.RenderDeviceDriverIface* %4 to void (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)***
  %6 = load void (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)**, void (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)*** %5, align 8
  %7 = getelementptr inbounds void (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)*, void (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)** %6, i64 6
  %8 = load void (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)*, void (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)** %7, align 8
  tail call void %8(%class.RenderDeviceDriverIface* %4, %struct.FX_RECT* dereferenceable(16) %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16CFX_RenderDevice16SetClip_PathFillEPK12CFX_PathDataPK10CFX_MatrixRK21CFX_FillRenderOptions(%class.CFX_RenderDevice*, %class.CFX_PathData*, %class.CFX_Matrix*, %struct.CFX_FillRenderOptions* dereferenceable(2)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %6 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %5, align 8
  %7 = bitcast %class.RenderDeviceDriverIface* %6 to i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %struct.CFX_FillRenderOptions*)***
  %8 = load i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %struct.CFX_FillRenderOptions*)**, i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %struct.CFX_FillRenderOptions*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %struct.CFX_FillRenderOptions*)*, i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %struct.CFX_FillRenderOptions*)** %8, i64 7
  %10 = load i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %struct.CFX_FillRenderOptions*)*, i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %struct.CFX_FillRenderOptions*)** %9, align 8
  %11 = tail call zeroext i1 %10(%class.RenderDeviceDriverIface* %6, %class.CFX_PathData* %1, %class.CFX_Matrix* %2, %struct.CFX_FillRenderOptions* dereferenceable(2) %3) #11
  br i1 %11, label %12, label %29

12:                                               ; preds = %4
  %13 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %5, align 8
  %14 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7
  %15 = bitcast %class.RenderDeviceDriverIface* %13 to i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)***
  %16 = load i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)**, i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)*, i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)** %16, i64 12
  %18 = load i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)*, i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)** %17, align 8
  %19 = tail call zeroext i1 %18(%class.RenderDeviceDriverIface* %13, %struct.FX_RECT* %14) #11
  br i1 %19, label %29, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %14, i64 0, i32 0
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7, i32 1
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7, i32 2
  store i32 %24, i32* %25, align 4
  %26 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7, i32 3
  store i32 %27, i32* %28, align 4
  br label %29

29:                                               ; preds = %20, %12, %4
  %30 = phi i1 [ false, %4 ], [ true, %12 ], [ true, %20 ]
  ret i1 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16CFX_RenderDevice18SetClip_PathStrokeEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateData(%class.CFX_RenderDevice*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %6 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %5, align 8
  %7 = bitcast %class.RenderDeviceDriverIface* %6 to i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*)***
  %8 = load i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*)**, i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*)*, i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*)** %8, i64 8
  %10 = load i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*)*, i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*)** %9, align 8
  %11 = tail call zeroext i1 %10(%class.RenderDeviceDriverIface* %6, %class.CFX_PathData* %1, %class.CFX_Matrix* %2, %class.CFX_GraphStateData* %3) #11
  br i1 %11, label %12, label %29

12:                                               ; preds = %4
  %13 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %5, align 8
  %14 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7
  %15 = bitcast %class.RenderDeviceDriverIface* %13 to i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)***
  %16 = load i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)**, i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)*, i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)** %16, i64 12
  %18 = load i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)*, i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)** %17, align 8
  %19 = tail call zeroext i1 %18(%class.RenderDeviceDriverIface* %13, %struct.FX_RECT* %14) #11
  br i1 %19, label %29, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %14, i64 0, i32 0
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7, i32 1
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7, i32 2
  store i32 %24, i32* %25, align 4
  %26 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7, i32 3
  store i32 %27, i32* %28, align 4
  br label %29

29:                                               ; preds = %20, %12, %4
  %30 = phi i1 [ false, %4 ], [ true, %12 ], [ true, %20 ]
  ret i1 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16CFX_RenderDevice12SetClip_RectERK7FX_RECT(%class.CFX_RenderDevice*, %struct.FX_RECT* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.CFX_PathData, align 8
  %4 = alloca i16, align 2
  %5 = bitcast i16* %4 to %struct.CFX_FillRenderOptions*
  %6 = bitcast %class.CFX_PathData* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = bitcast %class.CFX_PathData* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  call void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData* nonnull %3) #11
  %8 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = sitofp i32 %9 to float
  %11 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %1, i64 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = sitofp i32 %12 to float
  %14 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %1, i64 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = sitofp i32 %15 to float
  %17 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %1, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = sitofp i32 %18 to float
  call void @_ZN12CFX_PathData10AppendRectEffff(%class.CFX_PathData* nonnull %3, float %10, float %13, float %16, float %19) #11
  %20 = bitcast i16* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %20) #11
  store i16 2, i16* %4, align 2
  %21 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %22 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %21, align 8
  %23 = bitcast %class.RenderDeviceDriverIface* %22 to i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %struct.CFX_FillRenderOptions*)***
  %24 = load i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %struct.CFX_FillRenderOptions*)**, i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %struct.CFX_FillRenderOptions*)*** %23, align 8
  %25 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %struct.CFX_FillRenderOptions*)*, i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %struct.CFX_FillRenderOptions*)** %24, i64 7
  %26 = load i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %struct.CFX_FillRenderOptions*)*, i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %struct.CFX_FillRenderOptions*)** %25, align 8
  %27 = call zeroext i1 %26(%class.RenderDeviceDriverIface* %22, %class.CFX_PathData* nonnull %3, %class.CFX_Matrix* null, %struct.CFX_FillRenderOptions* nonnull dereferenceable(2) %5) #11
  br i1 %27, label %28, label %45

28:                                               ; preds = %2
  %29 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %21, align 8
  %30 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7
  %31 = bitcast %class.RenderDeviceDriverIface* %29 to i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)***
  %32 = load i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)**, i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)*** %31, align 8
  %33 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)*, i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)** %32, i64 12
  %34 = load i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)*, i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)** %33, align 8
  %35 = call zeroext i1 %34(%class.RenderDeviceDriverIface* %29, %struct.FX_RECT* %30) #11
  br i1 %35, label %46, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %30, i64 0, i32 0
  store i32 0, i32* %37, align 4
  %38 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7, i32 1
  store i32 0, i32* %38, align 4
  %39 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 2
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7, i32 2
  store i32 %40, i32* %41, align 4
  %42 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 3
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7, i32 3
  store i32 %43, i32* %44, align 4
  br label %46

45:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %20) #11
  br label %62

46:                                               ; preds = %28, %36
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %20) #11
  %47 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %21, align 8
  %48 = bitcast %class.RenderDeviceDriverIface* %47 to i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)***
  %49 = load i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)**, i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)*** %48, align 8
  %50 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)*, i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)** %49, i64 12
  %51 = load i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)*, i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)** %50, align 8
  %52 = call zeroext i1 %51(%class.RenderDeviceDriverIface* %47, %struct.FX_RECT* %30) #11
  br i1 %52, label %62, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %30, i64 0, i32 0
  store i32 0, i32* %54, align 4
  %55 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7, i32 1
  store i32 0, i32* %55, align 4
  %56 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7, i32 2
  store i32 %57, i32* %58, align 4
  %59 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 3
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7, i32 3
  store i32 %60, i32* %61, align 4
  br label %62

62:                                               ; preds = %53, %46, %45
  %63 = phi i1 [ false, %45 ], [ true, %46 ], [ true, %53 ]
  call void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret i1 %63
}

declare void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData*) unnamed_addr #4

declare void @_ZN12CFX_PathData10AppendRectEffff(%class.CFX_PathData*, float, float, float, float) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16CFX_RenderDevice8DrawPathEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions(%class.CFX_RenderDevice* nocapture readonly, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions* dereferenceable(2)) local_unnamed_addr #0 align 2 {
  %8 = tail call zeroext i1 @_ZN16CFX_RenderDevice17DrawPathWithBlendEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions9BlendMode(%class.CFX_RenderDevice* %0, %class.CFX_PathData* %1, %class.CFX_Matrix* %2, %class.CFX_GraphStateData* %3, i32 %4, i32 %5, %struct.CFX_FillRenderOptions* dereferenceable(2) %6, i32 0)
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16CFX_RenderDevice17DrawPathWithBlendEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions9BlendMode(%class.CFX_RenderDevice* nocapture readonly, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions* dereferenceable(2), i32) local_unnamed_addr #0 align 2 {
  %9 = alloca %class.CFX_PTemplate, align 4
  %10 = alloca %class.CFX_PTemplate, align 4
  %11 = alloca %class.CFX_PTemplate, align 4
  %12 = alloca %class.CFX_PTemplate, align 4
  %13 = alloca %"class.pdfium::Optional", align 4
  %14 = alloca { i64, i64 }, align 8
  %15 = bitcast { i64, i64 }* %14 to %struct.FX_RECT*
  %16 = alloca %"class.std::__1::vector.12", align 8
  %17 = getelementptr inbounds %struct.CFX_FillRenderOptions, %struct.CFX_FillRenderOptions* %6, i64 0, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp ne i8 %18, 0
  %20 = lshr i32 %4, 24
  %21 = trunc i32 %20 to i8
  %22 = select i1 %19, i8 %21, i8 0
  %23 = icmp eq %class.CFX_GraphStateData* %3, null
  %24 = lshr i32 %5, 24
  %25 = select i1 %23, i32 0, i32 %24
  %26 = bitcast %class.CFX_PathData* %1 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %class.CFX_PathData, %class.CFX_PathData* %1, i64 0, i32 0, i32 0, i32 1
  %29 = bitcast %class.FX_PATHPOINT** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %30, %27
  %32 = sdiv exact i64 %31, 12
  %33 = icmp eq i32 %25, 0
  br i1 %33, label %34, label %271

34:                                               ; preds = %8
  %35 = icmp eq i64 %31, 24
  br i1 %35, label %36, label %74

36:                                               ; preds = %34
  %37 = bitcast %class.CFX_PTemplate* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #11
  %38 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %9, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %38, align 4
  %39 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %9, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %39, align 4
  %40 = inttoptr i64 %27 to %class.FX_PATHPOINT*
  %41 = inttoptr i64 %27 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = bitcast %class.CFX_PTemplate* %9 to i32*
  store i32 %42, i32* %43, align 4
  %44 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %40, i64 0, i32 0, i32 1
  %45 = bitcast float* %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = bitcast float* %39 to i32*
  store i32 %46, i32* %47, align 4
  %48 = bitcast %class.CFX_PTemplate* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #11
  %49 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %10, i64 0, i32 1
  %50 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %40, i64 1, i32 0
  %51 = bitcast %class.CFX_PTemplate* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = bitcast %class.CFX_PTemplate* %10 to i32*
  store i32 %52, i32* %53, align 4
  %54 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %40, i64 1, i32 0, i32 1
  %55 = bitcast float* %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = bitcast float* %49 to i32*
  store i32 %56, i32* %57, align 4
  %58 = icmp eq %class.CFX_Matrix* %2, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %36
  %60 = bitcast %class.CFX_PTemplate* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #11
  call void @_ZNK10CFX_Matrix9TransformERK13CFX_PTemplateIfE(%class.CFX_PTemplate* nonnull sret %11, %class.CFX_Matrix* nonnull %2, %class.CFX_PTemplate* nonnull dereferenceable(8) %9) #11
  %61 = bitcast %class.CFX_PTemplate* %11 to i32*
  %62 = load i32, i32* %61, align 4
  store i32 %62, i32* %43, align 4
  %63 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %11, i64 0, i32 1
  %64 = bitcast float* %63 to i32*
  %65 = load i32, i32* %64, align 4
  store i32 %65, i32* %47, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #11
  %66 = bitcast %class.CFX_PTemplate* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #11
  call void @_ZNK10CFX_Matrix9TransformERK13CFX_PTemplateIfE(%class.CFX_PTemplate* nonnull sret %12, %class.CFX_Matrix* nonnull %2, %class.CFX_PTemplate* nonnull dereferenceable(8) %10) #11
  %67 = bitcast %class.CFX_PTemplate* %12 to i32*
  %68 = load i32, i32* %67, align 4
  store i32 %68, i32* %53, align 4
  %69 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %12, i64 0, i32 1
  %70 = bitcast float* %69 to i32*
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %57, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #11
  br label %72

72:                                               ; preds = %36, %59
  %73 = call zeroext i1 @_ZN16CFX_RenderDevice16DrawCosmeticLineERK13CFX_PTemplateIfES3_jRK21CFX_FillRenderOptions9BlendMode(%class.CFX_RenderDevice* %0, %class.CFX_PTemplate* nonnull dereferenceable(8) %9, %class.CFX_PTemplate* nonnull dereferenceable(8) %10, i32 %4, %struct.CFX_FillRenderOptions* dereferenceable(2) %6, i32 %7)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #11
  br label %305

74:                                               ; preds = %34
  %75 = getelementptr inbounds %struct.CFX_FillRenderOptions, %struct.CFX_FillRenderOptions* %6, i64 0, i32 1
  %76 = load i8, i8* %75, align 1
  %77 = and i8 %76, 8
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %79, label %165

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %80) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %80, i8* align 4 getelementptr inbounds ({ { { { i8, [3 x i8], %union.anon } } } }, { { { { i8, [3 x i8], %union.anon } } } }* @__const._ZN16CFX_RenderDevice17DrawPathWithBlendEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions9BlendMode.maybe_rect_f, i64 0, i32 0, i32 0, i32 0, i32 0), i64 20, i1 false)
  call void @_ZNK12CFX_PathData7GetRectEPK10CFX_Matrix(%"class.pdfium::Optional"* nonnull sret %13, %class.CFX_PathData* %1, %class.CFX_Matrix* %2) #11
  %81 = load i8, i8* %80, align 4, !range !2
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %162, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %85 = bitcast { i64, i64 }* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %85) #11
  %86 = bitcast { i64, i64 }* %14 to i32*
  %87 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %15, i64 0, i32 1
  %88 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 1
  %89 = bitcast i64* %88 to i32*
  %90 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %15, i64 0, i32 3
  %91 = bitcast { i64, i64 }* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %91, i8 -86, i64 16, i1 false)
  %92 = call { i64, i64 } @_ZNK13CFX_FloatRect12GetOuterRectEv(%class.CFX_FloatRect* %84) #11
  %93 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 0
  %94 = extractvalue { i64, i64 } %92, 0
  store i64 %94, i64* %93, align 8
  %95 = extractvalue { i64, i64 } %92, 1
  store i64 %95, i64* %88, align 8
  %96 = call zeroext i1 @_ZNK7FX_RECT5ValidEv(%struct.FX_RECT* nonnull %15) #11
  br i1 %96, label %97, label %163

97:                                               ; preds = %83
  %98 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %99 = load float, float* %98, align 4
  %100 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %84, i64 0, i32 0
  %101 = load float, float* %100, align 4
  %102 = fsub float %99, %101
  %103 = call float @llvm.ceil.f32(float %102) #11
  %104 = fptosi float %103 to i32
  %105 = icmp slt i32 %104, 1
  br i1 %105, label %106, label %112

106:                                              ; preds = %97
  %107 = load i32, i32* %86, align 8
  %108 = load i32, i32* %89, align 8
  %109 = icmp eq i32 %107, %108
  br i1 %109, label %110, label %112

110:                                              ; preds = %106
  %111 = add nsw i32 %107, 1
  store i32 %111, i32* %89, align 8
  br label %112

112:                                              ; preds = %106, %110, %97
  %113 = phi i32 [ 1, %110 ], [ 1, %106 ], [ %104, %97 ]
  %114 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  %115 = load float, float* %114, align 4
  %116 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %117 = load float, float* %116, align 4
  %118 = fsub float %115, %117
  %119 = call float @llvm.ceil.f32(float %118) #11
  %120 = fptosi float %119 to i32
  %121 = icmp slt i32 %120, 1
  br i1 %121, label %122, label %128

122:                                              ; preds = %112
  %123 = load i32, i32* %90, align 4
  %124 = load i32, i32* %87, align 4
  %125 = icmp eq i32 %123, %124
  br i1 %125, label %126, label %128

126:                                              ; preds = %122
  %127 = add nsw i32 %123, 1
  store i32 %127, i32* %90, align 4
  br label %128

128:                                              ; preds = %122, %126, %112
  %129 = phi i32 [ 1, %126 ], [ 1, %122 ], [ %120, %112 ]
  %130 = load i32, i32* %89, align 8
  %131 = load i32, i32* %86, align 8
  %132 = sub nsw i32 %130, %131
  %133 = icmp sgt i32 %132, %113
  br i1 %133, label %134, label %144

134:                                              ; preds = %128
  %135 = sitofp i32 %131 to float
  %136 = fsub float %101, %135
  %137 = sitofp i32 %130 to float
  %138 = fsub float %137, %99
  %139 = fcmp ogt float %136, %138
  %140 = add nsw i32 %131, 1
  %141 = add nsw i32 %130, -1
  %142 = select i1 %139, i32* %86, i32* %89
  %143 = select i1 %139, i32 %140, i32 %141
  store i32 %143, i32* %142, align 8
  br label %144

144:                                              ; preds = %134, %128
  %145 = load i32, i32* %90, align 4
  %146 = load i32, i32* %87, align 4
  %147 = sub nsw i32 %145, %146
  %148 = icmp sgt i32 %147, %129
  br i1 %148, label %149, label %159

149:                                              ; preds = %144
  %150 = sitofp i32 %146 to float
  %151 = fsub float %115, %150
  %152 = sitofp i32 %145 to float
  %153 = fsub float %152, %117
  %154 = fcmp ogt float %151, %153
  %155 = add nsw i32 %146, 1
  %156 = add nsw i32 %145, -1
  %157 = select i1 %154, i32* %87, i32* %90
  %158 = select i1 %154, i32 %155, i32 %156
  store i32 %158, i32* %157, align 4
  br label %159

159:                                              ; preds = %149, %144
  %160 = call zeroext i1 @_ZN16CFX_RenderDevice17FillRectWithBlendERK7FX_RECTj9BlendMode(%class.CFX_RenderDevice* %0, %struct.FX_RECT* nonnull dereferenceable(16) %15, i32 %4, i32 %7)
  br i1 %160, label %163, label %161

161:                                              ; preds = %159
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %85) #11
  br label %162

162:                                              ; preds = %79, %161
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %80) #11
  br label %165

163:                                              ; preds = %159, %83
  %164 = phi i1 [ false, %83 ], [ true, %159 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %85) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %80) #11
  br label %305

165:                                              ; preds = %162, %74
  br i1 %19, label %166, label %297

166:                                              ; preds = %165
  %167 = load i8, i8* %75, align 1
  %168 = and i8 %167, 80
  %169 = icmp eq i8 %168, 0
  br i1 %169, label %170, label %271

170:                                              ; preds = %166
  %171 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %172 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %171, align 8
  %173 = bitcast %class.RenderDeviceDriverIface* %172 to i32 (%class.RenderDeviceDriverIface*)***
  %174 = load i32 (%class.RenderDeviceDriverIface*)**, i32 (%class.RenderDeviceDriverIface*)*** %173, align 8
  %175 = getelementptr inbounds i32 (%class.RenderDeviceDriverIface*)*, i32 (%class.RenderDeviceDriverIface*)** %174, i64 20
  %176 = load i32 (%class.RenderDeviceDriverIface*)*, i32 (%class.RenderDeviceDriverIface*)** %175, align 8
  %177 = call i32 %176(%class.RenderDeviceDriverIface* %172) #11
  %178 = icmp ne i32 %177, 0
  %179 = bitcast %"class.std::__1::vector.12"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %179) #11
  %180 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %16, i64 0, i32 0, i32 0
  %181 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %16, i64 0, i32 0, i32 1
  %182 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %16, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %179, i8 0, i64 24, i1 false) #11
  %183 = icmp eq i64 %31, 0
  br i1 %183, label %187, label %184

184:                                              ; preds = %170
  %185 = inttoptr i64 %27 to %class.FX_PATHPOINT*
  %186 = bitcast %class.FX_PATHPOINT** %181 to i64*
  br label %207

187:                                              ; preds = %267, %170
  %188 = load i8, i8* %75, align 1
  %189 = and i8 %188, 2
  %190 = icmp ne i8 %189, 0
  call void @_ZN16CFX_RenderDevice16DrawZeroAreaPathERKNSt3__16vectorI12FX_PATHPOINTNS0_9allocatorIS2_EEEEPK10CFX_Matrixbbjh9BlendMode(%class.CFX_RenderDevice* %0, %"class.std::__1::vector.12"* nonnull dereferenceable(24) %16, %class.CFX_Matrix* %2, i1 zeroext %178, i1 zeroext %190, i32 %4, i8 zeroext %22, i32 %7)
  %191 = load %class.FX_PATHPOINT*, %class.FX_PATHPOINT** %180, align 8
  %192 = icmp eq %class.FX_PATHPOINT* %191, null
  br i1 %192, label %206, label %193

193:                                              ; preds = %187
  %194 = bitcast %class.FX_PATHPOINT* %191 to i8*
  %195 = load %class.FX_PATHPOINT*, %class.FX_PATHPOINT** %181, align 8
  %196 = icmp eq %class.FX_PATHPOINT* %195, %191
  br i1 %196, label %204, label %197

197:                                              ; preds = %193, %197
  %198 = phi %class.FX_PATHPOINT* [ %199, %197 ], [ %195, %193 ]
  %199 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %198, i64 -1
  call void @_ZN12FX_PATHPOINTD1Ev(%class.FX_PATHPOINT* %199) #11
  %200 = icmp eq %class.FX_PATHPOINT* %199, %191
  br i1 %200, label %201, label %197

201:                                              ; preds = %197
  %202 = bitcast %"class.std::__1::vector.12"* %16 to i8**
  %203 = load i8*, i8** %202, align 8
  br label %204

204:                                              ; preds = %201, %193
  %205 = phi i8* [ %203, %201 ], [ %194, %193 ]
  store %class.FX_PATHPOINT* %191, %class.FX_PATHPOINT** %181, align 8
  call void @_ZdlPv(i8* %205) #12
  br label %206

206:                                              ; preds = %187, %204
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %179) #11
  br label %271

207:                                              ; preds = %184, %267
  %208 = phi i64 [ 0, %184 ], [ %269, %267 ]
  %209 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %185, i64 %208
  %210 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %185, i64 %208, i32 1
  %211 = load i8, i8* %210, align 4
  %212 = icmp eq i8 %211, 2
  br i1 %212, label %213, label %231

213:                                              ; preds = %207
  %214 = load i8, i8* %75, align 1
  %215 = and i8 %214, 2
  %216 = icmp ne i8 %215, 0
  call void @_ZN16CFX_RenderDevice16DrawZeroAreaPathERKNSt3__16vectorI12FX_PATHPOINTNS0_9allocatorIS2_EEEEPK10CFX_Matrixbbjh9BlendMode(%class.CFX_RenderDevice* %0, %"class.std::__1::vector.12"* nonnull dereferenceable(24) %16, %class.CFX_Matrix* %2, i1 zeroext %178, i1 zeroext %216, i32 %4, i8 zeroext %22, i32 %7)
  %217 = load %class.FX_PATHPOINT*, %class.FX_PATHPOINT** %180, align 8
  %218 = load %class.FX_PATHPOINT*, %class.FX_PATHPOINT** %181, align 8
  %219 = icmp eq %class.FX_PATHPOINT* %218, %217
  br i1 %219, label %224, label %220

220:                                              ; preds = %213, %220
  %221 = phi %class.FX_PATHPOINT* [ %222, %220 ], [ %218, %213 ]
  %222 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %221, i64 -1
  call void @_ZN12FX_PATHPOINTD1Ev(%class.FX_PATHPOINT* %222) #11
  %223 = icmp eq %class.FX_PATHPOINT* %222, %217
  br i1 %223, label %224, label %220

224:                                              ; preds = %220, %213
  store %class.FX_PATHPOINT* %217, %class.FX_PATHPOINT** %181, align 8
  %225 = load %class.FX_PATHPOINT*, %class.FX_PATHPOINT** %182, align 8
  %226 = icmp eq %class.FX_PATHPOINT* %217, %225
  br i1 %226, label %230, label %227

227:                                              ; preds = %224
  call void @_ZN12FX_PATHPOINTC1ERKS_(%class.FX_PATHPOINT* %217, %class.FX_PATHPOINT* dereferenceable(12) %209) #11
  %228 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %217, i64 1
  %229 = ptrtoint %class.FX_PATHPOINT* %228 to i64
  store i64 %229, i64* %186, align 8
  br label %267

230:                                              ; preds = %224
  call void @_ZNSt3__16vectorI12FX_PATHPOINTNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_(%"class.std::__1::vector.12"* nonnull %16, %class.FX_PATHPOINT* dereferenceable(12) %209) #11
  br label %267

231:                                              ; preds = %207
  %232 = icmp eq i8 %211, 1
  %233 = load %class.FX_PATHPOINT*, %class.FX_PATHPOINT** %181, align 8
  %234 = load %class.FX_PATHPOINT*, %class.FX_PATHPOINT** %182, align 8
  %235 = icmp eq %class.FX_PATHPOINT* %233, %234
  br i1 %235, label %239, label %236

236:                                              ; preds = %231
  call void @_ZN12FX_PATHPOINTC1ERKS_(%class.FX_PATHPOINT* %233, %class.FX_PATHPOINT* dereferenceable(12) %209) #11
  %237 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %233, i64 1
  %238 = ptrtoint %class.FX_PATHPOINT* %237 to i64
  store i64 %238, i64* %186, align 8
  br label %240

239:                                              ; preds = %231
  call void @_ZNSt3__16vectorI12FX_PATHPOINTNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_(%"class.std::__1::vector.12"* nonnull %16, %class.FX_PATHPOINT* dereferenceable(12) %209) #11
  br label %240

240:                                              ; preds = %236, %239
  br i1 %232, label %241, label %267

241:                                              ; preds = %240
  %242 = add nuw i64 %208, 1
  %243 = icmp ugt i64 %32, %242
  br i1 %243, label %245, label %244, !prof !3

244:                                              ; preds = %241
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !4
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !5
  unreachable

245:                                              ; preds = %241
  %246 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %185, i64 %242
  %247 = load %class.FX_PATHPOINT*, %class.FX_PATHPOINT** %181, align 8
  %248 = load %class.FX_PATHPOINT*, %class.FX_PATHPOINT** %182, align 8
  %249 = icmp eq %class.FX_PATHPOINT* %247, %248
  br i1 %249, label %253, label %250

250:                                              ; preds = %245
  call void @_ZN12FX_PATHPOINTC1ERKS_(%class.FX_PATHPOINT* %247, %class.FX_PATHPOINT* dereferenceable(12) %246) #11
  %251 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %247, i64 1
  %252 = ptrtoint %class.FX_PATHPOINT* %251 to i64
  store i64 %252, i64* %186, align 8
  br label %254

253:                                              ; preds = %245
  call void @_ZNSt3__16vectorI12FX_PATHPOINTNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_(%"class.std::__1::vector.12"* nonnull %16, %class.FX_PATHPOINT* dereferenceable(12) %246) #11
  br label %254

254:                                              ; preds = %250, %253
  %255 = add nuw i64 %208, 2
  %256 = icmp ugt i64 %32, %255
  br i1 %256, label %258, label %257, !prof !3

257:                                              ; preds = %254
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !4
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !5
  unreachable

258:                                              ; preds = %254
  %259 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %185, i64 %255
  %260 = load %class.FX_PATHPOINT*, %class.FX_PATHPOINT** %181, align 8
  %261 = load %class.FX_PATHPOINT*, %class.FX_PATHPOINT** %182, align 8
  %262 = icmp eq %class.FX_PATHPOINT* %260, %261
  br i1 %262, label %266, label %263

263:                                              ; preds = %258
  call void @_ZN12FX_PATHPOINTC1ERKS_(%class.FX_PATHPOINT* %260, %class.FX_PATHPOINT* dereferenceable(12) %259) #11
  %264 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %260, i64 1
  %265 = ptrtoint %class.FX_PATHPOINT* %264 to i64
  store i64 %265, i64* %186, align 8
  br label %267

266:                                              ; preds = %258
  call void @_ZNSt3__16vectorI12FX_PATHPOINTNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_(%"class.std::__1::vector.12"* nonnull %16, %class.FX_PATHPOINT* dereferenceable(12) %259) #11
  br label %267

267:                                              ; preds = %266, %263, %230, %227, %240
  %268 = phi i64 [ %208, %240 ], [ %208, %227 ], [ %208, %230 ], [ %255, %263 ], [ %255, %266 ]
  %269 = add i64 %268, 1
  %270 = icmp ult i64 %269, %32
  br i1 %270, label %207, label %187

271:                                              ; preds = %8, %166, %206
  %272 = icmp ne i8 %22, 0
  %273 = and i1 %19, %272
  %274 = xor i1 %273, true
  %275 = icmp eq i32 %25, 255
  %276 = or i1 %275, %274
  br i1 %276, label %297, label %277

277:                                              ; preds = %271
  %278 = getelementptr inbounds %struct.CFX_FillRenderOptions, %struct.CFX_FillRenderOptions* %6, i64 0, i32 1
  %279 = load i8, i8* %278, align 1
  %280 = and i8 %279, 16
  %281 = icmp eq i8 %280, 0
  br i1 %281, label %297, label %282

282:                                              ; preds = %277
  %283 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 5
  %284 = load i32, i32* %283, align 4
  %285 = and i32 %284, 8192
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %295, label %287

287:                                              ; preds = %282
  %288 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %289 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %288, align 8
  %290 = bitcast %class.RenderDeviceDriverIface* %289 to i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions*, i32)***
  %291 = load i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions*, i32)**, i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions*, i32)*** %290, align 8
  %292 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions*, i32)*, i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions*, i32)** %291, i64 9
  %293 = load i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions*, i32)*, i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions*, i32)** %292, align 8
  %294 = call zeroext i1 %293(%class.RenderDeviceDriverIface* %289, %class.CFX_PathData* %1, %class.CFX_Matrix* %2, %class.CFX_GraphStateData* %3, i32 %4, i32 %5, %struct.CFX_FillRenderOptions* dereferenceable(2) %6, i32 %7) #11
  br label %305

295:                                              ; preds = %282
  %296 = call zeroext i1 @_ZN16CFX_RenderDevice18DrawFillStrokePathEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions9BlendMode(%class.CFX_RenderDevice* %0, %class.CFX_PathData* %1, %class.CFX_Matrix* %2, %class.CFX_GraphStateData* %3, i32 %4, i32 %5, %struct.CFX_FillRenderOptions* dereferenceable(2) %6, i32 %7)
  br label %305

297:                                              ; preds = %165, %271, %277
  %298 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %299 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %298, align 8
  %300 = bitcast %class.RenderDeviceDriverIface* %299 to i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions*, i32)***
  %301 = load i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions*, i32)**, i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions*, i32)*** %300, align 8
  %302 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions*, i32)*, i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions*, i32)** %301, i64 9
  %303 = load i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions*, i32)*, i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions*, i32)** %302, align 8
  %304 = call zeroext i1 %303(%class.RenderDeviceDriverIface* %299, %class.CFX_PathData* %1, %class.CFX_Matrix* %2, %class.CFX_GraphStateData* %3, i32 %4, i32 %5, %struct.CFX_FillRenderOptions* dereferenceable(2) %6, i32 %7) #11
  br label %305

305:                                              ; preds = %163, %297, %295, %287, %72
  %306 = phi i1 [ true, %72 ], [ %294, %287 ], [ %296, %295 ], [ %304, %297 ], [ %164, %163 ]
  ret i1 %306
}

declare void @_ZNK10CFX_Matrix9TransformERK13CFX_PTemplateIfE(%class.CFX_PTemplate* sret, %class.CFX_Matrix*, %class.CFX_PTemplate* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16CFX_RenderDevice16DrawCosmeticLineERK13CFX_PTemplateIfES3_jRK21CFX_FillRenderOptions9BlendMode(%class.CFX_RenderDevice* nocapture readonly, %class.CFX_PTemplate* dereferenceable(8), %class.CFX_PTemplate* dereferenceable(8), i32, %struct.CFX_FillRenderOptions* dereferenceable(2), i32) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.CFX_GraphStateData, align 8
  %8 = alloca %class.CFX_PathData, align 8
  %9 = icmp ugt i32 %3, -16777217
  br i1 %9, label %10, label %18

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %12 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %11, align 8
  %13 = bitcast %class.RenderDeviceDriverIface* %12 to i1 (%class.RenderDeviceDriverIface*, %class.CFX_PTemplate*, %class.CFX_PTemplate*, i32, i32)***
  %14 = load i1 (%class.RenderDeviceDriverIface*, %class.CFX_PTemplate*, %class.CFX_PTemplate*, i32, i32)**, i1 (%class.RenderDeviceDriverIface*, %class.CFX_PTemplate*, %class.CFX_PTemplate*, i32, i32)*** %13, align 8
  %15 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, %class.CFX_PTemplate*, %class.CFX_PTemplate*, i32, i32)*, i1 (%class.RenderDeviceDriverIface*, %class.CFX_PTemplate*, %class.CFX_PTemplate*, i32, i32)** %14, i64 11
  %16 = load i1 (%class.RenderDeviceDriverIface*, %class.CFX_PTemplate*, %class.CFX_PTemplate*, i32, i32)*, i1 (%class.RenderDeviceDriverIface*, %class.CFX_PTemplate*, %class.CFX_PTemplate*, i32, i32)** %15, align 8
  %17 = tail call zeroext i1 %16(%class.RenderDeviceDriverIface* %12, %class.CFX_PTemplate* dereferenceable(8) %1, %class.CFX_PTemplate* dereferenceable(8) %2, i32 %3, i32 %5) #11
  br i1 %17, label %29, label %18

18:                                               ; preds = %10, %6
  %19 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %19) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 8 getelementptr inbounds ({ i8, i8, [2 x i8], float, float, float, %"class.std::__1::vector.17" }, { i8, i8, [2 x i8], float, float, float, %"class.std::__1::vector.17" }* @__const._ZN16CFX_RenderDevice10DrawBorderEPK10CFX_MatrixRK13CFX_FloatRectfRK9CFX_ColorS8_S8_11BorderStylei.gsd.3, i64 0, i32 0), i64 40, i1 false)
  call void @_ZN18CFX_GraphStateDataC1Ev(%class.CFX_GraphStateData* nonnull %7) #11
  %20 = bitcast %class.CFX_PathData* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #11
  %21 = bitcast %class.CFX_PathData* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  call void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData* nonnull %8) #11
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %8, %class.CFX_PTemplate* dereferenceable(8) %1, i8 zeroext 2) #11
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %8, %class.CFX_PTemplate* dereferenceable(8) %2, i8 zeroext 0) #11
  %22 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %23 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %22, align 8
  %24 = bitcast %class.RenderDeviceDriverIface* %23 to i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions*, i32)***
  %25 = load i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions*, i32)**, i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions*, i32)*** %24, align 8
  %26 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions*, i32)*, i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions*, i32)** %25, i64 9
  %27 = load i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions*, i32)*, i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions*, i32)** %26, align 8
  %28 = call zeroext i1 %27(%class.RenderDeviceDriverIface* %23, %class.CFX_PathData* nonnull %8, %class.CFX_Matrix* null, %class.CFX_GraphStateData* nonnull %7, i32 0, i32 %3, %struct.CFX_FillRenderOptions* dereferenceable(2) %4, i32 %5) #11
  call void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #11
  call void @_ZN18CFX_GraphStateDataD1Ev(%class.CFX_GraphStateData* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %19) #11
  br label %29

29:                                               ; preds = %10, %18
  %30 = phi i1 [ %28, %18 ], [ true, %10 ]
  ret i1 %30
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

declare void @_ZNK12CFX_PathData7GetRectEPK10CFX_Matrix(%"class.pdfium::Optional"* sret, %class.CFX_PathData*, %class.CFX_Matrix*) local_unnamed_addr #4

declare { i64, i64 } @_ZNK13CFX_FloatRect12GetOuterRectEv(%class.CFX_FloatRect*) local_unnamed_addr #4

declare zeroext i1 @_ZNK7FX_RECT5ValidEv(%struct.FX_RECT*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16CFX_RenderDevice17FillRectWithBlendERK7FX_RECTj9BlendMode(%class.CFX_RenderDevice* nocapture readonly, %struct.FX_RECT* dereferenceable(16), i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.fxcrt::RetainPtr", align 8
  %6 = alloca %struct.FX_RECT, align 4
  %7 = alloca %"class.fxcrt::RetainPtr.25", align 8
  %8 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %9 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %8, align 8
  %10 = bitcast %class.RenderDeviceDriverIface* %9 to i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*, i32, i32)***
  %11 = load i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*, i32, i32)**, i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*, i32, i32)*** %10, align 8
  %12 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*, i32, i32)*, i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*, i32, i32)** %11, i64 10
  %13 = load i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*, i32, i32)*, i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*, i32, i32)** %12, align 8
  %14 = tail call zeroext i1 %13(%class.RenderDeviceDriverIface* %9, %struct.FX_RECT* dereferenceable(16) %1, i32 %2, i32 %3) #11
  br i1 %14, label %133, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 5
  %17 = load i32, i32* %16, align 4
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %133, label %20

20:                                               ; preds = %15
  %21 = bitcast %"class.fxcrt::RetainPtr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  %22 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = tail call i8* @_Znwm(i64 80) #12, !noalias !6
  %24 = bitcast i8* %23 to %class.CFX_DIBitmap*
  tail call void @_ZN12CFX_DIBitmapC1Ev(%class.CFX_DIBitmap* nonnull %24) #11, !noalias !6
  %25 = ptrtoint i8* %23 to i64
  %26 = bitcast %"class.fxcrt::RetainPtr"* %5 to i64*
  store i64 %25, i64* %26, align 8, !alias.scope !6
  %27 = getelementptr inbounds i8, i8* %23, i64 8
  %28 = bitcast i8* %27 to i64*
  %29 = load i64, i64* %28, align 8, !noalias !6
  %30 = add nsw i64 %29, 1
  store i64 %30, i64* %28, align 8, !noalias !6
  %31 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %1, i64 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %1, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = sub nsw i32 %32, %34
  %36 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %1, i64 0, i32 3
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %1, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = sub nsw i32 %37, %39
  %41 = load i32, i32* %16, align 4
  %42 = and i32 %41, 2048
  %43 = icmp eq i32 %42, 0
  %44 = bitcast i8* %23 to %class.CFX_DIBitmap*
  br i1 %43, label %47, label %45

45:                                               ; preds = %20
  %46 = tail call zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap* nonnull %44, i32 %35, i32 %40, i16 zeroext 264) #11
  br i1 %46, label %52, label %117

47:                                               ; preds = %20
  %48 = and i32 %41, 64
  %49 = icmp eq i32 %48, 0
  %50 = select i1 %49, i16 24, i16 544
  %51 = tail call zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap* nonnull %44, i32 %35, i32 %40, i16 zeroext %50) #11
  br i1 %51, label %52, label %117

52:                                               ; preds = %45, %47
  %53 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %8, align 8
  %54 = load i32, i32* %33, align 4
  %55 = load i32, i32* %38, align 4
  %56 = bitcast %class.RenderDeviceDriverIface* %53 to i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr"*, i32, i32)***
  %57 = load i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr"*, i32, i32)**, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr"*, i32, i32)*** %56, align 8
  %58 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr"*, i32, i32)*, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr"*, i32, i32)** %57, i64 13
  %59 = load i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr"*, i32, i32)*, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr"*, i32, i32)** %58, align 8
  %60 = call zeroext i1 %59(%class.RenderDeviceDriverIface* %53, %"class.fxcrt::RetainPtr"* nonnull dereferenceable(8) %5, i32 %54, i32 %55) #11
  br i1 %60, label %61, label %117

61:                                               ; preds = %52
  %62 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %22, align 8
  %63 = load i32, i32* %31, align 4
  %64 = load i32, i32* %33, align 4
  %65 = sub nsw i32 %63, %64
  %66 = load i32, i32* %36, align 4
  %67 = load i32, i32* %38, align 4
  %68 = sub nsw i32 %66, %67
  %69 = call zeroext i1 @_ZN12CFX_DIBitmap13CompositeRectEiiiij(%class.CFX_DIBitmap* %62, i32 0, i32 0, i32 %65, i32 %68, i32 %2) #11
  br i1 %69, label %70, label %117

70:                                               ; preds = %61
  %71 = bitcast %struct.FX_RECT* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %71) #11
  %72 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %6, i64 0, i32 0
  %73 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %6, i64 0, i32 1
  %74 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %6, i64 0, i32 2
  %75 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %6, i64 0, i32 3
  %76 = load i32, i32* %31, align 4
  %77 = load i32, i32* %33, align 4
  %78 = sub nsw i32 %76, %77
  %79 = load i32, i32* %36, align 4
  %80 = load i32, i32* %38, align 4
  %81 = sub nsw i32 %79, %80
  store i32 0, i32* %72, align 4
  store i32 0, i32* %73, align 4
  store i32 %78, i32* %74, align 4
  store i32 %81, i32* %75, align 4
  %82 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %8, align 8
  %83 = bitcast %"class.fxcrt::RetainPtr.25"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #11
  %84 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %22, align 8
  %85 = ptrtoint %class.CFX_DIBitmap* %84 to i64
  %86 = bitcast %"class.fxcrt::RetainPtr.25"* %7 to i64*
  store i64 %85, i64* %86, align 8
  %87 = icmp eq %class.CFX_DIBitmap* %84, null
  br i1 %87, label %94, label %88

88:                                               ; preds = %70
  %89 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %84, i64 0, i32 0, i32 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = add nsw i64 %90, 1
  store i64 %91, i64* %89, align 8
  %92 = load i32, i32* %33, align 4
  %93 = load i32, i32* %38, align 4
  br label %94

94:                                               ; preds = %70, %88
  %95 = phi i32 [ %80, %70 ], [ %93, %88 ]
  %96 = phi i32 [ %77, %70 ], [ %92, %88 ]
  %97 = bitcast %class.RenderDeviceDriverIface* %82 to i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)***
  %98 = load i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)**, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)*** %97, align 8
  %99 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)*, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)** %98, i64 15
  %100 = load i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)*, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)** %99, align 8
  %101 = call zeroext i1 %100(%class.RenderDeviceDriverIface* %82, %"class.fxcrt::RetainPtr.25"* nonnull dereferenceable(8) %7, i32 0, %struct.FX_RECT* nonnull dereferenceable(16) %6, i32 %96, i32 %95, i32 0) #11
  %102 = getelementptr inbounds %"class.fxcrt::RetainPtr.25", %"class.fxcrt::RetainPtr.25"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %103 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %102, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %102, align 8
  %104 = icmp eq %class.CFX_DIBBase* %103, null
  br i1 %104, label %116, label %105

105:                                              ; preds = %94
  %106 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %103, i64 0, i32 0, i32 1
  %107 = load i64, i64* %106, align 8
  %108 = add nsw i64 %107, -1
  store i64 %108, i64* %106, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %116

110:                                              ; preds = %105
  %111 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %103, i64 0, i32 0
  %112 = bitcast %class.CFX_DIBBase* %103 to void (%"class.fxcrt::Retainable"*)***
  %113 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %112, align 8
  %114 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %113, i64 1
  %115 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %114, align 8
  call void %115(%"class.fxcrt::Retainable"* nonnull %111) #11
  br label %116

116:                                              ; preds = %94, %105, %110
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #11
  br label %117

117:                                              ; preds = %45, %61, %52, %47, %116
  %118 = phi i1 [ true, %116 ], [ false, %47 ], [ false, %52 ], [ false, %61 ], [ false, %45 ]
  %119 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %22, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %22, align 8
  %120 = icmp eq %class.CFX_DIBitmap* %119, null
  br i1 %120, label %132, label %121

121:                                              ; preds = %117
  %122 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %119, i64 0, i32 0, i32 0, i32 1
  %123 = load i64, i64* %122, align 8
  %124 = add nsw i64 %123, -1
  store i64 %124, i64* %122, align 8
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %126, label %132

126:                                              ; preds = %121
  %127 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %119, i64 0, i32 0, i32 0
  %128 = bitcast %class.CFX_DIBitmap* %119 to void (%"class.fxcrt::Retainable"*)***
  %129 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %128, align 8
  %130 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %129, i64 1
  %131 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %130, align 8
  call void %131(%"class.fxcrt::Retainable"* nonnull %127) #11
  br label %132

132:                                              ; preds = %117, %121, %126
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  br label %133

133:                                              ; preds = %15, %4, %132
  %134 = phi i1 [ %118, %132 ], [ true, %4 ], [ false, %15 ]
  ret i1 %134
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_RenderDevice16DrawZeroAreaPathERKNSt3__16vectorI12FX_PATHPOINTNS0_9allocatorIS2_EEEEPK10CFX_Matrixbbjh9BlendMode(%class.CFX_RenderDevice* nocapture readonly, %"class.std::__1::vector.12"* nocapture readonly dereferenceable(24), %class.CFX_Matrix*, i1 zeroext, i1 zeroext, i32, i8 zeroext, i32) local_unnamed_addr #0 align 2 {
  %9 = alloca %class.CFX_PathData, align 8
  %10 = alloca %class.CFX_PTemplate, align 4
  %11 = alloca %class.CFX_PTemplate, align 4
  %12 = alloca %class.CFX_PathData, align 8
  %13 = alloca %class.CFX_GraphStateData, align 8
  %14 = alloca %struct.CFX_FillRenderOptions, align 1
  %15 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %1, i64 0, i32 0, i32 0
  %16 = load %class.FX_PATHPOINT*, %class.FX_PATHPOINT** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %1, i64 0, i32 0, i32 1
  %18 = load %class.FX_PATHPOINT*, %class.FX_PATHPOINT** %17, align 8
  %19 = icmp eq %class.FX_PATHPOINT* %16, %18
  br i1 %19, label %390, label %20

20:                                               ; preds = %8
  %21 = bitcast %class.CFX_PathData* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #11
  %22 = getelementptr inbounds %class.CFX_PathData, %class.CFX_PathData* %12, i64 0, i32 0, i32 0, i32 1
  %23 = bitcast %class.CFX_PathData* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 24, i1 false)
  call void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData* nonnull %12) #11
  %24 = bitcast %"class.std::__1::vector.12"* %1 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %class.FX_PATHPOINT** %17 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %27, %25
  %29 = sdiv exact i64 %28, 12
  %30 = icmp ult i64 %29, 2
  br i1 %30, label %389, label %31

31:                                               ; preds = %20
  %32 = inttoptr i64 %25 to %class.FX_PATHPOINT*
  %33 = and i64 %29, -2
  %34 = icmp eq i64 %33, 2
  br i1 %34, label %35, label %133

35:                                               ; preds = %31
  %36 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %32, i64 0, i32 1
  %37 = load i8, i8* %36, align 4
  %38 = icmp eq i8 %37, 2
  br i1 %38, label %39, label %133

39:                                               ; preds = %35
  %40 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %32, i64 1, i32 1
  %41 = load i8, i8* %40, align 4
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %133

43:                                               ; preds = %39
  %44 = icmp eq i64 %28, 36
  br i1 %44, label %48, label %45

45:                                               ; preds = %43
  %46 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %32, i64 0, i32 0, i32 0
  %47 = load float, float* %46, align 4
  br label %65

48:                                               ; preds = %43
  %49 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %32, i64 2, i32 1
  %50 = load i8, i8* %49, align 4
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %53, label %52

52:                                               ; preds = %188, %133, %59, %53, %48
  br label %198

53:                                               ; preds = %48
  %54 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %32, i64 0, i32 0, i32 0
  %55 = load float, float* %54, align 4
  %56 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %32, i64 2, i32 0, i32 0
  %57 = load float, float* %56, align 4
  %58 = fcmp oeq float %55, %57
  br i1 %58, label %59, label %52

59:                                               ; preds = %53
  %60 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %32, i64 0, i32 0, i32 1
  %61 = load float, float* %60, align 4
  %62 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %32, i64 2, i32 0, i32 1
  %63 = load float, float* %62, align 4
  %64 = fcmp une float %61, %63
  br i1 %64, label %52, label %65

65:                                               ; preds = %59, %45
  %66 = phi float [ %47, %45 ], [ %55, %59 ]
  %67 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %32, i64 1, i32 0, i32 0
  %68 = load float, float* %67, align 4
  %69 = fcmp oeq float %66, %68
  br i1 %69, label %70, label %76

70:                                               ; preds = %65
  %71 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %32, i64 0, i32 0, i32 1
  %72 = load float, float* %71, align 4
  %73 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %32, i64 1, i32 0, i32 1
  %74 = load float, float* %73, align 4
  %75 = fcmp oeq float %72, %74
  br i1 %75, label %333, label %76

76:                                               ; preds = %70, %65
  %77 = bitcast %class.CFX_PTemplate* %10 to i8*
  %78 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %10, i64 0, i32 0
  %79 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %10, i64 0, i32 1
  %80 = bitcast %class.CFX_PTemplate* %10 to i32*
  %81 = bitcast float* %79 to i32*
  %82 = icmp eq %class.CFX_Matrix* %2, null
  %83 = bitcast %class.CFX_PTemplate* %11 to i8*
  %84 = bitcast %class.CFX_PTemplate* %11 to i32*
  %85 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %11, i64 0, i32 1
  %86 = bitcast float* %85 to i32*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #11
  store float 0xFFFFFFFFE0000000, float* %78, align 4
  store float 0xFFFFFFFFE0000000, float* %79, align 4
  %87 = inttoptr i64 %25 to i32*
  %88 = load i32, i32* %87, align 4
  store i32 %88, i32* %80, align 4
  %89 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %32, i64 0, i32 0, i32 1
  %90 = bitcast float* %89 to i32*
  %91 = load i32, i32* %90, align 4
  store i32 %91, i32* %81, align 4
  br i1 %3, label %92, label %107

92:                                               ; preds = %76
  br i1 %82, label %96, label %93

93:                                               ; preds = %92
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #11
  call void @_ZNK10CFX_Matrix9TransformERK13CFX_PTemplateIfE(%class.CFX_PTemplate* nonnull sret %11, %class.CFX_Matrix* nonnull %2, %class.CFX_PTemplate* nonnull dereferenceable(8) %10) #11
  %94 = load i32, i32* %84, align 4
  store i32 %94, i32* %80, align 4
  %95 = load i32, i32* %86, align 4
  store i32 %95, i32* %81, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #11
  br label %96

96:                                               ; preds = %93, %92
  %97 = phi i32 [ %91, %92 ], [ %95, %93 ]
  %98 = phi i32 [ %88, %92 ], [ %94, %93 ]
  %99 = bitcast i32 %98 to float
  %100 = bitcast i32 %97 to float
  %101 = fptosi float %99 to i32
  %102 = sitofp i32 %101 to float
  %103 = fadd float %102, 5.000000e-01
  %104 = fptosi float %100 to i32
  %105 = sitofp i32 %104 to float
  %106 = fadd float %105, 5.000000e-01
  store float %103, float* %78, align 4
  store float %106, float* %79, align 4
  br label %107

107:                                              ; preds = %96, %76
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %12, %class.CFX_PTemplate* nonnull dereferenceable(8) %10, i8 zeroext 2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #11
  %108 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %32, i64 1, i32 0
  %109 = bitcast %class.CFX_PTemplate* %108 to i32*
  %110 = load i32, i32* %109, align 4
  store i32 %110, i32* %80, align 4
  %111 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %32, i64 1, i32 0, i32 1
  %112 = bitcast float* %111 to i32*
  %113 = load i32, i32* %112, align 4
  store i32 %113, i32* %81, align 4
  br i1 %3, label %114, label %129

114:                                              ; preds = %107
  br i1 %82, label %118, label %115

115:                                              ; preds = %114
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #11
  call void @_ZNK10CFX_Matrix9TransformERK13CFX_PTemplateIfE(%class.CFX_PTemplate* nonnull sret %11, %class.CFX_Matrix* nonnull %2, %class.CFX_PTemplate* nonnull dereferenceable(8) %10) #11
  %116 = load i32, i32* %84, align 4
  store i32 %116, i32* %80, align 4
  %117 = load i32, i32* %86, align 4
  store i32 %117, i32* %81, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #11
  br label %118

118:                                              ; preds = %115, %114
  %119 = phi i32 [ %117, %115 ], [ %113, %114 ]
  %120 = phi i32 [ %116, %115 ], [ %110, %114 ]
  %121 = bitcast i32 %120 to float
  %122 = bitcast i32 %119 to float
  %123 = fptosi float %121 to i32
  %124 = sitofp i32 %123 to float
  %125 = fadd float %124, 5.000000e-01
  %126 = fptosi float %122 to i32
  %127 = sitofp i32 %126 to float
  %128 = fadd float %127, 5.000000e-01
  store float %125, float* %78, align 4
  store float %128, float* %79, align 4
  br label %129

129:                                              ; preds = %118, %107
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %12, %class.CFX_PTemplate* nonnull dereferenceable(8) %10, i8 zeroext 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #11
  %130 = icmp ne %class.CFX_Matrix* %2, null
  %131 = and i1 %130, %3
  %132 = zext i1 %131 to i8
  br label %333

133:                                              ; preds = %39, %35, %31
  %134 = icmp ult i64 %29, 4
  %135 = and i64 %29, 1
  %136 = icmp eq i64 %135, 0
  %137 = or i1 %134, %136
  br i1 %137, label %52, label %138

138:                                              ; preds = %133
  %139 = lshr i64 %29, 1
  %140 = trunc i64 %139 to i32
  %141 = bitcast %class.CFX_PathData* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %141) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %141, i8 -86, i64 24, i1 false) #11
  call void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData* nonnull %9) #11
  %142 = icmp sgt i32 %140, 0
  br i1 %142, label %143, label %187

143:                                              ; preds = %138
  %144 = shl i64 %139, 32
  %145 = ashr exact i64 %144, 32
  %146 = and i64 %139, 4294967295
  br label %147

147:                                              ; preds = %183, %143
  %148 = phi i64 [ 0, %143 ], [ %154, %183 ]
  %149 = sub nsw i64 %145, %148
  %150 = add nsw i64 %149, -1
  %151 = icmp ugt i64 %29, %150
  br i1 %151, label %153, label %152, !prof !3

152:                                              ; preds = %147
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !4
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !5
  unreachable

153:                                              ; preds = %147
  %154 = add nuw nsw i64 %148, 1
  %155 = add nuw i64 %154, %139
  %156 = shl i64 %155, 32
  %157 = ashr exact i64 %156, 32
  %158 = icmp ugt i64 %29, %157
  br i1 %158, label %160, label %159, !prof !3

159:                                              ; preds = %153
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !4
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !5
  unreachable

160:                                              ; preds = %153
  %161 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %32, i64 %150, i32 0, i32 0
  %162 = load float, float* %161, align 4
  %163 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %32, i64 %157, i32 0, i32 0
  %164 = load float, float* %163, align 4
  %165 = fcmp oeq float %162, %164
  br i1 %165, label %166, label %188

166:                                              ; preds = %160
  %167 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %32, i64 %150, i32 0, i32 1
  %168 = load float, float* %167, align 4
  %169 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %32, i64 %157, i32 0, i32 1
  %170 = load float, float* %169, align 4
  %171 = fcmp oeq float %168, %170
  br i1 %171, label %172, label %188

172:                                              ; preds = %166
  %173 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %32, i64 %150, i32 1
  %174 = load i8, i8* %173, align 4
  %175 = icmp eq i8 %174, 1
  br i1 %175, label %188, label %176

176:                                              ; preds = %172
  %177 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %32, i64 %157, i32 1
  %178 = load i8, i8* %177, align 4
  %179 = icmp eq i8 %178, 1
  br i1 %179, label %188, label %180

180:                                              ; preds = %176
  %181 = icmp ugt i64 %29, %149
  br i1 %181, label %183, label %182, !prof !3

182:                                              ; preds = %180
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !4
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !5
  unreachable

183:                                              ; preds = %180
  %184 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %32, i64 %149, i32 0
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %9, %class.CFX_PTemplate* dereferenceable(8) %184, i8 zeroext 2) #11
  %185 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %32, i64 %150, i32 0
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %9, %class.CFX_PTemplate* dereferenceable(8) %185, i8 zeroext 0) #11
  %186 = icmp eq i64 %154, %146
  br i1 %186, label %187, label %147

187:                                              ; preds = %183, %138
  call void @_ZN12CFX_PathData6AppendERKS_PK10CFX_Matrix(%class.CFX_PathData* nonnull %12, %class.CFX_PathData* nonnull dereferenceable(24) %9, %class.CFX_Matrix* null) #11
  call void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %141) #11
  br label %333

188:                                              ; preds = %176, %172, %166, %160
  call void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %141) #11
  br label %52

189:                                              ; preds = %329
  %190 = icmp ugt i64 %29, 3
  %191 = bitcast %class.FX_PATHPOINT** %22 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = bitcast %class.CFX_PathData* %12 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = icmp ne i64 %192, %194
  %196 = and i1 %190, %195
  %197 = zext i1 %196 to i8
  br i1 %195, label %333, label %389

198:                                              ; preds = %52, %329
  %199 = phi i64 [ %331, %329 ], [ 0, %52 ]
  %200 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %32, i64 %199
  %201 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %32, i64 %199, i32 1
  %202 = load i8, i8* %201, align 4
  switch i8 %202, label %205 [
    i8 2, label %329
    i8 1, label %203
  ]

203:                                              ; preds = %198
  %204 = add i64 %199, 2
  br label %329

205:                                              ; preds = %198
  %206 = add nuw i64 %199, 1
  %207 = urem i64 %206, %29
  %208 = shl i64 %207, 32
  %209 = ashr exact i64 %208, 32
  %210 = icmp ugt i64 %29, %209
  br i1 %210, label %212, label %211, !prof !3

211:                                              ; preds = %205
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !4
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !5
  unreachable

212:                                              ; preds = %205
  %213 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %32, i64 %209
  %214 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %32, i64 %209, i32 1
  %215 = load i8, i8* %214, align 4
  %216 = add i8 %215, -1
  %217 = icmp ult i8 %216, 2
  br i1 %217, label %329, label %218

218:                                              ; preds = %212
  %219 = add i64 %199, -1
  %220 = icmp ugt i64 %29, %219
  br i1 %220, label %222, label %221, !prof !3

221:                                              ; preds = %218
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !4
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !5
  unreachable

222:                                              ; preds = %218
  %223 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %32, i64 %219
  %224 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %223, i64 0, i32 0, i32 0
  %225 = load float, float* %224, align 4
  %226 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %200, i64 0, i32 0, i32 0
  %227 = load float, float* %226, align 4
  %228 = fcmp oeq float %225, %227
  br i1 %228, label %229, label %258

229:                                              ; preds = %222
  %230 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %213, i64 0, i32 0, i32 0
  %231 = load float, float* %230, align 4
  %232 = fcmp oeq float %227, %231
  br i1 %232, label %233, label %258

233:                                              ; preds = %229
  %234 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %32, i64 %199, i32 0, i32 1
  %235 = load float, float* %234, align 4
  %236 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %32, i64 %219, i32 0, i32 1
  %237 = load float, float* %236, align 4
  %238 = fsub float %235, %237
  %239 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %32, i64 %209, i32 0, i32 1
  %240 = load float, float* %239, align 4
  %241 = fsub float %235, %240
  %242 = fmul float %238, %241
  %243 = fcmp ogt float %242, 0.000000e+00
  br i1 %243, label %244, label %258

244:                                              ; preds = %233
  %245 = call float @llvm.fabs.f32(float %238) #11
  %246 = call float @llvm.fabs.f32(float %241) #11
  %247 = fcmp olt float %245, %246
  %248 = select i1 %247, %class.FX_PATHPOINT* %223, %class.FX_PATHPOINT* %200
  br i1 %247, label %249, label %254

249:                                              ; preds = %244
  %250 = add i64 %208, -4294967296
  %251 = ashr exact i64 %250, 32
  %252 = icmp ugt i64 %29, %251
  br i1 %252, label %254, label %253, !prof !3

253:                                              ; preds = %249
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !4
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !5
  unreachable

254:                                              ; preds = %249, %244
  %255 = phi i64 [ %209, %244 ], [ %251, %249 ]
  %256 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %248, i64 0, i32 0
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %12, %class.CFX_PTemplate* dereferenceable(8) %256, i8 zeroext 2) #11
  %257 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %32, i64 %255, i32 0
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %12, %class.CFX_PTemplate* dereferenceable(8) %257, i8 zeroext 0) #11
  br label %329

258:                                              ; preds = %233, %229, %222
  %259 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %32, i64 %219, i32 0, i32 1
  %260 = load float, float* %259, align 4
  %261 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %32, i64 %199, i32 0, i32 1
  %262 = load float, float* %261, align 4
  %263 = fcmp oeq float %260, %262
  br i1 %263, label %264, label %280

264:                                              ; preds = %258
  %265 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %32, i64 %209, i32 0, i32 1
  %266 = load float, float* %265, align 4
  %267 = fcmp oeq float %262, %266
  br i1 %267, label %268, label %280

268:                                              ; preds = %264
  %269 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %213, i64 0, i32 0, i32 0
  %270 = load float, float* %269, align 4
  %271 = insertelement <2 x float> undef, float %227, i32 0
  %272 = shufflevector <2 x float> %271, <2 x float> undef, <2 x i32> zeroinitializer
  %273 = insertelement <2 x float> undef, float %225, i32 0
  %274 = insertelement <2 x float> %273, float %270, i32 1
  %275 = fsub <2 x float> %272, %274
  %276 = extractelement <2 x float> %275, i32 0
  %277 = extractelement <2 x float> %275, i32 1
  %278 = fmul float %276, %277
  %279 = fcmp ogt float %278, 0.000000e+00
  br i1 %279, label %313, label %280

280:                                              ; preds = %268, %264, %258
  %281 = fcmp une float %225, %227
  br i1 %281, label %282, label %329

282:                                              ; preds = %280
  %283 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %213, i64 0, i32 0, i32 0
  %284 = load float, float* %283, align 4
  %285 = fcmp une float %284, %227
  %286 = fcmp une float %260, %262
  %287 = and i1 %286, %285
  br i1 %287, label %288, label %329

288:                                              ; preds = %282
  %289 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %32, i64 %209, i32 0, i32 1
  %290 = load float, float* %289, align 4
  %291 = fcmp une float %290, %262
  br i1 %291, label %292, label %329

292:                                              ; preds = %288
  %293 = insertelement <2 x float> undef, float %284, i32 0
  %294 = insertelement <2 x float> %293, float %290, i32 1
  %295 = insertelement <2 x float> undef, float %227, i32 0
  %296 = insertelement <2 x float> %295, float %262, i32 1
  %297 = fsub <2 x float> %294, %296
  %298 = insertelement <2 x float> undef, float %260, i32 0
  %299 = insertelement <2 x float> %298, float %225, i32 1
  %300 = insertelement <2 x float> undef, float %262, i32 0
  %301 = insertelement <2 x float> %300, float %227, i32 1
  %302 = fsub <2 x float> %299, %301
  %303 = fmul <2 x float> %302, %297
  %304 = extractelement <2 x float> %303, i32 0
  %305 = extractelement <2 x float> %303, i32 1
  %306 = fcmp oeq float %304, %305
  br i1 %306, label %307, label %329

307:                                              ; preds = %292
  %308 = insertelement <2 x float> undef, float %227, i32 0
  %309 = shufflevector <2 x float> %308, <2 x float> undef, <2 x i32> zeroinitializer
  %310 = insertelement <2 x float> undef, float %225, i32 0
  %311 = insertelement <2 x float> %310, float %284, i32 1
  %312 = fsub <2 x float> %309, %311
  br label %313

313:                                              ; preds = %307, %268
  %314 = phi <2 x float> [ %312, %307 ], [ %275, %268 ]
  %315 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %314)
  %316 = extractelement <2 x float> %315, i32 0
  %317 = extractelement <2 x float> %315, i32 1
  %318 = fcmp olt float %316, %317
  %319 = select i1 %318, %class.FX_PATHPOINT* %223, %class.FX_PATHPOINT* %200
  br i1 %318, label %320, label %325

320:                                              ; preds = %313
  %321 = add i64 %208, -4294967296
  %322 = ashr exact i64 %321, 32
  %323 = icmp ugt i64 %29, %322
  br i1 %323, label %325, label %324, !prof !3

324:                                              ; preds = %320
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !4
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !5
  unreachable

325:                                              ; preds = %320, %313
  %326 = phi i64 [ %209, %313 ], [ %322, %320 ]
  %327 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %319, i64 0, i32 0
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %12, %class.CFX_PTemplate* dereferenceable(8) %327, i8 zeroext 2) #11
  %328 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %32, i64 %326, i32 0
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %12, %class.CFX_PTemplate* dereferenceable(8) %328, i8 zeroext 0) #11
  br label %329

329:                                              ; preds = %325, %292, %288, %282, %280, %254, %212, %203, %198
  %330 = phi i64 [ %204, %203 ], [ %199, %198 ], [ %199, %254 ], [ %199, %325 ], [ %199, %292 ], [ %199, %212 ], [ %199, %288 ], [ %199, %282 ], [ %199, %280 ]
  %331 = add i64 %330, 1
  %332 = icmp ult i64 %331, %29
  br i1 %332, label %198, label %189

333:                                              ; preds = %129, %189, %187, %70
  %334 = phi i8 [ 1, %187 ], [ 0, %70 ], [ %197, %189 ], [ 1, %129 ]
  %335 = phi i8 [ 0, %187 ], [ 0, %70 ], [ 0, %189 ], [ %132, %129 ]
  %336 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %13, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %336) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %336, i8* align 8 getelementptr inbounds ({ i8, i8, [2 x i8], float, float, float, %"class.std::__1::vector.17" }, { i8, i8, [2 x i8], float, float, float, %"class.std::__1::vector.17" }* @__const._ZN16CFX_RenderDevice10DrawBorderEPK10CFX_MatrixRK13CFX_FloatRectfRK9CFX_ColorS8_S8_11BorderStylei.gsd.3, i64 0, i32 0), i64 40, i1 false)
  call void @_ZN18CFX_GraphStateDataC1Ev(%class.CFX_GraphStateData* nonnull %13) #11
  %337 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %13, i64 0, i32 4
  store float 0.000000e+00, float* %337, align 4
  %338 = icmp eq i8 %334, 0
  br i1 %338, label %345, label %339

339:                                              ; preds = %333
  %340 = lshr i8 %6, 2
  %341 = zext i8 %340 to i32
  %342 = shl nuw nsw i32 %341, 24
  %343 = and i32 %5, 16777215
  %344 = or i32 %342, %343
  br label %345

345:                                              ; preds = %333, %339
  %346 = phi i32 [ %344, %339 ], [ %5, %333 ]
  %347 = icmp eq %class.CFX_Matrix* %2, null
  br i1 %347, label %377, label %348

348:                                              ; preds = %345
  %349 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 0
  %350 = load float, float* %349, align 4
  %351 = fcmp oeq float %350, 1.000000e+00
  br i1 %351, label %352, label %372

352:                                              ; preds = %348
  %353 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 1
  %354 = load float, float* %353, align 4
  %355 = fcmp oeq float %354, 0.000000e+00
  br i1 %355, label %356, label %372

356:                                              ; preds = %352
  %357 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 2
  %358 = load float, float* %357, align 4
  %359 = fcmp oeq float %358, 0.000000e+00
  br i1 %359, label %360, label %372

360:                                              ; preds = %356
  %361 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 3
  %362 = load float, float* %361, align 4
  %363 = fcmp oeq float %362, 1.000000e+00
  br i1 %363, label %364, label %372

364:                                              ; preds = %360
  %365 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 4
  %366 = load float, float* %365, align 4
  %367 = fcmp oeq float %366, 0.000000e+00
  br i1 %367, label %368, label %372

368:                                              ; preds = %364
  %369 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %2, i64 0, i32 5
  %370 = load float, float* %369, align 4
  %371 = fcmp une float %370, 0.000000e+00
  br label %372

372:                                              ; preds = %348, %352, %356, %360, %364, %368
  %373 = phi i1 [ true, %364 ], [ true, %360 ], [ true, %356 ], [ true, %352 ], [ true, %348 ], [ %371, %368 ]
  %374 = icmp eq i8 %335, 0
  %375 = and i1 %374, %373
  %376 = select i1 %375, %class.CFX_Matrix* %2, %class.CFX_Matrix* null
  br label %377

377:                                              ; preds = %372, %345
  %378 = phi %class.CFX_Matrix* [ null, %345 ], [ %376, %372 ]
  %379 = getelementptr inbounds %struct.CFX_FillRenderOptions, %struct.CFX_FillRenderOptions* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %379) #11
  %380 = getelementptr inbounds %struct.CFX_FillRenderOptions, %struct.CFX_FillRenderOptions* %14, i64 0, i32 1
  store i8 0, i8* %379, align 1
  %381 = select i1 %4, i8 -126, i8 -128
  store i8 %381, i8* %380, align 1
  %382 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %383 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %382, align 8
  %384 = bitcast %class.RenderDeviceDriverIface* %383 to i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions*, i32)***
  %385 = load i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions*, i32)**, i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions*, i32)*** %384, align 8
  %386 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions*, i32)*, i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions*, i32)** %385, i64 9
  %387 = load i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions*, i32)*, i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions*, i32)** %386, align 8
  %388 = call zeroext i1 %387(%class.RenderDeviceDriverIface* %383, %class.CFX_PathData* nonnull %12, %class.CFX_Matrix* %378, %class.CFX_GraphStateData* nonnull %13, i32 0, i32 %346, %struct.CFX_FillRenderOptions* nonnull dereferenceable(2) %14, i32 %7) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %379) #11
  call void @_ZN18CFX_GraphStateDataD1Ev(%class.CFX_GraphStateData* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %336) #11
  br label %389

389:                                              ; preds = %189, %20, %377
  call void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #11
  br label %390

390:                                              ; preds = %8, %389
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16CFX_RenderDevice18DrawFillStrokePathEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions9BlendMode(%class.CFX_RenderDevice* nocapture readonly, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions* dereferenceable(2), i32) local_unnamed_addr #0 align 2 {
  %9 = alloca %class.CFX_FloatRect, align 8
  %10 = alloca { i64, i64 }, align 8
  %11 = bitcast { i64, i64 }* %10 to %struct.FX_RECT*
  %12 = alloca %"class.fxcrt::RetainPtr", align 8
  %13 = alloca %"class.fxcrt::RetainPtr", align 8
  %14 = alloca %"class.fxcrt::RetainPtr.25", align 8
  %15 = alloca %"class.fxcrt::RetainPtr.25", align 8
  %16 = alloca %class.CFX_DefaultRenderDevice, align 8
  %17 = alloca %class.CFX_Matrix, align 16
  %18 = alloca %struct.FX_RECT, align 4
  %19 = alloca %"class.fxcrt::RetainPtr.25", align 8
  %20 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 5
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %272, label %24

24:                                               ; preds = %8
  %25 = bitcast %class.CFX_FloatRect* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #11
  %26 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %9, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 16, i1 false) #11
  %27 = icmp eq %class.CFX_GraphStateData* %3, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %3, i64 0, i32 4
  %30 = load float, float* %29, align 4
  %31 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %3, i64 0, i32 3
  %32 = load float, float* %31, align 8
  %33 = tail call { <2 x float>, <2 x float> } @_ZNK12CFX_PathData27GetBoundingBoxForStrokePathEff(%class.CFX_PathData* %1, float %30, float %32) #11
  br label %36

34:                                               ; preds = %24
  %35 = tail call { <2 x float>, <2 x float> } @_ZNK12CFX_PathData14GetBoundingBoxEv(%class.CFX_PathData* %1) #11
  br label %36

36:                                               ; preds = %34, %28
  %37 = phi { <2 x float>, <2 x float> } [ %35, %34 ], [ %33, %28 ]
  %38 = extractvalue { <2 x float>, <2 x float> } %37, 0
  %39 = extractvalue { <2 x float>, <2 x float> } %37, 1
  %40 = bitcast %class.CFX_FloatRect* %9 to <2 x float>*
  store <2 x float> %38, <2 x float>* %40, align 8
  %41 = bitcast float* %26 to <2 x float>*
  store <2 x float> %39, <2 x float>* %41, align 8
  %42 = icmp ne %class.CFX_Matrix* %2, null
  br i1 %42, label %43, label %49

43:                                               ; preds = %36
  %44 = call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix* nonnull %2, %class.CFX_FloatRect* nonnull dereferenceable(16) %9) #11
  %45 = extractvalue { <2 x float>, <2 x float> } %44, 0
  %46 = extractvalue { <2 x float>, <2 x float> } %44, 1
  %47 = bitcast %class.CFX_FloatRect* %9 to <2 x float>*
  store <2 x float> %45, <2 x float>* %47, align 8
  %48 = bitcast float* %26 to <2 x float>*
  store <2 x float> %46, <2 x float>* %48, align 8
  br label %49

49:                                               ; preds = %43, %36
  %50 = bitcast { i64, i64 }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #11
  %51 = bitcast { i64, i64 }* %10 to i32*
  %52 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %11, i64 0, i32 1
  %53 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  %54 = bitcast i64* %53 to i32*
  %55 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %11, i64 0, i32 3
  %56 = bitcast { i64, i64 }* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 16, i1 false)
  %57 = call { i64, i64 } @_ZNK13CFX_FloatRect12GetOuterRectEv(%class.CFX_FloatRect* nonnull %9) #11
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 0
  %59 = extractvalue { i64, i64 } %57, 0
  store i64 %59, i64* %58, align 8
  %60 = extractvalue { i64, i64 } %57, 1
  store i64 %60, i64* %53, align 8
  %61 = call zeroext i1 @_ZNK7FX_RECT5ValidEv(%struct.FX_RECT* nonnull %11) #11
  br i1 %61, label %62, label %270

62:                                               ; preds = %49
  %63 = bitcast %"class.fxcrt::RetainPtr"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #11
  %64 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = call i8* @_Znwm(i64 80) #12, !noalias !9
  %66 = bitcast i8* %65 to %class.CFX_DIBitmap*
  call void @_ZN12CFX_DIBitmapC1Ev(%class.CFX_DIBitmap* nonnull %66) #11, !noalias !9
  %67 = ptrtoint i8* %65 to i64
  %68 = bitcast %"class.fxcrt::RetainPtr"* %12 to i64*
  store i64 %67, i64* %68, align 8, !alias.scope !9
  %69 = getelementptr inbounds i8, i8* %65, i64 8
  %70 = bitcast i8* %69 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !9
  %72 = add nsw i64 %71, 1
  store i64 %72, i64* %70, align 8, !noalias !9
  %73 = bitcast %"class.fxcrt::RetainPtr"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #11
  %74 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %75 = call i8* @_Znwm(i64 80) #12, !noalias !12
  %76 = bitcast i8* %75 to %class.CFX_DIBitmap*
  call void @_ZN12CFX_DIBitmapC1Ev(%class.CFX_DIBitmap* nonnull %76) #11, !noalias !12
  %77 = ptrtoint i8* %75 to i64
  %78 = bitcast %"class.fxcrt::RetainPtr"* %13 to i64*
  store i64 %77, i64* %78, align 8, !alias.scope !12
  %79 = getelementptr inbounds i8, i8* %75, i64 8
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 8, !noalias !12
  %82 = add nsw i64 %81, 1
  store i64 %82, i64* %80, align 8, !noalias !12
  %83 = load i32, i32* %54, align 8
  %84 = load i32, i32* %51, align 8
  %85 = sub nsw i32 %83, %84
  %86 = load i32, i32* %55, align 4
  %87 = load i32, i32* %52, align 4
  %88 = sub nsw i32 %86, %87
  %89 = load i32, i32* %20, align 4
  %90 = and i32 %89, 2048
  %91 = icmp eq i32 %90, 0
  %92 = bitcast i8* %65 to %class.CFX_DIBitmap*
  br i1 %91, label %95, label %93

93:                                               ; preds = %62
  %94 = call zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap* nonnull %92, i32 %85, i32 %88, i16 zeroext 264) #11
  br i1 %94, label %100, label %240

95:                                               ; preds = %62
  %96 = and i32 %89, 64
  %97 = icmp eq i32 %96, 0
  %98 = select i1 %97, i16 24, i16 544
  %99 = call zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap* nonnull %92, i32 %85, i32 %88, i16 zeroext %98) #11
  br i1 %99, label %100, label %240

100:                                              ; preds = %93, %95
  %101 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %64, align 8
  %102 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %101, i64 0, i32 0, i32 1
  %103 = load i16, i16* %102, align 8
  %104 = and i16 %103, 512
  %105 = icmp eq i16 %104, 0
  br i1 %105, label %133, label %106

106:                                              ; preds = %100
  call void @_ZN12CFX_DIBitmap5ClearEj(%class.CFX_DIBitmap* %101, i32 0) #11
  %107 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %74, align 8
  %108 = bitcast %"class.fxcrt::RetainPtr.25"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #11
  %109 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %64, align 8
  %110 = ptrtoint %class.CFX_DIBitmap* %109 to i64
  %111 = bitcast %"class.fxcrt::RetainPtr.25"* %14 to i64*
  store i64 %110, i64* %111, align 8
  %112 = icmp eq %class.CFX_DIBitmap* %109, null
  br i1 %112, label %117, label %113

113:                                              ; preds = %106
  %114 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %109, i64 0, i32 0, i32 0, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = add nsw i64 %115, 1
  store i64 %116, i64* %114, align 8
  br label %117

117:                                              ; preds = %106, %113
  %118 = call zeroext i1 @_ZN12CFX_DIBitmap4CopyERKN5fxcrt9RetainPtrI11CFX_DIBBaseEE(%class.CFX_DIBitmap* %107, %"class.fxcrt::RetainPtr.25"* nonnull dereferenceable(8) %14) #11
  %119 = getelementptr inbounds %"class.fxcrt::RetainPtr.25", %"class.fxcrt::RetainPtr.25"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %120 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %119, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %119, align 8
  %121 = icmp eq %class.CFX_DIBBase* %120, null
  br i1 %121, label %170, label %122

122:                                              ; preds = %117
  %123 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %120, i64 0, i32 0, i32 1
  %124 = load i64, i64* %123, align 8
  %125 = add nsw i64 %124, -1
  store i64 %125, i64* %123, align 8
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %127, label %170

127:                                              ; preds = %122
  %128 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %120, i64 0, i32 0
  %129 = bitcast %class.CFX_DIBBase* %120 to void (%"class.fxcrt::Retainable"*)***
  %130 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %129, align 8
  %131 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %130, i64 1
  %132 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %131, align 8
  call void %132(%"class.fxcrt::Retainable"* nonnull %128) #11
  br label %170

133:                                              ; preds = %100
  %134 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %135 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %134, align 8
  %136 = load i32, i32* %51, align 8
  %137 = load i32, i32* %52, align 4
  %138 = bitcast %class.RenderDeviceDriverIface* %135 to i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr"*, i32, i32)***
  %139 = load i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr"*, i32, i32)**, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr"*, i32, i32)*** %138, align 8
  %140 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr"*, i32, i32)*, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr"*, i32, i32)** %139, i64 13
  %141 = load i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr"*, i32, i32)*, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr"*, i32, i32)** %140, align 8
  %142 = call zeroext i1 %141(%class.RenderDeviceDriverIface* %135, %"class.fxcrt::RetainPtr"* nonnull dereferenceable(8) %12, i32 %136, i32 %137) #11
  br i1 %142, label %143, label %240

143:                                              ; preds = %133
  %144 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %74, align 8
  %145 = bitcast %"class.fxcrt::RetainPtr.25"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %145) #11
  %146 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %64, align 8
  %147 = ptrtoint %class.CFX_DIBitmap* %146 to i64
  %148 = bitcast %"class.fxcrt::RetainPtr.25"* %15 to i64*
  store i64 %147, i64* %148, align 8
  %149 = icmp eq %class.CFX_DIBitmap* %146, null
  br i1 %149, label %154, label %150

150:                                              ; preds = %143
  %151 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %146, i64 0, i32 0, i32 0, i32 1
  %152 = load i64, i64* %151, align 8
  %153 = add nsw i64 %152, 1
  store i64 %153, i64* %151, align 8
  br label %154

154:                                              ; preds = %143, %150
  %155 = call zeroext i1 @_ZN12CFX_DIBitmap4CopyERKN5fxcrt9RetainPtrI11CFX_DIBBaseEE(%class.CFX_DIBitmap* %144, %"class.fxcrt::RetainPtr.25"* nonnull dereferenceable(8) %15) #11
  %156 = getelementptr inbounds %"class.fxcrt::RetainPtr.25", %"class.fxcrt::RetainPtr.25"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %157 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %156, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %156, align 8
  %158 = icmp eq %class.CFX_DIBBase* %157, null
  br i1 %158, label %170, label %159

159:                                              ; preds = %154
  %160 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %157, i64 0, i32 0, i32 1
  %161 = load i64, i64* %160, align 8
  %162 = add nsw i64 %161, -1
  store i64 %162, i64* %160, align 8
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %164, label %170

164:                                              ; preds = %159
  %165 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %157, i64 0, i32 0
  %166 = bitcast %class.CFX_DIBBase* %157 to void (%"class.fxcrt::Retainable"*)***
  %167 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %166, align 8
  %168 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %167, i64 1
  %169 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %168, align 8
  call void %169(%"class.fxcrt::Retainable"* nonnull %165) #11
  br label %170

170:                                              ; preds = %164, %159, %154, %127, %122, %117
  %171 = phi i8* [ %108, %117 ], [ %108, %122 ], [ %108, %127 ], [ %145, %154 ], [ %145, %159 ], [ %145, %164 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %171) #11
  %172 = bitcast %class.CFX_DefaultRenderDevice* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %172) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %172, i8 -86, i64 64, i1 false)
  call void @_ZN23CFX_DefaultRenderDeviceC1Ev(%class.CFX_DefaultRenderDevice* nonnull %16) #11
  %173 = call zeroext i1 @_ZN23CFX_DefaultRenderDevice6AttachERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEbS5_b(%class.CFX_DefaultRenderDevice* nonnull %16, %"class.fxcrt::RetainPtr"* nonnull dereferenceable(8) %12, i1 zeroext false, %"class.fxcrt::RetainPtr"* nonnull dereferenceable(8) %13, i1 zeroext true) #11
  %174 = bitcast %class.CFX_Matrix* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %174) #11
  %175 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %17, i64 0, i32 4
  %176 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %17, i64 0, i32 5
  %177 = bitcast %class.CFX_Matrix* %17 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %177, align 16
  store float 0.000000e+00, float* %175, align 16
  store float 0.000000e+00, float* %176, align 4
  br i1 %42, label %178, label %180

178:                                              ; preds = %170
  %179 = bitcast %class.CFX_Matrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %174, i8* nonnull align 4 %179, i64 24, i1 false)
  br label %180

180:                                              ; preds = %178, %170
  %181 = load i32, i32* %51, align 8
  %182 = sub nsw i32 0, %181
  %183 = load i32, i32* %52, align 4
  %184 = sub nsw i32 0, %183
  %185 = sitofp i32 %182 to float
  %186 = sitofp i32 %184 to float
  call void @_ZN10CFX_Matrix9TranslateEff(%class.CFX_Matrix* nonnull %17, float %185, float %186) #11
  %187 = getelementptr inbounds %class.CFX_DefaultRenderDevice, %class.CFX_DefaultRenderDevice* %16, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0
  %188 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %187, align 8
  %189 = bitcast %class.RenderDeviceDriverIface* %188 to i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions*, i32)***
  %190 = load i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions*, i32)**, i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions*, i32)*** %189, align 8
  %191 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions*, i32)*, i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions*, i32)** %190, i64 9
  %192 = load i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions*, i32)*, i1 (%class.RenderDeviceDriverIface*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions*, i32)** %191, align 8
  %193 = call zeroext i1 %192(%class.RenderDeviceDriverIface* %188, %class.CFX_PathData* %1, %class.CFX_Matrix* nonnull %17, %class.CFX_GraphStateData* %3, i32 %4, i32 %5, %struct.CFX_FillRenderOptions* dereferenceable(2) %6, i32 %7) #11
  br i1 %193, label %194, label %238

194:                                              ; preds = %180
  %195 = bitcast %struct.FX_RECT* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %195) #11
  %196 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %18, i64 0, i32 0
  %197 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %18, i64 0, i32 1
  %198 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %18, i64 0, i32 2
  %199 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %18, i64 0, i32 3
  %200 = load i32, i32* %54, align 8
  %201 = load i32, i32* %51, align 8
  %202 = sub nsw i32 %200, %201
  %203 = load i32, i32* %55, align 4
  %204 = load i32, i32* %52, align 4
  %205 = sub nsw i32 %203, %204
  store i32 0, i32* %196, align 4
  store i32 0, i32* %197, align 4
  store i32 %202, i32* %198, align 4
  store i32 %205, i32* %199, align 4
  %206 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %207 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %206, align 8
  %208 = bitcast %"class.fxcrt::RetainPtr.25"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %208) #11
  %209 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %64, align 8
  %210 = ptrtoint %class.CFX_DIBitmap* %209 to i64
  %211 = bitcast %"class.fxcrt::RetainPtr.25"* %19 to i64*
  store i64 %210, i64* %211, align 8
  %212 = icmp eq %class.CFX_DIBitmap* %209, null
  br i1 %212, label %217, label %213

213:                                              ; preds = %194
  %214 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %209, i64 0, i32 0, i32 0, i32 1
  %215 = load i64, i64* %214, align 8
  %216 = add nsw i64 %215, 1
  store i64 %216, i64* %214, align 8
  br label %217

217:                                              ; preds = %194, %213
  %218 = bitcast %class.RenderDeviceDriverIface* %207 to i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)***
  %219 = load i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)**, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)*** %218, align 8
  %220 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)*, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)** %219, i64 15
  %221 = load i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)*, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)** %220, align 8
  %222 = call zeroext i1 %221(%class.RenderDeviceDriverIface* %207, %"class.fxcrt::RetainPtr.25"* nonnull dereferenceable(8) %19, i32 0, %struct.FX_RECT* nonnull dereferenceable(16) %18, i32 %201, i32 %204, i32 0) #11
  %223 = getelementptr inbounds %"class.fxcrt::RetainPtr.25", %"class.fxcrt::RetainPtr.25"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %224 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %223, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %223, align 8
  %225 = icmp eq %class.CFX_DIBBase* %224, null
  br i1 %225, label %237, label %226

226:                                              ; preds = %217
  %227 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %224, i64 0, i32 0, i32 1
  %228 = load i64, i64* %227, align 8
  %229 = add nsw i64 %228, -1
  store i64 %229, i64* %227, align 8
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %231, label %237

231:                                              ; preds = %226
  %232 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %224, i64 0, i32 0
  %233 = bitcast %class.CFX_DIBBase* %224 to void (%"class.fxcrt::Retainable"*)***
  %234 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %233, align 8
  %235 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %234, i64 1
  %236 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %235, align 8
  call void %236(%"class.fxcrt::Retainable"* nonnull %232) #11
  br label %237

237:                                              ; preds = %217, %226, %231
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %208) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %195) #11
  br label %238

238:                                              ; preds = %180, %237
  %239 = phi i1 [ %222, %237 ], [ false, %180 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %174) #11
  call void @_ZN23CFX_DefaultRenderDeviceD1Ev(%class.CFX_DefaultRenderDevice* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %172) #11
  br label %240

240:                                              ; preds = %93, %133, %95, %238
  %241 = phi i1 [ %239, %238 ], [ false, %95 ], [ false, %133 ], [ false, %93 ]
  %242 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %74, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %74, align 8
  %243 = icmp eq %class.CFX_DIBitmap* %242, null
  br i1 %243, label %255, label %244

244:                                              ; preds = %240
  %245 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %242, i64 0, i32 0, i32 0, i32 1
  %246 = load i64, i64* %245, align 8
  %247 = add nsw i64 %246, -1
  store i64 %247, i64* %245, align 8
  %248 = icmp eq i64 %247, 0
  br i1 %248, label %249, label %255

249:                                              ; preds = %244
  %250 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %242, i64 0, i32 0, i32 0
  %251 = bitcast %class.CFX_DIBitmap* %242 to void (%"class.fxcrt::Retainable"*)***
  %252 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %251, align 8
  %253 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %252, i64 1
  %254 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %253, align 8
  call void %254(%"class.fxcrt::Retainable"* nonnull %250) #11
  br label %255

255:                                              ; preds = %240, %244, %249
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #11
  %256 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %64, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %64, align 8
  %257 = icmp eq %class.CFX_DIBitmap* %256, null
  br i1 %257, label %269, label %258

258:                                              ; preds = %255
  %259 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %256, i64 0, i32 0, i32 0, i32 1
  %260 = load i64, i64* %259, align 8
  %261 = add nsw i64 %260, -1
  store i64 %261, i64* %259, align 8
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %263, label %269

263:                                              ; preds = %258
  %264 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %256, i64 0, i32 0, i32 0
  %265 = bitcast %class.CFX_DIBitmap* %256 to void (%"class.fxcrt::Retainable"*)***
  %266 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %265, align 8
  %267 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %266, i64 1
  %268 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %267, align 8
  call void %268(%"class.fxcrt::Retainable"* nonnull %264) #11
  br label %269

269:                                              ; preds = %255, %258, %263
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #11
  br label %270

270:                                              ; preds = %49, %269
  %271 = phi i1 [ %241, %269 ], [ false, %49 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #11
  br label %272

272:                                              ; preds = %8, %270
  %273 = phi i1 [ %271, %270 ], [ false, %8 ]
  ret i1 %273
}

declare { <2 x float>, <2 x float> } @_ZNK12CFX_PathData27GetBoundingBoxForStrokePathEff(%class.CFX_PathData*, float, float) local_unnamed_addr #4

declare { <2 x float>, <2 x float> } @_ZNK12CFX_PathData14GetBoundingBoxEv(%class.CFX_PathData*) local_unnamed_addr #4

declare { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix*, %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZN12CFX_DIBitmap5ClearEj(%class.CFX_DIBitmap*, i32) local_unnamed_addr #4

declare zeroext i1 @_ZN12CFX_DIBitmap4CopyERKN5fxcrt9RetainPtrI11CFX_DIBBaseEE(%class.CFX_DIBitmap*, %"class.fxcrt::RetainPtr.25"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare void @_ZN23CFX_DefaultRenderDeviceC1Ev(%class.CFX_DefaultRenderDevice*) unnamed_addr #4

declare zeroext i1 @_ZN23CFX_DefaultRenderDevice6AttachERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEbS5_b(%class.CFX_DefaultRenderDevice*, %"class.fxcrt::RetainPtr"* dereferenceable(8), i1 zeroext, %"class.fxcrt::RetainPtr"* dereferenceable(8), i1 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN23CFX_DefaultRenderDeviceD1Ev(%class.CFX_DefaultRenderDevice*) unnamed_addr #6

declare zeroext i1 @_ZN12CFX_DIBitmap13CompositeRectEiiiij(%class.CFX_DIBitmap*, i32, i32, i32, i32, i32) local_unnamed_addr #4

declare void @_ZN18CFX_GraphStateDataC1Ev(%class.CFX_GraphStateData*) unnamed_addr #4

declare void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData*, %class.CFX_PTemplate* dereferenceable(8), i8 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN18CFX_GraphStateDataD1Ev(%class.CFX_GraphStateData*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16CFX_RenderDevice9GetDIBitsERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEii(%class.CFX_RenderDevice* nocapture readonly, %"class.fxcrt::RetainPtr"* dereferenceable(8), i32, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 5
  %6 = load i32, i32* %5, align 4
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %17, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %11 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %10, align 8
  %12 = bitcast %class.RenderDeviceDriverIface* %11 to i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr"*, i32, i32)***
  %13 = load i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr"*, i32, i32)**, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr"*, i32, i32)*** %12, align 8
  %14 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr"*, i32, i32)*, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr"*, i32, i32)** %13, i64 13
  %15 = load i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr"*, i32, i32)*, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr"*, i32, i32)** %14, align 8
  %16 = tail call zeroext i1 %15(%class.RenderDeviceDriverIface* %11, %"class.fxcrt::RetainPtr"* dereferenceable(8) %1, i32 %2, i32 %3) #11
  br label %17

17:                                               ; preds = %4, %9
  %18 = phi i1 [ false, %4 ], [ %16, %9 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_RenderDevice11GetBackDropEv(%"class.fxcrt::RetainPtr"* noalias sret, %class.CFX_RenderDevice* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %1, i64 0, i32 8, i32 0, i32 0, i32 0
  %4 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %3, align 8
  %5 = bitcast %class.RenderDeviceDriverIface* %4 to void (%"class.fxcrt::RetainPtr"*, %class.RenderDeviceDriverIface*)***
  %6 = load void (%"class.fxcrt::RetainPtr"*, %class.RenderDeviceDriverIface*)**, void (%"class.fxcrt::RetainPtr"*, %class.RenderDeviceDriverIface*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.fxcrt::RetainPtr"*, %class.RenderDeviceDriverIface*)*, void (%"class.fxcrt::RetainPtr"*, %class.RenderDeviceDriverIface*)** %6, i64 14
  %8 = load void (%"class.fxcrt::RetainPtr"*, %class.RenderDeviceDriverIface*)*, void (%"class.fxcrt::RetainPtr"*, %class.RenderDeviceDriverIface*)** %7, align 8
  tail call void %8(%"class.fxcrt::RetainPtr"* sret %0, %class.RenderDeviceDriverIface* %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16CFX_RenderDevice18SetDIBitsWithBlendERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEii9BlendMode(%class.CFX_RenderDevice*, %"class.fxcrt::RetainPtr.25"* dereferenceable(8), i32, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %struct.FX_RECT, align 4
  %7 = alloca %struct.FX_RECT, align 4
  %8 = alloca %"class.fxcrt::RetainPtr", align 8
  %9 = alloca %struct.FX_RECT, align 4
  %10 = alloca %"class.fxcrt::RetainPtr.25", align 8
  %11 = bitcast %struct.FX_RECT* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #11
  %12 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %6, i64 0, i32 0
  %13 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %6, i64 0, i32 1
  %14 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %6, i64 0, i32 2
  %15 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %6, i64 0, i32 3
  %16 = getelementptr inbounds %"class.fxcrt::RetainPtr.25", %"class.fxcrt::RetainPtr.25"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %16, align 8
  %18 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %17, i64 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = add nsw i32 %19, %2
  %21 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %17, i64 0, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = add nsw i32 %22, %3
  store i32 %2, i32* %12, align 4
  store i32 %3, i32* %13, align 4
  store i32 %20, i32* %14, align 4
  store i32 %23, i32* %15, align 4
  %24 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7
  call void @_ZN7FX_RECT9IntersectERKS_(%struct.FX_RECT* nonnull %6, %struct.FX_RECT* dereferenceable(16) %24) #11
  %25 = load i32, i32* %14, align 4
  %26 = load i32, i32* %12, align 4
  %27 = icmp sgt i32 %25, %26
  br i1 %27, label %28, label %157

28:                                               ; preds = %5
  %29 = load i32, i32* %15, align 4
  %30 = load i32, i32* %13, align 4
  %31 = icmp sgt i32 %29, %30
  br i1 %31, label %32, label %157

32:                                               ; preds = %28
  %33 = bitcast %struct.FX_RECT* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #11
  %34 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %7, i64 0, i32 0
  %35 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %7, i64 0, i32 1
  %36 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %7, i64 0, i32 2
  %37 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %7, i64 0, i32 3
  %38 = sub nsw i32 %26, %2
  %39 = sub nsw i32 %30, %3
  %40 = sub nsw i32 %25, %26
  %41 = add nsw i32 %38, %40
  %42 = sub nsw i32 %29, %30
  %43 = add nsw i32 %42, %39
  store i32 %38, i32* %34, align 4
  store i32 %39, i32* %35, align 4
  store i32 %41, i32* %36, align 4
  store i32 %43, i32* %37, align 4
  %44 = icmp eq i32 %4, 0
  br i1 %44, label %50, label %45

45:                                               ; preds = %32
  %46 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 5
  %47 = load i32, i32* %46, align 4
  %48 = trunc i32 %47 to i8
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %69

50:                                               ; preds = %45, %32
  %51 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %16, align 8
  %52 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %51, i64 0, i32 1
  %53 = load i16, i16* %52, align 8
  %54 = and i16 %53, 512
  %55 = icmp eq i16 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 5
  %58 = load i32, i32* %57, align 4
  %59 = and i32 %58, 32
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %69, label %61

61:                                               ; preds = %50, %56
  %62 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %63 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %62, align 8
  %64 = bitcast %class.RenderDeviceDriverIface* %63 to i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)***
  %65 = load i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)**, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)*** %64, align 8
  %66 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)*, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)** %65, i64 15
  %67 = load i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)*, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)** %66, align 8
  %68 = call zeroext i1 %67(%class.RenderDeviceDriverIface* %63, %"class.fxcrt::RetainPtr.25"* dereferenceable(8) %1, i32 0, %struct.FX_RECT* nonnull dereferenceable(16) %7, i32 %26, i32 %30, i32 %4) #11
  br label %155

69:                                               ; preds = %56, %45
  %70 = phi i32 [ %58, %56 ], [ %47, %45 ]
  %71 = and i32 %70, 1
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %155, label %73

73:                                               ; preds = %69
  %74 = bitcast %"class.fxcrt::RetainPtr"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #11
  %75 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %76 = call i8* @_Znwm(i64 80) #12, !noalias !15
  %77 = bitcast i8* %76 to %class.CFX_DIBitmap*
  call void @_ZN12CFX_DIBitmapC1Ev(%class.CFX_DIBitmap* nonnull %77) #11, !noalias !15
  %78 = ptrtoint i8* %76 to i64
  %79 = bitcast %"class.fxcrt::RetainPtr"* %8 to i64*
  store i64 %78, i64* %79, align 8, !alias.scope !15
  %80 = getelementptr inbounds i8, i8* %76, i64 8
  %81 = bitcast i8* %80 to i64*
  %82 = load i64, i64* %81, align 8, !noalias !15
  %83 = add nsw i64 %82, 1
  store i64 %83, i64* %81, align 8, !noalias !15
  %84 = call zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap* nonnull %77, i32 %40, i32 %42, i16 zeroext 32) #11
  br i1 %84, label %85, label %139

85:                                               ; preds = %73
  %86 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %87 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %86, align 8
  %88 = load i32, i32* %12, align 4
  %89 = load i32, i32* %13, align 4
  %90 = bitcast %class.RenderDeviceDriverIface* %87 to i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr"*, i32, i32)***
  %91 = load i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr"*, i32, i32)**, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr"*, i32, i32)*** %90, align 8
  %92 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr"*, i32, i32)*, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr"*, i32, i32)** %91, i64 13
  %93 = load i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr"*, i32, i32)*, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr"*, i32, i32)** %92, align 8
  %94 = call zeroext i1 %93(%class.RenderDeviceDriverIface* %87, %"class.fxcrt::RetainPtr"* nonnull dereferenceable(8) %8, i32 %88, i32 %89) #11
  br i1 %94, label %95, label %139

95:                                               ; preds = %85
  %96 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %75, align 8
  %97 = load i32, i32* %34, align 4
  %98 = load i32, i32* %35, align 4
  %99 = call zeroext i1 @_ZN12CFX_DIBitmap15CompositeBitmapEiiiiRKN5fxcrt9RetainPtrI11CFX_DIBBaseEEii9BlendModePK11CFX_ClipRgnb(%class.CFX_DIBitmap* %96, i32 0, i32 0, i32 %40, i32 %42, %"class.fxcrt::RetainPtr.25"* dereferenceable(8) %1, i32 %97, i32 %98, i32 %4, %class.CFX_ClipRgn* null, i1 zeroext false) #11
  br i1 %99, label %100, label %139

100:                                              ; preds = %95
  %101 = bitcast %struct.FX_RECT* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %101) #11
  %102 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %9, i64 0, i32 0
  %103 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %9, i64 0, i32 1
  %104 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %9, i64 0, i32 2
  %105 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %9, i64 0, i32 3
  store i32 0, i32* %102, align 4
  store i32 0, i32* %103, align 4
  store i32 %40, i32* %104, align 4
  store i32 %42, i32* %105, align 4
  %106 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %86, align 8
  %107 = bitcast %"class.fxcrt::RetainPtr.25"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #11
  %108 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %75, align 8
  %109 = ptrtoint %class.CFX_DIBitmap* %108 to i64
  %110 = bitcast %"class.fxcrt::RetainPtr.25"* %10 to i64*
  store i64 %109, i64* %110, align 8
  %111 = icmp eq %class.CFX_DIBitmap* %108, null
  br i1 %111, label %116, label %112

112:                                              ; preds = %100
  %113 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %108, i64 0, i32 0, i32 0, i32 1
  %114 = load i64, i64* %113, align 8
  %115 = add nsw i64 %114, 1
  store i64 %115, i64* %113, align 8
  br label %116

116:                                              ; preds = %100, %112
  %117 = load i32, i32* %12, align 4
  %118 = load i32, i32* %13, align 4
  %119 = bitcast %class.RenderDeviceDriverIface* %106 to i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)***
  %120 = load i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)**, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)*** %119, align 8
  %121 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)*, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)** %120, i64 15
  %122 = load i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)*, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)** %121, align 8
  %123 = call zeroext i1 %122(%class.RenderDeviceDriverIface* %106, %"class.fxcrt::RetainPtr.25"* nonnull dereferenceable(8) %10, i32 0, %struct.FX_RECT* nonnull dereferenceable(16) %9, i32 %117, i32 %118, i32 0) #11
  %124 = getelementptr inbounds %"class.fxcrt::RetainPtr.25", %"class.fxcrt::RetainPtr.25"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %125 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %124, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %124, align 8
  %126 = icmp eq %class.CFX_DIBBase* %125, null
  br i1 %126, label %138, label %127

127:                                              ; preds = %116
  %128 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %125, i64 0, i32 0, i32 1
  %129 = load i64, i64* %128, align 8
  %130 = add nsw i64 %129, -1
  store i64 %130, i64* %128, align 8
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %138

132:                                              ; preds = %127
  %133 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %125, i64 0, i32 0
  %134 = bitcast %class.CFX_DIBBase* %125 to void (%"class.fxcrt::Retainable"*)***
  %135 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %134, align 8
  %136 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %135, i64 1
  %137 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %136, align 8
  call void %137(%"class.fxcrt::Retainable"* nonnull %133) #11
  br label %138

138:                                              ; preds = %116, %127, %132
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %101) #11
  br label %139

139:                                              ; preds = %95, %85, %73, %138
  %140 = phi i1 [ %123, %138 ], [ false, %73 ], [ false, %85 ], [ false, %95 ]
  %141 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %75, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %75, align 8
  %142 = icmp eq %class.CFX_DIBitmap* %141, null
  br i1 %142, label %154, label %143

143:                                              ; preds = %139
  %144 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %141, i64 0, i32 0, i32 0, i32 1
  %145 = load i64, i64* %144, align 8
  %146 = add nsw i64 %145, -1
  store i64 %146, i64* %144, align 8
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %154

148:                                              ; preds = %143
  %149 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %141, i64 0, i32 0, i32 0
  %150 = bitcast %class.CFX_DIBitmap* %141 to void (%"class.fxcrt::Retainable"*)***
  %151 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %150, align 8
  %152 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %151, i64 1
  %153 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %152, align 8
  call void %153(%"class.fxcrt::Retainable"* nonnull %149) #11
  br label %154

154:                                              ; preds = %139, %143, %148
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #11
  br label %155

155:                                              ; preds = %69, %154, %61
  %156 = phi i1 [ %68, %61 ], [ %140, %154 ], [ false, %69 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #11
  br label %157

157:                                              ; preds = %28, %5, %155
  %158 = phi i1 [ %156, %155 ], [ true, %28 ], [ true, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #11
  ret i1 %158
}

declare void @_ZN7FX_RECT9IntersectERKS_(%struct.FX_RECT*, %struct.FX_RECT* dereferenceable(16)) local_unnamed_addr #4

declare zeroext i1 @_ZN12CFX_DIBitmap15CompositeBitmapEiiiiRKN5fxcrt9RetainPtrI11CFX_DIBBaseEEii9BlendModePK11CFX_ClipRgnb(%class.CFX_DIBitmap*, i32, i32, i32, i32, %"class.fxcrt::RetainPtr.25"* dereferenceable(8), i32, i32, i32, %class.CFX_ClipRgn*, i1 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16CFX_RenderDevice30StretchDIBitsWithFlagsAndBlendERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEiiiiRK21FXDIB_ResampleOptions9BlendMode(%class.CFX_RenderDevice* nocapture readonly, %"class.fxcrt::RetainPtr.25"* dereferenceable(8), i32, i32, i32, i32, %struct.FXDIB_ResampleOptions* dereferenceable(4), i32) local_unnamed_addr #0 align 2 {
  %9 = alloca %struct.FX_RECT, align 4
  %10 = alloca %struct.FX_RECT, align 4
  %11 = bitcast %struct.FX_RECT* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #11
  %12 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %9, i64 0, i32 0
  %13 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %9, i64 0, i32 1
  %14 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %9, i64 0, i32 2
  %15 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %9, i64 0, i32 3
  %16 = add nsw i32 %4, %2
  %17 = add nsw i32 %5, %3
  store i32 %2, i32* %12, align 4
  store i32 %3, i32* %13, align 4
  store i32 %16, i32* %14, align 4
  store i32 %17, i32* %15, align 4
  %18 = bitcast %struct.FX_RECT* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #11
  %19 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %10, i64 0, i32 0
  %20 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %10, i64 0, i32 2
  %21 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7
  %22 = bitcast %struct.FX_RECT* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %18, i8* align 4 %22, i64 16, i1 false)
  call void @_ZN7FX_RECT9IntersectERKS_(%struct.FX_RECT* nonnull %10, %struct.FX_RECT* nonnull dereferenceable(16) %9) #11
  %23 = load i32, i32* %20, align 4
  %24 = load i32, i32* %19, align 4
  %25 = icmp sgt i32 %23, %24
  br i1 %25, label %26, label %40

26:                                               ; preds = %8
  %27 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %10, i64 0, i32 3
  %28 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %10, i64 0, i32 1
  %29 = load i32, i32* %27, align 4
  %30 = load i32, i32* %28, align 4
  %31 = icmp sgt i32 %29, %30
  br i1 %31, label %32, label %40

32:                                               ; preds = %26
  %33 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %34 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %33, align 8
  %35 = bitcast %class.RenderDeviceDriverIface* %34 to i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, i32, i32, i32, i32, %struct.FX_RECT*, %struct.FXDIB_ResampleOptions*, i32)***
  %36 = load i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, i32, i32, i32, i32, %struct.FX_RECT*, %struct.FXDIB_ResampleOptions*, i32)**, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, i32, i32, i32, i32, %struct.FX_RECT*, %struct.FXDIB_ResampleOptions*, i32)*** %35, align 8
  %37 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, i32, i32, i32, i32, %struct.FX_RECT*, %struct.FXDIB_ResampleOptions*, i32)*, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, i32, i32, i32, i32, %struct.FX_RECT*, %struct.FXDIB_ResampleOptions*, i32)** %36, i64 16
  %38 = load i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, i32, i32, i32, i32, %struct.FX_RECT*, %struct.FXDIB_ResampleOptions*, i32)*, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, i32, i32, i32, i32, %struct.FX_RECT*, %struct.FXDIB_ResampleOptions*, i32)** %37, align 8
  %39 = call zeroext i1 %38(%class.RenderDeviceDriverIface* %34, %"class.fxcrt::RetainPtr.25"* dereferenceable(8) %1, i32 0, i32 %2, i32 %3, i32 %4, i32 %5, %struct.FX_RECT* nonnull %10, %struct.FXDIB_ResampleOptions* dereferenceable(4) %6, i32 %7) #11
  br label %40

40:                                               ; preds = %26, %8, %32
  %41 = phi i1 [ true, %26 ], [ %39, %32 ], [ true, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #11
  ret i1 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16CFX_RenderDevice10SetBitMaskERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEiij(%class.CFX_RenderDevice* nocapture readonly, %"class.fxcrt::RetainPtr.25"* dereferenceable(8), i32, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %struct.FX_RECT, align 4
  %7 = bitcast %struct.FX_RECT* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %6, i64 0, i32 0
  %9 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %6, i64 0, i32 1
  %10 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %6, i64 0, i32 2
  %11 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %6, i64 0, i32 3
  %12 = getelementptr inbounds %"class.fxcrt::RetainPtr.25", %"class.fxcrt::RetainPtr.25"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %12, align 8
  %14 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %13, i64 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %13, i64 0, i32 3
  %17 = load i32, i32* %16, align 8
  store i32 0, i32* %8, align 4
  store i32 0, i32* %9, align 4
  store i32 %15, i32* %10, align 4
  store i32 %17, i32* %11, align 4
  %18 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %19 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %18, align 8
  %20 = bitcast %class.RenderDeviceDriverIface* %19 to i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)***
  %21 = load i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)**, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)*** %20, align 8
  %22 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)*, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)** %21, i64 15
  %23 = load i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)*, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)** %22, align 8
  %24 = call zeroext i1 %23(%class.RenderDeviceDriverIface* %19, %"class.fxcrt::RetainPtr.25"* dereferenceable(8) %1, i32 %4, %struct.FX_RECT* nonnull dereferenceable(16) %6, i32 %2, i32 %3, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  ret i1 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16CFX_RenderDevice14StretchBitMaskERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEiiiij(%class.CFX_RenderDevice* nocapture readonly, %"class.fxcrt::RetainPtr.25"* dereferenceable(8), i32, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %8 = alloca %struct.FX_RECT, align 4
  %9 = alloca %struct.FX_RECT, align 4
  %10 = alloca %struct.FXDIB_ResampleOptions, align 1
  %11 = getelementptr inbounds %struct.FXDIB_ResampleOptions, %struct.FXDIB_ResampleOptions* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #11
  call void @_ZN21FXDIB_ResampleOptionsC1Ev(%struct.FXDIB_ResampleOptions* nonnull %10) #11
  %12 = bitcast %struct.FX_RECT* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #11
  %13 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %8, i64 0, i32 0
  %14 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %8, i64 0, i32 1
  %15 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %8, i64 0, i32 2
  %16 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %8, i64 0, i32 3
  %17 = add nsw i32 %4, %2
  %18 = add nsw i32 %5, %3
  store i32 %2, i32* %13, align 4
  store i32 %3, i32* %14, align 4
  store i32 %17, i32* %15, align 4
  store i32 %18, i32* %16, align 4
  %19 = bitcast %struct.FX_RECT* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #11
  %20 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7
  %21 = bitcast %struct.FX_RECT* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %19, i8* align 4 %21, i64 16, i1 false) #11
  call void @_ZN7FX_RECT9IntersectERKS_(%struct.FX_RECT* nonnull %9, %struct.FX_RECT* nonnull dereferenceable(16) %8) #11
  %22 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %23 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %22, align 8
  %24 = bitcast %class.RenderDeviceDriverIface* %23 to i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, i32, i32, i32, i32, %struct.FX_RECT*, %struct.FXDIB_ResampleOptions*, i32)***
  %25 = load i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, i32, i32, i32, i32, %struct.FX_RECT*, %struct.FXDIB_ResampleOptions*, i32)**, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, i32, i32, i32, i32, %struct.FX_RECT*, %struct.FXDIB_ResampleOptions*, i32)*** %24, align 8
  %26 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, i32, i32, i32, i32, %struct.FX_RECT*, %struct.FXDIB_ResampleOptions*, i32)*, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, i32, i32, i32, i32, %struct.FX_RECT*, %struct.FXDIB_ResampleOptions*, i32)** %25, i64 16
  %27 = load i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, i32, i32, i32, i32, %struct.FX_RECT*, %struct.FXDIB_ResampleOptions*, i32)*, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, i32, i32, i32, i32, %struct.FX_RECT*, %struct.FXDIB_ResampleOptions*, i32)** %26, align 8
  %28 = call zeroext i1 %27(%class.RenderDeviceDriverIface* %23, %"class.fxcrt::RetainPtr.25"* dereferenceable(8) %1, i32 %6, i32 %2, i32 %3, i32 %4, i32 %5, %struct.FX_RECT* nonnull %9, %struct.FXDIB_ResampleOptions* nonnull dereferenceable(4) %10, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #11
  ret i1 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16CFX_RenderDevice23StretchBitMaskWithFlagsERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEiiiijRK21FXDIB_ResampleOptions(%class.CFX_RenderDevice* nocapture readonly, %"class.fxcrt::RetainPtr.25"* dereferenceable(8), i32, i32, i32, i32, i32, %struct.FXDIB_ResampleOptions* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %9 = alloca %struct.FX_RECT, align 4
  %10 = alloca %struct.FX_RECT, align 4
  %11 = bitcast %struct.FX_RECT* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #11
  %12 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %9, i64 0, i32 0
  %13 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %9, i64 0, i32 1
  %14 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %9, i64 0, i32 2
  %15 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %9, i64 0, i32 3
  %16 = add nsw i32 %4, %2
  %17 = add nsw i32 %5, %3
  store i32 %2, i32* %12, align 4
  store i32 %3, i32* %13, align 4
  store i32 %16, i32* %14, align 4
  store i32 %17, i32* %15, align 4
  %18 = bitcast %struct.FX_RECT* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #11
  %19 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7
  %20 = bitcast %struct.FX_RECT* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %18, i8* align 4 %20, i64 16, i1 false)
  call void @_ZN7FX_RECT9IntersectERKS_(%struct.FX_RECT* nonnull %10, %struct.FX_RECT* nonnull dereferenceable(16) %9) #11
  %21 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %22 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %21, align 8
  %23 = bitcast %class.RenderDeviceDriverIface* %22 to i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, i32, i32, i32, i32, %struct.FX_RECT*, %struct.FXDIB_ResampleOptions*, i32)***
  %24 = load i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, i32, i32, i32, i32, %struct.FX_RECT*, %struct.FXDIB_ResampleOptions*, i32)**, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, i32, i32, i32, i32, %struct.FX_RECT*, %struct.FXDIB_ResampleOptions*, i32)*** %23, align 8
  %25 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, i32, i32, i32, i32, %struct.FX_RECT*, %struct.FXDIB_ResampleOptions*, i32)*, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, i32, i32, i32, i32, %struct.FX_RECT*, %struct.FXDIB_ResampleOptions*, i32)** %24, i64 16
  %26 = load i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, i32, i32, i32, i32, %struct.FX_RECT*, %struct.FXDIB_ResampleOptions*, i32)*, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, i32, i32, i32, i32, %struct.FX_RECT*, %struct.FXDIB_ResampleOptions*, i32)** %25, align 8
  %27 = call zeroext i1 %26(%class.RenderDeviceDriverIface* %22, %"class.fxcrt::RetainPtr.25"* dereferenceable(8) %1, i32 %6, i32 %2, i32 %3, i32 %4, i32 %5, %struct.FX_RECT* nonnull %10, %struct.FXDIB_ResampleOptions* dereferenceable(4) %7, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #11
  ret i1 %27
}

declare void @_ZN21FXDIB_ResampleOptionsC1Ev(%struct.FXDIB_ResampleOptions*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16CFX_RenderDevice20StartDIBitsWithBlendERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEijRK10CFX_MatrixRK21FXDIB_ResampleOptionsPNSt3__110unique_ptrI17CFX_ImageRendererNSC_14default_deleteISE_EEEE9BlendMode(%class.CFX_RenderDevice* nocapture readonly, %"class.fxcrt::RetainPtr.25"* dereferenceable(8), i32, i32, %class.CFX_Matrix* dereferenceable(24), %struct.FXDIB_ResampleOptions* dereferenceable(4), %"class.std::__1::unique_ptr.31"*, i32) local_unnamed_addr #0 align 2 {
  %9 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %10 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %9, align 8
  %11 = bitcast %class.RenderDeviceDriverIface* %10 to i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, i32, %class.CFX_Matrix*, %struct.FXDIB_ResampleOptions*, %"class.std::__1::unique_ptr.31"*, i32)***
  %12 = load i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, i32, %class.CFX_Matrix*, %struct.FXDIB_ResampleOptions*, %"class.std::__1::unique_ptr.31"*, i32)**, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, i32, %class.CFX_Matrix*, %struct.FXDIB_ResampleOptions*, %"class.std::__1::unique_ptr.31"*, i32)*** %11, align 8
  %13 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, i32, %class.CFX_Matrix*, %struct.FXDIB_ResampleOptions*, %"class.std::__1::unique_ptr.31"*, i32)*, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, i32, %class.CFX_Matrix*, %struct.FXDIB_ResampleOptions*, %"class.std::__1::unique_ptr.31"*, i32)** %12, i64 17
  %14 = load i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, i32, %class.CFX_Matrix*, %struct.FXDIB_ResampleOptions*, %"class.std::__1::unique_ptr.31"*, i32)*, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, i32, %class.CFX_Matrix*, %struct.FXDIB_ResampleOptions*, %"class.std::__1::unique_ptr.31"*, i32)** %13, align 8
  %15 = tail call zeroext i1 %14(%class.RenderDeviceDriverIface* %10, %"class.fxcrt::RetainPtr.25"* dereferenceable(8) %1, i32 %2, i32 %3, %class.CFX_Matrix* dereferenceable(24) %4, %struct.FXDIB_ResampleOptions* dereferenceable(4) %5, %"class.std::__1::unique_ptr.31"* %6, i32 %7) #11
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16CFX_RenderDevice14ContinueDIBitsEP17CFX_ImageRendererP19PauseIndicatorIface(%class.CFX_RenderDevice* nocapture readonly, %class.CFX_ImageRenderer*, %class.PauseIndicatorIface*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %5 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %4, align 8
  %6 = bitcast %class.RenderDeviceDriverIface* %5 to i1 (%class.RenderDeviceDriverIface*, %class.CFX_ImageRenderer*, %class.PauseIndicatorIface*)***
  %7 = load i1 (%class.RenderDeviceDriverIface*, %class.CFX_ImageRenderer*, %class.PauseIndicatorIface*)**, i1 (%class.RenderDeviceDriverIface*, %class.CFX_ImageRenderer*, %class.PauseIndicatorIface*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, %class.CFX_ImageRenderer*, %class.PauseIndicatorIface*)*, i1 (%class.RenderDeviceDriverIface*, %class.CFX_ImageRenderer*, %class.PauseIndicatorIface*)** %7, i64 18
  %9 = load i1 (%class.RenderDeviceDriverIface*, %class.CFX_ImageRenderer*, %class.PauseIndicatorIface*)*, i1 (%class.RenderDeviceDriverIface*, %class.CFX_ImageRenderer*, %class.PauseIndicatorIface*)** %8, align 8
  %10 = tail call zeroext i1 %9(%class.RenderDeviceDriverIface* %5, %class.CFX_ImageRenderer* %1, %class.PauseIndicatorIface* %2) #11
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16CFX_RenderDevice14DrawNormalTextEiPK11TextCharPosP8CFX_FontfRK10CFX_MatrixjRK21CFX_TextRenderOptions(%class.CFX_RenderDevice*, i32, %class.TextCharPos*, %class.CFX_Font*, float, %class.CFX_Matrix* dereferenceable(24), i32, %struct.CFX_TextRenderOptions* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %9 = alloca %struct.FX_RECT, align 4
  %10 = alloca %struct.FX_RECT, align 4
  %11 = alloca i64, align 8
  %12 = bitcast i64* %11 to %struct.CFX_TextRenderOptions*
  %13 = alloca %class.CFX_Matrix, align 8
  %14 = alloca %class.CFX_Matrix, align 4
  %15 = alloca %struct.CFX_FillRenderOptions, align 1
  %16 = alloca %"class.std::__1::vector.159", align 8
  %17 = alloca %class.CFX_Matrix, align 8
  %18 = alloca %class.CFX_PTemplate, align 4
  %19 = alloca %class.CFX_Matrix, align 16
  %20 = alloca { i64, i64 }, align 8
  %21 = bitcast { i64, i64 }* %20 to %struct.FX_RECT*
  %22 = alloca %"class.pdfium::Optional.168", align 4
  %23 = alloca %class.CFX_PTemplate.162, align 4
  %24 = alloca %"class.fxcrt::RetainPtr.25", align 8
  %25 = alloca %"class.fxcrt::RetainPtr.25", align 8
  %26 = alloca %"class.fxcrt::RetainPtr", align 8
  %27 = alloca %"class.fxcrt::RetainPtr", align 8
  %28 = alloca %"class.pdfium::Optional.168", align 4
  %29 = alloca %class.CFX_PTemplate.162, align 4
  %30 = alloca %"class.fxcrt::RetainPtr.25", align 8
  %31 = alloca %"class.fxcrt::RetainPtr.25", align 8
  %32 = alloca %"class.fxcrt::RetainPtr.25", align 8
  %33 = getelementptr inbounds %struct.CFX_TextRenderOptions, %struct.CFX_TextRenderOptions* %7, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = add i32 %34, -1
  %36 = icmp ult i32 %35, 2
  %37 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #11
  %38 = bitcast %struct.CFX_TextRenderOptions* %7 to i64*
  %39 = load i64, i64* %38, align 4
  store i64 %39, i64* %11, align 8
  br i1 %36, label %40, label %74

40:                                               ; preds = %8
  %41 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 6
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %74

44:                                               ; preds = %40
  %45 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 4
  %46 = load i32, i32* %45, align 8
  %47 = icmp sgt i32 %46, 1
  br i1 %47, label %48, label %74

48:                                               ; preds = %44
  %49 = tail call %class.CFX_GEModule* @_ZN12CFX_GEModule3GetEv() #11
  %50 = getelementptr inbounds %class.CFX_GEModule, %class.CFX_GEModule* %49, i64 0, i32 1, i32 0, i32 0, i32 0
  %51 = load %class.CFX_FontMgr*, %class.CFX_FontMgr** %50, align 8
  %52 = getelementptr inbounds %class.CFX_FontMgr, %class.CFX_FontMgr* %51, i64 0, i32 3
  %53 = load i8, i8* %52, align 8, !range !2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %74, label %55

55:                                               ; preds = %48
  %56 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 5
  %57 = load i32, i32* %56, align 4
  %58 = and i32 %57, 64
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %74

60:                                               ; preds = %55
  %61 = load i32, i32* %45, align 8
  %62 = icmp slt i32 %61, 16
  br i1 %62, label %74, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %65 = load %class.CFX_Face*, %class.CFX_Face** %64, align 8
  %66 = icmp eq %class.CFX_Face* %65, null
  br i1 %66, label %74, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %65, i64 0, i32 2, i32 0, i32 0, i32 0
  %69 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %68, align 8
  %70 = icmp eq %struct.FT_FaceRec_* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %67
  %72 = load i32, i32* %33, align 4
  %73 = icmp ne i32 %72, 2
  br label %74

74:                                               ; preds = %48, %40, %63, %71, %67, %60, %55, %44, %8
  %75 = phi i1 [ false, %44 ], [ false, %40 ], [ false, %8 ], [ false, %48 ], [ true, %55 ], [ false, %60 ], [ true, %67 ], [ %73, %71 ], [ true, %63 ]
  %76 = phi i32 [ 2, %44 ], [ 2, %40 ], [ 2, %8 ], [ 0, %48 ], [ 3, %55 ], [ 0, %60 ], [ 3, %67 ], [ 3, %71 ], [ 3, %63 ]
  %77 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 6
  %78 = load i8, i8* %77, align 8, !range !2
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %90, label %80

80:                                               ; preds = %74
  %81 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %82 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %81, align 8
  %83 = bitcast %class.RenderDeviceDriverIface* %82 to i1 (%class.RenderDeviceDriverIface*, i32, %class.TextCharPos*, %class.CFX_Font*, %class.CFX_Matrix*, float, i32, %struct.CFX_TextRenderOptions*)***
  %84 = load i1 (%class.RenderDeviceDriverIface*, i32, %class.TextCharPos*, %class.CFX_Font*, %class.CFX_Matrix*, float, i32, %struct.CFX_TextRenderOptions*)**, i1 (%class.RenderDeviceDriverIface*, i32, %class.TextCharPos*, %class.CFX_Font*, %class.CFX_Matrix*, float, i32, %struct.CFX_TextRenderOptions*)*** %83, align 8
  %85 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, i32, %class.TextCharPos*, %class.CFX_Font*, %class.CFX_Matrix*, float, i32, %struct.CFX_TextRenderOptions*)*, i1 (%class.RenderDeviceDriverIface*, i32, %class.TextCharPos*, %class.CFX_Font*, %class.CFX_Matrix*, float, i32, %struct.CFX_TextRenderOptions*)** %84, i64 19
  %86 = load i1 (%class.RenderDeviceDriverIface*, i32, %class.TextCharPos*, %class.CFX_Font*, %class.CFX_Matrix*, float, i32, %struct.CFX_TextRenderOptions*)*, i1 (%class.RenderDeviceDriverIface*, i32, %class.TextCharPos*, %class.CFX_Font*, %class.CFX_Matrix*, float, i32, %struct.CFX_TextRenderOptions*)** %85, align 8
  %87 = call zeroext i1 %86(%class.RenderDeviceDriverIface* %82, i32 %1, %class.TextCharPos* %2, %class.CFX_Font* %3, %class.CFX_Matrix* dereferenceable(24) %5, float %4, i32 %6, %struct.CFX_TextRenderOptions* nonnull dereferenceable(8) %12) #11
  br i1 %87, label %1621, label %88

88:                                               ; preds = %80
  %89 = icmp ult i32 %6, -16777216
  br i1 %89, label %1621, label %102

90:                                               ; preds = %74
  %91 = getelementptr inbounds %struct.CFX_TextRenderOptions, %struct.CFX_TextRenderOptions* %7, i64 0, i32 2
  %92 = load i8, i8* %91, align 1, !range !2
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %102, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %96 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %95, align 8
  %97 = bitcast %class.RenderDeviceDriverIface* %96 to i1 (%class.RenderDeviceDriverIface*, i32, %class.TextCharPos*, %class.CFX_Font*, %class.CFX_Matrix*, float, i32, %struct.CFX_TextRenderOptions*)***
  %98 = load i1 (%class.RenderDeviceDriverIface*, i32, %class.TextCharPos*, %class.CFX_Font*, %class.CFX_Matrix*, float, i32, %struct.CFX_TextRenderOptions*)**, i1 (%class.RenderDeviceDriverIface*, i32, %class.TextCharPos*, %class.CFX_Font*, %class.CFX_Matrix*, float, i32, %struct.CFX_TextRenderOptions*)*** %97, align 8
  %99 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, i32, %class.TextCharPos*, %class.CFX_Font*, %class.CFX_Matrix*, float, i32, %struct.CFX_TextRenderOptions*)*, i1 (%class.RenderDeviceDriverIface*, i32, %class.TextCharPos*, %class.CFX_Font*, %class.CFX_Matrix*, float, i32, %struct.CFX_TextRenderOptions*)** %98, i64 19
  %100 = load i1 (%class.RenderDeviceDriverIface*, i32, %class.TextCharPos*, %class.CFX_Font*, %class.CFX_Matrix*, float, i32, %struct.CFX_TextRenderOptions*)*, i1 (%class.RenderDeviceDriverIface*, i32, %class.TextCharPos*, %class.CFX_Font*, %class.CFX_Matrix*, float, i32, %struct.CFX_TextRenderOptions*)** %99, align 8
  %101 = call zeroext i1 %100(%class.RenderDeviceDriverIface* %96, i32 %1, %class.TextCharPos* %2, %class.CFX_Font* %3, %class.CFX_Matrix* dereferenceable(24) %5, float %4, i32 %6, %struct.CFX_TextRenderOptions* nonnull dereferenceable(8) %12) #11
  br i1 %101, label %1621, label %102

102:                                              ; preds = %90, %94, %88
  %103 = bitcast %class.CFX_Matrix* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %103) #11
  %104 = bitcast %class.CFX_Matrix* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %103, i8* align 4 %104, i64 24, i1 false)
  %105 = bitcast %class.CFX_Matrix* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %105) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %105, i8* align 4 %104, i64 24, i1 false)
  %106 = fsub float -0.000000e+00, %4
  call void @_ZN10CFX_Matrix5ScaleEff(%class.CFX_Matrix* nonnull %13, float %4, float %106) #11
  %107 = bitcast %class.CFX_Matrix* %13 to <2 x float>*
  %108 = load <2 x float>, <2 x float>* %107, align 8
  %109 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %108)
  %110 = extractelement <2 x float> %109, i32 0
  %111 = extractelement <2 x float> %109, i32 1
  %112 = fadd float %110, %111
  %113 = fcmp ogt float %112, 5.000000e+01
  br i1 %113, label %117, label %114

114:                                              ; preds = %102
  %115 = load i8, i8* %77, align 8, !range !2
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %132, label %117

117:                                              ; preds = %114, %102
  %118 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %119 = load %class.CFX_Face*, %class.CFX_Face** %118, align 8
  %120 = icmp eq %class.CFX_Face* %119, null
  br i1 %120, label %132, label %121

121:                                              ; preds = %117
  %122 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %119, i64 0, i32 2, i32 0, i32 0, i32 0
  %123 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %122, align 8
  %124 = icmp eq %struct.FT_FaceRec_* %123, null
  br i1 %124, label %132, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.CFX_FillRenderOptions, %struct.CFX_FillRenderOptions* %15, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %126) #11
  %127 = getelementptr inbounds %struct.CFX_FillRenderOptions, %struct.CFX_FillRenderOptions* %15, i64 0, i32 1
  store i8 0, i8* %126, align 1
  %128 = xor i1 %36, true
  %129 = zext i1 %128 to i8
  %130 = shl nuw nsw i8 %129, 1
  store i8 %130, i8* %127, align 1
  %131 = call zeroext i1 @_ZN16CFX_RenderDevice12DrawTextPathEiPK11TextCharPosP8CFX_FontfRK10CFX_MatrixPS6_PK18CFX_GraphStateDatajjP12CFX_PathDataRK21CFX_FillRenderOptions(%class.CFX_RenderDevice* %0, i32 %1, %class.TextCharPos* %2, %class.CFX_Font* %3, float %4, %class.CFX_Matrix* dereferenceable(24) %5, %class.CFX_Matrix* null, %class.CFX_GraphStateData* null, i32 %6, i32 0, %class.CFX_PathData* null, %struct.CFX_FillRenderOptions* nonnull dereferenceable(2) %15)
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %126) #11
  br label %1619

132:                                              ; preds = %114, %117, %121
  %133 = bitcast %"class.std::__1::vector.159"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %133) #11
  %134 = getelementptr inbounds %"class.std::__1::vector.159", %"class.std::__1::vector.159"* %16, i64 0, i32 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::vector.159", %"class.std::__1::vector.159"* %16, i64 0, i32 0, i32 1
  %136 = getelementptr inbounds %"class.std::__1::vector.159", %"class.std::__1::vector.159"* %16, i64 0, i32 0, i32 2, i32 0, i32 0
  %137 = sext i32 %1 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %133, i8 0, i64 24, i1 false) #11
  %138 = icmp eq i32 %1, 0
  br i1 %138, label %139, label %142

139:                                              ; preds = %132
  %140 = bitcast %class.TextGlyphPos** %135 to i64*
  %141 = bitcast %"class.std::__1::vector.159"* %16 to i64*
  br label %163

142:                                              ; preds = %132
  %143 = icmp slt i32 %1, 0
  br i1 %143, label %144, label %146

144:                                              ; preds = %142
  %145 = bitcast %"class.std::__1::vector.159"* %16 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %145) #13
  unreachable

146:                                              ; preds = %142
  %147 = mul nsw i64 %137, 24
  %148 = call i8* @_Znwm(i64 %147) #12
  %149 = bitcast i8* %148 to %class.TextGlyphPos*
  %150 = bitcast %class.TextGlyphPos** %135 to i8**
  store i8* %148, i8** %150, align 8
  %151 = bitcast %"class.std::__1::vector.159"* %16 to i8**
  store i8* %148, i8** %151, align 8
  %152 = getelementptr inbounds %class.TextGlyphPos, %class.TextGlyphPos* %149, i64 %137
  store %class.TextGlyphPos* %152, %class.TextGlyphPos** %136, align 8
  br label %153

153:                                              ; preds = %153, %146
  %154 = phi %class.TextGlyphPos* [ %155, %153 ], [ %149, %146 ]
  call void @_ZN12TextGlyphPosC1Ev(%class.TextGlyphPos* %154) #11
  %155 = getelementptr inbounds %class.TextGlyphPos, %class.TextGlyphPos* %154, i64 1
  %156 = icmp eq %class.TextGlyphPos* %155, %152
  br i1 %156, label %157, label %153

157:                                              ; preds = %153
  %158 = bitcast %class.TextGlyphPos** %135 to i64*
  %159 = ptrtoint %class.TextGlyphPos* %152 to i64
  store i64 %159, i64* %158, align 8
  %160 = bitcast %"class.std::__1::vector.159"* %16 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = inttoptr i64 %161 to %class.TextGlyphPos*
  br label %163

163:                                              ; preds = %139, %157
  %164 = phi i64* [ %141, %139 ], [ %160, %157 ]
  %165 = phi i64* [ %140, %139 ], [ %158, %157 ]
  %166 = phi %class.TextGlyphPos* [ null, %139 ], [ %162, %157 ]
  %167 = phi i64 [ 0, %139 ], [ %161, %157 ]
  %168 = phi i64 [ 0, %139 ], [ %159, %157 ]
  %169 = bitcast %class.CFX_Matrix* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %169) #11
  %170 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %17, i64 0, i32 2
  %171 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %17, i64 0, i32 4
  %172 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %17, i64 0, i32 5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %169, i8* nonnull align 8 %103, i64 24, i1 false)
  %173 = icmp eq i64 %168, %167
  br i1 %173, label %174, label %176

174:                                              ; preds = %163
  %175 = icmp eq i32 %76, 3
  br label %349

176:                                              ; preds = %163
  %177 = bitcast %class.CFX_PTemplate* %18 to i8*
  %178 = bitcast %class.CFX_PTemplate* %18 to i32*
  %179 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %18, i64 0, i32 1
  %180 = bitcast float* %179 to i32*
  %181 = icmp eq i32 %76, 3
  %182 = bitcast %class.CFX_Matrix* %19 to i8*
  %183 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %19, i64 0, i32 4
  %184 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %19, i64 0, i32 5
  %185 = bitcast %class.CFX_Matrix* %17 to <2 x float>*
  %186 = bitcast float* %170 to <2 x float>*
  %187 = bitcast %class.CFX_Matrix* %19 to <4 x float>*
  br label %195

188:                                              ; preds = %281
  %189 = inttoptr i64 %284 to %class.TextGlyphPos*
  %190 = inttoptr i64 %283 to %class.TextGlyphPos*
  %191 = icmp eq i32 %76, 3
  %192 = xor i1 %191, true
  %193 = icmp ugt i64 %286, 1
  %194 = and i1 %193, %192
  br i1 %194, label %289, label %349

195:                                              ; preds = %176, %281
  %196 = phi %class.TextGlyphPos* [ %166, %176 ], [ %288, %281 ]
  %197 = phi i64 [ 0, %176 ], [ %282, %281 ]
  %198 = getelementptr inbounds %class.TextGlyphPos, %class.TextGlyphPos* %196, i64 %197
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %177) #11
  %199 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %2, i64 %197, i32 0
  call void @_ZNK10CFX_Matrix9TransformERK13CFX_PTemplateIfE(%class.CFX_PTemplate* nonnull sret %18, %class.CFX_Matrix* nonnull %14, %class.CFX_PTemplate* dereferenceable(8) %199) #11
  %200 = getelementptr inbounds %class.TextGlyphPos, %class.TextGlyphPos* %196, i64 %197, i32 2
  %201 = icmp eq %class.CFX_PTemplate* %200, %18
  br i1 %201, label %208, label %202

202:                                              ; preds = %195
  %203 = load i32, i32* %178, align 4
  %204 = bitcast %class.CFX_PTemplate* %200 to i32*
  store i32 %203, i32* %204, align 4
  %205 = load i32, i32* %180, align 4
  %206 = getelementptr inbounds %class.TextGlyphPos, %class.TextGlyphPos* %196, i64 %197, i32 2, i32 1
  %207 = bitcast float* %206 to i32*
  store i32 %205, i32* %207, align 4
  br label %208

208:                                              ; preds = %195, %202
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %177) #11
  %209 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %200, i64 0, i32 0
  %210 = load float, float* %209, align 8
  br i1 %181, label %213, label %211

211:                                              ; preds = %208
  %212 = call i32 @FXSYS_roundf(float %210) #11
  br label %216

213:                                              ; preds = %208
  %214 = call float @llvm.floor.f32(float %210) #11
  %215 = fptosi float %214 to i32
  br label %216

216:                                              ; preds = %213, %211
  %217 = phi i32 [ %215, %213 ], [ %212, %211 ]
  %218 = getelementptr inbounds %class.TextGlyphPos, %class.TextGlyphPos* %196, i64 %197, i32 1, i32 0
  store i32 %217, i32* %218, align 8
  %219 = getelementptr inbounds %class.TextGlyphPos, %class.TextGlyphPos* %196, i64 %197, i32 2, i32 1
  %220 = load float, float* %219, align 4
  %221 = call i32 @FXSYS_roundf(float %220) #11
  %222 = getelementptr inbounds %class.TextGlyphPos, %class.TextGlyphPos* %196, i64 %197, i32 1, i32 1
  store i32 %221, i32* %222, align 4
  %223 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %2, i64 %197, i32 5
  %224 = load i8, i8* %223, align 4, !range !2
  %225 = icmp eq i8 %224, 0
  br i1 %225, label %271, label %226

226:                                              ; preds = %216
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %182) #11
  %227 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %2, i64 %197, i32 7, i64 0
  %228 = load float, float* %227, align 4
  %229 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %2, i64 %197, i32 7, i64 1
  %230 = load float, float* %229, align 4
  %231 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %2, i64 %197, i32 7, i64 2
  %232 = load float, float* %231, align 4
  %233 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %2, i64 %197, i32 7, i64 3
  %234 = load float, float* %233, align 4
  %235 = load <2 x float>, <2 x float>* %185, align 8, !noalias !18
  %236 = shufflevector <2 x float> %235, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %237 = load <2 x float>, <2 x float>* %186, align 8, !noalias !18
  %238 = shufflevector <2 x float> %237, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %239 = insertelement <2 x float> undef, float %228, i32 0
  %240 = insertelement <2 x float> %239, float %232, i32 1
  %241 = shufflevector <2 x float> %240, <2 x float> undef, <4 x i32> <i32 0, i32 0, i32 1, i32 1>
  %242 = fmul <4 x float> %241, %236
  %243 = insertelement <2 x float> undef, float %230, i32 0
  %244 = insertelement <2 x float> %243, float %234, i32 1
  %245 = shufflevector <2 x float> %244, <2 x float> undef, <4 x i32> <i32 0, i32 0, i32 1, i32 1>
  %246 = fmul <4 x float> %245, %238
  %247 = fadd <4 x float> %242, %246
  %248 = extractelement <2 x float> %235, i32 0
  %249 = fmul float %248, 0.000000e+00
  %250 = extractelement <2 x float> %237, i32 0
  %251 = fmul float %250, 0.000000e+00
  %252 = fadd float %249, %251
  %253 = load float, float* %171, align 8, !noalias !18
  %254 = fadd float %252, %253
  %255 = extractelement <2 x float> %235, i32 1
  %256 = fmul float %255, 0.000000e+00
  %257 = extractelement <2 x float> %237, i32 1
  %258 = fmul float %257, 0.000000e+00
  %259 = fadd float %256, %258
  %260 = load float, float* %172, align 4, !noalias !18
  %261 = fadd float %259, %260
  store <4 x float> %247, <4 x float>* %187, align 16
  store float %254, float* %183, align 16
  store float %261, float* %184, align 4
  %262 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %2, i64 %197, i32 2
  %263 = load i32, i32* %262, align 4
  %264 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %2, i64 %197, i32 6
  %265 = load i8, i8* %264, align 1, !range !2
  %266 = icmp ne i8 %265, 0
  %267 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %2, i64 %197, i32 3
  %268 = load i32, i32* %267, align 4
  %269 = call %class.CFX_GlyphBitmap* @_ZNK8CFX_Font15LoadGlyphBitmapEjbRK10CFX_MatrixiiP21CFX_TextRenderOptions(%class.CFX_Font* %3, i32 %263, i1 zeroext %266, %class.CFX_Matrix* nonnull dereferenceable(24) %19, i32 %268, i32 %76, %struct.CFX_TextRenderOptions* nonnull %12) #11
  %270 = getelementptr inbounds %class.TextGlyphPos, %class.TextGlyphPos* %198, i64 0, i32 0, i32 0
  store %class.CFX_GlyphBitmap* %269, %class.CFX_GlyphBitmap** %270, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %182) #11
  br label %281

271:                                              ; preds = %216
  %272 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %2, i64 %197, i32 2
  %273 = load i32, i32* %272, align 4
  %274 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %2, i64 %197, i32 6
  %275 = load i8, i8* %274, align 1, !range !2
  %276 = icmp ne i8 %275, 0
  %277 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %2, i64 %197, i32 3
  %278 = load i32, i32* %277, align 4
  %279 = call %class.CFX_GlyphBitmap* @_ZNK8CFX_Font15LoadGlyphBitmapEjbRK10CFX_MatrixiiP21CFX_TextRenderOptions(%class.CFX_Font* %3, i32 %273, i1 zeroext %276, %class.CFX_Matrix* nonnull dereferenceable(24) %17, i32 %278, i32 %76, %struct.CFX_TextRenderOptions* nonnull %12) #11
  %280 = getelementptr inbounds %class.TextGlyphPos, %class.TextGlyphPos* %198, i64 0, i32 0, i32 0
  store %class.CFX_GlyphBitmap* %279, %class.CFX_GlyphBitmap** %280, align 8
  br label %281

281:                                              ; preds = %271, %226
  %282 = add nuw i64 %197, 1
  %283 = load i64, i64* %165, align 8
  %284 = load i64, i64* %164, align 8
  %285 = sub i64 %283, %284
  %286 = sdiv exact i64 %285, 24
  %287 = icmp ult i64 %282, %286
  %288 = inttoptr i64 %284 to %class.TextGlyphPos*
  br i1 %287, label %195, label %188

289:                                              ; preds = %188
  %290 = getelementptr inbounds %class.TextGlyphPos, %class.TextGlyphPos* %190, i64 -1, i32 1, i32 0
  %291 = load i32, i32* %290, align 8
  %292 = getelementptr inbounds %class.TextGlyphPos, %class.TextGlyphPos* %189, i64 0, i32 1, i32 0
  %293 = load i32, i32* %292, align 8
  %294 = icmp eq i32 %291, %293
  br i1 %294, label %301, label %295

295:                                              ; preds = %289
  %296 = getelementptr inbounds %class.TextGlyphPos, %class.TextGlyphPos* %190, i64 -1, i32 1, i32 1
  %297 = load i32, i32* %296, align 4
  %298 = getelementptr inbounds %class.TextGlyphPos, %class.TextGlyphPos* %189, i64 0, i32 1, i32 1
  %299 = load i32, i32* %298, align 4
  %300 = icmp eq i32 %297, %299
  br i1 %300, label %301, label %349

301:                                              ; preds = %295, %289
  %302 = sub i64 %283, %284
  %303 = sdiv exact i64 %302, 24
  %304 = add nsw i64 %303, -1
  %305 = icmp ugt i64 %304, 1
  br i1 %305, label %306, label %349

306:                                              ; preds = %301, %347
  %307 = phi %class.TextGlyphPos* [ %348, %347 ], [ %189, %301 ]
  %308 = phi i64 [ %345, %347 ], [ %304, %301 ]
  %309 = phi i64 [ %308, %347 ], [ %303, %301 ]
  %310 = getelementptr inbounds %class.TextGlyphPos, %class.TextGlyphPos* %307, i64 %308, i32 1, i32 1
  %311 = getelementptr inbounds %class.TextGlyphPos, %class.TextGlyphPos* %307, i64 %308, i32 1, i32 0
  %312 = select i1 %294, i32* %310, i32* %311
  %313 = load i32, i32* %312, align 4
  %314 = add i64 %309, -2
  %315 = getelementptr inbounds %class.TextGlyphPos, %class.TextGlyphPos* %307, i64 %314, i32 1, i32 1
  %316 = getelementptr inbounds %class.TextGlyphPos, %class.TextGlyphPos* %307, i64 %314, i32 1, i32 0
  %317 = select i1 %294, i32* %315, i32* %316
  %318 = load i32, i32* %317, align 4
  %319 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %313, i32 %318) #11
  %320 = extractvalue { i32, i1 } %319, 1
  %321 = extractvalue { i32, i1 } %319, 0
  br i1 %320, label %344, label %322

322:                                              ; preds = %306
  %323 = getelementptr inbounds %class.TextGlyphPos, %class.TextGlyphPos* %307, i64 %314, i32 2, i32 1
  %324 = getelementptr inbounds %class.TextGlyphPos, %class.TextGlyphPos* %307, i64 %314, i32 2, i32 0
  %325 = select i1 %294, float* %323, float* %324
  %326 = load float, float* %325, align 4
  %327 = getelementptr inbounds %class.TextGlyphPos, %class.TextGlyphPos* %307, i64 %308, i32 2, i32 1
  %328 = getelementptr inbounds %class.TextGlyphPos, %class.TextGlyphPos* %307, i64 %308, i32 2, i32 0
  %329 = select i1 %294, float* %327, float* %328
  %330 = load float, float* %329, align 4
  %331 = fsub float %330, %326
  %332 = call float @llvm.fabs.f32(float %331) #11
  %333 = sitofp i32 %321 to float
  %334 = call float @llvm.fabs.f32(float %333) #11
  %335 = fsub float %332, %334
  %336 = fcmp ugt float %335, 5.000000e-01
  br i1 %336, label %337, label %344

337:                                              ; preds = %322
  %338 = icmp sgt i32 %321, 0
  %339 = select i1 %338, i32 -1, i32 1
  %340 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %318, i32 %339) #11
  %341 = extractvalue { i32, i1 } %340, 1
  br i1 %341, label %344, label %342

342:                                              ; preds = %337
  %343 = extractvalue { i32, i1 } %340, 0
  store i32 %343, i32* %317, align 4
  br label %344

344:                                              ; preds = %342, %337, %322, %306
  %345 = add i64 %308, -1
  %346 = icmp ugt i64 %345, 1
  br i1 %346, label %347, label %349

347:                                              ; preds = %344
  %348 = load %class.TextGlyphPos*, %class.TextGlyphPos** %134, align 8
  br label %306

349:                                              ; preds = %344, %174, %188, %301, %295
  %350 = phi i1 [ %175, %174 ], [ %191, %188 ], [ %191, %301 ], [ %191, %295 ], [ %191, %344 ]
  %351 = bitcast { i64, i64 }* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %351) #11
  %352 = bitcast { i64, i64 }* %20 to i32*
  %353 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %21, i64 0, i32 1
  %354 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i64 0, i32 1
  %355 = bitcast i64* %354 to i32*
  %356 = bitcast { i64, i64 }* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %356, i8 -86, i64 16, i1 false)
  %357 = call { i64, i64 } @_Z13GetGlyphsBBoxRKNSt3__16vectorI12TextGlyphPosNS_9allocatorIS1_EEEEi(%"class.std::__1::vector.159"* nonnull dereferenceable(24) %16, i32 %76) #11
  %358 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i64 0, i32 0
  %359 = extractvalue { i64, i64 } %357, 0
  store i64 %359, i64* %358, align 8
  %360 = extractvalue { i64, i64 } %357, 1
  store i64 %360, i64* %354, align 8
  %361 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 7
  call void @_ZN7FX_RECT9IntersectERKS_(%struct.FX_RECT* nonnull %21, %struct.FX_RECT* dereferenceable(16) %361) #11
  %362 = load i32, i32* %355, align 8
  %363 = load i32, i32* %352, align 8
  %364 = icmp sgt i32 %362, %363
  br i1 %364, label %365, label %1601

365:                                              ; preds = %349
  %366 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %21, i64 0, i32 3
  %367 = load i32, i32* %366, align 4
  %368 = load i32, i32* %353, align 4
  %369 = icmp sgt i32 %367, %368
  br i1 %369, label %370, label %1601

370:                                              ; preds = %365
  %371 = sub nsw i32 %362, %363
  %372 = sub nsw i32 %367, %368
  %373 = icmp eq i32 %76, 2
  br i1 %373, label %374, label %492

374:                                              ; preds = %370
  %375 = call i8* @_Znwm(i64 80) #12, !noalias !21
  %376 = bitcast i8* %375 to %class.CFX_DIBitmap*
  call void @_ZN12CFX_DIBitmapC1Ev(%class.CFX_DIBitmap* nonnull %376) #11, !noalias !21
  %377 = ptrtoint i8* %375 to i64
  %378 = getelementptr inbounds i8, i8* %375, i64 8
  %379 = bitcast i8* %378 to i64*
  %380 = load i64, i64* %379, align 8, !noalias !21
  %381 = add nsw i64 %380, 1
  store i64 %381, i64* %379, align 8, !noalias !21
  %382 = call zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap* nonnull %376, i32 %371, i32 %372, i16 zeroext 257) #11
  br i1 %382, label %383, label %481

383:                                              ; preds = %374
  call void @_ZN12CFX_DIBitmap5ClearEj(%class.CFX_DIBitmap* nonnull %376, i32 0) #11
  %384 = load %class.TextGlyphPos*, %class.TextGlyphPos** %134, align 8
  %385 = load %class.TextGlyphPos*, %class.TextGlyphPos** %135, align 8
  %386 = icmp eq %class.TextGlyphPos* %384, %385
  br i1 %386, label %397, label %387

387:                                              ; preds = %383
  %388 = getelementptr inbounds %"class.pdfium::Optional.168", %"class.pdfium::Optional.168"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %389 = bitcast %class.CFX_PTemplate.162* %23 to i8*
  %390 = getelementptr inbounds %class.CFX_PTemplate.162, %class.CFX_PTemplate.162* %23, i64 0, i32 0
  %391 = getelementptr inbounds %class.CFX_PTemplate.162, %class.CFX_PTemplate.162* %23, i64 0, i32 1
  %392 = getelementptr inbounds %"class.pdfium::Optional.168", %"class.pdfium::Optional.168"* %22, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %393 = getelementptr inbounds %"class.pdfium::Optional.168", %"class.pdfium::Optional.168"* %22, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %394 = bitcast %"class.fxcrt::RetainPtr.25"* %24 to i8*
  %395 = bitcast %"class.fxcrt::RetainPtr.25"* %24 to i64*
  %396 = getelementptr inbounds %"class.fxcrt::RetainPtr.25", %"class.fxcrt::RetainPtr.25"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %437

397:                                              ; preds = %478, %383
  %398 = bitcast %"class.fxcrt::RetainPtr.25"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %398) #11
  %399 = bitcast %"class.fxcrt::RetainPtr.25"* %25 to i64*
  store i64 %377, i64* %399, align 8
  %400 = load i64, i64* %379, align 8
  %401 = add nsw i64 %400, 1
  store i64 %401, i64* %379, align 8
  %402 = load i32, i32* %352, align 8
  %403 = load i32, i32* %353, align 4
  %404 = bitcast %struct.FX_RECT* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %404) #11
  %405 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %9, i64 0, i32 0
  %406 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %9, i64 0, i32 1
  %407 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %9, i64 0, i32 2
  %408 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %9, i64 0, i32 3
  %409 = getelementptr inbounds %"class.fxcrt::RetainPtr.25", %"class.fxcrt::RetainPtr.25"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  %410 = getelementptr inbounds i8, i8* %375, i64 20
  %411 = bitcast i8* %410 to i32*
  %412 = load i32, i32* %411, align 4
  %413 = getelementptr inbounds i8, i8* %375, i64 24
  %414 = bitcast i8* %413 to i32*
  %415 = load i32, i32* %414, align 8
  store i32 0, i32* %405, align 4
  store i32 0, i32* %406, align 4
  store i32 %412, i32* %407, align 4
  store i32 %415, i32* %408, align 4
  %416 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %417 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %416, align 8
  %418 = bitcast %class.RenderDeviceDriverIface* %417 to i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)***
  %419 = load i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)**, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)*** %418, align 8
  %420 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)*, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)** %419, i64 15
  %421 = load i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)*, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)** %420, align 8
  %422 = call zeroext i1 %421(%class.RenderDeviceDriverIface* %417, %"class.fxcrt::RetainPtr.25"* nonnull dereferenceable(8) %25, i32 %6, %struct.FX_RECT* nonnull dereferenceable(16) %9, i32 %402, i32 %403, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %404) #11
  %423 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %409, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %409, align 8
  %424 = icmp eq %class.CFX_DIBBase* %423, null
  br i1 %424, label %436, label %425

425:                                              ; preds = %397
  %426 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %423, i64 0, i32 0, i32 1
  %427 = load i64, i64* %426, align 8
  %428 = add nsw i64 %427, -1
  store i64 %428, i64* %426, align 8
  %429 = icmp eq i64 %428, 0
  br i1 %429, label %430, label %436

430:                                              ; preds = %425
  %431 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %423, i64 0, i32 0
  %432 = bitcast %class.CFX_DIBBase* %423 to void (%"class.fxcrt::Retainable"*)***
  %433 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %432, align 8
  %434 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %433, i64 1
  %435 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %434, align 8
  call void %435(%"class.fxcrt::Retainable"* nonnull %431) #11
  br label %436

436:                                              ; preds = %397, %425, %430
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %398) #11
  br label %481

437:                                              ; preds = %387, %478
  %438 = phi %class.TextGlyphPos* [ %384, %387 ], [ %479, %478 ]
  %439 = getelementptr inbounds %class.TextGlyphPos, %class.TextGlyphPos* %438, i64 0, i32 0, i32 0
  %440 = load %class.CFX_GlyphBitmap*, %class.CFX_GlyphBitmap** %439, align 8
  %441 = icmp eq %class.CFX_GlyphBitmap* %440, null
  br i1 %441, label %478, label %442

442:                                              ; preds = %437
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %388) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %388, i8 -86, i64 12, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %389) #11
  store i32 %363, i32* %390, align 4
  store i32 %368, i32* %391, align 4
  call void @_ZNK12TextGlyphPos9GetOriginERK13CFX_PTemplateIiE(%"class.pdfium::Optional.168"* nonnull sret %22, %class.TextGlyphPos* %438, %class.CFX_PTemplate.162* nonnull dereferenceable(8) %23) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %389) #11
  %443 = load i8, i8* %388, align 4, !range !2
  %444 = icmp eq i8 %443, 0
  br i1 %444, label %477, label %445

445:                                              ; preds = %442
  %446 = load %class.CFX_GlyphBitmap*, %class.CFX_GlyphBitmap** %439, align 8
  %447 = load i32, i32* %392, align 4
  %448 = load i32, i32* %393, align 4
  %449 = getelementptr inbounds %class.CFX_GlyphBitmap, %class.CFX_GlyphBitmap* %446, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %450 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %449, align 8
  %451 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %450, i64 0, i32 0, i32 2
  %452 = load i32, i32* %451, align 4
  %453 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %450, i64 0, i32 0, i32 3
  %454 = load i32, i32* %453, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %394) #11
  %455 = ptrtoint %class.CFX_DIBitmap* %450 to i64
  store i64 %455, i64* %395, align 8
  %456 = icmp eq %class.CFX_DIBitmap* %450, null
  br i1 %456, label %461, label %457

457:                                              ; preds = %445
  %458 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %450, i64 0, i32 0, i32 0, i32 1
  %459 = load i64, i64* %458, align 8
  %460 = add nsw i64 %459, 1
  store i64 %460, i64* %458, align 8
  br label %461

461:                                              ; preds = %445, %457
  %462 = call zeroext i1 @_ZN12CFX_DIBitmap14TransferBitmapEiiiiRKN5fxcrt9RetainPtrI11CFX_DIBBaseEEii(%class.CFX_DIBitmap* nonnull %376, i32 %447, i32 %448, i32 %452, i32 %454, %"class.fxcrt::RetainPtr.25"* nonnull dereferenceable(8) %24, i32 0, i32 0) #11
  %463 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %396, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %396, align 8
  %464 = icmp eq %class.CFX_DIBBase* %463, null
  br i1 %464, label %476, label %465

465:                                              ; preds = %461
  %466 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %463, i64 0, i32 0, i32 1
  %467 = load i64, i64* %466, align 8
  %468 = add nsw i64 %467, -1
  store i64 %468, i64* %466, align 8
  %469 = icmp eq i64 %468, 0
  br i1 %469, label %470, label %476

470:                                              ; preds = %465
  %471 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %463, i64 0, i32 0
  %472 = bitcast %class.CFX_DIBBase* %463 to void (%"class.fxcrt::Retainable"*)***
  %473 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %472, align 8
  %474 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %473, i64 1
  %475 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %474, align 8
  call void %475(%"class.fxcrt::Retainable"* nonnull %471) #11
  br label %476

476:                                              ; preds = %461, %465, %470
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %394) #11
  br label %477

477:                                              ; preds = %442, %476
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %388) #11
  br label %478

478:                                              ; preds = %477, %437
  %479 = getelementptr inbounds %class.TextGlyphPos, %class.TextGlyphPos* %438, i64 1
  %480 = icmp eq %class.TextGlyphPos* %479, %385
  br i1 %480, label %397, label %437

481:                                              ; preds = %436, %374
  %482 = phi i1 [ %422, %436 ], [ false, %374 ]
  %483 = load i64, i64* %379, align 8
  %484 = add nsw i64 %483, -1
  store i64 %484, i64* %379, align 8
  %485 = icmp eq i64 %484, 0
  br i1 %485, label %486, label %1601

486:                                              ; preds = %481
  %487 = bitcast i8* %375 to %"class.fxcrt::Retainable"*
  %488 = bitcast i8* %375 to void (%"class.fxcrt::Retainable"*)***
  %489 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %488, align 8
  %490 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %489, i64 1
  %491 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %490, align 8
  call void %491(%"class.fxcrt::Retainable"* nonnull %487) #11
  br label %1601

492:                                              ; preds = %370
  %493 = bitcast %"class.fxcrt::RetainPtr"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %493) #11
  %494 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %495 = call i8* @_Znwm(i64 80) #12, !noalias !24
  %496 = bitcast i8* %495 to %class.CFX_DIBitmap*
  call void @_ZN12CFX_DIBitmapC1Ev(%class.CFX_DIBitmap* nonnull %496) #11, !noalias !24
  %497 = ptrtoint i8* %495 to i64
  %498 = bitcast %"class.fxcrt::RetainPtr"* %26 to i64*
  store i64 %497, i64* %498, align 8, !alias.scope !24
  %499 = getelementptr inbounds i8, i8* %495, i64 8
  %500 = bitcast i8* %499 to i64*
  %501 = load i64, i64* %500, align 8, !noalias !24
  %502 = add nsw i64 %501, 1
  store i64 %502, i64* %500, align 8, !noalias !24
  %503 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 4
  %504 = load i32, i32* %503, align 8
  %505 = icmp eq i32 %504, 8
  %506 = bitcast i8* %495 to %class.CFX_DIBitmap*
  br i1 %505, label %507, label %509

507:                                              ; preds = %492
  %508 = call zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap* nonnull %506, i32 %371, i32 %372, i16 zeroext 264) #11
  br i1 %508, label %521, label %1585

509:                                              ; preds = %492
  %510 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 5
  %511 = load i32, i32* %510, align 4
  %512 = and i32 %511, 2048
  %513 = icmp eq i32 %512, 0
  br i1 %513, label %516, label %514

514:                                              ; preds = %509
  %515 = call zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap* nonnull %506, i32 %371, i32 %372, i16 zeroext 264) #11
  br i1 %515, label %521, label %1585

516:                                              ; preds = %509
  %517 = and i32 %511, 64
  %518 = icmp eq i32 %517, 0
  %519 = select i1 %518, i16 24, i16 544
  %520 = call zeroext i1 @_ZN12CFX_DIBitmap6CreateEii12FXDIB_Format(%class.CFX_DIBitmap* nonnull %506, i32 %371, i32 %372, i16 zeroext %519) #11
  br i1 %520, label %521, label %1585

521:                                              ; preds = %514, %516, %507
  %522 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %494, align 8
  %523 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %522, i64 0, i32 0, i32 1
  %524 = load i16, i16* %523, align 8
  %525 = and i16 %524, 768
  %526 = icmp eq i16 %525, 0
  br i1 %526, label %527, label %542

527:                                              ; preds = %521
  call void @_ZN12CFX_DIBitmap5ClearEj(%class.CFX_DIBitmap* %522, i32 -1) #11
  %528 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 5
  %529 = load i32, i32* %528, align 4
  %530 = and i32 %529, 1
  %531 = icmp eq i32 %530, 0
  br i1 %531, label %1585, label %532

532:                                              ; preds = %527
  %533 = load i32, i32* %353, align 4
  %534 = load i32, i32* %352, align 8
  %535 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %536 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %535, align 8
  %537 = bitcast %class.RenderDeviceDriverIface* %536 to i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr"*, i32, i32)***
  %538 = load i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr"*, i32, i32)**, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr"*, i32, i32)*** %537, align 8
  %539 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr"*, i32, i32)*, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr"*, i32, i32)** %538, i64 13
  %540 = load i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr"*, i32, i32)*, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr"*, i32, i32)** %539, align 8
  %541 = call zeroext i1 %540(%class.RenderDeviceDriverIface* %536, %"class.fxcrt::RetainPtr"* nonnull dereferenceable(8) %26, i32 %534, i32 %533) #11
  br i1 %541, label %566, label %1585

542:                                              ; preds = %521
  call void @_ZN12CFX_DIBitmap5ClearEj(%class.CFX_DIBitmap* %522, i32 0) #11
  %543 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %494, align 8
  %544 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %543, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %545 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %544, align 8
  %546 = icmp eq %class.CFX_DIBitmap* %545, null
  br i1 %546, label %566, label %547

547:                                              ; preds = %542
  %548 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %543, i64 0, i32 0
  %549 = bitcast %"class.fxcrt::RetainPtr"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %549) #11
  call void @_ZN11CFX_DIBBase12GetAlphaMaskEv(%"class.fxcrt::RetainPtr"* nonnull sret %27, %class.CFX_DIBBase* %548) #11
  %550 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %551 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %550, align 8
  call void @_ZN12CFX_DIBitmap5ClearEj(%class.CFX_DIBitmap* %551, i32 0) #11
  %552 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %550, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %550, align 8
  %553 = icmp eq %class.CFX_DIBitmap* %552, null
  br i1 %553, label %565, label %554

554:                                              ; preds = %547
  %555 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %552, i64 0, i32 0, i32 0, i32 1
  %556 = load i64, i64* %555, align 8
  %557 = add nsw i64 %556, -1
  store i64 %557, i64* %555, align 8
  %558 = icmp eq i64 %557, 0
  br i1 %558, label %559, label %565

559:                                              ; preds = %554
  %560 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %552, i64 0, i32 0, i32 0
  %561 = bitcast %class.CFX_DIBitmap* %552 to void (%"class.fxcrt::Retainable"*)***
  %562 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %561, align 8
  %563 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %562, i64 1
  %564 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %563, align 8
  call void %564(%"class.fxcrt::Retainable"* nonnull %560) #11
  br label %565

565:                                              ; preds = %547, %554, %559
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %549) #11
  br label %566

566:                                              ; preds = %542, %565, %532
  br i1 %350, label %567, label %577

567:                                              ; preds = %566
  %568 = call { i64, i64 } @_Z10ArgbDecodej(i32 %6) #11
  %569 = extractvalue { i64, i64 } %568, 0
  %570 = trunc i64 %569 to i32
  %571 = lshr i64 %569, 32
  %572 = trunc i64 %571 to i32
  %573 = extractvalue { i64, i64 } %568, 1
  %574 = trunc i64 %573 to i32
  %575 = lshr i64 %573, 32
  %576 = trunc i64 %575 to i32
  br label %577

577:                                              ; preds = %567, %566
  %578 = phi i32 [ %570, %567 ], [ 0, %566 ]
  %579 = phi i32 [ %572, %567 ], [ 0, %566 ]
  %580 = phi i32 [ %574, %567 ], [ 0, %566 ]
  %581 = phi i32 [ %576, %567 ], [ 0, %566 ]
  %582 = load %class.TextGlyphPos*, %class.TextGlyphPos** %134, align 8
  %583 = load %class.TextGlyphPos*, %class.TextGlyphPos** %135, align 8
  %584 = icmp eq %class.TextGlyphPos* %582, %583
  br i1 %584, label %1508, label %585

585:                                              ; preds = %577
  %586 = getelementptr inbounds %"class.pdfium::Optional.168", %"class.pdfium::Optional.168"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  %587 = bitcast %class.CFX_PTemplate.162* %29 to i8*
  %588 = getelementptr inbounds %class.CFX_PTemplate.162, %class.CFX_PTemplate.162* %29, i64 0, i32 0
  %589 = getelementptr inbounds %class.CFX_PTemplate.162, %class.CFX_PTemplate.162* %29, i64 0, i32 1
  %590 = icmp eq i32 %76, 0
  %591 = getelementptr inbounds %"class.pdfium::Optional.168", %"class.pdfium::Optional.168"* %28, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %592 = getelementptr inbounds %"class.pdfium::Optional.168", %"class.pdfium::Optional.168"* %28, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %593 = shl i32 %579, 16
  %594 = shl i32 %580, 8
  %595 = or i32 %594, %593
  %596 = or i32 %595, %581
  %597 = trunc i32 %581 to i8
  %598 = lshr i32 %596, 8
  %599 = trunc i32 %598 to i8
  %600 = lshr i32 %596, 16
  %601 = trunc i32 %600 to i8
  %602 = bitcast %"class.fxcrt::RetainPtr.25"* %30 to i8*
  %603 = bitcast %"class.fxcrt::RetainPtr.25"* %30 to i64*
  %604 = getelementptr inbounds %"class.fxcrt::RetainPtr.25", %"class.fxcrt::RetainPtr.25"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %605

605:                                              ; preds = %585, %1504
  %606 = phi %class.TextGlyphPos* [ %582, %585 ], [ %1505, %1504 ]
  %607 = getelementptr inbounds %class.TextGlyphPos, %class.TextGlyphPos* %606, i64 0, i32 0, i32 0
  %608 = load %class.CFX_GlyphBitmap*, %class.CFX_GlyphBitmap** %607, align 8
  %609 = icmp eq %class.CFX_GlyphBitmap* %608, null
  br i1 %609, label %1504, label %610

610:                                              ; preds = %605
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %586) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %586, i8 -86, i64 12, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %587) #11
  store i32 %363, i32* %588, align 4
  store i32 %368, i32* %589, align 4
  call void @_ZNK12TextGlyphPos9GetOriginERK13CFX_PTemplateIiE(%"class.pdfium::Optional.168"* nonnull sret %28, %class.TextGlyphPos* %606, %class.CFX_PTemplate.162* nonnull dereferenceable(8) %29) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %587) #11
  %611 = load i8, i8* %586, align 4, !range !2
  %612 = icmp eq i8 %611, 0
  br i1 %612, label %1503, label %613

613:                                              ; preds = %610
  %614 = load %class.CFX_GlyphBitmap*, %class.CFX_GlyphBitmap** %607, align 8
  %615 = getelementptr inbounds %class.CFX_GlyphBitmap, %class.CFX_GlyphBitmap* %614, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %616 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %615, align 8
  %617 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %616, i64 0, i32 0, i32 2
  %618 = load i32, i32* %617, align 4
  %619 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %616, i64 0, i32 0, i32 3
  %620 = load i32, i32* %619, align 8
  br i1 %590, label %621, label %647

621:                                              ; preds = %613
  %622 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %494, align 8
  %623 = load i32, i32* %591, align 4
  %624 = load i32, i32* %592, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %602) #11
  %625 = ptrtoint %class.CFX_DIBitmap* %616 to i64
  store i64 %625, i64* %603, align 8
  %626 = icmp eq %class.CFX_DIBitmap* %616, null
  br i1 %626, label %631, label %627

627:                                              ; preds = %621
  %628 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %616, i64 0, i32 0, i32 0, i32 1
  %629 = load i64, i64* %628, align 8
  %630 = add nsw i64 %629, 1
  store i64 %630, i64* %628, align 8
  br label %631

631:                                              ; preds = %621, %627
  %632 = call zeroext i1 @_ZN12CFX_DIBitmap13CompositeMaskEiiiiRKN5fxcrt9RetainPtrI11CFX_DIBBaseEEjii9BlendModePK11CFX_ClipRgnb(%class.CFX_DIBitmap* %622, i32 %623, i32 %624, i32 %618, i32 %620, %"class.fxcrt::RetainPtr.25"* nonnull dereferenceable(8) %30, i32 %6, i32 0, i32 0, i32 0, %class.CFX_ClipRgn* null, i1 zeroext false) #11
  %633 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %604, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %604, align 8
  %634 = icmp eq %class.CFX_DIBBase* %633, null
  br i1 %634, label %646, label %635

635:                                              ; preds = %631
  %636 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %633, i64 0, i32 0, i32 1
  %637 = load i64, i64* %636, align 8
  %638 = add nsw i64 %637, -1
  store i64 %638, i64* %636, align 8
  %639 = icmp eq i64 %638, 0
  br i1 %639, label %640, label %646

640:                                              ; preds = %635
  %641 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %633, i64 0, i32 0
  %642 = bitcast %class.CFX_DIBBase* %633 to void (%"class.fxcrt::Retainable"*)***
  %643 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %642, align 8
  %644 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %643, i64 1
  %645 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %644, align 8
  call void %645(%"class.fxcrt::Retainable"* nonnull %641) #11
  br label %646

646:                                              ; preds = %631, %635, %640
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %602) #11
  br i1 %632, label %1503, label %1507

647:                                              ; preds = %613
  %648 = sdiv i32 %618, 3
  %649 = getelementptr inbounds %class.TextGlyphPos, %class.TextGlyphPos* %606, i64 0, i32 2, i32 0
  %650 = load float, float* %649, align 8
  %651 = fmul float %650, 3.000000e+00
  %652 = fptosi float %651 to i32
  %653 = srem i32 %652, 3
  %654 = load i32, i32* %591, align 4
  %655 = icmp slt i32 %654, 0
  %656 = select i1 %655, i32 0, i32 %654
  %657 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %654, i32 %648) #11
  %658 = extractvalue { i32, i1 } %657, 1
  %659 = extractvalue { i32, i1 } %657, 0
  br i1 %658, label %1503, label %660

660:                                              ; preds = %647
  %661 = icmp slt i32 %371, %659
  %662 = select i1 %661, i32 %371, i32 %659
  %663 = icmp slt i32 %656, %662
  br i1 %663, label %664, label %1503

664:                                              ; preds = %660
  %665 = load i32, i32* %592, align 4
  %666 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %494, align 8
  %667 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %666, i64 0, i32 0, i32 1
  %668 = load i16, i16* %667, align 8
  %669 = icmp eq i16 %668, 544
  %670 = bitcast %class.CFX_DIBitmap* %616 to i8* (%class.CFX_DIBitmap*)***
  %671 = load i8* (%class.CFX_DIBitmap*)**, i8* (%class.CFX_DIBitmap*)*** %670, align 8
  %672 = getelementptr inbounds i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %671, i64 2
  %673 = load i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %672, align 8
  %674 = call i8* %673(%class.CFX_DIBitmap* %616) #11
  %675 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %615, align 8
  %676 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %675, i64 0, i32 0, i32 4
  %677 = load i32, i32* %676, align 4
  %678 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %494, align 8
  %679 = bitcast %class.CFX_DIBitmap* %678 to i8* (%class.CFX_DIBitmap*)***
  %680 = load i8* (%class.CFX_DIBitmap*)**, i8* (%class.CFX_DIBitmap*)*** %679, align 8
  %681 = getelementptr inbounds i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %680, i64 2
  %682 = load i8* (%class.CFX_DIBitmap*)*, i8* (%class.CFX_DIBitmap*)** %681, align 8
  %683 = call i8* %682(%class.CFX_DIBitmap* %678) #11
  %684 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %494, align 8
  %685 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %684, i64 0, i32 0, i32 4
  %686 = load i32, i32* %685, align 4
  br i1 %669, label %693, label %687

687:                                              ; preds = %664
  %688 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %684, i64 0, i32 0, i32 1
  %689 = load i16, i16* %688, align 8
  %690 = lshr i16 %689, 3
  %691 = and i16 %690, 31
  %692 = zext i16 %691 to i32
  br label %693

693:                                              ; preds = %687, %664
  %694 = phi i32 [ %692, %687 ], [ 4, %664 ]
  %695 = icmp sgt i32 %620, 0
  br i1 %695, label %696, label %1503

696:                                              ; preds = %693
  %697 = sub nsw i32 %656, %654
  %698 = mul nsw i32 %697, 3
  %699 = sext i32 %698 to i64
  %700 = mul nsw i32 %694, %656
  %701 = zext i32 %700 to i64
  %702 = zext i32 %694 to i64
  %703 = add nuw nsw i32 %656, 1
  %704 = icmp slt i32 %703, %662
  %705 = sext i32 %677 to i64
  %706 = sext i32 %665 to i64
  %707 = sext i32 %686 to i64
  %708 = zext i32 %620 to i64
  %709 = getelementptr inbounds i8, i8* %674, i64 %699
  %710 = getelementptr inbounds i8, i8* %683, i64 %701
  br label %711

711:                                              ; preds = %1500, %696
  %712 = phi i64 [ 0, %696 ], [ %1501, %1500 ]
  %713 = add nsw i64 %712, %706
  %714 = icmp slt i64 %713, 0
  br i1 %714, label %1500, label %715

715:                                              ; preds = %711
  %716 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %494, align 8
  %717 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %716, i64 0, i32 0, i32 3
  %718 = load i32, i32* %717, align 8
  %719 = sext i32 %718 to i64
  %720 = icmp slt i64 %713, %719
  br i1 %720, label %721, label %1500

721:                                              ; preds = %715
  %722 = mul nsw i64 %712, %705
  %723 = getelementptr inbounds i8, i8* %709, i64 %722
  %724 = mul nsw i64 %713, %707
  %725 = getelementptr inbounds i8, i8* %710, i64 %724
  switch i32 %653, label %1191 [
    i32 0, label %726
    i32 1, label %881
  ]

726:                                              ; preds = %721, %876
  %727 = phi i32 [ %879, %876 ], [ %656, %721 ]
  %728 = phi i8* [ %878, %876 ], [ %725, %721 ]
  %729 = phi i8* [ %877, %876 ], [ %723, %721 ]
  br i1 %75, label %730, label %824

730:                                              ; preds = %726
  %731 = load i8, i8* %729, align 1
  %732 = zext i8 %731 to i16
  %733 = getelementptr inbounds i8, i8* %729, i64 1
  %734 = load i8, i8* %733, align 1
  %735 = zext i8 %734 to i16
  %736 = add nuw nsw i16 %735, %732
  %737 = getelementptr inbounds i8, i8* %729, i64 2
  %738 = load i8, i8* %737, align 1
  %739 = zext i8 %738 to i16
  %740 = add nuw nsw i16 %736, %739
  %741 = udiv i16 %740, 3
  %742 = zext i16 %741 to i64
  %743 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN12_GLOBAL__N_117g_TextGammaAdjustE, i64 0, i64 %742
  %744 = load i8, i8* %743, align 1
  %745 = zext i8 %744 to i32
  %746 = mul nsw i32 %578, %745
  %747 = sdiv i32 %746, 255
  br i1 %669, label %748, label %796

748:                                              ; preds = %730
  %749 = getelementptr inbounds i8, i8* %728, i64 3
  %750 = load i8, i8* %749, align 1
  %751 = icmp eq i8 %750, 0
  br i1 %751, label %752, label %759

752:                                              ; preds = %748
  %753 = shl i32 %747, 24
  %754 = or i32 %753, %596
  store i8 %597, i8* %728, align 1
  %755 = getelementptr inbounds i8, i8* %728, i64 1
  store i8 %599, i8* %755, align 1
  %756 = getelementptr inbounds i8, i8* %728, i64 2
  store i8 %601, i8* %756, align 1
  %757 = lshr i32 %754, 24
  %758 = trunc i32 %757 to i8
  store i8 %758, i8* %749, align 1
  br label %876

759:                                              ; preds = %748
  %760 = add i32 %746, 254
  %761 = icmp ult i32 %760, 509
  br i1 %761, label %876, label %762

762:                                              ; preds = %759
  %763 = zext i8 %750 to i32
  %764 = add nsw i32 %747, %763
  %765 = mul nsw i32 %747, %763
  %766 = sdiv i32 %765, -255
  %767 = add nsw i32 %764, %766
  %768 = trunc i32 %767 to i8
  %769 = mul nsw i32 %747, 255
  %770 = and i32 %767, 255
  %771 = sdiv i32 %769, %770
  %772 = load i8, i8* %728, align 1
  %773 = zext i8 %772 to i32
  %774 = sub nsw i32 255, %771
  %775 = mul nsw i32 %774, %773
  %776 = mul nsw i32 %771, %581
  %777 = add nsw i32 %775, %776
  %778 = sdiv i32 %777, 255
  %779 = trunc i32 %778 to i8
  store i8 %779, i8* %728, align 1
  %780 = getelementptr inbounds i8, i8* %728, i64 1
  %781 = load i8, i8* %780, align 1
  %782 = zext i8 %781 to i32
  %783 = mul nsw i32 %774, %782
  %784 = mul nsw i32 %771, %580
  %785 = add nsw i32 %783, %784
  %786 = sdiv i32 %785, 255
  %787 = trunc i32 %786 to i8
  store i8 %787, i8* %780, align 1
  %788 = getelementptr inbounds i8, i8* %728, i64 2
  %789 = load i8, i8* %788, align 1
  %790 = zext i8 %789 to i32
  %791 = mul nsw i32 %774, %790
  %792 = mul nsw i32 %771, %579
  %793 = add nsw i32 %791, %792
  %794 = sdiv i32 %793, 255
  %795 = trunc i32 %794 to i8
  store i8 %795, i8* %788, align 1
  store i8 %768, i8* %749, align 1
  br label %876

796:                                              ; preds = %730
  %797 = add i32 %746, 254
  %798 = icmp ult i32 %797, 509
  br i1 %798, label %876, label %799

799:                                              ; preds = %796
  %800 = load i8, i8* %728, align 1
  %801 = zext i8 %800 to i32
  %802 = sub nsw i32 255, %747
  %803 = mul nsw i32 %802, %801
  %804 = mul nsw i32 %747, %581
  %805 = add nsw i32 %803, %804
  %806 = sdiv i32 %805, 255
  %807 = trunc i32 %806 to i8
  store i8 %807, i8* %728, align 1
  %808 = getelementptr inbounds i8, i8* %728, i64 1
  %809 = load i8, i8* %808, align 1
  %810 = zext i8 %809 to i32
  %811 = mul nsw i32 %802, %810
  %812 = mul nsw i32 %747, %580
  %813 = add nsw i32 %811, %812
  %814 = sdiv i32 %813, 255
  %815 = trunc i32 %814 to i8
  store i8 %815, i8* %808, align 1
  %816 = getelementptr inbounds i8, i8* %728, i64 2
  %817 = load i8, i8* %816, align 1
  %818 = zext i8 %817 to i32
  %819 = mul nsw i32 %802, %818
  %820 = mul nsw i32 %747, %579
  %821 = add nsw i32 %819, %820
  %822 = sdiv i32 %821, 255
  %823 = trunc i32 %822 to i8
  store i8 %823, i8* %816, align 1
  br label %876

824:                                              ; preds = %726
  %825 = getelementptr inbounds i8, i8* %729, i64 2
  %826 = load i8, i8* %825, align 1
  %827 = load i8, i8* %728, align 1
  %828 = zext i8 %827 to i32
  %829 = zext i8 %826 to i64
  %830 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN12_GLOBAL__N_117g_TextGammaAdjustE, i64 0, i64 %829
  %831 = load i8, i8* %830, align 1
  %832 = zext i8 %831 to i32
  %833 = mul nsw i32 %578, %832
  %834 = sdiv i32 %833, 255
  %835 = sub nsw i32 255, %834
  %836 = mul nsw i32 %835, %828
  %837 = mul nsw i32 %834, %581
  %838 = add nsw i32 %836, %837
  %839 = sdiv i32 %838, 255
  %840 = trunc i32 %839 to i8
  store i8 %840, i8* %728, align 1
  %841 = getelementptr inbounds i8, i8* %729, i64 1
  %842 = load i8, i8* %841, align 1
  %843 = getelementptr inbounds i8, i8* %728, i64 1
  %844 = load i8, i8* %843, align 1
  %845 = zext i8 %844 to i32
  %846 = zext i8 %842 to i64
  %847 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN12_GLOBAL__N_117g_TextGammaAdjustE, i64 0, i64 %846
  %848 = load i8, i8* %847, align 1
  %849 = zext i8 %848 to i32
  %850 = mul nsw i32 %578, %849
  %851 = sdiv i32 %850, 255
  %852 = sub nsw i32 255, %851
  %853 = mul nsw i32 %852, %845
  %854 = mul nsw i32 %851, %580
  %855 = add nsw i32 %853, %854
  %856 = sdiv i32 %855, 255
  %857 = trunc i32 %856 to i8
  store i8 %857, i8* %843, align 1
  %858 = load i8, i8* %729, align 1
  %859 = getelementptr inbounds i8, i8* %728, i64 2
  %860 = load i8, i8* %859, align 1
  %861 = zext i8 %860 to i32
  %862 = zext i8 %858 to i64
  %863 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN12_GLOBAL__N_117g_TextGammaAdjustE, i64 0, i64 %862
  %864 = load i8, i8* %863, align 1
  %865 = zext i8 %864 to i32
  %866 = mul nsw i32 %578, %865
  %867 = sdiv i32 %866, 255
  %868 = sub nsw i32 255, %867
  %869 = mul nsw i32 %868, %861
  %870 = mul nsw i32 %867, %579
  %871 = add nsw i32 %869, %870
  %872 = sdiv i32 %871, 255
  %873 = trunc i32 %872 to i8
  store i8 %873, i8* %859, align 1
  br i1 %669, label %874, label %876

874:                                              ; preds = %824
  %875 = getelementptr inbounds i8, i8* %728, i64 3
  store i8 -1, i8* %875, align 1
  br label %876

876:                                              ; preds = %874, %824, %799, %796, %762, %759, %752
  %877 = getelementptr inbounds i8, i8* %729, i64 3
  %878 = getelementptr inbounds i8, i8* %728, i64 %702
  %879 = add nuw nsw i32 %727, 1
  %880 = icmp eq i32 %879, %662
  br i1 %880, label %1500, label %726

881:                                              ; preds = %721
  br i1 %75, label %882, label %982

882:                                              ; preds = %881
  br i1 %655, label %883, label %892

883:                                              ; preds = %882
  %884 = getelementptr inbounds i8, i8* %723, i64 -1
  %885 = load i8, i8* %884, align 1
  %886 = zext i8 %885 to i16
  %887 = getelementptr inbounds i8, i8* %884, i64 1
  %888 = load i8, i8* %887, align 1
  %889 = zext i8 %888 to i16
  %890 = add nuw nsw i16 %889, %886
  %891 = getelementptr inbounds i8, i8* %884, i64 2
  br label %896

892:                                              ; preds = %882
  %893 = getelementptr inbounds i8, i8* %723, i64 1
  %894 = load i8, i8* %893, align 1
  %895 = zext i8 %894 to i16
  br label %896

896:                                              ; preds = %892, %883
  %897 = phi i8* [ %723, %892 ], [ %891, %883 ]
  %898 = phi i16 [ %895, %892 ], [ %890, %883 ]
  %899 = load i8, i8* %897, align 1
  %900 = zext i8 %899 to i16
  %901 = add nuw nsw i16 %898, %900
  %902 = udiv i16 %901, 3
  %903 = zext i16 %902 to i64
  %904 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN12_GLOBAL__N_117g_TextGammaAdjustE, i64 0, i64 %903
  %905 = load i8, i8* %904, align 1
  %906 = zext i8 %905 to i32
  %907 = mul nsw i32 %578, %906
  %908 = sdiv i32 %907, 255
  br i1 %669, label %934, label %909

909:                                              ; preds = %896
  %910 = load i8, i8* %725, align 1
  %911 = zext i8 %910 to i32
  %912 = sub nsw i32 255, %908
  %913 = mul nsw i32 %912, %911
  %914 = mul nsw i32 %908, %581
  %915 = add nsw i32 %913, %914
  %916 = sdiv i32 %915, 255
  %917 = trunc i32 %916 to i8
  store i8 %917, i8* %725, align 1
  %918 = getelementptr inbounds i8, i8* %725, i64 1
  %919 = load i8, i8* %918, align 1
  %920 = zext i8 %919 to i32
  %921 = mul nsw i32 %912, %920
  %922 = mul nsw i32 %908, %580
  %923 = add nsw i32 %921, %922
  %924 = sdiv i32 %923, 255
  %925 = trunc i32 %924 to i8
  store i8 %925, i8* %918, align 1
  %926 = getelementptr inbounds i8, i8* %725, i64 2
  %927 = load i8, i8* %926, align 1
  %928 = zext i8 %927 to i32
  %929 = mul nsw i32 %912, %928
  %930 = mul nsw i32 %908, %579
  %931 = add nsw i32 %929, %930
  %932 = sdiv i32 %931, 255
  %933 = trunc i32 %932 to i8
  store i8 %933, i8* %926, align 1
  br label %1036

934:                                              ; preds = %896
  %935 = add i32 %907, 254
  %936 = icmp ult i32 %935, 509
  br i1 %936, label %1036, label %937

937:                                              ; preds = %934
  %938 = getelementptr inbounds i8, i8* %725, i64 3
  %939 = load i8, i8* %938, align 1
  %940 = icmp eq i8 %939, 0
  br i1 %940, label %941, label %948

941:                                              ; preds = %937
  %942 = shl i32 %908, 24
  %943 = or i32 %942, %596
  store i8 %597, i8* %725, align 1
  %944 = getelementptr inbounds i8, i8* %725, i64 1
  store i8 %599, i8* %944, align 1
  %945 = getelementptr inbounds i8, i8* %725, i64 2
  store i8 %601, i8* %945, align 1
  %946 = lshr i32 %943, 24
  %947 = trunc i32 %946 to i8
  store i8 %947, i8* %938, align 1
  br label %1036

948:                                              ; preds = %937
  %949 = zext i8 %939 to i32
  %950 = add nsw i32 %908, %949
  %951 = mul nsw i32 %908, %949
  %952 = sdiv i32 %951, -255
  %953 = add nsw i32 %950, %952
  %954 = trunc i32 %953 to i8
  %955 = mul nsw i32 %908, 255
  %956 = and i32 %953, 255
  %957 = sdiv i32 %955, %956
  %958 = load i8, i8* %725, align 1
  %959 = zext i8 %958 to i32
  %960 = sub nsw i32 255, %957
  %961 = mul nsw i32 %960, %959
  %962 = mul nsw i32 %957, %581
  %963 = add nsw i32 %961, %962
  %964 = sdiv i32 %963, 255
  %965 = trunc i32 %964 to i8
  store i8 %965, i8* %725, align 1
  %966 = getelementptr inbounds i8, i8* %725, i64 1
  %967 = load i8, i8* %966, align 1
  %968 = zext i8 %967 to i32
  %969 = mul nsw i32 %960, %968
  %970 = mul nsw i32 %957, %580
  %971 = add nsw i32 %969, %970
  %972 = sdiv i32 %971, 255
  %973 = trunc i32 %972 to i8
  store i8 %973, i8* %966, align 1
  %974 = getelementptr inbounds i8, i8* %725, i64 2
  %975 = load i8, i8* %974, align 1
  %976 = zext i8 %975 to i32
  %977 = mul nsw i32 %960, %976
  %978 = mul nsw i32 %957, %579
  %979 = add nsw i32 %977, %978
  %980 = sdiv i32 %979, 255
  %981 = trunc i32 %980 to i8
  store i8 %981, i8* %974, align 1
  store i8 %954, i8* %938, align 1
  br label %1036

982:                                              ; preds = %881
  br i1 %655, label %983, label %1001

983:                                              ; preds = %982
  %984 = getelementptr inbounds i8, i8* %723, i64 -1
  %985 = load i8, i8* %984, align 1
  %986 = getelementptr inbounds i8, i8* %725, i64 2
  %987 = load i8, i8* %986, align 1
  %988 = zext i8 %987 to i32
  %989 = zext i8 %985 to i64
  %990 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN12_GLOBAL__N_117g_TextGammaAdjustE, i64 0, i64 %989
  %991 = load i8, i8* %990, align 1
  %992 = zext i8 %991 to i32
  %993 = mul nsw i32 %578, %992
  %994 = sdiv i32 %993, 255
  %995 = sub nsw i32 255, %994
  %996 = mul nsw i32 %995, %988
  %997 = mul nsw i32 %994, %579
  %998 = add nsw i32 %996, %997
  %999 = sdiv i32 %998, 255
  %1000 = trunc i32 %999 to i8
  store i8 %1000, i8* %986, align 1
  br label %1001

1001:                                             ; preds = %983, %982
  %1002 = load i8, i8* %723, align 1
  %1003 = getelementptr inbounds i8, i8* %725, i64 1
  %1004 = load i8, i8* %1003, align 1
  %1005 = zext i8 %1004 to i32
  %1006 = zext i8 %1002 to i64
  %1007 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN12_GLOBAL__N_117g_TextGammaAdjustE, i64 0, i64 %1006
  %1008 = load i8, i8* %1007, align 1
  %1009 = zext i8 %1008 to i32
  %1010 = mul nsw i32 %578, %1009
  %1011 = sdiv i32 %1010, 255
  %1012 = sub nsw i32 255, %1011
  %1013 = mul nsw i32 %1012, %1005
  %1014 = mul nsw i32 %1011, %580
  %1015 = add nsw i32 %1013, %1014
  %1016 = sdiv i32 %1015, 255
  %1017 = trunc i32 %1016 to i8
  store i8 %1017, i8* %1003, align 1
  %1018 = getelementptr inbounds i8, i8* %723, i64 1
  %1019 = load i8, i8* %1018, align 1
  %1020 = load i8, i8* %725, align 1
  %1021 = zext i8 %1020 to i32
  %1022 = zext i8 %1019 to i64
  %1023 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN12_GLOBAL__N_117g_TextGammaAdjustE, i64 0, i64 %1022
  %1024 = load i8, i8* %1023, align 1
  %1025 = zext i8 %1024 to i32
  %1026 = mul nsw i32 %578, %1025
  %1027 = sdiv i32 %1026, 255
  %1028 = sub nsw i32 255, %1027
  %1029 = mul nsw i32 %1028, %1021
  %1030 = mul nsw i32 %1027, %581
  %1031 = add nsw i32 %1029, %1030
  %1032 = sdiv i32 %1031, 255
  %1033 = trunc i32 %1032 to i8
  store i8 %1033, i8* %725, align 1
  br i1 %669, label %1034, label %1036

1034:                                             ; preds = %1001
  %1035 = getelementptr inbounds i8, i8* %725, i64 3
  store i8 -1, i8* %1035, align 1
  br label %1036

1036:                                             ; preds = %1034, %1001, %948, %941, %934, %909
  br i1 %704, label %1037, label %1500

1037:                                             ; preds = %1036, %1188
  %1038 = phi i32 [ %1189, %1188 ], [ %703, %1036 ]
  %1039 = phi i8* [ %1042, %1188 ], [ %723, %1036 ]
  %1040 = phi i8* [ %1041, %1188 ], [ %725, %1036 ]
  %1041 = getelementptr inbounds i8, i8* %1040, i64 %702
  %1042 = getelementptr inbounds i8, i8* %1039, i64 3
  %1043 = getelementptr inbounds i8, i8* %1039, i64 2
  br i1 %75, label %1044, label %1137

1044:                                             ; preds = %1037
  %1045 = load i8, i8* %1043, align 1
  %1046 = zext i8 %1045 to i16
  %1047 = load i8, i8* %1042, align 1
  %1048 = zext i8 %1047 to i16
  %1049 = add nuw nsw i16 %1048, %1046
  %1050 = getelementptr inbounds i8, i8* %1039, i64 4
  %1051 = load i8, i8* %1050, align 1
  %1052 = zext i8 %1051 to i16
  %1053 = add nuw nsw i16 %1049, %1052
  %1054 = udiv i16 %1053, 3
  %1055 = zext i16 %1054 to i64
  %1056 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN12_GLOBAL__N_117g_TextGammaAdjustE, i64 0, i64 %1055
  %1057 = load i8, i8* %1056, align 1
  %1058 = zext i8 %1057 to i32
  %1059 = mul nsw i32 %578, %1058
  %1060 = sdiv i32 %1059, 255
  br i1 %669, label %1061, label %1109

1061:                                             ; preds = %1044
  %1062 = getelementptr inbounds i8, i8* %1041, i64 3
  %1063 = load i8, i8* %1062, align 1
  %1064 = icmp eq i8 %1063, 0
  br i1 %1064, label %1065, label %1072

1065:                                             ; preds = %1061
  %1066 = shl i32 %1060, 24
  %1067 = or i32 %1066, %596
  store i8 %597, i8* %1041, align 1
  %1068 = getelementptr inbounds i8, i8* %1041, i64 1
  store i8 %599, i8* %1068, align 1
  %1069 = getelementptr inbounds i8, i8* %1041, i64 2
  store i8 %601, i8* %1069, align 1
  %1070 = lshr i32 %1067, 24
  %1071 = trunc i32 %1070 to i8
  store i8 %1071, i8* %1062, align 1
  br label %1188

1072:                                             ; preds = %1061
  %1073 = add i32 %1059, 254
  %1074 = icmp ult i32 %1073, 509
  br i1 %1074, label %1188, label %1075

1075:                                             ; preds = %1072
  %1076 = zext i8 %1063 to i32
  %1077 = add nsw i32 %1060, %1076
  %1078 = mul nsw i32 %1060, %1076
  %1079 = sdiv i32 %1078, -255
  %1080 = add nsw i32 %1077, %1079
  %1081 = trunc i32 %1080 to i8
  %1082 = mul nsw i32 %1060, 255
  %1083 = and i32 %1080, 255
  %1084 = sdiv i32 %1082, %1083
  %1085 = load i8, i8* %1041, align 1
  %1086 = zext i8 %1085 to i32
  %1087 = sub nsw i32 255, %1084
  %1088 = mul nsw i32 %1087, %1086
  %1089 = mul nsw i32 %1084, %581
  %1090 = add nsw i32 %1088, %1089
  %1091 = sdiv i32 %1090, 255
  %1092 = trunc i32 %1091 to i8
  store i8 %1092, i8* %1041, align 1
  %1093 = getelementptr inbounds i8, i8* %1041, i64 1
  %1094 = load i8, i8* %1093, align 1
  %1095 = zext i8 %1094 to i32
  %1096 = mul nsw i32 %1087, %1095
  %1097 = mul nsw i32 %1084, %580
  %1098 = add nsw i32 %1096, %1097
  %1099 = sdiv i32 %1098, 255
  %1100 = trunc i32 %1099 to i8
  store i8 %1100, i8* %1093, align 1
  %1101 = getelementptr inbounds i8, i8* %1041, i64 2
  %1102 = load i8, i8* %1101, align 1
  %1103 = zext i8 %1102 to i32
  %1104 = mul nsw i32 %1087, %1103
  %1105 = mul nsw i32 %1084, %579
  %1106 = add nsw i32 %1104, %1105
  %1107 = sdiv i32 %1106, 255
  %1108 = trunc i32 %1107 to i8
  store i8 %1108, i8* %1101, align 1
  store i8 %1081, i8* %1062, align 1
  br label %1188

1109:                                             ; preds = %1044
  %1110 = add i32 %1059, 254
  %1111 = icmp ult i32 %1110, 509
  br i1 %1111, label %1188, label %1112

1112:                                             ; preds = %1109
  %1113 = load i8, i8* %1041, align 1
  %1114 = zext i8 %1113 to i32
  %1115 = sub nsw i32 255, %1060
  %1116 = mul nsw i32 %1115, %1114
  %1117 = mul nsw i32 %1060, %581
  %1118 = add nsw i32 %1116, %1117
  %1119 = sdiv i32 %1118, 255
  %1120 = trunc i32 %1119 to i8
  store i8 %1120, i8* %1041, align 1
  %1121 = getelementptr inbounds i8, i8* %1041, i64 1
  %1122 = load i8, i8* %1121, align 1
  %1123 = zext i8 %1122 to i32
  %1124 = mul nsw i32 %1115, %1123
  %1125 = mul nsw i32 %1060, %580
  %1126 = add nsw i32 %1124, %1125
  %1127 = sdiv i32 %1126, 255
  %1128 = trunc i32 %1127 to i8
  store i8 %1128, i8* %1121, align 1
  %1129 = getelementptr inbounds i8, i8* %1041, i64 2
  %1130 = load i8, i8* %1129, align 1
  %1131 = zext i8 %1130 to i32
  %1132 = mul nsw i32 %1115, %1131
  %1133 = mul nsw i32 %1060, %579
  %1134 = add nsw i32 %1132, %1133
  %1135 = sdiv i32 %1134, 255
  %1136 = trunc i32 %1135 to i8
  store i8 %1136, i8* %1129, align 1
  br label %1188

1137:                                             ; preds = %1037
  %1138 = getelementptr inbounds i8, i8* %1039, i64 4
  %1139 = load i8, i8* %1138, align 1
  %1140 = load i8, i8* %1041, align 1
  %1141 = zext i8 %1140 to i32
  %1142 = zext i8 %1139 to i64
  %1143 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN12_GLOBAL__N_117g_TextGammaAdjustE, i64 0, i64 %1142
  %1144 = load i8, i8* %1143, align 1
  %1145 = zext i8 %1144 to i32
  %1146 = mul nsw i32 %578, %1145
  %1147 = sdiv i32 %1146, 255
  %1148 = sub nsw i32 255, %1147
  %1149 = mul nsw i32 %1148, %1141
  %1150 = mul nsw i32 %1147, %581
  %1151 = add nsw i32 %1149, %1150
  %1152 = sdiv i32 %1151, 255
  %1153 = trunc i32 %1152 to i8
  store i8 %1153, i8* %1041, align 1
  %1154 = load i8, i8* %1042, align 1
  %1155 = getelementptr inbounds i8, i8* %1041, i64 1
  %1156 = load i8, i8* %1155, align 1
  %1157 = zext i8 %1156 to i32
  %1158 = zext i8 %1154 to i64
  %1159 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN12_GLOBAL__N_117g_TextGammaAdjustE, i64 0, i64 %1158
  %1160 = load i8, i8* %1159, align 1
  %1161 = zext i8 %1160 to i32
  %1162 = mul nsw i32 %578, %1161
  %1163 = sdiv i32 %1162, 255
  %1164 = sub nsw i32 255, %1163
  %1165 = mul nsw i32 %1164, %1157
  %1166 = mul nsw i32 %1163, %580
  %1167 = add nsw i32 %1165, %1166
  %1168 = sdiv i32 %1167, 255
  %1169 = trunc i32 %1168 to i8
  store i8 %1169, i8* %1155, align 1
  %1170 = load i8, i8* %1043, align 1
  %1171 = getelementptr inbounds i8, i8* %1041, i64 2
  %1172 = load i8, i8* %1171, align 1
  %1173 = zext i8 %1172 to i32
  %1174 = zext i8 %1170 to i64
  %1175 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN12_GLOBAL__N_117g_TextGammaAdjustE, i64 0, i64 %1174
  %1176 = load i8, i8* %1175, align 1
  %1177 = zext i8 %1176 to i32
  %1178 = mul nsw i32 %578, %1177
  %1179 = sdiv i32 %1178, 255
  %1180 = sub nsw i32 255, %1179
  %1181 = mul nsw i32 %1180, %1173
  %1182 = mul nsw i32 %1179, %579
  %1183 = add nsw i32 %1181, %1182
  %1184 = sdiv i32 %1183, 255
  %1185 = trunc i32 %1184 to i8
  store i8 %1185, i8* %1171, align 1
  br i1 %669, label %1186, label %1188

1186:                                             ; preds = %1137
  %1187 = getelementptr inbounds i8, i8* %1041, i64 3
  store i8 -1, i8* %1187, align 1
  br label %1188

1188:                                             ; preds = %1186, %1137, %1112, %1109, %1075, %1072, %1065
  %1189 = add nuw nsw i32 %1038, 1
  %1190 = icmp eq i32 %1189, %662
  br i1 %1190, label %1500, label %1037

1191:                                             ; preds = %721
  br i1 %75, label %1192, label %1291

1192:                                             ; preds = %1191
  br i1 %655, label %1193, label %1207

1193:                                             ; preds = %1192
  %1194 = getelementptr inbounds i8, i8* %723, i64 -2
  %1195 = load i8, i8* %1194, align 1
  %1196 = zext i8 %1195 to i16
  %1197 = getelementptr inbounds i8, i8* %1194, i64 1
  %1198 = load i8, i8* %1197, align 1
  %1199 = zext i8 %1198 to i16
  %1200 = add nuw nsw i16 %1199, %1196
  %1201 = getelementptr inbounds i8, i8* %1194, i64 2
  %1202 = load i8, i8* %1201, align 1
  %1203 = zext i8 %1202 to i16
  %1204 = add nuw nsw i16 %1200, %1203
  %1205 = udiv i16 %1204, 3
  %1206 = zext i16 %1205 to i64
  br label %1211

1207:                                             ; preds = %1192
  %1208 = load i8, i8* %723, align 1
  %1209 = udiv i8 %1208, 3
  %1210 = zext i8 %1209 to i64
  br label %1211

1211:                                             ; preds = %1207, %1193
  %1212 = phi i64 [ %1206, %1193 ], [ %1210, %1207 ]
  %1213 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN12_GLOBAL__N_117g_TextGammaAdjustE, i64 0, i64 %1212
  %1214 = load i8, i8* %1213, align 1
  %1215 = zext i8 %1214 to i32
  %1216 = mul nsw i32 %578, %1215
  %1217 = sdiv i32 %1216, 255
  br i1 %669, label %1243, label %1218

1218:                                             ; preds = %1211
  %1219 = load i8, i8* %725, align 1
  %1220 = zext i8 %1219 to i32
  %1221 = sub nsw i32 255, %1217
  %1222 = mul nsw i32 %1221, %1220
  %1223 = mul nsw i32 %1217, %581
  %1224 = add nsw i32 %1222, %1223
  %1225 = sdiv i32 %1224, 255
  %1226 = trunc i32 %1225 to i8
  store i8 %1226, i8* %725, align 1
  %1227 = getelementptr inbounds i8, i8* %725, i64 1
  %1228 = load i8, i8* %1227, align 1
  %1229 = zext i8 %1228 to i32
  %1230 = mul nsw i32 %1221, %1229
  %1231 = mul nsw i32 %1217, %580
  %1232 = add nsw i32 %1230, %1231
  %1233 = sdiv i32 %1232, 255
  %1234 = trunc i32 %1233 to i8
  store i8 %1234, i8* %1227, align 1
  %1235 = getelementptr inbounds i8, i8* %725, i64 2
  %1236 = load i8, i8* %1235, align 1
  %1237 = zext i8 %1236 to i32
  %1238 = mul nsw i32 %1221, %1237
  %1239 = mul nsw i32 %1217, %579
  %1240 = add nsw i32 %1238, %1239
  %1241 = sdiv i32 %1240, 255
  %1242 = trunc i32 %1241 to i8
  store i8 %1242, i8* %1235, align 1
  br label %1345

1243:                                             ; preds = %1211
  %1244 = add i32 %1216, 254
  %1245 = icmp ult i32 %1244, 509
  br i1 %1245, label %1345, label %1246

1246:                                             ; preds = %1243
  %1247 = getelementptr inbounds i8, i8* %725, i64 3
  %1248 = load i8, i8* %1247, align 1
  %1249 = icmp eq i8 %1248, 0
  br i1 %1249, label %1250, label %1257

1250:                                             ; preds = %1246
  %1251 = shl i32 %1217, 24
  %1252 = or i32 %1251, %596
  store i8 %597, i8* %725, align 1
  %1253 = getelementptr inbounds i8, i8* %725, i64 1
  store i8 %599, i8* %1253, align 1
  %1254 = getelementptr inbounds i8, i8* %725, i64 2
  store i8 %601, i8* %1254, align 1
  %1255 = lshr i32 %1252, 24
  %1256 = trunc i32 %1255 to i8
  store i8 %1256, i8* %1247, align 1
  br label %1345

1257:                                             ; preds = %1246
  %1258 = zext i8 %1248 to i32
  %1259 = add nsw i32 %1217, %1258
  %1260 = mul nsw i32 %1217, %1258
  %1261 = sdiv i32 %1260, -255
  %1262 = add nsw i32 %1259, %1261
  %1263 = trunc i32 %1262 to i8
  %1264 = mul nsw i32 %1217, 255
  %1265 = and i32 %1262, 255
  %1266 = sdiv i32 %1264, %1265
  %1267 = load i8, i8* %725, align 1
  %1268 = zext i8 %1267 to i32
  %1269 = sub nsw i32 255, %1266
  %1270 = mul nsw i32 %1269, %1268
  %1271 = mul nsw i32 %1266, %581
  %1272 = add nsw i32 %1270, %1271
  %1273 = sdiv i32 %1272, 255
  %1274 = trunc i32 %1273 to i8
  store i8 %1274, i8* %725, align 1
  %1275 = getelementptr inbounds i8, i8* %725, i64 1
  %1276 = load i8, i8* %1275, align 1
  %1277 = zext i8 %1276 to i32
  %1278 = mul nsw i32 %1269, %1277
  %1279 = mul nsw i32 %1266, %580
  %1280 = add nsw i32 %1278, %1279
  %1281 = sdiv i32 %1280, 255
  %1282 = trunc i32 %1281 to i8
  store i8 %1282, i8* %1275, align 1
  %1283 = getelementptr inbounds i8, i8* %725, i64 2
  %1284 = load i8, i8* %1283, align 1
  %1285 = zext i8 %1284 to i32
  %1286 = mul nsw i32 %1269, %1285
  %1287 = mul nsw i32 %1266, %579
  %1288 = add nsw i32 %1286, %1287
  %1289 = sdiv i32 %1288, 255
  %1290 = trunc i32 %1289 to i8
  store i8 %1290, i8* %1283, align 1
  store i8 %1263, i8* %1247, align 1
  br label %1345

1291:                                             ; preds = %1191
  br i1 %655, label %1292, label %1327

1292:                                             ; preds = %1291
  %1293 = getelementptr inbounds i8, i8* %723, i64 -2
  %1294 = load i8, i8* %1293, align 1
  %1295 = getelementptr inbounds i8, i8* %725, i64 2
  %1296 = load i8, i8* %1295, align 1
  %1297 = zext i8 %1296 to i32
  %1298 = zext i8 %1294 to i64
  %1299 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN12_GLOBAL__N_117g_TextGammaAdjustE, i64 0, i64 %1298
  %1300 = load i8, i8* %1299, align 1
  %1301 = zext i8 %1300 to i32
  %1302 = mul nsw i32 %578, %1301
  %1303 = sdiv i32 %1302, 255
  %1304 = sub nsw i32 255, %1303
  %1305 = mul nsw i32 %1304, %1297
  %1306 = mul nsw i32 %1303, %579
  %1307 = add nsw i32 %1305, %1306
  %1308 = sdiv i32 %1307, 255
  %1309 = trunc i32 %1308 to i8
  store i8 %1309, i8* %1295, align 1
  %1310 = getelementptr inbounds i8, i8* %723, i64 -1
  %1311 = load i8, i8* %1310, align 1
  %1312 = getelementptr inbounds i8, i8* %725, i64 1
  %1313 = load i8, i8* %1312, align 1
  %1314 = zext i8 %1313 to i32
  %1315 = zext i8 %1311 to i64
  %1316 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN12_GLOBAL__N_117g_TextGammaAdjustE, i64 0, i64 %1315
  %1317 = load i8, i8* %1316, align 1
  %1318 = zext i8 %1317 to i32
  %1319 = mul nsw i32 %578, %1318
  %1320 = sdiv i32 %1319, 255
  %1321 = sub nsw i32 255, %1320
  %1322 = mul nsw i32 %1321, %1314
  %1323 = mul nsw i32 %1320, %580
  %1324 = add nsw i32 %1322, %1323
  %1325 = sdiv i32 %1324, 255
  %1326 = trunc i32 %1325 to i8
  store i8 %1326, i8* %1312, align 1
  br label %1327

1327:                                             ; preds = %1292, %1291
  %1328 = load i8, i8* %723, align 1
  %1329 = load i8, i8* %725, align 1
  %1330 = zext i8 %1329 to i32
  %1331 = zext i8 %1328 to i64
  %1332 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN12_GLOBAL__N_117g_TextGammaAdjustE, i64 0, i64 %1331
  %1333 = load i8, i8* %1332, align 1
  %1334 = zext i8 %1333 to i32
  %1335 = mul nsw i32 %578, %1334
  %1336 = sdiv i32 %1335, 255
  %1337 = sub nsw i32 255, %1336
  %1338 = mul nsw i32 %1337, %1330
  %1339 = mul nsw i32 %1336, %581
  %1340 = add nsw i32 %1338, %1339
  %1341 = sdiv i32 %1340, 255
  %1342 = trunc i32 %1341 to i8
  store i8 %1342, i8* %725, align 1
  br i1 %669, label %1343, label %1345

1343:                                             ; preds = %1327
  %1344 = getelementptr inbounds i8, i8* %725, i64 3
  store i8 -1, i8* %1344, align 1
  br label %1345

1345:                                             ; preds = %1343, %1327, %1257, %1250, %1243, %1218
  br i1 %704, label %1346, label %1500

1346:                                             ; preds = %1345, %1497
  %1347 = phi i32 [ %1498, %1497 ], [ %703, %1345 ]
  %1348 = phi i8* [ %1351, %1497 ], [ %723, %1345 ]
  %1349 = phi i8* [ %1350, %1497 ], [ %725, %1345 ]
  %1350 = getelementptr inbounds i8, i8* %1349, i64 %702
  %1351 = getelementptr inbounds i8, i8* %1348, i64 3
  %1352 = getelementptr inbounds i8, i8* %1348, i64 1
  br i1 %75, label %1353, label %1446

1353:                                             ; preds = %1346
  %1354 = load i8, i8* %1352, align 1
  %1355 = zext i8 %1354 to i16
  %1356 = getelementptr inbounds i8, i8* %1348, i64 2
  %1357 = load i8, i8* %1356, align 1
  %1358 = zext i8 %1357 to i16
  %1359 = add nuw nsw i16 %1358, %1355
  %1360 = load i8, i8* %1351, align 1
  %1361 = zext i8 %1360 to i16
  %1362 = add nuw nsw i16 %1359, %1361
  %1363 = udiv i16 %1362, 3
  %1364 = zext i16 %1363 to i64
  %1365 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN12_GLOBAL__N_117g_TextGammaAdjustE, i64 0, i64 %1364
  %1366 = load i8, i8* %1365, align 1
  %1367 = zext i8 %1366 to i32
  %1368 = mul nsw i32 %578, %1367
  %1369 = sdiv i32 %1368, 255
  br i1 %669, label %1370, label %1418

1370:                                             ; preds = %1353
  %1371 = getelementptr inbounds i8, i8* %1350, i64 3
  %1372 = load i8, i8* %1371, align 1
  %1373 = icmp eq i8 %1372, 0
  br i1 %1373, label %1374, label %1381

1374:                                             ; preds = %1370
  %1375 = shl i32 %1369, 24
  %1376 = or i32 %1375, %596
  store i8 %597, i8* %1350, align 1
  %1377 = getelementptr inbounds i8, i8* %1350, i64 1
  store i8 %599, i8* %1377, align 1
  %1378 = getelementptr inbounds i8, i8* %1350, i64 2
  store i8 %601, i8* %1378, align 1
  %1379 = lshr i32 %1376, 24
  %1380 = trunc i32 %1379 to i8
  store i8 %1380, i8* %1371, align 1
  br label %1497

1381:                                             ; preds = %1370
  %1382 = add i32 %1368, 254
  %1383 = icmp ult i32 %1382, 509
  br i1 %1383, label %1497, label %1384

1384:                                             ; preds = %1381
  %1385 = zext i8 %1372 to i32
  %1386 = add nsw i32 %1369, %1385
  %1387 = mul nsw i32 %1369, %1385
  %1388 = sdiv i32 %1387, -255
  %1389 = add nsw i32 %1386, %1388
  %1390 = trunc i32 %1389 to i8
  %1391 = mul nsw i32 %1369, 255
  %1392 = and i32 %1389, 255
  %1393 = sdiv i32 %1391, %1392
  %1394 = load i8, i8* %1350, align 1
  %1395 = zext i8 %1394 to i32
  %1396 = sub nsw i32 255, %1393
  %1397 = mul nsw i32 %1396, %1395
  %1398 = mul nsw i32 %1393, %581
  %1399 = add nsw i32 %1397, %1398
  %1400 = sdiv i32 %1399, 255
  %1401 = trunc i32 %1400 to i8
  store i8 %1401, i8* %1350, align 1
  %1402 = getelementptr inbounds i8, i8* %1350, i64 1
  %1403 = load i8, i8* %1402, align 1
  %1404 = zext i8 %1403 to i32
  %1405 = mul nsw i32 %1396, %1404
  %1406 = mul nsw i32 %1393, %580
  %1407 = add nsw i32 %1405, %1406
  %1408 = sdiv i32 %1407, 255
  %1409 = trunc i32 %1408 to i8
  store i8 %1409, i8* %1402, align 1
  %1410 = getelementptr inbounds i8, i8* %1350, i64 2
  %1411 = load i8, i8* %1410, align 1
  %1412 = zext i8 %1411 to i32
  %1413 = mul nsw i32 %1396, %1412
  %1414 = mul nsw i32 %1393, %579
  %1415 = add nsw i32 %1413, %1414
  %1416 = sdiv i32 %1415, 255
  %1417 = trunc i32 %1416 to i8
  store i8 %1417, i8* %1410, align 1
  store i8 %1390, i8* %1371, align 1
  br label %1497

1418:                                             ; preds = %1353
  %1419 = add i32 %1368, 254
  %1420 = icmp ult i32 %1419, 509
  br i1 %1420, label %1497, label %1421

1421:                                             ; preds = %1418
  %1422 = load i8, i8* %1350, align 1
  %1423 = zext i8 %1422 to i32
  %1424 = sub nsw i32 255, %1369
  %1425 = mul nsw i32 %1424, %1423
  %1426 = mul nsw i32 %1369, %581
  %1427 = add nsw i32 %1425, %1426
  %1428 = sdiv i32 %1427, 255
  %1429 = trunc i32 %1428 to i8
  store i8 %1429, i8* %1350, align 1
  %1430 = getelementptr inbounds i8, i8* %1350, i64 1
  %1431 = load i8, i8* %1430, align 1
  %1432 = zext i8 %1431 to i32
  %1433 = mul nsw i32 %1424, %1432
  %1434 = mul nsw i32 %1369, %580
  %1435 = add nsw i32 %1433, %1434
  %1436 = sdiv i32 %1435, 255
  %1437 = trunc i32 %1436 to i8
  store i8 %1437, i8* %1430, align 1
  %1438 = getelementptr inbounds i8, i8* %1350, i64 2
  %1439 = load i8, i8* %1438, align 1
  %1440 = zext i8 %1439 to i32
  %1441 = mul nsw i32 %1424, %1440
  %1442 = mul nsw i32 %1369, %579
  %1443 = add nsw i32 %1441, %1442
  %1444 = sdiv i32 %1443, 255
  %1445 = trunc i32 %1444 to i8
  store i8 %1445, i8* %1438, align 1
  br label %1497

1446:                                             ; preds = %1346
  %1447 = load i8, i8* %1351, align 1
  %1448 = load i8, i8* %1350, align 1
  %1449 = zext i8 %1448 to i32
  %1450 = zext i8 %1447 to i64
  %1451 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN12_GLOBAL__N_117g_TextGammaAdjustE, i64 0, i64 %1450
  %1452 = load i8, i8* %1451, align 1
  %1453 = zext i8 %1452 to i32
  %1454 = mul nsw i32 %578, %1453
  %1455 = sdiv i32 %1454, 255
  %1456 = sub nsw i32 255, %1455
  %1457 = mul nsw i32 %1456, %1449
  %1458 = mul nsw i32 %1455, %581
  %1459 = add nsw i32 %1457, %1458
  %1460 = sdiv i32 %1459, 255
  %1461 = trunc i32 %1460 to i8
  store i8 %1461, i8* %1350, align 1
  %1462 = getelementptr inbounds i8, i8* %1348, i64 2
  %1463 = load i8, i8* %1462, align 1
  %1464 = getelementptr inbounds i8, i8* %1350, i64 1
  %1465 = load i8, i8* %1464, align 1
  %1466 = zext i8 %1465 to i32
  %1467 = zext i8 %1463 to i64
  %1468 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN12_GLOBAL__N_117g_TextGammaAdjustE, i64 0, i64 %1467
  %1469 = load i8, i8* %1468, align 1
  %1470 = zext i8 %1469 to i32
  %1471 = mul nsw i32 %578, %1470
  %1472 = sdiv i32 %1471, 255
  %1473 = sub nsw i32 255, %1472
  %1474 = mul nsw i32 %1473, %1466
  %1475 = mul nsw i32 %1472, %580
  %1476 = add nsw i32 %1474, %1475
  %1477 = sdiv i32 %1476, 255
  %1478 = trunc i32 %1477 to i8
  store i8 %1478, i8* %1464, align 1
  %1479 = load i8, i8* %1352, align 1
  %1480 = getelementptr inbounds i8, i8* %1350, i64 2
  %1481 = load i8, i8* %1480, align 1
  %1482 = zext i8 %1481 to i32
  %1483 = zext i8 %1479 to i64
  %1484 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN12_GLOBAL__N_117g_TextGammaAdjustE, i64 0, i64 %1483
  %1485 = load i8, i8* %1484, align 1
  %1486 = zext i8 %1485 to i32
  %1487 = mul nsw i32 %578, %1486
  %1488 = sdiv i32 %1487, 255
  %1489 = sub nsw i32 255, %1488
  %1490 = mul nsw i32 %1489, %1482
  %1491 = mul nsw i32 %1488, %579
  %1492 = add nsw i32 %1490, %1491
  %1493 = sdiv i32 %1492, 255
  %1494 = trunc i32 %1493 to i8
  store i8 %1494, i8* %1480, align 1
  br i1 %669, label %1495, label %1497

1495:                                             ; preds = %1446
  %1496 = getelementptr inbounds i8, i8* %1350, i64 3
  store i8 -1, i8* %1496, align 1
  br label %1497

1497:                                             ; preds = %1495, %1446, %1421, %1418, %1384, %1381, %1374
  %1498 = add nuw nsw i32 %1347, 1
  %1499 = icmp eq i32 %1498, %662
  br i1 %1499, label %1500, label %1346

1500:                                             ; preds = %1188, %876, %1497, %1345, %1036, %715, %711
  %1501 = add nuw nsw i64 %712, 1
  %1502 = icmp eq i64 %1501, %708
  br i1 %1502, label %1503, label %711

1503:                                             ; preds = %1500, %647, %610, %660, %693, %646
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %586) #11
  br label %1504

1504:                                             ; preds = %605, %1503
  %1505 = getelementptr inbounds %class.TextGlyphPos, %class.TextGlyphPos* %606, i64 1
  %1506 = icmp eq %class.TextGlyphPos* %1505, %583
  br i1 %1506, label %1508, label %605

1507:                                             ; preds = %646
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %586) #11
  br label %1585

1508:                                             ; preds = %1504, %577
  %1509 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %494, align 8
  %1510 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %1509, i64 0, i32 0, i32 1
  %1511 = load i16, i16* %1510, align 8
  %1512 = and i16 %1511, 256
  %1513 = icmp eq i16 %1512, 0
  br i1 %1513, label %1557, label %1514

1514:                                             ; preds = %1508
  %1515 = bitcast %"class.fxcrt::RetainPtr.25"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1515) #11
  %1516 = ptrtoint %class.CFX_DIBitmap* %1509 to i64
  %1517 = bitcast %"class.fxcrt::RetainPtr.25"* %31 to i64*
  store i64 %1516, i64* %1517, align 8
  %1518 = icmp eq %class.CFX_DIBitmap* %1509, null
  br i1 %1518, label %1523, label %1519

1519:                                             ; preds = %1514
  %1520 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %1509, i64 0, i32 0, i32 0, i32 1
  %1521 = load i64, i64* %1520, align 8
  %1522 = add nsw i64 %1521, 1
  store i64 %1522, i64* %1520, align 8
  br label %1523

1523:                                             ; preds = %1514, %1519
  %1524 = load i32, i32* %352, align 8
  %1525 = load i32, i32* %353, align 4
  %1526 = bitcast %struct.FX_RECT* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1526) #11
  %1527 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %10, i64 0, i32 0
  %1528 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %10, i64 0, i32 1
  %1529 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %10, i64 0, i32 2
  %1530 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %10, i64 0, i32 3
  %1531 = getelementptr inbounds %"class.fxcrt::RetainPtr.25", %"class.fxcrt::RetainPtr.25"* %31, i64 0, i32 0, i32 0, i32 0, i32 0
  %1532 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %1509, i64 0, i32 0, i32 2
  %1533 = load i32, i32* %1532, align 4
  %1534 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %1509, i64 0, i32 0, i32 3
  %1535 = load i32, i32* %1534, align 8
  store i32 0, i32* %1527, align 4
  store i32 0, i32* %1528, align 4
  store i32 %1533, i32* %1529, align 4
  store i32 %1535, i32* %1530, align 4
  %1536 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %1537 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %1536, align 8
  %1538 = bitcast %class.RenderDeviceDriverIface* %1537 to i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)***
  %1539 = load i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)**, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)*** %1538, align 8
  %1540 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)*, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)** %1539, i64 15
  %1541 = load i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)*, i1 (%class.RenderDeviceDriverIface*, %"class.fxcrt::RetainPtr.25"*, i32, %struct.FX_RECT*, i32, i32, i32)** %1540, align 8
  %1542 = call zeroext i1 %1541(%class.RenderDeviceDriverIface* %1537, %"class.fxcrt::RetainPtr.25"* nonnull dereferenceable(8) %31, i32 %6, %struct.FX_RECT* nonnull dereferenceable(16) %10, i32 %1524, i32 %1525, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1526) #11
  %1543 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %1531, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %1531, align 8
  %1544 = icmp eq %class.CFX_DIBBase* %1543, null
  br i1 %1544, label %1556, label %1545

1545:                                             ; preds = %1523
  %1546 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %1543, i64 0, i32 0, i32 1
  %1547 = load i64, i64* %1546, align 8
  %1548 = add nsw i64 %1547, -1
  store i64 %1548, i64* %1546, align 8
  %1549 = icmp eq i64 %1548, 0
  br i1 %1549, label %1550, label %1556

1550:                                             ; preds = %1545
  %1551 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %1543, i64 0, i32 0
  %1552 = bitcast %class.CFX_DIBBase* %1543 to void (%"class.fxcrt::Retainable"*)***
  %1553 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %1552, align 8
  %1554 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %1553, i64 1
  %1555 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %1554, align 8
  call void %1555(%"class.fxcrt::Retainable"* nonnull %1551) #11
  br label %1556

1556:                                             ; preds = %1523, %1545, %1550
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1515) #11
  br label %1585

1557:                                             ; preds = %1508
  %1558 = bitcast %"class.fxcrt::RetainPtr.25"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1558) #11
  %1559 = ptrtoint %class.CFX_DIBitmap* %1509 to i64
  %1560 = bitcast %"class.fxcrt::RetainPtr.25"* %32 to i64*
  store i64 %1559, i64* %1560, align 8
  %1561 = icmp eq %class.CFX_DIBitmap* %1509, null
  br i1 %1561, label %1566, label %1562

1562:                                             ; preds = %1557
  %1563 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %1509, i64 0, i32 0, i32 0, i32 1
  %1564 = load i64, i64* %1563, align 8
  %1565 = add nsw i64 %1564, 1
  store i64 %1565, i64* %1563, align 8
  br label %1566

1566:                                             ; preds = %1557, %1562
  %1567 = load i32, i32* %352, align 8
  %1568 = load i32, i32* %353, align 4
  %1569 = call zeroext i1 @_ZN16CFX_RenderDevice18SetDIBitsWithBlendERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEii9BlendMode(%class.CFX_RenderDevice* %0, %"class.fxcrt::RetainPtr.25"* nonnull dereferenceable(8) %32, i32 %1567, i32 %1568, i32 0) #11
  %1570 = getelementptr inbounds %"class.fxcrt::RetainPtr.25", %"class.fxcrt::RetainPtr.25"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %1571 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %1570, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %1570, align 8
  %1572 = icmp eq %class.CFX_DIBBase* %1571, null
  br i1 %1572, label %1584, label %1573

1573:                                             ; preds = %1566
  %1574 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %1571, i64 0, i32 0, i32 1
  %1575 = load i64, i64* %1574, align 8
  %1576 = add nsw i64 %1575, -1
  store i64 %1576, i64* %1574, align 8
  %1577 = icmp eq i64 %1576, 0
  br i1 %1577, label %1578, label %1584

1578:                                             ; preds = %1573
  %1579 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %1571, i64 0, i32 0
  %1580 = bitcast %class.CFX_DIBBase* %1571 to void (%"class.fxcrt::Retainable"*)***
  %1581 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %1580, align 8
  %1582 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %1581, i64 1
  %1583 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %1582, align 8
  call void %1583(%"class.fxcrt::Retainable"* nonnull %1579) #11
  br label %1584

1584:                                             ; preds = %1566, %1573, %1578
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1558) #11
  br label %1585

1585:                                             ; preds = %527, %1584, %1556, %1507, %514, %532, %516, %507
  %1586 = phi i1 [ false, %507 ], [ false, %516 ], [ false, %532 ], [ false, %514 ], [ false, %1507 ], [ true, %1584 ], [ true, %1556 ], [ false, %527 ]
  %1587 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %494, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %494, align 8
  %1588 = icmp eq %class.CFX_DIBitmap* %1587, null
  br i1 %1588, label %1600, label %1589

1589:                                             ; preds = %1585
  %1590 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %1587, i64 0, i32 0, i32 0, i32 1
  %1591 = load i64, i64* %1590, align 8
  %1592 = add nsw i64 %1591, -1
  store i64 %1592, i64* %1590, align 8
  %1593 = icmp eq i64 %1592, 0
  br i1 %1593, label %1594, label %1600

1594:                                             ; preds = %1589
  %1595 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %1587, i64 0, i32 0, i32 0
  %1596 = bitcast %class.CFX_DIBitmap* %1587 to void (%"class.fxcrt::Retainable"*)***
  %1597 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %1596, align 8
  %1598 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %1597, i64 1
  %1599 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %1598, align 8
  call void %1599(%"class.fxcrt::Retainable"* nonnull %1595) #11
  br label %1600

1600:                                             ; preds = %1585, %1589, %1594
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %493) #11
  br label %1601

1601:                                             ; preds = %365, %349, %486, %481, %1600
  %1602 = phi i1 [ true, %365 ], [ %1586, %1600 ], [ %482, %481 ], [ %482, %486 ], [ true, %349 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %351) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %169) #11
  %1603 = load %class.TextGlyphPos*, %class.TextGlyphPos** %134, align 8
  %1604 = icmp eq %class.TextGlyphPos* %1603, null
  br i1 %1604, label %1618, label %1605

1605:                                             ; preds = %1601
  %1606 = bitcast %class.TextGlyphPos* %1603 to i8*
  %1607 = load %class.TextGlyphPos*, %class.TextGlyphPos** %135, align 8
  %1608 = icmp eq %class.TextGlyphPos* %1607, %1603
  br i1 %1608, label %1616, label %1609

1609:                                             ; preds = %1605, %1609
  %1610 = phi %class.TextGlyphPos* [ %1611, %1609 ], [ %1607, %1605 ]
  %1611 = getelementptr inbounds %class.TextGlyphPos, %class.TextGlyphPos* %1610, i64 -1
  call void @_ZN12TextGlyphPosD1Ev(%class.TextGlyphPos* %1611) #11
  %1612 = icmp eq %class.TextGlyphPos* %1611, %1603
  br i1 %1612, label %1613, label %1609

1613:                                             ; preds = %1609
  %1614 = bitcast %"class.std::__1::vector.159"* %16 to i8**
  %1615 = load i8*, i8** %1614, align 8
  br label %1616

1616:                                             ; preds = %1613, %1605
  %1617 = phi i8* [ %1615, %1613 ], [ %1606, %1605 ]
  store %class.TextGlyphPos* %1603, %class.TextGlyphPos** %135, align 8
  call void @_ZdlPv(i8* %1617) #12
  br label %1618

1618:                                             ; preds = %1601, %1616
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %133) #11
  br label %1619

1619:                                             ; preds = %1618, %125
  %1620 = phi i1 [ %131, %125 ], [ %1602, %1618 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %105) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103) #11
  br label %1621

1621:                                             ; preds = %94, %88, %80, %1619
  %1622 = phi i1 [ %1620, %1619 ], [ true, %80 ], [ false, %88 ], [ true, %94 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #11
  ret i1 %1622
}

declare %class.CFX_GEModule* @_ZN12CFX_GEModule3GetEv() local_unnamed_addr #4

declare void @_ZN10CFX_Matrix5ScaleEff(%class.CFX_Matrix*, float, float) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16CFX_RenderDevice12DrawTextPathEiPK11TextCharPosP8CFX_FontfRK10CFX_MatrixPS6_PK18CFX_GraphStateDatajjP12CFX_PathDataRK21CFX_FillRenderOptions(%class.CFX_RenderDevice* nocapture readonly, i32, %class.TextCharPos* nocapture readonly, %class.CFX_Font*, float, %class.CFX_Matrix* nocapture readonly dereferenceable(24), %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %class.CFX_PathData*, %struct.CFX_FillRenderOptions* nocapture readonly dereferenceable(2)) local_unnamed_addr #0 align 2 {
  %13 = alloca %class.CFX_Matrix, align 16
  %14 = alloca %class.CFX_PathData, align 8
  %15 = alloca i16, align 2
  %16 = bitcast i16* %15 to %struct.CFX_FillRenderOptions*
  %17 = icmp sgt i32 %1, 0
  br i1 %17, label %18, label %141

18:                                               ; preds = %12
  %19 = bitcast %class.CFX_Matrix* %13 to i8*
  %20 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %13, i64 0, i32 0
  %21 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %13, i64 0, i32 1
  %22 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %13, i64 0, i32 2
  %23 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %13, i64 0, i32 3
  %24 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %13, i64 0, i32 4
  %25 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %13, i64 0, i32 5
  %26 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %5, i64 0, i32 2
  %27 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %5, i64 0, i32 4
  %28 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %5, i64 0, i32 5
  %29 = bitcast %class.CFX_PathData* %14 to i8*
  %30 = or i32 %9, %8
  %31 = icmp eq i32 %30, 0
  %32 = icmp eq i32 %8, 0
  %33 = bitcast i16* %15 to i8*
  %34 = getelementptr inbounds %struct.CFX_FillRenderOptions, %struct.CFX_FillRenderOptions* %16, i64 0, i32 1
  %35 = bitcast %struct.CFX_FillRenderOptions* %11 to i16*
  %36 = icmp eq %class.CFX_PathData* %10, null
  %37 = zext i32 %1 to i64
  %38 = fmul float %4, 0.000000e+00
  %39 = fadd float %38, 0.000000e+00
  %40 = bitcast %class.CFX_PathData* %14 to i8*
  %41 = insertelement <4 x float> <float undef, float 0.000000e+00, float undef, float 0.000000e+00>, float %4, i32 0
  %42 = insertelement <4 x float> %41, float %4, i32 2
  %43 = insertelement <4 x float> <float 0.000000e+00, float undef, float 0.000000e+00, float undef>, float %4, i32 1
  %44 = insertelement <4 x float> %43, float %4, i32 3
  %45 = bitcast %class.CFX_Matrix* %13 to <4 x float>*
  %46 = bitcast %class.CFX_Matrix* %13 to <4 x i32>*
  %47 = bitcast %class.CFX_Matrix* %13 to <4 x float>*
  %48 = bitcast %class.CFX_Matrix* %5 to <2 x float>*
  %49 = bitcast float* %26 to <2 x float>*
  %50 = bitcast %class.CFX_Matrix* %13 to <4 x float>*
  br label %51

51:                                               ; preds = %138, %18
  %52 = phi i64 [ 0, %18 ], [ %139, %138 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %45, align 16
  store float 0.000000e+00, float* %24, align 16
  store float 0.000000e+00, float* %25, align 4
  %53 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %2, i64 %52, i32 5
  %54 = load i8, i8* %53, align 4, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %64, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %2, i64 %52, i32 7, i64 0
  %58 = bitcast float* %57 to <4 x i32>*
  %59 = load <4 x i32>, <4 x i32>* %58, align 4
  store <4 x i32> %59, <4 x i32>* %46, align 16
  store float 0.000000e+00, float* %24, align 16
  store float 0.000000e+00, float* %25, align 4
  %60 = shufflevector <4 x i32> %59, <4 x i32> undef, <2 x i32> <i32 0, i32 2>
  %61 = bitcast <2 x i32> %60 to <2 x float>
  %62 = shufflevector <4 x i32> %59, <4 x i32> undef, <2 x i32> <i32 1, i32 3>
  %63 = bitcast <2 x i32> %62 to <2 x float>
  br label %64

64:                                               ; preds = %51, %56
  %65 = phi <2 x float> [ <float 1.000000e+00, float 0.000000e+00>, %51 ], [ %61, %56 ]
  %66 = phi <2 x float> [ <float 0.000000e+00, float 1.000000e+00>, %51 ], [ %63, %56 ]
  %67 = shufflevector <2 x float> %66, <2 x float> undef, <4 x i32> <i32 0, i32 0, i32 1, i32 1>
  %68 = shufflevector <2 x float> %65, <2 x float> undef, <4 x i32> <i32 0, i32 0, i32 1, i32 1>
  %69 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %2, i64 %52, i32 0, i32 0
  %70 = load float, float* %69, align 4
  %71 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %2, i64 %52, i32 0, i32 1
  %72 = load float, float* %71, align 4
  %73 = fmul <4 x float> %68, %42
  %74 = fmul <4 x float> %67, %44
  %75 = fadd <4 x float> %73, %74
  %76 = fadd float %70, %39
  %77 = fadd float %72, %39
  store <4 x float> %75, <4 x float>* %47, align 16
  store float %76, float* %24, align 16
  store float %77, float* %25, align 4
  %78 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %2, i64 %52, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %2, i64 %52, i32 3
  %81 = load i32, i32* %80, align 4
  %82 = call %class.CFX_PathData* @_ZNK8CFX_Font13LoadGlyphPathEji(%class.CFX_Font* %3, i32 %79, i32 %81) #11
  %83 = icmp eq %class.CFX_PathData* %82, null
  br i1 %83, label %138, label %84

84:                                               ; preds = %64
  %85 = load float, float* %20, align 16, !noalias !27
  %86 = load float, float* %21, align 4, !noalias !27
  %87 = load <2 x float>, <2 x float>* %48, align 4, !noalias !27
  %88 = shufflevector <2 x float> %87, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %89 = load <2 x float>, <2 x float>* %49, align 4, !noalias !27
  %90 = shufflevector <2 x float> %89, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %91 = load float, float* %22, align 8, !noalias !27
  %92 = load float, float* %23, align 4, !noalias !27
  %93 = insertelement <4 x float> undef, float %85, i32 0
  %94 = shufflevector <4 x float> %93, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %95 = extractelement <2 x float> %87, i32 0
  %96 = extractelement <2 x float> %87, i32 1
  %97 = shufflevector <4 x float> %94, <4 x float> %88, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %98 = insertelement <4 x float> undef, float %95, i32 0
  %99 = insertelement <4 x float> %98, float %96, i32 1
  %100 = insertelement <4 x float> %99, float %91, i32 2
  %101 = insertelement <4 x float> %100, float %91, i32 3
  %102 = fmul <4 x float> %97, %101
  %103 = insertelement <4 x float> undef, float %86, i32 0
  %104 = shufflevector <4 x float> %103, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %105 = extractelement <2 x float> %89, i32 0
  %106 = extractelement <2 x float> %89, i32 1
  %107 = shufflevector <4 x float> %104, <4 x float> %90, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %108 = insertelement <4 x float> undef, float %105, i32 0
  %109 = insertelement <4 x float> %108, float %106, i32 1
  %110 = insertelement <4 x float> %109, float %92, i32 2
  %111 = insertelement <4 x float> %110, float %92, i32 3
  %112 = fmul <4 x float> %107, %111
  %113 = fadd <4 x float> %102, %112
  %114 = load float, float* %24, align 16, !noalias !27
  %115 = fmul float %95, %114
  %116 = load float, float* %25, align 4, !noalias !27
  %117 = fmul float %105, %116
  %118 = fadd float %115, %117
  %119 = load float, float* %27, align 4, !noalias !27
  %120 = fadd float %119, %118
  %121 = fmul float %96, %114
  %122 = fmul float %106, %116
  %123 = fadd float %121, %122
  %124 = load float, float* %28, align 4, !noalias !27
  %125 = fadd float %123, %124
  store <4 x float> %113, <4 x float>* %50, align 16
  store float %120, float* %24, align 16
  store float %125, float* %25, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 24, i1 false)
  call void @_ZN12CFX_PathDataC1ERKS_(%class.CFX_PathData* nonnull %14, %class.CFX_PathData* nonnull dereferenceable(24) %82) #11
  call void @_ZN12CFX_PathData9TransformERK10CFX_Matrix(%class.CFX_PathData* nonnull %14, %class.CFX_Matrix* nonnull dereferenceable(24) %13) #11
  br i1 %31, label %134, label %126

126:                                              ; preds = %84
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %33) #11
  %127 = load i16, i16* %35, align 1
  store i16 %127, i16* %15, align 2
  %128 = lshr i16 %127, 8
  %129 = trunc i16 %128 to i8
  br i1 %32, label %131, label %130

130:                                              ; preds = %126
  store i8 2, i8* %33, align 2
  br label %131

131:                                              ; preds = %126, %130
  %132 = or i8 %129, 64
  store i8 %132, i8* %34, align 1
  %133 = call zeroext i1 @_ZN16CFX_RenderDevice17DrawPathWithBlendEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions9BlendMode(%class.CFX_RenderDevice* %0, %class.CFX_PathData* nonnull %14, %class.CFX_Matrix* %6, %class.CFX_GraphStateData* %7, i32 %8, i32 %9, %struct.CFX_FillRenderOptions* nonnull dereferenceable(2) %16, i32 0)
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %33) #11
  br i1 %133, label %134, label %137

134:                                              ; preds = %84, %131
  br i1 %36, label %136, label %135

135:                                              ; preds = %134
  call void @_ZN12CFX_PathData6AppendERKS_PK10CFX_Matrix(%class.CFX_PathData* nonnull %10, %class.CFX_PathData* nonnull dereferenceable(24) %14, %class.CFX_Matrix* %6) #11
  br label %136

136:                                              ; preds = %134, %135
  call void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #11
  br label %138

137:                                              ; preds = %131
  call void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  br label %141

138:                                              ; preds = %64, %136
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  %139 = add nuw nsw i64 %52, 1
  %140 = icmp eq i64 %139, %37
  br i1 %140, label %141, label %51

141:                                              ; preds = %138, %12, %137
  %142 = phi i1 [ false, %137 ], [ true, %12 ], [ true, %138 ]
  ret i1 %142
}

declare i32 @FXSYS_roundf(float) local_unnamed_addr #4

declare %class.CFX_GlyphBitmap* @_ZNK8CFX_Font15LoadGlyphBitmapEjbRK10CFX_MatrixiiP21CFX_TextRenderOptions(%class.CFX_Font*, i32, i1 zeroext, %class.CFX_Matrix* dereferenceable(24), i32, i32, %struct.CFX_TextRenderOptions*) local_unnamed_addr #4

declare { i64, i64 } @_Z13GetGlyphsBBoxRKNSt3__16vectorI12TextGlyphPosNS_9allocatorIS1_EEEEi(%"class.std::__1::vector.159"* dereferenceable(24), i32) local_unnamed_addr #4

declare void @_ZNK12TextGlyphPos9GetOriginERK13CFX_PTemplateIiE(%"class.pdfium::Optional.168"* sret, %class.TextGlyphPos*, %class.CFX_PTemplate.162* dereferenceable(8)) local_unnamed_addr #4

declare zeroext i1 @_ZN12CFX_DIBitmap14TransferBitmapEiiiiRKN5fxcrt9RetainPtrI11CFX_DIBBaseEEii(%class.CFX_DIBitmap*, i32, i32, i32, i32, %"class.fxcrt::RetainPtr.25"* dereferenceable(8), i32, i32) local_unnamed_addr #4

declare void @_ZN11CFX_DIBBase12GetAlphaMaskEv(%"class.fxcrt::RetainPtr"* sret, %class.CFX_DIBBase*) local_unnamed_addr #4

declare { i64, i64 } @_Z10ArgbDecodej(i32) local_unnamed_addr #4

declare zeroext i1 @_ZN12CFX_DIBitmap13CompositeMaskEiiiiRKN5fxcrt9RetainPtrI11CFX_DIBBaseEEjii9BlendModePK11CFX_ClipRgnb(%class.CFX_DIBitmap*, i32, i32, i32, i32, %"class.fxcrt::RetainPtr.25"* dereferenceable(8), i32, i32, i32, i32, %class.CFX_ClipRgn*, i1 zeroext) local_unnamed_addr #4

declare %class.CFX_PathData* @_ZNK8CFX_Font13LoadGlyphPathEji(%class.CFX_Font*, i32, i32) local_unnamed_addr #4

declare void @_ZN12CFX_PathDataC1ERKS_(%class.CFX_PathData*, %class.CFX_PathData* dereferenceable(24)) unnamed_addr #4

declare void @_ZN12CFX_PathData9TransformERK10CFX_Matrix(%class.CFX_PathData*, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #4

declare void @_ZN12CFX_PathData6AppendERKS_PK10CFX_Matrix(%class.CFX_PathData*, %class.CFX_PathData* dereferenceable(24), %class.CFX_Matrix*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_RenderDevice12DrawFillRectEPK10CFX_MatrixRK13CFX_FloatRectRKj(%class.CFX_RenderDevice* nocapture readonly, %class.CFX_Matrix*, %class.CFX_FloatRect* dereferenceable(16), i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.CFX_PathData, align 8
  %6 = alloca i16, align 2
  %7 = bitcast i16* %6 to %struct.CFX_FillRenderOptions*
  %8 = bitcast %class.CFX_PathData* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  %9 = bitcast %class.CFX_PathData* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  call void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData* nonnull %5) #11
  call void @_ZN12CFX_PathData15AppendFloatRectERK13CFX_FloatRect(%class.CFX_PathData* nonnull %5, %class.CFX_FloatRect* dereferenceable(16) %2) #11
  %10 = load i32, i32* %3, align 4
  %11 = bitcast i16* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %11) #11
  store i16 2, i16* %6, align 2
  %12 = call zeroext i1 @_ZN16CFX_RenderDevice17DrawPathWithBlendEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions9BlendMode(%class.CFX_RenderDevice* %0, %class.CFX_PathData* nonnull %5, %class.CFX_Matrix* %1, %class.CFX_GraphStateData* null, i32 %10, i32 0, %struct.CFX_FillRenderOptions* nonnull dereferenceable(2) %7, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %11) #11
  call void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  ret void
}

declare void @_ZN12CFX_PathData15AppendFloatRectERK13CFX_FloatRect(%class.CFX_PathData*, %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_RenderDevice12DrawFillAreaERK10CFX_MatrixRKNSt3__16vectorI13CFX_PTemplateIfENS3_9allocatorIS6_EEEERKj(%class.CFX_RenderDevice* nocapture readonly, %class.CFX_Matrix* dereferenceable(24), %"class.std::__1::vector.182"* nocapture readonly dereferenceable(24), i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.CFX_PathData, align 8
  %6 = alloca i16, align 2
  %7 = bitcast i16* %6 to %struct.CFX_FillRenderOptions*
  %8 = bitcast %class.CFX_PathData* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  %9 = bitcast %class.CFX_PathData* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  call void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData* nonnull %5) #11
  %10 = getelementptr inbounds %"class.std::__1::vector.182", %"class.std::__1::vector.182"* %2, i64 0, i32 0, i32 0
  %11 = load %class.CFX_PTemplate*, %class.CFX_PTemplate** %10, align 8
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %5, %class.CFX_PTemplate* dereferenceable(8) %11, i8 zeroext 2) #11
  %12 = getelementptr inbounds %"class.std::__1::vector.182", %"class.std::__1::vector.182"* %2, i64 0, i32 0, i32 1
  %13 = bitcast %class.CFX_PTemplate** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.182"* %2 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = ashr exact i64 %17, 3
  %19 = icmp ugt i64 %18, 1
  br i1 %19, label %24, label %20

20:                                               ; preds = %24, %4
  %21 = load i32, i32* %3, align 4
  %22 = bitcast i16* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %22) #11
  store i16 1, i16* %6, align 2
  %23 = call zeroext i1 @_ZN16CFX_RenderDevice17DrawPathWithBlendEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions9BlendMode(%class.CFX_RenderDevice* %0, %class.CFX_PathData* nonnull %5, %class.CFX_Matrix* %1, %class.CFX_GraphStateData* null, i32 %21, i32 0, %struct.CFX_FillRenderOptions* nonnull dereferenceable(2) %7, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %22) #11
  call void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  ret void

24:                                               ; preds = %4, %24
  %25 = phi i64 [ %31, %24 ], [ %16, %4 ]
  %26 = phi i64 [ %29, %24 ], [ 1, %4 ]
  %27 = inttoptr i64 %25 to %class.CFX_PTemplate*
  %28 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %27, i64 %26
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %5, %class.CFX_PTemplate* dereferenceable(8) %28, i8 zeroext 0) #11
  %29 = add nuw i64 %26, 1
  %30 = load i64, i64* %13, align 8
  %31 = load i64, i64* %15, align 8
  %32 = sub i64 %30, %31
  %33 = ashr exact i64 %32, 3
  %34 = icmp ult i64 %29, %33
  br i1 %34, label %24, label %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_RenderDevice14DrawStrokeRectERK10CFX_MatrixRK13CFX_FloatRectRKjf(%class.CFX_RenderDevice* nocapture readonly, %class.CFX_Matrix* dereferenceable(24), %class.CFX_FloatRect* dereferenceable(16), i32* nocapture readonly dereferenceable(4), float) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.CFX_GraphStateData, align 8
  %7 = alloca %class.CFX_PathData, align 8
  %8 = alloca i16, align 2
  %9 = bitcast i16* %8 to %struct.CFX_FillRenderOptions*
  %10 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 getelementptr inbounds ({ i8, i8, [2 x i8], float, float, float, %"class.std::__1::vector.17" }, { i8, i8, [2 x i8], float, float, float, %"class.std::__1::vector.17" }* @__const._ZN16CFX_RenderDevice10DrawBorderEPK10CFX_MatrixRK13CFX_FloatRectfRK9CFX_ColorS8_S8_11BorderStylei.gsd.3, i64 0, i32 0), i64 40, i1 false)
  call void @_ZN18CFX_GraphStateDataC1Ev(%class.CFX_GraphStateData* nonnull %6) #11
  %11 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %6, i64 0, i32 4
  store float %4, float* %11, align 4
  %12 = bitcast %class.CFX_PathData* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #11
  %13 = bitcast %class.CFX_PathData* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 24, i1 false)
  call void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData* nonnull %7) #11
  call void @_ZN12CFX_PathData15AppendFloatRectERK13CFX_FloatRect(%class.CFX_PathData* nonnull %7, %class.CFX_FloatRect* dereferenceable(16) %2) #11
  %14 = load i32, i32* %3, align 4
  %15 = bitcast i16* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %15) #11
  store i16 1, i16* %8, align 2
  %16 = call zeroext i1 @_ZN16CFX_RenderDevice17DrawPathWithBlendEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions9BlendMode(%class.CFX_RenderDevice* %0, %class.CFX_PathData* nonnull %7, %class.CFX_Matrix* %1, %class.CFX_GraphStateData* nonnull %6, i32 0, i32 %14, %struct.CFX_FillRenderOptions* nonnull dereferenceable(2) %9, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %15) #11
  call void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #11
  call void @_ZN18CFX_GraphStateDataD1Ev(%class.CFX_GraphStateData* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_RenderDevice14DrawStrokeLineEPK10CFX_MatrixRK13CFX_PTemplateIfES6_RKjf(%class.CFX_RenderDevice* nocapture readonly, %class.CFX_Matrix*, %class.CFX_PTemplate* dereferenceable(8), %class.CFX_PTemplate* dereferenceable(8), i32* nocapture readonly dereferenceable(4), float) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.CFX_PathData, align 8
  %8 = alloca %class.CFX_GraphStateData, align 8
  %9 = alloca i16, align 2
  %10 = bitcast i16* %9 to %struct.CFX_FillRenderOptions*
  %11 = bitcast %class.CFX_PathData* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  %12 = bitcast %class.CFX_PathData* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  call void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData* nonnull %7) #11
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %7, %class.CFX_PTemplate* dereferenceable(8) %2, i8 zeroext 2) #11
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %7, %class.CFX_PTemplate* dereferenceable(8) %3, i8 zeroext 0) #11
  %13 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 getelementptr inbounds ({ i8, i8, [2 x i8], float, float, float, %"class.std::__1::vector.17" }, { i8, i8, [2 x i8], float, float, float, %"class.std::__1::vector.17" }* @__const._ZN16CFX_RenderDevice10DrawBorderEPK10CFX_MatrixRK13CFX_FloatRectfRK9CFX_ColorS8_S8_11BorderStylei.gsd.3, i64 0, i32 0), i64 40, i1 false)
  call void @_ZN18CFX_GraphStateDataC1Ev(%class.CFX_GraphStateData* nonnull %8) #11
  %14 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %8, i64 0, i32 4
  store float %5, float* %14, align 4
  %15 = load i32, i32* %4, align 4
  %16 = bitcast i16* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %16) #11
  store i16 1, i16* %9, align 2
  %17 = call zeroext i1 @_ZN16CFX_RenderDevice17DrawPathWithBlendEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions9BlendMode(%class.CFX_RenderDevice* %0, %class.CFX_PathData* nonnull %7, %class.CFX_Matrix* %1, %class.CFX_GraphStateData* nonnull %8, i32 0, i32 %15, %struct.CFX_FillRenderOptions* nonnull dereferenceable(2) %10, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %16) #11
  call void @_ZN18CFX_GraphStateDataD1Ev(%class.CFX_GraphStateData* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #11
  call void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_RenderDevice12DrawFillRectEPK10CFX_MatrixRK13CFX_FloatRectRK9CFX_Colori(%class.CFX_RenderDevice* nocapture readonly, %class.CFX_Matrix*, %class.CFX_FloatRect* dereferenceable(16), %struct.CFX_Color* dereferenceable(20), i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.CFX_PathData, align 8
  %7 = alloca i16, align 2
  %8 = tail call i32 @_ZNK9CFX_Color9ToFXColorEi(%struct.CFX_Color* %3, i32 %4) #11
  %9 = bitcast i16* %7 to %struct.CFX_FillRenderOptions*
  %10 = bitcast %class.CFX_PathData* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false) #11
  call void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData* nonnull %6) #11
  call void @_ZN12CFX_PathData15AppendFloatRectERK13CFX_FloatRect(%class.CFX_PathData* nonnull %6, %class.CFX_FloatRect* dereferenceable(16) %2) #11
  %11 = bitcast i16* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %11) #11
  store i16 2, i16* %7, align 2
  %12 = call zeroext i1 @_ZN16CFX_RenderDevice17DrawPathWithBlendEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions9BlendMode(%class.CFX_RenderDevice* %0, %class.CFX_PathData* nonnull %6, %class.CFX_Matrix* %1, %class.CFX_GraphStateData* null, i32 %8, i32 0, %struct.CFX_FillRenderOptions* nonnull dereferenceable(2) %9, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %11) #11
  call void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #11
  ret void
}

declare i32 @_ZNK9CFX_Color9ToFXColorEi(%struct.CFX_Color*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_RenderDevice10DrawShadowERK10CFX_MatrixbbRK13CFX_FloatRectiii(%class.CFX_RenderDevice* nocapture readonly, %class.CFX_Matrix* dereferenceable(24), i1 zeroext, i1 zeroext, %class.CFX_FloatRect* nocapture readonly dereferenceable(16), i32, i32, i32) local_unnamed_addr #0 align 2 {
  %9 = alloca %class.CFX_PathData, align 8
  %10 = alloca %class.CFX_GraphStateData, align 8
  %11 = alloca i16, align 2
  %12 = alloca %class.CFX_PathData, align 8
  %13 = alloca %class.CFX_GraphStateData, align 8
  %14 = alloca i16, align 2
  %15 = alloca %class.CFX_PTemplate, align 4
  %16 = alloca %class.CFX_PTemplate, align 4
  %17 = alloca %class.CFX_PTemplate, align 4
  %18 = alloca %class.CFX_PTemplate, align 4
  br i1 %2, label %19, label %69

19:                                               ; preds = %8
  %20 = sub nsw i32 %7, %6
  %21 = sitofp i32 %20 to float
  %22 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %4, i64 0, i32 3
  %23 = load float, float* %22, align 4
  %24 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %4, i64 0, i32 1
  %25 = load float, float* %24, align 4
  %26 = fsub float %23, %25
  %27 = fdiv float %21, %26
  %28 = bitcast %class.CFX_PTemplate* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  %29 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %15, i64 0, i32 1
  %30 = bitcast %class.CFX_FloatRect* %4 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = bitcast %class.CFX_PTemplate* %15 to i32*
  store i32 %31, i32* %32, align 4
  store float 0.000000e+00, float* %29, align 4
  %33 = bitcast %class.CFX_PTemplate* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  %34 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %16, i64 0, i32 1
  %35 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %4, i64 0, i32 2
  %36 = bitcast float* %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = bitcast %class.CFX_PTemplate* %16 to i32*
  store i32 %37, i32* %38, align 4
  store float 0.000000e+00, float* %34, align 4
  %39 = fadd float %25, 5.000000e-01
  %40 = fadd float %23, -5.000000e-01
  %41 = fcmp ugt float %39, %40
  br i1 %41, label %49, label %42

42:                                               ; preds = %19
  %43 = shl i32 %5, 24
  %44 = bitcast i16* %11 to %struct.CFX_FillRenderOptions*
  %45 = bitcast %class.CFX_PathData* %9 to i8*
  %46 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %10, i64 0, i32 0
  %47 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %10, i64 0, i32 4
  %48 = bitcast i16* %11 to i8*
  br label %50

49:                                               ; preds = %50, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %69

50:                                               ; preds = %67, %42
  %51 = phi float [ %25, %42 ], [ %68, %67 ]
  %52 = phi float [ %39, %42 ], [ %63, %67 ]
  store float %52, float* %29, align 4
  store float %52, float* %34, align 4
  %53 = fsub float %52, %51
  %54 = fmul float %27, %53
  %55 = fptosi float %54 to i32
  %56 = add nsw i32 %55, %6
  %57 = shl i32 %56, 16
  %58 = shl i32 %56, 8
  %59 = or i32 %56, %43
  %60 = or i32 %59, %57
  %61 = or i32 %60, %58
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 24, i1 false) #11
  call void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData* nonnull %9) #11
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %9, %class.CFX_PTemplate* nonnull dereferenceable(8) %15, i8 zeroext 2) #11
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %9, %class.CFX_PTemplate* nonnull dereferenceable(8) %16, i8 zeroext 0) #11
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %46) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %46, i8* align 8 getelementptr inbounds ({ i8, i8, [2 x i8], float, float, float, %"class.std::__1::vector.17" }, { i8, i8, [2 x i8], float, float, float, %"class.std::__1::vector.17" }* @__const._ZN16CFX_RenderDevice10DrawBorderEPK10CFX_MatrixRK13CFX_FloatRectfRK9CFX_ColorS8_S8_11BorderStylei.gsd.3, i64 0, i32 0), i64 40, i1 false) #11
  call void @_ZN18CFX_GraphStateDataC1Ev(%class.CFX_GraphStateData* nonnull %10) #11
  store float 1.500000e+00, float* %47, align 4
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %48) #11
  store i16 1, i16* %11, align 2
  %62 = call zeroext i1 @_ZN16CFX_RenderDevice17DrawPathWithBlendEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions9BlendMode(%class.CFX_RenderDevice* %0, %class.CFX_PathData* nonnull %9, %class.CFX_Matrix* %1, %class.CFX_GraphStateData* nonnull %10, i32 0, i32 %61, %struct.CFX_FillRenderOptions* nonnull dereferenceable(2) %44, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %48) #11
  call void @_ZN18CFX_GraphStateDataD1Ev(%class.CFX_GraphStateData* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %46) #11
  call void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #11
  %63 = fadd float %52, 1.000000e+00
  %64 = load float, float* %22, align 4
  %65 = fadd float %64, -5.000000e-01
  %66 = fcmp ugt float %63, %65
  br i1 %66, label %49, label %67

67:                                               ; preds = %50
  %68 = load float, float* %24, align 4
  br label %50

69:                                               ; preds = %49, %8
  br i1 %3, label %70, label %123

70:                                               ; preds = %69
  %71 = sub nsw i32 %7, %6
  %72 = sitofp i32 %71 to float
  %73 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %4, i64 0, i32 2
  %74 = load float, float* %73, align 4
  %75 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %4, i64 0, i32 0
  %76 = load float, float* %75, align 4
  %77 = fsub float %74, %76
  %78 = fdiv float %72, %77
  %79 = bitcast %class.CFX_PTemplate* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #11
  %80 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %17, i64 0, i32 0
  %81 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %17, i64 0, i32 1
  %82 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %4, i64 0, i32 1
  %83 = bitcast float* %82 to i32*
  %84 = load i32, i32* %83, align 4
  store float 0.000000e+00, float* %80, align 4
  %85 = bitcast float* %81 to i32*
  store i32 %84, i32* %85, align 4
  %86 = bitcast %class.CFX_PTemplate* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #11
  %87 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %18, i64 0, i32 0
  %88 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %18, i64 0, i32 1
  %89 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %4, i64 0, i32 3
  %90 = bitcast float* %89 to i32*
  %91 = load i32, i32* %90, align 4
  store float 0.000000e+00, float* %87, align 4
  %92 = bitcast float* %88 to i32*
  store i32 %91, i32* %92, align 4
  %93 = fadd float %76, 5.000000e-01
  %94 = fadd float %74, -5.000000e-01
  %95 = fcmp ugt float %93, %94
  br i1 %95, label %103, label %96

96:                                               ; preds = %70
  %97 = shl i32 %5, 24
  %98 = bitcast i16* %14 to %struct.CFX_FillRenderOptions*
  %99 = bitcast %class.CFX_PathData* %12 to i8*
  %100 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %13, i64 0, i32 0
  %101 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %13, i64 0, i32 4
  %102 = bitcast i16* %14 to i8*
  br label %104

103:                                              ; preds = %104, %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #11
  br label %123

104:                                              ; preds = %121, %96
  %105 = phi float [ %76, %96 ], [ %122, %121 ]
  %106 = phi float [ %93, %96 ], [ %117, %121 ]
  store float %106, float* %80, align 4
  store float %106, float* %87, align 4
  %107 = fsub float %106, %105
  %108 = fmul float %78, %107
  %109 = fptosi float %108 to i32
  %110 = add nsw i32 %109, %6
  %111 = shl i32 %110, 16
  %112 = shl i32 %110, 8
  %113 = or i32 %110, %97
  %114 = or i32 %113, %111
  %115 = or i32 %114, %112
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %99) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %99, i8 -86, i64 24, i1 false) #11
  call void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData* nonnull %12) #11
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %12, %class.CFX_PTemplate* nonnull dereferenceable(8) %17, i8 zeroext 2) #11
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %12, %class.CFX_PTemplate* nonnull dereferenceable(8) %18, i8 zeroext 0) #11
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %100) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %100, i8* align 8 getelementptr inbounds ({ i8, i8, [2 x i8], float, float, float, %"class.std::__1::vector.17" }, { i8, i8, [2 x i8], float, float, float, %"class.std::__1::vector.17" }* @__const._ZN16CFX_RenderDevice10DrawBorderEPK10CFX_MatrixRK13CFX_FloatRectfRK9CFX_ColorS8_S8_11BorderStylei.gsd.3, i64 0, i32 0), i64 40, i1 false) #11
  call void @_ZN18CFX_GraphStateDataC1Ev(%class.CFX_GraphStateData* nonnull %13) #11
  store float 1.500000e+00, float* %101, align 4
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %102) #11
  store i16 1, i16* %14, align 2
  %116 = call zeroext i1 @_ZN16CFX_RenderDevice17DrawPathWithBlendEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions9BlendMode(%class.CFX_RenderDevice* %0, %class.CFX_PathData* nonnull %12, %class.CFX_Matrix* %1, %class.CFX_GraphStateData* nonnull %13, i32 0, i32 %115, %struct.CFX_FillRenderOptions* nonnull dereferenceable(2) %98, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %102) #11
  call void @_ZN18CFX_GraphStateDataD1Ev(%class.CFX_GraphStateData* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %100) #11
  call void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %99) #11
  %117 = fadd float %106, 1.000000e+00
  %118 = load float, float* %73, align 4
  %119 = fadd float %118, -5.000000e-01
  %120 = fcmp ugt float %117, %119
  br i1 %120, label %103, label %121

121:                                              ; preds = %104
  %122 = load float, float* %75, align 4
  br label %104

123:                                              ; preds = %103, %69
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_RenderDevice10DrawBorderEPK10CFX_MatrixRK13CFX_FloatRectfRK9CFX_ColorS8_S8_11BorderStylei(%class.CFX_RenderDevice* nocapture readonly, %class.CFX_Matrix*, %class.CFX_FloatRect* nocapture readonly dereferenceable(16), float, %struct.CFX_Color* dereferenceable(20), %struct.CFX_Color* dereferenceable(20), %struct.CFX_Color* dereferenceable(20), i32, i32) local_unnamed_addr #0 align 2 {
  %10 = alloca %class.CFX_PathData, align 8
  %11 = alloca i16, align 2
  %12 = bitcast i16* %11 to %struct.CFX_FillRenderOptions*
  %13 = alloca %class.CFX_GraphStateData, align 8
  %14 = alloca %class.CFX_PathData, align 8
  %15 = alloca %class.CFX_PTemplate, align 4
  %16 = alloca %class.CFX_PTemplate, align 4
  %17 = alloca %class.CFX_PTemplate, align 4
  %18 = alloca %class.CFX_PTemplate, align 4
  %19 = alloca %class.CFX_PTemplate, align 4
  %20 = alloca i16, align 2
  %21 = bitcast i16* %20 to %struct.CFX_FillRenderOptions*
  %22 = alloca %class.CFX_GraphStateData, align 8
  %23 = alloca %class.CFX_PathData, align 8
  %24 = alloca %class.CFX_PTemplate, align 4
  %25 = alloca %class.CFX_PTemplate, align 4
  %26 = alloca %class.CFX_PTemplate, align 4
  %27 = alloca %class.CFX_PTemplate, align 4
  %28 = alloca %class.CFX_PTemplate, align 4
  %29 = alloca %class.CFX_PTemplate, align 4
  %30 = alloca %class.CFX_PTemplate, align 4
  %31 = alloca i16, align 2
  %32 = bitcast i16* %31 to %struct.CFX_FillRenderOptions*
  %33 = alloca %class.CFX_PathData, align 8
  %34 = alloca %class.CFX_PTemplate, align 4
  %35 = alloca %class.CFX_PTemplate, align 4
  %36 = alloca %class.CFX_PTemplate, align 4
  %37 = alloca %class.CFX_PTemplate, align 4
  %38 = alloca %class.CFX_PTemplate, align 4
  %39 = alloca %class.CFX_PTemplate, align 4
  %40 = alloca %class.CFX_PTemplate, align 4
  %41 = alloca i16, align 2
  %42 = bitcast i16* %41 to %struct.CFX_FillRenderOptions*
  %43 = alloca %class.CFX_PathData, align 8
  %44 = alloca i16, align 2
  %45 = bitcast i16* %44 to %struct.CFX_FillRenderOptions*
  %46 = alloca %class.CFX_GraphStateData, align 8
  %47 = alloca %class.CFX_PathData, align 8
  %48 = alloca %class.CFX_PTemplate, align 4
  %49 = alloca %class.CFX_PTemplate, align 4
  %50 = alloca i16, align 2
  %51 = bitcast i16* %50 to %struct.CFX_FillRenderOptions*
  %52 = fcmp ugt float %3, 0.000000e+00
  br i1 %52, label %53, label %185

53:                                               ; preds = %9
  %54 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %2, i64 0, i32 0
  %55 = load float, float* %54, align 4
  %56 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %2, i64 0, i32 2
  %57 = load float, float* %56, align 4
  %58 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %2, i64 0, i32 3
  %59 = load float, float* %58, align 4
  %60 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %2, i64 0, i32 1
  %61 = load float, float* %60, align 4
  %62 = fmul float %3, 5.000000e-01
  switch i32 %7, label %63 [
    i32 4, label %170
    i32 1, label %73
    i32 2, label %102
    i32 3, label %102
  ]

63:                                               ; preds = %53
  %64 = bitcast %class.CFX_PathData* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #11
  %65 = bitcast %class.CFX_PathData* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 24, i1 false)
  call void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData* nonnull %10) #11
  call void @_ZN12CFX_PathData10AppendRectEffff(%class.CFX_PathData* nonnull %10, float %55, float %61, float %57, float %59) #11
  %66 = fadd float %55, %3
  %67 = fadd float %61, %3
  %68 = fsub float %57, %3
  %69 = fsub float %59, %3
  call void @_ZN12CFX_PathData10AppendRectEffff(%class.CFX_PathData* nonnull %10, float %66, float %67, float %68, float %69) #11
  %70 = call i32 @_ZNK9CFX_Color9ToFXColorEi(%struct.CFX_Color* %4, i32 %8) #11
  %71 = bitcast i16* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %71) #11
  store i16 1, i16* %11, align 2
  %72 = call zeroext i1 @_ZN16CFX_RenderDevice17DrawPathWithBlendEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions9BlendMode(%class.CFX_RenderDevice* %0, %class.CFX_PathData* nonnull %10, %class.CFX_Matrix* %1, %class.CFX_GraphStateData* null, i32 %70, i32 0, %struct.CFX_FillRenderOptions* nonnull dereferenceable(2) %12, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %71) #11
  call void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #11
  br label %185

73:                                               ; preds = %53
  %74 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %13, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %74) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 getelementptr inbounds ({ i8, i8, [2 x i8], float, float, float, %"class.std::__1::vector.17" }, { i8, i8, [2 x i8], float, float, float, %"class.std::__1::vector.17" }* @__const._ZN16CFX_RenderDevice10DrawBorderEPK10CFX_MatrixRK13CFX_FloatRectfRK9CFX_ColorS8_S8_11BorderStylei.gsd.3, i64 0, i32 0), i64 40, i1 false)
  call void @_ZN18CFX_GraphStateDataC1Ev(%class.CFX_GraphStateData* nonnull %13) #11
  %75 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %13, i64 0, i32 5
  call void @_ZNSt3__16vectorIfNS_9allocatorIfEEE6assignIPKfEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.17"* %75, float* getelementptr inbounds ([2 x float], [2 x float]* @.ref.tmp, i64 0, i64 0), float* getelementptr inbounds ([2 x float], [2 x float]* @.ref.tmp, i64 1, i64 0)) #11
  %76 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %13, i64 0, i32 2
  store float 0.000000e+00, float* %76, align 4
  %77 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %13, i64 0, i32 4
  store float %3, float* %77, align 4
  %78 = bitcast %class.CFX_PathData* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #11
  %79 = bitcast %class.CFX_PathData* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 -86, i64 24, i1 false)
  call void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData* nonnull %14) #11
  %80 = bitcast %class.CFX_PTemplate* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #11
  %81 = fadd float %62, %55
  %82 = fadd float %62, %61
  %83 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %15, i64 0, i32 0
  store float %81, float* %83, align 4
  %84 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %15, i64 0, i32 1
  store float %82, float* %84, align 4
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %14, %class.CFX_PTemplate* nonnull dereferenceable(8) %15, i8 zeroext 2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #11
  %85 = bitcast %class.CFX_PTemplate* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #11
  %86 = fsub float %59, %62
  %87 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %16, i64 0, i32 0
  store float %81, float* %87, align 4
  %88 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %16, i64 0, i32 1
  store float %86, float* %88, align 4
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %14, %class.CFX_PTemplate* nonnull dereferenceable(8) %16, i8 zeroext 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #11
  %89 = bitcast %class.CFX_PTemplate* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #11
  %90 = fsub float %57, %62
  %91 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %17, i64 0, i32 0
  store float %90, float* %91, align 4
  %92 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %17, i64 0, i32 1
  store float %86, float* %92, align 4
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %14, %class.CFX_PTemplate* nonnull dereferenceable(8) %17, i8 zeroext 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #11
  %93 = bitcast %class.CFX_PTemplate* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #11
  %94 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %18, i64 0, i32 0
  store float %90, float* %94, align 4
  %95 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %18, i64 0, i32 1
  store float %82, float* %95, align 4
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %14, %class.CFX_PTemplate* nonnull dereferenceable(8) %18, i8 zeroext 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #11
  %96 = bitcast %class.CFX_PTemplate* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #11
  %97 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %19, i64 0, i32 0
  store float %81, float* %97, align 4
  %98 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %19, i64 0, i32 1
  store float %82, float* %98, align 4
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %14, %class.CFX_PTemplate* nonnull dereferenceable(8) %19, i8 zeroext 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #11
  %99 = call i32 @_ZNK9CFX_Color9ToFXColorEi(%struct.CFX_Color* %4, i32 %8) #11
  %100 = bitcast i16* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %100) #11
  store i16 2, i16* %20, align 2
  %101 = call zeroext i1 @_ZN16CFX_RenderDevice17DrawPathWithBlendEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions9BlendMode(%class.CFX_RenderDevice* %0, %class.CFX_PathData* nonnull %14, %class.CFX_Matrix* %1, %class.CFX_GraphStateData* nonnull %13, i32 0, i32 %99, %struct.CFX_FillRenderOptions* nonnull dereferenceable(2) %21, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %100) #11
  call void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #11
  call void @_ZN18CFX_GraphStateDataD1Ev(%class.CFX_GraphStateData* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %74) #11
  br label %185

102:                                              ; preds = %53, %53
  %103 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %22, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %103) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %103, i8* align 8 getelementptr inbounds ({ i8, i8, [2 x i8], float, float, float, %"class.std::__1::vector.17" }, { i8, i8, [2 x i8], float, float, float, %"class.std::__1::vector.17" }* @__const._ZN16CFX_RenderDevice10DrawBorderEPK10CFX_MatrixRK13CFX_FloatRectfRK9CFX_ColorS8_S8_11BorderStylei.gsd.3, i64 0, i32 0), i64 40, i1 false)
  call void @_ZN18CFX_GraphStateDataC1Ev(%class.CFX_GraphStateData* nonnull %22) #11
  %104 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %22, i64 0, i32 4
  store float %62, float* %104, align 4
  %105 = bitcast %class.CFX_PathData* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %105) #11
  %106 = bitcast %class.CFX_PathData* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %106, i8 -86, i64 24, i1 false)
  call void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData* nonnull %23) #11
  %107 = bitcast %class.CFX_PTemplate* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #11
  %108 = fadd float %62, %55
  %109 = fadd float %62, %61
  %110 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %24, i64 0, i32 0
  store float %108, float* %110, align 4
  %111 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %24, i64 0, i32 1
  store float %109, float* %111, align 4
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %23, %class.CFX_PTemplate* nonnull dereferenceable(8) %24, i8 zeroext 2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #11
  %112 = bitcast %class.CFX_PTemplate* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #11
  %113 = fsub float %59, %62
  %114 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %25, i64 0, i32 0
  store float %108, float* %114, align 4
  %115 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %25, i64 0, i32 1
  store float %113, float* %115, align 4
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %23, %class.CFX_PTemplate* nonnull dereferenceable(8) %25, i8 zeroext 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #11
  %116 = bitcast %class.CFX_PTemplate* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #11
  %117 = fsub float %57, %62
  %118 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %26, i64 0, i32 0
  store float %117, float* %118, align 4
  %119 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %26, i64 0, i32 1
  store float %113, float* %119, align 4
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %23, %class.CFX_PTemplate* nonnull dereferenceable(8) %26, i8 zeroext 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #11
  %120 = bitcast %class.CFX_PTemplate* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #11
  %121 = fsub float %57, %3
  %122 = fsub float %59, %3
  %123 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %27, i64 0, i32 0
  store float %121, float* %123, align 4
  %124 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %27, i64 0, i32 1
  store float %122, float* %124, align 4
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %23, %class.CFX_PTemplate* nonnull dereferenceable(8) %27, i8 zeroext 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #11
  %125 = bitcast %class.CFX_PTemplate* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125) #11
  %126 = fadd float %55, %3
  %127 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %28, i64 0, i32 0
  store float %126, float* %127, align 4
  %128 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %28, i64 0, i32 1
  store float %122, float* %128, align 4
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %23, %class.CFX_PTemplate* nonnull dereferenceable(8) %28, i8 zeroext 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #11
  %129 = bitcast %class.CFX_PTemplate* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129) #11
  %130 = fadd float %61, %3
  %131 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %29, i64 0, i32 0
  store float %126, float* %131, align 4
  %132 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %29, i64 0, i32 1
  store float %130, float* %132, align 4
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %23, %class.CFX_PTemplate* nonnull dereferenceable(8) %29, i8 zeroext 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #11
  %133 = bitcast %class.CFX_PTemplate* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %133) #11
  %134 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %30, i64 0, i32 0
  store float %108, float* %134, align 4
  %135 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %30, i64 0, i32 1
  store float %109, float* %135, align 4
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %23, %class.CFX_PTemplate* nonnull dereferenceable(8) %30, i8 zeroext 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %133) #11
  %136 = call i32 @_ZNK9CFX_Color9ToFXColorEi(%struct.CFX_Color* %5, i32 %8) #11
  %137 = bitcast i16* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %137) #11
  store i16 1, i16* %31, align 2
  %138 = call zeroext i1 @_ZN16CFX_RenderDevice17DrawPathWithBlendEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions9BlendMode(%class.CFX_RenderDevice* %0, %class.CFX_PathData* nonnull %23, %class.CFX_Matrix* %1, %class.CFX_GraphStateData* nonnull %22, i32 %136, i32 0, %struct.CFX_FillRenderOptions* nonnull dereferenceable(2) %32, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %137) #11
  %139 = bitcast %class.CFX_PathData* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %139) #11
  %140 = bitcast %class.CFX_PathData* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %140, i8 -86, i64 24, i1 false)
  call void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData* nonnull %33) #11
  %141 = bitcast %class.CFX_PTemplate* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %141) #11
  %142 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %34, i64 0, i32 0
  store float %117, float* %142, align 4
  %143 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %34, i64 0, i32 1
  store float %113, float* %143, align 4
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %33, %class.CFX_PTemplate* nonnull dereferenceable(8) %34, i8 zeroext 2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %141) #11
  %144 = bitcast %class.CFX_PTemplate* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %144) #11
  %145 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %35, i64 0, i32 0
  store float %117, float* %145, align 4
  %146 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %35, i64 0, i32 1
  store float %109, float* %146, align 4
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %33, %class.CFX_PTemplate* nonnull dereferenceable(8) %35, i8 zeroext 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #11
  %147 = bitcast %class.CFX_PTemplate* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %147) #11
  %148 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %36, i64 0, i32 0
  store float %108, float* %148, align 4
  %149 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %36, i64 0, i32 1
  store float %109, float* %149, align 4
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %33, %class.CFX_PTemplate* nonnull dereferenceable(8) %36, i8 zeroext 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %147) #11
  %150 = bitcast %class.CFX_PTemplate* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %150) #11
  %151 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %37, i64 0, i32 0
  store float %126, float* %151, align 4
  %152 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %37, i64 0, i32 1
  store float %130, float* %152, align 4
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %33, %class.CFX_PTemplate* nonnull dereferenceable(8) %37, i8 zeroext 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %150) #11
  %153 = bitcast %class.CFX_PTemplate* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %153) #11
  %154 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %38, i64 0, i32 0
  store float %121, float* %154, align 4
  %155 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %38, i64 0, i32 1
  store float %130, float* %155, align 4
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %33, %class.CFX_PTemplate* nonnull dereferenceable(8) %38, i8 zeroext 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %153) #11
  %156 = bitcast %class.CFX_PTemplate* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %156) #11
  %157 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %39, i64 0, i32 0
  store float %121, float* %157, align 4
  %158 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %39, i64 0, i32 1
  store float %122, float* %158, align 4
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %33, %class.CFX_PTemplate* nonnull dereferenceable(8) %39, i8 zeroext 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %156) #11
  %159 = bitcast %class.CFX_PTemplate* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %159) #11
  %160 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %40, i64 0, i32 0
  store float %117, float* %160, align 4
  %161 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %40, i64 0, i32 1
  store float %113, float* %161, align 4
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %33, %class.CFX_PTemplate* nonnull dereferenceable(8) %40, i8 zeroext 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %159) #11
  %162 = call i32 @_ZNK9CFX_Color9ToFXColorEi(%struct.CFX_Color* %6, i32 %8) #11
  %163 = bitcast i16* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %163) #11
  store i16 1, i16* %41, align 2
  %164 = call zeroext i1 @_ZN16CFX_RenderDevice17DrawPathWithBlendEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions9BlendMode(%class.CFX_RenderDevice* %0, %class.CFX_PathData* nonnull %33, %class.CFX_Matrix* %1, %class.CFX_GraphStateData* nonnull %22, i32 %162, i32 0, %struct.CFX_FillRenderOptions* nonnull dereferenceable(2) %42, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %163) #11
  %165 = bitcast %class.CFX_PathData* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %165) #11
  %166 = bitcast %class.CFX_PathData* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %166, i8 -86, i64 24, i1 false)
  call void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData* nonnull %43) #11
  call void @_ZN12CFX_PathData10AppendRectEffff(%class.CFX_PathData* nonnull %43, float %55, float %61, float %57, float %59) #11
  call void @_ZN12CFX_PathData10AppendRectEffff(%class.CFX_PathData* nonnull %43, float %108, float %109, float %117, float %113) #11
  %167 = call i32 @_ZNK9CFX_Color9ToFXColorEi(%struct.CFX_Color* %4, i32 %8) #11
  %168 = bitcast i16* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %168) #11
  store i16 1, i16* %44, align 2
  %169 = call zeroext i1 @_ZN16CFX_RenderDevice17DrawPathWithBlendEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions9BlendMode(%class.CFX_RenderDevice* %0, %class.CFX_PathData* nonnull %43, %class.CFX_Matrix* %1, %class.CFX_GraphStateData* nonnull %22, i32 %167, i32 0, %struct.CFX_FillRenderOptions* nonnull dereferenceable(2) %45, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %168) #11
  call void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData* nonnull %43) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %165) #11
  call void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData* nonnull %33) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %139) #11
  call void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData* nonnull %23) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %105) #11
  call void @_ZN18CFX_GraphStateDataD1Ev(%class.CFX_GraphStateData* nonnull %22) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %103) #11
  br label %185

170:                                              ; preds = %53
  %171 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %46, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %171) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %171, i8* align 8 getelementptr inbounds ({ i8, i8, [2 x i8], float, float, float, %"class.std::__1::vector.17" }, { i8, i8, [2 x i8], float, float, float, %"class.std::__1::vector.17" }* @__const._ZN16CFX_RenderDevice10DrawBorderEPK10CFX_MatrixRK13CFX_FloatRectfRK9CFX_ColorS8_S8_11BorderStylei.gsd.3, i64 0, i32 0), i64 40, i1 false)
  call void @_ZN18CFX_GraphStateDataC1Ev(%class.CFX_GraphStateData* nonnull %46) #11
  %172 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %46, i64 0, i32 4
  store float %3, float* %172, align 4
  %173 = bitcast %class.CFX_PathData* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %173) #11
  %174 = bitcast %class.CFX_PathData* %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %174, i8 -86, i64 24, i1 false)
  call void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData* nonnull %47) #11
  %175 = bitcast %class.CFX_PTemplate* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %175) #11
  %176 = fadd float %62, %61
  %177 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %48, i64 0, i32 0
  store float %55, float* %177, align 4
  %178 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %48, i64 0, i32 1
  store float %176, float* %178, align 4
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %47, %class.CFX_PTemplate* nonnull dereferenceable(8) %48, i8 zeroext 2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %175) #11
  %179 = bitcast %class.CFX_PTemplate* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %179) #11
  %180 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %49, i64 0, i32 0
  store float %57, float* %180, align 4
  %181 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %49, i64 0, i32 1
  store float %176, float* %181, align 4
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %47, %class.CFX_PTemplate* nonnull dereferenceable(8) %49, i8 zeroext 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %179) #11
  %182 = call i32 @_ZNK9CFX_Color9ToFXColorEi(%struct.CFX_Color* %4, i32 %8) #11
  %183 = bitcast i16* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %183) #11
  store i16 1, i16* %50, align 2
  %184 = call zeroext i1 @_ZN16CFX_RenderDevice17DrawPathWithBlendEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions9BlendMode(%class.CFX_RenderDevice* %0, %class.CFX_PathData* nonnull %47, %class.CFX_Matrix* %1, %class.CFX_GraphStateData* nonnull %46, i32 0, i32 %182, %struct.CFX_FillRenderOptions* nonnull dereferenceable(2) %51, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %183) #11
  call void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData* nonnull %47) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %173) #11
  call void @_ZN18CFX_GraphStateDataD1Ev(%class.CFX_GraphStateData* nonnull %46) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %171) #11
  br label %185

185:                                              ; preds = %63, %73, %102, %170, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_RenderDevice13StateRestorerC2EPS_(%"class.CFX_RenderDevice::StateRestorer"* nocapture, %class.CFX_RenderDevice*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.CFX_RenderDevice::StateRestorer", %"class.CFX_RenderDevice::StateRestorer"* %0, i64 0, i32 0, i32 0
  store %class.CFX_RenderDevice* %1, %class.CFX_RenderDevice** %3, align 8
  %4 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %1, i64 0, i32 8, i32 0, i32 0, i32 0
  %5 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %4, align 8
  %6 = bitcast %class.RenderDeviceDriverIface* %5 to void (%class.RenderDeviceDriverIface*)***
  %7 = load void (%class.RenderDeviceDriverIface*)**, void (%class.RenderDeviceDriverIface*)*** %6, align 8
  %8 = getelementptr inbounds void (%class.RenderDeviceDriverIface*)*, void (%class.RenderDeviceDriverIface*)** %7, i64 4
  %9 = load void (%class.RenderDeviceDriverIface*)*, void (%class.RenderDeviceDriverIface*)** %8, align 8
  tail call void %9(%class.RenderDeviceDriverIface* %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CFX_RenderDevice13StateRestorerD2Ev(%"class.CFX_RenderDevice::StateRestorer"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.CFX_RenderDevice::StateRestorer", %"class.CFX_RenderDevice::StateRestorer"* %0, i64 0, i32 0, i32 0
  %3 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %2, align 8
  %4 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %3, i64 0, i32 8, i32 0, i32 0, i32 0
  %5 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %4, align 8
  %6 = icmp eq %class.RenderDeviceDriverIface* %5, null
  br i1 %6, label %28, label %7

7:                                                ; preds = %1
  %8 = bitcast %class.RenderDeviceDriverIface* %5 to void (%class.RenderDeviceDriverIface*, i1)***
  %9 = load void (%class.RenderDeviceDriverIface*, i1)**, void (%class.RenderDeviceDriverIface*, i1)*** %8, align 8
  %10 = getelementptr inbounds void (%class.RenderDeviceDriverIface*, i1)*, void (%class.RenderDeviceDriverIface*, i1)** %9, i64 5
  %11 = load void (%class.RenderDeviceDriverIface*, i1)*, void (%class.RenderDeviceDriverIface*, i1)** %10, align 8
  tail call void %11(%class.RenderDeviceDriverIface* nonnull %5, i1 zeroext false) #11
  %12 = load %class.RenderDeviceDriverIface*, %class.RenderDeviceDriverIface** %4, align 8
  %13 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %3, i64 0, i32 7
  %14 = bitcast %class.RenderDeviceDriverIface* %12 to i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)***
  %15 = load i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)**, i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)*, i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)** %15, i64 12
  %17 = load i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)*, i1 (%class.RenderDeviceDriverIface*, %struct.FX_RECT*)** %16, align 8
  %18 = tail call zeroext i1 %17(%class.RenderDeviceDriverIface* %12, %struct.FX_RECT* %13) #11
  br i1 %18, label %28, label %19

19:                                               ; preds = %7
  %20 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %13, i64 0, i32 0
  store i32 0, i32* %20, align 4
  %21 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %3, i64 0, i32 7, i32 1
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %3, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %3, i64 0, i32 7, i32 2
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %3, i64 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %3, i64 0, i32 7, i32 3
  store i32 %26, i32* %27, align 4
  br label %28

28:                                               ; preds = %1, %7, %19
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #7

declare void @_ZN10CFX_Matrix9TranslateEff(%class.CFX_Matrix*, float, float) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #7

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #7

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #7

; Function Attrs: nounwind
declare void @_ZN12FX_PATHPOINTD1Ev(%class.FX_PATHPOINT*) unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI12FX_PATHPOINTNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_(%"class.std::__1::vector.12"*, %class.FX_PATHPOINT* dereferenceable(12)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.FX_PATHPOINT** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.12"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 12
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 1537228672809129301
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.12"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.FX_PATHPOINT** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 12
  %20 = icmp ult i64 %19, 768614336404564650
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 1537228672809129301, %14 ]
  %28 = mul i64 %27, 12
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %class.FX_PATHPOINT*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %class.FX_PATHPOINT* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %33, i64 %9
  %35 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %33, i64 %32
  %36 = ptrtoint %class.FX_PATHPOINT* %35 to i64
  tail call void @_ZN12FX_PATHPOINTC1ERKS_(%class.FX_PATHPOINT* %34, %class.FX_PATHPOINT* dereferenceable(12) %1) #11
  %37 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %34, i64 1
  %38 = ptrtoint %class.FX_PATHPOINT* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 0
  %40 = load %class.FX_PATHPOINT*, %class.FX_PATHPOINT** %39, align 8
  %41 = load %class.FX_PATHPOINT*, %class.FX_PATHPOINT** %3, align 8
  %42 = icmp eq %class.FX_PATHPOINT* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %class.FX_PATHPOINT* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %class.FX_PATHPOINT* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %class.FX_PATHPOINT* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %46, i64 -1
  %49 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %47, i64 -1
  tail call void @_ZN12FX_PATHPOINTC1ERKS_(%class.FX_PATHPOINT* %48, %class.FX_PATHPOINT* dereferenceable(12) %49) #11
  %50 = icmp eq %class.FX_PATHPOINT* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %class.FX_PATHPOINT*, %class.FX_PATHPOINT** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %class.FX_PATHPOINT* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %class.FX_PATHPOINT* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %class.FX_PATHPOINT* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %class.FX_PATHPOINT*
  %60 = icmp eq %class.FX_PATHPOINT* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %class.FX_PATHPOINT* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %62, i64 -1
  tail call void @_ZN12FX_PATHPOINTD1Ev(%class.FX_PATHPOINT* %63) #11
  %64 = icmp eq %class.FX_PATHPOINT* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #12
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN12FX_PATHPOINTC1ERKS_(%class.FX_PATHPOINT*, %class.FX_PATHPOINT* dereferenceable(12)) unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare void @_ZN12CFX_DIBitmapC1Ev(%class.CFX_DIBitmap*) unnamed_addr #4

declare void @_ZN12TextGlyphPosC1Ev(%class.TextGlyphPos*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN12TextGlyphPosD1Ev(%class.TextGlyphPos*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIfNS_9allocatorIfEEE6assignIPKfEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector.17"*, float*, float*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint float* %2 to i64
  %5 = ptrtoint float* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast float** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.17"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to float*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 1
  %19 = bitcast float** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds float, float* %1, i64 %22
  %25 = select i1 %23, float* %24, float* %2
  %26 = ptrtoint float* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast float* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #11
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast float* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #11
  %42 = inttoptr i64 %35 to float*
  %43 = getelementptr inbounds float, float* %42, i64 %39
  %44 = ptrtoint float* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds float, float* %16, i64 %28
  store float* %48, float** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 1
  %53 = bitcast float** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #12
  %55 = bitcast %"class.std::__1::vector.17"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #11
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.17"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #13
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.17"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #13
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #12
  %75 = bitcast i8* %74 to float*
  %76 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %0, i64 0, i32 0, i32 1
  %77 = bitcast float** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.17"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds float, float* %75, i64 %72
  store float* %79, float** %8, align 8
  %80 = bitcast float** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast float* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #11
  %86 = getelementptr inbounds float, float* %75, i64 %84
  %87 = ptrtoint float* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nounwind readnone speculatable
declare <2 x float> @llvm.fabs.v2f32(<2 x float>) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i32 -2143764904}
!5 = !{i32 -2143764883}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!8 = distinct !{!8, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!11 = distinct !{!11, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!14 = distinct !{!14, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!17 = distinct !{!17, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!20 = distinct !{!20, !"_ZNK10CFX_MatrixmlERKS_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!23 = distinct !{!23, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!26 = distinct !{!26, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!29 = distinct !{!29, !"_ZNK10CFX_MatrixmlERKS_"}
