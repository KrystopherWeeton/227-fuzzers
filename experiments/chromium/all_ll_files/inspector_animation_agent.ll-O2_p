; ModuleID = '../../third_party/blink/renderer/core/inspector/inspector_animation_agent.cc'
source_filename = "../../third_party/blink/renderer/core/inspector/inspector_animation_agent.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.216" }
%"struct.std::__1::__atomic_base.216" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.725", i32, [4 x i8], %"class.std::__1::unique_ptr.869", %"class.std::__1::unique_ptr.869", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.880", %"class.std::__1::unique_ptr.886", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.898", %"class.std::__1::unique_ptr.904", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.911", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.725" = type { %"class.std::__1::__compressed_pair.726" }
%"class.std::__1::__compressed_pair.726" = type { %"struct.std::__1::__compressed_pair_elem.727" }
%"struct.std::__1::__compressed_pair_elem.727" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.728", %"class.std::__1::unique_ptr.734", %"class.std::__1::unique_ptr.740", %"class.std::__1::unique_ptr.746", %"class.std::__1::unique_ptr.752", %"class.std::__1::unique_ptr.758", %"class.std::__1::unique_ptr.769", %"class.std::__1::unique_ptr.776", %"class.std::__1::unique_ptr.776", %"class.std::__1::unique_ptr.783", %"class.std::__1::unique_ptr.790", %"class.std::__1::unique_ptr.797", %"class.std::__1::unique_ptr.797", %"class.std::__1::unique_ptr.804", %"class.std::__1::unique_ptr.811", %"class.std::__1::unique_ptr.818", %"class.std::__1::unique_ptr.849", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.728" = type { %"class.std::__1::__compressed_pair.729" }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.730" }
%"struct.std::__1::__compressed_pair_elem.730" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.736" }
%"struct.std::__1::__compressed_pair_elem.736" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.740" = type { %"class.std::__1::__compressed_pair.741" }
%"class.std::__1::__compressed_pair.741" = type { %"struct.std::__1::__compressed_pair_elem.742" }
%"struct.std::__1::__compressed_pair_elem.742" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.746" = type { %"class.std::__1::__compressed_pair.747" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.748" }
%"struct.std::__1::__compressed_pair_elem.748" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.758" = type { %"class.std::__1::__compressed_pair.759" }
%"class.std::__1::__compressed_pair.759" = type { %"struct.std::__1::__compressed_pair_elem.760" }
%"struct.std::__1::__compressed_pair_elem.760" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.761" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.761" = type { %"struct.std::__1::__atomic_base.762" }
%"struct.std::__1::__atomic_base.762" = type { %"struct.std::__1::__atomic_base.763" }
%"struct.std::__1::__atomic_base.763" = type { %"struct.std::__1::__cxx_atomic_impl.764" }
%"struct.std::__1::__cxx_atomic_impl.764" = type { %"struct.std::__1::__cxx_atomic_base_impl.765" }
%"struct.std::__1::__cxx_atomic_base_impl.765" = type { i64 }
%"class.std::__1::unique_ptr.769" = type { %"class.std::__1::__compressed_pair.770" }
%"class.std::__1::__compressed_pair.770" = type { %"struct.std::__1::__compressed_pair_elem.771" }
%"struct.std::__1::__compressed_pair_elem.771" = type { %"class.blink::Worklist.772"* }
%"class.blink::Worklist.772" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.761" }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::Worklist.779"* }
%"class.blink::Worklist.779" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.761" }
%"class.std::__1::unique_ptr.783" = type { %"class.std::__1::__compressed_pair.784" }
%"class.std::__1::__compressed_pair.784" = type { %"struct.std::__1::__compressed_pair_elem.785" }
%"struct.std::__1::__compressed_pair_elem.785" = type { %"class.blink::Worklist.786"* }
%"class.blink::Worklist.786" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.761" }
%"class.std::__1::unique_ptr.790" = type { %"class.std::__1::__compressed_pair.791" }
%"class.std::__1::__compressed_pair.791" = type { %"struct.std::__1::__compressed_pair_elem.792" }
%"struct.std::__1::__compressed_pair_elem.792" = type { %"class.blink::Worklist.793"* }
%"class.blink::Worklist.793" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.761" }
%"class.std::__1::unique_ptr.797" = type { %"class.std::__1::__compressed_pair.798" }
%"class.std::__1::__compressed_pair.798" = type { %"struct.std::__1::__compressed_pair_elem.799" }
%"struct.std::__1::__compressed_pair_elem.799" = type { %"class.blink::Worklist.800"* }
%"class.blink::Worklist.800" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.761" }
%"class.std::__1::unique_ptr.804" = type { %"class.std::__1::__compressed_pair.805" }
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem.806" }
%"struct.std::__1::__compressed_pair_elem.806" = type { %"class.blink::Worklist.807"* }
%"class.blink::Worklist.807" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.761" }
%"class.std::__1::unique_ptr.811" = type { %"class.std::__1::__compressed_pair.812" }
%"class.std::__1::__compressed_pair.812" = type { %"struct.std::__1::__compressed_pair_elem.813" }
%"struct.std::__1::__compressed_pair_elem.813" = type { %"class.blink::Worklist.814"* }
%"class.blink::Worklist.814" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.761" }
%"class.std::__1::unique_ptr.818" = type { %"class.std::__1::__compressed_pair.819" }
%"class.std::__1::__compressed_pair.819" = type { %"struct.std::__1::__compressed_pair_elem.820" }
%"struct.std::__1::__compressed_pair_elem.820" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.821" }
%"class.std::__1::__hash_table.821" = type <{ %"class.std::__1::unique_ptr.822", %"class.std::__1::__compressed_pair.832", %"class.std::__1::__compressed_pair.837", %"class.std::__1::__compressed_pair.841", [4 x i8] }>
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824", %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.std::__1::__hash_node_base.825"** }
%"struct.std::__1::__hash_node_base.825" = type { %"struct.std::__1::__hash_node_base.825"* }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.std::__1::__bucket_list_deallocator.827" }
%"class.std::__1::__bucket_list_deallocator.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%"struct.std::__1::__compressed_pair_elem.534" = type { i64 }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"struct.std::__1::__hash_node_base.825" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%"class.std::__1::__compressed_pair.841" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { float }
%"class.std::__1::unique_ptr.849" = type { %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.851" }
%"struct.std::__1::__compressed_pair_elem.851" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.852", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.852" = type { %"class.std::__1::__compressed_pair.853" }
%"class.std::__1::__compressed_pair.853" = type { %"struct.std::__1::__compressed_pair_elem.854" }
%"struct.std::__1::__compressed_pair_elem.854" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.861" }
%"class.WTF::Vector.861" = type { %"class.WTF::VectorBuffer.862" }
%"class.WTF::VectorBuffer.862" = type { %"class.WTF::VectorBufferBase.863" }
%"class.WTF::VectorBufferBase.863" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.869" = type { %"class.std::__1::__compressed_pair.870" }
%"class.std::__1::__compressed_pair.870" = type { %"struct.std::__1::__compressed_pair_elem.871" }
%"struct.std::__1::__compressed_pair_elem.871" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.877" }
%"class.WTF::VectorBuffer.877" = type { %"class.WTF::VectorBufferBase.878" }
%"class.WTF::VectorBufferBase.878" = type { %"struct.std::__1::pair.879"*, i32, i32 }
%"struct.std::__1::pair.879" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.880" = type { %"class.std::__1::__compressed_pair.881" }
%"class.std::__1::__compressed_pair.881" = type { %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.886" = type { %"class.std::__1::__compressed_pair.887" }
%"class.std::__1::__compressed_pair.887" = type { %"struct.std::__1::__compressed_pair_elem.888" }
%"struct.std::__1::__compressed_pair_elem.888" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.892" }
%"class.std::__1::unique_ptr.892" = type { %"class.std::__1::__compressed_pair.893" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.894" }
%"struct.std::__1::__compressed_pair_elem.894" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.772"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.779"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.786"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.793"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.800"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1151" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1151" = type { %"struct.std::__1::__compressed_pair_elem.1152" }
%"struct.std::__1::__compressed_pair_elem.1152" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.898" = type { %"class.std::__1::__compressed_pair.899" }
%"class.std::__1::__compressed_pair.899" = type { %"struct.std::__1::__compressed_pair_elem.900" }
%"struct.std::__1::__compressed_pair_elem.900" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.904" = type { %"class.std::__1::__compressed_pair.905" }
%"class.std::__1::__compressed_pair.905" = type { %"struct.std::__1::__compressed_pair_elem.906" }
%"struct.std::__1::__compressed_pair_elem.906" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.910 }
%class.scoped_refptr.910 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.911" = type { %"struct.std::__1::__atomic_base.912" }
%"struct.std::__1::__atomic_base.912" = type { %"struct.std::__1::__cxx_atomic_impl.913" }
%"struct.std::__1::__cxx_atomic_impl.913" = type { %"struct.std::__1::__cxx_atomic_base_impl.914" }
%"struct.std::__1::__cxx_atomic_base_impl.914" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.495" }
%"struct.std::__1::atomic.495" = type { %"struct.std::__1::__atomic_base.496" }
%"struct.std::__1::__atomic_base.496" = type { %"struct.std::__1::__atomic_base.497" }
%"struct.std::__1::__atomic_base.497" = type { %"struct.std::__1::__cxx_atomic_impl.498" }
%"struct.std::__1::__cxx_atomic_impl.498" = type { %"struct.std::__1::__cxx_atomic_base_impl.499" }
%"struct.std::__1::__cxx_atomic_base_impl.499" = type { i32 }
%"class.blink::InspectorAnimationAgent" = type { %"class.blink::InspectorBaseAgent", %"class.blink::Member.233", %"class.blink::Member.239", %"class.v8_inspector::V8InspectorSession"*, %"class.blink::HeapHashMap.435", %"class.blink::HeapHashMap.435", i8, [7 x i8], %"class.WTF::HashSet.580", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField.584" }
%"class.blink::InspectorBaseAgent" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::Animation::Backend", %"class.blink::Member", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.227" }
%"class.blink::InspectorAgent" = type { i32 (...)** }
%"class.blink::protocol::Animation::Backend" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.7", %"class.blink::HeapListHashSet.18", %"class.blink::HeapListHashSet.29", %"class.blink::HeapListHashSet.40", %"class.blink::HeapListHashSet.51", %"class.blink::HeapListHashSet.62", %"class.blink::HeapListHashSet.73", %"class.blink::HeapListHashSet.84", %"class.blink::HeapListHashSet.95", %"class.blink::HeapListHashSet.106", %"class.blink::HeapListHashSet.117", %"class.blink::HeapListHashSet.128", %"class.blink::HeapListHashSet.139", %"class.blink::HeapListHashSet.150", %"class.blink::HeapListHashSet.161", %"class.blink::HeapListHashSet.172", %"class.blink::HeapListHashSet.183", %"class.blink::HeapListHashSet.194", %"class.blink::HeapListHashSet.205" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable", %"class.blink::Member.5", %"class.blink::Member.5", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable" = type <{ %"class.blink::Member.5"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.5" = type { %"class.blink::MemberBase.6" }
%"class.blink::MemberBase.6" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.1581", %"class.blink::Member.5", %"class.blink::Member.5" }
%"class.blink::Member.1581" = type { %"class.blink::MemberBase.1582" }
%"class.blink::MemberBase.1582" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type <{ i32 (...)**, %"class.blink::Member.237", %"class.WTF::Vector.1094", i32, [4 x i8], %"class.blink::HeapHashMap.1585", i32, i8, [3 x i8] }>
%"class.blink::Member.237" = type { %"class.blink::MemberBase.238" }
%"class.blink::MemberBase.238" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1529", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1537", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1551", %"class.blink::FrameLoader", %"class.blink::Member.1568", %"class.blink::Member.617", %"class.blink::Member.1570", %"class.blink::Member.1572", %"class.blink::Member.1574", %"class.blink::Member.1576", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member", %class.scoped_refptr.1578, %"class.blink::Member.1579", %"class.blink::Member.1581", %"class.blink::Member.1592", %"class.blink::Member.1594", %"class.blink::Member.1596", %"class.blink::Member.1598", %"class.blink::Member.1600", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1604", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1610", %"class.std::__1::unique_ptr.1611", %"class.absl::optional.1517", i32, [4 x i8], %"class.std::__1::unique_ptr.1617", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1625", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1630", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1635", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1638", %"class.blink::Member.1640", %"class.blink::Member.1642", %"class.blink::Member.1644", %"class.mojo::StructPtr.1647", %"class.blink::Member.1656", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1658", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1385", %"class.blink::Member.1387", %"class.blink::Member.1389", i8, i32, i8, i32, %"class.blink::Member.1500", %"class.blink::Member.1391", %"class.blink::FrameLifecycle", %"class.blink::Member.1383", %"class.blink::Member.1383", %"class.blink::Member.1383", %"class.blink::Member.1383", %"class.blink::Member.1383", %"class.blink::Member.1383", %"class.blink::Member.237", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.1510", i8, %"class.base::UnguessableToken", %"class.absl::optional.1512", %"class.absl::optional.1517", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.1383", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.1385" = type { %"class.blink::MemberBase.1386" }
%"class.blink::MemberBase.1386" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.1387" = type { %"class.blink::MemberBase.1388" }
%"class.blink::MemberBase.1388" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1389" = type { %"class.blink::MemberBase.1390" }
%"class.blink::MemberBase.1390" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.1383", %"class.blink::Member.1391", %"class.blink::Member.1393", %"class.blink::Member.1395", i8, %"class.WTF::Vector.1397" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.457" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.446" }
%"class.blink::HeapVector.446" = type { %"class.WTF::Vector.449" }
%"class.WTF::Vector.449" = type { %"class.WTF::VectorBuffer.450" }
%"class.WTF::VectorBuffer.450" = type { %"class.WTF::VectorBufferBase.451", [32 x i8] }
%"class.WTF::VectorBufferBase.451" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.452" }
%"class.blink::Member.452" = type { %"class.blink::MemberBase.453" }
%"class.blink::MemberBase.453" = type { %"class.blink::HeapVector.454"* }
%"class.blink::HeapVector.454" = type opaque
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.WTF::Vector.460"* }
%"class.WTF::Vector.460" = type opaque
%"class.blink::Member.1393" = type { %"class.blink::MemberBase.1394" }
%"class.blink::MemberBase.1394" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.1395" = type { %"class.blink::MemberBase.1396" }
%"class.blink::MemberBase.1396" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.1397" = type { %"class.WTF::VectorBuffer.1398" }
%"class.WTF::VectorBuffer.1398" = type { %"class.WTF::VectorBufferBase.1399" }
%"class.WTF::VectorBufferBase.1399" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1492" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.1400, %"class.std::__1::unique_ptr.1293", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.1302, i32 }>
%class.scoped_refptr.1400 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.1302, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.1458", %"class.absl::optional.1463", %"class.absl::optional.1417", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.1483", i8, [7 x i8], %class.scoped_refptr.1302, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1315" }>
%"class.base::RefCountedThreadSafe.1315" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.495" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1184" }
%"class.std::__1::__compressed_pair.1184" = type { %"struct.std::__1::__compressed_pair_elem.1185" }
%"struct.std::__1::__compressed_pair_elem.1185" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.1186 }
%union.anon.1186 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1319", %"class.std::__1::unique_ptr.1325", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1331" }
%"class.std::__1::unique_ptr.1319" = type { %"class.std::__1::__compressed_pair.1320" }
%"class.std::__1::__compressed_pair.1320" = type { %"struct.std::__1::__compressed_pair_elem.1321" }
%"struct.std::__1::__compressed_pair_elem.1321" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1325" = type { %"class.std::__1::__compressed_pair.1326" }
%"class.std::__1::__compressed_pair.1326" = type { %"struct.std::__1::__compressed_pair_elem.1327" }
%"struct.std::__1::__compressed_pair_elem.1327" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1331" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.919 }
%class.scoped_refptr.919 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.920", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.920" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.921" }
%"struct.std::__1::atomic.921" = type { %"struct.std::__1::__atomic_base.922" }
%"struct.std::__1::__atomic_base.922" = type { %"struct.std::__1::__atomic_base.923" }
%"struct.std::__1::__atomic_base.923" = type { %"struct.std::__1::__cxx_atomic_impl.924" }
%"struct.std::__1::__cxx_atomic_impl.924" = type { %"struct.std::__1::__cxx_atomic_base_impl.925" }
%"struct.std::__1::__cxx_atomic_base_impl.925" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.1302, %"class.std::__1::unique_ptr.1401", %"class.absl::optional.1411", %"struct.std::__1::atomic.911", i8, i8, i8, i8, i32, i32, %"class.absl::optional.1417", %"class.std::__1::unique_ptr.1422", i8, i64, %class.scoped_refptr.1455, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.1457" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.675 }
%class.scoped_refptr.675 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.676", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.676" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1401" = type { %"class.std::__1::__compressed_pair.1402" }
%"class.std::__1::__compressed_pair.1402" = type { %"struct.std::__1::__compressed_pair_elem.1403" }
%"struct.std::__1::__compressed_pair_elem.1403" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.1302, i8, %"class.mojo::ScopedHandleBase.1404", %class.scoped_refptr.1405, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1406", i8*, %"class.base::WeakPtrFactory.1407" }
%"class.mojo::ScopedHandleBase.1404" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.1405 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.1406" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.1407" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1411" = type { %"class.absl::optional_internal::optional_data.1412" }
%"class.absl::optional_internal::optional_data.1412" = type { %"class.absl::optional_internal::optional_data_base.1413" }
%"class.absl::optional_internal::optional_data_base.1413" = type { %"class.absl::optional_internal::optional_data_dtor_base.1414" }
%"class.absl::optional_internal::optional_data_dtor_base.1414" = type { i8, %union.anon.1415 }
%union.anon.1415 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.1416", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.1416" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.1422" = type { %"class.std::__1::__compressed_pair.1423" }
%"class.std::__1::__compressed_pair.1423" = type { %"struct.std::__1::__compressed_pair_elem.1424" }
%"struct.std::__1::__compressed_pair_elem.1424" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1425", i8, i64, %class.scoped_refptr.1426, %class.scoped_refptr.1451 }
%"class.base::RepeatingCallback.1425" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1426 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.1427", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.1429", %"class.std::__1::map.1440", i8, [7 x i8] }>
%"class.base::RefCounted.1427" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.1428 }
%class.scoped_refptr.1428 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.1429" = type { %"class.std::__1::__tree.1430" }
%"class.std::__1::__tree.1430" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1431", %"class.std::__1::__compressed_pair.1435" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1191" }
%"struct.std::__1::__compressed_pair_elem.1191" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1435" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%"class.std::__1::map.1440" = type { %"class.std::__1::__tree.1441" }
%"class.std::__1::__tree.1441" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1442", %"class.std::__1::__compressed_pair.1446" }
%"class.std::__1::__compressed_pair.1442" = type { %"struct.std::__1::__compressed_pair_elem.1191" }
%"class.std::__1::__compressed_pair.1446" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%class.scoped_refptr.1451 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.1455 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1308 }
%class.scoped_refptr.1308 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1380", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.1302, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1380" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.1456 }
%class.scoped_refptr.1456 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.1457" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1458" = type { %"class.absl::optional_internal::optional_data.1459" }
%"class.absl::optional_internal::optional_data.1459" = type { %"class.absl::optional_internal::optional_data_base.1460" }
%"class.absl::optional_internal::optional_data_base.1460" = type { %"class.absl::optional_internal::optional_data_dtor_base.1461" }
%"class.absl::optional_internal::optional_data_dtor_base.1461" = type { i8, %union.anon.1462 }
%union.anon.1462 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.1463" = type { %"class.absl::optional_internal::optional_data.1464" }
%"class.absl::optional_internal::optional_data.1464" = type { %"class.absl::optional_internal::optional_data_base.1465" }
%"class.absl::optional_internal::optional_data_base.1465" = type { %"class.absl::optional_internal::optional_data_dtor_base.1466" }
%"class.absl::optional_internal::optional_data_dtor_base.1466" = type { i8, [7 x i8], %union.anon.1467 }
%union.anon.1467 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.1417" = type { %"class.absl::optional_internal::optional_data.1418" }
%"class.absl::optional_internal::optional_data.1418" = type { %"class.absl::optional_internal::optional_data_base.1419" }
%"class.absl::optional_internal::optional_data_base.1419" = type { %"class.absl::optional_internal::optional_data_dtor_base.1420" }
%"class.absl::optional_internal::optional_data_dtor_base.1420" = type { i8, %union.anon.1421 }
%union.anon.1421 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.1468 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.1468 = type { %"class.std::__1::map.1471" }
%"class.std::__1::map.1471" = type { %"class.std::__1::__tree.1472" }
%"class.std::__1::__tree.1472" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1473", %"class.std::__1::__compressed_pair.1477" }
%"class.std::__1::__compressed_pair.1473" = type { %"struct.std::__1::__compressed_pair_elem.1191" }
%"class.std::__1::__compressed_pair.1477" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.1482"*, i64 }
%"class.std::__1::unique_ptr.1482" = type opaque
%"class.std::__1::map.1483" = type { %"class.std::__1::__tree.1484" }
%"class.std::__1::__tree.1484" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1485", %"class.std::__1::__compressed_pair.1489" }
%"class.std::__1::__compressed_pair.1485" = type { %"struct.std::__1::__compressed_pair_elem.1191" }
%"class.std::__1::__compressed_pair.1489" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%"class.std::__1::unique_ptr.1293" = type { %"class.std::__1::__compressed_pair.1294" }
%"class.std::__1::__compressed_pair.1294" = type { %"struct.std::__1::__compressed_pair_elem.1295" }
%"struct.std::__1::__compressed_pair_elem.1295" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.1296", %"class.absl::optional.554", %"class.absl::optional.1297", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1310", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1332", %"class.std::__1::map.1343", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1352", i8, %class.scoped_refptr.1302, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1353" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.1296" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.554" = type { %"class.absl::optional_internal::optional_data.555" }
%"class.absl::optional_internal::optional_data.555" = type { %"class.absl::optional_internal::optional_data_base.556" }
%"class.absl::optional_internal::optional_data_base.556" = type { %"class.absl::optional_internal::optional_data_dtor_base.557" }
%"class.absl::optional_internal::optional_data_dtor_base.557" = type { i8, %union.anon.558 }
%union.anon.558 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.1297" = type { %"class.absl::optional_internal::optional_data.1298" }
%"class.absl::optional_internal::optional_data.1298" = type { %"class.absl::optional_internal::optional_data_base.1299" }
%"class.absl::optional_internal::optional_data_base.1299" = type { %"class.absl::optional_internal::optional_data_dtor_base.1300" }
%"class.absl::optional_internal::optional_data_dtor_base.1300" = type { i8, %union.anon.1301 }
%union.anon.1301 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1302, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1303" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1303" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1309 }
%class.scoped_refptr.1309 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1310" = type { %"class.std::__1::__compressed_pair.1311" }
%"class.std::__1::__compressed_pair.1311" = type { %"struct.std::__1::__compressed_pair_elem.1312" }
%"struct.std::__1::__compressed_pair_elem.1312" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1313", %class.scoped_refptr.1314 }
%"class.base::RepeatingCallback.1313" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1314 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1315", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.1332" = type { %"class.std::__1::__tree.1333" }
%"class.std::__1::__tree.1333" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1334", %"class.std::__1::__compressed_pair.1338" }
%"class.std::__1::__compressed_pair.1334" = type { %"struct.std::__1::__compressed_pair_elem.1191" }
%"class.std::__1::__compressed_pair.1338" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%"class.std::__1::map.1343" = type { %"class.std::__1::__tree.1344" }
%"class.std::__1::__tree.1344" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1345", %"class.std::__1::__compressed_pair.1349" }
%"class.std::__1::__compressed_pair.1345" = type { %"struct.std::__1::__compressed_pair_elem.1191" }
%"class.std::__1::__compressed_pair.1349" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%"class.base::OnceCallback.1352" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1353" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.1302 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.918" }>
%"class.base::RefCountedThreadSafe.918" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1492" = type { %"class.std::__1::__compressed_pair.1493" }
%"class.std::__1::__compressed_pair.1493" = type { %"struct.std::__1::__compressed_pair_elem.1494" }
%"struct.std::__1::__compressed_pair_elem.1494" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.1500" = type { %"class.blink::MemberBase.1501" }
%"class.blink::MemberBase.1501" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.1391" = type { %"class.blink::MemberBase.1392" }
%"class.blink::MemberBase.1392" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.1383" = type { %"class.blink::MemberBase.1384" }
%"class.blink::MemberBase.1384" = type { %"class.blink::Frame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.1383", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1502" }
%"class.std::__1::vector.1502" = type { %"class.std::__1::__vector_base.1503" }
%"class.std::__1::__vector_base.1503" = type { %"struct.std::__1::pair.1504"*, %"struct.std::__1::pair.1504"*, %"class.std::__1::__compressed_pair.1505" }
%"struct.std::__1::pair.1504" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1505" = type { %"struct.std::__1::__compressed_pair_elem.1506" }
%"struct.std::__1::__compressed_pair_elem.1506" = type { %"struct.std::__1::pair.1504"* }
%"class.blink::Member.1510" = type { %"class.blink::MemberBase.1511" }
%"class.blink::MemberBase.1511" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.1512" = type { %"class.absl::optional_internal::optional_data.1513" }
%"class.absl::optional_internal::optional_data.1513" = type { %"class.absl::optional_internal::optional_data_base.1514" }
%"class.absl::optional_internal::optional_data_base.1514" = type { %"class.absl::optional_internal::optional_data_dtor_base.1515" }
%"class.absl::optional_internal::optional_data_dtor_base.1515" = type { i8, %union.anon.1516 }
%union.anon.1516 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1522" }
%"class.blink::HeapHashSet.1522" = type { %"class.WTF::HashSet.1525" }
%"class.WTF::HashSet.1525" = type { %"class.WTF::HashTable.1526" }
%"class.WTF::HashTable.1526" = type <{ %"class.blink::WeakMember.1528"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1528" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1529" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1530" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap.1530" = type { %"class.WTF::HashMap.1533" }
%"class.WTF::HashMap.1533" = type { %"class.WTF::HashTable.1534" }
%"class.WTF::HashTable.1534" = type <{ %"struct.WTF::KeyValuePair.1536"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1536" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1537" = type { %"class.std::__1::__compressed_pair.1538" }
%"class.std::__1::__compressed_pair.1538" = type { %"struct.std::__1::__compressed_pair_elem.1539" }
%"struct.std::__1::__compressed_pair_elem.1539" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.1540", %"class.base::WeakPtrFactory.1545" }
%"class.WTF::HashMap.1540" = type { %"class.WTF::HashTable.1541" }
%"class.WTF::HashTable.1541" = type <{ %"struct.WTF::KeyValuePair.1544"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1544" = type opaque
%"class.base::WeakPtrFactory.1545" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1549" }
%"class.blink::Member.1549" = type { %"class.blink::MemberBase.1550" }
%"class.blink::MemberBase.1550" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.464" }
%"class.blink::WeakMember.464" = type { %"class.blink::MemberBase.465" }
%"class.blink::MemberBase.465" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.466" }
%"class.blink::HeapHashSet.466" = type { %"class.WTF::HashSet.469" }
%"class.WTF::HashSet.469" = type { %"class.WTF::HashTable.470" }
%"class.WTF::HashTable.470" = type <{ %"class.blink::WeakMember.472"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.472" = type opaque
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.2329", i64, %"class.std::__1::map.2330", i8*, i64, %"class.base::WeakPtrFactory.2339" }
%"class.base::RepeatingCallback.2329" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2330" = type { %"class.std::__1::__tree.2331" }
%"class.std::__1::__tree.2331" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2332", %"class.std::__1::__compressed_pair.2336" }
%"class.std::__1::__compressed_pair.2332" = type { %"struct.std::__1::__compressed_pair_elem.1191" }
%"class.std::__1::__compressed_pair.2336" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%"class.base::WeakPtrFactory.2339" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1551" = type { %"class.WTF::HashSet.1554" }
%"class.WTF::HashSet.1554" = type { %"class.WTF::HashTable.1555" }
%"class.WTF::HashTable.1555" = type <{ %"class.blink::WeakMember.1557"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1557" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.237", %"class.blink::Member.1558", %"class.blink::Member.1560", %"class.std::__1::unique_ptr.1562", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.580" }
%"class.blink::Member.1558" = type { %"class.blink::MemberBase.1559" }
%"class.blink::MemberBase.1559" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1560" = type { %"class.blink::MemberBase.1561" }
%"class.blink::MemberBase.1561" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.1562" = type { %"class.std::__1::__compressed_pair.1563" }
%"class.std::__1::__compressed_pair.1563" = type { %"struct.std::__1::__compressed_pair_elem.1564" }
%"struct.std::__1::__compressed_pair_elem.1564" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.691" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.691" = type { %"class.std::__1::__compressed_pair.692" }
%"class.std::__1::__compressed_pair.692" = type { %"struct.std::__1::__compressed_pair_elem.693" }
%"struct.std::__1::__compressed_pair_elem.693" = type { %"class.blink::KURL"* }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::Member.1568" = type { %"class.blink::MemberBase.1569" }
%"class.blink::MemberBase.1569" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1665", %"class.blink::Member.237", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1670", i8, i32, %"class.blink::Color", %"class.absl::optional.1672", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1677", %"class.blink::Member.1679", %"class.blink::Member.1679", %"class.std::__1::unique_ptr.1682", i32, [4 x i8], %"class.WTF::HashSet.1685", %"class.blink::Member.1692", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1694", %"class.blink::HeapHashSet.1701", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1709", i8, %"class.blink::Member.1715", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1727", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1741", i8, %"class.std::__1::unique_ptr.1747", %"class.std::__1::unique_ptr.1864", %"class.WTF::Vector.1870", i32, %class.scoped_refptr.1875, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1876", %"class.blink::Member.1878", %"class.blink::Member.1880", %"class.blink::HeapHashSet.1882", %"class.blink::HeapHashSet.1889", %"class.std::__1::unique_ptr.1896", %"class.std::__1::unique_ptr.1903", %"class.WTF::Vector.672" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1665" = type { %"class.WTF::HashTable.1666" }
%"class.WTF::HashTable.1666" = type <{ %class.scoped_refptr.1669*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1669 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1670" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1671", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.917, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.917 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1671" = type { %"class.blink::MemberBase.1569" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1672" = type { %"class.absl::optional_internal::optional_data.1673" }
%"class.absl::optional_internal::optional_data.1673" = type { %"class.absl::optional_internal::optional_data_base.1674" }
%"class.absl::optional_internal::optional_data_base.1674" = type { %"class.absl::optional_internal::optional_data_dtor_base.1675" }
%"class.absl::optional_internal::optional_data_dtor_base.1675" = type { i8, %union.anon.1676 }
%union.anon.1676 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1677" = type { %"class.blink::MemberBase.1678" }
%"class.blink::MemberBase.1678" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1679" = type { %"class.blink::MemberBase.1680" }
%"class.blink::MemberBase.1680" = type { %"class.blink::HeapHashSet.1681"* }
%"class.blink::HeapHashSet.1681" = type opaque
%"class.std::__1::unique_ptr.1682" = type { %"class.std::__1::__compressed_pair.1683" }
%"class.std::__1::__compressed_pair.1683" = type { %"struct.std::__1::__compressed_pair_elem.1684" }
%"struct.std::__1::__compressed_pair_elem.1684" = type { %"class.WTF::HashSet.1685"* }
%"class.WTF::HashSet.1685" = type { %"class.WTF::HashTable.1686" }
%"class.WTF::HashTable.1686" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1692" = type { %"class.blink::MemberBase.1693" }
%"class.blink::MemberBase.1693" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1694" = type { %"class.WTF::HashSet.1697" }
%"class.WTF::HashSet.1697" = type { %"class.WTF::HashTable.1698" }
%"class.WTF::HashTable.1698" = type <{ %"class.blink::Member.1700"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1700" = type opaque
%"class.blink::HeapHashSet.1701" = type { %"class.WTF::HashSet.1704" }
%"class.WTF::HashSet.1704" = type { %"class.WTF::HashTable.1705" }
%"class.WTF::HashTable.1705" = type <{ %"class.blink::Member.1707"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1707" = type { %"class.blink::MemberBase.1708" }
%"class.blink::MemberBase.1708" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1937", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1939", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.617" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1937" = type { %"class.blink::MemberBase.1938" }
%"class.blink::MemberBase.1938" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1939" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1940", { i64, i64 } }
%"class.blink::WeakMember.1940" = type { %"class.blink::MemberBase.1708" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1709" = type { %"class.std::__1::__compressed_pair.1710" }
%"class.std::__1::__compressed_pair.1710" = type { %"struct.std::__1::__compressed_pair_elem.1711" }
%"struct.std::__1::__compressed_pair_elem.1711" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1715" = type { %"class.blink::MemberBase.1716" }
%"class.blink::MemberBase.1716" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1719", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1719" = type { %"class.WTF::HashTable.1720" }
%"class.WTF::HashTable.1720" = type <{ %"struct.WTF::KeyValuePair.1722"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1722" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1723", i32, i32 }
%"class.WTF::Vector.1723" = type { %"class.WTF::VectorBuffer.1724" }
%"class.WTF::VectorBuffer.1724" = type { %"class.WTF::VectorBufferBase.1725" }
%"class.WTF::VectorBufferBase.1725" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1727" = type { %"class.WTF::LinkedHashSet.1730" }
%"class.WTF::LinkedHashSet.1730" = type { %"class.WTF::HashMap.1731", %"class.WTF::VectorBackedLinkedList.1735" }
%"class.WTF::HashMap.1731" = type { %"class.WTF::HashTable.1732" }
%"class.WTF::HashTable.1732" = type <{ %"struct.WTF::KeyValuePair.1734"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1734" = type opaque
%"class.WTF::VectorBackedLinkedList.1735" = type { %"class.WTF::Vector.1736", i32, i32 }
%"class.WTF::Vector.1736" = type { %"class.WTF::VectorBuffer.1737" }
%"class.WTF::VectorBuffer.1737" = type { %"class.WTF::VectorBufferBase.1738" }
%"class.WTF::VectorBufferBase.1738" = type { %"class.WTF::VectorBackedLinkedListNode.1739"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1739" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1741" = type { %"class.std::__1::__compressed_pair.1742" }
%"class.std::__1::__compressed_pair.1742" = type { %"struct.std::__1::__compressed_pair_elem.1743" }
%"struct.std::__1::__compressed_pair_elem.1743" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1747" = type { %"class.std::__1::__compressed_pair.1748" }
%"class.std::__1::__compressed_pair.1748" = type { %"struct.std::__1::__compressed_pair_elem.1749" }
%"struct.std::__1::__compressed_pair_elem.1749" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1750, %class.scoped_refptr.1750, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1841", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1846", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1750 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1751", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1758" }
%"class.WTF::RefCounted.1751" = type { %"class.base::RefCounted.1752" }
%"class.base::RefCounted.1752" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1753", i32, [4 x i8] }>
%"class.WTF::Vector.1753" = type { %"class.WTF::VectorBuffer.1754" }
%"class.WTF::VectorBuffer.1754" = type { %"class.WTF::VectorBufferBase.1755" }
%"class.WTF::VectorBufferBase.1755" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1758" = type { %"class.WTF::VectorBuffer.1759" }
%"class.WTF::VectorBuffer.1759" = type { %"class.WTF::VectorBufferBase.1760" }
%"class.WTF::VectorBufferBase.1760" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1764", %"class.std::__1::unique_ptr.1813", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1761, %class.scoped_refptr.1762, %class.scoped_refptr.1763 }
%class.scoped_refptr.1761 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1777", i8, i8, %class.scoped_refptr.1761, i32, i32 }
%"class.WTF::RefCounted.1777" = type { %"class.base::RefCounted.1778" }
%"class.base::RefCounted.1778" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1762 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1932" }
%"class.blink::PaintPropertyNode.1932" = type { %"class.WTF::RefCounted.1933", i8, i8, %class.scoped_refptr.1762, i32, i32 }
%"class.WTF::RefCounted.1933" = type { %"class.base::RefCounted.1934" }
%"class.base::RefCounted.1934" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1763 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1929" }
%"class.blink::PaintPropertyNode.1929" = type { %"class.WTF::RefCounted.1930", i8, i8, %class.scoped_refptr.1763, i32, i32 }
%"class.WTF::RefCounted.1930" = type { %"class.base::RefCounted.1931" }
%"class.base::RefCounted.1931" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1764" = type { %"class.std::__1::__compressed_pair.1765" }
%"class.std::__1::__compressed_pair.1765" = type { %"struct.std::__1::__compressed_pair_elem.1766" }
%"struct.std::__1::__compressed_pair_elem.1766" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1767", %"class.WTF::Vector.1772", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1767" = type { %"class.WTF::VectorBuffer.1768" }
%"class.WTF::VectorBuffer.1768" = type { %"class.WTF::VectorBufferBase.1769" }
%"class.WTF::VectorBufferBase.1769" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1772" = type { %"class.WTF::VectorBuffer.1773" }
%"class.WTF::VectorBuffer.1773" = type { %"class.WTF::VectorBufferBase.1774" }
%"class.WTF::VectorBufferBase.1774" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1792" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1785, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1786", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1779" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1779" = type { %"class.std::__1::__compressed_pair.1780" }
%"class.std::__1::__compressed_pair.1780" = type { %"struct.std::__1::__compressed_pair_elem.1781" }
%"struct.std::__1::__compressed_pair_elem.1781" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1785 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1914", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1914" = type { %"class.WTF::RefCounted.1915", i8, i8, %class.scoped_refptr.1785, i32, i32 }
%"class.WTF::RefCounted.1915" = type { %"class.base::RefCounted.1916" }
%"class.base::RefCounted.1916" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1917" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1917" = type { %"class.absl::optional_internal::optional_data.1918" }
%"class.absl::optional_internal::optional_data.1918" = type { %"class.absl::optional_internal::optional_data_base.1919" }
%"class.absl::optional_internal::optional_data_base.1919" = type { %"class.absl::optional_internal::optional_data_dtor_base.1920" }
%"class.absl::optional_internal::optional_data_dtor_base.1920" = type { i8, %union.anon.1921 }
%union.anon.1921 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1922", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1922" = type { %"class.std::__1::__vector_base.1923" }
%"class.std::__1::__vector_base.1923" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1924" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1924" = type { %"struct.std::__1::__compressed_pair_elem.1925" }
%"struct.std::__1::__compressed_pair_elem.1925" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1786" = type { %"class.std::__1::__compressed_pair.1787" }
%"class.std::__1::__compressed_pair.1787" = type { %"struct.std::__1::__compressed_pair_elem.1788" }
%"struct.std::__1::__compressed_pair_elem.1788" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1792" = type { %"class.std::__1::__compressed_pair.1793" }
%"class.std::__1::__compressed_pair.1793" = type { %"struct.std::__1::__compressed_pair_elem.1794" }
%"struct.std::__1::__compressed_pair_elem.1794" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1795", %"class.std::__1::unique_ptr.1801", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1795" = type { %"class.std::__1::__compressed_pair.1796" }
%"class.std::__1::__compressed_pair.1796" = type { %"struct.std::__1::__compressed_pair_elem.1797" }
%"struct.std::__1::__compressed_pair_elem.1797" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1801" = type { %"class.std::__1::__compressed_pair.1802" }
%"class.std::__1::__compressed_pair.1802" = type { %"struct.std::__1::__compressed_pair_elem.1803" }
%"struct.std::__1::__compressed_pair_elem.1803" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1813" = type { %"class.std::__1::__compressed_pair.1814" }
%"class.std::__1::__compressed_pair.1814" = type { %"struct.std::__1::__compressed_pair_elem.1815" }
%"struct.std::__1::__compressed_pair_elem.1815" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1816", %"class.absl::optional.1816" }
%"class.absl::optional.1816" = type { %"class.absl::optional_internal::optional_data.1817" }
%"class.absl::optional_internal::optional_data.1817" = type { %"class.absl::optional_internal::optional_data_base.1818" }
%"class.absl::optional_internal::optional_data_base.1818" = type { %"class.absl::optional_internal::optional_data_dtor_base.1819" }
%"class.absl::optional_internal::optional_data_dtor_base.1819" = type { i8, [3 x i8], %union.anon.1820 }
%union.anon.1820 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1758"*, %"class.absl::optional.1826", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1826" = type { %"class.absl::optional_internal::optional_data.1827" }
%"class.absl::optional_internal::optional_data.1827" = type { %"class.absl::optional_internal::optional_data_base.1828" }
%"class.absl::optional_internal::optional_data_base.1828" = type { %"class.absl::optional_internal::optional_data_dtor_base.1829" }
%"class.absl::optional_internal::optional_data_dtor_base.1829" = type { i8, %union.anon.1830 }
%union.anon.1830 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1831", %"class.WTF::Vector.1836" }
%"class.WTF::Vector.1831" = type { %"class.WTF::VectorBuffer.1832" }
%"class.WTF::VectorBuffer.1832" = type { %"class.WTF::VectorBufferBase.1833", [128 x i8] }
%"class.WTF::VectorBufferBase.1833" = type { i32*, i32, i32 }
%"class.WTF::Vector.1836" = type { %"class.WTF::VectorBuffer.1837" }
%"class.WTF::VectorBuffer.1837" = type { %"class.WTF::VectorBufferBase.1838", [128 x i8] }
%"class.WTF::VectorBufferBase.1838" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1841" = type { %"class.WTF::VectorBuffer.1842" }
%"class.WTF::VectorBuffer.1842" = type { %"class.WTF::VectorBufferBase.1843" }
%"class.WTF::VectorBufferBase.1843" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1846" = type { %"class.WTF::HashTable.1847" }
%"class.WTF::HashTable.1847" = type <{ %"struct.WTF::KeyValuePair.1850"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1850" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1851", %"class.WTF::Vector.1856" }
%"class.WTF::HashMap.1851" = type { %"class.WTF::HashTable.1852" }
%"class.WTF::HashTable.1852" = type <{ %"struct.WTF::KeyValuePair.1855"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1855" = type opaque
%"class.WTF::Vector.1856" = type { %"class.WTF::VectorBuffer.1857" }
%"class.WTF::VectorBuffer.1857" = type { %"class.WTF::VectorBufferBase.1858" }
%"class.WTF::VectorBufferBase.1858" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1864" = type { %"class.std::__1::__compressed_pair.1865" }
%"class.std::__1::__compressed_pair.1865" = type { %"struct.std::__1::__compressed_pair_elem.1866" }
%"struct.std::__1::__compressed_pair_elem.1866" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1870" = type { %"class.WTF::VectorBuffer.1871" }
%"class.WTF::VectorBuffer.1871" = type { %"class.WTF::VectorBufferBase.1872" }
%"class.WTF::VectorBufferBase.1872" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1875 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1876" = type { %"class.blink::MemberBase.1877" }
%"class.blink::MemberBase.1877" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1878" = type { %"class.blink::MemberBase.1879" }
%"class.blink::MemberBase.1879" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1880" = type { %"class.blink::MemberBase.1881" }
%"class.blink::MemberBase.1881" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1882" = type { %"class.WTF::HashSet.1885" }
%"class.WTF::HashSet.1885" = type { %"class.WTF::HashTable.1886" }
%"class.WTF::HashTable.1886" = type <{ %"class.blink::WeakMember.1888"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1888" = type opaque
%"class.blink::HeapHashSet.1889" = type { %"class.WTF::HashSet.1892" }
%"class.WTF::HashSet.1892" = type { %"class.WTF::HashTable.1893" }
%"class.WTF::HashTable.1893" = type <{ %"class.blink::WeakMember.1895"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1895" = type opaque
%"class.std::__1::unique_ptr.1896" = type { %"class.std::__1::__compressed_pair.1897" }
%"class.std::__1::__compressed_pair.1897" = type { %"struct.std::__1::__compressed_pair_elem.1898" }
%"struct.std::__1::__compressed_pair_elem.1898" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1899" }
%"class.base::time_internal::TimeBase.1899" = type { i64 }
%"class.std::__1::unique_ptr.1903" = type { %"class.std::__1::__compressed_pair.1904" }
%"class.std::__1::__compressed_pair.1904" = type { %"struct.std::__1::__compressed_pair_elem.1905" }
%"struct.std::__1::__compressed_pair_elem.1905" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1906", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1906" = type { %"class.absl::optional_internal::optional_data.1907" }
%"class.absl::optional_internal::optional_data.1907" = type { %"class.absl::optional_internal::optional_data_base.1908" }
%"class.absl::optional_internal::optional_data_base.1908" = type { %"class.absl::optional_internal::optional_data_dtor_base.1909" }
%"class.absl::optional_internal::optional_data_dtor_base.1909" = type { i8, %union.anon.1910 }
%union.anon.1910 = type { %"class.base::Time" }
%"class.WTF::Vector.672" = type { %"class.WTF::VectorBuffer.673" }
%"class.WTF::VectorBuffer.673" = type { %"class.WTF::VectorBufferBase.674" }
%"class.WTF::VectorBufferBase.674" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.blink::Member.617" = type { %"class.blink::MemberBase.618" }
%"class.blink::MemberBase.618" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.622" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.397", %"class.blink::Member.397" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.397", %"class.blink::Member.594", %"class.blink::Member.397", %"class.blink::Member.397", %"class.blink::Member.596" }
%"class.blink::Member.594" = type { %"class.blink::MemberBase.595" }
%"class.blink::MemberBase.595" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.600", %"class.blink::Member.300", %"class.blink::Member.594", %"class.blink::Member.602", %"class.blink::Member.602", %"class.blink::Member.647", %"class.blink::Member.649", %"class.blink::Member.651", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.656", %"class.blink::HeapVector.658" }
%"class.blink::Member.600" = type { %"class.blink::MemberBase.601" }
%"class.blink::MemberBase.601" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.300" = type { %"class.blink::MemberBase.301" }
%"class.blink::MemberBase.301" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.672", %"class.WTF::Vector.672", i8, i32, %"class.blink::Member.679", %"class.blink::Member.681", %"class.blink::Member.683", %"class.blink::Member.685", %"class.blink::Member.687", %"class.blink::Member.689", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.697", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.703", %"class.blink::Member.705", %"class.blink::Member.369", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.708", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.640", %"class.blink::Member.617", %"class.blink::Member.927", %"class.blink::Member.617", %"class.blink::Member.617", %"class.blink::Member.617", %"class.blink::UserActionElementSet", %"class.blink::Member.936", double, double, i64, i64, %"class.blink::HeapHashSet.938", %"class.blink::HeapHashSet.945", i16, i8, %"class.blink::Member.952", %"class.blink::Member.954", %"class.blink::Member.956", %"class.blink::Member.958", %"class.blink::TextLinkColors", %"class.blink::Member.960", i8, [7 x i8], %"class.blink::HeapHashMap.962", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.617", %"class.WTF::Vector.969", %"class.blink::Member.974", %"class.blink::Member.978", i8, %"class.blink::Member.617", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.980", %"class.blink::HeapVector.982", %"class.std::__1::unique_ptr.990", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.996", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1009", %"class.WTF::Vector.1011", i8, i8, %"class.std::__1::unique_ptr.1016", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.640", %"class.blink::HeapVector.1022", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1030", i8, i32, %"class.blink::Member.1032", %"class.blink::Member.1034", %"class.blink::Member.1036", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1038", %"class.WTF::HashMap.1040", %"class.blink::Member.1045", %"class.blink::Member.1047", %"class.blink::Member.1053", %"class.blink::Member.1055", %"class.blink::Member.300", %"class.blink::Member.300", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1057", i8, i32, %"class.blink::Member.1064", %"class.blink::Member.1066", i32, %"class.blink::Member.1068", %"class.blink::Member.1070", %"class.blink::Member.1072", %"class.std::__1::unique_ptr.1074", i64, %"class.std::__1::unique_ptr.1080", i32, i32, %"class.blink::Member.1086", %"class.blink::Member.1088", %"class.blink::Member.1090", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1092", %"class.WTF::Vector.1094", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1099", %"class.blink::Member.1106", %"class.std::__1::unique_ptr.1108", %"class.blink::Member.1114", i8, i8, %"class.WTF::String", %"class.blink::Member.1116", i8, [7 x i8], %"class.blink::HeapHashMap.1118", %"class.blink::HeapObserverSet.1125", %"class.blink::Member.1133", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1135", i32, i8, i8, %"class.blink::WeakMember.1137", %"class.blink::Member.1138" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.665" }
%"class.blink::HeapHashMap.665" = type { %"class.WTF::HashMap.668" }
%"class.WTF::HashMap.668" = type { %"class.WTF::HashTable.669" }
%"class.WTF::HashTable.669" = type <{ %"struct.WTF::KeyValuePair.671"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.671" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.679" = type { %"class.blink::MemberBase.680" }
%"class.blink::MemberBase.680" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.681" = type { %"class.blink::MemberBase.682" }
%"class.blink::MemberBase.682" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1156", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1221", i32, i8, [3 x i8], %"class.blink::HeapVector.1223", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1231", %"class.blink::Member.1233", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1242", %"class.blink::Member.1366", %"class.blink::Member.1368", i8, [7 x i8] }>
%"class.blink::Supplementable.1156" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1157" }
%"class.blink::HeapHashMap.1157" = type { %"class.WTF::HashMap.1160" }
%"class.WTF::HashMap.1160" = type { %"class.WTF::HashTable.1161" }
%"class.WTF::HashTable.1161" = type <{ %"struct.WTF::KeyValuePair.1163"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1163" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1164" }
%"class.blink::Supplementable.1164" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1165" }
%"class.blink::HeapHashMap.1165" = type { %"class.WTF::HashMap.1168" }
%"class.WTF::HashMap.1168" = type { %"class.WTF::HashTable.1169" }
%"class.WTF::HashTable.1169" = type <{ %"struct.WTF::KeyValuePair.1171"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1171" = type { i8*, %"class.blink::Member.2320" }
%"class.blink::Member.2320" = type { %"class.blink::MemberBase.2321" }
%"class.blink::MemberBase.2321" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2322" }
%"class.blink::Member.2322" = type { %"class.blink::MemberBase.2323" }
%"class.blink::MemberBase.2323" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1172, %"class.std::__1::unique_ptr.1181", %"class.std::__1::unique_ptr.1181", %"class.std::__1::unique_ptr.1211", %"class.std::__1::unique_ptr.1211", %"class.blink::Member.681", i32, [4 x i8], %"class.WTF::HashSet.1217", i32, i32 }
%class.scoped_refptr.1172 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1173", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1175", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1180 }
%"class.WTF::RefCounted.1173" = type { %"class.base::RefCounted.1174" }
%"class.base::RefCounted.1174" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1175" = type { %"class.absl::optional_internal::optional_data.1176" }
%"class.absl::optional_internal::optional_data.1176" = type { %"class.absl::optional_internal::optional_data_base.1177" }
%"class.absl::optional_internal::optional_data_base.1177" = type { %"class.absl::optional_internal::optional_data_dtor_base.1178" }
%"class.absl::optional_internal::optional_data_dtor_base.1178" = type { i8, %union.anon.1179 }
%union.anon.1179 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.1180 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1181" = type { %"class.std::__1::__compressed_pair.1182" }
%"class.std::__1::__compressed_pair.1182" = type { %"struct.std::__1::__compressed_pair_elem.1183" }
%"struct.std::__1::__compressed_pair_elem.1183" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.1198", %"class.std::__1::map.1207"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1175" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1190", %"class.std::__1::__compressed_pair.1195" }
%"class.std::__1::__compressed_pair.1190" = type { %"struct.std::__1::__compressed_pair_elem.1191" }
%"class.std::__1::__compressed_pair.1195" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%"class.std::__1::map.1198" = type { %"class.std::__1::__tree.1199" }
%"class.std::__1::__tree.1199" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1200", %"class.std::__1::__compressed_pair.1204" }
%"class.std::__1::__compressed_pair.1200" = type { %"struct.std::__1::__compressed_pair_elem.1191" }
%"class.std::__1::__compressed_pair.1204" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%"class.std::__1::map.1207" = type opaque
%"class.std::__1::unique_ptr.1211" = type { %"class.std::__1::__compressed_pair.1212" }
%"class.std::__1::__compressed_pair.1212" = type { %"struct.std::__1::__compressed_pair_elem.1213" }
%"struct.std::__1::__compressed_pair_elem.1213" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1217" = type { %"class.WTF::HashTable.1218" }
%"class.WTF::HashTable.1218" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1221" = type { %"class.blink::MemberBase.1222" }
%"class.blink::MemberBase.1222" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1223" = type { %"class.WTF::Vector.1226" }
%"class.WTF::Vector.1226" = type { %"class.WTF::VectorBuffer.1227" }
%"class.WTF::VectorBuffer.1227" = type { %"class.WTF::VectorBufferBase.1228" }
%"class.WTF::VectorBufferBase.1228" = type { %"class.blink::Member.1229"*, i32, i32 }
%"class.blink::Member.1229" = type opaque
%"class.blink::Member.1231" = type { %"class.blink::MemberBase.1232" }
%"class.blink::MemberBase.1232" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1235", i32, i32 }
%"class.blink::HeapHashMap.1235" = type { %"class.WTF::HashMap.1238" }
%"class.WTF::HashMap.1238" = type { %"class.WTF::HashTable.1239" }
%"class.WTF::HashTable.1239" = type <{ %"struct.WTF::KeyValuePair.1241"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1241" = type opaque
%"class.std::__1::unique_ptr.1242" = type { %"class.std::__1::__compressed_pair.1243" }
%"class.std::__1::__compressed_pair.1243" = type { %"struct.std::__1::__compressed_pair_elem.1244" }
%"struct.std::__1::__compressed_pair_elem.1244" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr.1245", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr.1245" = type { %"class.std::__1::unique_ptr.1246" }
%"class.std::__1::unique_ptr.1246" = type { %"class.std::__1::__compressed_pair.1247" }
%"class.std::__1::__compressed_pair.1247" = type { %"struct.std::__1::__compressed_pair_elem.1248" }
%"struct.std::__1::__compressed_pair_elem.1248" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1249" }
%"class.WTF::Vector.1249" = type { %"class.WTF::VectorBuffer.1250" }
%"class.WTF::VectorBuffer.1250" = type { %"class.WTF::VectorBufferBase.1251" }
%"class.WTF::VectorBufferBase.1251" = type { %"class.mojo::StructPtr.1252"*, i32, i32 }
%"class.mojo::StructPtr.1252" = type { %"class.std::__1::unique_ptr.1253" }
%"class.std::__1::unique_ptr.1253" = type { %"class.std::__1::__compressed_pair.1254" }
%"class.std::__1::__compressed_pair.1254" = type { %"struct.std::__1::__compressed_pair_elem.1255" }
%"struct.std::__1::__compressed_pair_elem.1255" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1256", %"class.WTF::HashMap.1263", %"class.WTF::HashMap.1268", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.1273", i32, %"class.mojo::StructPtr.1278", %"class.WTF::Vector.1273" }
%"class.mojo::StructPtr.1256" = type { %"class.std::__1::unique_ptr.1257" }
%"class.std::__1::unique_ptr.1257" = type { %"class.std::__1::__compressed_pair.1258" }
%"class.std::__1::__compressed_pair.1258" = type { %"struct.std::__1::__compressed_pair_elem.1259" }
%"struct.std::__1::__compressed_pair_elem.1259" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1263" = type { %"class.WTF::HashTable.1264" }
%"class.WTF::HashTable.1264" = type <{ %"struct.WTF::KeyValuePair.1267"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1267" = type opaque
%"class.WTF::HashMap.1268" = type { %"class.WTF::HashTable.1269" }
%"class.WTF::HashTable.1269" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1278" = type { %"class.std::__1::unique_ptr.1279" }
%"class.std::__1::unique_ptr.1279" = type { %"class.std::__1::__compressed_pair.1280" }
%"class.std::__1::__compressed_pair.1280" = type { %"struct.std::__1::__compressed_pair_elem.1281" }
%"struct.std::__1::__compressed_pair_elem.1281" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.1273", i8, i8, [6 x i8] }>
%"class.WTF::Vector.1273" = type { %"class.WTF::VectorBuffer.1274" }
%"class.WTF::VectorBuffer.1274" = type { %"class.WTF::VectorBufferBase.1275" }
%"class.WTF::VectorBufferBase.1275" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1357" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.1293", i32 }>
%"class.std::__1::unique_ptr.1357" = type { %"class.std::__1::__compressed_pair.1358" }
%"class.std::__1::__compressed_pair.1358" = type { %"struct.std::__1::__compressed_pair_elem.1359" }
%"struct.std::__1::__compressed_pair_elem.1359" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1366" = type { %"class.blink::MemberBase.1367" }
%"class.blink::MemberBase.1367" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1368" = type { %"class.blink::MemberBase.1369" }
%"class.blink::MemberBase.1369" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.1233", i8, [7 x i8], %"class.WTF::Vector.1249", %"class.blink::HeapVector.1372", i8, [7 x i8], %"class.WTF::HashSet.1217", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.1372" = type { %"class.WTF::Vector.1375" }
%"class.WTF::Vector.1375" = type { %"class.WTF::VectorBuffer.1376" }
%"class.WTF::VectorBuffer.1376" = type { %"class.WTF::VectorBufferBase.1377" }
%"class.WTF::VectorBufferBase.1377" = type { %"class.blink::Member.1378"*, i32, i32 }
%"class.blink::Member.1378" = type opaque
%"class.blink::Member.683" = type { %"class.blink::MemberBase.684" }
%"class.blink::MemberBase.684" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.685" = type { %"class.blink::MemberBase.686" }
%"class.blink::MemberBase.686" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.687" = type { %"class.blink::MemberBase.688" }
%"class.blink::MemberBase.688" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.689" = type { %"class.blink::MemberBase.690" }
%"class.blink::MemberBase.690" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.697" = type { %"class.std::__1::__compressed_pair.698" }
%"class.std::__1::__compressed_pair.698" = type { %"struct.std::__1::__compressed_pair_elem.699" }
%"struct.std::__1::__compressed_pair_elem.699" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.703" = type { %"class.blink::MemberBase.704" }
%"class.blink::MemberBase.704" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.705" = type { %"class.blink::MemberBase.706" }
%"class.blink::MemberBase.706" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.369" = type { %"class.blink::MemberBase.370" }
%"class.blink::MemberBase.370" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.373", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.375, %"class.WTF::Vector.392", %"class.WTF::Vector.392", %"class.blink::Member.397", %"class.blink::Member.399", %"class.blink::HeapHashSet.403", %"class.blink::Member.300", %"class.WTF::HashSet.409", %"class.WTF::TextPosition", %"class.blink::Member.413", %"class.blink::HeapVector.415", %"class.blink::Member.422" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.373" = type { %"class.blink::MemberBase.374" }
%"class.blink::MemberBase.374" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.375 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted", %"class.WTF::Vector.376" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.376" = type { %"class.WTF::VectorBuffer.377" }
%"class.WTF::VectorBuffer.377" = type { %"class.WTF::VectorBufferBase.378" }
%"class.WTF::VectorBufferBase.378" = type { %"class.std::__1::unique_ptr.379"*, i32, i32 }
%"class.std::__1::unique_ptr.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381" }
%"struct.std::__1::__compressed_pair_elem.381" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.382", %"class.WTF::String" }
%"class.WTF::Vector.382" = type { %"class.WTF::VectorBuffer.383" }
%"class.WTF::VectorBuffer.383" = type { %"class.WTF::VectorBufferBase.384" }
%"class.WTF::VectorBufferBase.384" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.392" = type { %"class.WTF::VectorBuffer.393" }
%"class.WTF::VectorBuffer.393" = type { %"class.WTF::VectorBufferBase.394" }
%"class.WTF::VectorBufferBase.394" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.399" = type { %"class.blink::MemberBase.400" }
%"class.blink::MemberBase.400" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.401" }
%"class.blink::Member.401" = type { %"class.blink::MemberBase.402" }
%"class.blink::MemberBase.402" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.403" = type { %"class.WTF::HashSet.406" }
%"class.WTF::HashSet.406" = type { %"class.WTF::HashTable.407" }
%"class.WTF::HashTable.407" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.595" }
%"class.WTF::HashSet.409" = type { %"class.WTF::HashTable.410" }
%"class.WTF::HashTable.410" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.413" = type { %"class.blink::MemberBase.414" }
%"class.blink::MemberBase.414" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.375, %"class.blink::Member.369", %"class.blink::Member.399" }
%"class.blink::HeapVector.415" = type { %"class.WTF::Vector.418" }
%"class.WTF::Vector.418" = type { %"class.WTF::VectorBuffer.419" }
%"class.WTF::VectorBuffer.419" = type { %"class.WTF::VectorBufferBase.420" }
%"class.WTF::VectorBufferBase.420" = type { %"class.blink::Member.399"*, i32, i32 }
%"class.blink::Member.422" = type { %"class.blink::MemberBase.423" }
%"class.blink::MemberBase.423" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.WTF::Vector.708" = type { %"class.WTF::VectorBuffer.709" }
%"class.WTF::VectorBuffer.709" = type { %"class.WTF::VectorBufferBase.710" }
%"class.WTF::VectorBufferBase.710" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.712", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.716" }
%"class.blink::HeapHashMap.716" = type { %"class.WTF::HashMap.719" }
%"class.WTF::HashMap.719" = type { %"class.WTF::HashTable.720" }
%"class.WTF::HashTable.720" = type <{ %"struct.WTF::KeyValuePair.722"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.722" = type { %"class.blink::WeakMember.723", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.723" = type { %"class.blink::MemberBase.724" }
%"class.blink::MemberBase.724" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.927" = type { %"class.blink::MemberBase.928" }
%"class.blink::MemberBase.928" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.300", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.397", %"class.blink::Member.397", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.929" }
%"class.blink::HeapHashMap.929" = type { %"class.WTF::HashMap.932" }
%"class.WTF::HashMap.932" = type { %"class.WTF::HashTable.933" }
%"class.WTF::HashTable.933" = type <{ %"struct.WTF::KeyValuePair.935"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.935" = type opaque
%"class.blink::Member.936" = type { %"class.blink::MemberBase.937" }
%"class.blink::MemberBase.937" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.938" = type { %"class.WTF::HashSet.941" }
%"class.WTF::HashSet.941" = type { %"class.WTF::HashTable.942" }
%"class.WTF::HashTable.942" = type <{ %"class.blink::WeakMember.944"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.944" = type opaque
%"class.blink::HeapHashSet.945" = type { %"class.WTF::HashSet.948" }
%"class.WTF::HashSet.948" = type { %"class.WTF::HashTable.949" }
%"class.WTF::HashTable.949" = type <{ %"class.blink::WeakMember.951"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.951" = type opaque
%"class.blink::Member.952" = type { %"class.blink::MemberBase.953" }
%"class.blink::MemberBase.953" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.954" = type { %"class.blink::MemberBase.955" }
%"class.blink::MemberBase.955" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.956" = type { %"class.blink::MemberBase.957" }
%"class.blink::MemberBase.957" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.594", %"class.blink::HeapVector.658" }
%"class.blink::Member.958" = type { %"class.blink::MemberBase.959" }
%"class.blink::MemberBase.959" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.960" = type { %"class.blink::MemberBase.961" }
%"class.blink::MemberBase.961" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.962" = type { %"class.WTF::HashMap.965" }
%"class.WTF::HashMap.965" = type { %"class.WTF::HashTable.966" }
%"class.WTF::HashTable.966" = type <{ %"struct.WTF::KeyValuePair.968"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.968" = type opaque
%"class.WTF::Vector.969" = type { %"class.WTF::VectorBuffer.970" }
%"class.WTF::VectorBuffer.970" = type { %"class.WTF::VectorBufferBase.971" }
%"class.WTF::VectorBufferBase.971" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.974" = type { %"class.blink::MemberBase.975" }
%"class.blink::MemberBase.975" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.978" = type { %"class.blink::MemberBase.979" }
%"class.blink::MemberBase.979" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.980" = type { %"class.blink::MemberBase.981" }
%"class.blink::MemberBase.981" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.982" = type { %"class.WTF::Vector.985" }
%"class.WTF::Vector.985" = type { %"class.WTF::VectorBuffer.986" }
%"class.WTF::VectorBuffer.986" = type { %"class.WTF::VectorBufferBase.987" }
%"class.WTF::VectorBufferBase.987" = type { %"class.blink::Member.988"*, i32, i32 }
%"class.blink::Member.988" = type opaque
%"class.std::__1::unique_ptr.990" = type { %"class.std::__1::__compressed_pair.991" }
%"class.std::__1::__compressed_pair.991" = type { %"struct.std::__1::__compressed_pair_elem.992" }
%"struct.std::__1::__compressed_pair_elem.992" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.996" = type { %"class.WTF::HashSet.999" }
%"class.WTF::HashSet.999" = type { %"class.WTF::HashTable.1000" }
%"class.WTF::HashTable.1000" = type <{ %"class.blink::WeakMember.1002"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1002" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1003", i32, [4 x i8] }>
%"class.WTF::Vector.1003" = type { %"class.WTF::VectorBuffer.1004" }
%"class.WTF::VectorBuffer.1004" = type { %"class.WTF::VectorBufferBase.1005" }
%"class.WTF::VectorBufferBase.1005" = type { %"struct.std::__1::pair.1006"*, i32, i32 }
%"struct.std::__1::pair.1006" = type opaque
%"class.blink::Member.1009" = type { %"class.blink::MemberBase.1010" }
%"class.blink::MemberBase.1010" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1011" = type { %"class.WTF::VectorBuffer.1012" }
%"class.WTF::VectorBuffer.1012" = type { %"class.WTF::VectorBufferBase.1013" }
%"class.WTF::VectorBufferBase.1013" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1016" = type { %"class.std::__1::__compressed_pair.1017" }
%"class.std::__1::__compressed_pair.1017" = type { %"struct.std::__1::__compressed_pair_elem.1018" }
%"struct.std::__1::__compressed_pair_elem.1018" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.640" = type { %"class.WTF::Vector.643" }
%"class.WTF::Vector.643" = type { %"class.WTF::VectorBuffer.644" }
%"class.WTF::VectorBuffer.644" = type { %"class.WTF::VectorBufferBase.645" }
%"class.WTF::VectorBufferBase.645" = type { %"class.blink::Member.617"*, i32, i32 }
%"class.blink::HeapVector.1022" = type { %"class.WTF::Vector.1025" }
%"class.WTF::Vector.1025" = type { %"class.WTF::VectorBuffer.1026" }
%"class.WTF::VectorBuffer.1026" = type { %"class.WTF::VectorBufferBase.1027" }
%"class.WTF::VectorBufferBase.1027" = type { %"class.blink::Member.1028"*, i32, i32 }
%"class.blink::Member.1028" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.300" }
%"class.blink::Member.1030" = type { %"class.blink::MemberBase.1031" }
%"class.blink::MemberBase.1031" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1032" = type { %"class.blink::MemberBase.1033" }
%"class.blink::MemberBase.1033" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1034" = type { %"class.blink::MemberBase.1035" }
%"class.blink::MemberBase.1035" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1036" = type { %"class.blink::MemberBase.1037" }
%"class.blink::MemberBase.1037" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1038" = type { %"class.blink::MemberBase.1039" }
%"class.blink::MemberBase.1039" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1040" = type { %"class.WTF::HashTable.1041" }
%"class.WTF::HashTable.1041" = type <{ %"struct.WTF::KeyValuePair.1044"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1044" = type opaque
%"class.blink::Member.1045" = type { %"class.blink::MemberBase.1046" }
%"class.blink::MemberBase.1046" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1047" = type { %"class.blink::MemberBase.1048" }
%"class.blink::MemberBase.1048" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type { %"class.blink::AnimationTimeline", %"class.base::TimeDelta", %"class.base::TimeTicks", i8, double, %"class.blink::Member.1049" }
%"class.blink::AnimationTimeline" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.300", i32, [4 x i8], %"class.blink::HeapHashSet.511", %"class.blink::HeapHashSet.517", %"class.std::__1::unique_ptr.524", %"class.absl::optional.549" }
%"class.blink::HeapHashSet.511" = type { %"class.WTF::HashSet.514" }
%"class.WTF::HashSet.514" = type { %"class.WTF::HashTable.515" }
%"class.WTF::HashTable.515" = type <{ %"class.blink::Member.442"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.442" = type { %"class.blink::MemberBase.443" }
%"class.blink::MemberBase.443" = type { %"class.blink::Animation"* }
%"class.blink::Animation" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::CompositorAnimationDelegate", %"class.blink::CompositorAnimationClient", %"class.blink::AnimationEffectOwner", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.WTF::String", i32, [4 x i8], double, %"class.absl::optional.473", %"class.absl::optional.478", %"class.absl::optional.478", %"class.absl::optional.483", %"class.absl::optional.478", i8, [3 x i8], i32, %"class.blink::Member.488", %"class.blink::Member.488", %"class.blink::Member.490", %"class.blink::Member.300", %"class.blink::Member.509", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.blink::Member.559", %"class.blink::Member.559", %"class.blink::Member.559", %"class.std::__1::unique_ptr.572", i8, [3 x i8], i32, %"class.blink::Member.578", i8, [7 x i8], %"class.base::TimeTicks", i8, i8, i8, [5 x i8] }>
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::CompositorAnimationDelegate" = type { i32 (...)** }
%"class.blink::CompositorAnimationClient" = type { i32 (...)** }
%"class.blink::AnimationEffectOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.absl::optional.473" = type { %"class.absl::optional_internal::optional_data.474" }
%"class.absl::optional_internal::optional_data.474" = type { %"class.absl::optional_internal::optional_data_base.475" }
%"class.absl::optional_internal::optional_data_base.475" = type { %"class.absl::optional_internal::optional_data_dtor_base.476" }
%"class.absl::optional_internal::optional_data_dtor_base.476" = type { i8, %union.anon.477 }
%union.anon.477 = type { double }
%"class.absl::optional.483" = type { %"class.absl::optional_internal::optional_data.484" }
%"class.absl::optional_internal::optional_data.484" = type { %"class.absl::optional_internal::optional_data_base.485" }
%"class.absl::optional_internal::optional_data_base.485" = type { %"class.absl::optional_internal::optional_data_dtor_base.486" }
%"class.absl::optional_internal::optional_data_dtor_base.486" = type { i8, %union.anon.487 }
%union.anon.487 = type { i32 }
%"class.absl::optional.478" = type { %"class.absl::optional_internal::optional_data.479" }
%"class.absl::optional_internal::optional_data.479" = type { %"class.absl::optional_internal::optional_data_base.480" }
%"class.absl::optional_internal::optional_data_base.480" = type { %"class.absl::optional_internal::optional_data_dtor_base.481" }
%"class.absl::optional_internal::optional_data_dtor_base.481" = type { i8, %union.anon.482 }
%union.anon.482 = type { %"class.blink::AnimationTimeDelta" }
%"class.blink::AnimationTimeDelta" = type { double }
%"class.blink::Member.488" = type { %"class.blink::MemberBase.489" }
%"class.blink::MemberBase.489" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.blink::Member.490" = type { %"class.blink::MemberBase.491" }
%"class.blink::MemberBase.491" = type { %"class.blink::AnimationEffect"* }
%"class.blink::AnimationEffect" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.492", %"struct.blink::Timing", %"class.blink::Member.500", %"struct.blink::Timing::CalculatedTiming", i8, %"class.absl::optional.478", %"class.absl::optional.504", %"class.blink::AnimationTimeDelta" }
%"class.blink::Member.492" = type { %"class.blink::MemberBase.493" }
%"class.blink::MemberBase.493" = type { %"class.blink::AnimationEffectOwner"* }
%"struct.blink::Timing" = type <{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, %"class.absl::optional.478", i32, [4 x i8], %class.scoped_refptr.494, i16, [6 x i8] }>
%class.scoped_refptr.494 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.500" = type { %"class.blink::MemberBase.501" }
%"class.blink::MemberBase.501" = type { %"class.blink::AnimationEffect::EventDelegate"* }
%"class.blink::AnimationEffect::EventDelegate" = type { i32 (...)** }
%"struct.blink::Timing::CalculatedTiming" = type { i32, %"class.absl::optional.473", %"class.absl::optional.473", i8, i8, i8, %"class.absl::optional.478", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.504" = type { %"class.absl::optional_internal::optional_data.505" }
%"class.absl::optional_internal::optional_data.505" = type { %"class.absl::optional_internal::optional_data_base.506" }
%"class.absl::optional_internal::optional_data_base.506" = type { %"class.absl::optional_internal::optional_data_dtor_base.507" }
%"class.absl::optional_internal::optional_data_dtor_base.507" = type { i8, %union.anon.508 }
%union.anon.508 = type { i32 }
%"class.blink::Member.509" = type { %"class.blink::MemberBase.510" }
%"class.blink::MemberBase.510" = type { %"class.blink::AnimationTimeline"* }
%"class.blink::Member.559" = type { %"class.blink::MemberBase.560" }
%"class.blink::MemberBase.560" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.566", %"class.blink::Member.566", %"class.blink::Member.568", %"class.blink::Member.570", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.561" }
%"class.absl::optional.561" = type { %"class.absl::optional_internal::optional_data.562" }
%"class.absl::optional_internal::optional_data.562" = type { %"class.absl::optional_internal::optional_data_base.563" }
%"class.absl::optional_internal::optional_data_base.563" = type { %"class.absl::optional_internal::optional_data_dtor_base.564" }
%"class.absl::optional_internal::optional_data_dtor_base.564" = type { i8, %union.anon.565 }
%union.anon.565 = type { i64 }
%"class.blink::Member.566" = type { %"class.blink::MemberBase.567" }
%"class.blink::MemberBase.567" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.568" = type { %"class.blink::MemberBase.569" }
%"class.blink::MemberBase.569" = type { %"class.blink::Event"* }
%"class.blink::Member.570" = type { %"class.blink::MemberBase.571" }
%"class.blink::MemberBase.571" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.std::__1::unique_ptr.572" = type { %"class.std::__1::__compressed_pair.573" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.574" }
%"struct.std::__1::__compressed_pair_elem.574" = type { %"class.blink::Animation::CompositorState"* }
%"class.blink::Animation::CompositorState" = type { %"class.absl::optional.473", %"class.absl::optional.473", double, i8, i32 }
%"class.blink::Member.578" = type { %"class.blink::MemberBase.579" }
%"class.blink::MemberBase.579" = type { %"class.blink::Animation::CompositorAnimationHolder"* }
%"class.blink::Animation::CompositorAnimationHolder" = type { %"class.blink::ThreadState::PrefinalizerRegistration.587", %"class.std::__1::unique_ptr.588", %"class.blink::Member.442" }
%"class.blink::ThreadState::PrefinalizerRegistration.587" = type { i8 }
%"class.std::__1::unique_ptr.588" = type { %"class.std::__1::__compressed_pair.589" }
%"class.std::__1::__compressed_pair.589" = type { %"struct.std::__1::__compressed_pair_elem.590" }
%"struct.std::__1::__compressed_pair_elem.590" = type { %"class.blink::CompositorAnimation"* }
%"class.blink::CompositorAnimation" = type opaque
%"class.blink::HeapHashSet.517" = type { %"class.WTF::HashSet.520" }
%"class.WTF::HashSet.520" = type { %"class.WTF::HashTable.521" }
%"class.WTF::HashTable.521" = type <{ %"class.blink::WeakMember.523"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.523" = type opaque
%"class.std::__1::unique_ptr.524" = type { %"class.std::__1::__compressed_pair.525" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.526" }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"class.blink::CompositorAnimationTimeline"* }
%"class.blink::CompositorAnimationTimeline" = type { %class.scoped_refptr.527 }
%class.scoped_refptr.527 = type { %"class.cc::AnimationTimeline"* }
%"class.cc::AnimationTimeline" = type <{ i32 (...)**, %"class.base::RefCounted.528", [4 x i8], %"class.std::__1::unordered_map", i32, [4 x i8], %"class.cc::AnimationHost"*, i8, i8, [6 x i8] }>
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.529", %"class.std::__1::__compressed_pair.536", %"class.std::__1::__compressed_pair.541", %"class.std::__1::__compressed_pair.543", [4 x i8] }>
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531", %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.533" }
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.541" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"class.cc::AnimationHost" = type opaque
%"class.absl::optional.549" = type { %"class.absl::optional_internal::optional_data.550" }
%"class.absl::optional_internal::optional_data.550" = type { %"class.absl::optional_internal::optional_data_base.551" }
%"class.absl::optional_internal::optional_data_base.551" = type { %"class.absl::optional_internal::optional_data_dtor_base.552" }
%"class.absl::optional_internal::optional_data_dtor_base.552" = type { i8, %union.anon.553 }
%union.anon.553 = type { %"struct.blink::AnimationTimeline::PhaseAndTime" }
%"struct.blink::AnimationTimeline::PhaseAndTime" = type { i32, %"class.absl::optional.554" }
%"class.blink::Member.1049" = type { %"class.blink::MemberBase.1050" }
%"class.blink::MemberBase.1050" = type { %"class.blink::DocumentTimeline::PlatformTiming"* }
%"class.blink::DocumentTimeline::PlatformTiming" = type { i32 (...)** }
%"class.blink::Member.1053" = type { %"class.blink::MemberBase.1054" }
%"class.blink::MemberBase.1054" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1055" = type { %"class.blink::MemberBase.1056" }
%"class.blink::MemberBase.1056" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.926", { i64, i64 } }
%"class.blink::WeakMember.926" = type { %"class.blink::MemberBase.301" }
%"class.blink::HeapHashSet.1057" = type { %"class.WTF::HashSet.1060" }
%"class.WTF::HashSet.1060" = type { %"class.WTF::HashTable.1061" }
%"class.WTF::HashTable.1061" = type <{ %"class.blink::Member.1063"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1063" = type opaque
%"class.blink::Member.1064" = type { %"class.blink::MemberBase.1065" }
%"class.blink::MemberBase.1065" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1066" = type { %"class.blink::MemberBase.1067" }
%"class.blink::MemberBase.1067" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1068" = type { %"class.blink::MemberBase.1069" }
%"class.blink::MemberBase.1069" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1070" = type { %"class.blink::MemberBase.1071" }
%"class.blink::MemberBase.1071" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1072" = type { %"class.blink::MemberBase.1073" }
%"class.blink::MemberBase.1073" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1074" = type { %"class.std::__1::__compressed_pair.1075" }
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.1076" }
%"struct.std::__1::__compressed_pair_elem.1076" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1080" = type { %"class.std::__1::__compressed_pair.1081" }
%"class.std::__1::__compressed_pair.1081" = type { %"struct.std::__1::__compressed_pair_elem.1082" }
%"struct.std::__1::__compressed_pair_elem.1082" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1086" = type { %"class.blink::MemberBase.1087" }
%"class.blink::MemberBase.1087" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1088" = type { %"class.blink::MemberBase.1089" }
%"class.blink::MemberBase.1089" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1090" = type { %"class.blink::MemberBase.1091" }
%"class.blink::MemberBase.1091" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1092" = type { %"class.blink::MemberBase.1093" }
%"class.blink::MemberBase.1093" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.blink::HeapHashMap.1099" = type { %"class.WTF::HashMap.1102" }
%"class.WTF::HashMap.1102" = type { %"class.WTF::HashTable.1103" }
%"class.WTF::HashTable.1103" = type <{ %"struct.WTF::KeyValuePair.1105"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1105" = type opaque
%"class.blink::Member.1106" = type { %"class.blink::MemberBase.1107" }
%"class.blink::MemberBase.1107" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1108" = type { %"class.std::__1::__compressed_pair.1109" }
%"class.std::__1::__compressed_pair.1109" = type { %"struct.std::__1::__compressed_pair_elem.1110" }
%"struct.std::__1::__compressed_pair_elem.1110" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1114" = type { %"class.blink::MemberBase.1115" }
%"class.blink::MemberBase.1115" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1116" = type { %"class.blink::MemberBase.1117" }
%"class.blink::MemberBase.1117" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1118" = type { %"class.WTF::HashMap.1121" }
%"class.WTF::HashMap.1121" = type { %"class.WTF::HashTable.1122" }
%"class.WTF::HashTable.1122" = type <{ %"struct.WTF::KeyValuePair.1124"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1124" = type opaque
%"class.blink::HeapObserverSet.1125" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1126" }
%"class.blink::HeapHashSet.1126" = type { %"class.WTF::HashSet.1129" }
%"class.WTF::HashSet.1129" = type { %"class.WTF::HashTable.1130" }
%"class.WTF::HashTable.1130" = type <{ %"class.blink::WeakMember.1132"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1132" = type opaque
%"class.blink::Member.1133" = type { %"class.blink::MemberBase.1134" }
%"class.blink::MemberBase.1134" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1135" = type { %"class.blink::MemberBase.1136" }
%"class.blink::MemberBase.1136" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.300", %"class.blink::HeapHashSet.1142", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1149", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1142" = type { %"class.WTF::HashSet.1145" }
%"class.WTF::HashSet.1145" = type { %"class.WTF::HashTable.1146" }
%"class.WTF::HashTable.1146" = type <{ %"class.blink::Member.1148"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1148" = type opaque
%"class.blink::HeapTaskRunnerTimer.1149" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1150", { i64, i64 } }
%"class.blink::WeakMember.1150" = type { %"class.blink::MemberBase.1136" }
%"class.blink::WeakMember.1137" = type { %"class.blink::MemberBase.398" }
%"class.blink::MemberBase.398" = type { %"class.blink::Node"* }
%"class.blink::Member.1138" = type { %"class.blink::MemberBase.1139" }
%"class.blink::MemberBase.1139" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.602" = type { %"class.blink::MemberBase.603" }
%"class.blink::MemberBase.603" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.606" }
%"class.blink::HeapHashMap.606" = type { %"class.WTF::HashMap.609" }
%"class.WTF::HashMap.609" = type { %"class.WTF::HashTable.610" }
%"class.WTF::HashTable.610" = type <{ %"struct.WTF::KeyValuePair.612"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.612" = type { %"class.WTF::AtomicString", %"class.blink::Member.613" }
%"class.blink::Member.613" = type { %"class.blink::MemberBase.614" }
%"class.blink::MemberBase.614" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.617", i32, %"class.blink::HeapVector.640" }
%"class.blink::Member.647" = type { %"class.blink::MemberBase.648" }
%"class.blink::MemberBase.648" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.649" = type { %"class.blink::MemberBase.650" }
%"class.blink::MemberBase.650" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.651" = type { %"class.blink::MemberBase.652" }
%"class.blink::MemberBase.652" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.653" }
%"class.blink::Member.653" = type { %"class.blink::MemberBase.654" }
%"class.blink::MemberBase.654" = type { %"class.blink::HeapHashMap.655"* }
%"class.blink::HeapHashMap.655" = type opaque
%"class.blink::Member.656" = type { %"class.blink::MemberBase.657" }
%"class.blink::MemberBase.657" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.658" = type { %"class.WTF::Vector.661" }
%"class.WTF::Vector.661" = type { %"class.WTF::VectorBuffer.662" }
%"class.WTF::VectorBuffer.662" = type { %"class.WTF::VectorBufferBase.663" }
%"class.WTF::VectorBufferBase.663" = type { %"class.blink::Member.369"*, i32, i32 }
%"class.blink::Member.596" = type { %"class.blink::MemberBase.597" }
%"class.blink::MemberBase.597" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.397" = type { %"class.blink::MemberBase.398" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.619 }
%class.scoped_refptr.619 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.620", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.620" = type { %"class.base::RefCounted.621" }
%"class.base::RefCounted.621" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.622" = type { %"class.blink::MemberBase.623" }
%"class.blink::MemberBase.623" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.626", %"class.blink::Member.628", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.626" = type { %"class.WTF::SingleThreadedBitField.627" }
%"class.WTF::SingleThreadedBitField.627" = type { i32 }
%"class.blink::Member.628" = type { %"class.blink::MemberBase.629" }
%"class.blink::MemberBase.629" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.632 }
%class.scoped_refptr.632 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.633", %"class.WTF::AtomicString", %"class.WTF::Vector.635" }
%"class.WTF::RefCounted.633" = type { %"class.base::RefCounted.634" }
%"class.base::RefCounted.634" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637", [32 x i8] }
%"class.WTF::VectorBufferBase.637" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Member.1570" = type { %"class.blink::MemberBase.1571" }
%"class.blink::MemberBase.1571" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1572" = type { %"class.blink::MemberBase.1573" }
%"class.blink::MemberBase.1573" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1574" = type { %"class.blink::MemberBase.1575" }
%"class.blink::MemberBase.1575" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1576" = type { %"class.blink::MemberBase.1577" }
%"class.blink::MemberBase.1577" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%class.scoped_refptr.1578 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1579" = type { %"class.blink::MemberBase.1580" }
%"class.blink::MemberBase.1580" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1594" = type { %"class.blink::MemberBase.1595" }
%"class.blink::MemberBase.1595" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1596" = type { %"class.blink::MemberBase.1597" }
%"class.blink::MemberBase.1597" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.1598" = type { %"class.blink::MemberBase.1599" }
%"class.blink::MemberBase.1599" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1600" = type { %"class.blink::MemberBase.1601" }
%"class.blink::MemberBase.1601" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1602" }
%"class.blink::Member.1602" = type { %"class.blink::MemberBase.1603" }
%"class.blink::MemberBase.1603" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2342" }
%"class.mojo::Remote.2342" = type { %"class.mojo::internal::InterfacePtrState.2343" }
%"class.mojo::internal::InterfacePtrState.2343" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2344" }
%"class.std::__1::unique_ptr.2344" = type { %"class.std::__1::__compressed_pair.2345" }
%"class.std::__1::__compressed_pair.2345" = type { %"struct.std::__1::__compressed_pair_elem.2346" }
%"struct.std::__1::__compressed_pair_elem.2346" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1604" = type { %"class.std::__1::__compressed_pair.1605" }
%"class.std::__1::__compressed_pair.1605" = type { %"struct.std::__1::__compressed_pair_elem.1606" }
%"struct.std::__1::__compressed_pair_elem.1606" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1610" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1611" = type { %"class.std::__1::__compressed_pair.1612" }
%"class.std::__1::__compressed_pair.1612" = type { %"struct.std::__1::__compressed_pair_elem.1613" }
%"struct.std::__1::__compressed_pair_elem.1613" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.1517" = type { %"class.absl::optional_internal::optional_data.1518" }
%"class.absl::optional_internal::optional_data.1518" = type { %"class.absl::optional_internal::optional_data_base.1519" }
%"class.absl::optional_internal::optional_data_base.1519" = type { %"class.absl::optional_internal::optional_data_dtor_base.1520" }
%"class.absl::optional_internal::optional_data_dtor_base.1520" = type { i8, %union.anon.1521 }
%union.anon.1521 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.1617" = type { %"class.std::__1::__compressed_pair.1618" }
%"class.std::__1::__compressed_pair.1618" = type { %"struct.std::__1::__compressed_pair_elem.1619" }
%"struct.std::__1::__compressed_pair_elem.1619" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1623" }
%"class.blink::Member.1623" = type { %"class.blink::MemberBase.1624" }
%"class.blink::MemberBase.1624" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2352" }
%"class.mojo::AssociatedRemote.2352" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2353" }
%"class.mojo::internal::AssociatedInterfacePtrState.2353" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2354" }
%"class.std::__1::unique_ptr.2354" = type { %"class.std::__1::__compressed_pair.2355" }
%"class.std::__1::__compressed_pair.2355" = type { %"struct.std::__1::__compressed_pair_elem.2356" }
%"struct.std::__1::__compressed_pair_elem.2356" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1625" = type { %"class.blink::Member.1626" }
%"class.blink::Member.1626" = type { %"class.blink::MemberBase.1627" }
%"class.blink::MemberBase.1627" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2362" }
%"class.mojo::AssociatedRemote.2362" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2363" }
%"class.mojo::internal::AssociatedInterfacePtrState.2363" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2364" }
%"class.std::__1::unique_ptr.2364" = type { %"class.std::__1::__compressed_pair.2365" }
%"class.std::__1::__compressed_pair.2365" = type { %"struct.std::__1::__compressed_pair_elem.2366" }
%"struct.std::__1::__compressed_pair_elem.2366" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1628" }
%"class.blink::Member.1628" = type { %"class.blink::MemberBase.1629" }
%"class.blink::MemberBase.1629" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2372", %"class.blink::Member.237", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2372" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2373" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.1293" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2373" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1630" = type { %"class.blink::Member.1631" }
%"class.blink::Member.1631" = type { %"class.blink::MemberBase.1632" }
%"class.blink::MemberBase.1632" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2376", %"class.blink::Member.237", %"class.mojo::AssociatedReceiver.2377" }
%"class.blink::ThreadState::PrefinalizerRegistration.2376" = type { i8 }
%"class.mojo::AssociatedReceiver.2377" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2378" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2378" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1633" }
%"class.blink::Member.1633" = type { %"class.blink::MemberBase.1634" }
%"class.blink::MemberBase.1634" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2381", %"class.blink::Member.237", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2381" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.1400, %"class.std::__1::unique_ptr.1293", %"class.base::WeakPtrFactory.2382" }
%"class.base::WeakPtrFactory.2382" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1635" = type { %"class.blink::Member.1636" }
%"class.blink::Member.1636" = type { %"class.blink::MemberBase.1637" }
%"class.blink::MemberBase.1637" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2385", %"class.blink::Member.237", %"class.mojo::AssociatedReceiver.2386" }
%"class.blink::ThreadState::PrefinalizerRegistration.2385" = type { i8 }
%"class.mojo::AssociatedReceiver.2386" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2387" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2387" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1638" = type { %"class.blink::MemberBase.1639" }
%"class.blink::MemberBase.1639" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1640" = type { %"class.blink::MemberBase.1641" }
%"class.blink::MemberBase.1641" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1642" = type { %"class.blink::MemberBase.1643" }
%"class.blink::MemberBase.1643" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1644" = type { %"class.blink::MemberBase.1645" }
%"class.blink::MemberBase.1645" = type { %"class.blink::HeapHashMap.1646"* }
%"class.blink::HeapHashMap.1646" = type opaque
%"class.mojo::StructPtr.1647" = type { %"class.std::__1::unique_ptr.1648" }
%"class.std::__1::unique_ptr.1648" = type { %"class.std::__1::__compressed_pair.1649" }
%"class.std::__1::__compressed_pair.1649" = type { %"struct.std::__1::__compressed_pair_elem.1650" }
%"struct.std::__1::__compressed_pair_elem.1650" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1651", %"class.mojo::InlinedStructPtr.1652" }
%"class.mojo::InlinedStructPtr.1651" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1652" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1656" = type { %"class.blink::MemberBase.1657" }
%"class.blink::MemberBase.1657" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1658" = type { %"class.absl::optional_internal::optional_data.1659" }
%"class.absl::optional_internal::optional_data.1659" = type { %"class.absl::optional_internal::optional_data_base.1660" }
%"class.absl::optional_internal::optional_data_base.1660" = type { %"class.absl::optional_internal::optional_data_dtor_base.1661" }
%"class.absl::optional_internal::optional_data_dtor_base.1661" = type { i8, %union.anon.1662 }
%union.anon.1662 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.WTF::Vector.1094" = type { %"class.WTF::VectorBuffer.1095" }
%"class.WTF::VectorBuffer.1095" = type { %"class.WTF::VectorBufferBase.1096" }
%"class.WTF::VectorBufferBase.1096" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1585" = type { %"class.WTF::HashMap.1588" }
%"class.WTF::HashMap.1588" = type { %"class.WTF::HashTable.1589" }
%"class.WTF::HashTable.1589" = type <{ %"struct.WTF::KeyValuePair.1591"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1591" = type opaque
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.7" = type { %"class.WTF::ListHashSet.base.17", [7 x i8] }
%"class.WTF::ListHashSet.base.17" = type <{ %"class.WTF::HashTable.12", %"class.blink::Member.14", %"class.blink::Member.14", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.12" = type <{ %"class.blink::Member.14"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::HeapListHashSetNode.16"* }
%"class.blink::HeapListHashSetNode.16" = type { %"class.blink::Member.2003", %"class.blink::Member.14", %"class.blink::Member.14" }
%"class.blink::Member.2003" = type { %"class.blink::MemberBase.2004" }
%"class.blink::MemberBase.2004" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.18" = type { %"class.WTF::ListHashSet.base.28", [7 x i8] }
%"class.WTF::ListHashSet.base.28" = type <{ %"class.WTF::HashTable.23", %"class.blink::Member.25", %"class.blink::Member.25", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.23" = type <{ %"class.blink::Member.25"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::HeapListHashSetNode.27"* }
%"class.blink::HeapListHashSetNode.27" = type { %"class.blink::Member.1999", %"class.blink::Member.25", %"class.blink::Member.25" }
%"class.blink::Member.1999" = type { %"class.blink::MemberBase.2000" }
%"class.blink::MemberBase.2000" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::HeapListHashSet.29" = type { %"class.WTF::ListHashSet.base.39", [7 x i8] }
%"class.WTF::ListHashSet.base.39" = type <{ %"class.WTF::HashTable.34", %"class.blink::Member.36", %"class.blink::Member.36", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.34" = type <{ %"class.blink::Member.36"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.36" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::HeapListHashSetNode.38"* }
%"class.blink::HeapListHashSetNode.38" = type { %"class.blink::Member.1995", %"class.blink::Member.36", %"class.blink::Member.36" }
%"class.blink::Member.1995" = type { %"class.blink::MemberBase.1996" }
%"class.blink::MemberBase.1996" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.40" = type { %"class.WTF::ListHashSet.base.50", [7 x i8] }
%"class.WTF::ListHashSet.base.50" = type <{ %"class.WTF::HashTable.45", %"class.blink::Member.47", %"class.blink::Member.47", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.45" = type <{ %"class.blink::Member.47"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.47" = type { %"class.blink::MemberBase.48" }
%"class.blink::MemberBase.48" = type { %"class.blink::HeapListHashSetNode.49"* }
%"class.blink::HeapListHashSetNode.49" = type { %"class.blink::Member.1991", %"class.blink::Member.47", %"class.blink::Member.47" }
%"class.blink::Member.1991" = type { %"class.blink::MemberBase.1992" }
%"class.blink::MemberBase.1992" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.51" = type { %"class.WTF::ListHashSet.base.61", [7 x i8] }
%"class.WTF::ListHashSet.base.61" = type <{ %"class.WTF::HashTable.56", %"class.blink::Member.58", %"class.blink::Member.58", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.56" = type <{ %"class.blink::Member.58"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.58" = type { %"class.blink::MemberBase.59" }
%"class.blink::MemberBase.59" = type { %"class.blink::HeapListHashSetNode.60"* }
%"class.blink::HeapListHashSetNode.60" = type { %"class.blink::Member.239", %"class.blink::Member.58", %"class.blink::Member.58" }
%"class.blink::HeapListHashSet.62" = type { %"class.WTF::ListHashSet.base.72", [7 x i8] }
%"class.WTF::ListHashSet.base.72" = type <{ %"class.WTF::HashTable.67", %"class.blink::Member.69", %"class.blink::Member.69", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.67" = type <{ %"class.blink::Member.69"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.69" = type { %"class.blink::MemberBase.70" }
%"class.blink::MemberBase.70" = type { %"class.blink::HeapListHashSetNode.71"* }
%"class.blink::HeapListHashSetNode.71" = type { %"class.blink::Member.248", %"class.blink::Member.69", %"class.blink::Member.69" }
%"class.blink::Member.248" = type { %"class.blink::MemberBase.249" }
%"class.blink::MemberBase.249" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type { %"class.blink::InspectorBaseAgent.250", %"class.v8::Isolate"*, %"class.blink::Member.233", %"class.v8_inspector::V8InspectorSession"*, %"class.blink::HeapHashSet", %"class.blink::Member.262", %"class.blink::HeapVector", %"class.blink::HeapHashMap.270", %"class.blink::HeapHashMap.277", %"class.blink::HeapHashMap.284", %"class.WTF::HashSet.291", %"class.WTF::HashSet.291", %"class.WTF::HashMap.295", i32, %"class.blink::Member.300", %"class.blink::HeapHashMap.302", %"class.blink::Member.309", %"class.blink::Member.311", %"class.blink::Member.313", i8, [7 x i8], %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField" }
%"class.blink::InspectorBaseAgent.250" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::DOM::Backend", %"class.blink::Member", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.251" }
%"class.blink::protocol::DOM::Backend" = type { i32 (...)** }
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.blink::protocol::DOM::Frontend"* }
%"class.blink::protocol::DOM::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.crdtp::FrontendChannel" = type { i32 (...)** }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.259" }
%"class.WTF::HashTable.259" = type <{ %"class.blink::Member.261"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.261" = type opaque
%"class.blink::Member.262" = type { %"class.blink::MemberBase.263" }
%"class.blink::MemberBase.263" = type { %"class.blink::HeapHashMap"* }
%"class.blink::HeapHashMap" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.266" }
%"class.WTF::Vector.266" = type { %"class.WTF::VectorBuffer.267" }
%"class.WTF::VectorBuffer.267" = type { %"class.WTF::VectorBufferBase.268" }
%"class.WTF::VectorBufferBase.268" = type { %"class.blink::Member.262"*, i32, i32 }
%"class.blink::HeapHashMap.270" = type { %"class.WTF::HashMap.273" }
%"class.WTF::HashMap.273" = type { %"class.WTF::HashTable.274" }
%"class.WTF::HashTable.274" = type <{ %"struct.WTF::KeyValuePair.276"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.276" = type opaque
%"class.blink::HeapHashMap.277" = type { %"class.WTF::HashMap.280" }
%"class.WTF::HashMap.280" = type { %"class.WTF::HashTable.281" }
%"class.WTF::HashTable.281" = type <{ %"struct.WTF::KeyValuePair.283"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.283" = type opaque
%"class.blink::HeapHashMap.284" = type { %"class.WTF::HashMap.287" }
%"class.WTF::HashMap.287" = type { %"class.WTF::HashTable.288" }
%"class.WTF::HashTable.288" = type <{ %"struct.WTF::KeyValuePair.290"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.290" = type opaque
%"class.WTF::HashSet.291" = type { %"class.WTF::HashTable.292" }
%"class.WTF::HashTable.292" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.295" = type { %"class.WTF::HashTable.296" }
%"class.WTF::HashTable.296" = type <{ %"struct.WTF::KeyValuePair.299"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.299" = type opaque
%"class.blink::HeapHashMap.302" = type { %"class.WTF::HashMap.305" }
%"class.WTF::HashMap.305" = type { %"class.WTF::HashTable.306" }
%"class.WTF::HashTable.306" = type <{ %"struct.WTF::KeyValuePair.308"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.308" = type opaque
%"class.blink::Member.309" = type { %"class.blink::MemberBase.310" }
%"class.blink::MemberBase.310" = type { %"class.blink::InspectorRevalidateDOMTask"* }
%"class.blink::InspectorRevalidateDOMTask" = type opaque
%"class.blink::Member.311" = type { %"class.blink::MemberBase.312" }
%"class.blink::MemberBase.312" = type { %"class.blink::InspectorHistory"* }
%"class.blink::InspectorHistory" = type opaque
%"class.blink::Member.313" = type { %"class.blink::MemberBase.314" }
%"class.blink::MemberBase.314" = type { %"class.blink::DOMEditor"* }
%"class.blink::DOMEditor" = type opaque
%"class.blink::HeapListHashSet.73" = type { %"class.WTF::ListHashSet.base.83", [7 x i8] }
%"class.WTF::ListHashSet.base.83" = type <{ %"class.WTF::HashTable.78", %"class.blink::Member.80", %"class.blink::Member.80", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.78" = type <{ %"class.blink::Member.80"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.80" = type { %"class.blink::MemberBase.81" }
%"class.blink::MemberBase.81" = type { %"class.blink::HeapListHashSetNode.82"* }
%"class.blink::HeapListHashSetNode.82" = type { %"class.blink::Member.1983", %"class.blink::Member.80", %"class.blink::Member.80" }
%"class.blink::Member.1983" = type { %"class.blink::MemberBase.1984" }
%"class.blink::MemberBase.1984" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.84" = type { %"class.WTF::ListHashSet.base.94", [7 x i8] }
%"class.WTF::ListHashSet.base.94" = type <{ %"class.WTF::HashTable.89", %"class.blink::Member.91", %"class.blink::Member.91", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.89" = type <{ %"class.blink::Member.91"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.91" = type { %"class.blink::MemberBase.92" }
%"class.blink::MemberBase.92" = type { %"class.blink::HeapListHashSetNode.93"* }
%"class.blink::HeapListHashSetNode.93" = type { %"class.blink::Member.1979", %"class.blink::Member.91", %"class.blink::Member.91" }
%"class.blink::Member.1979" = type { %"class.blink::MemberBase.1980" }
%"class.blink::MemberBase.1980" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.95" = type { %"class.WTF::ListHashSet.base.105", [7 x i8] }
%"class.WTF::ListHashSet.base.105" = type <{ %"class.WTF::HashTable.100", %"class.blink::Member.102", %"class.blink::Member.102", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.100" = type <{ %"class.blink::Member.102"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.102" = type { %"class.blink::MemberBase.103" }
%"class.blink::MemberBase.103" = type { %"class.blink::HeapListHashSetNode.104"* }
%"class.blink::HeapListHashSetNode.104" = type { %"class.blink::Member.1975", %"class.blink::Member.102", %"class.blink::Member.102" }
%"class.blink::Member.1975" = type { %"class.blink::MemberBase.1976" }
%"class.blink::MemberBase.1976" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.106" = type { %"class.WTF::ListHashSet.base.116", [7 x i8] }
%"class.WTF::ListHashSet.base.116" = type <{ %"class.WTF::HashTable.111", %"class.blink::Member.113", %"class.blink::Member.113", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.111" = type <{ %"class.blink::Member.113"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.113" = type { %"class.blink::MemberBase.114" }
%"class.blink::MemberBase.114" = type { %"class.blink::HeapListHashSetNode.115"* }
%"class.blink::HeapListHashSetNode.115" = type { %"class.blink::Member.1594", %"class.blink::Member.113", %"class.blink::Member.113" }
%"class.blink::HeapListHashSet.117" = type { %"class.WTF::ListHashSet.base.127", [7 x i8] }
%"class.WTF::ListHashSet.base.127" = type <{ %"class.WTF::HashTable.122", %"class.blink::Member.124", %"class.blink::Member.124", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.122" = type <{ %"class.blink::Member.124"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.124" = type { %"class.blink::MemberBase.125" }
%"class.blink::MemberBase.125" = type { %"class.blink::HeapListHashSetNode.126"* }
%"class.blink::HeapListHashSetNode.126" = type { %"class.blink::Member.1969", %"class.blink::Member.124", %"class.blink::Member.124" }
%"class.blink::Member.1969" = type { %"class.blink::MemberBase.1970" }
%"class.blink::MemberBase.1970" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.128" = type { %"class.WTF::ListHashSet.base.138", [7 x i8] }
%"class.WTF::ListHashSet.base.138" = type <{ %"class.WTF::HashTable.133", %"class.blink::Member.135", %"class.blink::Member.135", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.133" = type <{ %"class.blink::Member.135"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.135" = type { %"class.blink::MemberBase.136" }
%"class.blink::MemberBase.136" = type { %"class.blink::HeapListHashSetNode.137"* }
%"class.blink::HeapListHashSetNode.137" = type { %"class.blink::Member.1965", %"class.blink::Member.135", %"class.blink::Member.135" }
%"class.blink::Member.1965" = type { %"class.blink::MemberBase.1966" }
%"class.blink::MemberBase.1966" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.139" = type { %"class.WTF::ListHashSet.base.149", [7 x i8] }
%"class.WTF::ListHashSet.base.149" = type <{ %"class.WTF::HashTable.144", %"class.blink::Member.146", %"class.blink::Member.146", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.144" = type <{ %"class.blink::Member.146"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.146" = type { %"class.blink::MemberBase.147" }
%"class.blink::MemberBase.147" = type { %"class.blink::HeapListHashSetNode.148"* }
%"class.blink::HeapListHashSetNode.148" = type { %"class.blink::Member.1961", %"class.blink::Member.146", %"class.blink::Member.146" }
%"class.blink::Member.1961" = type { %"class.blink::MemberBase.1962" }
%"class.blink::MemberBase.1962" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.150" = type { %"class.WTF::ListHashSet.base.160", [7 x i8] }
%"class.WTF::ListHashSet.base.160" = type <{ %"class.WTF::HashTable.155", %"class.blink::Member.157", %"class.blink::Member.157", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.155" = type <{ %"class.blink::Member.157"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.157" = type { %"class.blink::MemberBase.158" }
%"class.blink::MemberBase.158" = type { %"class.blink::HeapListHashSetNode.159"* }
%"class.blink::HeapListHashSetNode.159" = type { %"class.blink::Member.315", %"class.blink::Member.157", %"class.blink::Member.157" }
%"class.blink::Member.315" = type { %"class.blink::MemberBase.316" }
%"class.blink::MemberBase.316" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.161" = type { %"class.WTF::ListHashSet.base.171", [7 x i8] }
%"class.WTF::ListHashSet.base.171" = type <{ %"class.WTF::HashTable.166", %"class.blink::Member.168", %"class.blink::Member.168", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.166" = type <{ %"class.blink::Member.168"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.168" = type { %"class.blink::MemberBase.169" }
%"class.blink::MemberBase.169" = type { %"class.blink::HeapListHashSetNode.170"* }
%"class.blink::HeapListHashSetNode.170" = type { %"class.blink::Member.1955", %"class.blink::Member.168", %"class.blink::Member.168" }
%"class.blink::Member.1955" = type { %"class.blink::MemberBase.1956" }
%"class.blink::MemberBase.1956" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.172" = type { %"class.WTF::ListHashSet.base.182", [7 x i8] }
%"class.WTF::ListHashSet.base.182" = type <{ %"class.WTF::HashTable.177", %"class.blink::Member.179", %"class.blink::Member.179", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.177" = type <{ %"class.blink::Member.179"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.179" = type { %"class.blink::MemberBase.180" }
%"class.blink::MemberBase.180" = type { %"class.blink::HeapListHashSetNode.181"* }
%"class.blink::HeapListHashSetNode.181" = type { %"class.blink::Member.1951", %"class.blink::Member.179", %"class.blink::Member.179" }
%"class.blink::Member.1951" = type { %"class.blink::MemberBase.1952" }
%"class.blink::MemberBase.1952" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.183" = type { %"class.WTF::ListHashSet.base.193", [7 x i8] }
%"class.WTF::ListHashSet.base.193" = type <{ %"class.WTF::HashTable.188", %"class.blink::Member.190", %"class.blink::Member.190", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.188" = type <{ %"class.blink::Member.190"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.190" = type { %"class.blink::MemberBase.191" }
%"class.blink::MemberBase.191" = type { %"class.blink::HeapListHashSetNode.192"* }
%"class.blink::HeapListHashSetNode.192" = type { %"class.blink::Member.1947", %"class.blink::Member.190", %"class.blink::Member.190" }
%"class.blink::Member.1947" = type { %"class.blink::MemberBase.1948" }
%"class.blink::MemberBase.1948" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.194" = type { %"class.WTF::ListHashSet.base.204", [7 x i8] }
%"class.WTF::ListHashSet.base.204" = type <{ %"class.WTF::HashTable.199", %"class.blink::Member.201", %"class.blink::Member.201", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.199" = type <{ %"class.blink::Member.201"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.201" = type { %"class.blink::MemberBase.202" }
%"class.blink::MemberBase.202" = type { %"class.blink::HeapListHashSetNode.203"* }
%"class.blink::HeapListHashSetNode.203" = type { %"class.blink::Member.1596", %"class.blink::Member.201", %"class.blink::Member.201" }
%"class.blink::HeapListHashSet.205" = type { %"class.WTF::ListHashSet.base.215", [7 x i8] }
%"class.WTF::ListHashSet.base.215" = type <{ %"class.WTF::HashTable.210", %"class.blink::Member.212", %"class.blink::Member.212", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.210" = type <{ %"class.blink::Member.212"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.212" = type { %"class.blink::MemberBase.213" }
%"class.blink::MemberBase.213" = type { %"class.blink::HeapListHashSetNode.214"* }
%"class.blink::HeapListHashSetNode.214" = type { %"class.blink::Member.1579", %"class.blink::Member.212", %"class.blink::Member.212" }
%"class.blink::InspectorAgentState" = type { %"class.WTF::String", %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::InspectorAgentState::Field"**, i32, i32 }
%"class.blink::InspectorAgentState::Field" = type { i32 (...)**, %"class.WTF::String", %"class.blink::InspectorSessionState"* }
%"class.blink::InspectorSessionState" = type { %"class.mojo::StructPtr", %"class.mojo::StructPtr" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::mojom::blink::DevToolsSessionState"* }
%"class.blink::mojom::blink::DevToolsSessionState" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.217" }
%"class.WTF::HashTable.217" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::String", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.WTF::Vector.219" }
%"class.WTF::Vector.219" = type { %"class.WTF::VectorBuffer.220" }
%"class.WTF::VectorBuffer.220" = type { %"class.WTF::VectorBufferBase.221" }
%"class.WTF::VectorBufferBase.221" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.blink::protocol::Animation::Frontend"* }
%"class.blink::protocol::Animation::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.blink::Member.233" = type { %"class.blink::MemberBase.234" }
%"class.blink::MemberBase.234" = type { %"class.blink::InspectedFrames"* }
%"class.blink::Member.239" = type { %"class.blink::MemberBase.240" }
%"class.blink::MemberBase.240" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::HeapHashMap.435" = type { %"class.WTF::HashMap.438" }
%"class.WTF::HashMap.438" = type { %"class.WTF::HashTable.439" }
%"class.WTF::HashTable.439" = type <{ %"struct.WTF::KeyValuePair.441"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.441" = type { %"class.WTF::String", %"class.blink::Member.442" }
%"class.WTF::HashSet.580" = type { %"class.WTF::HashTable.581" }
%"class.WTF::HashTable.581" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::InspectorAgentState::SimpleField" = type <{ %"class.blink::InspectorAgentState::Field", i8, i8, [6 x i8] }>
%"class.blink::InspectorAgentState::SimpleField.584" = type { %"class.blink::InspectorAgentState::Field", double, double }
%"class.blink::InspectedFrames" = type { i32 (...)**, %"class.blink::Member.237" }
%"class.blink::InspectorCSSAgent" = type { %"class.blink::InspectorBaseAgent.241", %"struct.blink::InspectorDOMAgent::DOMListener", %"class.blink::InspectorStyleSheetBase::Listener", %"class.blink::Member.248", %"class.blink::Member.233", %"class.blink::Member.315", %"class.blink::Member.317", %"class.blink::Member.319", %"class.blink::HeapHashMap.321", %"class.blink::HeapHashMap.328", %"class.blink::HeapHashMap.335", %"class.blink::HeapHashMap.342", %"class.blink::HeapHashSet.349", %"class.blink::HeapHashMap.355", %"class.WTF::HashMap.362", %"class.WTF::HashMap.362", %"class.blink::Member.367", %"class.blink::Member.369", i32, [4 x i8], %"class.blink::InspectorAgentState::SimpleField", i8, [7 x i8], %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField", %"class.WTF::HashMap.424", %"class.std::__1::unique_ptr.429", %"class.WTF::HashSet.291" }
%"class.blink::InspectorBaseAgent.241" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::CSS::Backend", %"class.blink::Member", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.242" }
%"class.blink::protocol::CSS::Backend" = type { i32 (...)** }
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.blink::protocol::CSS::Frontend"* }
%"class.blink::protocol::CSS::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"struct.blink::InspectorDOMAgent::DOMListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::InspectorStyleSheetBase::Listener" = type { i32 (...)** }
%"class.blink::Member.317" = type { %"class.blink::MemberBase.318" }
%"class.blink::MemberBase.318" = type { %"class.blink::InspectorResourceContentLoader"* }
%"class.blink::InspectorResourceContentLoader" = type opaque
%"class.blink::Member.319" = type { %"class.blink::MemberBase.320" }
%"class.blink::MemberBase.320" = type { %"class.blink::InspectorResourceContainer"* }
%"class.blink::InspectorResourceContainer" = type opaque
%"class.blink::HeapHashMap.321" = type { %"class.WTF::HashMap.324" }
%"class.WTF::HashMap.324" = type { %"class.WTF::HashTable.325" }
%"class.WTF::HashTable.325" = type <{ %"struct.WTF::KeyValuePair.327"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.327" = type opaque
%"class.blink::HeapHashMap.328" = type { %"class.WTF::HashMap.331" }
%"class.WTF::HashMap.331" = type { %"class.WTF::HashTable.332" }
%"class.WTF::HashTable.332" = type <{ %"struct.WTF::KeyValuePair.334"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.334" = type opaque
%"class.blink::HeapHashMap.335" = type { %"class.WTF::HashMap.338" }
%"class.WTF::HashMap.338" = type { %"class.WTF::HashTable.339" }
%"class.WTF::HashTable.339" = type <{ %"struct.WTF::KeyValuePair.341"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.341" = type opaque
%"class.blink::HeapHashMap.342" = type { %"class.WTF::HashMap.345" }
%"class.WTF::HashMap.345" = type { %"class.WTF::HashTable.346" }
%"class.WTF::HashTable.346" = type <{ %"struct.WTF::KeyValuePair.348"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.348" = type opaque
%"class.blink::HeapHashSet.349" = type { %"class.WTF::HashSet.352" }
%"class.WTF::HashSet.352" = type { %"class.WTF::HashTable.353" }
%"class.WTF::HashTable.353" = type <{ %"class.blink::Member.300"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.355" = type { %"class.WTF::HashMap.358" }
%"class.WTF::HashMap.358" = type { %"class.WTF::HashTable.359" }
%"class.WTF::HashTable.359" = type <{ %"struct.WTF::KeyValuePair.361"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.361" = type opaque
%"class.WTF::HashMap.362" = type { %"class.WTF::HashTable.363" }
%"class.WTF::HashTable.363" = type <{ %"struct.WTF::KeyValuePair.366"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.366" = type opaque
%"class.blink::Member.367" = type { %"class.blink::MemberBase.368" }
%"class.blink::MemberBase.368" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.WTF::HashMap.424" = type { %"class.WTF::HashTable.425" }
%"class.WTF::HashTable.425" = type <{ %"struct.WTF::KeyValuePair.428"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.428" = type opaque
%"class.std::__1::unique_ptr.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"* }
%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback" = type { i32 (...)** }
%"class.v8_inspector::V8InspectorSession" = type { i32 (...)** }
%"class.crdtp::DispatchResponse" = type { i32, %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::WebVector" = type { %"class.std::__1::vector.2446" }
%"class.std::__1::vector.2446" = type { %"class.std::__1::__vector_base.2447" }
%"class.std::__1::__vector_base.2447" = type { i8*, i8*, %"class.std::__1::__compressed_pair.2448" }
%"class.std::__1::__compressed_pair.2448" = type { %"struct.std::__1::__compressed_pair_elem.2449" }
%"struct.std::__1::__compressed_pair_elem.2449" = type { i8* }
%"class.blink::InspectedFrames::Iterator" = type { %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"* }
%"class.blink::protocol::Animation::Animation" = type { %"class.crdtp::ProtocolObject", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::String", double, double, double, %"class.WTF::String", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::ValueMaybe.2023" }
%"class.crdtp::ProtocolObject" = type { %"class.crdtp::Serializable" }
%"class.crdtp::Serializable" = type { i32 (...)** }
%"class.crdtp::detail::PtrMaybe" = type { %"class.std::__1::unique_ptr.2010" }
%"class.std::__1::unique_ptr.2010" = type { %"class.std::__1::__compressed_pair.2011" }
%"class.std::__1::__compressed_pair.2011" = type { %"struct.std::__1::__compressed_pair_elem.2012" }
%"struct.std::__1::__compressed_pair_elem.2012" = type { %"class.blink::protocol::Animation::AnimationEffect"* }
%"class.blink::protocol::Animation::AnimationEffect" = type { %"class.crdtp::ProtocolObject.2013", double, double, double, double, double, %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.2016", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.2013" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::ValueMaybe" = type { i8, i32 }
%"class.crdtp::detail::PtrMaybe.2016" = type { %"class.std::__1::unique_ptr.2017" }
%"class.std::__1::unique_ptr.2017" = type { %"class.std::__1::__compressed_pair.2018" }
%"class.std::__1::__compressed_pair.2018" = type { %"struct.std::__1::__compressed_pair_elem.2019" }
%"struct.std::__1::__compressed_pair_elem.2019" = type { %"class.blink::protocol::Animation::KeyframesRule"* }
%"class.blink::protocol::Animation::KeyframesRule" = type { %"class.crdtp::ProtocolObject.2020", %"class.crdtp::detail::ValueMaybe.2023", %"class.std::__1::unique_ptr.2024" }
%"class.crdtp::ProtocolObject.2020" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.2024" = type { %"class.std::__1::__compressed_pair.2025" }
%"class.std::__1::__compressed_pair.2025" = type { %"struct.std::__1::__compressed_pair_elem.2026" }
%"struct.std::__1::__compressed_pair_elem.2026" = type { %"class.std::__1::vector.2027"* }
%"class.std::__1::vector.2027" = type { %"class.std::__1::__vector_base.2028" }
%"class.std::__1::__vector_base.2028" = type { %"class.std::__1::unique_ptr.2029"*, %"class.std::__1::unique_ptr.2029"*, %"class.std::__1::__compressed_pair.2038" }
%"class.std::__1::unique_ptr.2029" = type { %"class.std::__1::__compressed_pair.2030" }
%"class.std::__1::__compressed_pair.2030" = type { %"struct.std::__1::__compressed_pair_elem.2031" }
%"struct.std::__1::__compressed_pair_elem.2031" = type { %"class.blink::protocol::Animation::KeyframeStyle"* }
%"class.blink::protocol::Animation::KeyframeStyle" = type { %"class.crdtp::ProtocolObject.2032", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.2032" = type { %"class.crdtp::Serializable" }
%"class.std::__1::__compressed_pair.2038" = type { %"struct.std::__1::__compressed_pair_elem.2039" }
%"struct.std::__1::__compressed_pair_elem.2039" = type { %"class.std::__1::unique_ptr.2029"* }
%"class.crdtp::detail::ValueMaybe.2023" = type { i8, %"class.WTF::String" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::IntegerToStringConverter" = type <{ [12 x i8], [4 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::StringAppend" = type { %"class.WTF::String", i8* }
%"class.WTF::Vector.2402" = type { %"class.WTF::VectorBuffer.2403" }
%"class.WTF::VectorBuffer.2403" = type { %"class.WTF::VectorBufferBase.2404" }
%"class.WTF::VectorBufferBase.2404" = type { double*, i32, i32 }
%"class.blink::ComputedEffectTiming" = type { %"class.blink::EffectTiming", i8, i8, %"class.blink::DoubleOrCSSNumericValue", double, %"class.blink::DoubleOrCSSNumericValue", %"class.blink::DoubleOrCSSNumericValue", double }
%"class.blink::EffectTiming" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, double, %"class.WTF::String", %"class.blink::UnrestrictedDoubleOrString", %"class.WTF::String", double, %"class.WTF::String", double, double }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::UnrestrictedDoubleOrString" = type { i32, %"class.WTF::String", double }
%"class.blink::DoubleOrCSSNumericValue" = type { i32, %"class.blink::Member.2388", double }
%"class.blink::Member.2388" = type { %"class.blink::MemberBase.2389" }
%"class.blink::MemberBase.2389" = type { %"class.blink::CSSNumericValue"* }
%"class.blink::CSSNumericValue" = type { %"class.blink::CSSStyleValue", %"class.blink::CSSNumericValueType" }
%"class.blink::CSSStyleValue" = type { %"class.blink::ScriptWrappable", %"class.WTF::String" }
%"class.blink::CSSNumericValueType" = type { %"class.WTF::Vector.2390", i32, i8, i32, [4 x i8] }
%"class.WTF::Vector.2390" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.1833", [28 x i8] }>
%"class.blink::KeyframeEffect" = type { %"class.blink::AnimationEffect", %"class.blink::Member.617", %"class.blink::Member.617", %"class.WTF::String", %"class.blink::Member.2055", %"class.blink::Member.2112", i32, %"class.WTF::Vector.2129", i8, %"class.absl::optional.2133" }
%"class.blink::Member.2055" = type { %"class.blink::MemberBase.2056" }
%"class.blink::MemberBase.2056" = type { %"class.blink::KeyframeEffectModelBase"* }
%"class.blink::KeyframeEffectModelBase" = type <{ %"class.blink::EffectModel", %"class.blink::HeapVector.2059", %"class.blink::Member.2075", %"class.blink::Member.2100", i32, [4 x i8], double, %"class.blink::AnimationTimeDelta", i32, [4 x i8], %class.scoped_refptr.494, i8, i8, i8, [5 x i8] }>
%"class.blink::EffectModel" = type { i32 (...)** }
%"class.blink::HeapVector.2059" = type { %"class.WTF::Vector.2062" }
%"class.WTF::Vector.2062" = type { %"class.WTF::VectorBuffer.2063" }
%"class.WTF::VectorBuffer.2063" = type { %"class.WTF::VectorBufferBase.2064" }
%"class.WTF::VectorBufferBase.2064" = type { %"class.blink::Member.2065"*, i32, i32 }
%"class.blink::Member.2065" = type { %"class.blink::MemberBase.2066" }
%"class.blink::MemberBase.2066" = type { %"class.blink::Keyframe"* }
%"class.blink::Keyframe" = type { i32 (...)**, %"class.absl::optional.473", %"class.absl::optional.2069", %class.scoped_refptr.494 }
%"class.absl::optional.2069" = type { %"class.absl::optional_internal::optional_data.2070" }
%"class.absl::optional_internal::optional_data.2070" = type { %"class.absl::optional_internal::optional_data_base.2071" }
%"class.absl::optional_internal::optional_data_base.2071" = type { %"class.absl::optional_internal::optional_data_dtor_base.2072" }
%"class.absl::optional_internal::optional_data_dtor_base.2072" = type { i8, %union.anon.2073 }
%union.anon.2073 = type { i32 }
%"class.blink::Member.2075" = type { %"class.blink::MemberBase.2076" }
%"class.blink::MemberBase.2076" = type { %"class.blink::HeapHashMap.2077"* }
%"class.blink::HeapHashMap.2077" = type { %"class.WTF::HashMap.2080" }
%"class.WTF::HashMap.2080" = type { %"class.WTF::HashTable.2081" }
%"class.WTF::HashTable.2081" = type <{ %"struct.WTF::KeyValuePair.2083"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2083" = type { %"class.blink::PropertyHandle", %"class.blink::Member.2085" }
%"class.blink::PropertyHandle" = type { i32, %union.anon.2084, %"class.WTF::AtomicString" }
%union.anon.2084 = type { %"class.blink::CSSProperty"* }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.blink::Member.2085" = type { %"class.blink::MemberBase.2086" }
%"class.blink::MemberBase.2086" = type { %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* }
%"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup" = type { %"class.blink::HeapVector.2089" }
%"class.blink::HeapVector.2089" = type { %"class.WTF::Vector.2092" }
%"class.WTF::Vector.2092" = type { %"class.WTF::VectorBuffer.2093" }
%"class.WTF::VectorBuffer.2093" = type { %"class.WTF::VectorBufferBase.2094" }
%"class.WTF::VectorBufferBase.2094" = type { %"class.blink::Member.2095"*, i32, i32 }
%"class.blink::Member.2095" = type { %"class.blink::MemberBase.2096" }
%"class.blink::MemberBase.2096" = type { %"class.blink::Keyframe::PropertySpecificKeyframe"* }
%"class.blink::Keyframe::PropertySpecificKeyframe" = type <{ i32 (...)**, double, %class.scoped_refptr.494, i32, [4 x i8] }>
%"class.blink::Member.2100" = type { %"class.blink::MemberBase.2101" }
%"class.blink::MemberBase.2101" = type { %"class.blink::InterpolationEffect"* }
%"class.blink::InterpolationEffect" = type { i8, %"class.blink::HeapVector.2104" }
%"class.blink::HeapVector.2104" = type { %"class.WTF::Vector.2107" }
%"class.WTF::Vector.2107" = type { %"class.WTF::VectorBuffer.2108" }
%"class.WTF::VectorBuffer.2108" = type { %"class.WTF::VectorBufferBase.2109" }
%"class.WTF::VectorBufferBase.2109" = type { %"class.blink::Member.2110"*, i32, i32 }
%"class.blink::Member.2110" = type { %"class.blink::MemberBase.2324" }
%"class.blink::MemberBase.2324" = type { %"class.blink::InterpolationEffect::InterpolationRecord"* }
%"class.blink::InterpolationEffect::InterpolationRecord" = type { %"class.blink::Member.2124", %class.scoped_refptr.494, double, double, double, double }
%"class.blink::Member.2124" = type { %"class.blink::MemberBase.2125" }
%"class.blink::MemberBase.2125" = type { %"class.blink::Interpolation"* }
%"class.blink::Interpolation" = type { i32 (...)** }
%"class.blink::Member.2112" = type { %"class.blink::MemberBase.2113" }
%"class.blink::MemberBase.2113" = type { %"class.blink::SampledEffect"* }
%"class.blink::SampledEffect" = type { %"class.blink::WeakMember.2116", %"class.blink::HeapVector.2118", i32, i32 }
%"class.blink::WeakMember.2116" = type { %"class.blink::MemberBase.2117" }
%"class.blink::MemberBase.2117" = type { %"class.blink::KeyframeEffect"* }
%"class.blink::HeapVector.2118" = type { %"class.WTF::Vector.2121" }
%"class.WTF::Vector.2121" = type { %"class.WTF::VectorBuffer.2122" }
%"class.WTF::VectorBuffer.2122" = type { %"class.WTF::VectorBufferBase.2123" }
%"class.WTF::VectorBufferBase.2123" = type { %"class.blink::Member.2124"*, i32, i32 }
%"class.WTF::Vector.2129" = type { %"class.WTF::VectorBuffer.2130" }
%"class.WTF::VectorBuffer.2130" = type { %"class.WTF::VectorBufferBase.1833" }
%"class.absl::optional.2133" = type { %"class.absl::optional_internal::optional_data.2134" }
%"class.absl::optional_internal::optional_data.2134" = type { %"class.absl::optional_internal::optional_data_base.2135" }
%"class.absl::optional_internal::optional_data_base.2135" = type { %"class.absl::optional_internal::optional_data_dtor_base.2136" }
%"class.absl::optional_internal::optional_data_dtor_base.2136" = type { i8, %union.anon.2137 }
%union.anon.2137 = type { %"class.blink::FloatSize" }
%"class.blink::CSSTransition" = type { %"class.blink::Animation.base", %"class.blink::PropertyHandle", %"class.blink::Member.617", i64 }
%"class.blink::Animation.base" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::CompositorAnimationDelegate", %"class.blink::CompositorAnimationClient", %"class.blink::AnimationEffectOwner", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.WTF::String", i32, [4 x i8], double, %"class.absl::optional.473", %"class.absl::optional.478", %"class.absl::optional.478", %"class.absl::optional.483", %"class.absl::optional.478", i8, [3 x i8], i32, %"class.blink::Member.488", %"class.blink::Member.488", %"class.blink::Member.490", %"class.blink::Member.300", %"class.blink::Member.509", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.blink::Member.559", %"class.blink::Member.559", %"class.blink::Member.559", %"class.std::__1::unique_ptr.572", i8, [3 x i8], i32, %"class.blink::Member.578", i8, [7 x i8], %"class.base::TimeTicks", i8, i8, i8 }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::Vector.2251" = type { %"class.WTF::VectorBuffer.2252" }
%"class.WTF::VectorBuffer.2252" = type { %"class.WTF::VectorBufferBase.2253" }
%"class.WTF::VectorBufferBase.2253" = type { %"class.blink::CSSPropertyName"*, i32, i32 }
%"class.blink::CSSPropertyName" = type { i32, %"class.WTF::AtomicString" }
%"class.blink::HeapVector.2256" = type { %"class.WTF::Vector.2259" }
%"class.WTF::Vector.2259" = type { %"class.WTF::VectorBuffer.2260" }
%"class.WTF::VectorBuffer.2260" = type { %"class.WTF::VectorBufferBase.2261" }
%"class.WTF::VectorBufferBase.2261" = type { %"class.blink::Member.2262"*, i32, i32 }
%"class.blink::Member.2262" = type { %"class.blink::MemberBase.2263" }
%"class.blink::MemberBase.2263" = type { %"class.blink::CSSStyleDeclaration"* }
%"class.blink::CSSStyleDeclaration" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2199" }
%"class.blink::WeakMember.2199" = type { %"class.blink::MemberBase.682" }
%"class.blink::Digestor" = type <{ %"class.bssl::internal::StackAllocated", i8, [7 x i8] }>
%"class.bssl::internal::StackAllocated" = type { %struct.env_md_ctx_st }
%struct.env_md_ctx_st = type { %struct.env_md_st*, i8*, %struct.evp_pkey_ctx_st*, %struct.evp_md_pctx_ops* }
%struct.env_md_st = type opaque
%struct.evp_pkey_ctx_st = type opaque
%struct.evp_md_pctx_ops = type opaque
%"class.WTF::Vector.2298" = type { %"class.WTF::VectorBuffer.2299" }
%"class.WTF::VectorBuffer.2299" = type { %"class.WTF::VectorBufferBase.221", [64 x i8] }
%"class.blink::CSSStyleRule" = type { %"class.blink::CSSRule", %"class.blink::Member.2265", %"class.blink::Member.2294", %"class.blink::Member.2296" }
%"class.blink::Member.2265" = type { %"class.blink::MemberBase.2266" }
%"class.blink::MemberBase.2266" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.628", %"class.blink::Member.2290" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.2290" = type { %"class.blink::MemberBase.2291" }
%"class.blink::MemberBase.2291" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::Member.2294" = type { %"class.blink::MemberBase.2295" }
%"class.blink::MemberBase.2295" = type { %"class.blink::StyleRuleCSSStyleDeclaration"* }
%"class.blink::StyleRuleCSSStyleDeclaration" = type opaque
%"class.blink::Member.2296" = type { %"class.blink::MemberBase.2297" }
%"class.blink::MemberBase.2297" = type { %"class.blink::StylePropertyMap"* }
%"class.blink::StylePropertyMap" = type { %"class.blink::StylePropertyMapReadOnlyMainThread" }
%"class.blink::StylePropertyMapReadOnlyMainThread" = type { %"class.blink::StylePropertyMapReadOnly" }
%"class.blink::StylePropertyMapReadOnly" = type { %"class.blink::ScriptWrappable", %"class.blink::PairIterable" }
%"class.blink::PairIterable" = type { %"class.blink::Iterable" }
%"class.blink::Iterable" = type { i32 (...)** }
%"class.std::__1::vector.2149" = type { %"class.std::__1::__vector_base.2150" }
%"class.std::__1::__vector_base.2150" = type { %"class.WTF::String"*, %"class.WTF::String"*, %"class.std::__1::__compressed_pair.2151" }
%"class.std::__1::__compressed_pair.2151" = type { %"struct.std::__1::__compressed_pair_elem.2152" }
%"struct.std::__1::__compressed_pair_elem.2152" = type { %"class.WTF::String"* }
%"class.blink::DummyExceptionStateForTesting" = type { %"class.blink::ExceptionState" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.2159" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.2159" = type { %"class.v8::TracedReference.2160" }
%"class.v8::TracedReference.2160" = type { %"class.v8::BasicTracedReference.2161" }
%"class.v8::BasicTracedReference.2161" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::HeapVector.2162" = type { %"class.WTF::Vector.2165" }
%"class.WTF::Vector.2165" = type { %"class.WTF::VectorBuffer.2166" }
%"class.WTF::VectorBuffer.2166" = type { %"class.WTF::VectorBufferBase.2167" }
%"class.WTF::VectorBufferBase.2167" = type { %"class.blink::Member.2168"*, i32, i32 }
%"class.blink::Member.2168" = type { %"class.blink::MemberBase.2169" }
%"class.blink::MemberBase.2169" = type { %"class.blink::StringKeyframe"* }
%"class.blink::StringKeyframe" = type <{ %"class.blink::Keyframe", %"class.blink::HeapHashMap.2170", %"class.blink::Member.2177", %"class.blink::Member.2177", %"class.WTF::HashMap.2193", i8, i8, i8, [5 x i8] }>
%"class.blink::HeapHashMap.2170" = type { %"class.WTF::HashMap.2173" }
%"class.WTF::HashMap.2173" = type { %"class.WTF::HashTable.2174" }
%"class.WTF::HashTable.2174" = type <{ %"struct.WTF::KeyValuePair.2176"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2176" = type opaque
%"class.blink::Member.2177" = type { %"class.blink::MemberBase.2178" }
%"class.blink::MemberBase.2178" = type { %"class.blink::MutableCSSPropertyValueSet"* }
%"class.blink::MutableCSSPropertyValueSet" = type <{ %"class.blink::CSSPropertyValueSet", [4 x i8], %"class.blink::Member.2179", %"class.blink::HeapVector.2181", i8, [7 x i8] }>
%"class.blink::Member.2179" = type { %"class.blink::MemberBase.2180" }
%"class.blink::MemberBase.2180" = type { %"class.blink::PropertySetCSSStyleDeclaration"* }
%"class.blink::PropertySetCSSStyleDeclaration" = type { %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::Member.2177" }
%"class.blink::AbstractPropertySetCSSStyleDeclaration" = type { %"class.blink::CSSStyleDeclaration" }
%"class.blink::HeapVector.2181" = type { %"class.WTF::Vector.2184" }
%"class.WTF::Vector.2184" = type { %"class.WTF::VectorBuffer.2185" }
%"class.WTF::VectorBuffer.2185" = type { %"class.WTF::VectorBufferBase.2186", [96 x i8] }
%"class.WTF::VectorBufferBase.2186" = type { %"class.blink::CSSPropertyValue"*, i32, i32 }
%"class.blink::CSSPropertyValue" = type { %"struct.blink::CSSPropertyValueMetadata", %"class.blink::Member.2187" }
%"struct.blink::CSSPropertyValueMetadata" = type <{ %"class.WTF::AtomicString", i16, [6 x i8] }>
%"class.blink::Member.2187" = type { %"class.blink::MemberBase.2188" }
%"class.blink::MemberBase.2188" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.WTF::HashMap.2193" = type { %"class.WTF::HashTable.2194" }
%"class.WTF::HashTable.2194" = type <{ %"struct.WTF::KeyValuePair.2197"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2197" = type { %"class.blink::QualifiedName"*, %"class.WTF::String" }
%"class.blink::HeapVector.2202" = type { %"class.WTF::Vector.2205" }
%"class.WTF::Vector.2205" = type { %"class.WTF::VectorBuffer.2206" }
%"class.WTF::VectorBuffer.2206" = type { %"class.WTF::VectorBufferBase.2207" }
%"class.WTF::VectorBufferBase.2207" = type { %"class.blink::Member.2208"*, i32, i32 }
%"class.blink::Member.2208" = type { %"class.blink::MemberBase.2209" }
%"class.blink::MemberBase.2209" = type { %"class.blink::TransitionKeyframe"* }
%"class.blink::TransitionKeyframe" = type { %"class.blink::Keyframe", %"class.blink::PropertyHandle", %"class.std::__1::unique_ptr.2210", %"class.blink::Member.2225" }
%"class.std::__1::unique_ptr.2210" = type { %"class.std::__1::__compressed_pair.2211" }
%"class.std::__1::__compressed_pair.2211" = type { %"struct.std::__1::__compressed_pair_elem.2212" }
%"struct.std::__1::__compressed_pair_elem.2212" = type { %"class.blink::TypedInterpolationValue"* }
%"class.blink::TypedInterpolationValue" = type { %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue" }
%"class.blink::InterpolationType" = type { i32 (...)**, %"class.blink::PropertyHandle" }
%"struct.blink::InterpolationValue" = type { %"class.std::__1::unique_ptr.2213", %class.scoped_refptr.2219 }
%"class.std::__1::unique_ptr.2213" = type { %"class.std::__1::__compressed_pair.2214" }
%"class.std::__1::__compressed_pair.2214" = type { %"struct.std::__1::__compressed_pair_elem.2215" }
%"struct.std::__1::__compressed_pair_elem.2215" = type { %"class.blink::InterpolableValue"* }
%"class.blink::InterpolableValue" = type { i32 (...)** }
%class.scoped_refptr.2219 = type { %"class.blink::NonInterpolableValue"* }
%"class.blink::NonInterpolableValue" = type <{ i32 (...)**, %"class.WTF::RefCounted.2220", [4 x i8] }>
%"class.WTF::RefCounted.2220" = type { %"class.base::RefCounted.2221" }
%"class.base::RefCounted.2221" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.2225" = type { %"class.blink::MemberBase.2226" }
%"class.blink::MemberBase.2226" = type { %"class.blink::CompositorKeyframeValue"* }
%"class.blink::CompositorKeyframeValue" = type { i32 (...)** }
%"class.blink::V8UnionCSSNumericValueOrDouble" = type opaque
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Value" = type { i8 }
%"class.blink::NonThrowableExceptionState" = type <{ %"class.blink::ExceptionState", i8*, i32, [4 x i8] }>
%"class.blink::OptionalEffectTiming" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, double, %"class.WTF::String", %"class.blink::UnrestrictedDoubleOrString", %"class.WTF::String", double, %"class.WTF::String", double, double }
%"class.std::__1::unique_ptr.2233" = type { %"class.std::__1::__compressed_pair.2234" }
%"class.std::__1::__compressed_pair.2234" = type { %"struct.std::__1::__compressed_pair_elem.2235" }
%"struct.std::__1::__compressed_pair_elem.2235" = type { %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* }
%"class.v8_inspector::protocol::Runtime::API::RemoteObject" = type { %"class.v8_inspector::protocol::Exported" }
%"class.v8_inspector::protocol::Exported" = type { i32 (...)** }
%"class.blink::ScriptState::Scope" = type { %"class.v8::HandleScope", %"class.v8::Local" }
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::Local" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%"class.v8_inspector::StringView" = type { i8, i64, %union.anon.2248 }
%union.anon.2248 = type { i8* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.2241, %"class.blink::Member.2242", %"class.blink::SelfKeepAlive", %"class.util::TokenType.2246" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.2241 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.2242" = type { %"class.blink::MemberBase.2243" }
%"class.blink::MemberBase.2243" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.2244" }
%"class.blink::Persistent.2244" = type { %"class.blink::PersistentBase.2245" }
%"class.blink::PersistentBase.2245" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType.2246" = type { %"class.base::StrongAlias.2247" }
%"class.base::StrongAlias.2247" = type { %"class.base::UnguessableToken" }
%"class.v8::Object" = type { i8 }
%"class.crdtp::UberDispatcher" = type { i32 (...)**, %"class.crdtp::FrontendChannel"*, %"class.std::__1::vector.2304", %"class.std::__1::vector.2312" }
%"class.std::__1::vector.2304" = type { %"class.std::__1::__vector_base.2305" }
%"class.std::__1::__vector_base.2305" = type { %"struct.std::__1::pair.2306"*, %"struct.std::__1::pair.2306"*, %"class.std::__1::__compressed_pair.2307" }
%"struct.std::__1::pair.2306" = type opaque
%"class.std::__1::__compressed_pair.2307" = type { %"struct.std::__1::__compressed_pair_elem.2308" }
%"struct.std::__1::__compressed_pair_elem.2308" = type { %"struct.std::__1::pair.2306"* }
%"class.std::__1::vector.2312" = type { %"class.std::__1::__vector_base.2313" }
%"class.std::__1::__vector_base.2313" = type { %"struct.std::__1::pair.2314"*, %"struct.std::__1::pair.2314"*, %"class.std::__1::__compressed_pair.2315" }
%"struct.std::__1::pair.2314" = type opaque
%"class.std::__1::__compressed_pair.2315" = type { %"struct.std::__1::__compressed_pair_elem.2316" }
%"struct.std::__1::__compressed_pair_elem.2316" = type { %"struct.std::__1::pair.2314"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.WTF::StringTypeAdapter" = type { %"class.WTF::StringTypeAdapter.2412" }
%"class.WTF::StringTypeAdapter.2412" = type { %"class.WTF::StringView" }
%"class.WTF::StringTypeAdapter.2413" = type <{ i8*, i32, [4 x i8] }>
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::HeapVectorBacking.2483" = type { i8 }
%"class.blink::KeyframeEffectModel" = type { %"class.blink::KeyframeEffectModelBase.base", [5 x i8] }
%"class.blink::KeyframeEffectModelBase.base" = type <{ %"class.blink::EffectModel", %"class.blink::HeapVector.2059", %"class.blink::Member.2075", %"class.blink::Member.2100", i32, [4 x i8], double, %"class.blink::AnimationTimeDelta", i32, [4 x i8], %class.scoped_refptr.494, i8, i8, i8 }>
%"class.blink::HeapVectorBacking.2496" = type { i8 }
%"class.blink::KeyframeEffectModel.2200" = type { %"class.blink::KeyframeEffectModelBase.base", [5 x i8] }

$_ZN5blink19InspectorAgentState11SimpleFieldIbE5ClearEv = comdat any

$_ZN5blink29DummyExceptionStateForTestingD2Ev = comdat any

$_ZNK5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEE5TraceEPNS_7VisitorE = comdat any

$_ZN5blink23InspectorAnimationAgentD2Ev = comdat any

$_ZN5blink23InspectorAnimationAgentD0Ev = comdat any

$_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEE7DisposeEv = comdat any

$_ZThn8_N5blink23InspectorAnimationAgentD1Ev = comdat any

$_ZThn8_N5blink23InspectorAnimationAgentD0Ev = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol9Animation13KeyframeStyleENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv = comdat any

$_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

$_ZN3WTF12VectorBufferIhLj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN5blink19InspectorAgentState5FieldD2Ev = comdat any

$_ZN5blink19InspectorAgentState5FieldD0Ev = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEED2Ev = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEED0Ev = comdat any

$_ZN5blink14InspectorAgent7RestoreEv = comdat any

$_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEE7disableEv = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEED1Ev = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEED0Ev = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEE7disableEv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEEC2ERKS6_ = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8KeyframeEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_8KeyframeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIbED0Ev = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIbE6DecodeEv = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_ = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIdED0Ev = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIdE5ClearEv = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIdE6DecodeEv = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS1_PS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE12ExpandBufferEjPS7_Rb = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9AnimationEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_9AnimationEEEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9AnimationEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_9AnimationEEEEENS3_24KeyValuePairKeyExtractorENS3_10StringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9AnimationEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS8_EEEESE_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_9AnimationEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6LookupERKS1_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14StringKeyframeEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_14StringKeyframeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_11EffectModelEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_11EffectModelEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_11EffectModelEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_11EffectModelEE7GetNameEPKv = comdat any

$_ZN5blink23KeyframeEffectModelBaseD2Ev = comdat any

$_ZN5blink19KeyframeEffectModelINS_14StringKeyframeEED0Ev = comdat any

$_ZNK5blink23KeyframeEffectModelBase7AffectsERKNS_14PropertyHandleE = comdat any

$_ZNK5blink23KeyframeEffectModelBase30AffectedByUnderlyingAnimationsEv = comdat any

$_ZNK5blink23KeyframeEffectModelBase21IsKeyframeEffectModelEv = comdat any

$_ZN5blink23KeyframeEffectModelBase20GetComputedKeyframesEPNS_7ElementE = comdat any

$_ZNK5blink19KeyframeEffectModelINS_14StringKeyframeEE27IsStringKeyframeEffectModelEv = comdat any

$_ZNK5blink19KeyframeEffectModelINS_14StringKeyframeEE31IsTransitionKeyframeEffectModelEv = comdat any

$_ZN5blink19KeyframeEffectModelINS_14StringKeyframeEE5CloneEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_19InterpolationEffectEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_19InterpolationEffectEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_19InterpolationEffectEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE6AppendINS2_INS1_14StringKeyframeEEEEEvPKT_j = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZNK3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorISC_SH_SI_EES2_EEPKS8_RKT0_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_19KeyframeEffectModelINS_14StringKeyframeEEEE4CallIJRNS_10HeapVectorINS_6MemberIS2_EELj0EEERNS_11EffectModel18CompositeOperationER13scoped_refptrINS_14TimingFunctionEEEEEPS3_DpOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_18TransitionKeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_18TransitionKeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_18TransitionKeyframeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18TransitionKeyframeEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_18TransitionKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_18TransitionKeyframeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_18TransitionKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_18TransitionKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_18TransitionKeyframeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink19KeyframeEffectModelINS_18TransitionKeyframeEED0Ev = comdat any

$_ZNK5blink19KeyframeEffectModelINS_18TransitionKeyframeEE27IsStringKeyframeEffectModelEv = comdat any

$_ZNK5blink19KeyframeEffectModelINS_18TransitionKeyframeEE31IsTransitionKeyframeEffectModelEv = comdat any

$_ZN5blink19KeyframeEffectModelINS_18TransitionKeyframeEE5CloneEv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE6AppendINS2_INS1_18TransitionKeyframeEEEEEvPKT_j = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_18TransitionKeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_19KeyframeEffectModelINS_18TransitionKeyframeEEEE4CallIJRNS_10HeapVectorINS_6MemberIS2_EELj0EEERNS_11EffectModel18CompositeOperationER13scoped_refptrINS_14TimingFunctionEEEEEPS3_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS1_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES1_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE5eraseEPKS7_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE4findERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF6VectorIN5blink15CSSPropertyNameELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15CSSPropertyNameEEEmm = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EES1_EEbRKT0_ = comdat any

$_ZN5blink10TraceTraitINS_15InspectedFramesEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_17InspectorCSSAgentEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink19InspectorAgentState5FieldE = comdat any

$_ZTVN5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEEE = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE = comdat any

$_ZTVN5blink19InspectorAgentState11SimpleFieldIdEE = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9AnimationEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9AnimationEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_11EffectModelEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_11EffectModelEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink19KeyframeEffectModelINS_14StringKeyframeEEE = comdat any

$_ZZN5blink11GCInfoTraitINS_19InterpolationEffectEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_19InterpolationEffectEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18TransitionKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18TransitionKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink19KeyframeEffectModelINS_18TransitionKeyframeEEE = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink23InspectorAnimationAgentE = hidden unnamed_addr constant { [20 x i8*], [14 x i8*] } { [20 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAnimationAgent"*)* @_ZN5blink23InspectorAnimationAgentD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAnimationAgent"*)* @_ZN5blink23InspectorAnimationAgentD0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAnimationAgent"*, %"class.blink::Visitor"*)* @_ZNK5blink23InspectorAnimationAgent5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::InspectorAnimationAgent"*)* @_ZN5blink23InspectorAnimationAgent7RestoreEv to i8*), i8* bitcast (void (%"class.blink::InspectorAnimationAgent"*, %"class.blink::LocalFrame"*)* @_ZN5blink23InspectorAnimationAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEE7DisposeEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorAnimationAgent"*)* @_ZN5blink23InspectorAnimationAgent7disableEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorAnimationAgent"*)* @_ZN5blink23InspectorAnimationAgent6enableEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorAnimationAgent"*, double*)* @_ZN5blink23InspectorAnimationAgent15getPlaybackRateEPd to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorAnimationAgent"*, double)* @_ZN5blink23InspectorAnimationAgent15setPlaybackRateEd to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorAnimationAgent"*, %"class.WTF::String"*, double*)* @_ZN5blink23InspectorAnimationAgent14getCurrentTimeERKN3WTF6StringEPd to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorAnimationAgent"*, %"class.std::__1::vector.2149"*, i1)* @_ZN5blink23InspectorAnimationAgent9setPausedENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEEb to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorAnimationAgent"*, %"class.WTF::String"*, double, double)* @_ZN5blink23InspectorAnimationAgent9setTimingERKN3WTF6StringEdd to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorAnimationAgent"*, %"class.std::__1::vector.2149"*, double)* @_ZN5blink23InspectorAnimationAgent14seekAnimationsENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEEd to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorAnimationAgent"*, %"class.std::__1::vector.2149"*)* @_ZN5blink23InspectorAnimationAgent17releaseAnimationsENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorAnimationAgent"*, %"class.WTF::String"*, %"class.std::__1::unique_ptr.2233"*)* @_ZN5blink23InspectorAnimationAgent16resolveAnimationERKN3WTF6StringEPNSt3__110unique_ptrIN12v8_inspector8protocol7Runtime3API12RemoteObjectENS5_14default_deleteISB_EEEE to i8*)], [14 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::InspectorAnimationAgent"*)* @_ZThn8_N5blink23InspectorAnimationAgentD1Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAnimationAgent"*)* @_ZThn8_N5blink23InspectorAnimationAgentD0Ev to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorAnimationAgent"*)* @_ZThn8_N5blink23InspectorAnimationAgent7disableEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorAnimationAgent"*)* @_ZThn8_N5blink23InspectorAnimationAgent6enableEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorAnimationAgent"*, %"class.WTF::String"*, double*)* @_ZThn8_N5blink23InspectorAnimationAgent14getCurrentTimeERKN3WTF6StringEPd to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorAnimationAgent"*, double*)* @_ZThn8_N5blink23InspectorAnimationAgent15getPlaybackRateEPd to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorAnimationAgent"*, %"class.std::__1::vector.2149"*)* @_ZThn8_N5blink23InspectorAnimationAgent17releaseAnimationsENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorAnimationAgent"*, %"class.WTF::String"*, %"class.std::__1::unique_ptr.2233"*)* @_ZThn8_N5blink23InspectorAnimationAgent16resolveAnimationERKN3WTF6StringEPNSt3__110unique_ptrIN12v8_inspector8protocol7Runtime3API12RemoteObjectENS5_14default_deleteISB_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorAnimationAgent"*, %"class.std::__1::vector.2149"*, double)* @_ZThn8_N5blink23InspectorAnimationAgent14seekAnimationsENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEEd to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorAnimationAgent"*, %"class.std::__1::vector.2149"*, i1)* @_ZThn8_N5blink23InspectorAnimationAgent9setPausedENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEEb to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorAnimationAgent"*, double)* @_ZThn8_N5blink23InspectorAnimationAgent15setPlaybackRateEd to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorAnimationAgent"*, %"class.WTF::String"*, double, double)* @_ZThn8_N5blink23InspectorAnimationAgent9setTimingERKN3WTF6StringEdd to i8*)] }, align 8
@_ZN5blink8protocol9Animation9Animation8TypeEnum12WebAnimationE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol9Animation9Animation8TypeEnum13CSSTransitionE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol9Animation9Animation8TypeEnum12CSSAnimationE = external local_unnamed_addr global i8*, align 8
@.str = private unnamed_addr constant [35 x i8] c"Failed to clone detached animation\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"Failed to clone a detached animation.\00", align 1
@__const._ZN5blink23InspectorAnimationAgent9setTimingERKN3WTF6StringEdd.unrestricted_duration = private unnamed_addr constant { i32, [4 x i8], %"class.WTF::String", double } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, double 0xFFFFFFFFFFFFFFFF }, align 8
@.str.2 = private unnamed_addr constant [40 x i8] c"Element not associated with a document.\00", align 1
@_ZZN5blink23InspectorAnimationAgent16resolveAnimationERKN3WTF6StringEPNSt3__110unique_ptrIN12v8_inspector8protocol7Runtime3API12RemoteObjectENS5_14default_deleteISB_EEEEE21kAnimationObjectGroup = internal constant [10 x i8] c"animation\00", align 1
@_ZZN5blink23InspectorAnimationAgent11CreateCSSIdERNS_9AnimationEE22g_animation_properties = internal constant [7 x i32] [i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 43], align 16
@_ZZN5blink23InspectorAnimationAgent11CreateCSSIdERNS_9AnimationEE23g_transition_properties = internal constant [4 x i32] [i32 373, i32 374, i32 375, i32 376], align 16
@.str.3 = private unnamed_addr constant [39 x i8] c"Could not find animation with given id\00", align 1
@_ZTVN5blink8protocol9Animation15AnimationEffectE = external unnamed_addr constant { [5 x i8*] }, align 8
@.str.4 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.5 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"%\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.8 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.9 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.10 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@_ZTVN5blink8protocol9Animation13KeyframeStyleE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol9Animation13KeyframesRuleE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol9Animation9AnimationE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink29DummyExceptionStateForTestingE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IDLDictionaryBase]\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.12 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.13 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E = external local_unnamed_addr global i32, align 4
@.str.14 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.15 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.16 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@.str.17 = private unnamed_addr constant [29 x i8] c"../../base/containers/span.h\00", align 1
@.str.18 = private unnamed_addr constant [44 x i8] c"Extent != dynamic_extent || Count <= size()\00", align 1
@_ZTVN5blink19InspectorAgentState5FieldE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEEE = linkonce_odr hidden unnamed_addr constant { [11 x i8*], [14 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEED2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*, %"class.blink::Visitor"*)* @_ZNK5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEE5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent7RestoreEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*, %"class.blink::LocalFrame"*)* @_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEE7DisposeEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEE7disableEv to i8*)], [14 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEED1Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEED0Ev to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEE7disableEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.20 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.21 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.22 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.23 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_8KeyframeEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [157 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::Keyframe>, WTF::VectorTraits<blink::Member<blink::Keyframe> > >]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIbED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIbE5ClearEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIbE6DecodeEv to i8*)] }, comdat, align 8
@_ZTVN5blink19InspectorAgentState11SimpleFieldIdEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField.584"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIdED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField.584"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIdE5ClearEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField.584"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIdE6DecodeEv to i8*)] }, comdat, align 8
@_ZN5blink8protocol9Animation8Metainfo10domainNameE = external constant [0 x i8], align 1
@.str.24 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.25 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.26 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.27 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9AnimationEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9AnimationEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_9AnimationEEEEENS3_24KeyValuePairKeyExtractorENS3_10StringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9AnimationEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9AnimationEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS_6StringENS_12KeyValuePairIS4_NS1_6MemberINS1_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [378 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<WTF::String, WTF::KeyValuePair<WTF::String, blink::Member<blink::Animation> >, WTF::KeyValuePairKeyExtractor, WTF::StringHash, WTF::HashMapValueTraits<WTF::HashTraits<WTF::String>, WTF::HashTraits<blink::Member<blink::Animation> > >, WTF::HashTraits<WTF::String>, blink::HeapAllocator> >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_14StringKeyframeEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [169 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::StringKeyframe>, WTF::VectorTraits<blink::Member<blink::StringKeyframe> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11EffectModelEEEPKcv = private unnamed_addr constant [66 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::EffectModel]\00", align 1
@_ZZN5blink11GCInfoTraitINS_11EffectModelEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_11EffectModelEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_11EffectModelEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_11EffectModelEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_11EffectModelEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink19KeyframeEffectModelINS_14StringKeyframeEEE = linkonce_odr hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::KeyframeEffectModelBase"*)* @_ZN5blink23KeyframeEffectModelBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::KeyframeEffectModel"*)* @_ZN5blink19KeyframeEffectModelINS_14StringKeyframeEED0Ev to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModelBase"*, i32, double, double, %"class.blink::HeapVector.2118"*)* @_ZNK5blink23KeyframeEffectModelBase6SampleEidNS_18AnimationTimeDeltaERNS_10HeapVectorINS_6MemberINS_13InterpolationEEELj0EEE to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::PropertyHandle"*)* @_ZNK5blink23KeyframeEffectModelBase7AffectsERKNS_14PropertyHandleE to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModelBase"*)* @_ZNK5blink23KeyframeEffectModelBase30AffectedByUnderlyingAnimationsEv to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModelBase"*)* @_ZNK5blink23KeyframeEffectModelBase24IsTransformRelatedEffectEv to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModelBase"*)* @_ZNK5blink23KeyframeEffectModelBase21IsKeyframeEffectModelEv to i8*), i8* bitcast (void (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::Visitor"*)* @_ZNK5blink23KeyframeEffectModelBase5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::HeapVector.2059"*, %"class.blink::KeyframeEffectModelBase"*, %"class.blink::Element"*)* @_ZN5blink23KeyframeEffectModelBase20GetComputedKeyframesEPNS_7ElementE to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModel"*)* @_ZNK5blink19KeyframeEffectModelINS_14StringKeyframeEE27IsStringKeyframeEffectModelEv to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModel"*)* @_ZNK5blink19KeyframeEffectModelINS_14StringKeyframeEE31IsTransitionKeyframeEffectModelEv to i8*), i8* bitcast (%"class.blink::KeyframeEffectModelBase"* (%"class.blink::KeyframeEffectModel"*)* @_ZN5blink19KeyframeEffectModelINS_14StringKeyframeEE5CloneEv to i8*)] }, comdat, align 8
@_ZTVN5blink23KeyframeEffectModelBaseE = external unnamed_addr constant { [14 x i8*] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19InterpolationEffectEEEPKcv = private unnamed_addr constant [74 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::InterpolationEffect]\00", align 1
@_ZZN5blink11GCInfoTraitINS_19InterpolationEffectEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_19InterpolationEffectEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_19InterpolationEffectEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_19InterpolationEffectEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.28 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@.str.29 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.30 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18TransitionKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_18TransitionKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_18TransitionKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18TransitionKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_18TransitionKeyframeEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [177 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::TransitionKeyframe>, WTF::VectorTraits<blink::Member<blink::TransitionKeyframe> > >]\00", align 1
@_ZTVN5blink19KeyframeEffectModelINS_18TransitionKeyframeEEE = linkonce_odr hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::KeyframeEffectModelBase"*)* @_ZN5blink23KeyframeEffectModelBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::KeyframeEffectModel.2200"*)* @_ZN5blink19KeyframeEffectModelINS_18TransitionKeyframeEED0Ev to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModelBase"*, i32, double, double, %"class.blink::HeapVector.2118"*)* @_ZNK5blink23KeyframeEffectModelBase6SampleEidNS_18AnimationTimeDeltaERNS_10HeapVectorINS_6MemberINS_13InterpolationEEELj0EEE to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::PropertyHandle"*)* @_ZNK5blink23KeyframeEffectModelBase7AffectsERKNS_14PropertyHandleE to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModelBase"*)* @_ZNK5blink23KeyframeEffectModelBase30AffectedByUnderlyingAnimationsEv to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModelBase"*)* @_ZNK5blink23KeyframeEffectModelBase24IsTransformRelatedEffectEv to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModelBase"*)* @_ZNK5blink23KeyframeEffectModelBase21IsKeyframeEffectModelEv to i8*), i8* bitcast (void (%"class.blink::KeyframeEffectModelBase"*, %"class.blink::Visitor"*)* @_ZNK5blink23KeyframeEffectModelBase5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::HeapVector.2059"*, %"class.blink::KeyframeEffectModelBase"*, %"class.blink::Element"*)* @_ZN5blink23KeyframeEffectModelBase20GetComputedKeyframesEPNS_7ElementE to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModel.2200"*)* @_ZNK5blink19KeyframeEffectModelINS_18TransitionKeyframeEE27IsStringKeyframeEffectModelEv to i8*), i8* bitcast (i1 (%"class.blink::KeyframeEffectModel.2200"*)* @_ZNK5blink19KeyframeEffectModelINS_18TransitionKeyframeEE31IsTransitionKeyframeEffectModelEv to i8*), i8* bitcast (%"class.blink::KeyframeEffectModelBase"* (%"class.blink::KeyframeEffectModel.2200"*)* @_ZN5blink19KeyframeEffectModelINS_18TransitionKeyframeEE5CloneEv to i8*)] }, comdat, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@.str.31 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15CSSPropertyNameEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSPropertyName]\00", align 1

@_ZN5blink23InspectorAnimationAgentC1EPNS_15InspectedFramesEPNS_17InspectorCSSAgentEPN12v8_inspector18V8InspectorSessionE = hidden unnamed_addr alias void (%"class.blink::InspectorAnimationAgent"*, %"class.blink::InspectedFrames"*, %"class.blink::InspectorCSSAgent"*, %"class.v8_inspector::V8InspectorSession"*), void (%"class.blink::InspectorAnimationAgent"*, %"class.blink::InspectedFrames"*, %"class.blink::InspectorCSSAgent"*, %"class.v8_inspector::V8InspectorSession"*)* @_ZN5blink23InspectorAnimationAgentC2EPNS_15InspectedFramesEPNS_17InspectorCSSAgentEPN12v8_inspector18V8InspectorSessionE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorAnimationAgentC2EPNS_15InspectedFramesEPNS_17InspectorCSSAgentEPN12v8_inspector18V8InspectorSessionE(%"class.blink::InspectorAnimationAgent"*, %"class.blink::InspectedFrames"*, %"class.blink::InspectorCSSAgent"*, %"class.v8_inspector::V8InspectorSession"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.blink::InspectorAnimationAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [14 x i8*] }, { [11 x i8*], [14 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [14 x i8*] }, { [11 x i8*], [14 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %6, align 8
  %7 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.blink::CoreProbeSink"* null, %"class.blink::CoreProbeSink"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 0, i32 3
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol9Animation8Metainfo10domainNameE, i64 0, i64 0)) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol9Animation8Metainfo10domainNameE, i64 0, i64 0), i64 %10) #13
  call void @_ZN5blink19InspectorAgentStateC1ERKN3WTF6StringE(%"class.blink::InspectorAgentState"* %8, %"class.WTF::String"* nonnull dereferenceable(8) %5) #13
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #13
  br label %27

27:                                               ; preds = %4, %23, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %28 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 0, i32 4
  %29 = bitcast %"class.std::__1::unique_ptr.227"* %28 to i64*
  store i64 0, i64* %29, align 8
  %30 = bitcast %"class.blink::InspectorAnimationAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*], [14 x i8*] }, { [20 x i8*], [14 x i8*] }* @_ZTVN5blink23InspectorAnimationAgentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*], [14 x i8*] }, { [20 x i8*], [14 x i8*] }* @_ZTVN5blink23InspectorAnimationAgentE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %30, align 8
  %31 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::InspectedFrames"* %1, %"class.blink::InspectedFrames"** %31, align 8
  %32 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::InspectorCSSAgent"* %2, %"class.blink::InspectorCSSAgent"** %32, align 8
  %33 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 3
  store %"class.v8_inspector::V8InspectorSession"* %3, %"class.v8_inspector::V8InspectorSession"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 4
  %35 = bitcast %"class.blink::HeapHashMap.435"* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 20, i1 false) #13
  %36 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 5
  %37 = bitcast %"class.blink::HeapHashMap.435"* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 20, i1 false) #13
  %38 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 6
  store i8 0, i8* %38, align 8
  %39 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 8
  %40 = bitcast %"class.WTF::HashSet.580"* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 20, i1 false) #13
  %41 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 9
  %42 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %41, i64 0, i32 0
  %43 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %41, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %42) #13
  %45 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %45, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %46 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 9, i32 1
  store i8 0, i8* %46, align 8
  %47 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 9, i32 2
  store i8 0, i8* %47, align 1
  %48 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 10
  %49 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.584", %"class.blink::InspectorAgentState::SimpleField.584"* %48, i64 0, i32 0
  %50 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.584", %"class.blink::InspectorAgentState::SimpleField.584"* %48, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %50, align 8
  %51 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %8, %"class.blink::InspectorAgentState::Field"* %49) #13
  %52 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %51, %"class.WTF::StringImpl"** %52, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIdEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %50, align 8
  %53 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 10, i32 1
  store double 1.000000e+00, double* %53, align 8
  %54 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 10, i32 2
  store double 1.000000e+00, double* %54, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorAnimationAgent7RestoreEv(%"class.blink::InspectorAnimationAgent"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.crdtp::DispatchResponse", align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 9, i32 2
  %4 = load i8, i8* %3, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %7, align 8
  tail call void @_ZN5blink13CoreProbeSink26AddInspectorAnimationAgentEPNS_23InspectorAnimationAgentE(%"class.blink::CoreProbeSink"* %8, %"class.blink::InspectorAnimationAgent"* %0) #13
  %9 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 10, i32 2
  %10 = load double, double* %9, align 8
  call void @_ZN5blink23InspectorAnimationAgent15setPlaybackRateEd(%"class.crdtp::DispatchResponse"* nonnull sret %2, %"class.blink::InspectorAnimationAgent"* %0, double %10)
  %11 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %2, i64 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %18) #15
  br label %19

19:                                               ; preds = %1, %16, %6
  ret void
}

declare void @_ZN5blink13CoreProbeSink26AddInspectorAnimationAgentEPNS_23InspectorAnimationAgentE(%"class.blink::CoreProbeSink"*, %"class.blink::InspectorAnimationAgent"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorAnimationAgent15setPlaybackRateEd(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorAnimationAgent"*, double) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::WebVector", align 8
  %5 = alloca %"class.blink::InspectedFrames::Iterator", align 8
  %6 = alloca %"class.blink::InspectedFrames::Iterator", align 8
  %7 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %7, align 8
  %9 = bitcast %"class.blink::InspectedFrames::Iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.blink::InspectedFrames::Iterator", %"class.blink::InspectedFrames::Iterator"* %5, i64 0, i32 0
  %11 = getelementptr inbounds %"class.blink::InspectedFrames::Iterator", %"class.blink::InspectedFrames::Iterator"* %5, i64 0, i32 1
  %12 = tail call { %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"* } @_ZN5blink15InspectedFrames5beginEv(%"class.blink::InspectedFrames"* %8) #13
  %13 = extractvalue { %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"* } %12, 0
  store %"class.blink::LocalFrame"* %13, %"class.blink::LocalFrame"** %10, align 8
  %14 = extractvalue { %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"* } %12, 1
  store %"class.blink::LocalFrame"* %14, %"class.blink::LocalFrame"** %11, align 8
  %15 = bitcast %"class.blink::InspectedFrames::Iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #13
  %16 = getelementptr inbounds %"class.blink::InspectedFrames::Iterator", %"class.blink::InspectedFrames::Iterator"* %6, i64 0, i32 0
  %17 = getelementptr inbounds %"class.blink::InspectedFrames::Iterator", %"class.blink::InspectedFrames::Iterator"* %6, i64 0, i32 1
  %18 = tail call { %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"* } @_ZN5blink15InspectedFrames3endEv(%"class.blink::InspectedFrames"* %8) #13
  %19 = extractvalue { %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"* } %18, 0
  store %"class.blink::LocalFrame"* %19, %"class.blink::LocalFrame"** %16, align 8
  %20 = extractvalue { %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"* } %18, 1
  store %"class.blink::LocalFrame"* %20, %"class.blink::LocalFrame"** %17, align 8
  %21 = call zeroext i1 @_ZN5blink15InspectedFrames8IteratorneERKS1_(%"class.blink::InspectedFrames::Iterator"* nonnull %5, %"class.blink::InspectedFrames::Iterator"* nonnull dereferenceable(16) %6) #13
  br i1 %21, label %50, label %22

22:                                               ; preds = %50, %3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #13
  %23 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 10
  %24 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 10, i32 2
  %25 = load double, double* %24, align 8
  %26 = fcmp oeq double %25, %2
  br i1 %26, label %49, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 10, i32 1
  %29 = load double, double* %28, align 8
  %30 = fcmp oeq double %29, %2
  br i1 %30, label %31, label %36

31:                                               ; preds = %27
  %32 = bitcast %"class.blink::InspectorAgentState::SimpleField.584"* %23 to void (%"class.blink::InspectorAgentState::SimpleField.584"*)***
  %33 = load void (%"class.blink::InspectorAgentState::SimpleField.584"*)**, void (%"class.blink::InspectorAgentState::SimpleField.584"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField.584"*)*, void (%"class.blink::InspectorAgentState::SimpleField.584"*)** %33, i64 2
  %35 = load void (%"class.blink::InspectorAgentState::SimpleField.584"*)*, void (%"class.blink::InspectorAgentState::SimpleField.584"*)** %34, align 8
  call void %35(%"class.blink::InspectorAgentState::SimpleField.584"* %23) #13
  br label %49

36:                                               ; preds = %27
  store double %2, double* %24, align 8
  %37 = bitcast %"class.blink::WebVector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #13
  %38 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %4, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 0, i64 24, i1 false) #13
  call void @_ZN5blink19InspectorAgentState9SerializeEdPNS_9WebVectorIhEE(double %2, %"class.blink::WebVector"* nonnull %4) #13
  %39 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 10, i32 0, i32 2
  %40 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 10, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %40, %"class.WTF::String"* dereferenceable(8) %41, %"class.blink::WebVector"* nonnull %4) #13
  %42 = load i8*, i8** %38, align 8
  %43 = icmp eq i8* %42, null
  br i1 %43, label %48, label %44

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %4, i64 0, i32 0, i32 0, i32 1
  %46 = ptrtoint i8* %42 to i64
  %47 = bitcast i8** %45 to i64*
  store i64 %46, i64* %47, align 8
  call void @_ZdlPv(i8* nonnull %42) #15
  br label %48

48:                                               ; preds = %44, %36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #13
  br label %49

49:                                               ; preds = %22, %31, %48
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  ret void

50:                                               ; preds = %3, %50
  %51 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %11, align 8
  %52 = call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %51) #13
  %53 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %52, i64 0, i32 131, i32 0, i32 0
  %54 = load %"class.blink::DocumentTimeline"*, %"class.blink::DocumentTimeline"** %53, align 8
  call void @_ZN5blink16DocumentTimeline15SetPlaybackRateEd(%"class.blink::DocumentTimeline"* %54, double %2) #13
  %55 = call dereferenceable(16) %"class.blink::InspectedFrames::Iterator"* @_ZN5blink15InspectedFrames8IteratorppEv(%"class.blink::InspectedFrames::Iterator"* nonnull %5) #13
  %56 = call zeroext i1 @_ZN5blink15InspectedFrames8IteratorneERKS1_(%"class.blink::InspectedFrames::Iterator"* nonnull %5, %"class.blink::InspectedFrames::Iterator"* nonnull dereferenceable(16) %6) #13
  br i1 %56, label %50, label %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorAnimationAgent6enableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorAnimationAgent"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::WebVector", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 9
  %5 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 9, i32 2
  %6 = load i8, i8* %5, align 1, !range !2
  %7 = icmp eq i8 %6, 1
  br i1 %7, label %30, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 9, i32 1
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 1
  br i1 %11, label %12, label %17

12:                                               ; preds = %8
  %13 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %4 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %14 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %14, i64 2
  %16 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %15, align 8
  tail call void %16(%"class.blink::InspectorAgentState::SimpleField"* %4) #13
  br label %30

17:                                               ; preds = %8
  store i8 1, i8* %5, align 1
  %18 = bitcast %"class.blink::WebVector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #13
  %19 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %3, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #13
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext true, %"class.blink::WebVector"* nonnull %3) #13
  %20 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 9, i32 0, i32 2
  %21 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 9, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %21, %"class.WTF::String"* dereferenceable(8) %22, %"class.blink::WebVector"* nonnull %3) #13
  %23 = load i8*, i8** %19, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %3, i64 0, i32 0, i32 0, i32 1
  %27 = ptrtoint i8* %23 to i64
  %28 = bitcast i8** %26 to i64*
  store i64 %27, i64* %28, align 8
  call void @_ZdlPv(i8* nonnull %23) #15
  br label %29

29:                                               ; preds = %25, %17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #13
  br label %30

30:                                               ; preds = %2, %12, %29
  %31 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %31, align 8
  call void @_ZN5blink13CoreProbeSink26AddInspectorAnimationAgentEPNS_23InspectorAnimationAgentE(%"class.blink::CoreProbeSink"* %32, %"class.blink::InspectorAnimationAgent"* %1) #13
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  ret void
}

declare void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink23InspectorAnimationAgent6enableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorAnimationAgent"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 -1, i32 10, i32 2
  %4 = bitcast double* %3 to %"class.blink::InspectorAnimationAgent"*
  tail call void @_ZN5blink23InspectorAnimationAgent6enableEv(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorAnimationAgent"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorAnimationAgent7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorAnimationAgent"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.crdtp::DispatchResponse", align 8
  call void @_ZN5blink23InspectorAnimationAgent15setPlaybackRateEd(%"class.crdtp::DispatchResponse"* nonnull sret %3, %"class.blink::InspectorAnimationAgent"* %1, double 1.000000e+00)
  %4 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %3, i64 0, i32 1
  %5 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %11) #15
  br label %12

12:                                               ; preds = %2, %9
  %13 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 5, i32 0
  %14 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 5, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::HashMap.438", %"class.WTF::HashMap.438"* %13, i64 0, i32 0, i32 0
  %18 = load %"struct.WTF::KeyValuePair.441"*, %"struct.WTF::KeyValuePair.441"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 5, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %18, i64 %21
  br i1 %16, label %35, label %23

23:                                               ; preds = %12
  %24 = icmp eq i32 %20, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %23, %29
  %26 = phi %"struct.WTF::KeyValuePair.441"* [ %30, %29 ], [ %18, %23 ]
  %27 = bitcast %"struct.WTF::KeyValuePair.441"* %26 to i64*
  %28 = load i64, i64* %27, align 8
  switch i64 %28, label %32 [
    i64 -1, label %29
    i64 0, label %29
  ]

29:                                               ; preds = %25, %25
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %26, i64 1
  %31 = icmp eq %"struct.WTF::KeyValuePair.441"* %30, %22
  br i1 %31, label %35, label %25

32:                                               ; preds = %25, %23
  %33 = phi %"struct.WTF::KeyValuePair.441"* [ %18, %23 ], [ %26, %25 ]
  %34 = icmp eq %"struct.WTF::KeyValuePair.441"* %33, %22
  br i1 %34, label %35, label %165

35:                                               ; preds = %29, %165, %178, %175, %12, %32
  %36 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 9, i32 1
  %37 = load i8, i8* %36, align 8, !range !2
  %38 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 9, i32 2
  %39 = load i8, i8* %38, align 1, !range !2
  %40 = icmp eq i8 %37, %39
  br i1 %40, label %45, label %41

41:                                               ; preds = %35
  store i8 %37, i8* %38, align 1
  %42 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 9, i32 0, i32 2
  %43 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 9, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %43, %"class.WTF::String"* dereferenceable(8) %44, %"class.blink::WebVector"* null) #13
  br label %45

45:                                               ; preds = %35, %41
  %46 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %47 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %46, align 8
  call void @_ZN5blink13CoreProbeSink29RemoveInspectorAnimationAgentEPNS_23InspectorAnimationAgentE(%"class.blink::CoreProbeSink"* %47, %"class.blink::InspectorAnimationAgent"* %1) #13
  %48 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 4, i32 0
  %49 = getelementptr inbounds %"class.WTF::HashMap.438", %"class.WTF::HashMap.438"* %48, i64 0, i32 0, i32 0
  %50 = load %"struct.WTF::KeyValuePair.441"*, %"struct.WTF::KeyValuePair.441"** %49, align 8
  %51 = icmp eq %"struct.WTF::KeyValuePair.441"* %50, null
  br i1 %51, label %88, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 4, i32 0, i32 0, i32 1
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %84, label %56

56:                                               ; preds = %52
  %57 = zext i32 %54 to i64
  br label %58

58:                                               ; preds = %81, %56
  %59 = phi i64 [ 0, %56 ], [ %82, %81 ]
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %50, i64 %59
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %60, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = ptrtoint %"class.WTF::StringImpl"* %62 to i64
  switch i64 %63, label %64 [
    i64 -1, label %81
    i64 0, label %81
  ]

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #13
  br label %77

77:                                               ; preds = %76, %73
  %78 = bitcast %"struct.WTF::KeyValuePair.441"* %60 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %78, align 8
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %50, i64 %59, i32 1
  %80 = bitcast %"class.blink::Member.442"* %79 to i64*
  store atomic i64 0, i64* %80 monotonic, align 8
  br label %81

81:                                               ; preds = %77, %58, %58
  %82 = add nuw nsw i64 %59, 1
  %83 = icmp eq i64 %82, %57
  br i1 %83, label %84, label %58

84:                                               ; preds = %81, %52
  %85 = bitcast %"struct.WTF::KeyValuePair.441"* %50 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %85) #13
  %86 = bitcast %"class.WTF::HashMap.438"* %48 to i64*
  store atomic i64 0, i64* %86 monotonic, align 8
  store i32 0, i32* %53, align 8
  %87 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 4, i32 0, i32 0, i32 2
  store i32 0, i32* %87, align 4
  br label %88

88:                                               ; preds = %45, %84
  %89 = load %"struct.WTF::KeyValuePair.441"*, %"struct.WTF::KeyValuePair.441"** %17, align 8
  %90 = icmp eq %"struct.WTF::KeyValuePair.441"* %89, null
  br i1 %90, label %125, label %91

91:                                               ; preds = %88
  %92 = load i32, i32* %19, align 8
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %122, label %94

94:                                               ; preds = %91
  %95 = zext i32 %92 to i64
  br label %96

96:                                               ; preds = %119, %94
  %97 = phi i64 [ 0, %94 ], [ %120, %119 ]
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %89, i64 %97
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = ptrtoint %"class.WTF::StringImpl"* %100 to i64
  switch i64 %101, label %102 [
    i64 -1, label %119
    i64 0, label %119
  ]

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #13
  br label %115

115:                                              ; preds = %114, %111
  %116 = bitcast %"struct.WTF::KeyValuePair.441"* %98 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %116, align 8
  %117 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %89, i64 %97, i32 1
  %118 = bitcast %"class.blink::Member.442"* %117 to i64*
  store atomic i64 0, i64* %118 monotonic, align 8
  br label %119

119:                                              ; preds = %115, %96, %96
  %120 = add nuw nsw i64 %97, 1
  %121 = icmp eq i64 %120, %95
  br i1 %121, label %122, label %96

122:                                              ; preds = %119, %91
  %123 = bitcast %"struct.WTF::KeyValuePair.441"* %89 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %123) #13
  %124 = bitcast %"class.WTF::HashMap.438"* %13 to i64*
  store atomic i64 0, i64* %124 monotonic, align 8
  store i32 0, i32* %19, align 8
  store i32 0, i32* %14, align 4
  br label %125

125:                                              ; preds = %88, %122
  %126 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 8
  %127 = getelementptr inbounds %"class.WTF::HashSet.580", %"class.WTF::HashSet.580"* %126, i64 0, i32 0, i32 0
  %128 = load %"class.WTF::String"*, %"class.WTF::String"** %127, align 8
  %129 = icmp eq %"class.WTF::String"* %128, null
  br i1 %129, label %164, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 8, i32 0, i32 1
  %132 = load i32, i32* %131, align 8
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %160, label %134

134:                                              ; preds = %130
  %135 = zext i32 %132 to i64
  br label %136

136:                                              ; preds = %157, %134
  %137 = phi i64 [ 0, %134 ], [ %158, %157 ]
  %138 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %128, i64 %137
  %139 = bitcast %"class.WTF::String"* %138 to i8**
  %140 = load i8*, i8** %139, align 8
  %141 = bitcast i8* %140 to %"class.WTF::StringImpl"*
  %142 = ptrtoint i8* %140 to i64
  switch i64 %142, label %143 [
    i64 -1, label %157
    i64 0, label %157
  ]

143:                                              ; preds = %136
  %144 = getelementptr inbounds i8, i8* %140, i64 8
  %145 = bitcast i8* %144 to i32*
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = bitcast i8* %140 to i32*
  %150 = load i32, i32* %149, align 4
  br i1 %148, label %151, label %153

151:                                              ; preds = %143
  %152 = add i32 %150, -1
  store i32 %152, i32* %149, align 4
  br label %153

153:                                              ; preds = %151, %143
  %154 = phi i32 [ %152, %151 ], [ %150, %143 ]
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %153
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %141) #13
  br label %157

157:                                              ; preds = %156, %153, %136, %136
  %158 = add nuw nsw i64 %137, 1
  %159 = icmp eq i64 %158, %135
  br i1 %159, label %160, label %136

160:                                              ; preds = %157, %130
  %161 = bitcast %"class.WTF::String"* %128 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %161) #13
  %162 = bitcast %"class.WTF::HashSet.580"* %126 to i64*
  store atomic i64 0, i64* %162 monotonic, align 8
  store i32 0, i32* %131, align 8
  %163 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 8, i32 0, i32 2
  store i32 0, i32* %163, align 4
  br label %164

164:                                              ; preds = %125, %160
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  ret void

165:                                              ; preds = %32, %178
  %166 = phi %"struct.WTF::KeyValuePair.441"* [ %172, %178 ], [ %33, %32 ]
  %167 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %166, i64 0, i32 1, i32 0, i32 0
  %168 = load %"class.blink::Animation"*, %"class.blink::Animation"** %167, align 8
  call void @_ZN5blink9Animation6cancelEv(%"class.blink::Animation"* %168) #13
  %169 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %166, i64 1
  %170 = icmp eq %"struct.WTF::KeyValuePair.441"* %169, %22
  br i1 %170, label %35, label %171

171:                                              ; preds = %165, %175
  %172 = phi %"struct.WTF::KeyValuePair.441"* [ %176, %175 ], [ %169, %165 ]
  %173 = bitcast %"struct.WTF::KeyValuePair.441"* %172 to i64*
  %174 = load i64, i64* %173, align 8
  switch i64 %174, label %178 [
    i64 -1, label %175
    i64 0, label %175
  ]

175:                                              ; preds = %171, %171
  %176 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %172, i64 1
  %177 = icmp eq %"struct.WTF::KeyValuePair.441"* %176, %22
  br i1 %177, label %35, label %171

178:                                              ; preds = %171
  %179 = icmp eq %"struct.WTF::KeyValuePair.441"* %172, %22
  br i1 %179, label %35, label %165
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink9Animation6cancelEv(%"class.blink::Animation"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIbE5ClearEv(%"class.blink::InspectorAgentState::SimpleField"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = icmp eq i8 %3, %5
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  store i8 %3, i8* %4, align 1
  %8 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 2
  %9 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %9, %"class.WTF::String"* dereferenceable(8) %10, %"class.blink::WebVector"* null) #13
  br label %11

11:                                               ; preds = %1, %7
  ret void
}

declare void @_ZN5blink13CoreProbeSink29RemoveInspectorAnimationAgentEPNS_23InspectorAnimationAgentE(%"class.blink::CoreProbeSink"*, %"class.blink::InspectorAnimationAgent"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink23InspectorAnimationAgent7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorAnimationAgent"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 -1, i32 10, i32 2
  %4 = bitcast double* %3 to %"class.blink::InspectorAnimationAgent"*
  tail call void @_ZN5blink23InspectorAnimationAgent7disableEv(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorAnimationAgent"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorAnimationAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE(%"class.blink::InspectorAnimationAgent"*, %"class.blink::LocalFrame"* readnone) unnamed_addr #0 align 2 {
  %3 = alloca %"class.crdtp::DispatchResponse", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %5, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %6, align 8
  %8 = icmp eq %"class.blink::LocalFrame"* %7, %1
  br i1 %8, label %9, label %130

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 4, i32 0
  %11 = getelementptr inbounds %"class.WTF::HashMap.438", %"class.WTF::HashMap.438"* %10, i64 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair.441"*, %"struct.WTF::KeyValuePair.441"** %11, align 8
  %13 = icmp eq %"struct.WTF::KeyValuePair.441"* %12, null
  br i1 %13, label %50, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %46, label %18

18:                                               ; preds = %14
  %19 = zext i32 %16 to i64
  br label %20

20:                                               ; preds = %43, %18
  %21 = phi i64 [ 0, %18 ], [ %44, %43 ]
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %12, i64 %21
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  switch i64 %25, label %26 [
    i64 -1, label %43
    i64 0, label %43
  ]

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #13
  br label %39

39:                                               ; preds = %38, %35
  %40 = bitcast %"struct.WTF::KeyValuePair.441"* %22 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %40, align 8
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %12, i64 %21, i32 1
  %42 = bitcast %"class.blink::Member.442"* %41 to i64*
  store atomic i64 0, i64* %42 monotonic, align 8
  br label %43

43:                                               ; preds = %39, %20, %20
  %44 = add nuw nsw i64 %21, 1
  %45 = icmp eq i64 %44, %19
  br i1 %45, label %46, label %20

46:                                               ; preds = %43, %14
  %47 = bitcast %"struct.WTF::KeyValuePair.441"* %12 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %47) #13
  %48 = bitcast %"class.WTF::HashMap.438"* %10 to i64*
  store atomic i64 0, i64* %48 monotonic, align 8
  store i32 0, i32* %15, align 8
  %49 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  store i32 0, i32* %49, align 4
  br label %50

50:                                               ; preds = %9, %46
  %51 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 5, i32 0
  %52 = getelementptr inbounds %"class.WTF::HashMap.438", %"class.WTF::HashMap.438"* %51, i64 0, i32 0, i32 0
  %53 = load %"struct.WTF::KeyValuePair.441"*, %"struct.WTF::KeyValuePair.441"** %52, align 8
  %54 = icmp eq %"struct.WTF::KeyValuePair.441"* %53, null
  br i1 %54, label %91, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %87, label %59

59:                                               ; preds = %55
  %60 = zext i32 %57 to i64
  br label %61

61:                                               ; preds = %84, %59
  %62 = phi i64 [ 0, %59 ], [ %85, %84 ]
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %53, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = ptrtoint %"class.WTF::StringImpl"* %65 to i64
  switch i64 %66, label %67 [
    i64 -1, label %84
    i64 0, label %84
  ]

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #13
  br label %80

80:                                               ; preds = %79, %76
  %81 = bitcast %"struct.WTF::KeyValuePair.441"* %63 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %81, align 8
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %53, i64 %62, i32 1
  %83 = bitcast %"class.blink::Member.442"* %82 to i64*
  store atomic i64 0, i64* %83 monotonic, align 8
  br label %84

84:                                               ; preds = %80, %61, %61
  %85 = add nuw nsw i64 %62, 1
  %86 = icmp eq i64 %85, %60
  br i1 %86, label %87, label %61

87:                                               ; preds = %84, %55
  %88 = bitcast %"struct.WTF::KeyValuePair.441"* %53 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %88) #13
  %89 = bitcast %"class.WTF::HashMap.438"* %51 to i64*
  store atomic i64 0, i64* %89 monotonic, align 8
  store i32 0, i32* %56, align 8
  %90 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  store i32 0, i32* %90, align 4
  br label %91

91:                                               ; preds = %50, %87
  %92 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 8
  %93 = getelementptr inbounds %"class.WTF::HashSet.580", %"class.WTF::HashSet.580"* %92, i64 0, i32 0, i32 0
  %94 = load %"class.WTF::String"*, %"class.WTF::String"** %93, align 8
  %95 = icmp eq %"class.WTF::String"* %94, null
  br i1 %95, label %130, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 8, i32 0, i32 1
  %98 = load i32, i32* %97, align 8
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %126, label %100

100:                                              ; preds = %96
  %101 = zext i32 %98 to i64
  br label %102

102:                                              ; preds = %123, %100
  %103 = phi i64 [ 0, %100 ], [ %124, %123 ]
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %94, i64 %103
  %105 = bitcast %"class.WTF::String"* %104 to i8**
  %106 = load i8*, i8** %105, align 8
  %107 = bitcast i8* %106 to %"class.WTF::StringImpl"*
  %108 = ptrtoint i8* %106 to i64
  switch i64 %108, label %109 [
    i64 -1, label %123
    i64 0, label %123
  ]

109:                                              ; preds = %102
  %110 = getelementptr inbounds i8, i8* %106, i64 8
  %111 = bitcast i8* %110 to i32*
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = bitcast i8* %106 to i32*
  %116 = load i32, i32* %115, align 4
  br i1 %114, label %117, label %119

117:                                              ; preds = %109
  %118 = add i32 %116, -1
  store i32 %118, i32* %115, align 4
  br label %119

119:                                              ; preds = %117, %109
  %120 = phi i32 [ %118, %117 ], [ %116, %109 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %107) #13
  br label %123

123:                                              ; preds = %122, %119, %102, %102
  %124 = add nuw nsw i64 %103, 1
  %125 = icmp eq i64 %124, %101
  br i1 %125, label %126, label %102

126:                                              ; preds = %123, %96
  %127 = bitcast %"class.WTF::String"* %94 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %127) #13
  %128 = bitcast %"class.WTF::HashSet.580"* %92 to i64*
  store atomic i64 0, i64* %128 monotonic, align 8
  store i32 0, i32* %97, align 8
  %129 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 8, i32 0, i32 2
  store i32 0, i32* %129, align 4
  br label %130

130:                                              ; preds = %126, %91, %2
  %131 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 10, i32 2
  %132 = load double, double* %131, align 8
  call void @_ZN5blink23InspectorAnimationAgent15setPlaybackRateEd(%"class.crdtp::DispatchResponse"* nonnull sret %3, %"class.blink::InspectorAnimationAgent"* %0, double %132)
  %133 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %3, i64 0, i32 1
  %134 = bitcast %"class.std::__1::basic_string"* %133 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %135 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %134, i64 0, i32 1, i32 0
  %136 = load i8, i8* %135, align 1
  %137 = icmp slt i8 %136, 0
  br i1 %137, label %138, label %141

138:                                              ; preds = %130
  %139 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %133, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load i8*, i8** %139, align 8
  call void @_ZdlPv(i8* %140) #15
  br label %141

141:                                              ; preds = %130, %138
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::protocol::Animation::Animation"* @_ZN5blink23InspectorAnimationAgent23BuildObjectForAnimationERNS_9AnimationE(%"class.blink::InspectorAnimationAgent"*, %"class.blink::Animation"* dereferenceable(368)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %6 = alloca %"class.WTF::StringAppend", align 8
  %7 = alloca %"class.WTF::Vector.2402", align 8
  %8 = alloca %"class.std::__1::unique_ptr.2029", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.blink::Animation"*, align 8
  %14 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %15, align 8
  %16 = load i8*, i8** @_ZN5blink8protocol9Animation9Animation8TypeEnum12WebAnimationE, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %2
  %19 = tail call i64 @strlen(i8* nonnull %16) #14
  br label %20

20:                                               ; preds = %2, %18
  %21 = phi i64 [ %19, %18 ], [ 0, %2 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* %16, i64 %21) #13
  %22 = getelementptr inbounds %"class.blink::Animation", %"class.blink::Animation"* %1, i64 0, i32 23, i32 0, i32 0
  %23 = load %"class.blink::AnimationEffect"*, %"class.blink::AnimationEffect"** %22, align 8
  %24 = icmp eq %"class.blink::AnimationEffect"* %23, null
  br i1 %24, label %518, label %25

25:                                               ; preds = %20
  %26 = call %"class.blink::ComputedEffectTiming"* @_ZNK5blink15AnimationEffect17getComputedTimingEv(%"class.blink::AnimationEffect"* nonnull %23) #13
  %27 = getelementptr inbounds %"class.blink::ComputedEffectTiming", %"class.blink::ComputedEffectTiming"* %26, i64 0, i32 0, i32 5
  %28 = bitcast double* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedEffectTiming", %"class.blink::ComputedEffectTiming"* %26, i64 0, i32 0, i32 7
  %31 = call double @_ZNK5blink26UnrestrictedDoubleOrString23GetAsUnrestrictedDoubleEv(%"class.blink::UnrestrictedDoubleOrString"* %30) #13
  %32 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %23, i64 0, i32 2, i32 9, i32 0
  %33 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %32, align 8
  %34 = bitcast %"class.blink::TimingFunction"* %33 to %"class.WTF::StringImpl"* (%"class.blink::TimingFunction"*)***
  %35 = load %"class.WTF::StringImpl"* (%"class.blink::TimingFunction"*)**, %"class.WTF::StringImpl"* (%"class.blink::TimingFunction"*)*** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::TimingFunction"*)*, %"class.WTF::StringImpl"* (%"class.blink::TimingFunction"*)** %35, i64 2
  %37 = load %"class.WTF::StringImpl"* (%"class.blink::TimingFunction"*)*, %"class.WTF::StringImpl"* (%"class.blink::TimingFunction"*)** %36, align 8
  %38 = call %"class.WTF::StringImpl"* %37(%"class.blink::TimingFunction"* %33) #13
  %39 = call i8* @_Znwm(i64 88) #15
  %40 = bitcast i8* %39 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol9Animation15AnimationEffectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = getelementptr inbounds i8, i8* %39, i64 68
  %42 = getelementptr inbounds i8, i8* %39, i64 8
  %43 = getelementptr inbounds i8, i8* %39, i64 48
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 17, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 4 %41, i8 0, i64 20, i1 false) #13
  %44 = bitcast i8* %42 to i64*
  store i64 %29, i64* %44, align 8
  %45 = getelementptr inbounds %"class.blink::ComputedEffectTiming", %"class.blink::ComputedEffectTiming"* %26, i64 0, i32 0, i32 9
  %46 = bitcast double* %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds i8, i8* %39, i64 16
  %49 = bitcast i8* %48 to i64*
  store i64 %47, i64* %49, align 8
  %50 = getelementptr inbounds %"class.blink::ComputedEffectTiming", %"class.blink::ComputedEffectTiming"* %26, i64 0, i32 0, i32 11
  %51 = bitcast double* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds i8, i8* %39, i64 24
  %54 = bitcast i8* %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = getelementptr inbounds %"class.blink::ComputedEffectTiming", %"class.blink::ComputedEffectTiming"* %26, i64 0, i32 0, i32 12
  %56 = bitcast double* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds i8, i8* %39, i64 32
  %59 = bitcast i8* %58 to i64*
  store i64 %57, i64* %59, align 8
  %60 = getelementptr inbounds i8, i8* %39, i64 40
  %61 = bitcast i8* %60 to double*
  store double %31, double* %61, align 8
  %62 = getelementptr inbounds %"class.blink::ComputedEffectTiming", %"class.blink::ComputedEffectTiming"* %26, i64 0, i32 0, i32 6, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %82, label %65

65:                                               ; preds = %25
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %82

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = zext i32 %72 to i33
  %74 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %73, i33 1) #13
  %75 = extractvalue { i33, i1 } %74, 1
  %76 = extractvalue { i33, i1 } %74, 0
  %77 = icmp slt i33 %76, 0
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %80, !prof !3

79:                                               ; preds = %70
  call void @llvm.trap() #13
  unreachable

80:                                               ; preds = %70
  %81 = trunc i33 %76 to i32
  store i32 %81, i32* %71, align 4
  br label %82

82:                                               ; preds = %80, %65, %25
  %83 = ptrtoint %"class.WTF::StringImpl"* %63 to i64
  %84 = bitcast i8* %43 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds i8, i8* %39, i64 56
  %86 = getelementptr inbounds %"class.blink::ComputedEffectTiming", %"class.blink::ComputedEffectTiming"* %26, i64 0, i32 0, i32 10, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %106, label %89

89:                                               ; preds = %82
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %106

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = zext i32 %96 to i33
  %98 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %97, i33 1) #13
  %99 = extractvalue { i33, i1 } %98, 1
  %100 = extractvalue { i33, i1 } %98, 0
  %101 = icmp slt i33 %100, 0
  %102 = or i1 %99, %101
  br i1 %102, label %103, label %104, !prof !3

103:                                              ; preds = %94
  call void @llvm.trap() #13
  unreachable

104:                                              ; preds = %94
  %105 = trunc i33 %100 to i32
  store i32 %105, i32* %95, align 4
  br label %106

106:                                              ; preds = %104, %89, %82
  %107 = ptrtoint %"class.WTF::StringImpl"* %87 to i64
  %108 = bitcast i8* %85 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds i8, i8* %39, i64 80
  %110 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %110, label %128, label %111

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %128

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = zext i32 %118 to i33
  %120 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %119, i33 1) #13
  %121 = extractvalue { i33, i1 } %120, 1
  %122 = extractvalue { i33, i1 } %120, 0
  %123 = icmp slt i33 %122, 0
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126, !prof !3

125:                                              ; preds = %116
  call void @llvm.trap() #13
  unreachable

126:                                              ; preds = %116
  %127 = trunc i33 %122 to i32
  store i32 %127, i32* %117, align 4
  br label %128

128:                                              ; preds = %126, %111, %106
  %129 = ptrtoint %"class.WTF::StringImpl"* %38 to i64
  %130 = bitcast i8* %109 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %23, i64 1
  %132 = bitcast %"class.blink::AnimationEffect"* %131 to %"class.blink::Element"**
  %133 = load %"class.blink::Element"*, %"class.blink::Element"** %132, align 8
  %134 = icmp eq %"class.blink::Element"* %133, null
  br i1 %134, label %140, label %135

135:                                              ; preds = %128
  %136 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %133, i64 0, i32 0, i32 0
  %137 = call i32 @_ZN5blink18IdentifiersFactory12IntIdForNodeEPNS_4NodeE(%"class.blink::Node"* %136) #13
  %138 = bitcast i8* %41 to i32*
  store i32 %137, i32* %138, align 4
  %139 = getelementptr inbounds i8, i8* %39, i64 64
  store i8 1, i8* %139, align 4
  br label %140

140:                                              ; preds = %135, %128
  br i1 %110, label %154, label %141

141:                                              ; preds = %140
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #13
  br label %154

154:                                              ; preds = %140, %150, %153
  %155 = ptrtoint i8* %39 to i64
  %156 = bitcast %"class.blink::Animation"* %1 to i1 (%"class.blink::Animation"*)***
  %157 = load i1 (%"class.blink::Animation"*)**, i1 (%"class.blink::Animation"*)*** %156, align 8
  %158 = getelementptr inbounds i1 (%"class.blink::Animation"*)*, i1 (%"class.blink::Animation"*)** %157, i64 28
  %159 = load i1 (%"class.blink::Animation"*)*, i1 (%"class.blink::Animation"*)** %158, align 8
  %160 = call zeroext i1 %159(%"class.blink::Animation"* %1) #13
  br i1 %160, label %161, label %205

161:                                              ; preds = %154
  %162 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %162) #13
  %163 = load i8*, i8** @_ZN5blink8protocol9Animation9Animation8TypeEnum13CSSTransitionE, align 8
  %164 = icmp eq i8* %163, null
  br i1 %164, label %167, label %165

165:                                              ; preds = %161
  %166 = call i64 @strlen(i8* nonnull %163) #14
  br label %167

167:                                              ; preds = %161, %165
  %168 = phi i64 [ %166, %165 ], [ 0, %161 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* %163, i64 %168) #13
  %169 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %170 = bitcast %"class.WTF::String"* %10 to i64*
  %171 = load i64, i64* %170, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %169, align 8
  %172 = bitcast %"class.WTF::String"* %9 to i64*
  %173 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  store i64 %171, i64* %172, align 8
  %174 = icmp eq %"class.WTF::StringImpl"* %173, null
  br i1 %174, label %204, label %175

175:                                              ; preds = %167
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %173, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = load atomic i32, i32* %176 monotonic, align 4
  %178 = and i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %173, i64 0, i32 0
  %181 = load i32, i32* %180, align 4
  br i1 %179, label %182, label %184

182:                                              ; preds = %175
  %183 = add i32 %181, -1
  store i32 %183, i32* %180, align 4
  br label %184

184:                                              ; preds = %182, %175
  %185 = phi i32 [ %183, %182 ], [ %181, %175 ]
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %188

187:                                              ; preds = %184
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %173) #13
  br label %188

188:                                              ; preds = %184, %187
  %189 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %169, align 8
  %190 = icmp eq %"class.WTF::StringImpl"* %189, null
  br i1 %190, label %204, label %191

191:                                              ; preds = %188
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = load atomic i32, i32* %192 monotonic, align 4
  %194 = and i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 0, i32 0
  %197 = load i32, i32* %196, align 4
  br i1 %195, label %198, label %200

198:                                              ; preds = %191
  %199 = add i32 %197, -1
  store i32 %199, i32* %196, align 4
  br label %200

200:                                              ; preds = %198, %191
  %201 = phi i32 [ %199, %198 ], [ %197, %191 ]
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %204

203:                                              ; preds = %200
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %189) #13
  br label %204

204:                                              ; preds = %167, %188, %200, %203
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %162) #13
  br label %518

205:                                              ; preds = %154
  %206 = bitcast %"class.blink::AnimationEffect"** %22 to %"class.blink::KeyframeEffect"**
  %207 = load %"class.blink::KeyframeEffect"*, %"class.blink::KeyframeEffect"** %206, align 8
  %208 = icmp eq %"class.blink::KeyframeEffect"* %207, null
  br i1 %208, label %456, label %209

209:                                              ; preds = %205
  %210 = getelementptr inbounds %"class.blink::KeyframeEffect", %"class.blink::KeyframeEffect"* %207, i64 0, i32 4, i32 0, i32 0
  %211 = load %"class.blink::KeyframeEffectModelBase"*, %"class.blink::KeyframeEffectModelBase"** %210, align 8
  %212 = icmp eq %"class.blink::KeyframeEffectModelBase"* %211, null
  br i1 %212, label %456, label %213

213:                                              ; preds = %209
  %214 = bitcast %"class.blink::KeyframeEffectModelBase"* %211 to i1 (%"class.blink::KeyframeEffectModelBase"*)***
  %215 = load i1 (%"class.blink::KeyframeEffectModelBase"*)**, i1 (%"class.blink::KeyframeEffectModelBase"*)*** %214, align 8
  %216 = getelementptr inbounds i1 (%"class.blink::KeyframeEffectModelBase"*)*, i1 (%"class.blink::KeyframeEffectModelBase"*)** %215, i64 6
  %217 = load i1 (%"class.blink::KeyframeEffectModelBase"*)*, i1 (%"class.blink::KeyframeEffectModelBase"*)** %216, align 8
  %218 = call zeroext i1 %217(%"class.blink::KeyframeEffectModelBase"* nonnull %211) #13
  br i1 %218, label %219, label %456

219:                                              ; preds = %213
  %220 = load %"class.blink::KeyframeEffectModelBase"*, %"class.blink::KeyframeEffectModelBase"** %210, align 8
  %221 = bitcast %"class.WTF::Vector.2402"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %221) #13
  %222 = getelementptr inbounds %"class.WTF::Vector.2402", %"class.WTF::Vector.2402"* %7, i64 0, i32 0, i32 0, i32 0
  %223 = getelementptr inbounds %"class.WTF::Vector.2402", %"class.WTF::Vector.2402"* %7, i64 0, i32 0, i32 0, i32 2
  %224 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %220, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %221, i8 -86, i64 16, i1 false) #13
  call void @_ZN5blink23KeyframeEffectModelBase18GetComputedOffsetsINS_6MemberINS_8KeyframeEEEEEN3WTF6VectorIdLj0ENS5_18PartitionAllocatorEEERKNS_10HeapVectorIT_Lj0EEE(%"class.WTF::Vector.2402"* nonnull sret %7, %"class.blink::HeapVector.2059"* dereferenceable(16) %224) #13
  %225 = call i8* @_Znwm(i64 24) #15
  %226 = bitcast i8* %225 to %"class.std::__1::vector.2027"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %225, i8 0, i64 24, i1 false) #13
  %227 = ptrtoint i8* %225 to i64
  %228 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %220, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %229 = load i32, i32* %228, align 4
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %244, label %231

231:                                              ; preds = %219
  %232 = getelementptr inbounds %"class.blink::HeapVector.2059", %"class.blink::HeapVector.2059"* %224, i64 0, i32 0
  %233 = bitcast %"class.std::__1::unique_ptr.2029"* %8 to i8*
  %234 = bitcast %"class.WTF::StringAppend"* %6 to i8*
  %235 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0, i32 0, i32 0
  %236 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 1
  %237 = getelementptr inbounds %"class.std::__1::unique_ptr.2029", %"class.std::__1::unique_ptr.2029"* %8, i64 0, i32 0, i32 0, i32 0
  %238 = bitcast %"class.std::__1::unique_ptr.2029"* %8 to i8**
  %239 = getelementptr inbounds i8, i8* %225, i64 8
  %240 = bitcast i8* %239 to %"class.std::__1::unique_ptr.2029"**
  %241 = getelementptr inbounds i8, i8* %225, i64 16
  %242 = bitcast i8* %241 to %"class.std::__1::unique_ptr.2029"**
  %243 = bitcast i8* %239 to i64*
  br label %262

244:                                              ; preds = %452, %219
  %245 = call i8* @_Znwm(i64 32) #15
  %246 = bitcast i8* %245 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol9Animation13KeyframesRuleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %246, align 8
  %247 = getelementptr inbounds i8, i8* %245, i64 8
  store i8 0, i8* %247, align 8
  %248 = getelementptr inbounds i8, i8* %245, i64 16
  %249 = bitcast i8* %248 to i64*
  store i64 0, i64* %249, align 8
  %250 = bitcast i8* %245 to %"class.blink::protocol::Animation::KeyframesRule"*
  %251 = getelementptr inbounds i8, i8* %245, i64 24
  %252 = bitcast i8* %251 to i64*
  store i64 %227, i64* %252, align 8
  %253 = load double*, double** %222, align 8
  %254 = bitcast double* %253 to i8*
  %255 = icmp eq double* %253, null
  br i1 %255, label %261, label %256, !prof !4

256:                                              ; preds = %244
  %257 = load i32, i32* %223, align 4
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %260, label %259, !prof !3

259:                                              ; preds = %256
  store i32 0, i32* %223, align 4
  br label %260

260:                                              ; preds = %259, %256
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %254) #13
  store double* null, double** %222, align 8
  br label %261

261:                                              ; preds = %260, %244
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %221) #13
  br label %456

262:                                              ; preds = %452, %231
  %263 = phi i32 [ 0, %231 ], [ %453, %452 ]
  %264 = call dereferenceable(8) %"class.blink::Member.2065"* @_ZNK3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2062"* %232, i32 %263) #13
  %265 = getelementptr inbounds %"class.blink::Member.2065", %"class.blink::Member.2065"* %264, i64 0, i32 0, i32 0
  %266 = load %"class.blink::Keyframe"*, %"class.blink::Keyframe"** %265, align 8
  %267 = bitcast %"class.blink::Keyframe"* %266 to i1 (%"class.blink::Keyframe"*)***
  %268 = load i1 (%"class.blink::Keyframe"*)**, i1 (%"class.blink::Keyframe"*)*** %267, align 8
  %269 = getelementptr inbounds i1 (%"class.blink::Keyframe"*)*, i1 (%"class.blink::Keyframe"*)** %268, i64 5
  %270 = load i1 (%"class.blink::Keyframe"*)*, i1 (%"class.blink::Keyframe"*)** %269, align 8
  %271 = call zeroext i1 %270(%"class.blink::Keyframe"* %266) #13
  br i1 %271, label %272, label %452

272:                                              ; preds = %262
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %233) #13
  %273 = call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2402"* nonnull %7, i32 %263) #13
  %274 = load double, double* %273, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %234) #13
  %275 = fmul double %274, 1.000000e+02
  %276 = call %"class.WTF::StringImpl"* @_ZN3WTF6String24NumberToStringECMAScriptEd(double %275) #13
  %277 = icmp eq %"class.WTF::StringImpl"* %276, null
  br i1 %277, label %321, label %278

278:                                              ; preds = %272
  %279 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %276, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %280 = load atomic i32, i32* %279 monotonic, align 4
  %281 = and i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %276, i64 0, i32 0
  %284 = load i32, i32* %283, align 4
  br i1 %282, label %285, label %295

285:                                              ; preds = %278
  %286 = zext i32 %284 to i33
  %287 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %286, i33 1) #13
  %288 = extractvalue { i33, i1 } %287, 1
  %289 = extractvalue { i33, i1 } %287, 0
  %290 = icmp slt i33 %289, 0
  %291 = or i1 %288, %290
  br i1 %291, label %292, label %293, !prof !3

292:                                              ; preds = %285
  call void @llvm.trap() #13
  unreachable

293:                                              ; preds = %285
  %294 = trunc i33 %289 to i32
  store i32 %294, i32* %283, align 4
  br label %295

295:                                              ; preds = %293, %278
  %296 = phi i32 [ %294, %293 ], [ %284, %278 ]
  %297 = load atomic i32, i32* %279 monotonic, align 4
  %298 = and i32 %297, 2
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %300, label %310

300:                                              ; preds = %295
  %301 = zext i32 %296 to i33
  %302 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %301, i33 1) #13
  %303 = extractvalue { i33, i1 } %302, 1
  %304 = extractvalue { i33, i1 } %302, 0
  %305 = icmp slt i33 %304, 0
  %306 = or i1 %303, %305
  br i1 %306, label %307, label %308, !prof !3

307:                                              ; preds = %300
  call void @llvm.trap() #13
  unreachable

308:                                              ; preds = %300
  %309 = trunc i33 %304 to i32
  store i32 %309, i32* %283, align 4
  br label %310

310:                                              ; preds = %308, %295
  %311 = phi i32 [ %309, %308 ], [ %296, %295 ]
  %312 = load atomic i32, i32* %279 monotonic, align 4
  %313 = and i32 %312, 2
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %317

315:                                              ; preds = %310
  %316 = add i32 %311, -1
  store i32 %316, i32* %283, align 4
  br label %317

317:                                              ; preds = %315, %310
  %318 = phi i32 [ %316, %315 ], [ %311, %310 ]
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %320, label %321

320:                                              ; preds = %317
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %276) #13
  br label %321

321:                                              ; preds = %320, %317, %272
  store %"class.WTF::StringImpl"* %276, %"class.WTF::StringImpl"** %235, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i8** %236, align 8
  %322 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"* nonnull %6) #13
  %323 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %235, align 8
  %324 = icmp eq %"class.WTF::StringImpl"* %323, null
  br i1 %324, label %338, label %325

325:                                              ; preds = %321
  %326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %323, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %327 = load atomic i32, i32* %326 monotonic, align 4
  %328 = and i32 %327, 2
  %329 = icmp eq i32 %328, 0
  %330 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %323, i64 0, i32 0
  %331 = load i32, i32* %330, align 4
  br i1 %329, label %332, label %334

332:                                              ; preds = %325
  %333 = add i32 %331, -1
  store i32 %333, i32* %330, align 4
  br label %334

334:                                              ; preds = %332, %325
  %335 = phi i32 [ %333, %332 ], [ %331, %325 ]
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %337, label %338

337:                                              ; preds = %334
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %323) #13
  br label %338

338:                                              ; preds = %337, %334, %321
  br i1 %277, label %352, label %339

339:                                              ; preds = %338
  %340 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %276, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %341 = load atomic i32, i32* %340 monotonic, align 4
  %342 = and i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %276, i64 0, i32 0
  %345 = load i32, i32* %344, align 4
  br i1 %343, label %346, label %348

346:                                              ; preds = %339
  %347 = add i32 %345, -1
  store i32 %347, i32* %344, align 4
  br label %348

348:                                              ; preds = %346, %339
  %349 = phi i32 [ %347, %346 ], [ %345, %339 ]
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %351, label %352

351:                                              ; preds = %348
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %276) #13
  br label %352

352:                                              ; preds = %351, %348, %338
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %234) #13
  %353 = call i8* @_Znwm(i64 24) #15
  %354 = bitcast i8* %353 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol9Animation13KeyframeStyleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %354, align 8
  %355 = getelementptr inbounds i8, i8* %353, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %355, i8 0, i64 16, i1 false) #13
  %356 = icmp eq %"class.WTF::StringImpl"* %322, null
  br i1 %356, label %374, label %357

357:                                              ; preds = %352
  %358 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %322, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %359 = load atomic i32, i32* %358 monotonic, align 4
  %360 = and i32 %359, 2
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %362, label %374

362:                                              ; preds = %357
  %363 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %322, i64 0, i32 0
  %364 = load i32, i32* %363, align 4
  %365 = zext i32 %364 to i33
  %366 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %365, i33 1) #13
  %367 = extractvalue { i33, i1 } %366, 1
  %368 = extractvalue { i33, i1 } %366, 0
  %369 = icmp slt i33 %368, 0
  %370 = or i1 %367, %369
  br i1 %370, label %371, label %372, !prof !3

371:                                              ; preds = %362
  call void @llvm.trap() #13
  unreachable

372:                                              ; preds = %362
  %373 = trunc i33 %368 to i32
  store i32 %373, i32* %363, align 4
  br label %374

374:                                              ; preds = %372, %357, %352
  %375 = ptrtoint %"class.WTF::StringImpl"* %322 to i64
  %376 = bitcast i8* %355 to i64*
  store i64 %375, i64* %376, align 8
  %377 = getelementptr inbounds %"class.blink::Keyframe", %"class.blink::Keyframe"* %266, i64 0, i32 3, i32 0
  %378 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %377, align 8
  %379 = bitcast %"class.blink::TimingFunction"* %378 to %"class.WTF::StringImpl"* (%"class.blink::TimingFunction"*)***
  %380 = load %"class.WTF::StringImpl"* (%"class.blink::TimingFunction"*)**, %"class.WTF::StringImpl"* (%"class.blink::TimingFunction"*)*** %379, align 8
  %381 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::TimingFunction"*)*, %"class.WTF::StringImpl"* (%"class.blink::TimingFunction"*)** %380, i64 2
  %382 = load %"class.WTF::StringImpl"* (%"class.blink::TimingFunction"*)*, %"class.WTF::StringImpl"* (%"class.blink::TimingFunction"*)** %381, align 8
  %383 = call %"class.WTF::StringImpl"* %382(%"class.blink::TimingFunction"* %378) #13
  %384 = getelementptr inbounds i8, i8* %353, i64 16
  %385 = icmp eq %"class.WTF::StringImpl"* %383, null
  br i1 %385, label %403, label %386

386:                                              ; preds = %374
  %387 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %383, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %388 = load atomic i32, i32* %387 monotonic, align 4
  %389 = and i32 %388, 2
  %390 = icmp eq i32 %389, 0
  br i1 %390, label %391, label %405

391:                                              ; preds = %386
  %392 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %383, i64 0, i32 0
  %393 = load i32, i32* %392, align 4
  %394 = zext i32 %393 to i33
  %395 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %394, i33 1) #13
  %396 = extractvalue { i33, i1 } %395, 1
  %397 = extractvalue { i33, i1 } %395, 0
  %398 = icmp slt i33 %397, 0
  %399 = or i1 %396, %398
  br i1 %399, label %400, label %401, !prof !3

400:                                              ; preds = %391
  call void @llvm.trap() #13
  unreachable

401:                                              ; preds = %391
  %402 = trunc i33 %397 to i32
  store i32 %402, i32* %392, align 4
  br label %405

403:                                              ; preds = %374
  %404 = bitcast i8* %384 to i64*
  store i64 0, i64* %404, align 8
  br label %419

405:                                              ; preds = %401, %386
  %406 = ptrtoint %"class.WTF::StringImpl"* %383 to i64
  %407 = bitcast i8* %384 to i64*
  store i64 %406, i64* %407, align 8
  %408 = load atomic i32, i32* %387 monotonic, align 4
  %409 = and i32 %408, 2
  %410 = icmp eq i32 %409, 0
  %411 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %383, i64 0, i32 0
  %412 = load i32, i32* %411, align 4
  br i1 %410, label %413, label %415

413:                                              ; preds = %405
  %414 = add i32 %412, -1
  store i32 %414, i32* %411, align 4
  br label %415

415:                                              ; preds = %413, %405
  %416 = phi i32 [ %414, %413 ], [ %412, %405 ]
  %417 = icmp eq i32 %416, 0
  br i1 %417, label %418, label %419

418:                                              ; preds = %415
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %383) #13
  br label %419

419:                                              ; preds = %418, %415, %403
  br i1 %356, label %433, label %420

420:                                              ; preds = %419
  %421 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %322, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %422 = load atomic i32, i32* %421 monotonic, align 4
  %423 = and i32 %422, 2
  %424 = icmp eq i32 %423, 0
  %425 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %322, i64 0, i32 0
  %426 = load i32, i32* %425, align 4
  br i1 %424, label %427, label %429

427:                                              ; preds = %420
  %428 = add i32 %426, -1
  store i32 %428, i32* %425, align 4
  br label %429

429:                                              ; preds = %427, %420
  %430 = phi i32 [ %428, %427 ], [ %426, %420 ]
  %431 = icmp eq i32 %430, 0
  br i1 %431, label %432, label %433

432:                                              ; preds = %429
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %322) #13
  br label %433

433:                                              ; preds = %432, %429, %419
  store i8* %353, i8** %238, align 8
  %434 = load %"class.std::__1::unique_ptr.2029"*, %"class.std::__1::unique_ptr.2029"** %240, align 8
  %435 = load %"class.std::__1::unique_ptr.2029"*, %"class.std::__1::unique_ptr.2029"** %242, align 8
  %436 = icmp ult %"class.std::__1::unique_ptr.2029"* %434, %435
  br i1 %436, label %437, label %442

437:                                              ; preds = %433
  %438 = ptrtoint i8* %353 to i64
  store %"class.blink::protocol::Animation::KeyframeStyle"* null, %"class.blink::protocol::Animation::KeyframeStyle"** %237, align 8
  %439 = bitcast %"class.std::__1::unique_ptr.2029"* %434 to i64*
  store i64 %438, i64* %439, align 8
  %440 = getelementptr inbounds %"class.std::__1::unique_ptr.2029", %"class.std::__1::unique_ptr.2029"* %434, i64 1
  %441 = ptrtoint %"class.std::__1::unique_ptr.2029"* %440 to i64
  store i64 %441, i64* %243, align 8
  br label %443

442:                                              ; preds = %433
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol9Animation13KeyframeStyleENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2027"* nonnull %226, %"class.std::__1::unique_ptr.2029"* nonnull dereferenceable(8) %8) #13
  br label %443

443:                                              ; preds = %442, %437
  %444 = load %"class.blink::protocol::Animation::KeyframeStyle"*, %"class.blink::protocol::Animation::KeyframeStyle"** %237, align 8
  store %"class.blink::protocol::Animation::KeyframeStyle"* null, %"class.blink::protocol::Animation::KeyframeStyle"** %237, align 8
  %445 = icmp eq %"class.blink::protocol::Animation::KeyframeStyle"* %444, null
  br i1 %445, label %451, label %446

446:                                              ; preds = %443
  %447 = bitcast %"class.blink::protocol::Animation::KeyframeStyle"* %444 to void (%"class.blink::protocol::Animation::KeyframeStyle"*)***
  %448 = load void (%"class.blink::protocol::Animation::KeyframeStyle"*)**, void (%"class.blink::protocol::Animation::KeyframeStyle"*)*** %447, align 8
  %449 = getelementptr inbounds void (%"class.blink::protocol::Animation::KeyframeStyle"*)*, void (%"class.blink::protocol::Animation::KeyframeStyle"*)** %448, i64 2
  %450 = load void (%"class.blink::protocol::Animation::KeyframeStyle"*)*, void (%"class.blink::protocol::Animation::KeyframeStyle"*)** %449, align 8
  call void %450(%"class.blink::protocol::Animation::KeyframeStyle"* nonnull %444) #13
  br label %451

451:                                              ; preds = %446, %443
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %233) #13
  br label %452

452:                                              ; preds = %451, %262
  %453 = add nuw i32 %263, 1
  %454 = load i32, i32* %228, align 4
  %455 = icmp ult i32 %453, %454
  br i1 %455, label %262, label %244

456:                                              ; preds = %205, %209, %213, %261
  %457 = phi %"class.blink::protocol::Animation::KeyframesRule"* [ %250, %261 ], [ null, %209 ], [ null, %205 ], [ null, %213 ]
  %458 = ptrtoint %"class.blink::protocol::Animation::KeyframesRule"* %457 to i64
  %459 = getelementptr inbounds i8, i8* %39, i64 72
  %460 = bitcast i8* %459 to %"class.blink::protocol::Animation::KeyframesRule"**
  %461 = load %"class.blink::protocol::Animation::KeyframesRule"*, %"class.blink::protocol::Animation::KeyframesRule"** %460, align 8
  %462 = bitcast i8* %459 to i64*
  store i64 %458, i64* %462, align 8
  %463 = icmp eq %"class.blink::protocol::Animation::KeyframesRule"* %461, null
  br i1 %463, label %469, label %464

464:                                              ; preds = %456
  %465 = bitcast %"class.blink::protocol::Animation::KeyframesRule"* %461 to void (%"class.blink::protocol::Animation::KeyframesRule"*)***
  %466 = load void (%"class.blink::protocol::Animation::KeyframesRule"*)**, void (%"class.blink::protocol::Animation::KeyframesRule"*)*** %465, align 8
  %467 = getelementptr inbounds void (%"class.blink::protocol::Animation::KeyframesRule"*)*, void (%"class.blink::protocol::Animation::KeyframesRule"*)** %466, i64 2
  %468 = load void (%"class.blink::protocol::Animation::KeyframesRule"*)*, void (%"class.blink::protocol::Animation::KeyframesRule"*)** %467, align 8
  call void %468(%"class.blink::protocol::Animation::KeyframesRule"* nonnull %461) #13
  br label %469

469:                                              ; preds = %456, %464
  %470 = load i1 (%"class.blink::Animation"*)**, i1 (%"class.blink::Animation"*)*** %156, align 8
  %471 = getelementptr inbounds i1 (%"class.blink::Animation"*)*, i1 (%"class.blink::Animation"*)** %470, i64 27
  %472 = load i1 (%"class.blink::Animation"*)*, i1 (%"class.blink::Animation"*)** %471, align 8
  %473 = call zeroext i1 %472(%"class.blink::Animation"* %1) #13
  br i1 %473, label %474, label %518

474:                                              ; preds = %469
  %475 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %475) #13
  %476 = load i8*, i8** @_ZN5blink8protocol9Animation9Animation8TypeEnum12CSSAnimationE, align 8
  %477 = icmp eq i8* %476, null
  br i1 %477, label %480, label %478

478:                                              ; preds = %474
  %479 = call i64 @strlen(i8* nonnull %476) #14
  br label %480

480:                                              ; preds = %474, %478
  %481 = phi i64 [ %479, %478 ], [ 0, %474 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %11, i8* %476, i64 %481) #13
  %482 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %483 = bitcast %"class.WTF::String"* %11 to i64*
  %484 = load i64, i64* %483, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %482, align 8
  %485 = bitcast %"class.WTF::String"* %9 to i64*
  %486 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  store i64 %484, i64* %485, align 8
  %487 = icmp eq %"class.WTF::StringImpl"* %486, null
  br i1 %487, label %517, label %488

488:                                              ; preds = %480
  %489 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %486, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %490 = load atomic i32, i32* %489 monotonic, align 4
  %491 = and i32 %490, 2
  %492 = icmp eq i32 %491, 0
  %493 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %486, i64 0, i32 0
  %494 = load i32, i32* %493, align 4
  br i1 %492, label %495, label %497

495:                                              ; preds = %488
  %496 = add i32 %494, -1
  store i32 %496, i32* %493, align 4
  br label %497

497:                                              ; preds = %495, %488
  %498 = phi i32 [ %496, %495 ], [ %494, %488 ]
  %499 = icmp eq i32 %498, 0
  br i1 %499, label %500, label %501

500:                                              ; preds = %497
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %486) #13
  br label %501

501:                                              ; preds = %497, %500
  %502 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %482, align 8
  %503 = icmp eq %"class.WTF::StringImpl"* %502, null
  br i1 %503, label %517, label %504

504:                                              ; preds = %501
  %505 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %502, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %506 = load atomic i32, i32* %505 monotonic, align 4
  %507 = and i32 %506, 2
  %508 = icmp eq i32 %507, 0
  %509 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %502, i64 0, i32 0
  %510 = load i32, i32* %509, align 4
  br i1 %508, label %511, label %513

511:                                              ; preds = %504
  %512 = add i32 %510, -1
  store i32 %512, i32* %509, align 4
  br label %513

513:                                              ; preds = %511, %504
  %514 = phi i32 [ %512, %511 ], [ %510, %504 ]
  %515 = icmp eq i32 %514, 0
  br i1 %515, label %516, label %517

516:                                              ; preds = %513
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %502) #13
  br label %517

517:                                              ; preds = %480, %501, %513, %516
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %475) #13
  br label %518

518:                                              ; preds = %20, %204, %517, %469
  %519 = phi i64 [ 0, %20 ], [ %155, %204 ], [ %155, %517 ], [ %155, %469 ]
  %520 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %520) #13
  %521 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %521, align 8
  %522 = bitcast %"class.blink::Animation"* %1 to i32 (%"class.blink::Animation"*)***
  %523 = load i32 (%"class.blink::Animation"*)**, i32 (%"class.blink::Animation"*)*** %522, align 8
  %524 = getelementptr inbounds i32 (%"class.blink::Animation"*)*, i32 (%"class.blink::Animation"*)** %523, i64 45
  %525 = load i32 (%"class.blink::Animation"*)*, i32 (%"class.blink::Animation"*)** %524, align 8
  %526 = call i32 %525(%"class.blink::Animation"* %1) #13
  %527 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %527) #13
  %528 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 11
  %529 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 2
  %530 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 3
  %531 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %527, i8 -86, i64 32, i1 false) #13
  store i8* %528, i8** %529, align 8
  %532 = urem i32 %526, 10
  %533 = udiv i32 %526, 10
  %534 = trunc i32 %532 to i8
  %535 = or i8 %534, 48
  store i8 %535, i8* %528, align 1
  %536 = icmp ugt i32 %526, 9
  br i1 %536, label %537, label %552

537:                                              ; preds = %518
  %538 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 10
  store i8* %538, i8** %529, align 8
  %539 = urem i32 %533, 10
  %540 = trunc i32 %539 to i8
  %541 = or i8 %540, 48
  store i8 %541, i8* %538, align 2
  %542 = icmp ugt i32 %526, 99
  br i1 %542, label %543, label %550

543:                                              ; preds = %537
  %544 = udiv i32 %526, 100
  %545 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 9
  store i8* %545, i8** %529, align 8
  %546 = urem i32 %544, 10
  %547 = trunc i32 %546 to i8
  %548 = or i8 %547, 48
  store i8 %548, i8* %545, align 1
  %549 = icmp ugt i32 %526, 999
  br i1 %549, label %554, label %563

550:                                              ; preds = %537
  %551 = ptrtoint i8* %538 to i64
  br label %566

552:                                              ; preds = %518
  %553 = ptrtoint i8* %528 to i64
  br label %566

554:                                              ; preds = %543, %554
  %555 = phi i32 [ %557, %554 ], [ %544, %543 ]
  %556 = load i8*, i8** %529, align 8
  %557 = udiv i32 %555, 10
  %558 = getelementptr inbounds i8, i8* %556, i64 -1
  store i8* %558, i8** %529, align 8
  %559 = urem i32 %557, 10
  %560 = trunc i32 %559 to i8
  %561 = or i8 %560, 48
  store i8 %561, i8* %558, align 1
  %562 = icmp ugt i32 %555, 99
  br i1 %562, label %554, label %563

563:                                              ; preds = %554, %543
  %564 = bitcast i8** %529 to i64*
  %565 = load i64, i64* %564, align 8
  br label %566

566:                                              ; preds = %563, %550, %552
  %567 = phi i64 [ %553, %552 ], [ %565, %563 ], [ %551, %550 ]
  %568 = ptrtoint i8* %531 to i64
  %569 = sub i64 %568, %567
  %570 = trunc i64 %569 to i32
  store i32 %570, i32* %530, align 8
  %571 = inttoptr i64 %567 to i8*
  %572 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %571, i32 %570) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %527) #13
  store %"class.WTF::StringImpl"* %572, %"class.WTF::StringImpl"** %521, align 8
  %573 = bitcast %"class.blink::Animation"** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %573) #13
  store %"class.blink::Animation"* %1, %"class.blink::Animation"** %13, align 8
  %574 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 4, i32 0, i32 0
  %575 = call { %"struct.WTF::KeyValuePair.441"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS1_PS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.439"* %574, %"class.WTF::String"* nonnull dereferenceable(8) %12, %"class.blink::Animation"** nonnull dereferenceable(8) %13) #13
  %576 = extractvalue { %"struct.WTF::KeyValuePair.441"*, i8 } %575, 1
  %577 = and i8 %576, 1
  %578 = icmp eq i8 %577, 0
  br i1 %578, label %579, label %590

579:                                              ; preds = %566
  %580 = extractvalue { %"struct.WTF::KeyValuePair.441"*, i8 } %575, 0
  %581 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %580, i64 0, i32 1
  %582 = load %"class.blink::Animation"*, %"class.blink::Animation"** %13, align 8
  %583 = ptrtoint %"class.blink::Animation"* %582 to i64
  %584 = bitcast %"class.blink::Member.442"* %581 to i64*
  store atomic i64 %583, i64* %584 monotonic, align 8
  %585 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %586 = icmp eq i32 %585, 0
  br i1 %586, label %590, label %587

587:                                              ; preds = %579
  %588 = bitcast %"class.blink::Animation"* %582 to i8*
  %589 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %588) #13
  br label %590

590:                                              ; preds = %566, %579, %587
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %573) #13
  %591 = call { i8, double } @_ZNK5blink9Animation19CurrentTimeInternalEv(%"class.blink::Animation"* %1) #13
  %592 = extractvalue { i8, double } %591, 0
  %593 = extractvalue { i8, double } %591, 1
  %594 = icmp eq i8 %592, 0
  %595 = fmul double %593, 1.000000e+03
  %596 = select i1 %594, double 0x7FF8000000000000, double %595
  %597 = call i8* @_Znwm(i64 96) #15
  %598 = bitcast i8* %597 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol9Animation9AnimationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %598, align 8
  %599 = getelementptr inbounds i8, i8* %597, i64 8
  %600 = getelementptr inbounds i8, i8* %597, i64 32
  %601 = getelementptr inbounds i8, i8* %597, i64 88
  %602 = bitcast i8* %601 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %602, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %599, i8 0, i64 17, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %600, i8 0, i64 49, i1 false) #13
  %603 = bitcast i8* %597 to %"class.blink::protocol::Animation::Animation"*
  %604 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %521, align 8
  %605 = icmp eq %"class.WTF::StringImpl"* %604, null
  br i1 %605, label %621, label %606

606:                                              ; preds = %590
  %607 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %604, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %608 = load atomic i32, i32* %607 monotonic, align 4
  %609 = and i32 %608, 2
  %610 = icmp eq i32 %609, 0
  br i1 %610, label %611, label %621

611:                                              ; preds = %606
  %612 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %604, i64 0, i32 0
  %613 = load i32, i32* %612, align 4
  %614 = zext i32 %613 to i33
  %615 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %614, i33 1) #13
  %616 = extractvalue { i33, i1 } %615, 1
  %617 = extractvalue { i33, i1 } %615, 0
  %618 = icmp slt i33 %617, 0
  %619 = or i1 %616, %618
  br i1 %619, label %620, label %624, !prof !3

620:                                              ; preds = %611
  call void @llvm.trap() #13
  unreachable

621:                                              ; preds = %606, %590
  %622 = ptrtoint %"class.WTF::StringImpl"* %604 to i64
  %623 = bitcast i8* %599 to i64*
  store i64 %622, i64* %623, align 8
  br label %644

624:                                              ; preds = %611
  %625 = trunc i33 %617 to i32
  store i32 %625, i32* %612, align 4
  %626 = bitcast i8* %599 to %"class.WTF::StringImpl"**
  %627 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %626, align 8
  %628 = ptrtoint %"class.WTF::StringImpl"* %604 to i64
  %629 = bitcast i8* %599 to i64*
  store i64 %628, i64* %629, align 8
  %630 = icmp eq %"class.WTF::StringImpl"* %627, null
  br i1 %630, label %644, label %631

631:                                              ; preds = %624
  %632 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %627, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %633 = load atomic i32, i32* %632 monotonic, align 4
  %634 = and i32 %633, 2
  %635 = icmp eq i32 %634, 0
  %636 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %627, i64 0, i32 0
  %637 = load i32, i32* %636, align 4
  br i1 %635, label %638, label %640

638:                                              ; preds = %631
  %639 = add i32 %637, -1
  store i32 %639, i32* %636, align 4
  br label %640

640:                                              ; preds = %638, %631
  %641 = phi i32 [ %639, %638 ], [ %637, %631 ]
  %642 = icmp eq i32 %641, 0
  br i1 %642, label %643, label %644

643:                                              ; preds = %640
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %627) #13
  br label %644

644:                                              ; preds = %621, %624, %640, %643
  %645 = getelementptr inbounds %"class.blink::Animation", %"class.blink::Animation"* %1, i64 0, i32 9, i32 0, i32 0
  %646 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %645, align 8
  %647 = icmp eq %"class.WTF::StringImpl"* %646, null
  br i1 %647, label %669, label %648

648:                                              ; preds = %644
  %649 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %646, i64 0, i32 1
  %650 = load i32, i32* %649, align 4
  %651 = icmp eq i32 %650, 0
  br i1 %651, label %669, label %652

652:                                              ; preds = %648
  %653 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %646, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %654 = load atomic i32, i32* %653 monotonic, align 4
  %655 = and i32 %654, 2
  %656 = icmp eq i32 %655, 0
  br i1 %656, label %657, label %762

657:                                              ; preds = %652
  %658 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %646, i64 0, i32 0
  %659 = load i32, i32* %658, align 4
  %660 = zext i32 %659 to i33
  %661 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %660, i33 1) #13
  %662 = extractvalue { i33, i1 } %661, 1
  %663 = extractvalue { i33, i1 } %661, 0
  %664 = icmp slt i33 %663, 0
  %665 = or i1 %662, %664
  br i1 %665, label %666, label %667, !prof !3

666:                                              ; preds = %657
  call void @llvm.trap() #13
  unreachable

667:                                              ; preds = %657
  %668 = trunc i33 %663 to i32
  store i32 %668, i32* %658, align 4
  br label %762

669:                                              ; preds = %648, %644
  %670 = bitcast %"class.blink::Animation"* %1 to i1 (%"class.blink::Animation"*)***
  %671 = load i1 (%"class.blink::Animation"*)**, i1 (%"class.blink::Animation"*)*** %670, align 8
  %672 = getelementptr inbounds i1 (%"class.blink::Animation"*)*, i1 (%"class.blink::Animation"*)** %671, i64 27
  %673 = load i1 (%"class.blink::Animation"*)*, i1 (%"class.blink::Animation"*)** %672, align 8
  %674 = call zeroext i1 %673(%"class.blink::Animation"* %1) #13
  %675 = icmp eq %"class.blink::Animation"* %1, null
  %676 = xor i1 %674, true
  %677 = or i1 %675, %676
  br i1 %677, label %700, label %678

678:                                              ; preds = %669
  %679 = getelementptr inbounds %"class.blink::Animation", %"class.blink::Animation"* %1, i64 1
  %680 = bitcast %"class.blink::Animation"* %679 to %"class.WTF::StringImpl"**
  %681 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %680, align 8
  %682 = icmp eq %"class.WTF::StringImpl"* %681, null
  br i1 %682, label %759, label %683

683:                                              ; preds = %678
  %684 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %681, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %685 = load atomic i32, i32* %684 monotonic, align 4
  %686 = and i32 %685, 2
  %687 = icmp eq i32 %686, 0
  br i1 %687, label %688, label %762

688:                                              ; preds = %683
  %689 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %681, i64 0, i32 0
  %690 = load i32, i32* %689, align 4
  %691 = zext i32 %690 to i33
  %692 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %691, i33 1) #13
  %693 = extractvalue { i33, i1 } %692, 1
  %694 = extractvalue { i33, i1 } %692, 0
  %695 = icmp slt i33 %694, 0
  %696 = or i1 %693, %695
  br i1 %696, label %697, label %698, !prof !3

697:                                              ; preds = %688
  call void @llvm.trap() #13
  unreachable

698:                                              ; preds = %688
  %699 = trunc i33 %694 to i32
  store i32 %699, i32* %689, align 4
  br label %762

700:                                              ; preds = %669
  %701 = load i1 (%"class.blink::Animation"*)**, i1 (%"class.blink::Animation"*)*** %670, align 8
  %702 = getelementptr inbounds i1 (%"class.blink::Animation"*)*, i1 (%"class.blink::Animation"*)** %701, i64 28
  %703 = load i1 (%"class.blink::Animation"*)*, i1 (%"class.blink::Animation"*)** %702, align 8
  %704 = call zeroext i1 %703(%"class.blink::Animation"* %1) #13
  %705 = xor i1 %704, true
  %706 = or i1 %675, %705
  br i1 %706, label %739, label %707

707:                                              ; preds = %700
  %708 = bitcast %"class.blink::Animation"* %1 to %"class.blink::CSSTransition"*
  %709 = call %"class.WTF::StringImpl"* @_ZNK5blink13CSSTransition18transitionPropertyEv(%"class.blink::CSSTransition"* nonnull %708) #13
  %710 = icmp eq %"class.WTF::StringImpl"* %709, null
  br i1 %710, label %759, label %711

711:                                              ; preds = %707
  %712 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %709, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %713 = load atomic i32, i32* %712 monotonic, align 4
  %714 = and i32 %713, 2
  %715 = icmp eq i32 %714, 0
  %716 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %709, i64 0, i32 0
  %717 = load i32, i32* %716, align 4
  br i1 %715, label %718, label %728

718:                                              ; preds = %711
  %719 = zext i32 %717 to i33
  %720 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %719, i33 1) #13
  %721 = extractvalue { i33, i1 } %720, 1
  %722 = extractvalue { i33, i1 } %720, 0
  %723 = icmp slt i33 %722, 0
  %724 = or i1 %721, %723
  br i1 %724, label %725, label %726, !prof !3

725:                                              ; preds = %718
  call void @llvm.trap() #13
  unreachable

726:                                              ; preds = %718
  %727 = trunc i33 %722 to i32
  store i32 %727, i32* %716, align 4
  br label %728

728:                                              ; preds = %726, %711
  %729 = phi i32 [ %727, %726 ], [ %717, %711 ]
  %730 = load atomic i32, i32* %712 monotonic, align 4
  %731 = and i32 %730, 2
  %732 = icmp eq i32 %731, 0
  br i1 %732, label %733, label %735

733:                                              ; preds = %728
  %734 = add i32 %729, -1
  store i32 %734, i32* %716, align 4
  br label %735

735:                                              ; preds = %733, %728
  %736 = phi i32 [ %734, %733 ], [ %729, %728 ]
  %737 = icmp eq i32 %736, 0
  br i1 %737, label %738, label %762

738:                                              ; preds = %735
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %709) #13
  br label %762

739:                                              ; preds = %700
  %740 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %645, align 8
  %741 = icmp eq %"class.WTF::StringImpl"* %740, null
  br i1 %741, label %759, label %742

742:                                              ; preds = %739
  %743 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %740, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %744 = load atomic i32, i32* %743 monotonic, align 4
  %745 = and i32 %744, 2
  %746 = icmp eq i32 %745, 0
  br i1 %746, label %747, label %762

747:                                              ; preds = %742
  %748 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %740, i64 0, i32 0
  %749 = load i32, i32* %748, align 4
  %750 = zext i32 %749 to i33
  %751 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %750, i33 1) #13
  %752 = extractvalue { i33, i1 } %751, 1
  %753 = extractvalue { i33, i1 } %751, 0
  %754 = icmp slt i33 %753, 0
  %755 = or i1 %752, %754
  br i1 %755, label %756, label %757, !prof !3

756:                                              ; preds = %747
  call void @llvm.trap() #13
  unreachable

757:                                              ; preds = %747
  %758 = trunc i33 %753 to i32
  store i32 %758, i32* %748, align 4
  br label %762

759:                                              ; preds = %678, %707, %739
  %760 = getelementptr inbounds i8, i8* %597, i64 16
  %761 = bitcast i8* %760 to %"class.WTF::String"*
  br label %783

762:                                              ; preds = %652, %667, %683, %698, %735, %738, %742, %757
  %763 = phi %"class.WTF::StringImpl"* [ %740, %757 ], [ %740, %742 ], [ %709, %738 ], [ %709, %735 ], [ %681, %698 ], [ %681, %683 ], [ %646, %667 ], [ %646, %652 ]
  %764 = getelementptr inbounds i8, i8* %597, i64 16
  %765 = bitcast i8* %764 to %"class.WTF::String"*
  %766 = icmp eq %"class.WTF::StringImpl"* %763, null
  %767 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %763, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %768 = load atomic i32, i32* %767 monotonic, align 4
  %769 = and i32 %768, 2
  %770 = icmp eq i32 %769, 0
  br i1 %770, label %771, label %783

771:                                              ; preds = %762
  %772 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %763, i64 0, i32 0
  %773 = load i32, i32* %772, align 4
  %774 = zext i32 %773 to i33
  %775 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %774, i33 1) #13
  %776 = extractvalue { i33, i1 } %775, 1
  %777 = extractvalue { i33, i1 } %775, 0
  %778 = icmp slt i33 %777, 0
  %779 = or i1 %776, %778
  br i1 %779, label %780, label %781, !prof !3

780:                                              ; preds = %771
  call void @llvm.trap() #13
  unreachable

781:                                              ; preds = %771
  %782 = trunc i33 %777 to i32
  store i32 %782, i32* %772, align 4
  br label %783

783:                                              ; preds = %759, %781, %762
  %784 = phi i1 [ %766, %781 ], [ %766, %762 ], [ true, %759 ]
  %785 = phi %"class.WTF::String"* [ %765, %781 ], [ %765, %762 ], [ %761, %759 ]
  %786 = phi %"class.WTF::StringImpl"* [ %763, %781 ], [ %763, %762 ], [ null, %759 ]
  %787 = ptrtoint %"class.WTF::StringImpl"* %786 to i64
  %788 = bitcast %"class.WTF::String"* %785 to i64*
  %789 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %785, i64 0, i32 0, i32 0
  %790 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %789, align 8
  store i64 %787, i64* %788, align 8
  %791 = icmp eq %"class.WTF::StringImpl"* %790, null
  br i1 %791, label %805, label %792

792:                                              ; preds = %783
  %793 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %790, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %794 = load atomic i32, i32* %793 monotonic, align 4
  %795 = and i32 %794, 2
  %796 = icmp eq i32 %795, 0
  %797 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %790, i64 0, i32 0
  %798 = load i32, i32* %797, align 4
  br i1 %796, label %799, label %801

799:                                              ; preds = %792
  %800 = add i32 %798, -1
  store i32 %800, i32* %797, align 4
  br label %801

801:                                              ; preds = %799, %792
  %802 = phi i32 [ %800, %799 ], [ %798, %792 ]
  %803 = icmp eq i32 %802, 0
  br i1 %803, label %804, label %805

804:                                              ; preds = %801
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %790) #13
  br label %805

805:                                              ; preds = %783, %801, %804
  %806 = call i32 @_ZNK5blink9Animation27CalculateAnimationPlayStateEv(%"class.blink::Animation"* %1) #13
  %807 = icmp eq i32 %806, 4
  br i1 %807, label %808, label %812

808:                                              ; preds = %805
  %809 = getelementptr inbounds %"class.blink::Animation", %"class.blink::Animation"* %1, i64 0, i32 27
  %810 = load i8, i8* %809, align 4, !range !2
  %811 = icmp eq i8 %810, 0
  br label %812

812:                                              ; preds = %805, %808
  %813 = phi i1 [ false, %805 ], [ %811, %808 ]
  %814 = zext i1 %813 to i8
  %815 = getelementptr inbounds i8, i8* %597, i64 24
  store i8 %814, i8* %815, align 8
  %816 = call %"class.WTF::StringImpl"* @_ZNK5blink9Animation15PlayStateStringEv(%"class.blink::Animation"* %1) #13
  %817 = icmp eq %"class.WTF::StringImpl"* %816, null
  br i1 %817, label %835, label %818

818:                                              ; preds = %812
  %819 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %816, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %820 = load atomic i32, i32* %819 monotonic, align 4
  %821 = and i32 %820, 2
  %822 = icmp eq i32 %821, 0
  br i1 %822, label %823, label %835

823:                                              ; preds = %818
  %824 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %816, i64 0, i32 0
  %825 = load i32, i32* %824, align 4
  %826 = zext i32 %825 to i33
  %827 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %826, i33 1) #13
  %828 = extractvalue { i33, i1 } %827, 1
  %829 = extractvalue { i33, i1 } %827, 0
  %830 = icmp slt i33 %829, 0
  %831 = or i1 %828, %830
  br i1 %831, label %832, label %833, !prof !3

832:                                              ; preds = %823
  call void @llvm.trap() #13
  unreachable

833:                                              ; preds = %823
  %834 = trunc i33 %829 to i32
  store i32 %834, i32* %824, align 4
  br label %835

835:                                              ; preds = %833, %818, %812
  %836 = ptrtoint %"class.WTF::StringImpl"* %816 to i64
  %837 = bitcast i8* %600 to i64*
  %838 = bitcast i8* %600 to %"class.WTF::StringImpl"**
  %839 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %838, align 8
  store i64 %836, i64* %837, align 8
  %840 = icmp eq %"class.WTF::StringImpl"* %839, null
  br i1 %840, label %854, label %841

841:                                              ; preds = %835
  %842 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %839, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %843 = load atomic i32, i32* %842 monotonic, align 4
  %844 = and i32 %843, 2
  %845 = icmp eq i32 %844, 0
  %846 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %839, i64 0, i32 0
  %847 = load i32, i32* %846, align 4
  br i1 %845, label %848, label %850

848:                                              ; preds = %841
  %849 = add i32 %847, -1
  store i32 %849, i32* %846, align 4
  br label %850

850:                                              ; preds = %848, %841
  %851 = phi i32 [ %849, %848 ], [ %847, %841 ]
  %852 = icmp eq i32 %851, 0
  br i1 %852, label %853, label %854

853:                                              ; preds = %850
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %839) #13
  br label %854

854:                                              ; preds = %835, %850, %853
  %855 = call double @_ZNK5blink9Animation12playbackRateEv(%"class.blink::Animation"* %1) #13
  %856 = getelementptr inbounds i8, i8* %597, i64 40
  %857 = bitcast i8* %856 to double*
  store double %855, double* %857, align 8
  %858 = call double @_ZN5blink23InspectorAnimationAgent19NormalizedStartTimeERNS_9AnimationE(%"class.blink::InspectorAnimationAgent"* %0, %"class.blink::Animation"* dereferenceable(368) %1)
  %859 = getelementptr inbounds i8, i8* %597, i64 48
  %860 = bitcast i8* %859 to double*
  store double %858, double* %860, align 8
  %861 = getelementptr inbounds i8, i8* %597, i64 56
  %862 = bitcast i8* %861 to double*
  store double %596, double* %862, align 8
  %863 = getelementptr inbounds i8, i8* %597, i64 64
  %864 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %865 = icmp eq %"class.WTF::StringImpl"* %864, null
  br i1 %865, label %883, label %866

866:                                              ; preds = %854
  %867 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %864, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %868 = load atomic i32, i32* %867 monotonic, align 4
  %869 = and i32 %868, 2
  %870 = icmp eq i32 %869, 0
  br i1 %870, label %871, label %883

871:                                              ; preds = %866
  %872 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %864, i64 0, i32 0
  %873 = load i32, i32* %872, align 4
  %874 = zext i32 %873 to i33
  %875 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %874, i33 1) #13
  %876 = extractvalue { i33, i1 } %875, 1
  %877 = extractvalue { i33, i1 } %875, 0
  %878 = icmp slt i33 %877, 0
  %879 = or i1 %876, %878
  br i1 %879, label %880, label %881, !prof !3

880:                                              ; preds = %871
  call void @llvm.trap() #13
  unreachable

881:                                              ; preds = %871
  %882 = trunc i33 %877 to i32
  store i32 %882, i32* %872, align 4
  br label %883

883:                                              ; preds = %881, %866, %854
  %884 = ptrtoint %"class.WTF::StringImpl"* %864 to i64
  %885 = bitcast i8* %863 to i64*
  %886 = bitcast i8* %863 to %"class.WTF::StringImpl"**
  %887 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %886, align 8
  store i64 %884, i64* %885, align 8
  %888 = icmp eq %"class.WTF::StringImpl"* %887, null
  br i1 %888, label %902, label %889

889:                                              ; preds = %883
  %890 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %887, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %891 = load atomic i32, i32* %890 monotonic, align 4
  %892 = and i32 %891, 2
  %893 = icmp eq i32 %892, 0
  %894 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %887, i64 0, i32 0
  %895 = load i32, i32* %894, align 4
  br i1 %893, label %896, label %898

896:                                              ; preds = %889
  %897 = add i32 %895, -1
  store i32 %897, i32* %894, align 4
  br label %898

898:                                              ; preds = %896, %889
  %899 = phi i32 [ %897, %896 ], [ %895, %889 ]
  %900 = icmp eq i32 %899, 0
  br i1 %900, label %901, label %902

901:                                              ; preds = %898
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %887) #13
  br label %902

902:                                              ; preds = %883, %898, %901
  br i1 %817, label %916, label %903

903:                                              ; preds = %902
  %904 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %816, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %905 = load atomic i32, i32* %904 monotonic, align 4
  %906 = and i32 %905, 2
  %907 = icmp eq i32 %906, 0
  %908 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %816, i64 0, i32 0
  %909 = load i32, i32* %908, align 4
  br i1 %907, label %910, label %912

910:                                              ; preds = %903
  %911 = add i32 %909, -1
  store i32 %911, i32* %908, align 4
  br label %912

912:                                              ; preds = %910, %903
  %913 = phi i32 [ %911, %910 ], [ %909, %903 ]
  %914 = icmp eq i32 %913, 0
  br i1 %914, label %915, label %916

915:                                              ; preds = %912
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %816) #13
  br label %916

916:                                              ; preds = %902, %912, %915
  br i1 %784, label %930, label %917

917:                                              ; preds = %916
  %918 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %786, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %919 = load atomic i32, i32* %918 monotonic, align 4
  %920 = and i32 %919, 2
  %921 = icmp eq i32 %920, 0
  %922 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %786, i64 0, i32 0
  %923 = load i32, i32* %922, align 4
  br i1 %921, label %924, label %926

924:                                              ; preds = %917
  %925 = add i32 %923, -1
  store i32 %925, i32* %922, align 4
  br label %926

926:                                              ; preds = %924, %917
  %927 = phi i32 [ %925, %924 ], [ %923, %917 ]
  %928 = icmp eq i32 %927, 0
  br i1 %928, label %929, label %930

929:                                              ; preds = %926
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %786) #13
  br label %930

930:                                              ; preds = %929, %926, %916
  %931 = load i8*, i8** @_ZN5blink8protocol9Animation9Animation8TypeEnum12WebAnimationE, align 8
  %932 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %932) #13
  %933 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %934 = icmp eq %"class.WTF::StringImpl"* %933, null
  br i1 %934, label %935, label %939

935:                                              ; preds = %930
  %936 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %936, align 8
  %937 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %938 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %937, i64* %938, align 8
  br label %946

939:                                              ; preds = %930
  %940 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %933, %"class.WTF::StringImpl"** %940, align 8
  %941 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %933, i64 0, i32 1
  %942 = load i32, i32* %941, align 4
  %943 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %933, i64 1
  %944 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %945 = bitcast i8** %944 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %943, %"class.WTF::StringImpl"** %945, align 8
  br label %946

946:                                              ; preds = %939, %935
  %947 = phi i32 [ %942, %939 ], [ 0, %935 ]
  %948 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %947, i32* %948, align 8
  %949 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %949) #13
  %950 = icmp eq i8* %931, null
  br i1 %950, label %957, label %951

951:                                              ; preds = %946
  %952 = call i64 @strlen(i8* nonnull %931) #14
  %953 = icmp ult i64 %952, 4294967296
  br i1 %953, label %955, label %954, !prof !4

954:                                              ; preds = %951
  call void @llvm.trap() #13
  unreachable

955:                                              ; preds = %951
  %956 = trunc i64 %952 to i32
  br label %957

957:                                              ; preds = %946, %955
  %958 = phi i32 [ %956, %955 ], [ 0, %946 ]
  %959 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %960 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %959, i64* %960, align 8
  %961 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* %931, i8** %961, align 8
  %962 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %958, i32* %962, align 8
  %963 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %949) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %932) #13
  br i1 %963, label %1001, label %964

964:                                              ; preds = %957
  %965 = call %"class.WTF::StringImpl"* @_ZN5blink23InspectorAnimationAgent11CreateCSSIdERNS_9AnimationE(%"class.blink::InspectorAnimationAgent"* %0, %"class.blink::Animation"* dereferenceable(368) %1)
  %966 = icmp eq %"class.WTF::StringImpl"* %965, null
  br i1 %966, label %984, label %967

967:                                              ; preds = %964
  %968 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %965, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %969 = load atomic i32, i32* %968 monotonic, align 4
  %970 = and i32 %969, 2
  %971 = icmp eq i32 %970, 0
  br i1 %971, label %972, label %987

972:                                              ; preds = %967
  %973 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %965, i64 0, i32 0
  %974 = load i32, i32* %973, align 4
  %975 = zext i32 %974 to i33
  %976 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %975, i33 1) #13
  %977 = extractvalue { i33, i1 } %976, 1
  %978 = extractvalue { i33, i1 } %976, 0
  %979 = icmp slt i33 %978, 0
  %980 = or i1 %977, %979
  br i1 %980, label %981, label %982, !prof !3

981:                                              ; preds = %972
  call void @llvm.trap() #13
  unreachable

982:                                              ; preds = %972
  %983 = trunc i33 %978 to i32
  store i32 %983, i32* %973, align 4
  br label %987

984:                                              ; preds = %964
  %985 = getelementptr inbounds i8, i8* %597, i64 80
  %986 = bitcast i8* %985 to %"class.crdtp::detail::ValueMaybe.2023"*
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe.2023"* %986, %"class.WTF::StringImpl"* null) #13
  br label %1001

987:                                              ; preds = %967, %982
  %988 = getelementptr inbounds i8, i8* %597, i64 80
  %989 = bitcast i8* %988 to %"class.crdtp::detail::ValueMaybe.2023"*
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe.2023"* %989, %"class.WTF::StringImpl"* nonnull %965) #13
  %990 = load atomic i32, i32* %968 monotonic, align 4
  %991 = and i32 %990, 2
  %992 = icmp eq i32 %991, 0
  %993 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %965, i64 0, i32 0
  %994 = load i32, i32* %993, align 4
  br i1 %992, label %995, label %997

995:                                              ; preds = %987
  %996 = add i32 %994, -1
  store i32 %996, i32* %993, align 4
  br label %997

997:                                              ; preds = %995, %987
  %998 = phi i32 [ %996, %995 ], [ %994, %987 ]
  %999 = icmp eq i32 %998, 0
  br i1 %999, label %1000, label %1001

1000:                                             ; preds = %997
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %965) #13
  br label %1001

1001:                                             ; preds = %957, %1000, %997, %984
  %1002 = icmp eq i64 %519, 0
  br i1 %1002, label %1014, label %1003

1003:                                             ; preds = %1001
  %1004 = getelementptr inbounds i8, i8* %597, i64 72
  %1005 = bitcast i8* %1004 to %"class.blink::protocol::Animation::AnimationEffect"**
  %1006 = load %"class.blink::protocol::Animation::AnimationEffect"*, %"class.blink::protocol::Animation::AnimationEffect"** %1005, align 8
  %1007 = bitcast i8* %1004 to i64*
  store i64 %519, i64* %1007, align 8
  %1008 = icmp eq %"class.blink::protocol::Animation::AnimationEffect"* %1006, null
  br i1 %1008, label %1014, label %1009

1009:                                             ; preds = %1003
  %1010 = bitcast %"class.blink::protocol::Animation::AnimationEffect"* %1006 to void (%"class.blink::protocol::Animation::AnimationEffect"*)***
  %1011 = load void (%"class.blink::protocol::Animation::AnimationEffect"*)**, void (%"class.blink::protocol::Animation::AnimationEffect"*)*** %1010, align 8
  %1012 = getelementptr inbounds void (%"class.blink::protocol::Animation::AnimationEffect"*)*, void (%"class.blink::protocol::Animation::AnimationEffect"*)** %1011, i64 2
  %1013 = load void (%"class.blink::protocol::Animation::AnimationEffect"*)*, void (%"class.blink::protocol::Animation::AnimationEffect"*)** %1012, align 8
  call void %1013(%"class.blink::protocol::Animation::AnimationEffect"* nonnull %1006) #13
  br label %1014

1014:                                             ; preds = %1001, %1009, %1003
  %1015 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %521, align 8
  %1016 = icmp eq %"class.WTF::StringImpl"* %1015, null
  br i1 %1016, label %1030, label %1017

1017:                                             ; preds = %1014
  %1018 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1015, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1019 = load atomic i32, i32* %1018 monotonic, align 4
  %1020 = and i32 %1019, 2
  %1021 = icmp eq i32 %1020, 0
  %1022 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1015, i64 0, i32 0
  %1023 = load i32, i32* %1022, align 4
  br i1 %1021, label %1024, label %1026

1024:                                             ; preds = %1017
  %1025 = add i32 %1023, -1
  store i32 %1025, i32* %1022, align 4
  br label %1026

1026:                                             ; preds = %1024, %1017
  %1027 = phi i32 [ %1025, %1024 ], [ %1023, %1017 ]
  %1028 = icmp eq i32 %1027, 0
  br i1 %1028, label %1029, label %1030

1029:                                             ; preds = %1026
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1015) #13
  br label %1030

1030:                                             ; preds = %1014, %1026, %1029
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %520) #13
  %1031 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %1032 = icmp eq %"class.WTF::StringImpl"* %1031, null
  br i1 %1032, label %1046, label %1033

1033:                                             ; preds = %1030
  %1034 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1031, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1035 = load atomic i32, i32* %1034 monotonic, align 4
  %1036 = and i32 %1035, 2
  %1037 = icmp eq i32 %1036, 0
  %1038 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1031, i64 0, i32 0
  %1039 = load i32, i32* %1038, align 4
  br i1 %1037, label %1040, label %1042

1040:                                             ; preds = %1033
  %1041 = add i32 %1039, -1
  store i32 %1041, i32* %1038, align 4
  br label %1042

1042:                                             ; preds = %1040, %1033
  %1043 = phi i32 [ %1041, %1040 ], [ %1039, %1033 ]
  %1044 = icmp eq i32 %1043, 0
  br i1 %1044, label %1045, label %1046

1045:                                             ; preds = %1042
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1031) #13
  br label %1046

1046:                                             ; preds = %1030, %1042, %1045
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  ret %"class.blink::protocol::Animation::Animation"* %603
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare { i8, double } @_ZNK5blink9Animation19CurrentTimeInternalEv(%"class.blink::Animation"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9Animation15PlayStateStringEv(%"class.blink::Animation"*) local_unnamed_addr #1

declare double @_ZNK5blink9Animation12playbackRateEv(%"class.blink::Animation"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZN5blink23InspectorAnimationAgent19NormalizedStartTimeERNS_9AnimationE(%"class.blink::InspectorAnimationAgent"* nocapture readonly, %"class.blink::Animation"* nocapture readonly dereferenceable(368)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::Animation", %"class.blink::Animation"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8
  %5 = getelementptr inbounds %"class.blink::Animation", %"class.blink::Animation"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %6 = load double, double* %5, align 8
  %7 = icmp eq i8 %4, 0
  %8 = fmul double %6, 1.000000e+03
  %9 = select i1 %7, double 0x7FF8000000000000, double %8
  %10 = getelementptr inbounds %"class.blink::Animation", %"class.blink::Animation"* %1, i64 0, i32 25, i32 0, i32 0
  %11 = load %"class.blink::AnimationTimeline"*, %"class.blink::AnimationTimeline"** %10, align 8
  %12 = icmp eq %"class.blink::AnimationTimeline"* %11, null
  br i1 %12, label %78, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.blink::AnimationTimeline"* %11 to i1 (%"class.blink::AnimationTimeline"*)***
  %15 = load i1 (%"class.blink::AnimationTimeline"*)**, i1 (%"class.blink::AnimationTimeline"*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.blink::AnimationTimeline"*)*, i1 (%"class.blink::AnimationTimeline"*)** %15, i64 11
  %17 = load i1 (%"class.blink::AnimationTimeline"*)*, i1 (%"class.blink::AnimationTimeline"*)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.blink::AnimationTimeline"* nonnull %11) #13
  %19 = bitcast %"class.blink::AnimationTimeline"* %11 to %"class.blink::DocumentTimeline"*
  br i1 %18, label %20, label %78

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 1, i32 0, i32 0
  %22 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %22, i64 0, i32 1, i32 0, i32 0
  %24 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %23, align 8
  %25 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %24) #13
  %26 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %25, i64 0, i32 131, i32 0, i32 0
  %27 = load %"class.blink::DocumentTimeline"*, %"class.blink::DocumentTimeline"** %26, align 8
  %28 = tail call double @_ZNK5blink16DocumentTimeline12PlaybackRateEv(%"class.blink::DocumentTimeline"* %27) #13
  %29 = fcmp oeq double %28, 0.000000e+00
  br i1 %29, label %30, label %50

30:                                               ; preds = %20
  %31 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %21, align 8
  %32 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %31, i64 0, i32 1, i32 0, i32 0
  %33 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %32, align 8
  %34 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %33) #13
  %35 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %34, i64 0, i32 131, i32 0, i32 0
  %36 = load %"class.blink::DocumentTimeline"*, %"class.blink::DocumentTimeline"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::DocumentTimeline", %"class.blink::DocumentTimeline"* %36, i64 0, i32 0
  %38 = tail call { i8, double } @_ZN5blink17AnimationTimeline23CurrentTimeMillisecondsEv(%"class.blink::AnimationTimeline"* %37) #13
  %39 = extractvalue { i8, double } %38, 0
  %40 = extractvalue { i8, double } %38, 1
  %41 = icmp eq i8 %39, 0
  %42 = select i1 %41, double 0x7FF8000000000000, double %40
  %43 = tail call { i8, double } @_ZN5blink17AnimationTimeline23CurrentTimeMillisecondsEv(%"class.blink::AnimationTimeline"* nonnull %11) #13
  %44 = extractvalue { i8, double } %43, 0
  %45 = extractvalue { i8, double } %43, 1
  %46 = icmp eq i8 %44, 0
  %47 = select i1 %46, double 0x7FF8000000000000, double %45
  %48 = fsub double %42, %47
  %49 = fadd double %9, %48
  br label %78

50:                                               ; preds = %20
  %51 = bitcast %"class.blink::AnimationTimeline"* %11 to double (%"class.blink::DocumentTimeline"*)***
  %52 = load double (%"class.blink::DocumentTimeline"*)**, double (%"class.blink::DocumentTimeline"*)*** %51, align 8
  %53 = getelementptr inbounds double (%"class.blink::DocumentTimeline"*)*, double (%"class.blink::DocumentTimeline"*)** %52, i64 15
  %54 = load double (%"class.blink::DocumentTimeline"*)*, double (%"class.blink::DocumentTimeline"*)** %53, align 8
  %55 = tail call double %54(%"class.blink::DocumentTimeline"* nonnull %19) #13
  %56 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %21, align 8
  %57 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %56, i64 0, i32 1, i32 0, i32 0
  %58 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %57, align 8
  %59 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %58) #13
  %60 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %59, i64 0, i32 131, i32 0, i32 0
  %61 = load %"class.blink::DocumentTimeline"*, %"class.blink::DocumentTimeline"** %60, align 8
  %62 = bitcast %"class.blink::DocumentTimeline"* %61 to double (%"class.blink::DocumentTimeline"*)***
  %63 = load double (%"class.blink::DocumentTimeline"*)**, double (%"class.blink::DocumentTimeline"*)*** %62, align 8
  %64 = getelementptr inbounds double (%"class.blink::DocumentTimeline"*)*, double (%"class.blink::DocumentTimeline"*)** %63, i64 15
  %65 = load double (%"class.blink::DocumentTimeline"*)*, double (%"class.blink::DocumentTimeline"*)** %64, align 8
  %66 = tail call double %65(%"class.blink::DocumentTimeline"* %61) #13
  %67 = fsub double %55, %66
  %68 = fmul double %67, 1.000000e+03
  %69 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %21, align 8
  %70 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %69, i64 0, i32 1, i32 0, i32 0
  %71 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %70, align 8
  %72 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %71) #13
  %73 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %72, i64 0, i32 131, i32 0, i32 0
  %74 = load %"class.blink::DocumentTimeline"*, %"class.blink::DocumentTimeline"** %73, align 8
  %75 = tail call double @_ZNK5blink16DocumentTimeline12PlaybackRateEv(%"class.blink::DocumentTimeline"* %74) #13
  %76 = fmul double %68, %75
  %77 = fadd double %9, %76
  br label %78

78:                                               ; preds = %13, %2, %30, %50
  %79 = phi double [ %49, %30 ], [ %77, %50 ], [ %9, %13 ], [ %9, %2 ]
  %80 = fmul double %79, 1.000000e+03
  %81 = tail call double @llvm.round.f64(double %80)
  %82 = fdiv double %81, 1.000000e+03
  ret double %82
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink23InspectorAnimationAgent11CreateCSSIdERNS_9AnimationE(%"class.blink::InspectorAnimationAgent"* nocapture readonly, %"class.blink::Animation"* dereferenceable(368)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.WTF::Vector.2251", align 8
  %5 = alloca %"class.blink::CSSPropertyName", align 8
  %6 = alloca %"class.blink::CSSPropertyName", align 8
  %7 = alloca %"class.blink::CSSPropertyName", align 8
  %8 = alloca %"class.blink::HeapVector.2256", align 8
  %9 = alloca %"class.blink::Digestor", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::AtomicString", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::Vector.2298", align 8
  %15 = getelementptr inbounds %"class.blink::Animation", %"class.blink::Animation"* %1, i64 0, i32 23, i32 0, i32 0
  %16 = bitcast %"class.blink::AnimationEffect"** %15 to %"class.blink::KeyframeEffect"**
  %17 = load %"class.blink::KeyframeEffect"*, %"class.blink::KeyframeEffect"** %16, align 8
  %18 = bitcast %"class.WTF::Vector.2251"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #13
  %19 = getelementptr inbounds %"class.WTF::Vector.2251", %"class.WTF::Vector.2251"* %4, i64 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.WTF::Vector.2251", %"class.WTF::Vector.2251"* %4, i64 0, i32 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.WTF::Vector.2251", %"class.WTF::Vector.2251"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 16, i1 false) #13
  %22 = bitcast %"class.blink::Animation"* %1 to i1 (%"class.blink::Animation"*)***
  %23 = load i1 (%"class.blink::Animation"*)**, i1 (%"class.blink::Animation"*)*** %22, align 8
  %24 = getelementptr inbounds i1 (%"class.blink::Animation"*)*, i1 (%"class.blink::Animation"*)** %23, i64 27
  %25 = load i1 (%"class.blink::Animation"*)*, i1 (%"class.blink::Animation"*)** %24, align 8
  %26 = tail call zeroext i1 %25(%"class.blink::Animation"* %1) #13
  br i1 %26, label %27, label %71

27:                                               ; preds = %2
  %28 = bitcast %"class.blink::CSSPropertyName"* %5 to i8*
  %29 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %5, i64 0, i32 0
  %30 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %5, i64 0, i32 1
  %32 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = bitcast %"class.WTF::AtomicString"* %31 to i64*
  br label %34

34:                                               ; preds = %68, %27
  %35 = phi i32 [ 0, %27 ], [ %70, %68 ]
  %36 = phi i32 [ 0, %27 ], [ %69, %68 ]
  %37 = phi i32* [ getelementptr inbounds ([7 x i32], [7 x i32]* @_ZZN5blink23InspectorAnimationAgent11CreateCSSIdERNS_9AnimationEE22g_animation_properties, i64 0, i64 0), %27 ], [ %66, %68 ]
  %38 = load i32, i32* %37, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #13
  store i32 %38, i32* %29, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %30, align 8
  %39 = icmp eq i32 %36, %35
  br i1 %39, label %49, label %40, !prof !3

40:                                               ; preds = %34
  %41 = load %"class.blink::CSSPropertyName"*, %"class.blink::CSSPropertyName"** %19, align 8
  %42 = zext i32 %36 to i64
  %43 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %41, i64 %42, i32 0
  store i32 %38, i32* %43, align 8
  %44 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %41, i64 %42, i32 1
  %45 = load i64, i64* %33, align 8
  %46 = bitcast %"class.WTF::AtomicString"* %44 to i64*
  store i64 %45, i64* %46, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %32, align 8
  %47 = load i32, i32* %21, align 4
  %48 = add i32 %47, 1
  store i32 %48, i32* %21, align 4
  br label %65

49:                                               ; preds = %34
  call void @_ZN3WTF6VectorIN5blink15CSSPropertyNameELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.2251"* nonnull %4, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %5) #13
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #13
  br label %65

65:                                               ; preds = %40, %49, %61, %64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #13
  %66 = getelementptr inbounds i32, i32* %37, i64 1
  %67 = icmp eq i32* %66, getelementptr inbounds ([7 x i32], [7 x i32]* @_ZZN5blink23InspectorAnimationAgent11CreateCSSIdERNS_9AnimationEE22g_animation_properties, i64 1, i64 0)
  br i1 %67, label %194, label %68

68:                                               ; preds = %65
  %69 = load i32, i32* %21, align 4
  %70 = load i32, i32* %20, align 8
  br label %34

71:                                               ; preds = %2
  %72 = load i1 (%"class.blink::Animation"*)**, i1 (%"class.blink::Animation"*)*** %22, align 8
  %73 = getelementptr inbounds i1 (%"class.blink::Animation"*)*, i1 (%"class.blink::Animation"*)** %72, i64 28
  %74 = load i1 (%"class.blink::Animation"*)*, i1 (%"class.blink::Animation"*)** %73, align 8
  %75 = tail call zeroext i1 %74(%"class.blink::Animation"* %1) #13
  %76 = icmp eq %"class.blink::Animation"* %1, null
  %77 = xor i1 %75, true
  %78 = or i1 %76, %77
  br i1 %78, label %194, label %79

79:                                               ; preds = %71
  %80 = bitcast %"class.blink::CSSPropertyName"* %6 to i8*
  %81 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %6, i64 0, i32 0
  %82 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %83 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %6, i64 0, i32 1
  %84 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %83, i64 0, i32 0, i32 0, i32 0
  %85 = bitcast %"class.WTF::AtomicString"* %83 to i64*
  br label %157

86:                                               ; preds = %188
  %87 = bitcast %"class.blink::CSSPropertyName"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #13
  %88 = getelementptr inbounds %"class.blink::Animation", %"class.blink::Animation"* %1, i64 1
  %89 = bitcast %"class.blink::Animation"* %88 to i32*
  %90 = load i32, i32* %89, align 8
  %91 = icmp eq i32 %90, 3
  br i1 %91, label %92, label %114

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"class.blink::Animation", %"class.blink::Animation"* %1, i64 1, i32 0, i32 1
  %94 = bitcast %"class.blink::EventTargetData"* %93 to %"class.WTF::StringImpl"**
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %120, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %120

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = zext i32 %104 to i33
  %106 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %105, i33 1) #13
  %107 = extractvalue { i33, i1 } %106, 1
  %108 = extractvalue { i33, i1 } %106, 0
  %109 = icmp slt i33 %108, 0
  %110 = or i1 %107, %109
  br i1 %110, label %111, label %112, !prof !3

111:                                              ; preds = %102
  call void @llvm.trap() #13
  unreachable

112:                                              ; preds = %102
  %113 = trunc i33 %108 to i32
  store i32 %113, i32* %103, align 4
  br label %120

114:                                              ; preds = %86
  %115 = getelementptr inbounds %"class.blink::Animation", %"class.blink::Animation"* %1, i64 1, i32 0, i32 0, i32 0, i32 1
  %116 = bitcast %"class.blink::TraceWrapperV8Reference"* %115 to %"class.blink::CSSProperty"**
  %117 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %117, i64 0, i32 1
  %119 = load i32, i32* %118, align 8
  br label %120

120:                                              ; preds = %92, %97, %112, %114
  %121 = phi %"class.WTF::StringImpl"* [ null, %114 ], [ null, %92 ], [ %95, %97 ], [ %95, %112 ]
  %122 = phi i32 [ %119, %114 ], [ 1, %92 ], [ 1, %97 ], [ 1, %112 ]
  %123 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %7, i64 0, i32 0
  store i32 %122, i32* %123, align 8
  %124 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %121, %"class.WTF::StringImpl"** %124, align 8
  %125 = load i32, i32* %21, align 4
  %126 = load i32, i32* %20, align 8
  %127 = icmp eq i32 %125, %126
  br i1 %127, label %140, label %128, !prof !3

128:                                              ; preds = %120
  %129 = load %"class.blink::CSSPropertyName"*, %"class.blink::CSSPropertyName"** %19, align 8
  %130 = zext i32 %125 to i64
  %131 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %129, i64 %130, i32 0
  store i32 %122, i32* %131, align 8
  %132 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %129, i64 %130, i32 1
  %133 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %7, i64 0, i32 1
  %134 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %133, i64 0, i32 0, i32 0, i32 0
  %135 = bitcast %"class.WTF::AtomicString"* %133 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast %"class.WTF::AtomicString"* %132 to i64*
  store i64 %136, i64* %137, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %134, align 8
  %138 = load i32, i32* %21, align 4
  %139 = add i32 %138, 1
  store i32 %139, i32* %21, align 4
  br label %156

140:                                              ; preds = %120
  call void @_ZN3WTF6VectorIN5blink15CSSPropertyNameELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.2251"* nonnull %4, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %7) #13
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %156, label %143

143:                                              ; preds = %140
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %141) #13
  br label %156

156:                                              ; preds = %128, %140, %152, %155
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #13
  br label %194

157:                                              ; preds = %191, %79
  %158 = phi i32 [ 0, %79 ], [ %193, %191 ]
  %159 = phi i32 [ 0, %79 ], [ %192, %191 ]
  %160 = phi i32* [ getelementptr inbounds ([4 x i32], [4 x i32]* @_ZZN5blink23InspectorAnimationAgent11CreateCSSIdERNS_9AnimationEE23g_transition_properties, i64 0, i64 0), %79 ], [ %189, %191 ]
  %161 = load i32, i32* %160, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #13
  store i32 %161, i32* %81, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %82, align 8
  %162 = icmp eq i32 %159, %158
  br i1 %162, label %172, label %163, !prof !3

163:                                              ; preds = %157
  %164 = load %"class.blink::CSSPropertyName"*, %"class.blink::CSSPropertyName"** %19, align 8
  %165 = zext i32 %159 to i64
  %166 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %164, i64 %165, i32 0
  store i32 %161, i32* %166, align 8
  %167 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %164, i64 %165, i32 1
  %168 = load i64, i64* %85, align 8
  %169 = bitcast %"class.WTF::AtomicString"* %167 to i64*
  store i64 %168, i64* %169, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %84, align 8
  %170 = load i32, i32* %21, align 4
  %171 = add i32 %170, 1
  store i32 %171, i32* %21, align 4
  br label %188

172:                                              ; preds = %157
  call void @_ZN3WTF6VectorIN5blink15CSSPropertyNameELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.2251"* nonnull %4, %"class.blink::CSSPropertyName"* nonnull dereferenceable(16) %6) #13
  %173 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %174 = icmp eq %"class.WTF::StringImpl"* %173, null
  br i1 %174, label %188, label %175

175:                                              ; preds = %172
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %173, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = load atomic i32, i32* %176 monotonic, align 4
  %178 = and i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %173, i64 0, i32 0
  %181 = load i32, i32* %180, align 4
  br i1 %179, label %182, label %184

182:                                              ; preds = %175
  %183 = add i32 %181, -1
  store i32 %183, i32* %180, align 4
  br label %184

184:                                              ; preds = %182, %175
  %185 = phi i32 [ %183, %182 ], [ %181, %175 ]
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %188

187:                                              ; preds = %184
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %173) #13
  br label %188

188:                                              ; preds = %163, %172, %184, %187
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #13
  %189 = getelementptr inbounds i32, i32* %160, i64 1
  %190 = icmp eq i32* %189, getelementptr inbounds ([4 x i32], [4 x i32]* @_ZZN5blink23InspectorAnimationAgent11CreateCSSIdERNS_9AnimationEE23g_transition_properties, i64 1, i64 0)
  br i1 %190, label %86, label %191

191:                                              ; preds = %188
  %192 = load i32, i32* %21, align 4
  %193 = load i32, i32* %20, align 8
  br label %157

194:                                              ; preds = %65, %156, %71
  %195 = getelementptr inbounds %"class.blink::KeyframeEffect", %"class.blink::KeyframeEffect"* %17, i64 0, i32 1, i32 0, i32 0
  %196 = load %"class.blink::Element"*, %"class.blink::Element"** %195, align 8
  %197 = bitcast %"class.blink::HeapVector.2256"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %197) #13
  %198 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 2, i32 0, i32 0
  %199 = bitcast %"class.blink::HeapVector.2256"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %199, i8 -86, i64 16, i1 false)
  %200 = load %"class.blink::InspectorCSSAgent"*, %"class.blink::InspectorCSSAgent"** %198, align 8
  call void @_ZN5blink17InspectorCSSAgent14MatchingStylesEPNS_7ElementE(%"class.blink::HeapVector.2256"* nonnull sret %8, %"class.blink::InspectorCSSAgent"* %200, %"class.blink::Element"* %196) #13
  %201 = bitcast %"class.blink::Digestor"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %201) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %201, i8 -86, i64 40, i1 false)
  call void @_ZN5blink8DigestorC1ENS_13HashAlgorithmE(%"class.blink::Digestor"* nonnull %9, i32 0) #13
  %202 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %202) #13
  %203 = load i1 (%"class.blink::Animation"*)**, i1 (%"class.blink::Animation"*)*** %22, align 8
  %204 = getelementptr inbounds i1 (%"class.blink::Animation"*)*, i1 (%"class.blink::Animation"*)** %203, i64 28
  %205 = load i1 (%"class.blink::Animation"*)*, i1 (%"class.blink::Animation"*)** %204, align 8
  %206 = call zeroext i1 %205(%"class.blink::Animation"* %1) #13
  %207 = load i8*, i8** @_ZN5blink8protocol9Animation9Animation8TypeEnum13CSSTransitionE, align 8
  %208 = load i8*, i8** @_ZN5blink8protocol9Animation9Animation8TypeEnum12CSSAnimationE, align 8
  %209 = select i1 %206, i8* %207, i8* %208
  %210 = icmp eq i8* %209, null
  br i1 %210, label %213, label %211

211:                                              ; preds = %194
  %212 = call i64 @strlen(i8* nonnull %209) #14
  br label %213

213:                                              ; preds = %194, %211
  %214 = phi i64 [ %212, %211 ], [ 0, %194 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* %209, i64 %214) #13
  %215 = call zeroext i1 @_ZN5blink8Digestor10UpdateUtf8ERKN3WTF6StringENS1_18UTF8ConversionModeE(%"class.blink::Digestor"* nonnull %9, %"class.WTF::String"* nonnull dereferenceable(8) %10, i32 0) #13
  %216 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %217 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %216, align 8
  %218 = icmp eq %"class.WTF::StringImpl"* %217, null
  br i1 %218, label %232, label %219

219:                                              ; preds = %213
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %217, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = load atomic i32, i32* %220 monotonic, align 4
  %222 = and i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %217, i64 0, i32 0
  %225 = load i32, i32* %224, align 4
  br i1 %223, label %226, label %228

226:                                              ; preds = %219
  %227 = add i32 %225, -1
  store i32 %227, i32* %224, align 4
  br label %228

228:                                              ; preds = %226, %219
  %229 = phi i32 [ %227, %226 ], [ %225, %219 ]
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %231, label %232

231:                                              ; preds = %228
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %217) #13
  br label %232

232:                                              ; preds = %213, %228, %231
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %202) #13
  %233 = getelementptr inbounds %"class.blink::Animation", %"class.blink::Animation"* %1, i64 0, i32 9
  %234 = call zeroext i1 @_ZN5blink8Digestor10UpdateUtf8ERKN3WTF6StringENS1_18UTF8ConversionModeE(%"class.blink::Digestor"* nonnull %9, %"class.WTF::String"* dereferenceable(8) %233, i32 0) #13
  %235 = load %"class.blink::CSSPropertyName"*, %"class.blink::CSSPropertyName"** %19, align 8
  %236 = load i32, i32* %21, align 4
  %237 = zext i32 %236 to i64
  %238 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %235, i64 %237
  %239 = icmp eq i32 %236, 0
  br i1 %239, label %248, label %240

240:                                              ; preds = %232
  %241 = bitcast %"class.WTF::AtomicString"* %11 to i8*
  %242 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  %243 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0
  %244 = bitcast %"class.WTF::String"* %12 to i8*
  %245 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %246 = bitcast %"class.WTF::String"* %13 to i8*
  %247 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  br label %309

248:                                              ; preds = %404, %232
  %249 = bitcast %"class.WTF::Vector.2298"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %249) #13
  %250 = getelementptr inbounds %"class.WTF::Vector.2298", %"class.WTF::Vector.2298"* %14, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %250, i8 -86, i64 64, i1 false)
  %251 = getelementptr inbounds %"class.WTF::Vector.2298", %"class.WTF::Vector.2298"* %14, i64 0, i32 0, i32 1, i64 0
  %252 = getelementptr inbounds %"class.WTF::Vector.2298", %"class.WTF::Vector.2298"* %14, i64 0, i32 0, i32 0, i32 0
  store i8* %251, i8** %252, align 8
  %253 = getelementptr inbounds %"class.WTF::Vector.2298", %"class.WTF::Vector.2298"* %14, i64 0, i32 0, i32 0, i32 1
  store i32 64, i32* %253, align 8
  %254 = getelementptr inbounds %"class.WTF::Vector.2298", %"class.WTF::Vector.2298"* %14, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %254, align 4
  %255 = call zeroext i1 @_ZN5blink8Digestor6FinishERN3WTF6VectorIhLj64ENS1_18PartitionAllocatorEEE(%"class.blink::Digestor"* nonnull %9, %"class.WTF::Vector.2298"* nonnull dereferenceable(80) %14) #13
  %256 = load i8*, i8** %252, align 8
  %257 = load i32, i32* %254, align 4
  %258 = icmp ugt i32 %257, 9
  br i1 %258, label %262, label %259

259:                                              ; preds = %248
  %260 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %260) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i64 0, i64 0), i32 360, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.18, i64 0, i64 0)) #13
  %261 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %260) #13
  br label %262

262:                                              ; preds = %248, %259
  %263 = call %"class.WTF::StringImpl"* @_ZN3WTF12Base64EncodeEN4base4spanIKhLm18446744073709551615EEENS_18Base64EncodePolicyE(i64 10, i8* %256, i32 0) #13
  %264 = load i32, i32* %254, align 4
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %267, label %266, !prof !3

266:                                              ; preds = %262
  store i32 0, i32* %254, align 4
  br label %267

267:                                              ; preds = %266, %262
  %268 = load i8*, i8** %252, align 8
  %269 = icmp eq i8* %251, %268
  br i1 %269, label %272, label %270, !prof !4

270:                                              ; preds = %267
  %271 = getelementptr inbounds %"class.WTF::Vector.2298", %"class.WTF::Vector.2298"* %14, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIhLj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.2299"* nonnull %271, i8* %268) #13
  br label %272

272:                                              ; preds = %267, %270
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %249) #13
  call void @_ZN5blink8DigestorD1Ev(%"class.blink::Digestor"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %201) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %197) #13
  %273 = load %"class.blink::CSSPropertyName"*, %"class.blink::CSSPropertyName"** %19, align 8
  %274 = icmp eq %"class.blink::CSSPropertyName"* %273, null
  br i1 %274, label %308, label %275, !prof !4

275:                                              ; preds = %272
  %276 = bitcast %"class.blink::CSSPropertyName"* %273 to i8*
  %277 = load i32, i32* %21, align 4
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %306, label %279, !prof !3

279:                                              ; preds = %275
  %280 = zext i32 %277 to i64
  %281 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %273, i64 %280
  br label %282

282:                                              ; preds = %300, %279
  %283 = phi %"class.blink::CSSPropertyName"* [ %301, %300 ], [ %273, %279 ]
  %284 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %283, i64 0, i32 1, i32 0, i32 0, i32 0
  %285 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %284, align 8
  %286 = icmp eq %"class.WTF::StringImpl"* %285, null
  br i1 %286, label %300, label %287

287:                                              ; preds = %282
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load atomic i32, i32* %288 monotonic, align 4
  %290 = and i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 0
  %293 = load i32, i32* %292, align 4
  br i1 %291, label %294, label %296

294:                                              ; preds = %287
  %295 = add i32 %293, -1
  store i32 %295, i32* %292, align 4
  br label %296

296:                                              ; preds = %294, %287
  %297 = phi i32 [ %295, %294 ], [ %293, %287 ]
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %296
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %285) #13
  br label %300

300:                                              ; preds = %299, %296, %282
  %301 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %283, i64 1
  %302 = icmp eq %"class.blink::CSSPropertyName"* %301, %281
  br i1 %302, label %303, label %282

303:                                              ; preds = %300
  store i32 0, i32* %21, align 4
  %304 = bitcast %"class.WTF::Vector.2251"* %4 to i8**
  %305 = load i8*, i8** %304, align 8
  br label %306

306:                                              ; preds = %303, %275
  %307 = phi i8* [ %305, %303 ], [ %276, %275 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %307) #13
  store %"class.blink::CSSPropertyName"* null, %"class.blink::CSSPropertyName"** %19, align 8
  br label %308

308:                                              ; preds = %272, %306
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #13
  ret %"class.WTF::StringImpl"* %263

309:                                              ; preds = %240, %404
  %310 = phi %"class.blink::CSSPropertyName"* [ %235, %240 ], [ %405, %404 ]
  %311 = load %"class.blink::InspectorCSSAgent"*, %"class.blink::InspectorCSSAgent"** %198, align 8
  %312 = call %"class.blink::CSSStyleDeclaration"* @_ZN5blink17InspectorCSSAgent24FindEffectiveDeclarationERKNS_15CSSPropertyNameERKNS_10HeapVectorINS_6MemberINS_19CSSStyleDeclarationEEELj0EEE(%"class.blink::InspectorCSSAgent"* %311, %"class.blink::CSSPropertyName"* dereferenceable(16) %310, %"class.blink::HeapVector.2256"* nonnull dereferenceable(16) %8) #13
  %313 = icmp eq %"class.blink::CSSStyleDeclaration"* %312, null
  br i1 %313, label %404, label %314

314:                                              ; preds = %309
  %315 = bitcast %"class.blink::CSSStyleDeclaration"* %312 to %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)***
  %316 = load %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)**, %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)*** %315, align 8
  %317 = getelementptr inbounds %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)*, %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)** %316, i64 25
  %318 = load %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)*, %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)** %317, align 8
  %319 = call %"class.blink::CSSStyleSheet"* %318(%"class.blink::CSSStyleDeclaration"* nonnull %312) #13
  %320 = icmp eq %"class.blink::CSSStyleSheet"* %319, null
  br i1 %320, label %404, label %321

321:                                              ; preds = %314
  %322 = bitcast %"class.blink::CSSStyleDeclaration"* %312 to %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)***
  %323 = load %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)**, %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)*** %322, align 8
  %324 = getelementptr inbounds %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)*, %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)** %323, i64 9
  %325 = load %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)*, %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)** %324, align 8
  %326 = call %"class.blink::CSSRule"* %325(%"class.blink::CSSStyleDeclaration"* nonnull %312) #13
  %327 = icmp eq %"class.blink::CSSRule"* %326, null
  br i1 %327, label %404, label %328

328:                                              ; preds = %321
  %329 = load %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)**, %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)*** %322, align 8
  %330 = getelementptr inbounds %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)*, %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)** %329, i64 9
  %331 = load %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)*, %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)** %330, align 8
  %332 = call %"class.blink::CSSRule"* %331(%"class.blink::CSSStyleDeclaration"* nonnull %312) #13
  %333 = bitcast %"class.blink::CSSRule"* %332 to i32 (%"class.blink::CSSRule"*)***
  %334 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %333, align 8
  %335 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %334, i64 9
  %336 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %335, align 8
  %337 = call i32 %336(%"class.blink::CSSRule"* %332) #13
  %338 = icmp eq i32 %337, 1
  br i1 %338, label %339, label %404

339:                                              ; preds = %328
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %241) #13
  %340 = call %"class.WTF::StringImpl"* @_ZNK5blink15CSSPropertyName14ToAtomicStringEv(%"class.blink::CSSPropertyName"* %310) #13
  store %"class.WTF::StringImpl"* %340, %"class.WTF::StringImpl"** %242, align 8
  %341 = call zeroext i1 @_ZN5blink8Digestor10UpdateUtf8ERKN3WTF6StringENS1_18UTF8ConversionModeE(%"class.blink::Digestor"* nonnull %9, %"class.WTF::String"* nonnull dereferenceable(8) %243, i32 0) #13
  %342 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %242, align 8
  %343 = icmp eq %"class.WTF::StringImpl"* %342, null
  br i1 %343, label %357, label %344

344:                                              ; preds = %339
  %345 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %342, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %346 = load atomic i32, i32* %345 monotonic, align 4
  %347 = and i32 %346, 2
  %348 = icmp eq i32 %347, 0
  %349 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %342, i64 0, i32 0
  %350 = load i32, i32* %349, align 4
  br i1 %348, label %351, label %353

351:                                              ; preds = %344
  %352 = add i32 %350, -1
  store i32 %352, i32* %349, align 4
  br label %353

353:                                              ; preds = %351, %344
  %354 = phi i32 [ %352, %351 ], [ %350, %344 ]
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %356, label %357

356:                                              ; preds = %353
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %342) #13
  br label %357

357:                                              ; preds = %339, %353, %356
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %241) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %244) #13
  %358 = load %"class.blink::InspectorCSSAgent"*, %"class.blink::InspectorCSSAgent"** %198, align 8
  %359 = load %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)**, %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)*** %315, align 8
  %360 = getelementptr inbounds %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)*, %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)** %359, i64 25
  %361 = load %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)*, %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)** %360, align 8
  %362 = call %"class.blink::CSSStyleSheet"* %361(%"class.blink::CSSStyleDeclaration"* nonnull %312) #13
  %363 = call %"class.WTF::StringImpl"* @_ZN5blink17InspectorCSSAgent12StyleSheetIdEPNS_13CSSStyleSheetE(%"class.blink::InspectorCSSAgent"* %358, %"class.blink::CSSStyleSheet"* %362) #13
  store %"class.WTF::StringImpl"* %363, %"class.WTF::StringImpl"** %245, align 8
  %364 = call zeroext i1 @_ZN5blink8Digestor10UpdateUtf8ERKN3WTF6StringENS1_18UTF8ConversionModeE(%"class.blink::Digestor"* nonnull %9, %"class.WTF::String"* nonnull dereferenceable(8) %12, i32 0) #13
  %365 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %245, align 8
  %366 = icmp eq %"class.WTF::StringImpl"* %365, null
  br i1 %366, label %380, label %367

367:                                              ; preds = %357
  %368 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %365, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %369 = load atomic i32, i32* %368 monotonic, align 4
  %370 = and i32 %369, 2
  %371 = icmp eq i32 %370, 0
  %372 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %365, i64 0, i32 0
  %373 = load i32, i32* %372, align 4
  br i1 %371, label %374, label %376

374:                                              ; preds = %367
  %375 = add i32 %373, -1
  store i32 %375, i32* %372, align 4
  br label %376

376:                                              ; preds = %374, %367
  %377 = phi i32 [ %375, %374 ], [ %373, %367 ]
  %378 = icmp eq i32 %377, 0
  br i1 %378, label %379, label %380

379:                                              ; preds = %376
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %365) #13
  br label %380

380:                                              ; preds = %357, %376, %379
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %244) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %246) #13
  %381 = load %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)**, %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)*** %322, align 8
  %382 = getelementptr inbounds %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)*, %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)** %381, i64 9
  %383 = load %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)*, %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)** %382, align 8
  %384 = call %"class.blink::CSSRule"* %383(%"class.blink::CSSStyleDeclaration"* nonnull %312) #13
  %385 = bitcast %"class.blink::CSSRule"* %384 to %"class.blink::CSSStyleRule"*
  %386 = call %"class.WTF::StringImpl"* @_ZNK5blink12CSSStyleRule12selectorTextEv(%"class.blink::CSSStyleRule"* %385) #13
  store %"class.WTF::StringImpl"* %386, %"class.WTF::StringImpl"** %247, align 8
  %387 = call zeroext i1 @_ZN5blink8Digestor10UpdateUtf8ERKN3WTF6StringENS1_18UTF8ConversionModeE(%"class.blink::Digestor"* nonnull %9, %"class.WTF::String"* nonnull dereferenceable(8) %13, i32 0) #13
  %388 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %247, align 8
  %389 = icmp eq %"class.WTF::StringImpl"* %388, null
  br i1 %389, label %403, label %390

390:                                              ; preds = %380
  %391 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %388, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %392 = load atomic i32, i32* %391 monotonic, align 4
  %393 = and i32 %392, 2
  %394 = icmp eq i32 %393, 0
  %395 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %388, i64 0, i32 0
  %396 = load i32, i32* %395, align 4
  br i1 %394, label %397, label %399

397:                                              ; preds = %390
  %398 = add i32 %396, -1
  store i32 %398, i32* %395, align 4
  br label %399

399:                                              ; preds = %397, %390
  %400 = phi i32 [ %398, %397 ], [ %396, %390 ]
  %401 = icmp eq i32 %400, 0
  br i1 %401, label %402, label %403

402:                                              ; preds = %399
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %388) #13
  br label %403

403:                                              ; preds = %380, %399, %402
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %246) #13
  br label %404

404:                                              ; preds = %328, %321, %314, %309, %403
  %405 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %310, i64 1
  %406 = icmp eq %"class.blink::CSSPropertyName"* %405, %238
  br i1 %406, label %248, label %309
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorAnimationAgent15getPlaybackRateEPd(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorAnimationAgent"* nocapture readonly, double* nocapture) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %5, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %6, align 8
  %8 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %7) #13
  %9 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %8, i64 0, i32 131, i32 0, i32 0
  %10 = load %"class.blink::DocumentTimeline"*, %"class.blink::DocumentTimeline"** %9, align 8
  %11 = tail call double @_ZNK5blink16DocumentTimeline12PlaybackRateEv(%"class.blink::DocumentTimeline"* %10) #13
  store double %11, double* %2, align 8
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.blink::DocumentTimeline"* @_ZN5blink23InspectorAnimationAgent17ReferenceTimelineEv(%"class.blink::InspectorAnimationAgent"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %3, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %4, align 8
  %6 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %5) #13
  %7 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %6, i64 0, i32 131, i32 0, i32 0
  %8 = load %"class.blink::DocumentTimeline"*, %"class.blink::DocumentTimeline"** %7, align 8
  ret %"class.blink::DocumentTimeline"* %8
}

declare double @_ZNK5blink16DocumentTimeline12PlaybackRateEv(%"class.blink::DocumentTimeline"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink23InspectorAnimationAgent15getPlaybackRateEPd(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorAnimationAgent"* nocapture readonly, double* nocapture) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 -1, i32 10, i32 2
  %5 = getelementptr inbounds double, double* %4, i64 7
  %6 = bitcast double* %5 to %"class.blink::InspectedFrames"**
  %7 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %6, align 8, !noalias !5
  %8 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %7, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %8, align 8, !noalias !5
  %10 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %9) #13, !noalias !5
  %11 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %10, i64 0, i32 131, i32 0, i32 0
  %12 = load %"class.blink::DocumentTimeline"*, %"class.blink::DocumentTimeline"** %11, align 8, !noalias !5
  %13 = tail call double @_ZNK5blink16DocumentTimeline12PlaybackRateEv(%"class.blink::DocumentTimeline"* %12) #13, !noalias !5
  store double %13, double* %2, align 8, !noalias !5
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  ret void
}

declare { %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"* } @_ZN5blink15InspectedFrames5beginEv(%"class.blink::InspectedFrames"*) local_unnamed_addr #1

declare { %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"* } @_ZN5blink15InspectedFrames3endEv(%"class.blink::InspectedFrames"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink15InspectedFrames8IteratorneERKS1_(%"class.blink::InspectedFrames::Iterator"*, %"class.blink::InspectedFrames::Iterator"* dereferenceable(16)) local_unnamed_addr #1

declare %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"*) local_unnamed_addr #1

declare void @_ZN5blink16DocumentTimeline15SetPlaybackRateEd(%"class.blink::DocumentTimeline"*, double) local_unnamed_addr #1

declare dereferenceable(16) %"class.blink::InspectedFrames::Iterator"* @_ZN5blink15InspectedFrames8IteratorppEv(%"class.blink::InspectedFrames::Iterator"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink23InspectorAnimationAgent15setPlaybackRateEd(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorAnimationAgent"*, double) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 -1, i32 10, i32 2
  %5 = bitcast double* %4 to %"class.blink::InspectorAnimationAgent"*
  tail call void @_ZN5blink23InspectorAnimationAgent15setPlaybackRateEd(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorAnimationAgent"* %5, double %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorAnimationAgent14getCurrentTimeERKN3WTF6StringEPd(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorAnimationAgent"*, %"class.WTF::String"* dereferenceable(8), double* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.crdtp::DispatchResponse", align 8
  %7 = bitcast %"class.crdtp::DispatchResponse"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8)
  %9 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 4, i32 0, i32 0
  %10 = tail call %"struct.WTF::KeyValuePair.441"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.439"* %9, %"class.WTF::String"* dereferenceable(8) %2) #13, !noalias !8
  %11 = icmp eq %"struct.WTF::KeyValuePair.441"* %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %10, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.blink::Animation"*, %"class.blink::Animation"** %13, align 8
  %15 = icmp eq %"class.blink::Animation"* %14, null
  br i1 %15, label %16, label %28

16:                                               ; preds = %4, %12
  %17 = tail call i8* @_Znwm(i64 48) #15
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %17, i8** %18, align 8, !noalias !8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = bitcast i64* %19 to <2 x i64>*
  store <2 x i64> <i64 38, i64 -9223372036854775760>, <2 x i64>* %20, align 8, !noalias !8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %17, i8* align 1 getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i64 0, i64 0), i64 38, i1 false) #13
  %21 = getelementptr inbounds i8, i8* %17, i64 38
  store i8 0, i8* %21, align 1, !noalias !8
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %6, %"class.std::__1::basic_string"* nonnull %5) #13
  %22 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1, !noalias !8
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %16
  %27 = load i8*, i8** %18, align 8, !noalias !8
  call void @_ZdlPv(i8* %27) #15
  br label %29

28:                                               ; preds = %12
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* nonnull sret %6) #13
  br label %29

29:                                               ; preds = %16, %26, %28
  %30 = phi %"class.blink::Animation"* [ null, %26 ], [ null, %16 ], [ %14, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8)
  %31 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %40, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %32, i32* %35, align 8
  %36 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %37 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %38 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  %39 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false) #13
  br label %102

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 5, i32 0, i32 0
  %42 = call %"struct.WTF::KeyValuePair.441"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.439"* %41, %"class.WTF::String"* dereferenceable(8) %2) #13
  %43 = icmp eq %"struct.WTF::KeyValuePair.441"* %42, null
  br i1 %43, label %54, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %42, i64 0, i32 1, i32 0, i32 0
  %46 = load %"class.blink::Animation"*, %"class.blink::Animation"** %45, align 8
  %47 = icmp eq %"class.blink::Animation"* %46, null
  br i1 %47, label %54, label %48

48:                                               ; preds = %44
  %49 = call %"struct.WTF::KeyValuePair.441"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.439"* %41, %"class.WTF::String"* dereferenceable(8) %2) #13
  %50 = icmp eq %"struct.WTF::KeyValuePair.441"* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %49, i64 0, i32 1, i32 0, i32 0
  %53 = load %"class.blink::Animation"*, %"class.blink::Animation"** %52, align 8
  br label %54

54:                                               ; preds = %40, %51, %48, %44
  %55 = phi %"class.blink::Animation"* [ %30, %44 ], [ %53, %51 ], [ null, %48 ], [ %30, %40 ]
  store double 0x7FF8000000000000, double* %3, align 8
  %56 = call i32 @_ZNK5blink9Animation27CalculateAnimationPlayStateEv(%"class.blink::Animation"* %55) #13
  %57 = icmp eq i32 %56, 4
  br i1 %57, label %58, label %62

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.blink::Animation", %"class.blink::Animation"* %55, i64 0, i32 27
  %60 = load i8, i8* %59, align 4, !range !2
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %70, label %62

62:                                               ; preds = %54, %58
  %63 = getelementptr inbounds %"class.blink::Animation", %"class.blink::Animation"* %55, i64 0, i32 25, i32 0, i32 0
  %64 = load %"class.blink::AnimationTimeline"*, %"class.blink::AnimationTimeline"** %63, align 8
  %65 = bitcast %"class.blink::AnimationTimeline"* %64 to i1 (%"class.blink::AnimationTimeline"*)***
  %66 = load i1 (%"class.blink::AnimationTimeline"*)**, i1 (%"class.blink::AnimationTimeline"*)*** %65, align 8
  %67 = getelementptr inbounds i1 (%"class.blink::AnimationTimeline"*)*, i1 (%"class.blink::AnimationTimeline"*)** %66, i64 14
  %68 = load i1 (%"class.blink::AnimationTimeline"*)*, i1 (%"class.blink::AnimationTimeline"*)** %67, align 8
  %69 = call zeroext i1 %68(%"class.blink::AnimationTimeline"* %64) #13
  br i1 %69, label %77, label %70

70:                                               ; preds = %62, %58
  %71 = call { i8, double } @_ZNK5blink9Animation19CurrentTimeInternalEv(%"class.blink::Animation"* %55) #13
  %72 = extractvalue { i8, double } %71, 0
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %93, label %74

74:                                               ; preds = %70
  %75 = extractvalue { i8, double } %71, 1
  %76 = fmul double %75, 1.000000e+03
  store double %76, double* %3, align 8
  br label %93

77:                                               ; preds = %62
  %78 = getelementptr inbounds %"class.blink::Animation", %"class.blink::Animation"* %55, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %79 = load i8, i8* %78, align 8
  %80 = getelementptr inbounds %"class.blink::Animation", %"class.blink::Animation"* %55, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %81 = load double, double* %80, align 8
  %82 = icmp eq i8 %79, 0
  br i1 %82, label %93, label %83

83:                                               ; preds = %77
  %84 = load %"class.blink::AnimationTimeline"*, %"class.blink::AnimationTimeline"** %63, align 8
  %85 = call { i8, double } @_ZN5blink17AnimationTimeline11CurrentTimeEv(%"class.blink::AnimationTimeline"* %84) #13
  %86 = extractvalue { i8, double } %85, 0
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %93, label %88

88:                                               ; preds = %83
  %89 = extractvalue { i8, double } %85, 1
  %90 = fmul double %89, 1.000000e+03
  %91 = fmul double %81, 1.000000e+03
  %92 = fsub double %90, %91
  store double %92, double* %3, align 8
  br label %93

93:                                               ; preds = %70, %74, %88, %83, %77
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  %94 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %95 = bitcast %"class.std::__1::basic_string"* %94 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  call void @_ZdlPv(i8* %101) #15
  br label %102

102:                                              ; preds = %34, %93, %99
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorAnimationAgent15AssertAnimationERKN3WTF6StringERPNS_9AnimationE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorAnimationAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::Animation"** nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 4, i32 0, i32 0
  %7 = tail call %"struct.WTF::KeyValuePair.441"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.439"* %6, %"class.WTF::String"* dereferenceable(8) %2) #13
  %8 = icmp eq %"struct.WTF::KeyValuePair.441"* %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %4
  store %"class.blink::Animation"* null, %"class.blink::Animation"** %3, align 8
  br label %14

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %7, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.blink::Animation"*, %"class.blink::Animation"** %11, align 8
  store %"class.blink::Animation"* %12, %"class.blink::Animation"** %3, align 8
  %13 = icmp eq %"class.blink::Animation"* %12, null
  br i1 %13, label %14, label %26

14:                                               ; preds = %9, %10
  %15 = tail call i8* @_Znwm(i64 48) #15
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = bitcast i64* %17 to <2 x i64>*
  store <2 x i64> <i64 38, i64 -9223372036854775760>, <2 x i64>* %18, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %15, i8* align 1 getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i64 0, i64 0), i64 38, i1 false) #13
  %19 = getelementptr inbounds i8, i8* %15, i64 38
  store i8 0, i8* %19, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %5) #13
  %20 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %14
  %25 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %25) #15
  br label %27

26:                                               ; preds = %10
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  br label %27

27:                                               ; preds = %24, %14, %26
  ret void
}

declare { i8, double } @_ZN5blink17AnimationTimeline11CurrentTimeEv(%"class.blink::AnimationTimeline"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink23InspectorAnimationAgent14getCurrentTimeERKN3WTF6StringEPd(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorAnimationAgent"*, %"class.WTF::String"* dereferenceable(8), double* nocapture) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 -1, i32 10, i32 2
  %6 = bitcast double* %5 to %"class.blink::InspectorAnimationAgent"*
  tail call void @_ZN5blink23InspectorAnimationAgent14getCurrentTimeERKN3WTF6StringEPd(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorAnimationAgent"* %6, %"class.WTF::String"* dereferenceable(8) %2, double* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorAnimationAgent9setPausedENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEEb(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorAnimationAgent"*, %"class.std::__1::vector.2149"*, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.crdtp::DispatchResponse", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.2149", %"class.std::__1::vector.2149"* %2, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::String"*, %"class.WTF::String"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.2149", %"class.std::__1::vector.2149"* %2, i64 0, i32 0, i32 1
  %12 = load %"class.WTF::String"*, %"class.WTF::String"** %11, align 8
  %13 = icmp eq %"class.WTF::String"* %10, %12
  br i1 %13, label %142, label %14

14:                                               ; preds = %4
  %15 = bitcast %"class.crdtp::DispatchResponse"* %6 to i8*
  %16 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %17 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 4, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 0
  %23 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  %24 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %25 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %26 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  %27 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %28 = bitcast %"class.blink::DummyExceptionStateForTesting"* %8 to i8*
  %29 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 1, i32 0
  %31 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 1, i32 1
  %32 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 1, i32 2
  %33 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 5, i32 0, i32 0
  %34 = bitcast %"class.WTF::StringImpl"** %33 to i8*
  %35 = bitcast i8** %32 to i8*
  %36 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = bitcast i64* %19 to <2 x i64>*
  %45 = bitcast i64* %38 to <2 x i64>*
  br label %48

46:                                               ; preds = %139
  %47 = icmp eq %"class.WTF::String"* %141, %12
  br i1 %47, label %142, label %48

48:                                               ; preds = %14, %46
  %49 = phi %"class.WTF::String"* [ %10, %14 ], [ %141, %46 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16)
  %50 = call %"struct.WTF::KeyValuePair.441"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.439"* %17, %"class.WTF::String"* dereferenceable(8) %49) #13, !noalias !11
  %51 = icmp eq %"struct.WTF::KeyValuePair.441"* %50, null
  br i1 %51, label %56, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %50, i64 0, i32 1, i32 0, i32 0
  %54 = load %"class.blink::Animation"*, %"class.blink::Animation"** %53, align 8
  %55 = icmp eq %"class.blink::Animation"* %54, null
  br i1 %55, label %56, label %63

56:                                               ; preds = %48, %52
  %57 = call i8* @_Znwm(i64 48) #15
  store i8* %57, i8** %18, align 8, !noalias !11
  store <2 x i64> <i64 38, i64 -9223372036854775760>, <2 x i64>* %44, align 8, !noalias !11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %57, i8* align 1 getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i64 0, i64 0), i64 38, i1 false) #13
  %58 = getelementptr inbounds i8, i8* %57, i64 38
  store i8 0, i8* %58, align 1, !noalias !11
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %6, %"class.std::__1::basic_string"* nonnull %5) #13
  %59 = load i8, i8* %21, align 1, !noalias !11
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %56
  %62 = load i8*, i8** %18, align 8, !noalias !11
  call void @_ZdlPv(i8* %62) #15
  br label %64

63:                                               ; preds = %52
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* nonnull sret %6) #13
  br label %64

64:                                               ; preds = %56, %61, %63
  %65 = phi %"class.blink::Animation"* [ null, %61 ], [ null, %56 ], [ %54, %63 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16)
  %66 = load i32, i32* %22, align 8
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %69, label %68

68:                                               ; preds = %64
  store i32 %66, i32* %23, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #13
  br label %133

69:                                               ; preds = %64
  %70 = call %"class.blink::Animation"* @_ZN5blink23InspectorAnimationAgent14AnimationCloneEPNS_9AnimationE(%"class.blink::InspectorAnimationAgent"* %1, %"class.blink::Animation"* %65)
  %71 = icmp eq %"class.blink::Animation"* %70, null
  br i1 %71, label %72, label %79

72:                                               ; preds = %69
  %73 = call i8* @_Znwm(i64 48) #15
  store i8* %73, i8** %37, align 8
  store <2 x i64> <i64 34, i64 -9223372036854775760>, <2 x i64>* %45, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %73, i8* align 1 getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0), i64 34, i1 false) #13
  %74 = getelementptr inbounds i8, i8* %73, i64 34
  store i8 0, i8* %74, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %7) #13
  %75 = load i8, i8* %40, align 1
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %77, label %133

77:                                               ; preds = %72
  %78 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %78) #15
  br label %133

79:                                               ; preds = %69
  %80 = call i32 @_ZNK5blink9Animation27CalculateAnimationPlayStateEv(%"class.blink::Animation"* nonnull %70) #13
  %81 = icmp eq i32 %80, 4
  br i1 %3, label %82, label %127

82:                                               ; preds = %79
  br i1 %81, label %83, label %87

83:                                               ; preds = %82
  %84 = getelementptr inbounds %"class.blink::Animation", %"class.blink::Animation"* %70, i64 0, i32 27
  %85 = load i8, i8* %84, align 4, !range !2
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %133, label %87

87:                                               ; preds = %82, %83
  %88 = getelementptr inbounds %"class.blink::Animation", %"class.blink::Animation"* %70, i64 0, i32 25, i32 0, i32 0
  %89 = load %"class.blink::AnimationTimeline"*, %"class.blink::AnimationTimeline"** %88, align 8
  %90 = bitcast %"class.blink::AnimationTimeline"* %89 to i1 (%"class.blink::AnimationTimeline"*)***
  %91 = load i1 (%"class.blink::AnimationTimeline"*)**, i1 (%"class.blink::AnimationTimeline"*)*** %90, align 8
  %92 = getelementptr inbounds i1 (%"class.blink::AnimationTimeline"*)*, i1 (%"class.blink::AnimationTimeline"*)** %91, i64 14
  %93 = load i1 (%"class.blink::AnimationTimeline"*)*, i1 (%"class.blink::AnimationTimeline"*)** %92, align 8
  %94 = call zeroext i1 %93(%"class.blink::AnimationTimeline"* %89) #13
  br i1 %94, label %100, label %95

95:                                               ; preds = %87
  %96 = call { i8, double } @_ZNK5blink9Animation19CurrentTimeInternalEv(%"class.blink::Animation"* nonnull %70) #13
  %97 = extractvalue { i8, double } %96, 0
  %98 = extractvalue { i8, double } %96, 1
  %99 = bitcast double %98 to i64
  br label %116

100:                                              ; preds = %87
  %101 = getelementptr inbounds %"class.blink::Animation", %"class.blink::Animation"* %70, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %102 = load i8, i8* %101, align 8
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %116, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::Animation", %"class.blink::Animation"* %70, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %106 = load double, double* %105, align 8
  %107 = load %"class.blink::AnimationTimeline"*, %"class.blink::AnimationTimeline"** %88, align 8
  %108 = call { i8, double } @_ZN5blink17AnimationTimeline11CurrentTimeEv(%"class.blink::AnimationTimeline"* %107) #13
  %109 = extractvalue { i8, double } %108, 0
  %110 = extractvalue { i8, double } %108, 1
  %111 = icmp ne i8 %109, 0
  %112 = fsub double %110, %106
  %113 = bitcast double %112 to i64
  %114 = select i1 %111, i64 %113, i64 -1
  %115 = zext i1 %111 to i8
  br label %116

116:                                              ; preds = %104, %100, %95
  %117 = phi i64 [ %99, %95 ], [ %114, %104 ], [ -1, %100 ]
  %118 = phi i8 [ %97, %95 ], [ %115, %104 ], [ 0, %100 ]
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %28) #13
  store i16 1, i16* %30, align 8
  store i16 0, i16* %31, align 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 16, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 36, i1 false) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  %119 = bitcast %"class.blink::Animation"* %70 to void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)***
  %120 = load void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)**, void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)*** %119, align 8
  %121 = getelementptr inbounds void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)** %120, i64 37
  %122 = load void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)** %121, align 8
  call void %122(%"class.blink::Animation"* nonnull %70, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %36) #13
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %28) #13
  %123 = icmp eq i8 %118, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %116
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #16
  unreachable

125:                                              ; preds = %116
  %126 = bitcast i64 %117 to double
  call void @_ZN5blink9Animation22SetCurrentTimeInternalENS_18AnimationTimeDeltaE(%"class.blink::Animation"* nonnull %70, double %126) #13
  br label %133

127:                                              ; preds = %79
  br i1 %81, label %128, label %133

128:                                              ; preds = %127
  %129 = getelementptr inbounds %"class.blink::Animation", %"class.blink::Animation"* %70, i64 0, i32 27
  %130 = load i8, i8* %129, align 4, !range !2
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %132, label %133

132:                                              ; preds = %128
  call void @_ZN5blink9Animation7UnpauseEv(%"class.blink::Animation"* nonnull %70) #13
  br label %133

133:                                              ; preds = %127, %83, %77, %72, %128, %132, %125, %68
  %134 = phi i32 [ 1, %68 ], [ 0, %128 ], [ 0, %132 ], [ 0, %125 ], [ 1, %72 ], [ 1, %77 ], [ 0, %83 ], [ 0, %127 ]
  %135 = load i8, i8* %42, align 1
  %136 = icmp slt i8 %135, 0
  br i1 %136, label %137, label %139

137:                                              ; preds = %133
  %138 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %138) #15
  br label %139

139:                                              ; preds = %133, %137
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #13
  %140 = icmp eq i32 %134, 0
  %141 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 1
  br i1 %140, label %46, label %143

142:                                              ; preds = %46, %4
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  br label %143

143:                                              ; preds = %139, %142
  %144 = icmp eq %"class.std::__1::vector.2149"* %2, null
  br i1 %144, label %180, label %145

145:                                              ; preds = %143
  %146 = load %"class.WTF::String"*, %"class.WTF::String"** %9, align 8
  %147 = icmp eq %"class.WTF::String"* %146, null
  br i1 %147, label %178, label %148

148:                                              ; preds = %145
  %149 = bitcast %"class.WTF::String"* %146 to i8*
  %150 = load %"class.WTF::String"*, %"class.WTF::String"** %11, align 8
  %151 = icmp eq %"class.WTF::String"* %150, %146
  br i1 %151, label %176, label %152

152:                                              ; preds = %148, %171
  %153 = phi %"class.WTF::String"* [ %154, %171 ], [ %150, %148 ]
  %154 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %153, i64 -1
  %155 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %154, i64 0, i32 0, i32 0
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %155, align 8
  %157 = icmp eq %"class.WTF::StringImpl"* %156, null
  br i1 %157, label %171, label %158

158:                                              ; preds = %152
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  br i1 %162, label %165, label %167

165:                                              ; preds = %158
  %166 = add i32 %164, -1
  store i32 %166, i32* %163, align 4
  br label %167

167:                                              ; preds = %165, %158
  %168 = phi i32 [ %166, %165 ], [ %164, %158 ]
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %167
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %156) #13
  br label %171

171:                                              ; preds = %170, %167, %152
  %172 = icmp eq %"class.WTF::String"* %154, %146
  br i1 %172, label %173, label %152

173:                                              ; preds = %171
  %174 = bitcast %"class.std::__1::vector.2149"* %2 to i8**
  %175 = load i8*, i8** %174, align 8
  br label %176

176:                                              ; preds = %173, %148
  %177 = phi i8* [ %175, %173 ], [ %149, %148 ]
  store %"class.WTF::String"* %146, %"class.WTF::String"** %11, align 8
  call void @_ZdlPv(i8* %177) #15
  br label %178

178:                                              ; preds = %176, %145
  %179 = bitcast %"class.std::__1::vector.2149"* %2 to i8*
  call void @_ZdlPv(i8* %179) #15
  br label %180

180:                                              ; preds = %143, %178
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Animation"* @_ZN5blink23InspectorAnimationAgent14AnimationCloneEPNS_9AnimationE(%"class.blink::InspectorAnimationAgent"*, %"class.blink::Animation"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %4 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.blink::HeapVector.2059", align 8
  %7 = alloca %"class.blink::HeapVector.2162", align 8
  %8 = alloca %"class.blink::HeapVector.2059", align 8
  %9 = alloca %"class.blink::HeapVector.2202", align 8
  %10 = alloca %"class.blink::Animation"*, align 8
  %11 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %14 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %15 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #13
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %16, align 8
  %17 = bitcast %"class.blink::Animation"* %1 to i32 (%"class.blink::Animation"*)***
  %18 = load i32 (%"class.blink::Animation"*)**, i32 (%"class.blink::Animation"*)*** %17, align 8
  %19 = getelementptr inbounds i32 (%"class.blink::Animation"*)*, i32 (%"class.blink::Animation"*)** %18, i64 45
  %20 = load i32 (%"class.blink::Animation"*)*, i32 (%"class.blink::Animation"*)** %19, align 8
  %21 = tail call i32 %20(%"class.blink::Animation"* %1) #13
  %22 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #13
  %23 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 11
  %24 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 2
  %25 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 3
  %26 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 32, i1 false) #13
  store i8* %23, i8** %24, align 8
  %27 = urem i32 %21, 10
  %28 = udiv i32 %21, 10
  %29 = trunc i32 %27 to i8
  %30 = or i8 %29, 48
  store i8 %30, i8* %23, align 1
  %31 = icmp ugt i32 %21, 9
  br i1 %31, label %32, label %47

32:                                               ; preds = %2
  %33 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 10
  store i8* %33, i8** %24, align 8
  %34 = urem i32 %28, 10
  %35 = trunc i32 %34 to i8
  %36 = or i8 %35, 48
  store i8 %36, i8* %33, align 2
  %37 = icmp ugt i32 %21, 99
  br i1 %37, label %38, label %45

38:                                               ; preds = %32
  %39 = udiv i32 %21, 100
  %40 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 9
  store i8* %40, i8** %24, align 8
  %41 = urem i32 %39, 10
  %42 = trunc i32 %41 to i8
  %43 = or i8 %42, 48
  store i8 %43, i8* %40, align 1
  %44 = icmp ugt i32 %21, 999
  br i1 %44, label %49, label %58

45:                                               ; preds = %32
  %46 = ptrtoint i8* %33 to i64
  br label %61

47:                                               ; preds = %2
  %48 = ptrtoint i8* %23 to i64
  br label %61

49:                                               ; preds = %38, %49
  %50 = phi i32 [ %52, %49 ], [ %39, %38 ]
  %51 = load i8*, i8** %24, align 8
  %52 = udiv i32 %50, 10
  %53 = getelementptr inbounds i8, i8* %51, i64 -1
  store i8* %53, i8** %24, align 8
  %54 = urem i32 %52, 10
  %55 = trunc i32 %54 to i8
  %56 = or i8 %55, 48
  store i8 %56, i8* %53, align 1
  %57 = icmp ugt i32 %50, 99
  br i1 %57, label %49, label %58

58:                                               ; preds = %49, %38
  %59 = bitcast i8** %24 to i64*
  %60 = load i64, i64* %59, align 8
  br label %61

61:                                               ; preds = %58, %45, %47
  %62 = phi i64 [ %48, %47 ], [ %60, %58 ], [ %46, %45 ]
  %63 = ptrtoint i8* %26 to i64
  %64 = sub i64 %63, %62
  %65 = trunc i64 %64 to i32
  store i32 %65, i32* %25, align 8
  %66 = inttoptr i64 %62 to i8*
  %67 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %66, i32 %65) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #13
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %16, align 8
  %68 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 5, i32 0, i32 0
  %69 = call %"struct.WTF::KeyValuePair.441"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.439"* %68, %"class.WTF::String"* nonnull dereferenceable(8) %5) #13
  %70 = icmp eq %"struct.WTF::KeyValuePair.441"* %69, null
  br i1 %70, label %75, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %69, i64 0, i32 1, i32 0, i32 0
  %73 = load %"class.blink::Animation"*, %"class.blink::Animation"** %72, align 8
  %74 = icmp eq %"class.blink::Animation"* %73, null
  br i1 %74, label %75, label %402

75:                                               ; preds = %61, %71
  %76 = getelementptr inbounds %"class.blink::Animation", %"class.blink::Animation"* %1, i64 0, i32 23, i32 0, i32 0
  %77 = bitcast %"class.blink::AnimationEffect"** %76 to %"class.blink::KeyframeEffect"**
  %78 = load %"class.blink::KeyframeEffect"*, %"class.blink::KeyframeEffect"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::KeyframeEffect", %"class.blink::KeyframeEffect"* %78, i64 0, i32 4, i32 0, i32 0
  %80 = load %"class.blink::KeyframeEffectModelBase"*, %"class.blink::KeyframeEffectModelBase"** %79, align 8
  %81 = bitcast %"class.blink::KeyframeEffectModelBase"* %80 to i1 (%"class.blink::KeyframeEffectModelBase"*)***
  %82 = load i1 (%"class.blink::KeyframeEffectModelBase"*)**, i1 (%"class.blink::KeyframeEffectModelBase"*)*** %81, align 8
  %83 = getelementptr inbounds i1 (%"class.blink::KeyframeEffectModelBase"*)*, i1 (%"class.blink::KeyframeEffectModelBase"*)** %82, i64 9
  %84 = load i1 (%"class.blink::KeyframeEffectModelBase"*)*, i1 (%"class.blink::KeyframeEffectModelBase"*)** %83, align 8
  %85 = call zeroext i1 %84(%"class.blink::KeyframeEffectModelBase"* %80) #13
  br i1 %85, label %86, label %158

86:                                               ; preds = %75
  %87 = bitcast %"class.blink::HeapVector.2059"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #13
  %88 = getelementptr inbounds %"class.blink::HeapVector.2059", %"class.blink::HeapVector.2059"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %89 = getelementptr inbounds %"class.blink::HeapVector.2059", %"class.blink::HeapVector.2059"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %90 = getelementptr inbounds %"class.blink::HeapVector.2059", %"class.blink::HeapVector.2059"* %6, i64 0, i32 0
  %91 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %80, i64 0, i32 1, i32 0
  %92 = bitcast %"class.blink::HeapVector.2059"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %92, i8 -86, i64 16, i1 false)
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.2062"* nonnull %90, %"class.WTF::Vector.2062"* dereferenceable(16) %91) #13
  %93 = bitcast %"class.blink::HeapVector.2162"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %93) #13
  %94 = getelementptr inbounds %"class.blink::HeapVector.2162", %"class.blink::HeapVector.2162"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %95 = getelementptr inbounds %"class.blink::HeapVector.2162", %"class.blink::HeapVector.2162"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %96 = getelementptr inbounds %"class.blink::HeapVector.2162", %"class.blink::HeapVector.2162"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 0, i64 16, i1 false) #13
  %97 = load %"class.blink::Member.2065"*, %"class.blink::Member.2065"** %88, align 8
  %98 = load i32, i32* %89, align 4
  %99 = zext i32 %98 to i64
  %100 = getelementptr inbounds %"class.blink::Member.2065", %"class.blink::Member.2065"* %97, i64 %99
  %101 = icmp eq i32 %98, 0
  br i1 %101, label %104, label %102

102:                                              ; preds = %86
  %103 = getelementptr inbounds %"class.blink::HeapVector.2162", %"class.blink::HeapVector.2162"* %7, i64 0, i32 0
  br label %130

104:                                              ; preds = %152, %86
  %105 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_11EffectModelEEEPhm(i64 88) #13
  %106 = bitcast i8* %105 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink23KeyframeEffectModelBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %106, align 8
  %107 = getelementptr inbounds i8, i8* %105, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 24, i1 false) #13
  %108 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_19InterpolationEffectEEEPhm(i64 24) #13
  store i8 0, i8* %108, align 8
  %109 = getelementptr inbounds i8, i8* %108, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 16, i1 false) #13
  %110 = getelementptr inbounds i8, i8* %108, i64 -4
  %111 = bitcast i8* %110 to i16*
  %112 = load atomic i16, i16* %111 monotonic, align 2
  %113 = or i16 %112, 1
  store atomic i16 %113, i16* %111 release, align 2
  %114 = getelementptr inbounds i8, i8* %105, i64 32
  %115 = bitcast i8* %114 to i8**
  store i8* %108, i8** %115, align 8
  %116 = getelementptr inbounds i8, i8* %105, i64 40
  %117 = bitcast i8* %116 to i32*
  store i32 0, i32* %117, align 8
  %118 = getelementptr inbounds i8, i8* %105, i64 48
  %119 = bitcast i8* %118 to <2 x double>*
  store <2 x double> <double 0x7FF8000000000000, double 0.000000e+00>, <2 x double>* %119, align 8
  %120 = getelementptr inbounds i8, i8* %105, i64 64
  %121 = bitcast i8* %120 to i32*
  store i32 0, i32* %121, align 8
  %122 = getelementptr inbounds i8, i8* %105, i64 72
  %123 = bitcast i8* %122 to i64*
  store i64 0, i64* %123, align 8
  %124 = getelementptr inbounds i8, i8* %105, i64 80
  store i8 0, i8* %124, align 8
  %125 = getelementptr inbounds i8, i8* %105, i64 81
  store i8 1, i8* %125, align 1
  %126 = getelementptr inbounds i8, i8* %105, i64 82
  store i8 0, i8* %126, align 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink19KeyframeEffectModelINS_14StringKeyframeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %106, align 8
  %127 = bitcast i8* %107 to %"class.WTF::Vector.2062"*
  %128 = load %"class.blink::Member.2168"*, %"class.blink::Member.2168"** %94, align 8
  %129 = load i32, i32* %96, align 4
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE6AppendINS2_INS1_14StringKeyframeEEEEEvPKT_j(%"class.WTF::Vector.2062"* %127, %"class.blink::Member.2168"* %128, i32 %129) #13
  br label %235

130:                                              ; preds = %155, %102
  %131 = phi i32 [ 0, %102 ], [ %157, %155 ]
  %132 = phi i32 [ 0, %102 ], [ %156, %155 ]
  %133 = phi %"class.blink::Member.2065"* [ %97, %102 ], [ %153, %155 ]
  %134 = bitcast %"class.blink::Member.2065"* %133 to %"class.blink::StringKeyframe"**
  %135 = load %"class.blink::StringKeyframe"*, %"class.blink::StringKeyframe"** %134, align 8
  %136 = icmp eq i32 %132, %131
  br i1 %136, label %151, label %137, !prof !3

137:                                              ; preds = %130
  %138 = load %"class.blink::Member.2168"*, %"class.blink::Member.2168"** %94, align 8
  %139 = zext i32 %132 to i64
  %140 = getelementptr inbounds %"class.blink::Member.2168", %"class.blink::Member.2168"* %138, i64 %139
  %141 = ptrtoint %"class.blink::StringKeyframe"* %135 to i64
  %142 = bitcast %"class.blink::Member.2168"* %140 to i64*
  store atomic i64 %141, i64* %142 monotonic, align 8
  %143 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %148, label %145

145:                                              ; preds = %137
  %146 = bitcast %"class.blink::StringKeyframe"* %135 to i8*
  %147 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %146) #13
  br label %148

148:                                              ; preds = %145, %137
  %149 = load i32, i32* %96, align 4
  %150 = add i32 %149, 1
  store i32 %150, i32* %96, align 4
  br label %152

151:                                              ; preds = %130
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.2165"* nonnull %103, %"class.blink::StringKeyframe"* dereferenceable(112) %135) #13
  br label %152

152:                                              ; preds = %148, %151
  %153 = getelementptr inbounds %"class.blink::Member.2065", %"class.blink::Member.2065"* %133, i64 1
  %154 = icmp eq %"class.blink::Member.2065"* %153, %100
  br i1 %154, label %104, label %155

155:                                              ; preds = %152
  %156 = load i32, i32* %96, align 4
  %157 = load i32, i32* %95, align 8
  br label %130

158:                                              ; preds = %75
  %159 = load i1 (%"class.blink::KeyframeEffectModelBase"*)**, i1 (%"class.blink::KeyframeEffectModelBase"*)*** %81, align 8
  %160 = getelementptr inbounds i1 (%"class.blink::KeyframeEffectModelBase"*)*, i1 (%"class.blink::KeyframeEffectModelBase"*)** %159, i64 10
  %161 = load i1 (%"class.blink::KeyframeEffectModelBase"*)*, i1 (%"class.blink::KeyframeEffectModelBase"*)** %160, align 8
  %162 = call zeroext i1 %161(%"class.blink::KeyframeEffectModelBase"* %80) #13
  br i1 %162, label %163, label %244

163:                                              ; preds = %158
  %164 = bitcast %"class.blink::HeapVector.2059"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %164) #13
  %165 = getelementptr inbounds %"class.blink::HeapVector.2059", %"class.blink::HeapVector.2059"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %166 = getelementptr inbounds %"class.blink::HeapVector.2059", %"class.blink::HeapVector.2059"* %8, i64 0, i32 0, i32 0, i32 0, i32 2
  %167 = getelementptr inbounds %"class.blink::HeapVector.2059", %"class.blink::HeapVector.2059"* %8, i64 0, i32 0
  %168 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %80, i64 0, i32 1, i32 0
  %169 = bitcast %"class.blink::HeapVector.2059"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %169, i8 -86, i64 16, i1 false)
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.2062"* nonnull %167, %"class.WTF::Vector.2062"* dereferenceable(16) %168) #13
  %170 = bitcast %"class.blink::HeapVector.2202"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %170) #13
  %171 = getelementptr inbounds %"class.blink::HeapVector.2202", %"class.blink::HeapVector.2202"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %172 = getelementptr inbounds %"class.blink::HeapVector.2202", %"class.blink::HeapVector.2202"* %9, i64 0, i32 0, i32 0, i32 0, i32 1
  %173 = getelementptr inbounds %"class.blink::HeapVector.2202", %"class.blink::HeapVector.2202"* %9, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %170, i8 0, i64 16, i1 false) #13
  %174 = load %"class.blink::Member.2065"*, %"class.blink::Member.2065"** %165, align 8
  %175 = load i32, i32* %166, align 4
  %176 = zext i32 %175 to i64
  %177 = getelementptr inbounds %"class.blink::Member.2065", %"class.blink::Member.2065"* %174, i64 %176
  %178 = icmp eq i32 %175, 0
  br i1 %178, label %181, label %179

179:                                              ; preds = %163
  %180 = getelementptr inbounds %"class.blink::HeapVector.2202", %"class.blink::HeapVector.2202"* %9, i64 0, i32 0
  br label %207

181:                                              ; preds = %229, %163
  %182 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_11EffectModelEEEPhm(i64 88) #13
  %183 = bitcast i8* %182 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink23KeyframeEffectModelBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %183, align 8
  %184 = getelementptr inbounds i8, i8* %182, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %184, i8 0, i64 24, i1 false) #13
  %185 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_19InterpolationEffectEEEPhm(i64 24) #13
  store i8 0, i8* %185, align 8
  %186 = getelementptr inbounds i8, i8* %185, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %186, i8 0, i64 16, i1 false) #13
  %187 = getelementptr inbounds i8, i8* %185, i64 -4
  %188 = bitcast i8* %187 to i16*
  %189 = load atomic i16, i16* %188 monotonic, align 2
  %190 = or i16 %189, 1
  store atomic i16 %190, i16* %188 release, align 2
  %191 = getelementptr inbounds i8, i8* %182, i64 32
  %192 = bitcast i8* %191 to i8**
  store i8* %185, i8** %192, align 8
  %193 = getelementptr inbounds i8, i8* %182, i64 40
  %194 = bitcast i8* %193 to i32*
  store i32 0, i32* %194, align 8
  %195 = getelementptr inbounds i8, i8* %182, i64 48
  %196 = bitcast i8* %195 to <2 x double>*
  store <2 x double> <double 0x7FF8000000000000, double 0.000000e+00>, <2 x double>* %196, align 8
  %197 = getelementptr inbounds i8, i8* %182, i64 64
  %198 = bitcast i8* %197 to i32*
  store i32 0, i32* %198, align 8
  %199 = getelementptr inbounds i8, i8* %182, i64 72
  %200 = bitcast i8* %199 to i64*
  store i64 0, i64* %200, align 8
  %201 = getelementptr inbounds i8, i8* %182, i64 80
  store i8 0, i8* %201, align 8
  %202 = getelementptr inbounds i8, i8* %182, i64 81
  store i8 1, i8* %202, align 1
  %203 = getelementptr inbounds i8, i8* %182, i64 82
  store i8 0, i8* %203, align 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink19KeyframeEffectModelINS_18TransitionKeyframeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %183, align 8
  %204 = bitcast i8* %184 to %"class.WTF::Vector.2062"*
  %205 = load %"class.blink::Member.2208"*, %"class.blink::Member.2208"** %171, align 8
  %206 = load i32, i32* %173, align 4
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE6AppendINS2_INS1_18TransitionKeyframeEEEEEvPKT_j(%"class.WTF::Vector.2062"* %204, %"class.blink::Member.2208"* %205, i32 %206) #13
  br label %235

207:                                              ; preds = %232, %179
  %208 = phi i32 [ 0, %179 ], [ %234, %232 ]
  %209 = phi i32 [ 0, %179 ], [ %233, %232 ]
  %210 = phi %"class.blink::Member.2065"* [ %174, %179 ], [ %230, %232 ]
  %211 = bitcast %"class.blink::Member.2065"* %210 to %"class.blink::TransitionKeyframe"**
  %212 = load %"class.blink::TransitionKeyframe"*, %"class.blink::TransitionKeyframe"** %211, align 8
  %213 = icmp eq i32 %209, %208
  br i1 %213, label %228, label %214, !prof !3

214:                                              ; preds = %207
  %215 = load %"class.blink::Member.2208"*, %"class.blink::Member.2208"** %171, align 8
  %216 = zext i32 %209 to i64
  %217 = getelementptr inbounds %"class.blink::Member.2208", %"class.blink::Member.2208"* %215, i64 %216
  %218 = ptrtoint %"class.blink::TransitionKeyframe"* %212 to i64
  %219 = bitcast %"class.blink::Member.2208"* %217 to i64*
  store atomic i64 %218, i64* %219 monotonic, align 8
  %220 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %225, label %222

222:                                              ; preds = %214
  %223 = bitcast %"class.blink::TransitionKeyframe"* %212 to i8*
  %224 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %223) #13
  br label %225

225:                                              ; preds = %222, %214
  %226 = load i32, i32* %173, align 4
  %227 = add i32 %226, 1
  store i32 %227, i32* %173, align 4
  br label %229

228:                                              ; preds = %207
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_18TransitionKeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.2205"* nonnull %180, %"class.blink::TransitionKeyframe"* dereferenceable(80) %212) #13
  br label %229

229:                                              ; preds = %225, %228
  %230 = getelementptr inbounds %"class.blink::Member.2065", %"class.blink::Member.2065"* %210, i64 1
  %231 = icmp eq %"class.blink::Member.2065"* %230, %177
  br i1 %231, label %181, label %232

232:                                              ; preds = %229
  %233 = load i32, i32* %173, align 4
  %234 = load i32, i32* %172, align 8
  br label %207

235:                                              ; preds = %104, %181
  %236 = phi i8* [ %105, %104 ], [ %182, %181 ]
  %237 = phi i8* [ %93, %104 ], [ %170, %181 ]
  %238 = phi i8* [ %87, %104 ], [ %164, %181 ]
  %239 = getelementptr inbounds i8, i8* %236, i64 -4
  %240 = bitcast i8* %239 to i16*
  %241 = load atomic i16, i16* %240 monotonic, align 2
  %242 = or i16 %241, 1
  store atomic i16 %242, i16* %240 release, align 2
  %243 = bitcast i8* %236 to %"class.blink::KeyframeEffectModelBase"*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %237) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %238) #13
  br label %244

244:                                              ; preds = %235, %158
  %245 = phi %"class.blink::KeyframeEffectModelBase"* [ null, %158 ], [ %243, %235 ]
  %246 = getelementptr inbounds %"class.blink::KeyframeEffect", %"class.blink::KeyframeEffect"* %78, i64 0, i32 1, i32 0, i32 0
  %247 = load %"class.blink::Element"*, %"class.blink::Element"** %246, align 8
  %248 = getelementptr inbounds %"class.blink::KeyframeEffect", %"class.blink::KeyframeEffect"* %78, i64 0, i32 0, i32 2
  %249 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 320) #13
  %250 = bitcast i8* %249 to %"class.blink::KeyframeEffect"*
  call void @_ZN5blink14KeyframeEffectC1EPNS_7ElementEPNS_23KeyframeEffectModelBaseERKNS_6TimingENS0_8PriorityEPNS_15AnimationEffect13EventDelegateE(%"class.blink::KeyframeEffect"* %250, %"class.blink::Element"* %247, %"class.blink::KeyframeEffectModelBase"* %245, %"struct.blink::Timing"* dereferenceable(80) %248, i32 0, %"class.blink::AnimationEffect::EventDelegate"* null) #13
  %251 = getelementptr inbounds i8, i8* %249, i64 -4
  %252 = bitcast i8* %251 to i16*
  %253 = load atomic i16, i16* %252 monotonic, align 2
  %254 = or i16 %253, 1
  store atomic i16 %254, i16* %252 release, align 2
  %255 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 6
  store i8 1, i8* %255, align 8
  %256 = bitcast %"class.blink::Animation"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %256) #13
  %257 = bitcast i8* %249 to %"class.blink::AnimationEffect"*
  %258 = getelementptr inbounds %"class.blink::Animation", %"class.blink::Animation"* %1, i64 0, i32 25, i32 0, i32 0
  %259 = load %"class.blink::AnimationTimeline"*, %"class.blink::AnimationTimeline"** %258, align 8
  %260 = bitcast %"class.blink::DummyExceptionStateForTesting"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %260) #13
  %261 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 0
  %262 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %262, align 8
  %263 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %263, align 2
  %264 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 1, i32 2
  %265 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 5, i32 0, i32 0
  %266 = bitcast %"class.WTF::StringImpl"** %265 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %266, i8 0, i64 16, i1 false) #13
  %267 = bitcast i8** %264 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %267, i8 0, i64 36, i1 false) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %261, align 8
  %268 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0
  %269 = call %"class.blink::Animation"* @_ZN5blink9Animation6CreateEPNS_15AnimationEffectEPNS_17AnimationTimelineERNS_14ExceptionStateE(%"class.blink::AnimationEffect"* %257, %"class.blink::AnimationTimeline"* %259, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %268) #13
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %260) #13
  store %"class.blink::Animation"* %269, %"class.blink::Animation"** %10, align 8
  store i8 0, i8* %255, align 8
  %270 = call { %"struct.WTF::KeyValuePair.441"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS1_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.439"* %68, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.blink::Animation"** nonnull dereferenceable(8) %10) #13
  %271 = extractvalue { %"struct.WTF::KeyValuePair.441"*, i8 } %270, 1
  %272 = and i8 %271, 1
  %273 = icmp eq i8 %272, 0
  br i1 %273, label %274, label %285

274:                                              ; preds = %244
  %275 = extractvalue { %"struct.WTF::KeyValuePair.441"*, i8 } %270, 0
  %276 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %275, i64 0, i32 1
  %277 = load %"class.blink::Animation"*, %"class.blink::Animation"** %10, align 8
  %278 = ptrtoint %"class.blink::Animation"* %277 to i64
  %279 = bitcast %"class.blink::Member.442"* %276 to i64*
  store atomic i64 %278, i64* %279 monotonic, align 8
  %280 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %285, label %282

282:                                              ; preds = %274
  %283 = bitcast %"class.blink::Animation"* %277 to i8*
  %284 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %283) #13
  br label %285

285:                                              ; preds = %244, %274, %282
  %286 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %286) #13
  %287 = load %"class.blink::Animation"*, %"class.blink::Animation"** %10, align 8
  %288 = bitcast %"class.blink::Animation"* %287 to i32 (%"class.blink::Animation"*)***
  %289 = load i32 (%"class.blink::Animation"*)**, i32 (%"class.blink::Animation"*)*** %288, align 8
  %290 = getelementptr inbounds i32 (%"class.blink::Animation"*)*, i32 (%"class.blink::Animation"*)** %289, i64 45
  %291 = load i32 (%"class.blink::Animation"*)*, i32 (%"class.blink::Animation"*)** %290, align 8
  %292 = call i32 %291(%"class.blink::Animation"* %287) #13
  %293 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %293) #13
  %294 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 11
  %295 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 2
  %296 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 3
  %297 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %293, i8 -86, i64 32, i1 false) #13
  store i8* %294, i8** %295, align 8
  %298 = urem i32 %292, 10
  %299 = udiv i32 %292, 10
  %300 = trunc i32 %298 to i8
  %301 = or i8 %300, 48
  store i8 %301, i8* %294, align 1
  %302 = icmp ugt i32 %292, 9
  br i1 %302, label %303, label %318

303:                                              ; preds = %285
  %304 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 10
  store i8* %304, i8** %295, align 8
  %305 = urem i32 %299, 10
  %306 = trunc i32 %305 to i8
  %307 = or i8 %306, 48
  store i8 %307, i8* %304, align 2
  %308 = icmp ugt i32 %292, 99
  br i1 %308, label %309, label %316

309:                                              ; preds = %303
  %310 = udiv i32 %292, 100
  %311 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 9
  store i8* %311, i8** %295, align 8
  %312 = urem i32 %310, 10
  %313 = trunc i32 %312 to i8
  %314 = or i8 %313, 48
  store i8 %314, i8* %311, align 1
  %315 = icmp ugt i32 %292, 999
  br i1 %315, label %320, label %329

316:                                              ; preds = %303
  %317 = ptrtoint i8* %304 to i64
  br label %332

318:                                              ; preds = %285
  %319 = ptrtoint i8* %294 to i64
  br label %332

320:                                              ; preds = %309, %320
  %321 = phi i32 [ %323, %320 ], [ %310, %309 ]
  %322 = load i8*, i8** %295, align 8
  %323 = udiv i32 %321, 10
  %324 = getelementptr inbounds i8, i8* %322, i64 -1
  store i8* %324, i8** %295, align 8
  %325 = urem i32 %323, 10
  %326 = trunc i32 %325 to i8
  %327 = or i8 %326, 48
  store i8 %327, i8* %324, align 1
  %328 = icmp ugt i32 %321, 99
  br i1 %328, label %320, label %329

329:                                              ; preds = %320, %309
  %330 = bitcast i8** %295 to i64*
  %331 = load i64, i64* %330, align 8
  br label %332

332:                                              ; preds = %329, %316, %318
  %333 = phi i64 [ %319, %318 ], [ %331, %329 ], [ %317, %316 ]
  %334 = ptrtoint i8* %297 to i64
  %335 = sub i64 %334, %333
  %336 = trunc i64 %335 to i32
  store i32 %336, i32* %296, align 8
  %337 = inttoptr i64 %333 to i8*
  %338 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %337, i32 %336) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %293) #13
  %339 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %338, %"class.WTF::StringImpl"** %339, align 8
  %340 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 4, i32 0, i32 0
  %341 = call { %"struct.WTF::KeyValuePair.441"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES1_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.439"* %340, %"class.WTF::String"* nonnull dereferenceable(8) %12, %"class.blink::Animation"** nonnull dereferenceable(8) %10) #13
  %342 = extractvalue { %"struct.WTF::KeyValuePair.441"*, i8 } %341, 1
  %343 = and i8 %342, 1
  %344 = icmp eq i8 %343, 0
  br i1 %344, label %345, label %356

345:                                              ; preds = %332
  %346 = extractvalue { %"struct.WTF::KeyValuePair.441"*, i8 } %341, 0
  %347 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %346, i64 0, i32 1
  %348 = load %"class.blink::Animation"*, %"class.blink::Animation"** %10, align 8
  %349 = ptrtoint %"class.blink::Animation"* %348 to i64
  %350 = bitcast %"class.blink::Member.442"* %347 to i64*
  store atomic i64 %349, i64* %350 monotonic, align 8
  %351 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %356, label %353

353:                                              ; preds = %345
  %354 = bitcast %"class.blink::Animation"* %348 to i8*
  %355 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %354) #13
  br label %356

356:                                              ; preds = %332, %345, %353
  %357 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %339, align 8
  %358 = icmp eq %"class.WTF::StringImpl"* %357, null
  br i1 %358, label %372, label %359

359:                                              ; preds = %356
  %360 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %357, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %361 = load atomic i32, i32* %360 monotonic, align 4
  %362 = and i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %357, i64 0, i32 0
  %365 = load i32, i32* %364, align 4
  br i1 %363, label %366, label %368

366:                                              ; preds = %359
  %367 = add i32 %365, -1
  store i32 %367, i32* %364, align 4
  br label %368

368:                                              ; preds = %366, %359
  %369 = phi i32 [ %367, %366 ], [ %365, %359 ]
  %370 = icmp eq i32 %369, 0
  br i1 %370, label %371, label %372

371:                                              ; preds = %368
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %357) #13
  br label %372

372:                                              ; preds = %356, %368, %371
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %286) #13
  %373 = load %"class.blink::Animation"*, %"class.blink::Animation"** %10, align 8
  %374 = bitcast %"class.blink::DummyExceptionStateForTesting"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %374) #13
  %375 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %13, i64 0, i32 0, i32 0
  %376 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %13, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %376, align 8
  %377 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %13, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %377, align 2
  %378 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %13, i64 0, i32 0, i32 1, i32 2
  %379 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %13, i64 0, i32 0, i32 5, i32 0, i32 0
  %380 = bitcast %"class.WTF::StringImpl"** %379 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %380, i8 0, i64 16, i1 false) #13
  %381 = bitcast i8** %378 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %381, i8 0, i64 36, i1 false) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %375, align 8
  %382 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %13, i64 0, i32 0
  %383 = bitcast %"class.blink::Animation"* %373 to void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)***
  %384 = load void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)**, void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)*** %383, align 8
  %385 = getelementptr inbounds void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)** %384, i64 38
  %386 = load void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)** %385, align 8
  call void %386(%"class.blink::Animation"* %373, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %382) #13
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %374) #13
  %387 = load %"class.blink::Animation"*, %"class.blink::Animation"** %10, align 8
  %388 = call %"class.blink::V8UnionCSSNumericValueOrDouble"* @_ZNK5blink9Animation9startTimeEv(%"class.blink::Animation"* %1) #13
  %389 = bitcast %"class.blink::DummyExceptionStateForTesting"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %389) #13
  %390 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %14, i64 0, i32 0, i32 0
  %391 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %14, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %391, align 8
  %392 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %14, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %392, align 2
  %393 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %14, i64 0, i32 0, i32 1, i32 2
  %394 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %14, i64 0, i32 0, i32 5, i32 0, i32 0
  %395 = bitcast %"class.WTF::StringImpl"** %394 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %395, i8 0, i64 16, i1 false) #13
  %396 = bitcast i8** %393 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %396, i8 0, i64 36, i1 false) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %390, align 8
  %397 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %14, i64 0, i32 0
  %398 = bitcast %"class.blink::Animation"* %387 to void (%"class.blink::Animation"*, %"class.blink::V8UnionCSSNumericValueOrDouble"*, %"class.blink::ExceptionState"*)***
  %399 = load void (%"class.blink::Animation"*, %"class.blink::V8UnionCSSNumericValueOrDouble"*, %"class.blink::ExceptionState"*)**, void (%"class.blink::Animation"*, %"class.blink::V8UnionCSSNumericValueOrDouble"*, %"class.blink::ExceptionState"*)*** %398, align 8
  %400 = getelementptr inbounds void (%"class.blink::Animation"*, %"class.blink::V8UnionCSSNumericValueOrDouble"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::Animation"*, %"class.blink::V8UnionCSSNumericValueOrDouble"*, %"class.blink::ExceptionState"*)** %399, i64 43
  %401 = load void (%"class.blink::Animation"*, %"class.blink::V8UnionCSSNumericValueOrDouble"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::Animation"*, %"class.blink::V8UnionCSSNumericValueOrDouble"*, %"class.blink::ExceptionState"*)** %400, align 8
  call void %401(%"class.blink::Animation"* %387, %"class.blink::V8UnionCSSNumericValueOrDouble"* %388, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %397) #13
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %14) #13
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %389) #13
  call void @_ZN5blink9Animation19SetEffectSuppressedEb(%"class.blink::Animation"* %1, i1 zeroext true) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %256) #13
  br label %402

402:                                              ; preds = %71, %372
  %403 = call %"struct.WTF::KeyValuePair.441"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.439"* %68, %"class.WTF::String"* nonnull dereferenceable(8) %5) #13
  %404 = icmp eq %"struct.WTF::KeyValuePair.441"* %403, null
  br i1 %404, label %408, label %405

405:                                              ; preds = %402
  %406 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %403, i64 0, i32 1, i32 0, i32 0
  %407 = load %"class.blink::Animation"*, %"class.blink::Animation"** %406, align 8
  br label %408

408:                                              ; preds = %402, %405
  %409 = phi %"class.blink::Animation"* [ %407, %405 ], [ null, %402 ]
  %410 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %411 = icmp eq %"class.WTF::StringImpl"* %410, null
  br i1 %411, label %425, label %412

412:                                              ; preds = %408
  %413 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %410, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %414 = load atomic i32, i32* %413 monotonic, align 4
  %415 = and i32 %414, 2
  %416 = icmp eq i32 %415, 0
  %417 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %410, i64 0, i32 0
  %418 = load i32, i32* %417, align 4
  br i1 %416, label %419, label %421

419:                                              ; preds = %412
  %420 = add i32 %418, -1
  store i32 %420, i32* %417, align 4
  br label %421

421:                                              ; preds = %419, %412
  %422 = phi i32 [ %420, %419 ], [ %418, %412 ]
  %423 = icmp eq i32 %422, 0
  br i1 %423, label %424, label %425

424:                                              ; preds = %421
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %410) #13
  br label %425

425:                                              ; preds = %408, %421, %424
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #13
  ret %"class.blink::Animation"* %409
}

declare void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret, %"class.std::__1::basic_string"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0
  tail call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %9 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = icmp eq i64* %10, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 3
  %14 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %13, align 8
  %15 = bitcast %"class.v8::Isolate"* %14 to %"class.v8::internal::Isolate"*
  %16 = load i64, i64* %10, align 8
  %17 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %15, i64 %16) #13
  %18 = tail call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %14) #13
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast i64* %17 to %"class.v8::Value"*
  %21 = tail call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %14, %"class.v8::Value"* %20) #13
  br label %22

22:                                               ; preds = %19, %12, %8
  %23 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #13
  br label %39

39:                                               ; preds = %22, %35, %38
  ret void
}

declare void @_ZN5blink9Animation22SetCurrentTimeInternalENS_18AnimationTimeDeltaE(%"class.blink::Animation"*, double) local_unnamed_addr #1

declare void @_ZN5blink9Animation7UnpauseEv(%"class.blink::Animation"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink23InspectorAnimationAgent9setPausedENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEEb(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorAnimationAgent"*, %"class.std::__1::vector.2149"*, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 -1, i32 10, i32 2
  %6 = bitcast double* %5 to %"class.blink::InspectorAnimationAgent"*
  tail call void @_ZN5blink23InspectorAnimationAgent9setPausedENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEEb(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorAnimationAgent"* %6, %"class.std::__1::vector.2149"* %2, i1 zeroext %3)
  ret void
}

declare %"class.blink::Animation"* @_ZN5blink9Animation6CreateEPNS_15AnimationEffectEPNS_17AnimationTimelineERNS_14ExceptionStateE(%"class.blink::AnimationEffect"*, %"class.blink::AnimationTimeline"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare %"class.blink::V8UnionCSSNumericValueOrDouble"* @_ZNK5blink9Animation9startTimeEv(%"class.blink::Animation"*) local_unnamed_addr #1

declare void @_ZN5blink9Animation19SetEffectSuppressedEb(%"class.blink::Animation"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorAnimationAgent14seekAnimationsENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEEd(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorAnimationAgent"*, %"class.std::__1::vector.2149"*, double) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.crdtp::DispatchResponse", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.2149", %"class.std::__1::vector.2149"* %2, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::String"*, %"class.WTF::String"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.2149", %"class.std::__1::vector.2149"* %2, i64 0, i32 0, i32 1
  %12 = load %"class.WTF::String"*, %"class.WTF::String"** %11, align 8
  %13 = icmp eq %"class.WTF::String"* %10, %12
  br i1 %13, label %102, label %14

14:                                               ; preds = %4
  %15 = bitcast %"class.crdtp::DispatchResponse"* %6 to i8*
  %16 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %17 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 4, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 0
  %23 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  %24 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %25 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %26 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  %27 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %28 = bitcast %"class.blink::DummyExceptionStateForTesting"* %8 to i8*
  %29 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 1, i32 0
  %31 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 1, i32 1
  %32 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 1, i32 2
  %33 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 5, i32 0, i32 0
  %34 = bitcast %"class.WTF::StringImpl"** %33 to i8*
  %35 = bitcast i8** %32 to i8*
  %36 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0
  %37 = fdiv double %3, 1.000000e+03
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = bitcast i64* %19 to <2 x i64>*
  %46 = bitcast i64* %39 to <2 x i64>*
  br label %49

47:                                               ; preds = %99
  %48 = icmp eq %"class.WTF::String"* %101, %12
  br i1 %48, label %102, label %49

49:                                               ; preds = %14, %47
  %50 = phi %"class.WTF::String"* [ %10, %14 ], [ %101, %47 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16)
  %51 = call %"struct.WTF::KeyValuePair.441"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.439"* %17, %"class.WTF::String"* dereferenceable(8) %50) #13, !noalias !14
  %52 = icmp eq %"struct.WTF::KeyValuePair.441"* %51, null
  br i1 %52, label %57, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %51, i64 0, i32 1, i32 0, i32 0
  %55 = load %"class.blink::Animation"*, %"class.blink::Animation"** %54, align 8
  %56 = icmp eq %"class.blink::Animation"* %55, null
  br i1 %56, label %57, label %64

57:                                               ; preds = %49, %53
  %58 = call i8* @_Znwm(i64 48) #15
  store i8* %58, i8** %18, align 8, !noalias !14
  store <2 x i64> <i64 38, i64 -9223372036854775760>, <2 x i64>* %45, align 8, !noalias !14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %58, i8* align 1 getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i64 0, i64 0), i64 38, i1 false) #13
  %59 = getelementptr inbounds i8, i8* %58, i64 38
  store i8 0, i8* %59, align 1, !noalias !14
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %6, %"class.std::__1::basic_string"* nonnull %5) #13
  %60 = load i8, i8* %21, align 1, !noalias !14
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %57
  %63 = load i8*, i8** %18, align 8, !noalias !14
  call void @_ZdlPv(i8* %63) #15
  br label %65

64:                                               ; preds = %53
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* nonnull sret %6) #13
  br label %65

65:                                               ; preds = %57, %62, %64
  %66 = phi %"class.blink::Animation"* [ null, %62 ], [ null, %57 ], [ %55, %64 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16)
  %67 = load i32, i32* %22, align 8
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %70, label %69

69:                                               ; preds = %65
  store i32 %67, i32* %23, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #13
  br label %93

70:                                               ; preds = %65
  %71 = call %"class.blink::Animation"* @_ZN5blink23InspectorAnimationAgent14AnimationCloneEPNS_9AnimationE(%"class.blink::InspectorAnimationAgent"* %1, %"class.blink::Animation"* %66)
  %72 = icmp eq %"class.blink::Animation"* %71, null
  br i1 %72, label %73, label %80

73:                                               ; preds = %70
  %74 = call i8* @_Znwm(i64 48) #15
  store i8* %74, i8** %38, align 8
  store <2 x i64> <i64 37, i64 -9223372036854775760>, <2 x i64>* %46, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %74, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i64 37, i1 false) #13
  %75 = getelementptr inbounds i8, i8* %74, i64 37
  store i8 0, i8* %75, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %7) #13
  %76 = load i8, i8* %41, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %93

78:                                               ; preds = %73
  %79 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %79) #15
  br label %93

80:                                               ; preds = %70
  %81 = call i32 @_ZNK5blink9Animation27CalculateAnimationPlayStateEv(%"class.blink::Animation"* nonnull %71) #13
  %82 = icmp eq i32 %81, 4
  br i1 %82, label %83, label %87

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"class.blink::Animation", %"class.blink::Animation"* %71, i64 0, i32 27
  %85 = load i8, i8* %84, align 4, !range !2
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %92, label %87

87:                                               ; preds = %80, %83
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %28) #13
  store i16 1, i16* %30, align 8
  store i16 0, i16* %31, align 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 16, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 36, i1 false) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  %88 = bitcast %"class.blink::Animation"* %71 to void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)***
  %89 = load void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)**, void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)*** %88, align 8
  %90 = getelementptr inbounds void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)** %89, i64 38
  %91 = load void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::Animation"*, %"class.blink::ExceptionState"*)** %90, align 8
  call void %91(%"class.blink::Animation"* nonnull %71, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %36) #13
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %28) #13
  br label %92

92:                                               ; preds = %87, %83
  call void @_ZN5blink9Animation22SetCurrentTimeInternalENS_18AnimationTimeDeltaE(%"class.blink::Animation"* nonnull %71, double %37) #13
  br label %93

93:                                               ; preds = %78, %73, %92, %69
  %94 = phi i32 [ 1, %69 ], [ 0, %92 ], [ 1, %73 ], [ 1, %78 ]
  %95 = load i8, i8* %43, align 1
  %96 = icmp slt i8 %95, 0
  br i1 %96, label %97, label %99

97:                                               ; preds = %93
  %98 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %98) #15
  br label %99

99:                                               ; preds = %93, %97
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #13
  %100 = icmp eq i32 %94, 0
  %101 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %50, i64 1
  br i1 %100, label %47, label %103

102:                                              ; preds = %47, %4
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  br label %103

103:                                              ; preds = %99, %102
  %104 = icmp eq %"class.std::__1::vector.2149"* %2, null
  br i1 %104, label %140, label %105

105:                                              ; preds = %103
  %106 = load %"class.WTF::String"*, %"class.WTF::String"** %9, align 8
  %107 = icmp eq %"class.WTF::String"* %106, null
  br i1 %107, label %138, label %108

108:                                              ; preds = %105
  %109 = bitcast %"class.WTF::String"* %106 to i8*
  %110 = load %"class.WTF::String"*, %"class.WTF::String"** %11, align 8
  %111 = icmp eq %"class.WTF::String"* %110, %106
  br i1 %111, label %136, label %112

112:                                              ; preds = %108, %131
  %113 = phi %"class.WTF::String"* [ %114, %131 ], [ %110, %108 ]
  %114 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %113, i64 -1
  %115 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %114, i64 0, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #13
  br label %131

131:                                              ; preds = %130, %127, %112
  %132 = icmp eq %"class.WTF::String"* %114, %106
  br i1 %132, label %133, label %112

133:                                              ; preds = %131
  %134 = bitcast %"class.std::__1::vector.2149"* %2 to i8**
  %135 = load i8*, i8** %134, align 8
  br label %136

136:                                              ; preds = %133, %108
  %137 = phi i8* [ %135, %133 ], [ %109, %108 ]
  store %"class.WTF::String"* %106, %"class.WTF::String"** %11, align 8
  call void @_ZdlPv(i8* %137) #15
  br label %138

138:                                              ; preds = %136, %105
  %139 = bitcast %"class.std::__1::vector.2149"* %2 to i8*
  call void @_ZdlPv(i8* %139) #15
  br label %140

140:                                              ; preds = %103, %138
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink23InspectorAnimationAgent14seekAnimationsENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEEd(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorAnimationAgent"*, %"class.std::__1::vector.2149"*, double) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 -1, i32 10, i32 2
  %6 = bitcast double* %5 to %"class.blink::InspectorAnimationAgent"*
  tail call void @_ZN5blink23InspectorAnimationAgent14seekAnimationsENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEEd(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorAnimationAgent"* %6, %"class.std::__1::vector.2149"* %2, double %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorAnimationAgent17releaseAnimationsENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorAnimationAgent"*, %"class.std::__1::vector.2149"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.2149", %"class.std::__1::vector.2149"* %2, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.2149", %"class.std::__1::vector.2149"* %2, i64 0, i32 0, i32 1
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp eq %"class.WTF::String"* %5, %7
  br i1 %8, label %19, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 4, i32 0
  %11 = getelementptr inbounds %"class.WTF::HashMap.438", %"class.WTF::HashMap.438"* %10, i64 0, i32 0
  %12 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 5, i32 0
  %13 = getelementptr inbounds %"class.WTF::HashMap.438", %"class.WTF::HashMap.438"* %12, i64 0, i32 0
  %14 = getelementptr inbounds %"class.WTF::HashMap.438", %"class.WTF::HashMap.438"* %12, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 5, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.WTF::HashMap.438", %"class.WTF::HashMap.438"* %10, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 4, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 8, i32 0
  br label %57

19:                                               ; preds = %92, %3
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  %20 = icmp eq %"class.std::__1::vector.2149"* %2, null
  br i1 %20, label %56, label %21

21:                                               ; preds = %19
  %22 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %23 = icmp eq %"class.WTF::String"* %22, null
  br i1 %23, label %54, label %24

24:                                               ; preds = %21
  %25 = bitcast %"class.WTF::String"* %22 to i8*
  %26 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %27 = icmp eq %"class.WTF::String"* %26, %22
  br i1 %27, label %52, label %28

28:                                               ; preds = %24, %47
  %29 = phi %"class.WTF::String"* [ %30, %47 ], [ %26, %24 ]
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 -1
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #13
  br label %47

47:                                               ; preds = %46, %43, %28
  %48 = icmp eq %"class.WTF::String"* %30, %22
  br i1 %48, label %49, label %28

49:                                               ; preds = %47
  %50 = bitcast %"class.std::__1::vector.2149"* %2 to i8**
  %51 = load i8*, i8** %50, align 8
  br label %52

52:                                               ; preds = %49, %24
  %53 = phi i8* [ %51, %49 ], [ %25, %24 ]
  store %"class.WTF::String"* %22, %"class.WTF::String"** %6, align 8
  tail call void @_ZdlPv(i8* %53) #15
  br label %54

54:                                               ; preds = %52, %21
  %55 = bitcast %"class.std::__1::vector.2149"* %2 to i8*
  tail call void @_ZdlPv(i8* %55) #15
  br label %56

56:                                               ; preds = %19, %54
  ret void

57:                                               ; preds = %9, %92
  %58 = phi %"class.WTF::String"* [ %5, %9 ], [ %94, %92 ]
  %59 = tail call %"struct.WTF::KeyValuePair.441"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.439"* %11, %"class.WTF::String"* dereferenceable(8) %58) #13
  %60 = icmp eq %"struct.WTF::KeyValuePair.441"* %59, null
  br i1 %60, label %66, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %59, i64 0, i32 1, i32 0, i32 0
  %63 = load %"class.blink::Animation"*, %"class.blink::Animation"** %62, align 8
  %64 = icmp eq %"class.blink::Animation"* %63, null
  br i1 %64, label %66, label %65

65:                                               ; preds = %61
  tail call void @_ZN5blink9Animation19SetEffectSuppressedEb(%"class.blink::Animation"* nonnull %63, i1 zeroext false) #13
  br label %66

66:                                               ; preds = %57, %61, %65
  %67 = tail call %"struct.WTF::KeyValuePair.441"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.439"* %13, %"class.WTF::String"* dereferenceable(8) %58) #13
  %68 = icmp eq %"struct.WTF::KeyValuePair.441"* %67, null
  br i1 %68, label %74, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %67, i64 0, i32 1, i32 0, i32 0
  %71 = load %"class.blink::Animation"*, %"class.blink::Animation"** %70, align 8
  %72 = icmp eq %"class.blink::Animation"* %71, null
  br i1 %72, label %74, label %73

73:                                               ; preds = %69
  tail call void @_ZN5blink9Animation6cancelEv(%"class.blink::Animation"* nonnull %71) #13
  br label %74

74:                                               ; preds = %66, %69, %73
  %75 = tail call { %"struct.WTF::KeyValuePair.441"*, %"struct.WTF::KeyValuePair.441"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE4findERKS1_(%"class.WTF::HashTable.439"* %13, %"class.WTF::String"* dereferenceable(8) %58) #13
  %76 = extractvalue { %"struct.WTF::KeyValuePair.441"*, %"struct.WTF::KeyValuePair.441"* } %75, 0
  %77 = load %"struct.WTF::KeyValuePair.441"*, %"struct.WTF::KeyValuePair.441"** %14, align 8
  %78 = load i32, i32* %15, align 8
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %77, i64 %79
  %81 = icmp eq %"struct.WTF::KeyValuePair.441"* %80, %76
  br i1 %81, label %83, label %82

82:                                               ; preds = %74
  tail call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE5eraseEPKS7_(%"class.WTF::HashTable.439"* %13, %"struct.WTF::KeyValuePair.441"* %76) #13
  br label %83

83:                                               ; preds = %74, %82
  %84 = tail call { %"struct.WTF::KeyValuePair.441"*, %"struct.WTF::KeyValuePair.441"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE4findERKS1_(%"class.WTF::HashTable.439"* %11, %"class.WTF::String"* dereferenceable(8) %58) #13
  %85 = extractvalue { %"struct.WTF::KeyValuePair.441"*, %"struct.WTF::KeyValuePair.441"* } %84, 0
  %86 = load %"struct.WTF::KeyValuePair.441"*, %"struct.WTF::KeyValuePair.441"** %16, align 8
  %87 = load i32, i32* %17, align 8
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %86, i64 %88
  %90 = icmp eq %"struct.WTF::KeyValuePair.441"* %89, %85
  br i1 %90, label %92, label %91

91:                                               ; preds = %83
  tail call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE5eraseEPKS7_(%"class.WTF::HashTable.439"* %11, %"struct.WTF::KeyValuePair.441"* %85) #13
  br label %92

92:                                               ; preds = %83, %91
  %93 = tail call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.581"* %18, %"class.WTF::String"* dereferenceable(8) %58, %"class.WTF::String"* dereferenceable(8) %58) #13
  %94 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %58, i64 1
  %95 = icmp eq %"class.WTF::String"* %94, %7
  br i1 %95, label %19, label %57
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink23InspectorAnimationAgent17releaseAnimationsENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorAnimationAgent"*, %"class.std::__1::vector.2149"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 -1, i32 10, i32 2
  %5 = bitcast double* %4 to %"class.blink::InspectorAnimationAgent"*
  tail call void @_ZN5blink23InspectorAnimationAgent17releaseAnimationsENSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorAnimationAgent"* %5, %"class.std::__1::vector.2149"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorAnimationAgent9setTimingERKN3WTF6StringEdd(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorAnimationAgent"*, %"class.WTF::String"* dereferenceable(8), double, double) unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.crdtp::DispatchResponse", align 8
  %8 = alloca %"class.blink::NonThrowableExceptionState", align 8
  %9 = alloca %"class.blink::UnrestrictedDoubleOrString", align 8
  %10 = bitcast %"class.crdtp::DispatchResponse"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  %11 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11)
  %12 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 4, i32 0, i32 0
  %13 = tail call %"struct.WTF::KeyValuePair.441"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.439"* %12, %"class.WTF::String"* dereferenceable(8) %2) #13, !noalias !17
  %14 = icmp eq %"struct.WTF::KeyValuePair.441"* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %13, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.blink::Animation"*, %"class.blink::Animation"** %16, align 8
  %18 = icmp eq %"class.blink::Animation"* %17, null
  br i1 %18, label %19, label %31

19:                                               ; preds = %5, %15
  %20 = tail call i8* @_Znwm(i64 48) #15
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8, !noalias !17
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = bitcast i64* %22 to <2 x i64>*
  store <2 x i64> <i64 38, i64 -9223372036854775760>, <2 x i64>* %23, align 8, !noalias !17
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %20, i8* align 1 getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i64 0, i64 0), i64 38, i1 false) #13
  %24 = getelementptr inbounds i8, i8* %20, i64 38
  store i8 0, i8* %24, align 1, !noalias !17
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %7, %"class.std::__1::basic_string"* nonnull %6) #13
  %25 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1, !noalias !17
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %19
  %30 = load i8*, i8** %21, align 8, !noalias !17
  call void @_ZdlPv(i8* %30) #15
  br label %32

31:                                               ; preds = %15
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* nonnull sret %7) #13
  br label %32

32:                                               ; preds = %19, %29, %31
  %33 = phi %"class.blink::Animation"* [ null, %29 ], [ null, %19 ], [ %17, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11)
  %34 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 0
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %43, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %35, i32* %38, align 8
  %39 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %40 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1
  %41 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  %42 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #13
  br label %99

43:                                               ; preds = %32
  %44 = call %"class.blink::Animation"* @_ZN5blink23InspectorAnimationAgent14AnimationCloneEPNS_9AnimationE(%"class.blink::InspectorAnimationAgent"* %1, %"class.blink::Animation"* %33)
  %45 = bitcast %"class.blink::NonThrowableExceptionState"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %45) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 88, i1 false)
  call void @_ZN5blink26NonThrowableExceptionStateC1Ev(%"class.blink::NonThrowableExceptionState"* nonnull %8) #13
  %46 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 96) #13
  %47 = bitcast i8* %46 to %"class.blink::OptionalEffectTiming"*
  call void @_ZN5blink20OptionalEffectTimingC1Ev(%"class.blink::OptionalEffectTiming"* %47) #13
  %48 = getelementptr inbounds i8, i8* %46, i64 -4
  %49 = bitcast i8* %48 to i16*
  %50 = load atomic i16, i16* %49 monotonic, align 2
  %51 = or i16 %50, 1
  store atomic i16 %51, i16* %49 release, align 2
  %52 = bitcast %"class.blink::UnrestrictedDoubleOrString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %52, i8* align 8 bitcast ({ i32, [4 x i8], %"class.WTF::String", double }* @__const._ZN5blink23InspectorAnimationAgent9setTimingERKN3WTF6StringEdd.unrestricted_duration to i8*), i64 24, i1 false)
  call void @_ZN5blink26UnrestrictedDoubleOrStringC1Ev(%"class.blink::UnrestrictedDoubleOrString"* nonnull %9) #13
  call void @_ZN5blink26UnrestrictedDoubleOrString21SetUnrestrictedDoubleEd(%"class.blink::UnrestrictedDoubleOrString"* nonnull %9, double %3) #13
  call void @_ZN5blink20OptionalEffectTiming11setDurationERKNS_26UnrestrictedDoubleOrStringE(%"class.blink::OptionalEffectTiming"* %47, %"class.blink::UnrestrictedDoubleOrString"* nonnull dereferenceable(24) %9) #13
  %53 = getelementptr inbounds i8, i8* %46, i64 16
  %54 = bitcast i8* %53 to double*
  store double %4, double* %54, align 8
  %55 = getelementptr inbounds i8, i8* %46, i64 8
  store i8 1, i8* %55, align 8
  %56 = getelementptr inbounds %"class.blink::Animation", %"class.blink::Animation"* %44, i64 0, i32 23, i32 0, i32 0
  %57 = load %"class.blink::AnimationEffect"*, %"class.blink::AnimationEffect"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::NonThrowableExceptionState", %"class.blink::NonThrowableExceptionState"* %8, i64 0, i32 0
  call void @_ZN5blink15AnimationEffect12updateTimingEPNS_20OptionalEffectTimingERNS_14ExceptionStateE(%"class.blink::AnimationEffect"* %57, %"class.blink::OptionalEffectTiming"* %47, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %58) #13
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  call void @_ZN5blink26UnrestrictedDoubleOrStringD1Ev(%"class.blink::UnrestrictedDoubleOrString"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #13
  %59 = getelementptr inbounds %"class.blink::NonThrowableExceptionState", %"class.blink::NonThrowableExceptionState"* %8, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %59, align 8
  %60 = getelementptr inbounds %"class.blink::NonThrowableExceptionState", %"class.blink::NonThrowableExceptionState"* %8, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %61 = load i64*, i64** %60, align 8
  %62 = icmp eq i64* %61, null
  br i1 %62, label %73, label %63

63:                                               ; preds = %43
  %64 = getelementptr inbounds %"class.blink::NonThrowableExceptionState", %"class.blink::NonThrowableExceptionState"* %8, i64 0, i32 0, i32 3
  %65 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %64, align 8
  %66 = bitcast %"class.v8::Isolate"* %65 to %"class.v8::internal::Isolate"*
  %67 = load i64, i64* %61, align 8
  %68 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %66, i64 %67) #13
  %69 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %65) #13
  br i1 %69, label %73, label %70

70:                                               ; preds = %63
  %71 = bitcast i64* %68 to %"class.v8::Value"*
  %72 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %65, %"class.v8::Value"* %71) #13
  br label %73

73:                                               ; preds = %70, %63, %43
  %74 = getelementptr inbounds %"class.blink::NonThrowableExceptionState", %"class.blink::NonThrowableExceptionState"* %8, i64 0, i32 0, i32 5, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #13
  br label %90

90:                                               ; preds = %89, %86, %73
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %45) #13
  %91 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1
  %92 = bitcast %"class.std::__1::basic_string"* %91 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  call void @_ZdlPv(i8* %98) #15
  br label %99

99:                                               ; preds = %37, %90, %96
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5blink26NonThrowableExceptionStateC1Ev(%"class.blink::NonThrowableExceptionState"*) unnamed_addr #1

declare void @_ZN5blink26UnrestrictedDoubleOrStringC1Ev(%"class.blink::UnrestrictedDoubleOrString"*) unnamed_addr #1

declare void @_ZN5blink26UnrestrictedDoubleOrString21SetUnrestrictedDoubleEd(%"class.blink::UnrestrictedDoubleOrString"*, double) local_unnamed_addr #1

declare void @_ZN5blink20OptionalEffectTiming11setDurationERKNS_26UnrestrictedDoubleOrStringE(%"class.blink::OptionalEffectTiming"*, %"class.blink::UnrestrictedDoubleOrString"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN5blink15AnimationEffect12updateTimingEPNS_20OptionalEffectTimingERNS_14ExceptionStateE(%"class.blink::AnimationEffect"*, %"class.blink::OptionalEffectTiming"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink26UnrestrictedDoubleOrStringD1Ev(%"class.blink::UnrestrictedDoubleOrString"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink23InspectorAnimationAgent9setTimingERKN3WTF6StringEdd(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorAnimationAgent"*, %"class.WTF::String"* dereferenceable(8), double, double) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 -1, i32 10, i32 2
  %7 = bitcast double* %6 to %"class.blink::InspectorAnimationAgent"*
  tail call void @_ZN5blink23InspectorAnimationAgent9setTimingERKN3WTF6StringEdd(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorAnimationAgent"* %7, %"class.WTF::String"* dereferenceable(8) %2, double %3, double %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorAnimationAgent16resolveAnimationERKN3WTF6StringEPNSt3__110unique_ptrIN12v8_inspector8protocol7Runtime3API12RemoteObjectENS5_14default_deleteISB_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorAnimationAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.std::__1::unique_ptr.2233"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.crdtp::DispatchResponse", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.blink::ScriptState::Scope", align 8
  %9 = alloca %"class.v8_inspector::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.v8_inspector::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = bitcast %"class.crdtp::DispatchResponse"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false)
  %15 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15)
  %16 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 4, i32 0, i32 0
  %17 = tail call %"struct.WTF::KeyValuePair.441"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.439"* %16, %"class.WTF::String"* dereferenceable(8) %2) #13, !noalias !20
  %18 = icmp eq %"struct.WTF::KeyValuePair.441"* %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %17, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.blink::Animation"*, %"class.blink::Animation"** %20, align 8
  %22 = icmp eq %"class.blink::Animation"* %21, null
  br i1 %22, label %23, label %35

23:                                               ; preds = %4, %19
  %24 = tail call i8* @_Znwm(i64 48) #15
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %24, i8** %25, align 8, !noalias !20
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = bitcast i64* %26 to <2 x i64>*
  store <2 x i64> <i64 38, i64 -9223372036854775760>, <2 x i64>* %27, align 8, !noalias !20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %24, i8* align 1 getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i64 0, i64 0), i64 38, i1 false) #13
  %28 = getelementptr inbounds i8, i8* %24, i64 38
  store i8 0, i8* %28, align 1, !noalias !20
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %6, %"class.std::__1::basic_string"* nonnull %5) #13
  %29 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1, !noalias !20
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %23
  %34 = load i8*, i8** %25, align 8, !noalias !20
  call void @_ZdlPv(i8* %34) #15
  br label %36

35:                                               ; preds = %19
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* nonnull sret %6) #13
  br label %36

36:                                               ; preds = %23, %33, %35
  %37 = phi %"class.blink::Animation"* [ null, %33 ], [ null, %23 ], [ %21, %35 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15)
  %38 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %47, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %39, i32* %42, align 8
  %43 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %45 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  %46 = bitcast %"class.std::__1::basic_string"* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #13
  br label %208

47:                                               ; preds = %36
  %48 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 5, i32 0, i32 0
  %49 = call %"struct.WTF::KeyValuePair.441"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.439"* %48, %"class.WTF::String"* dereferenceable(8) %2) #13
  %50 = icmp eq %"struct.WTF::KeyValuePair.441"* %49, null
  br i1 %50, label %61, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %49, i64 0, i32 1, i32 0, i32 0
  %53 = load %"class.blink::Animation"*, %"class.blink::Animation"** %52, align 8
  %54 = icmp eq %"class.blink::Animation"* %53, null
  br i1 %54, label %61, label %55

55:                                               ; preds = %51
  %56 = call %"struct.WTF::KeyValuePair.441"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.439"* %48, %"class.WTF::String"* dereferenceable(8) %2) #13
  %57 = icmp eq %"struct.WTF::KeyValuePair.441"* %56, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %56, i64 0, i32 1, i32 0, i32 0
  %60 = load %"class.blink::Animation"*, %"class.blink::Animation"** %59, align 8
  br label %61

61:                                               ; preds = %47, %58, %55, %51
  %62 = phi %"class.blink::Animation"* [ %37, %51 ], [ %60, %58 ], [ null, %55 ], [ %37, %47 ]
  %63 = getelementptr inbounds %"class.blink::Animation", %"class.blink::Animation"* %62, i64 0, i32 23, i32 0, i32 0
  %64 = bitcast %"class.blink::AnimationEffect"** %63 to %"class.blink::KeyframeEffect"**
  %65 = load %"class.blink::KeyframeEffect"*, %"class.blink::KeyframeEffect"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::KeyframeEffect", %"class.blink::KeyframeEffect"* %65, i64 0, i32 1, i32 0, i32 0
  %67 = load %"class.blink::Element"*, %"class.blink::Element"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %67, i64 0, i32 0, i32 0
  %69 = call %"class.blink::Document"* @_ZNK5blink4Node13ownerDocumentEv(%"class.blink::Node"* %68) #13
  %70 = icmp eq %"class.blink::Document"* %69, null
  br i1 %70, label %77, label %71

71:                                               ; preds = %61
  %72 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* nonnull %69) #13
  %73 = icmp eq %"class.blink::LocalFrame"* %72, null
  br i1 %73, label %77, label %74

74:                                               ; preds = %71
  %75 = call %"class.blink::ScriptState"* @_ZN5blink25ToScriptStateForMainWorldEPNS_10LocalFrameE(%"class.blink::LocalFrame"* nonnull %72) #13
  %76 = icmp eq %"class.blink::ScriptState"* %75, null
  br i1 %76, label %77, label %89

77:                                               ; preds = %61, %71, %74
  %78 = call i8* @_Znwm(i64 48) #15
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %78, i8** %79, align 8
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %81 = bitcast i64* %80 to <2 x i64>*
  store <2 x i64> <i64 39, i64 -9223372036854775760>, <2 x i64>* %81, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %78, i8* align 1 getelementptr inbounds ([40 x i8], [40 x i8]* @.str.2, i64 0, i64 0), i64 39, i1 false) #13
  %82 = getelementptr inbounds i8, i8* %78, i64 39
  store i8 0, i8* %82, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %7) #13
  %83 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  br i1 %86, label %87, label %208

87:                                               ; preds = %77
  %88 = load i8*, i8** %79, align 8
  call void @_ZdlPv(i8* %88) #15
  br label %208

89:                                               ; preds = %74
  %90 = bitcast %"class.blink::ScriptState::Scope"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %90) #13
  %91 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %8, i64 0, i32 1, i32 0
  %92 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %8, i64 0, i32 0
  %93 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %75, i64 0, i32 0
  %94 = bitcast %"class.blink::ScriptState::Scope"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %94, i8 -86, i64 32, i1 false)
  %95 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %93, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %92, %"class.v8::Isolate"* %95) #13
  %96 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %75, i64 0, i32 1, i32 0, i32 0, i32 0
  %97 = load %"class.v8::Context"*, %"class.v8::Context"** %96, align 8
  %98 = icmp eq %"class.v8::Context"* %97, null
  br i1 %98, label %106, label %99

99:                                               ; preds = %89
  %100 = bitcast %"class.blink::ScriptState"* %75 to %"class.v8::internal::Isolate"**
  %101 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %100, align 8
  %102 = bitcast %"class.v8::Context"* %97 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %101, i64 %103) #13
  %105 = bitcast i64* %104 to %"class.v8::Context"*
  br label %106

106:                                              ; preds = %89, %99
  %107 = phi %"class.v8::Context"* [ %105, %99 ], [ null, %89 ]
  store %"class.v8::Context"* %107, %"class.v8::Context"** %91, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %107) #13
  %108 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 0, i32 3
  %109 = load %"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::V8InspectorSession"** %108, align 8
  %110 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %110) #13
  %111 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %112 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %111, i64* %112, align 8
  %113 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZZN5blink23InspectorAnimationAgent16resolveAnimationERKN3WTF6StringEPNSt3__110unique_ptrIN12v8_inspector8protocol7Runtime3API12RemoteObjectENS5_14default_deleteISB_EEEEE21kAnimationObjectGroup, i64 0, i64 0), i8** %113, align 8
  %114 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 9, i32* %114, align 8
  call void @_ZN5blink23ToV8InspectorStringViewERKN3WTF10StringViewE(%"class.v8_inspector::StringView"* nonnull sret %9, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #13
  %115 = bitcast %"class.v8_inspector::V8InspectorSession"* %109 to void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*)***
  %116 = load void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*)**, void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*)*, void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*)** %116, i64 16
  %118 = load void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*)*, void (%"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::StringView"*)** %117, align 8
  call void %118(%"class.v8_inspector::V8InspectorSession"* %109, %"class.v8_inspector::StringView"* nonnull byval(%"class.v8_inspector::StringView") align 8 %9) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %110) #13
  %119 = load %"class.v8_inspector::V8InspectorSession"*, %"class.v8_inspector::V8InspectorSession"** %108, align 8
  %120 = load %"class.v8::Context"*, %"class.v8::Context"** %96, align 8
  %121 = icmp eq %"class.v8::Context"* %120, null
  br i1 %121, label %122, label %124

122:                                              ; preds = %106
  %123 = getelementptr inbounds %"class.blink::Animation", %"class.blink::Animation"* %62, i64 0, i32 0, i32 0, i32 0
  br label %140

124:                                              ; preds = %106
  %125 = bitcast %"class.blink::ScriptState"* %75 to %"class.v8::internal::Isolate"**
  %126 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %125, align 8
  %127 = bitcast %"class.v8::Context"* %120 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %126, i64 %128) #13
  %130 = bitcast i64* %129 to %"class.v8::Context"*
  %131 = load %"class.v8::Context"*, %"class.v8::Context"** %96, align 8
  %132 = getelementptr inbounds %"class.blink::Animation", %"class.blink::Animation"* %62, i64 0, i32 0, i32 0, i32 0
  %133 = icmp eq %"class.v8::Context"* %131, null
  br i1 %133, label %140, label %134

134:                                              ; preds = %124
  %135 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %125, align 8
  %136 = bitcast %"class.v8::Context"* %131 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %135, i64 %137) #13
  %139 = bitcast i64* %138 to %"class.v8::Context"*
  br label %140

140:                                              ; preds = %122, %124, %134
  %141 = phi %"class.blink::ScriptWrappable"* [ %132, %134 ], [ %132, %124 ], [ %123, %122 ]
  %142 = phi %"class.v8::Context"* [ %130, %134 ], [ %130, %124 ], [ null, %122 ]
  %143 = phi %"class.v8::Context"* [ %139, %134 ], [ null, %124 ], [ null, %122 ]
  %144 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %143) #13
  %145 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %93, align 8
  %146 = icmp eq %"class.blink::ScriptWrappable"* %141, null
  br i1 %146, label %147, label %150, !prof !3

147:                                              ; preds = %140
  %148 = ptrtoint %"class.v8::Isolate"* %145 to i64
  %149 = add i64 %148, 176
  br label %166

150:                                              ; preds = %140
  %151 = call %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"* nonnull %141, %"class.v8::Isolate"* %145) #13
  %152 = ptrtoint %"class.v8::Object"* %151 to i64
  %153 = icmp eq %"class.v8::Object"* %151, null
  br i1 %153, label %154, label %166

154:                                              ; preds = %150
  %155 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %144) #13
  %156 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %155) #13
  %157 = bitcast %"class.blink::ScriptWrappable"* %141 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %158 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %157, align 8
  %159 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %158, i64 7
  %160 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %159, align 8
  %161 = call %"class.v8::Value"* %160(%"class.blink::ScriptWrappable"* nonnull %141, %"class.blink::ScriptState"* %156) #13
  %162 = icmp eq %"class.v8::Value"* %161, null
  br i1 %162, label %163, label %164, !prof !3

163:                                              ; preds = %154
  call void @_ZN2v82V812ToLocalEmptyEv() #13
  br label %164

164:                                              ; preds = %163, %154
  %165 = ptrtoint %"class.v8::Value"* %161 to i64
  br label %166

166:                                              ; preds = %147, %150, %164
  %167 = phi i64 [ %149, %147 ], [ %165, %164 ], [ %152, %150 ]
  %168 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %168) #13
  %169 = inttoptr i64 %167 to %"class.v8::Value"*
  %170 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %171 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %170, i64* %171, align 8
  %172 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZZN5blink23InspectorAnimationAgent16resolveAnimationERKN3WTF6StringEPNSt3__110unique_ptrIN12v8_inspector8protocol7Runtime3API12RemoteObjectENS5_14default_deleteISB_EEEEE21kAnimationObjectGroup, i64 0, i64 0), i8** %172, align 8
  %173 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 9, i32* %173, align 8
  call void @_ZN5blink23ToV8InspectorStringViewERKN3WTF10StringViewE(%"class.v8_inspector::StringView"* nonnull sret %11, %"class.WTF::StringView"* nonnull dereferenceable(24) %12) #13
  %174 = bitcast %"class.v8_inspector::V8InspectorSession"* %119 to %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* (%"class.v8_inspector::V8InspectorSession"*, %"class.v8::Context"*, %"class.v8::Value"*, %"class.v8_inspector::StringView"*, i1)***
  %175 = load %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* (%"class.v8_inspector::V8InspectorSession"*, %"class.v8::Context"*, %"class.v8::Value"*, %"class.v8_inspector::StringView"*, i1)**, %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* (%"class.v8_inspector::V8InspectorSession"*, %"class.v8::Context"*, %"class.v8::Value"*, %"class.v8_inspector::StringView"*, i1)*** %174, align 8
  %176 = getelementptr inbounds %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* (%"class.v8_inspector::V8InspectorSession"*, %"class.v8::Context"*, %"class.v8::Value"*, %"class.v8_inspector::StringView"*, i1)*, %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* (%"class.v8_inspector::V8InspectorSession"*, %"class.v8::Context"*, %"class.v8::Value"*, %"class.v8_inspector::StringView"*, i1)** %175, i64 14
  %177 = load %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* (%"class.v8_inspector::V8InspectorSession"*, %"class.v8::Context"*, %"class.v8::Value"*, %"class.v8_inspector::StringView"*, i1)*, %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* (%"class.v8_inspector::V8InspectorSession"*, %"class.v8::Context"*, %"class.v8::Value"*, %"class.v8_inspector::StringView"*, i1)** %176, align 8
  %178 = call %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* %177(%"class.v8_inspector::V8InspectorSession"* %119, %"class.v8::Context"* %142, %"class.v8::Value"* %169, %"class.v8_inspector::StringView"* nonnull byval(%"class.v8_inspector::StringView") align 8 %11, i1 zeroext false) #13
  %179 = ptrtoint %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* %178 to i64
  %180 = getelementptr inbounds %"class.std::__1::unique_ptr.2233", %"class.std::__1::unique_ptr.2233"* %3, i64 0, i32 0, i32 0, i32 0
  %181 = load %"class.v8_inspector::protocol::Runtime::API::RemoteObject"*, %"class.v8_inspector::protocol::Runtime::API::RemoteObject"** %180, align 8
  %182 = bitcast %"class.std::__1::unique_ptr.2233"* %3 to i64*
  store i64 %179, i64* %182, align 8
  %183 = icmp eq %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* %181, null
  br i1 %183, label %190, label %184

184:                                              ; preds = %166
  %185 = bitcast %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* %181 to void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)***
  %186 = load void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)**, void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)*** %185, align 8
  %187 = getelementptr inbounds void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)** %186, i64 2
  %188 = load void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)*, void (%"class.v8_inspector::protocol::Runtime::API::RemoteObject"*)** %187, align 8
  call void %188(%"class.v8_inspector::protocol::Runtime::API::RemoteObject"* nonnull %181) #13
  %189 = load %"class.v8_inspector::protocol::Runtime::API::RemoteObject"*, %"class.v8_inspector::protocol::Runtime::API::RemoteObject"** %180, align 8
  br label %190

190:                                              ; preds = %184, %166
  %191 = phi %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* [ %189, %184 ], [ %178, %166 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %168) #13
  %192 = icmp eq %"class.v8_inspector::protocol::Runtime::API::RemoteObject"* %191, null
  br i1 %192, label %193, label %205

193:                                              ; preds = %190
  %194 = call i8* @_Znwm(i64 48) #15
  %195 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %194, i8** %195, align 8
  %196 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %197 = bitcast i64* %196 to <2 x i64>*
  store <2 x i64> <i64 39, i64 -9223372036854775760>, <2 x i64>* %197, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %194, i8* align 1 getelementptr inbounds ([40 x i8], [40 x i8]* @.str.2, i64 0, i64 0), i64 39, i1 false) #13
  %198 = getelementptr inbounds i8, i8* %194, i64 39
  store i8 0, i8* %198, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %13) #13
  %199 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %200 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %199, i64 0, i32 1, i32 0
  %201 = load i8, i8* %200, align 1
  %202 = icmp slt i8 %201, 0
  br i1 %202, label %203, label %206

203:                                              ; preds = %193
  %204 = load i8*, i8** %195, align 8
  call void @_ZdlPv(i8* %204) #15
  br label %206

205:                                              ; preds = %190
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  br label %206

206:                                              ; preds = %203, %193, %205
  %207 = load %"class.v8::Context"*, %"class.v8::Context"** %91, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %207) #13
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %92) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %90) #13
  br label %208

208:                                              ; preds = %87, %77, %206, %41
  %209 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %210 = bitcast %"class.std::__1::basic_string"* %209 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %211 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %210, i64 0, i32 1, i32 0
  %212 = load i8, i8* %211, align 1
  %213 = icmp slt i8 %212, 0
  br i1 %213, label %214, label %217

214:                                              ; preds = %208
  %215 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %209, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load i8*, i8** %215, align 8
  call void @_ZdlPv(i8* %216) #15
  br label %217

217:                                              ; preds = %208, %214
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #13
  ret void
}

declare %"class.blink::Document"* @_ZNK5blink4Node13ownerDocumentEv(%"class.blink::Node"*) local_unnamed_addr #1

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #1

declare %"class.blink::ScriptState"* @_ZN5blink25ToScriptStateForMainWorldEPNS_10LocalFrameE(%"class.blink::LocalFrame"*) local_unnamed_addr #1

declare void @_ZN5blink23ToV8InspectorStringViewERKN3WTF10StringViewE(%"class.v8_inspector::StringView"* sret, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

declare %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink23InspectorAnimationAgent16resolveAnimationERKN3WTF6StringEPNSt3__110unique_ptrIN12v8_inspector8protocol7Runtime3API12RemoteObjectENS5_14default_deleteISB_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorAnimationAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.std::__1::unique_ptr.2233"* nocapture) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %1, i64 -1, i32 10, i32 2
  %6 = bitcast double* %5 to %"class.blink::InspectorAnimationAgent"*
  tail call void @_ZN5blink23InspectorAnimationAgent16resolveAnimationERKN3WTF6StringEPNSt3__110unique_ptrIN12v8_inspector8protocol7Runtime3API12RemoteObjectENS5_14default_deleteISB_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorAnimationAgent"* %6, %"class.WTF::String"* dereferenceable(8) %2, %"class.std::__1::unique_ptr.2233"* %3)
  ret void
}

declare void @_ZN5blink17InspectorCSSAgent14MatchingStylesEPNS_7ElementE(%"class.blink::HeapVector.2256"* sret, %"class.blink::InspectorCSSAgent"*, %"class.blink::Element"*) local_unnamed_addr #1

declare void @_ZN5blink8DigestorC1ENS_13HashAlgorithmE(%"class.blink::Digestor"*, i32) unnamed_addr #1

declare zeroext i1 @_ZN5blink8Digestor10UpdateUtf8ERKN3WTF6StringENS1_18UTF8ConversionModeE(%"class.blink::Digestor"*, %"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #1

declare %"class.blink::CSSStyleDeclaration"* @_ZN5blink17InspectorCSSAgent24FindEffectiveDeclarationERKNS_15CSSPropertyNameERKNS_10HeapVectorINS_6MemberINS_19CSSStyleDeclarationEEELj0EEE(%"class.blink::InspectorCSSAgent"*, %"class.blink::CSSPropertyName"* dereferenceable(16), %"class.blink::HeapVector.2256"* dereferenceable(16)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink15CSSPropertyName14ToAtomicStringEv(%"class.blink::CSSPropertyName"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink17InspectorCSSAgent12StyleSheetIdEPNS_13CSSStyleSheetE(%"class.blink::InspectorCSSAgent"*, %"class.blink::CSSStyleSheet"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12CSSStyleRule12selectorTextEv(%"class.blink::CSSStyleRule"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink8Digestor6FinishERN3WTF6VectorIhLj64ENS1_18PartitionAllocatorEEE(%"class.blink::Digestor"*, %"class.WTF::Vector.2298"* dereferenceable(80)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF12Base64EncodeEN4base4spanIKhLm18446744073709551615EEENS_18Base64EncodePolicyE(i64, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink8DigestorD1Ev(%"class.blink::Digestor"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorAnimationAgent18DidCreateAnimationEj(%"class.blink::InspectorAnimationAgent"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 6
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %75

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %10 = load %"class.blink::protocol::Animation::Frontend"*, %"class.blink::protocol::Animation::Frontend"** %9, align 8
  %11 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #13
  %12 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #13
  %13 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 11
  %14 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 2
  %15 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 3
  %16 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false) #13
  store i8* %13, i8** %14, align 8
  %17 = urem i32 %1, 10
  %18 = udiv i32 %1, 10
  %19 = trunc i32 %17 to i8
  %20 = or i8 %19, 48
  store i8 %20, i8* %13, align 1
  %21 = icmp ugt i32 %1, 9
  br i1 %21, label %22, label %37

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 10
  store i8* %23, i8** %14, align 8
  %24 = urem i32 %18, 10
  %25 = trunc i32 %24 to i8
  %26 = or i8 %25, 48
  store i8 %26, i8* %23, align 2
  %27 = icmp ugt i32 %1, 99
  br i1 %27, label %28, label %35

28:                                               ; preds = %22
  %29 = udiv i32 %1, 100
  %30 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 9
  store i8* %30, i8** %14, align 8
  %31 = urem i32 %29, 10
  %32 = trunc i32 %31 to i8
  %33 = or i8 %32, 48
  store i8 %33, i8* %30, align 1
  %34 = icmp ugt i32 %1, 999
  br i1 %34, label %39, label %48

35:                                               ; preds = %22
  %36 = ptrtoint i8* %23 to i64
  br label %51

37:                                               ; preds = %8
  %38 = ptrtoint i8* %13 to i64
  br label %51

39:                                               ; preds = %28, %39
  %40 = phi i32 [ %42, %39 ], [ %29, %28 ]
  %41 = load i8*, i8** %14, align 8
  %42 = udiv i32 %40, 10
  %43 = getelementptr inbounds i8, i8* %41, i64 -1
  store i8* %43, i8** %14, align 8
  %44 = urem i32 %42, 10
  %45 = trunc i32 %44 to i8
  %46 = or i8 %45, 48
  store i8 %46, i8* %43, align 1
  %47 = icmp ugt i32 %40, 99
  br i1 %47, label %39, label %48

48:                                               ; preds = %39, %28
  %49 = bitcast i8** %14 to i64*
  %50 = load i64, i64* %49, align 8
  br label %51

51:                                               ; preds = %48, %35, %37
  %52 = phi i64 [ %38, %37 ], [ %50, %48 ], [ %36, %35 ]
  %53 = ptrtoint i8* %16 to i64
  %54 = sub i64 %53, %52
  %55 = trunc i64 %54 to i32
  store i32 %55, i32* %15, align 8
  %56 = inttoptr i64 %52 to i8*
  %57 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %56, i32 %55) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #13
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %57, %"class.WTF::StringImpl"** %58, align 8
  call void @_ZN5blink8protocol9Animation8Frontend16animationCreatedERKN3WTF6StringE(%"class.blink::protocol::Animation::Frontend"* %10, %"class.WTF::String"* nonnull dereferenceable(8) %4) #13
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %51
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #13
  br label %74

74:                                               ; preds = %51, %70, %73
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #13
  br label %75

75:                                               ; preds = %2, %74
  ret void
}

declare void @_ZN5blink8protocol9Animation8Frontend16animationCreatedERKN3WTF6StringE(%"class.blink::protocol::Animation::Frontend"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorAnimationAgent25AnimationPlayStateChangedEPNS_9AnimationENS1_18AnimationPlayStateES3_(%"class.blink::InspectorAnimationAgent"*, %"class.blink::Animation"*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  %8 = bitcast %"class.blink::Animation"* %1 to i32 (%"class.blink::Animation"*)***
  %9 = load i32 (%"class.blink::Animation"*)**, i32 (%"class.blink::Animation"*)*** %8, align 8
  %10 = getelementptr inbounds i32 (%"class.blink::Animation"*)*, i32 (%"class.blink::Animation"*)** %9, i64 45
  %11 = load i32 (%"class.blink::Animation"*)*, i32 (%"class.blink::Animation"*)** %10, align 8
  %12 = tail call i32 %11(%"class.blink::Animation"* %1) #13
  %13 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #13
  %14 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 11
  %15 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 2
  %16 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 3
  %17 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false) #13
  store i8* %14, i8** %15, align 8
  %18 = urem i32 %12, 10
  %19 = udiv i32 %12, 10
  %20 = trunc i32 %18 to i8
  %21 = or i8 %20, 48
  store i8 %21, i8* %14, align 1
  %22 = icmp ugt i32 %12, 9
  br i1 %22, label %23, label %38

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 10
  store i8* %24, i8** %15, align 8
  %25 = urem i32 %19, 10
  %26 = trunc i32 %25 to i8
  %27 = or i8 %26, 48
  store i8 %27, i8* %24, align 2
  %28 = icmp ugt i32 %12, 99
  br i1 %28, label %29, label %36

29:                                               ; preds = %23
  %30 = udiv i32 %12, 100
  %31 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 9
  store i8* %31, i8** %15, align 8
  %32 = urem i32 %30, 10
  %33 = trunc i32 %32 to i8
  %34 = or i8 %33, 48
  store i8 %34, i8* %31, align 1
  %35 = icmp ugt i32 %12, 999
  br i1 %35, label %40, label %49

36:                                               ; preds = %23
  %37 = ptrtoint i8* %24 to i64
  br label %52

38:                                               ; preds = %4
  %39 = ptrtoint i8* %14 to i64
  br label %52

40:                                               ; preds = %29, %40
  %41 = phi i32 [ %43, %40 ], [ %30, %29 ]
  %42 = load i8*, i8** %15, align 8
  %43 = udiv i32 %41, 10
  %44 = getelementptr inbounds i8, i8* %42, i64 -1
  store i8* %44, i8** %15, align 8
  %45 = urem i32 %43, 10
  %46 = trunc i32 %45 to i8
  %47 = or i8 %46, 48
  store i8 %47, i8* %44, align 1
  %48 = icmp ugt i32 %41, 99
  br i1 %48, label %40, label %49

49:                                               ; preds = %40, %29
  %50 = bitcast i8** %15 to i64*
  %51 = load i64, i64* %50, align 8
  br label %52

52:                                               ; preds = %49, %36, %38
  %53 = phi i64 [ %39, %38 ], [ %51, %49 ], [ %37, %36 ]
  %54 = ptrtoint i8* %17 to i64
  %55 = sub i64 %54, %53
  %56 = trunc i64 %55 to i32
  store i32 %56, i32* %16, align 8
  %57 = inttoptr i64 %53 to i8*
  %58 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %57, i32 %56) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #13
  %59 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"** %59, align 8
  %60 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 8, i32 0, i32 0
  %61 = load %"class.WTF::String"*, %"class.WTF::String"** %60, align 8
  %62 = icmp eq %"class.WTF::String"* %61, null
  br i1 %62, label %118, label %63

63:                                               ; preds = %52
  %64 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 8, i32 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = add i32 %65, -1
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = lshr i32 %69, 8
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %63
  %73 = call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %58) #13
  br label %74

74:                                               ; preds = %72, %63
  %75 = phi i32 [ %73, %72 ], [ %70, %63 ]
  %76 = and i32 %75, %66
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %61, i64 %77
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %118, label %82

82:                                               ; preds = %74
  %83 = xor i32 %75, -1
  %84 = lshr i32 %75, 23
  %85 = add i32 %84, %83
  %86 = shl i32 %85, 12
  %87 = xor i32 %86, %85
  %88 = lshr i32 %87, 7
  %89 = xor i32 %88, %87
  %90 = shl i32 %89, 2
  %91 = xor i32 %90, %89
  %92 = lshr i32 %91, 20
  %93 = xor i32 %92, %91
  %94 = or i32 %93, 1
  %95 = zext i32 %94 to i64
  br label %96

96:                                               ; preds = %107, %82
  %97 = phi %"class.WTF::StringImpl"* [ %80, %82 ], [ %114, %107 ]
  %98 = phi %"class.WTF::String"* [ %78, %82 ], [ %112, %107 ]
  %99 = phi i64 [ %77, %82 ], [ %111, %107 ]
  %100 = phi i64 [ 0, %82 ], [ %109, %107 ]
  %101 = bitcast %"class.WTF::String"* %98 to i8**
  %102 = load i8*, i8** %101, align 8
  %103 = icmp eq i8* %102, inttoptr (i64 -1 to i8*)
  br i1 %103, label %107, label %104

104:                                              ; preds = %96
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %106 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %97, %"class.WTF::StringImpl"* %105) #13
  br i1 %106, label %116, label %107

107:                                              ; preds = %104, %96
  %108 = icmp eq i64 %100, 0
  %109 = select i1 %108, i64 %95, i64 %100
  %110 = add i64 %109, %99
  %111 = and i64 %110, %67
  %112 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %61, i64 %111
  %113 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %112, i64 0, i32 0, i32 0
  %114 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  %115 = icmp eq %"class.WTF::StringImpl"* %114, null
  br i1 %115, label %118, label %96

116:                                              ; preds = %104
  %117 = icmp eq %"class.WTF::String"* %98, null
  br i1 %117, label %118, label %131

118:                                              ; preds = %107, %116, %74, %52
  switch i32 %3, label %131 [
    i32 5, label %119
    i32 3, label %119
    i32 4, label %128
    i32 1, label %128
  ]

119:                                              ; preds = %118, %118
  %120 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 4, i32 0, i32 0
  %121 = call zeroext i1 @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EES1_EEbRKT0_(%"class.WTF::HashTable.439"* %120, %"class.WTF::String"* nonnull dereferenceable(8) %6) #13
  br i1 %121, label %126, label %122

122:                                              ; preds = %119
  %123 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %124 = load %"class.blink::protocol::Animation::Frontend"*, %"class.blink::protocol::Animation::Frontend"** %123, align 8
  %125 = call %"class.blink::protocol::Animation::Animation"* @_ZN5blink23InspectorAnimationAgent23BuildObjectForAnimationERNS_9AnimationE(%"class.blink::InspectorAnimationAgent"* %0, %"class.blink::Animation"* dereferenceable(368) %1)
  call void @_ZN5blink8protocol9Animation8Frontend16animationStartedENSt3__110unique_ptrINS1_9AnimationENS3_14default_deleteIS5_EEEE(%"class.blink::protocol::Animation::Frontend"* %124, %"class.blink::protocol::Animation::Animation"* %125) #13
  br label %131

126:                                              ; preds = %119
  %127 = icmp eq i32 %3, 4
  br i1 %127, label %128, label %131

128:                                              ; preds = %126, %118, %118
  %129 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %130 = load %"class.blink::protocol::Animation::Frontend"*, %"class.blink::protocol::Animation::Frontend"** %129, align 8
  call void @_ZN5blink8protocol9Animation8Frontend17animationCanceledERKN3WTF6StringE(%"class.blink::protocol::Animation::Frontend"* %130, %"class.WTF::String"* nonnull dereferenceable(8) %6) #13
  br label %131

131:                                              ; preds = %116, %126, %118, %122, %128
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %131
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #13
  br label %147

147:                                              ; preds = %131, %143, %146
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  ret void
}

declare void @_ZN5blink8protocol9Animation8Frontend16animationStartedENSt3__110unique_ptrINS1_9AnimationENS3_14default_deleteIS5_EEEE(%"class.blink::protocol::Animation::Frontend"*, %"class.blink::protocol::Animation::Animation"*) local_unnamed_addr #1

declare void @_ZN5blink8protocol9Animation8Frontend17animationCanceledERKN3WTF6StringE(%"class.blink::protocol::Animation::Frontend"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23InspectorAnimationAgent30DidClearDocumentOfWindowObjectEPNS_10LocalFrameE(%"class.blink::InspectorAnimationAgent"* nocapture readonly, %"class.blink::LocalFrame"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 9, i32 2
  %4 = load i8, i8* %3, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %18, label %6

6:                                                ; preds = %2
  %7 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %1) #13
  %8 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %7, i64 0, i32 131, i32 0, i32 0
  %9 = load %"class.blink::DocumentTimeline"*, %"class.blink::DocumentTimeline"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %11, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %12, align 8
  %14 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %13) #13
  %15 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %14, i64 0, i32 131, i32 0, i32 0
  %16 = load %"class.blink::DocumentTimeline"*, %"class.blink::DocumentTimeline"** %15, align 8
  %17 = tail call double @_ZNK5blink16DocumentTimeline12PlaybackRateEv(%"class.blink::DocumentTimeline"* %16) #13
  tail call void @_ZN5blink16DocumentTimeline15SetPlaybackRateEd(%"class.blink::DocumentTimeline"* %9, double %17) #13
  br label %18

18:                                               ; preds = %2, %6
  ret void
}

declare { i8, double } @_ZN5blink17AnimationTimeline23CurrentTimeMillisecondsEv(%"class.blink::AnimationTimeline"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare double @llvm.round.f64(double) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink23InspectorAnimationAgent5TraceEPNS_7VisitorE(%"class.blink::InspectorAnimationAgent"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.233"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15InspectedFramesEE5TraceEPNS_7VisitorEPKv) #13
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 2
  %15 = bitcast %"class.blink::Member.239"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17InspectorCSSAgentEE5TraceEPNS_7VisitorEPKv) #13
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 4
  %26 = bitcast %"class.blink::HeapHashMap.435"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = bitcast %"class.blink::HeapHashMap.435"* %25 to i8**
  %29 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %30 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %30, i64 11
  %32 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %31, align 8
  tail call void %32(%"class.blink::Visitor"* %1, i8** %28) #13
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %24
  %35 = inttoptr i64 %27 to i8*
  %36 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, i64 5
  %39 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %38, align 8
  tail call void %39(%"class.blink::Visitor"* %1, i8* nonnull %35, i8* nonnull %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9AnimationEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #13
  br label %40

40:                                               ; preds = %24, %34
  %41 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 5
  %42 = bitcast %"class.blink::HeapHashMap.435"* %41 to i64*
  %43 = load atomic i64, i64* %42 monotonic, align 8
  %44 = bitcast %"class.blink::HeapHashMap.435"* %41 to i8**
  %45 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %29, align 8
  %46 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %45, i64 11
  %47 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %46, align 8
  tail call void %47(%"class.blink::Visitor"* %1, i8** %44) #13
  %48 = icmp eq i64 %43, 0
  br i1 %48, label %55, label %49

49:                                               ; preds = %40
  %50 = inttoptr i64 %43 to i8*
  %51 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %52, i64 5
  %54 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %53, align 8
  tail call void %54(%"class.blink::Visitor"* %1, i8* nonnull %50, i8* nonnull %50, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9AnimationEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #13
  br label %55

55:                                               ; preds = %40, %49
  %56 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 0, i32 2
  %57 = bitcast %"class.blink::Member"* %56 to i64*
  %58 = load atomic i64, i64* %57 monotonic, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %66, label %60

60:                                               ; preds = %55
  %61 = inttoptr i64 %58 to i8*
  %62 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %63 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %63, i64 5
  %65 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %64, align 8
  tail call void %65(%"class.blink::Visitor"* %1, i8* nonnull %61, i8* nonnull %61, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv) #13
  br label %66

66:                                               ; preds = %55, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEE5TraceEPNS_7VisitorE(%"class.blink::InspectorBaseAgent"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv) #13
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23InspectorAnimationAgentD2Ev(%"class.blink::InspectorAnimationAgent"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.blink::InspectorAnimationAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*], [14 x i8*] }, { [20 x i8*], [14 x i8*] }* @_ZTVN5blink23InspectorAnimationAgentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*], [14 x i8*] }, { [20 x i8*], [14 x i8*] }* @_ZTVN5blink23InspectorAnimationAgentE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 10, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  br i1 %11, label %14, label %16

14:                                               ; preds = %7
  %15 = add i32 %13, -1
  store i32 %15, i32* %12, align 4
  br label %16

16:                                               ; preds = %14, %7
  %17 = phi i32 [ %15, %14 ], [ %13, %7 ]
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #13
  br label %20

20:                                               ; preds = %1, %16, %19
  %21 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 9, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8
  %22 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %25
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i32 [ %33, %32 ], [ %31, %25 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #13
  br label %38

38:                                               ; preds = %20, %34, %37
  %39 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 8, i32 0, i32 0
  %40 = load %"class.WTF::String"*, %"class.WTF::String"** %39, align 8
  %41 = icmp eq %"class.WTF::String"* %40, null
  br i1 %41, label %74, label %42, !prof !4

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 8, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %72, label %46

46:                                               ; preds = %42
  %47 = zext i32 %44 to i64
  br label %48

48:                                               ; preds = %69, %46
  %49 = phi i64 [ 0, %46 ], [ %70, %69 ]
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %40, i64 %49
  %51 = bitcast %"class.WTF::String"* %50 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %54 = ptrtoint i8* %52 to i64
  switch i64 %54, label %55 [
    i64 -1, label %69
    i64 0, label %69
  ]

55:                                               ; preds = %48
  %56 = getelementptr inbounds i8, i8* %52, i64 8
  %57 = bitcast i8* %56 to i32*
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = bitcast i8* %52 to i32*
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %55
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %55
  %66 = phi i32 [ %64, %63 ], [ %62, %55 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #13
  br label %69

69:                                               ; preds = %68, %65, %48, %48
  %70 = add nuw nsw i64 %49, 1
  %71 = icmp eq i64 %70, %47
  br i1 %71, label %72, label %48

72:                                               ; preds = %69, %42
  %73 = bitcast %"class.WTF::String"* %40 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %73) #13
  store %"class.WTF::String"* null, %"class.WTF::String"** %39, align 8
  br label %74

74:                                               ; preds = %38, %72
  %75 = bitcast %"class.blink::InspectorAnimationAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [14 x i8*] }, { [11 x i8*], [14 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [14 x i8*] }, { [11 x i8*], [14 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %75, align 8
  %76 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %77 = load %"class.blink::protocol::Animation::Frontend"*, %"class.blink::protocol::Animation::Frontend"** %76, align 8
  store %"class.blink::protocol::Animation::Frontend"* null, %"class.blink::protocol::Animation::Frontend"** %76, align 8
  %78 = icmp eq %"class.blink::protocol::Animation::Frontend"* %77, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %74
  %80 = bitcast %"class.blink::protocol::Animation::Frontend"* %77 to i8*
  tail call void @_ZdlPv(i8* %80) #15
  br label %81

81:                                               ; preds = %79, %74
  %82 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %83 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %82, align 8
  %84 = icmp eq %"class.blink::InspectorAgentState::Field"** %83, null
  %85 = bitcast %"class.blink::InspectorAgentState::Field"** %83 to i8*
  br i1 %84, label %92, label %86, !prof !4

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %88 = load i32, i32* %87, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %91, label %90, !prof !3

90:                                               ; preds = %86
  store i32 0, i32* %87, align 4
  br label %91

91:                                               ; preds = %90, %86
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %85) #13
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %82, align 8
  br label %92

92:                                               ; preds = %91, %81
  %93 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %105

103:                                              ; preds = %96
  %104 = add i32 %102, -1
  store i32 %104, i32* %101, align 4
  br label %105

105:                                              ; preds = %103, %96
  %106 = phi i32 [ %104, %103 ], [ %102, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #13
  br label %109

109:                                              ; preds = %92, %105, %108
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23InspectorAnimationAgentD0Ev(%"class.blink::InspectorAnimationAgent"*) unnamed_addr #5 comdat align 2 {
  tail call void @_ZN5blink23InspectorAnimationAgentD2Ev(%"class.blink::InspectorAnimationAgent"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv(%"class.blink::InspectorAgent"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE(%"class.blink::InspectorBaseAgent"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 2
  %6 = ptrtoint %"class.blink::CoreProbeSink"* %1 to i64
  %7 = bitcast %"class.blink::Member"* %5 to i64*
  store atomic i64 %6, i64* %7 monotonic, align 8
  %8 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = bitcast %"class.blink::CoreProbeSink"* %1 to i8*
  %12 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %11) #13
  br label %13

13:                                               ; preds = %4, %10
  %14 = tail call i8* @_Znwm(i64 8) #15
  %15 = getelementptr inbounds %"class.crdtp::UberDispatcher", %"class.crdtp::UberDispatcher"* %2, i64 0, i32 1
  %16 = bitcast %"class.crdtp::FrontendChannel"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast i8* %14 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.blink::protocol::Animation::Frontend"*, %"class.blink::protocol::Animation::Frontend"** %19, align 8
  %21 = bitcast %"class.blink::protocol::Animation::Frontend"** %19 to i8**
  store i8* %14, i8** %21, align 8
  %22 = icmp eq %"class.blink::protocol::Animation::Frontend"* %20, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %13
  %24 = bitcast %"class.blink::protocol::Animation::Frontend"* %20 to i8*
  tail call void @_ZdlPv(i8* %24) #15
  br label %25

25:                                               ; preds = %13, %23
  %26 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 1
  tail call void @_ZN5blink8protocol9Animation10Dispatcher4wireEPN5crdtp14UberDispatcherEPNS1_7BackendE(%"class.crdtp::UberDispatcher"* %2, %"class.blink::protocol::Animation::Backend"* %26) #13
  %27 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3
  tail call void @_ZN5blink19InspectorAgentState8InitFromEPNS_21InspectorSessionStateE(%"class.blink::InspectorAgentState"* %27, %"class.blink::InspectorSessionState"* %3) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEE7DisposeEv(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.crdtp::DispatchResponse", align 8
  %3 = bitcast %"class.blink::InspectorBaseAgent"* %0 to void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)***
  %4 = load void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)**, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)*, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)** %4, i64 8
  %6 = load void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)*, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent"*)** %5, align 8
  call void %6(%"class.crdtp::DispatchResponse"* nonnull sret %2, %"class.blink::InspectorBaseAgent"* %0) #13
  %7 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %2, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %14) #15
  br label %15

15:                                               ; preds = %1, %12
  %16 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.blink::protocol::Animation::Frontend"*, %"class.blink::protocol::Animation::Frontend"** %16, align 8
  store %"class.blink::protocol::Animation::Frontend"* null, %"class.blink::protocol::Animation::Frontend"** %16, align 8
  %18 = icmp eq %"class.blink::protocol::Animation::Frontend"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.blink::protocol::Animation::Frontend"* %17 to i8*
  call void @_ZdlPv(i8* %20) #15
  br label %21

21:                                               ; preds = %15, %19
  %22 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 2
  %23 = bitcast %"class.blink::Member"* %22 to i64*
  store atomic i64 0, i64* %23 monotonic, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink23InspectorAnimationAgentD1Ev(%"class.blink::InspectorAnimationAgent"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 -1, i32 10, i32 2
  %3 = bitcast double* %2 to %"class.blink::InspectorAnimationAgent"*
  tail call void @_ZN5blink23InspectorAnimationAgentD2Ev(%"class.blink::InspectorAnimationAgent"* %3) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink23InspectorAnimationAgentD0Ev(%"class.blink::InspectorAnimationAgent"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAnimationAgent", %"class.blink::InspectorAnimationAgent"* %0, i64 -1, i32 10, i32 2
  %3 = bitcast double* %2 to %"class.blink::InspectorAnimationAgent"*
  tail call void @_ZN5blink23InspectorAnimationAgentD2Ev(%"class.blink::InspectorAnimationAgent"* %3) #13
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare %"class.blink::ComputedEffectTiming"* @_ZNK5blink15AnimationEffect17getComputedTimingEv(%"class.blink::AnimationEffect"*) local_unnamed_addr #1

declare double @_ZNK5blink26UnrestrictedDoubleOrString23GetAsUnrestrictedDoubleEv(%"class.blink::UnrestrictedDoubleOrString"*) local_unnamed_addr #1

declare i32 @_ZN5blink18IdentifiersFactory12IntIdForNodeEPNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

declare void @_ZN5blink23KeyframeEffectModelBase18GetComputedOffsetsINS_6MemberINS_8KeyframeEEEEEN3WTF6VectorIdLj0ENS5_18PartitionAllocatorEEERKNS_10HeapVectorIT_Lj0EEE(%"class.WTF::Vector.2402"* sret, %"class.blink::HeapVector.2059"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.2065"* @_ZNK3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2062"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2062", %"class.WTF::Vector.2062"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.2062", %"class.WTF::Vector.2062"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.2065"*, %"class.blink::Member.2065"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.2065", %"class.blink::Member.2065"* %24, i64 %25
  ret %"class.blink::Member.2065"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2402"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2402", %"class.WTF::Vector.2402"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.2402", %"class.WTF::Vector.2402"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load double*, double** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds double, double* %24, i64 %25
  ret double* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol9Animation13KeyframeStyleENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.2027"*, %"class.std::__1::unique_ptr.2029"* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2027", %"class.std::__1::vector.2027"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.2029"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.2027"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.2027"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.2027", %"class.std::__1::vector.2027"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.2029"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #15
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.2029"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.2029"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.2029", %"class.std::__1::unique_ptr.2029"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.2029", %"class.std::__1::unique_ptr.2029"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.2029"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.2029", %"class.std::__1::unique_ptr.2029"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.2029"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::Animation::KeyframeStyle"* null, %"class.blink::protocol::Animation::KeyframeStyle"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.2029"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.2029", %"class.std::__1::unique_ptr.2029"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.2029"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.2027", %"class.std::__1::vector.2027"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.2029"*, %"class.std::__1::unique_ptr.2029"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.2029"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.2029"*, %"class.std::__1::unique_ptr.2029"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.2029"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.2029", %"class.std::__1::unique_ptr.2029"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::Animation::KeyframeStyle"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.2029"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.2029"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.2029", %"class.std::__1::unique_ptr.2029"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.2029", %"class.std::__1::unique_ptr.2029"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.2029", %"class.std::__1::unique_ptr.2029"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.2029"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::Animation::KeyframeStyle"* null, %"class.blink::protocol::Animation::KeyframeStyle"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.2029"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !23

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.2029"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.2029"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.2029"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.2029"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.2029"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.2029", %"class.std::__1::unique_ptr.2029"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.2029", %"class.std::__1::unique_ptr.2029"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.2029", %"class.std::__1::unique_ptr.2029"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.2029"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::Animation::KeyframeStyle"* null, %"class.blink::protocol::Animation::KeyframeStyle"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.2029"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.2029", %"class.std::__1::unique_ptr.2029"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.2029", %"class.std::__1::unique_ptr.2029"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.2029", %"class.std::__1::unique_ptr.2029"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.2029"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::Animation::KeyframeStyle"* null, %"class.blink::protocol::Animation::KeyframeStyle"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.2029"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.2029", %"class.std::__1::unique_ptr.2029"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.2029", %"class.std::__1::unique_ptr.2029"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.2029", %"class.std::__1::unique_ptr.2029"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.2029"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::Animation::KeyframeStyle"* null, %"class.blink::protocol::Animation::KeyframeStyle"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.2029"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.2029", %"class.std::__1::unique_ptr.2029"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.2029", %"class.std::__1::unique_ptr.2029"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.2029", %"class.std::__1::unique_ptr.2029"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.2029"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::Animation::KeyframeStyle"* null, %"class.blink::protocol::Animation::KeyframeStyle"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.2029"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.2029", %"class.std::__1::unique_ptr.2029"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.2029", %"class.std::__1::unique_ptr.2029"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.2029", %"class.std::__1::unique_ptr.2029"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.2029"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::Animation::KeyframeStyle"* null, %"class.blink::protocol::Animation::KeyframeStyle"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.2029"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.2029", %"class.std::__1::unique_ptr.2029"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.2029", %"class.std::__1::unique_ptr.2029"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.2029", %"class.std::__1::unique_ptr.2029"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.2029"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::Animation::KeyframeStyle"* null, %"class.blink::protocol::Animation::KeyframeStyle"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.2029"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.2029", %"class.std::__1::unique_ptr.2029"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.2029", %"class.std::__1::unique_ptr.2029"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.2029", %"class.std::__1::unique_ptr.2029"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.2029"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::Animation::KeyframeStyle"* null, %"class.blink::protocol::Animation::KeyframeStyle"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.2029"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.2029", %"class.std::__1::unique_ptr.2029"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.2029", %"class.std::__1::unique_ptr.2029"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.2029", %"class.std::__1::unique_ptr.2029"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.2029"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::Animation::KeyframeStyle"* null, %"class.blink::protocol::Animation::KeyframeStyle"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.2029"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.2029"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.2029"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.2029"*, %"class.std::__1::unique_ptr.2029"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.2029"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.2029"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.2029"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.2029"*
  %138 = icmp eq %"class.std::__1::unique_ptr.2029"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.2029"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.2029", %"class.std::__1::unique_ptr.2029"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.2029", %"class.std::__1::unique_ptr.2029"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::Animation::KeyframeStyle"*, %"class.blink::protocol::Animation::KeyframeStyle"** %142, align 8
  store %"class.blink::protocol::Animation::KeyframeStyle"* null, %"class.blink::protocol::Animation::KeyframeStyle"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::Animation::KeyframeStyle"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::Animation::KeyframeStyle"* %143 to void (%"class.blink::protocol::Animation::KeyframeStyle"*)***
  %147 = load void (%"class.blink::protocol::Animation::KeyframeStyle"*)**, void (%"class.blink::protocol::Animation::KeyframeStyle"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::Animation::KeyframeStyle"*)*, void (%"class.blink::protocol::Animation::KeyframeStyle"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::Animation::KeyframeStyle"*)*, void (%"class.blink::protocol::Animation::KeyframeStyle"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::Animation::KeyframeStyle"* nonnull %143) #13
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.2029"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #15
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

declare %"class.WTF::StringImpl"* @_ZN3WTF6String24NumberToStringECMAScriptEd(double) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2413", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2413", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.2413", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = select i1 %11, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %10
  %14 = bitcast %"class.WTF::StringTypeAdapter.2413"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #13
  %16 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2413"* nonnull %6, i8* %16) #13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #13
  br i1 %20, label %81, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #13
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #13
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false) #13
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %21
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %39

33:                                               ; preds = %21
  %34 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  %38 = bitcast %"class.WTF::StringImpl"* %37 to i8*
  br label %39

39:                                               ; preds = %31, %33
  %40 = phi i8* [ null, %31 ], [ %38, %33 ]
  %41 = phi i64 [ %32, %31 ], [ %34, %33 ]
  %42 = phi i32 [ 0, %31 ], [ %36, %33 ]
  %43 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i64*
  store i64 %41, i64* %43, align 8
  store i8* %40, i8** %27, align 8
  store i32 %42, i32* %28, align 8
  %44 = bitcast %"class.WTF::StringTypeAdapter.2413"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false) #13
  %45 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2413"* nonnull %5, i8* %45) #13
  %46 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2412"* nonnull %46, i8* %25) #13
  %47 = load i32, i32* %28, align 8
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %25, i64 %48
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2413"* nonnull %5, i8* %49) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #13
  %50 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %50, label %141, label %51

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %68

58:                                               ; preds = %51
  %59 = zext i32 %57 to i33
  %60 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #13
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !3

65:                                               ; preds = %58
  call void @llvm.trap() #13
  unreachable

66:                                               ; preds = %58
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %56, align 4
  br label %68

68:                                               ; preds = %51, %66
  %69 = phi i32 [ %67, %66 ], [ %57, %51 ]
  %70 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %71 = load atomic i32, i32* %52 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %76 = add i32 %69, -1
  store i32 %76, i32* %75, align 4
  br label %77

77:                                               ; preds = %74, %68
  %78 = phi i32 [ %76, %74 ], [ %69, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %141

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #13
  br label %141

81:                                               ; preds = %1
  %82 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #13
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %83 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %0)
  %84 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %83, i16** nonnull dereferenceable(8) %8) #13
  %85 = load i16*, i16** %8, align 8
  %86 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #13
  %87 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 1
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 24, i1 false) #13
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %91, label %93

91:                                               ; preds = %81
  %92 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %99

93:                                               ; preds = %81
  %94 = ptrtoint %"class.WTF::StringImpl"* %89 to i64
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 1
  %98 = bitcast %"class.WTF::StringImpl"* %97 to i8*
  br label %99

99:                                               ; preds = %91, %93
  %100 = phi i8* [ null, %91 ], [ %98, %93 ]
  %101 = phi i64 [ %92, %91 ], [ %94, %93 ]
  %102 = phi i32 [ 0, %91 ], [ %96, %93 ]
  %103 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i64*
  store i64 %101, i64* %103, align 8
  store i8* %100, i8** %87, align 8
  store i32 %102, i32* %88, align 8
  %104 = bitcast %"class.WTF::StringTypeAdapter.2413"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 -86, i64 16, i1 false) #13
  %105 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2413"* nonnull %3, i8* %105) #13
  %106 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2412"* nonnull %106, i16* %85) #13
  %107 = load i32, i32* %88, align 8
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i16, i16* %85, i64 %108
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2413"* nonnull %3, i16* %109) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #13
  %110 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %110, label %141, label %111

111:                                              ; preds = %99
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %128

118:                                              ; preds = %111
  %119 = zext i32 %117 to i33
  %120 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %119, i33 1) #13
  %121 = extractvalue { i33, i1 } %120, 1
  %122 = extractvalue { i33, i1 } %120, 0
  %123 = icmp slt i33 %122, 0
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126, !prof !3

125:                                              ; preds = %118
  call void @llvm.trap() #13
  unreachable

126:                                              ; preds = %118
  %127 = trunc i33 %122 to i32
  store i32 %127, i32* %116, align 4
  br label %128

128:                                              ; preds = %111, %126
  %129 = phi i32 [ %127, %126 ], [ %117, %111 ]
  %130 = ptrtoint %"class.WTF::StringImpl"* %84 to i64
  %131 = load atomic i32, i32* %112 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %136 = add i32 %129, -1
  store i32 %136, i32* %135, align 4
  br label %137

137:                                              ; preds = %134, %128
  %138 = phi i32 [ %136, %134 ], [ %129, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #13
  br label %141

141:                                              ; preds = %140, %137, %99, %80, %77, %39
  %142 = phi i8* [ %22, %39 ], [ %22, %77 ], [ %22, %80 ], [ %82, %99 ], [ %82, %137 ], [ %82, %140 ]
  %143 = phi i64 [ 0, %39 ], [ %70, %77 ], [ %70, %80 ], [ 0, %99 ], [ %130, %137 ], [ %130, %140 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #13
  %144 = inttoptr i64 %143 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %144
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2413", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter.2413"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #13
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2413", %"class.WTF::StringTypeAdapter.2413"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter.2413"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2413"* nonnull %4, i8* %21) #13
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #13
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #13
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0), i8* %30, i8* %31) #13
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.9, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #13
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #13
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #13
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i64 0, i64 0), i8* %46, i8* %47) #13
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.9, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #13
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #13
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #13
  ret i32 %23
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2413"*, i8*) unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2412"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2413"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2412"*, i16*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2413"*, i16*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink13CSSTransition18transitionPropertyEv(%"class.blink::CSSTransition"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9Animation27CalculateAnimationPlayStateEv(%"class.blink::Animation"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe.2023"*, %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2023", %"class.crdtp::detail::ValueMaybe.2023"* %0, i64 0, i32 1
  %4 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #13
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !3

19:                                               ; preds = %10
  tail call void @llvm.trap() #13
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %20, %5, %2
  %23 = ptrtoint %"class.WTF::StringImpl"* %1 to i64
  %24 = bitcast %"class.WTF::String"* %3 to i64*
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  store i64 %23, i64* %24, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #13
  br label %41

41:                                               ; preds = %22, %37, %40
  %42 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe.2023", %"class.crdtp::detail::ValueMaybe.2023"* %0, i64 0, i32 0
  store i8 1, i8* %42, align 8
  br i1 %4, label %56, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #13
  br label %56

56:                                               ; preds = %41, %52, %55
  ret void
}

declare void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"*) unnamed_addr #1

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZN5blink20OptionalEffectTimingC1Ev(%"class.blink::OptionalEffectTiming"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #5 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #13
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* %21, i8* %22) #13
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.12, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #13
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #13
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #1

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #13
  %5 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %6 = ptrtoint i64* %3 to i64
  %7 = sub i64 %5, %6
  %8 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %9 = icmp ult i64 %7, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #13
  %10 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %11 = icmp eq i32 %10, 0
  %12 = and i1 %9, %11
  br i1 %12, label %13, label %24

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %15 = bitcast %"class.blink::TraceWrapperV8Reference"* %14 to %"class.v8::Object"**
  %16 = load %"class.v8::Object"*, %"class.v8::Object"** %15, align 8
  %17 = icmp eq %"class.v8::Object"* %16, null
  br i1 %17, label %68, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.v8::Object"* %16 to i64*
  %20 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %21 = load i64, i64* %19, align 8
  %22 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %20, i64 %21) #13
  %23 = bitcast i64* %22 to %"class.v8::Object"*
  br label %68

24:                                               ; preds = %2
  %25 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #13
  %26 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %25) #13
  %27 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %26, i64 0, i32 2, i32 0
  %28 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 1
  %32 = load i8, i8* %31, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %45, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %36 = bitcast %"class.blink::TraceWrapperV8Reference"* %35 to %"class.v8::Object"**
  %37 = load %"class.v8::Object"*, %"class.v8::Object"** %36, align 8
  %38 = icmp eq %"class.v8::Object"* %37, null
  br i1 %38, label %68, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.v8::Object"* %37 to i64*
  %41 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %42 = load i64, i64* %40, align 8
  %43 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %41, i64 %42) #13
  %44 = bitcast i64* %43 to %"class.v8::Object"*
  br label %68

45:                                               ; preds = %24
  %46 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0
  %47 = getelementptr inbounds %"class.WTF::HashMap.719", %"class.WTF::HashMap.719"* %46, i64 0, i32 0
  %48 = call { %"struct.WTF::KeyValuePair.722"*, %"struct.WTF::KeyValuePair.722"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable.720"* %47, %"class.blink::ScriptWrappable"* %0) #13
  %49 = extractvalue { %"struct.WTF::KeyValuePair.722"*, %"struct.WTF::KeyValuePair.722"* } %48, 0
  %50 = getelementptr inbounds %"class.WTF::HashMap.719", %"class.WTF::HashMap.719"* %46, i64 0, i32 0, i32 0
  %51 = load %"struct.WTF::KeyValuePair.722"*, %"struct.WTF::KeyValuePair.722"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.722", %"struct.WTF::KeyValuePair.722"* %51, i64 %54
  %56 = icmp eq %"struct.WTF::KeyValuePair.722"* %49, %55
  br i1 %56, label %68, label %57

57:                                               ; preds = %45
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.722", %"struct.WTF::KeyValuePair.722"* %49, i64 0, i32 1
  %59 = bitcast %"class.blink::TraceWrapperV8Reference"* %58 to %"class.v8::Object"**
  %60 = load %"class.v8::Object"*, %"class.v8::Object"** %59, align 8
  %61 = icmp eq %"class.v8::Object"* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.v8::Object"* %60 to i64*
  %64 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %65 = load i64, i64* %63, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %65) #13
  %67 = bitcast i64* %66 to %"class.v8::Object"*
  br label %68

68:                                               ; preds = %62, %57, %45, %39, %34, %18, %13
  %69 = phi %"class.v8::Object"* [ %23, %18 ], [ null, %13 ], [ %44, %39 ], [ null, %34 ], [ %67, %62 ], [ null, %57 ], [ null, %45 ]
  ret %"class.v8::Object"* %69
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.14, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i64 0, i64 0)) #13
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #13
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.14, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.16, i64 0, i64 0)) #13
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #13
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.722"*, %"struct.WTF::KeyValuePair.722"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable.720"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ScriptWrappable"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable.720", %"class.WTF::HashTable.720"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.722"*, %"struct.WTF::KeyValuePair.722"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.722"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable.720", %"class.WTF::HashTable.720"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.722", %"struct.WTF::KeyValuePair.722"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.722", %"struct.WTF::KeyValuePair.722"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %34, align 8
  %36 = icmp eq %"class.blink::ScriptWrappable"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.722", %"struct.WTF::KeyValuePair.722"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %54, align 8
  %56 = icmp eq %"class.blink::ScriptWrappable"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.722", %"struct.WTF::KeyValuePair.722"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.722", %"struct.WTF::KeyValuePair.722"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %63, align 8
  %65 = icmp eq %"class.blink::ScriptWrappable"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair.722"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair.722"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.722", %"struct.WTF::KeyValuePair.722"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.722", %"struct.WTF::KeyValuePair.722"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair.722"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair.722"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair.722"*, %"struct.WTF::KeyValuePair.722"* } undef, %"struct.WTF::KeyValuePair.722"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair.722"*, %"struct.WTF::KeyValuePair.722"* } %78, %"struct.WTF::KeyValuePair.722"* %77, 1
  ret { %"struct.WTF::KeyValuePair.722"*, %"struct.WTF::KeyValuePair.722"* } %79
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.2299"*, i8*) local_unnamed_addr #12 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState5FieldD2Ev(%"class.blink::InspectorAgentState::Field"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::Field", %"class.blink::InspectorAgentState::Field"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::Field", %"class.blink::InspectorAgentState::Field"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #13
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState5FieldD0Ev(%"class.blink::InspectorAgentState::Field"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEED2Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::InspectorBaseAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [14 x i8*] }, { [11 x i8*], [14 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [14 x i8*] }, { [11 x i8*], [14 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.blink::protocol::Animation::Frontend"*, %"class.blink::protocol::Animation::Frontend"** %3, align 8
  store %"class.blink::protocol::Animation::Frontend"* null, %"class.blink::protocol::Animation::Frontend"** %3, align 8
  %5 = icmp eq %"class.blink::protocol::Animation::Frontend"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::protocol::Animation::Frontend"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %9, align 8
  %11 = icmp eq %"class.blink::InspectorAgentState::Field"** %10, null
  %12 = bitcast %"class.blink::InspectorAgentState::Field"** %10 to i8*
  br i1 %11, label %19, label %13, !prof !4

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17, !prof !3

17:                                               ; preds = %13
  store i32 0, i32* %14, align 4
  br label %18

18:                                               ; preds = %17, %13
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %12) #13
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %9, align 8
  br label %19

19:                                               ; preds = %18, %8
  %20 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #13
  br label %36

36:                                               ; preds = %19, %32, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEED0Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent7RestoreEv(%"class.blink::InspectorAgent"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE(%"class.blink::InspectorAgent"*, %"class.blink::LocalFrame"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEE7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEED1Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %0, i64 -1, i32 4
  %3 = bitcast %"class.std::__1::unique_ptr.227"* %2 to %"class.blink::InspectorBaseAgent"*
  %4 = bitcast %"class.std::__1::unique_ptr.227"* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [14 x i8*] }, { [11 x i8*], [14 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [14 x i8*] }, { [11 x i8*], [14 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227"* %2, i64 6, i32 0, i32 0, i32 0
  %6 = load %"class.blink::protocol::Animation::Frontend"*, %"class.blink::protocol::Animation::Frontend"** %5, align 8
  store %"class.blink::protocol::Animation::Frontend"* null, %"class.blink::protocol::Animation::Frontend"** %5, align 8
  %7 = icmp eq %"class.blink::protocol::Animation::Frontend"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.blink::protocol::Animation::Frontend"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #15
  br label %10

10:                                               ; preds = %8, %1
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227"* %2, i64 4
  %12 = bitcast %"class.std::__1::unique_ptr.227"* %11 to %"class.blink::InspectorAgentState::Field"***
  %13 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %12, align 8
  %14 = icmp eq %"class.blink::InspectorAgentState::Field"** %13, null
  %15 = bitcast %"class.blink::InspectorAgentState::Field"** %13 to i8*
  br i1 %14, label %22, label %16, !prof !4

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::InspectorBaseAgent", %"class.blink::InspectorBaseAgent"* %3, i64 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20, !prof !3

20:                                               ; preds = %16
  store i32 0, i32* %17, align 4
  br label %21

21:                                               ; preds = %20, %16
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %15) #13
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %12, align 8
  br label %22

22:                                               ; preds = %21, %10
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227"* %2, i64 3
  %24 = bitcast %"class.std::__1::unique_ptr.227"* %23 to %"class.WTF::StringImpl"**
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #13
  br label %40

40:                                               ; preds = %22, %36, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEED0Ev(%"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol9Animation8MetainfoEE7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorBaseAgent"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #13
  ret void
}

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.2062"*, %"class.WTF::Vector.2062"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2062", %"class.WTF::Vector.2062"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.2062", %"class.WTF::Vector.2062"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Member.2065"* null, %"class.blink::Member.2065"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.2062", %"class.WTF::Vector.2062"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %23, label %8

8:                                                ; preds = %2
  %9 = zext i32 %4 to i64
  %10 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8KeyframeEEEEEmm(i64 %9) #13
  %11 = lshr i64 %10, 3
  %12 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %11) #13
  %13 = ptrtoint %"class.blink::HeapVectorBacking"* %12 to i64
  %14 = bitcast %"class.WTF::Vector.2062"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = trunc i64 %11 to i32
  store i32 %15, i32* %6, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  %18 = bitcast %"class.blink::HeapVectorBacking"* %12 to %"class.blink::Member.2065"*
  br i1 %17, label %23, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %12, i64 0, i32 0
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #13
  %22 = load %"class.blink::Member.2065"*, %"class.blink::Member.2065"** %5, align 8
  br label %23

23:                                               ; preds = %2, %8, %19
  %24 = phi %"class.blink::Member.2065"* [ null, %2 ], [ %18, %8 ], [ %22, %19 ]
  %25 = getelementptr inbounds %"class.WTF::Vector.2062", %"class.WTF::Vector.2062"* %1, i64 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::Vector.2062", %"class.WTF::Vector.2062"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %"class.WTF::Vector.2062", %"class.WTF::Vector.2062"* %1, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::Member.2065"*, %"class.blink::Member.2065"** %28, align 8
  %30 = icmp ne %"class.blink::Member.2065"* %24, null
  %31 = icmp ne %"class.blink::Member.2065"* %29, null
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %53, !prof !4

33:                                               ; preds = %23
  %34 = load i32, i32* %25, align 4
  %35 = zext i32 %34 to i64
  %36 = bitcast %"class.blink::Member.2065"* %24 to i8*
  %37 = bitcast %"class.blink::Member.2065"* %29 to i8*
  %38 = shl nuw nsw i64 %35, 3
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %36, i8* nonnull %37, i64 %38) #13
  %39 = icmp eq i32 %34, 0
  br i1 %39, label %53, label %40

40:                                               ; preds = %33, %50
  %41 = phi i64 [ %43, %50 ], [ %35, %33 ]
  %42 = phi %"class.blink::Member.2065"* [ %51, %50 ], [ %24, %33 ]
  %43 = add nsw i64 %41, -1
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.blink::Member.2065"* %42 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #13
  br label %50

50:                                               ; preds = %46, %40
  %51 = getelementptr inbounds %"class.blink::Member.2065", %"class.blink::Member.2065"* %42, i64 1
  %52 = icmp eq i64 %43, 0
  br i1 %52, label %53, label %40

53:                                               ; preds = %50, %23, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8KeyframeEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.20, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.21, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.23, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([157 x i8], [157 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_8KeyframeEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.2065"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.2065", %"class.blink::Member.2065"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.2065"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8KeyframeEE5TraceEPNS_7VisitorEPKv) #13
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8KeyframeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Keyframe"*
  %4 = bitcast i8* %1 to void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)**, void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)*, void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)** %5, i64 7
  %7 = load void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)*, void (%"class.blink::Keyframe"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Keyframe"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIbED0Ev(%"class.blink::InspectorAgentState::SimpleField"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #13
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %0 to i8*
  tail call void @_ZdlPv(i8* %20) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIbE6DecodeEv(%"class.blink::InspectorAgentState::SimpleField"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 2
  %3 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %2, align 8
  %4 = tail call %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"* %3) #13
  %5 = icmp eq %"class.blink::mojom::blink::DevToolsSessionState"* %4, null
  br i1 %5, label %31, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0
  %9 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_(%"class.WTF::HashTable.217"* %8, %"class.WTF::String"* dereferenceable(8) %7) #13
  %10 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %9, 0
  %11 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %15
  %17 = icmp eq %"struct.WTF::KeyValuePair"* %10, %16
  br i1 %17, label %31, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %18
  tail call void @llvm.trap() #13
  unreachable

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 2
  %30 = tail call zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPb(i8* %25, i64 %28, i8* %29) #13
  br label %31

31:                                               ; preds = %6, %23, %1
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"*, %"class.blink::InspectorAgentState::Field"*) local_unnamed_addr #1

declare %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPb(i8*, i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_(%"class.WTF::HashTable.217"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.217", %"class.WTF::HashTable.217"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.217", %"class.WTF::HashTable.217"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #13
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #13
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.217", %"class.WTF::HashTable.217"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %77, %"struct.WTF::KeyValuePair"* %76, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIdED0Ev(%"class.blink::InspectorAgentState::SimpleField.584"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.584", %"class.blink::InspectorAgentState::SimpleField.584"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.584", %"class.blink::InspectorAgentState::SimpleField.584"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #13
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::InspectorAgentState::SimpleField.584"* %0 to i8*
  tail call void @_ZdlPv(i8* %20) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIdE5ClearEv(%"class.blink::InspectorAgentState::SimpleField.584"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.584", %"class.blink::InspectorAgentState::SimpleField.584"* %0, i64 0, i32 1
  %3 = load double, double* %2, align 8
  %4 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.584", %"class.blink::InspectorAgentState::SimpleField.584"* %0, i64 0, i32 2
  %5 = load double, double* %4, align 8
  %6 = fcmp oeq double %3, %5
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  store double %3, double* %4, align 8
  %8 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.584", %"class.blink::InspectorAgentState::SimpleField.584"* %0, i64 0, i32 0, i32 2
  %9 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.584", %"class.blink::InspectorAgentState::SimpleField.584"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %9, %"class.WTF::String"* dereferenceable(8) %10, %"class.blink::WebVector"* null) #13
  br label %11

11:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIdE6DecodeEv(%"class.blink::InspectorAgentState::SimpleField.584"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.584", %"class.blink::InspectorAgentState::SimpleField.584"* %0, i64 0, i32 0, i32 2
  %3 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %2, align 8
  %4 = tail call %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"* %3) #13
  %5 = icmp eq %"class.blink::mojom::blink::DevToolsSessionState"* %4, null
  br i1 %5, label %31, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.584", %"class.blink::InspectorAgentState::SimpleField.584"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0
  %9 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_(%"class.WTF::HashTable.217"* %8, %"class.WTF::String"* dereferenceable(8) %7) #13
  %10 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %9, 0
  %11 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %15
  %17 = icmp eq %"struct.WTF::KeyValuePair"* %10, %16
  br i1 %17, label %31, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %18
  tail call void @llvm.trap() #13
  unreachable

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField.584", %"class.blink::InspectorAgentState::SimpleField.584"* %0, i64 0, i32 2
  %30 = tail call zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPd(i8* %25, i64 %28, double* %29) #13
  br label %31

31:                                               ; preds = %6, %23, %1
  ret void
}

declare void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::WebVector"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPd(i8*, i64, double*) local_unnamed_addr #1

declare void @_ZN5blink19InspectorAgentStateC1ERKN3WTF6StringE(%"class.blink::InspectorAgentState"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext, %"class.blink::WebVector"*) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.441"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS1_PS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.439"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::Animation"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.439", %"class.WTF::HashTable.439"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.441"*, %"struct.WTF::KeyValuePair.441"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.441"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.441"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.439"* %0, %"struct.WTF::KeyValuePair.441"* null)
  %9 = load %"struct.WTF::KeyValuePair.441"*, %"struct.WTF::KeyValuePair.441"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.441"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.439", %"class.WTF::HashTable.439"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #13
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.441"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.441"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.441"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #13
  br i1 %57, label %176, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.441"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.441"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.441"* %59 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %71, i64 16) #13
  %72 = getelementptr inbounds %"class.WTF::HashTable.439", %"class.WTF::HashTable.439"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.441"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #13
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !3

96:                                               ; preds = %87
  tail call void @llvm.trap() #13
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %97, %82, %78
  %100 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  %101 = bitcast %"struct.WTF::KeyValuePair.441"* %79 to i64*
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %79, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #13
  br label %118

118:                                              ; preds = %117, %114, %99
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %79, i64 0, i32 1
  %120 = load %"class.blink::Animation"*, %"class.blink::Animation"** %2, align 8
  %121 = ptrtoint %"class.blink::Animation"* %120 to i64
  %122 = bitcast %"class.blink::Member.442"* %119 to i64*
  store atomic i64 %121, i64* %122 monotonic, align 8
  %123 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %128, label %125

125:                                              ; preds = %118
  %126 = bitcast %"class.blink::Animation"* %120 to i8*
  %127 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %126) #13
  br label %128

128:                                              ; preds = %118, %125
  %129 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %164, label %131

131:                                              ; preds = %128
  %132 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %133 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %132, i64 0, i32 1
  %134 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %133) #13
  %135 = icmp eq i8* %134, null
  br i1 %135, label %136, label %138, !prof !3

136:                                              ; preds = %131
  %137 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %133, i8* %137) #13
  br label %138

138:                                              ; preds = %136, %131
  %139 = phi i8* [ %137, %136 ], [ %134, %131 ]
  %140 = bitcast i8* %139 to %"class.blink::ThreadState"**
  %141 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %140, align 8
  %142 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %141, i64 0, i32 9
  %143 = load i8, i8* %142, align 1, !range !2
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %164, label %145

145:                                              ; preds = %138
  %146 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %141, i64 0, i32 13
  %147 = load i64, i64* %146, align 8
  %148 = add i64 %147, 1
  store i64 %148, i64* %146, align 8
  %149 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %141, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %150 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %149, align 8
  %151 = load atomic i64, i64* %122 monotonic, align 8
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %161, label %153

153:                                              ; preds = %145
  %154 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %150, i64 0, i32 0, i32 0
  %155 = inttoptr i64 %151 to i8*
  %156 = bitcast %"class.blink::MarkingVisitor"* %150 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %157 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %156, align 8
  %158 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %157, i64 5
  %159 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %158, align 8
  tail call void %159(%"class.blink::Visitor"* %154, i8* nonnull %155, i8* %155, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9AnimationEE5TraceEPNS_7VisitorEPKv) #13
  %160 = load i64, i64* %146, align 8
  br label %161

161:                                              ; preds = %153, %145
  %162 = phi i64 [ %148, %145 ], [ %160, %153 ]
  %163 = add i64 %162, -1
  store i64 %163, i64* %146, align 8
  br label %164

164:                                              ; preds = %128, %138, %161
  %165 = getelementptr inbounds %"class.WTF::HashTable.439", %"class.WTF::HashTable.439"* %0, i64 0, i32 2
  %166 = load i32, i32* %165, align 4
  %167 = add i32 %166, 1
  store i32 %167, i32* %165, align 4
  %168 = getelementptr inbounds %"class.WTF::HashTable.439", %"class.WTF::HashTable.439"* %0, i64 0, i32 3
  %169 = load i32, i32* %168, align 8
  %170 = add i32 %169, %167
  %171 = shl i32 %170, 1
  %172 = load i32, i32* %12, align 8
  %173 = icmp ult i32 %171, %172
  br i1 %173, label %176, label %174

174:                                              ; preds = %164
  %175 = tail call %"struct.WTF::KeyValuePair.441"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.439"* %0, %"struct.WTF::KeyValuePair.441"* %79)
  br label %176

176:                                              ; preds = %54, %164, %174
  %177 = phi i8 [ 1, %164 ], [ 1, %174 ], [ 0, %54 ]
  %178 = phi %"struct.WTF::KeyValuePair.441"* [ %79, %164 ], [ %175, %174 ], [ %47, %54 ]
  %179 = insertvalue { %"struct.WTF::KeyValuePair.441"*, i8 } undef, %"struct.WTF::KeyValuePair.441"* %178, 0
  %180 = insertvalue { %"struct.WTF::KeyValuePair.441"*, i8 } %179, i8 %177, 1
  ret { %"struct.WTF::KeyValuePair.441"*, i8 } %180
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.441"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.439"*, %"struct.WTF::KeyValuePair.441"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.439", %"class.WTF::HashTable.439"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.439", %"class.WTF::HashTable.439"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #13
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i64 0, i64 0), i8* %23, i8* %24) #13
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.25, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #13
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #13
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #13
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.441"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.439"* %0, i32 %35, %"struct.WTF::KeyValuePair.441"* %1, i8* nonnull dereferenceable(1) %4) #13
  %37 = load i8, i8* %4, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #13
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9AnimationEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #13
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"struct.WTF::KeyValuePair.441"*
  %44 = call %"struct.WTF::KeyValuePair.441"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.439"* %0, %"struct.WTF::KeyValuePair.441"* %43, i32 %40, %"struct.WTF::KeyValuePair.441"* %1) #13
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.441"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.441"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.441"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.439"*, i32, %"struct.WTF::KeyValuePair.441"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #13
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #13
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.25, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.26, i64 0, i64 0)) #13
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.439", %"class.WTF::HashTable.439"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.441"*, %"struct.WTF::KeyValuePair.441"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.441"* %32, null
  br i1 %33, label %116, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.441"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #13
  br i1 %38, label %39, label %116

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.439", %"class.WTF::HashTable.439"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.441"*, %"struct.WTF::KeyValuePair.441"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9AnimationEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #13
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"struct.WTF::KeyValuePair.441"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %113, %39
  %48 = phi %"struct.WTF::KeyValuePair.441"* [ null, %39 ], [ %65, %113 ]
  %49 = bitcast %"class.WTF::HashTable.439"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #13
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.441"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.441"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.439"* %0, %"struct.WTF::KeyValuePair.441"* %42, i32 %1, %"struct.WTF::KeyValuePair.441"* %48)
  br label %116

58:                                               ; preds = %39, %113
  %59 = phi i64 [ %114, %113 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.441"* [ %65, %113 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.441"*, %"struct.WTF::KeyValuePair.441"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.441"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.441"* %64, %"struct.WTF::KeyValuePair.441"* %60
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %62, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"struct.WTF::KeyValuePair.441"* %62 to i64*
  %68 = load i64, i64* %67, align 8
  switch i64 %68, label %71 [
    i64 -1, label %69
    i64 0, label %69
  ]

69:                                               ; preds = %58, %58
  %70 = bitcast %"struct.WTF::KeyValuePair.441"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false)
  br label %113

71:                                               ; preds = %58
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %64, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #13
  br label %88

88:                                               ; preds = %71, %84, %87
  %89 = load i64, i64* %67, align 8
  %90 = bitcast %"struct.WTF::KeyValuePair.441"* %64 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %66, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %45, i64 %59, i32 1
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %61, i64 %59, i32 1
  %93 = bitcast %"class.blink::Member.442"* %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.blink::Member.442"* %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = load %"struct.WTF::KeyValuePair.441"*, %"struct.WTF::KeyValuePair.441"** %31, align 8
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %96, i64 %59, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %88
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #13
  br label %113

113:                                              ; preds = %112, %109, %88, %69
  %114 = add nuw nsw i64 %59, 1
  %115 = icmp eq i64 %114, %43
  br i1 %115, label %47, label %58

116:                                              ; preds = %34, %30, %55
  %117 = phi %"struct.WTF::KeyValuePair.441"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.441"* %117
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.441"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.439"*, %"struct.WTF::KeyValuePair.441"*, i32, %"struct.WTF::KeyValuePair.441"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.439", align 8
  %6 = bitcast %"class.WTF::HashTable.439"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.WTF::HashTable.439", %"class.WTF::HashTable.439"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.439", %"class.WTF::HashTable.439"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.439", %"class.WTF::HashTable.439"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.439", %"class.WTF::HashTable.439"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.439"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.441"* %1, %"struct.WTF::KeyValuePair.441"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.439", %"class.WTF::HashTable.439"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.441"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.441"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.439", %"class.WTF::HashTable.439"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.441"*, %"struct.WTF::KeyValuePair.441"** %19, align 8
  br label %88

21:                                               ; preds = %131
  %22 = bitcast %"class.WTF::HashTable.439"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %132, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.441"* [ null, %15 ], [ %134, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.439"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #13
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.439"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.439"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #13
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = inttoptr i64 %43 to %"struct.WTF::KeyValuePair.441"*
  %51 = icmp eq i64 %43, 0
  br i1 %51, label %84, label %52

52:                                               ; preds = %49
  %53 = icmp eq i32 %41, 0
  br i1 %53, label %82, label %54

54:                                               ; preds = %52
  %55 = zext i32 %41 to i64
  br label %56

56:                                               ; preds = %79, %54
  %57 = phi i64 [ 0, %54 ], [ %80, %79 ]
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %50, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  switch i64 %61, label %62 [
    i64 -1, label %79
    i64 0, label %79
  ]

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #13
  br label %75

75:                                               ; preds = %74, %71
  %76 = bitcast %"struct.WTF::KeyValuePair.441"* %58 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %76, align 8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %50, i64 %57, i32 1
  %78 = bitcast %"class.blink::Member.442"* %77 to i64*
  store atomic i64 0, i64* %78 monotonic, align 8
  br label %79

79:                                               ; preds = %75, %56, %56
  %80 = add nuw nsw i64 %57, 1
  %81 = icmp eq i64 %80, %55
  br i1 %81, label %82, label %56

82:                                               ; preds = %79, %52
  %83 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %83) #13
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %84

84:                                               ; preds = %49, %82
  %85 = getelementptr inbounds %"class.WTF::HashTable.439", %"class.WTF::HashTable.439"* %0, i64 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = and i32 %86, -2147483648
  store i32 %87, i32* %85, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  ret %"struct.WTF::KeyValuePair.441"* %29

88:                                               ; preds = %18, %131
  %89 = phi i32 [ %13, %18 ], [ %132, %131 ]
  %90 = phi %"struct.WTF::KeyValuePair.441"* [ %20, %18 ], [ %133, %131 ]
  %91 = phi %"struct.WTF::KeyValuePair.441"* [ null, %18 ], [ %134, %131 ]
  %92 = phi i32 [ 0, %18 ], [ %135, %131 ]
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %90, i64 %93
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %94, i64 0, i32 0, i32 0, i32 0
  %96 = bitcast %"struct.WTF::KeyValuePair.441"* %94 to i64*
  %97 = load i64, i64* %96, align 8
  switch i64 %97, label %98 [
    i64 -1, label %131
    i64 0, label %131
  ]

98:                                               ; preds = %88
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %94, i64 0, i32 0
  %100 = call { %"struct.WTF::KeyValuePair.441"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.439"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %99) #13
  %101 = extractvalue { %"struct.WTF::KeyValuePair.441"*, i8 } %100, 0
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %98
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #13
  br label %118

118:                                              ; preds = %98, %114, %117
  %119 = load i64, i64* %96, align 8
  %120 = bitcast %"struct.WTF::KeyValuePair.441"* %101 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %95, align 8
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %101, i64 0, i32 1
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %90, i64 %93, i32 1
  %123 = bitcast %"class.blink::Member.442"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.blink::Member.442"* %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = load %"struct.WTF::KeyValuePair.441"*, %"struct.WTF::KeyValuePair.441"** %19, align 8
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %126, i64 %93
  %128 = icmp eq %"struct.WTF::KeyValuePair.441"* %127, %3
  %129 = select i1 %128, %"struct.WTF::KeyValuePair.441"* %101, %"struct.WTF::KeyValuePair.441"* %91
  %130 = load i32, i32* %12, align 8
  br label %131

131:                                              ; preds = %88, %88, %118
  %132 = phi i32 [ %89, %88 ], [ %130, %118 ], [ %89, %88 ]
  %133 = phi %"struct.WTF::KeyValuePair.441"* [ %90, %88 ], [ %126, %118 ], [ %90, %88 ]
  %134 = phi %"struct.WTF::KeyValuePair.441"* [ %91, %88 ], [ %129, %118 ], [ %91, %88 ]
  %135 = add i32 %92, 1
  %136 = icmp eq i32 %135, %132
  br i1 %136, label %21, label %88
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9AnimationEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.27, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_9AnimationEEEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_9AnimationEEEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9AnimationEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9AnimationEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9AnimationEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([378 x i8], [378 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS_6StringENS_12KeyValuePairIS4_NS1_6MemberINS1_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9AnimationEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9AnimationEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #13
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS8_EEEESE_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #13
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_9AnimationEEEEENS3_24KeyValuePairKeyExtractorENS3_10StringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !3

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = lshr i64 %20, 4
  %22 = bitcast i8* %0 to %"struct.WTF::KeyValuePair.441"*
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %47, label %24

24:                                               ; preds = %18, %43
  %25 = phi i64 [ %45, %43 ], [ 0, %18 ]
  %26 = phi i32 [ %44, %43 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %22, i64 %25, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = ptrtoint %"class.WTF::StringImpl"* %28 to i64
  switch i64 %29, label %30 [
    i64 -1, label %43
    i64 0, label %43
  ]

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #13
  br label %43

43:                                               ; preds = %42, %39, %24, %24
  %44 = add i32 %26, 1
  %45 = zext i32 %44 to i64
  %46 = icmp ugt i64 %21, %45
  br i1 %46, label %24, label %47

47:                                               ; preds = %43, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9AnimationEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS8_EEEESE_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.441"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #13
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %61, %20
  ret void

33:                                               ; preds = %61, %30
  %34 = phi i64 [ 0, %30 ], [ %62, %61 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair.441"* %35 to i64*
  br i1 %28, label %37, label %49

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %61
    i64 0, label %61
  ]

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %3, i64 %34, i32 1
  %41 = bitcast %"class.blink::Member.442"* %40 to i64*
  %42 = load atomic i64, i64* %41 monotonic, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %61, label %44

44:                                               ; preds = %39
  %45 = inttoptr i64 %42 to i8*
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %47 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %46, i64 5
  %48 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %47, align 8
  tail call void %48(%"class.blink::Visitor"* %0, i8* nonnull %45, i8* nonnull %45, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9AnimationEE5TraceEPNS_7VisitorEPKv) #13
  br label %61

49:                                               ; preds = %33
  %50 = load i64, i64* %36, align 8
  switch i64 %50, label %51 [
    i64 -1, label %61
    i64 0, label %61
  ]

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %3, i64 %34, i32 1
  %53 = bitcast %"class.blink::Member.442"* %52 to i64*
  %54 = load atomic i64, i64* %53 monotonic, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = inttoptr i64 %54 to i8*
  %58 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %59 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %58, i64 5
  %60 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %59, align 8
  tail call void %60(%"class.blink::Visitor"* %0, i8* nonnull %57, i8* nonnull %57, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9AnimationEE5TraceEPNS_7VisitorEPKv) #13
  br label %61

61:                                               ; preds = %49, %49, %37, %37, %56, %51, %39, %44
  %62 = add nuw nsw i64 %34, 1
  %63 = icmp eq i64 %62, %23
  br i1 %63, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_9AnimationEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Animation"*
  %4 = bitcast i8* %1 to void (%"class.blink::Animation"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Animation"*, %"class.blink::Visitor"*)**, void (%"class.blink::Animation"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Animation"*, %"class.blink::Visitor"*)*, void (%"class.blink::Animation"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Animation"*, %"class.blink::Visitor"*)*, void (%"class.blink::Animation"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Animation"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.441"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.439"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.439", %"class.WTF::HashTable.439"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.441"*, %"struct.WTF::KeyValuePair.441"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.439", %"class.WTF::HashTable.439"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #13
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.441"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.441"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.441"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.441"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.441"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.441"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.441"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.441"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #13
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.441"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.441"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.441"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.441"*, i8 } undef, %"struct.WTF::KeyValuePair.441"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.441"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.441"*, i8 } %77
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink19InspectorAgentState9SerializeEdPNS_9WebVectorIhEE(double, %"class.blink::WebVector"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.441"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.439"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.439", %"class.WTF::HashTable.439"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.441"*, %"struct.WTF::KeyValuePair.441"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.441"* %4, null
  br i1 %5, label %61, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.439", %"class.WTF::HashTable.439"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #13
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %61, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.441"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.441"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #13
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %61, label %41

61:                                               ; preds = %48, %52, %2, %19
  %62 = phi %"struct.WTF::KeyValuePair.441"* [ null, %2 ], [ null, %19 ], [ %42, %48 ], [ null, %52 ]
  ret %"struct.WTF::KeyValuePair.441"* %62
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.2165"*, %"class.blink::StringKeyframe"* dereferenceable(112)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2165", %"class.WTF::Vector.2165"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2165", %"class.WTF::Vector.2165"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2165"* %0, i32 %14) #13
  %15 = getelementptr inbounds %"class.WTF::Vector.2165", %"class.WTF::Vector.2165"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.2168"*, %"class.blink::Member.2168"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.2168", %"class.blink::Member.2168"* %16, i64 %18
  %20 = ptrtoint %"class.blink::StringKeyframe"* %1 to i64
  %21 = bitcast %"class.blink::Member.2168"* %19 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %2
  %25 = bitcast %"class.blink::StringKeyframe"* %1 to i8*
  %26 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %25) #13
  br label %27

27:                                               ; preds = %2, %24
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2165"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.2165", %"class.WTF::Vector.2165"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.2165", %"class.WTF::Vector.2165"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.2168"*, %"class.blink::Member.2168"** %8, align 8
  %10 = icmp eq %"class.blink::Member.2168"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14StringKeyframeEEEEEmm(i64 %11) #13
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.2483"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #13
  %16 = ptrtoint %"class.blink::HeapVectorBacking.2483"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.2165"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.2483", %"class.blink::HeapVectorBacking.2483"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #13
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.2168"*, %"class.blink::Member.2168"** %8, align 8
  %26 = icmp eq %"class.blink::Member.2168"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.2168"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #13
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #13
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #13
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.26, i64 0, i64 0)) #13
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #13
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2165"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2165"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.2165"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.2165", %"class.WTF::Vector.2165"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.2165"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.2165", %"class.WTF::Vector.2165"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #13
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #13
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14StringKeyframeEEEEEmm(i64 %14) #13
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.2483"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #13
  %18 = ptrtoint %"class.blink::HeapVectorBacking.2483"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.2165", %"class.WTF::Vector.2165"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.2168"*, %"class.blink::Member.2168"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.2165", %"class.WTF::Vector.2165"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.2483"* %17, null
  %23 = icmp ne %"class.blink::Member.2168"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.2168"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.2165"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.2483", %"class.blink::HeapVectorBacking.2483"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #13
  %33 = bitcast %"class.WTF::Vector.2165"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #13
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #13
  %42 = bitcast %"class.WTF::Vector.2165"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.2165", %"class.WTF::Vector.2165"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.2483", %"class.blink::HeapVectorBacking.2483"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #13
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_14StringKeyframeEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.20, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.21, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.2483"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.23, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.2483"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.2483"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([169 x i8], [169 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_14StringKeyframeEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.2168"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.2168", %"class.blink::Member.2168"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.2168"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14StringKeyframeEE5TraceEPNS_7VisitorEPKv) #13
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_14StringKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14StringKeyframeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::StringKeyframe"*
  %4 = bitcast i8* %1 to void (%"class.blink::StringKeyframe"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::StringKeyframe"*, %"class.blink::Visitor"*)**, void (%"class.blink::StringKeyframe"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::StringKeyframe"*, %"class.blink::Visitor"*)*, void (%"class.blink::StringKeyframe"*, %"class.blink::Visitor"*)** %5, i64 7
  %7 = load void (%"class.blink::StringKeyframe"*, %"class.blink::Visitor"*)*, void (%"class.blink::StringKeyframe"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::StringKeyframe"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_11EffectModelEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_11EffectModelEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_11EffectModelEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_11EffectModelEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11EffectModelEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11EffectModelEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::EffectModel"*
  %4 = bitcast i8* %1 to void (%"class.blink::EffectModel"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::EffectModel"*, %"class.blink::Visitor"*)**, void (%"class.blink::EffectModel"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::EffectModel"*, %"class.blink::Visitor"*)*, void (%"class.blink::EffectModel"*, %"class.blink::Visitor"*)** %5, i64 7
  %7 = load void (%"class.blink::EffectModel"*, %"class.blink::Visitor"*)*, void (%"class.blink::EffectModel"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::EffectModel"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_11EffectModelEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::EffectModel"*
  %3 = bitcast i8* %0 to void (%"class.blink::EffectModel"*)***
  %4 = load void (%"class.blink::EffectModel"*)**, void (%"class.blink::EffectModel"*)*** %3, align 8
  %5 = load void (%"class.blink::EffectModel"*)*, void (%"class.blink::EffectModel"*)** %4, align 8
  tail call void %5(%"class.blink::EffectModel"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_11EffectModelEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23KeyframeEffectModelBaseD2Ev(%"class.blink::KeyframeEffectModelBase"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink23KeyframeEffectModelBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 10, i32 0
  %4 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %3, align 8
  %5 = icmp eq %"class.blink::TimingFunction"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.blink::TimingFunction"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.blink::TimingFunction"*)***
  %15 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %15, i64 1
  %17 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %16, align 8
  tail call void %17(%"class.blink::TimingFunction"* nonnull %13) #13
  br label %18

18:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19KeyframeEffectModelINS_14StringKeyframeEED0Ev(%"class.blink::KeyframeEffectModel"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::KeyframeEffectModel", %"class.blink::KeyframeEffectModel"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink23KeyframeEffectModelBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::KeyframeEffectModel", %"class.blink::KeyframeEffectModel"* %0, i64 0, i32 0, i32 10, i32 0
  %4 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %3, align 8
  %5 = icmp eq %"class.blink::TimingFunction"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.blink::TimingFunction"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.blink::TimingFunction"*)***
  %15 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %15, i64 1
  %17 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %16, align 8
  tail call void %17(%"class.blink::TimingFunction"* nonnull %13) #13
  br label %18

18:                                               ; preds = %1, %6, %11
  ret void
}

declare zeroext i1 @_ZNK5blink23KeyframeEffectModelBase6SampleEidNS_18AnimationTimeDeltaERNS_10HeapVectorINS_6MemberINS_13InterpolationEEELj0EEE(%"class.blink::KeyframeEffectModelBase"*, i32, double, double, %"class.blink::HeapVector.2118"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink23KeyframeEffectModelBase7AffectsERKNS_14PropertyHandleE(%"class.blink::KeyframeEffectModelBase"*, %"class.blink::PropertyHandle"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  tail call void @_ZNK5blink23KeyframeEffectModelBase20EnsureKeyframeGroupsEv(%"class.blink::KeyframeEffectModelBase"* %0) #13
  %3 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::HeapHashMap.2077"*, %"class.blink::HeapHashMap.2077"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::HeapHashMap.2077", %"class.blink::HeapHashMap.2077"* %4, i64 0, i32 0, i32 0
  %6 = tail call %"struct.WTF::KeyValuePair.2083"* @_ZNK3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorISC_SH_SI_EES2_EEPKS8_RKT0_(%"class.WTF::HashTable.2081"* %5, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #13
  %7 = icmp ne %"struct.WTF::KeyValuePair.2083"* %6, null
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink23KeyframeEffectModelBase30AffectedByUnderlyingAnimationsEv(%"class.blink::KeyframeEffectModelBase"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call zeroext i1 @_ZNK5blink23KeyframeEffectModelBase13IsReplaceOnlyEv(%"class.blink::KeyframeEffectModelBase"* %0) #13
  %3 = xor i1 %2, true
  ret i1 %3
}

declare zeroext i1 @_ZNK5blink23KeyframeEffectModelBase24IsTransformRelatedEffectEv(%"class.blink::KeyframeEffectModelBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink23KeyframeEffectModelBase21IsKeyframeEffectModelEv(%"class.blink::KeyframeEffectModelBase"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare void @_ZNK5blink23KeyframeEffectModelBase5TraceEPNS_7VisitorE(%"class.blink::KeyframeEffectModelBase"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23KeyframeEffectModelBase20GetComputedKeyframesEPNS_7ElementE(%"class.blink::HeapVector.2059"* noalias sret, %"class.blink::KeyframeEffectModelBase"*, %"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::HeapVector.2059", %"class.blink::HeapVector.2059"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::KeyframeEffectModelBase", %"class.blink::KeyframeEffectModelBase"* %1, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.2062"* %4, %"class.WTF::Vector.2062"* dereferenceable(16) %5) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19KeyframeEffectModelINS_14StringKeyframeEE27IsStringKeyframeEffectModelEv(%"class.blink::KeyframeEffectModel"*) unnamed_addr #5 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19KeyframeEffectModelINS_14StringKeyframeEE31IsTransitionKeyframeEffectModelEv(%"class.blink::KeyframeEffectModel"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::KeyframeEffectModelBase"* @_ZN5blink19KeyframeEffectModelINS_14StringKeyframeEE5CloneEv(%"class.blink::KeyframeEffectModel"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::HeapVector.2162", align 8
  %3 = alloca %"class.blink::StringKeyframe"*, align 8
  %4 = bitcast %"class.blink::HeapVector.2162"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"class.blink::HeapVector.2162", %"class.blink::HeapVector.2162"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::HeapVector.2162", %"class.blink::HeapVector.2162"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.blink::HeapVector.2162", %"class.blink::HeapVector.2162"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 16, i1 false) #13
  %8 = getelementptr inbounds %"class.blink::KeyframeEffectModel", %"class.blink::KeyframeEffectModel"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.2065"*, %"class.blink::Member.2065"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::KeyframeEffectModel", %"class.blink::KeyframeEffectModel"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.blink::Member.2065", %"class.blink::Member.2065"* %9, i64 %12
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.blink::StringKeyframe"** %3 to i8*
  %17 = bitcast %"class.blink::StringKeyframe"** %3 to %"class.blink::Keyframe"**
  %18 = getelementptr inbounds %"class.blink::HeapVector.2162", %"class.blink::HeapVector.2162"* %2, i64 0, i32 0
  br label %24

19:                                               ; preds = %51, %1
  %20 = getelementptr inbounds %"class.blink::KeyframeEffectModel", %"class.blink::KeyframeEffectModel"* %0, i64 0, i32 0, i32 8
  %21 = getelementptr inbounds %"class.blink::KeyframeEffectModel", %"class.blink::KeyframeEffectModel"* %0, i64 0, i32 0, i32 10
  %22 = call %"class.blink::KeyframeEffectModel"* @_ZN5blink25MakeGarbageCollectedTraitINS_19KeyframeEffectModelINS_14StringKeyframeEEEE4CallIJRNS_10HeapVectorINS_6MemberIS2_EELj0EEERNS_11EffectModel18CompositeOperationER13scoped_refptrINS_14TimingFunctionEEEEEPS3_DpOT_(%"class.blink::HeapVector.2162"* nonnull dereferenceable(16) %2, i32* dereferenceable(4) %20, %class.scoped_refptr.494* dereferenceable(8) %21) #13
  %23 = bitcast %"class.blink::KeyframeEffectModel"* %22 to %"class.blink::KeyframeEffectModelBase"*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #13
  ret %"class.blink::KeyframeEffectModelBase"* %23

24:                                               ; preds = %15, %51
  %25 = phi %"class.blink::Member.2065"* [ %9, %15 ], [ %52, %51 ]
  %26 = getelementptr inbounds %"class.blink::Member.2065", %"class.blink::Member.2065"* %25, i64 0, i32 0, i32 0
  %27 = load %"class.blink::Keyframe"*, %"class.blink::Keyframe"** %26, align 8
  %28 = bitcast %"class.blink::Keyframe"* %27 to %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)***
  %29 = load %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)**, %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)*** %28, align 8
  %30 = getelementptr inbounds %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)*, %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)** %29, i64 3
  %31 = load %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)*, %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)** %30, align 8
  %32 = call %"class.blink::Keyframe"* %31(%"class.blink::Keyframe"* %27) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  store %"class.blink::Keyframe"* %32, %"class.blink::Keyframe"** %17, align 8
  %33 = load i32, i32* %7, align 4
  %34 = load i32, i32* %6, align 8
  %35 = icmp eq i32 %33, %34
  br i1 %35, label %50, label %36, !prof !3

36:                                               ; preds = %24
  %37 = ptrtoint %"class.blink::Keyframe"* %32 to i64
  %38 = load %"class.blink::Member.2168"*, %"class.blink::Member.2168"** %5, align 8
  %39 = zext i32 %33 to i64
  %40 = getelementptr inbounds %"class.blink::Member.2168", %"class.blink::Member.2168"* %38, i64 %39
  %41 = bitcast %"class.blink::Member.2168"* %40 to i64*
  store atomic i64 %37, i64* %41 monotonic, align 8
  %42 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %36
  %45 = bitcast %"class.blink::Keyframe"* %32 to i8*
  %46 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %45) #13
  br label %47

47:                                               ; preds = %44, %36
  %48 = load i32, i32* %7, align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* %7, align 4
  br label %51

50:                                               ; preds = %24
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.2165"* nonnull %18, %"class.blink::StringKeyframe"** nonnull dereferenceable(8) %3) #13
  br label %51

51:                                               ; preds = %47, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  %52 = getelementptr inbounds %"class.blink::Member.2065", %"class.blink::Member.2065"* %25, i64 1
  %53 = icmp eq %"class.blink::Member.2065"* %52, %13
  br i1 %53, label %19, label %24
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_19InterpolationEffectEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_19InterpolationEffectEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_19InterpolationEffectEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_19InterpolationEffectEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19InterpolationEffectEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_19InterpolationEffectEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InterpolationEffect"*
  tail call void @_ZNK5blink19InterpolationEffect5TraceEPNS_7VisitorE(%"class.blink::InterpolationEffect"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_19InterpolationEffectEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink19InterpolationEffect5TraceEPNS_7VisitorE(%"class.blink::InterpolationEffect"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE6AppendINS2_INS1_14StringKeyframeEEEEEvPKT_j(%"class.WTF::Vector.2062"*, %"class.blink::Member.2168"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.2062", %"class.WTF::Vector.2062"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.2062", %"class.WTF::Vector.2062"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %22

13:                                               ; preds = %3
  %14 = lshr i32 %11, 2
  %15 = add nuw i32 %11, 1
  %16 = add i32 %15, %14
  %17 = icmp ugt i32 %16, 4
  %18 = select i1 %17, i32 %16, i32 4
  %19 = icmp ugt i32 %18, %9
  %20 = select i1 %19, i32 %18, i32 %9
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2062"* %0, i32 %20) #13
  %21 = load i32, i32* %7, align 4
  br label %22

22:                                               ; preds = %13, %3
  %23 = phi i32 [ %21, %13 ], [ %8, %3 ]
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #13
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %9, %23
  br i1 %27, label %29, label %28

28:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %22
  %30 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  %31 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0), i8* %30, i8* %31) #13
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #13
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #13
  %39 = zext i32 %2 to i64
  %40 = getelementptr inbounds %"class.blink::Member.2168", %"class.blink::Member.2168"* %1, i64 %39
  %41 = icmp eq i32 %2, 0
  br i1 %41, label %63, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.WTF::Vector.2062", %"class.WTF::Vector.2062"* %0, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::Member.2065"*, %"class.blink::Member.2065"** %43, align 8
  %45 = load i32, i32* %7, align 4
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %"class.blink::Member.2065", %"class.blink::Member.2065"* %44, i64 %46
  br label %48

48:                                               ; preds = %42, %59
  %49 = phi %"class.blink::Member.2065"* [ %60, %59 ], [ %47, %42 ]
  %50 = phi %"class.blink::Member.2168"* [ %61, %59 ], [ %1, %42 ]
  %51 = bitcast %"class.blink::Member.2168"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.blink::Member.2065"* %49 to i64*
  store atomic i64 %52, i64* %53 monotonic, align 8
  %54 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %48
  %57 = inttoptr i64 %52 to i8*
  %58 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %57) #13
  br label %59

59:                                               ; preds = %56, %48
  %60 = getelementptr inbounds %"class.blink::Member.2065", %"class.blink::Member.2065"* %49, i64 1
  %61 = getelementptr inbounds %"class.blink::Member.2168", %"class.blink::Member.2168"* %50, i64 1
  %62 = icmp eq %"class.blink::Member.2168"* %61, %40
  br i1 %62, label %63, label %48

63:                                               ; preds = %59, %38
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2062"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.2062", %"class.WTF::Vector.2062"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.2062", %"class.WTF::Vector.2062"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.2065"*, %"class.blink::Member.2065"** %8, align 8
  %10 = icmp eq %"class.blink::Member.2065"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8KeyframeEEEEEmm(i64 %11) #13
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #13
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.2062"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #13
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.2065"*, %"class.blink::Member.2065"** %8, align 8
  %26 = icmp eq %"class.blink::Member.2065"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.2065"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #13
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #13
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #13
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.26, i64 0, i64 0)) #13
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #13
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2062"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2062"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.2062"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.2062", %"class.WTF::Vector.2062"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.2062"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.2062", %"class.WTF::Vector.2062"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #13
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #13
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8KeyframeEEEEEmm(i64 %14) #13
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8KeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #13
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.2062", %"class.WTF::Vector.2062"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.2065"*, %"class.blink::Member.2065"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.2062", %"class.WTF::Vector.2062"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.2065"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.2065"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.2062"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #13
  %33 = bitcast %"class.WTF::Vector.2062"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #13
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #13
  %42 = bitcast %"class.WTF::Vector.2062"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.2062", %"class.WTF::Vector.2062"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #13
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

declare void @_ZNK5blink23KeyframeEffectModelBase20EnsureKeyframeGroupsEv(%"class.blink::KeyframeEffectModelBase"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2083"* @_ZNK3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_23KeyframeEffectModelBase29PropertySpecificKeyframeGroupEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSE_IS7_EEEESF_NS1_13HeapAllocatorEE6LookupINS_22IdentityHashTranslatorISC_SH_SI_EES2_EEPKS8_RKT0_(%"class.WTF::HashTable.2081"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable.2081", %"class.WTF::HashTable.2081"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.2083"*, %"struct.WTF::KeyValuePair.2083"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.2083"* %5, null
  br i1 %6, label %66, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::HashTable.2081", %"class.WTF::HashTable.2081"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, -1
  %11 = zext i32 %10 to i64
  %12 = tail call i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"* %1) #13
  %13 = and i32 %12, %10
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.2083", %"struct.WTF::KeyValuePair.2083"* %5, i64 %14
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.2083", %"struct.WTF::KeyValuePair.2083"* %15, i64 0, i32 0
  %17 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %16, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #13
  br i1 %17, label %66, label %18

18:                                               ; preds = %7
  %19 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %20 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %21 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %22 = bitcast %union.anon.2084* %21 to i8*
  %23 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %24 = xor i32 %12, -1
  %25 = lshr i32 %12, 23
  %26 = add i32 %25, %24
  %27 = shl i32 %26, 12
  %28 = xor i32 %27, %26
  %29 = lshr i32 %28, 7
  %30 = xor i32 %29, %28
  %31 = shl i32 %30, 2
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 20
  %34 = xor i32 %33, %32
  %35 = or i32 %34, 1
  %36 = zext i32 %35 to i64
  br label %37

37:                                               ; preds = %18, %58
  %38 = phi %"class.blink::PropertyHandle"* [ %16, %18 ], [ %64, %58 ]
  %39 = phi i64 [ %14, %18 ], [ %62, %58 ]
  %40 = phi i64 [ 0, %18 ], [ %60, %58 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #13
  store i32 0, i32* %20, align 8, !alias.scope !25
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #13, !alias.scope !25
  %41 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %38, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #13
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #13
  br label %57

57:                                               ; preds = %37, %53, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #13
  br i1 %41, label %66, label %58

58:                                               ; preds = %57
  %59 = icmp eq i64 %40, 0
  %60 = select i1 %59, i64 %36, i64 %40
  %61 = add i64 %60, %39
  %62 = and i64 %61, %11
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.2083", %"struct.WTF::KeyValuePair.2083"* %5, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.2083", %"struct.WTF::KeyValuePair.2083"* %63, i64 0, i32 0
  %65 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %64, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #13
  br i1 %65, label %66, label %37

66:                                               ; preds = %58, %57, %7, %2
  %67 = phi %"struct.WTF::KeyValuePair.2083"* [ null, %2 ], [ %15, %7 ], [ %63, %58 ], [ null, %57 ]
  ret %"struct.WTF::KeyValuePair.2083"* %67
}

declare i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink23KeyframeEffectModelBase13IsReplaceOnlyEv(%"class.blink::KeyframeEffectModelBase"*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.2165"*, %"class.blink::StringKeyframe"** dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2165", %"class.WTF::Vector.2165"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2165", %"class.WTF::Vector.2165"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_14StringKeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2165"* %0, i32 %14) #13
  %15 = getelementptr inbounds %"class.WTF::Vector.2165", %"class.WTF::Vector.2165"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.2168"*, %"class.blink::Member.2168"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.2168", %"class.blink::Member.2168"* %16, i64 %18
  %20 = bitcast %"class.blink::StringKeyframe"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.2168"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #13
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::KeyframeEffectModel"* @_ZN5blink25MakeGarbageCollectedTraitINS_19KeyframeEffectModelINS_14StringKeyframeEEEE4CallIJRNS_10HeapVectorINS_6MemberIS2_EELj0EEERNS_11EffectModel18CompositeOperationER13scoped_refptrINS_14TimingFunctionEEEEEPS3_DpOT_(%"class.blink::HeapVector.2162"* dereferenceable(16), i32* dereferenceable(4), %class.scoped_refptr.494* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_11EffectModelEEEPhm(i64 88) #13
  %6 = bitcast i8* %5 to %"class.blink::KeyframeEffectModel"*
  %7 = load i32, i32* %1, align 4
  %8 = getelementptr inbounds %class.scoped_refptr.494, %class.scoped_refptr.494* %2, i64 0, i32 0
  %9 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %8, align 8
  %10 = icmp eq %"class.blink::TimingFunction"* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 1 monotonic
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.29, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.30, i64 0, i64 0)) #13
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  br label %18

18:                                               ; preds = %3, %11, %15
  %19 = ptrtoint %"class.blink::TimingFunction"* %9 to i64
  %20 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink23KeyframeEffectModelBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds i8, i8* %5, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #13
  %22 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_19InterpolationEffectEEEPhm(i64 24) #13
  store i8 0, i8* %22, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #13
  %24 = getelementptr inbounds i8, i8* %22, i64 -4
  %25 = bitcast i8* %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = or i16 %26, 1
  store atomic i16 %27, i16* %25 release, align 2
  %28 = getelementptr inbounds i8, i8* %5, i64 32
  %29 = bitcast i8* %28 to i8**
  store i8* %22, i8** %29, align 8
  %30 = getelementptr inbounds i8, i8* %5, i64 40
  %31 = bitcast i8* %30 to i32*
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds i8, i8* %5, i64 48
  %33 = bitcast i8* %32 to <2 x double>*
  store <2 x double> <double 0x7FF8000000000000, double 0.000000e+00>, <2 x double>* %33, align 8
  %34 = getelementptr inbounds i8, i8* %5, i64 64
  %35 = bitcast i8* %34 to i32*
  store i32 %7, i32* %35, align 8
  %36 = getelementptr inbounds i8, i8* %5, i64 72
  %37 = bitcast i8* %36 to i64*
  store i64 %19, i64* %37, align 8
  %38 = getelementptr inbounds i8, i8* %5, i64 80
  store i8 0, i8* %38, align 8
  %39 = getelementptr inbounds i8, i8* %5, i64 81
  store i8 1, i8* %39, align 1
  %40 = getelementptr inbounds i8, i8* %5, i64 82
  store i8 0, i8* %40, align 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink19KeyframeEffectModelINS_14StringKeyframeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %41 = bitcast i8* %21 to %"class.WTF::Vector.2062"*
  %42 = getelementptr inbounds %"class.blink::HeapVector.2162", %"class.blink::HeapVector.2162"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load %"class.blink::Member.2168"*, %"class.blink::Member.2168"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::HeapVector.2162", %"class.blink::HeapVector.2162"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE6AppendINS2_INS1_14StringKeyframeEEEEEvPKT_j(%"class.WTF::Vector.2062"* %41, %"class.blink::Member.2168"* %43, i32 %45) #13
  %46 = getelementptr inbounds i8, i8* %5, i64 -4
  %47 = bitcast i8* %46 to i16*
  %48 = load atomic i16, i16* %47 monotonic, align 2
  %49 = or i16 %48, 1
  store atomic i16 %49, i16* %47 release, align 2
  ret %"class.blink::KeyframeEffectModel"* %6
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_18TransitionKeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.2205"*, %"class.blink::TransitionKeyframe"* dereferenceable(80)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2205", %"class.WTF::Vector.2205"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2205", %"class.WTF::Vector.2205"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_18TransitionKeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2205"* %0, i32 %14) #13
  %15 = getelementptr inbounds %"class.WTF::Vector.2205", %"class.WTF::Vector.2205"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.2208"*, %"class.blink::Member.2208"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.2208", %"class.blink::Member.2208"* %16, i64 %18
  %20 = ptrtoint %"class.blink::TransitionKeyframe"* %1 to i64
  %21 = bitcast %"class.blink::Member.2208"* %19 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %2
  %25 = bitcast %"class.blink::TransitionKeyframe"* %1 to i8*
  %26 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %25) #13
  br label %27

27:                                               ; preds = %2, %24
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_18TransitionKeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2205"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.2205", %"class.WTF::Vector.2205"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.2205", %"class.WTF::Vector.2205"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.2208"*, %"class.blink::Member.2208"** %8, align 8
  %10 = icmp eq %"class.blink::Member.2208"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18TransitionKeyframeEEEEEmm(i64 %11) #13
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.2496"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_18TransitionKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #13
  %16 = ptrtoint %"class.blink::HeapVectorBacking.2496"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.2205"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.2496", %"class.blink::HeapVectorBacking.2496"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #13
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.2208"*, %"class.blink::Member.2208"** %8, align 8
  %26 = icmp eq %"class.blink::Member.2208"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.2208"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #13
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #13
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #13
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.26, i64 0, i64 0)) #13
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #13
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_18TransitionKeyframeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2205"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_18TransitionKeyframeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2205"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.2205"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.2205", %"class.WTF::Vector.2205"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.2205"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.2205", %"class.WTF::Vector.2205"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #13
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #13
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18TransitionKeyframeEEEEEmm(i64 %14) #13
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.2496"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_18TransitionKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #13
  %18 = ptrtoint %"class.blink::HeapVectorBacking.2496"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.2205", %"class.WTF::Vector.2205"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.2208"*, %"class.blink::Member.2208"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.2205", %"class.WTF::Vector.2205"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.2496"* %17, null
  %23 = icmp ne %"class.blink::Member.2208"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.2208"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.2205"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.2496", %"class.blink::HeapVectorBacking.2496"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #13
  %33 = bitcast %"class.WTF::Vector.2205"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #13
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #13
  %42 = bitcast %"class.WTF::Vector.2205"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.2205", %"class.WTF::Vector.2205"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.2496", %"class.blink::HeapVectorBacking.2496"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #13
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18TransitionKeyframeEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.20, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.21, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.2496"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_18TransitionKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.23, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_18TransitionKeyframeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.2496"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.2496"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_18TransitionKeyframeEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18TransitionKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18TransitionKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18TransitionKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([177 x i8], [177 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_18TransitionKeyframeEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_18TransitionKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.2208"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.2208", %"class.blink::Member.2208"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.2208"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18TransitionKeyframeEE5TraceEPNS_7VisitorEPKv) #13
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_18TransitionKeyframeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18TransitionKeyframeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::TransitionKeyframe"*
  %4 = bitcast i8* %1 to void (%"class.blink::TransitionKeyframe"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::TransitionKeyframe"*, %"class.blink::Visitor"*)**, void (%"class.blink::TransitionKeyframe"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::TransitionKeyframe"*, %"class.blink::Visitor"*)*, void (%"class.blink::TransitionKeyframe"*, %"class.blink::Visitor"*)** %5, i64 7
  %7 = load void (%"class.blink::TransitionKeyframe"*, %"class.blink::Visitor"*)*, void (%"class.blink::TransitionKeyframe"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::TransitionKeyframe"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19KeyframeEffectModelINS_18TransitionKeyframeEED0Ev(%"class.blink::KeyframeEffectModel.2200"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::KeyframeEffectModel.2200", %"class.blink::KeyframeEffectModel.2200"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink23KeyframeEffectModelBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::KeyframeEffectModel.2200", %"class.blink::KeyframeEffectModel.2200"* %0, i64 0, i32 0, i32 10, i32 0
  %4 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %3, align 8
  %5 = icmp eq %"class.blink::TimingFunction"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.blink::TimingFunction"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.blink::TimingFunction"*)***
  %15 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %15, i64 1
  %17 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %16, align 8
  tail call void %17(%"class.blink::TimingFunction"* nonnull %13) #13
  br label %18

18:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19KeyframeEffectModelINS_18TransitionKeyframeEE27IsStringKeyframeEffectModelEv(%"class.blink::KeyframeEffectModel.2200"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19KeyframeEffectModelINS_18TransitionKeyframeEE31IsTransitionKeyframeEffectModelEv(%"class.blink::KeyframeEffectModel.2200"*) unnamed_addr #5 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::KeyframeEffectModelBase"* @_ZN5blink19KeyframeEffectModelINS_18TransitionKeyframeEE5CloneEv(%"class.blink::KeyframeEffectModel.2200"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::HeapVector.2202", align 8
  %3 = alloca %"class.blink::TransitionKeyframe"*, align 8
  %4 = bitcast %"class.blink::HeapVector.2202"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"class.blink::HeapVector.2202", %"class.blink::HeapVector.2202"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::HeapVector.2202", %"class.blink::HeapVector.2202"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.blink::HeapVector.2202", %"class.blink::HeapVector.2202"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 16, i1 false) #13
  %8 = getelementptr inbounds %"class.blink::KeyframeEffectModel.2200", %"class.blink::KeyframeEffectModel.2200"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.2065"*, %"class.blink::Member.2065"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::KeyframeEffectModel.2200", %"class.blink::KeyframeEffectModel.2200"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.blink::Member.2065", %"class.blink::Member.2065"* %9, i64 %12
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.blink::TransitionKeyframe"** %3 to i8*
  %17 = bitcast %"class.blink::TransitionKeyframe"** %3 to %"class.blink::Keyframe"**
  %18 = getelementptr inbounds %"class.blink::HeapVector.2202", %"class.blink::HeapVector.2202"* %2, i64 0, i32 0
  br label %24

19:                                               ; preds = %51, %1
  %20 = getelementptr inbounds %"class.blink::KeyframeEffectModel.2200", %"class.blink::KeyframeEffectModel.2200"* %0, i64 0, i32 0, i32 8
  %21 = getelementptr inbounds %"class.blink::KeyframeEffectModel.2200", %"class.blink::KeyframeEffectModel.2200"* %0, i64 0, i32 0, i32 10
  %22 = call %"class.blink::KeyframeEffectModel.2200"* @_ZN5blink25MakeGarbageCollectedTraitINS_19KeyframeEffectModelINS_18TransitionKeyframeEEEE4CallIJRNS_10HeapVectorINS_6MemberIS2_EELj0EEERNS_11EffectModel18CompositeOperationER13scoped_refptrINS_14TimingFunctionEEEEEPS3_DpOT_(%"class.blink::HeapVector.2202"* nonnull dereferenceable(16) %2, i32* dereferenceable(4) %20, %class.scoped_refptr.494* dereferenceable(8) %21) #13
  %23 = bitcast %"class.blink::KeyframeEffectModel.2200"* %22 to %"class.blink::KeyframeEffectModelBase"*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #13
  ret %"class.blink::KeyframeEffectModelBase"* %23

24:                                               ; preds = %15, %51
  %25 = phi %"class.blink::Member.2065"* [ %9, %15 ], [ %52, %51 ]
  %26 = getelementptr inbounds %"class.blink::Member.2065", %"class.blink::Member.2065"* %25, i64 0, i32 0, i32 0
  %27 = load %"class.blink::Keyframe"*, %"class.blink::Keyframe"** %26, align 8
  %28 = bitcast %"class.blink::Keyframe"* %27 to %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)***
  %29 = load %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)**, %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)*** %28, align 8
  %30 = getelementptr inbounds %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)*, %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)** %29, i64 3
  %31 = load %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)*, %"class.blink::Keyframe"* (%"class.blink::Keyframe"*)** %30, align 8
  %32 = call %"class.blink::Keyframe"* %31(%"class.blink::Keyframe"* %27) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  store %"class.blink::Keyframe"* %32, %"class.blink::Keyframe"** %17, align 8
  %33 = load i32, i32* %7, align 4
  %34 = load i32, i32* %6, align 8
  %35 = icmp eq i32 %33, %34
  br i1 %35, label %50, label %36, !prof !3

36:                                               ; preds = %24
  %37 = ptrtoint %"class.blink::Keyframe"* %32 to i64
  %38 = load %"class.blink::Member.2208"*, %"class.blink::Member.2208"** %5, align 8
  %39 = zext i32 %33 to i64
  %40 = getelementptr inbounds %"class.blink::Member.2208", %"class.blink::Member.2208"* %38, i64 %39
  %41 = bitcast %"class.blink::Member.2208"* %40 to i64*
  store atomic i64 %37, i64* %41 monotonic, align 8
  %42 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %36
  %45 = bitcast %"class.blink::Keyframe"* %32 to i8*
  %46 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %45) #13
  br label %47

47:                                               ; preds = %44, %36
  %48 = load i32, i32* %7, align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* %7, align 4
  br label %51

50:                                               ; preds = %24
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_18TransitionKeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.2205"* nonnull %18, %"class.blink::TransitionKeyframe"** nonnull dereferenceable(8) %3) #13
  br label %51

51:                                               ; preds = %47, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  %52 = getelementptr inbounds %"class.blink::Member.2065", %"class.blink::Member.2065"* %25, i64 1
  %53 = icmp eq %"class.blink::Member.2065"* %52, %13
  br i1 %53, label %19, label %24
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE6AppendINS2_INS1_18TransitionKeyframeEEEEEvPKT_j(%"class.WTF::Vector.2062"*, %"class.blink::Member.2208"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.2062", %"class.WTF::Vector.2062"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.2062", %"class.WTF::Vector.2062"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %22

13:                                               ; preds = %3
  %14 = lshr i32 %11, 2
  %15 = add nuw i32 %11, 1
  %16 = add i32 %15, %14
  %17 = icmp ugt i32 %16, 4
  %18 = select i1 %17, i32 %16, i32 4
  %19 = icmp ugt i32 %18, %9
  %20 = select i1 %19, i32 %18, i32 %9
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2062"* %0, i32 %20) #13
  %21 = load i32, i32* %7, align 4
  br label %22

22:                                               ; preds = %13, %3
  %23 = phi i32 [ %21, %13 ], [ %8, %3 ]
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #13
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %9, %23
  br i1 %27, label %29, label %28

28:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %22
  %30 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  %31 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0), i8* %30, i8* %31) #13
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #13
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #13
  %39 = zext i32 %2 to i64
  %40 = getelementptr inbounds %"class.blink::Member.2208", %"class.blink::Member.2208"* %1, i64 %39
  %41 = icmp eq i32 %2, 0
  br i1 %41, label %63, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.WTF::Vector.2062", %"class.WTF::Vector.2062"* %0, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::Member.2065"*, %"class.blink::Member.2065"** %43, align 8
  %45 = load i32, i32* %7, align 4
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %"class.blink::Member.2065", %"class.blink::Member.2065"* %44, i64 %46
  br label %48

48:                                               ; preds = %42, %59
  %49 = phi %"class.blink::Member.2065"* [ %60, %59 ], [ %47, %42 ]
  %50 = phi %"class.blink::Member.2208"* [ %61, %59 ], [ %1, %42 ]
  %51 = bitcast %"class.blink::Member.2208"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.blink::Member.2065"* %49 to i64*
  store atomic i64 %52, i64* %53 monotonic, align 8
  %54 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %48
  %57 = inttoptr i64 %52 to i8*
  %58 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %57) #13
  br label %59

59:                                               ; preds = %56, %48
  %60 = getelementptr inbounds %"class.blink::Member.2065", %"class.blink::Member.2065"* %49, i64 1
  %61 = getelementptr inbounds %"class.blink::Member.2208", %"class.blink::Member.2208"* %50, i64 1
  %62 = icmp eq %"class.blink::Member.2208"* %61, %40
  br i1 %62, label %63, label %48

63:                                               ; preds = %59, %38
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_18TransitionKeyframeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.2205"*, %"class.blink::TransitionKeyframe"** dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2205", %"class.WTF::Vector.2205"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2205", %"class.WTF::Vector.2205"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_18TransitionKeyframeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2205"* %0, i32 %14) #13
  %15 = getelementptr inbounds %"class.WTF::Vector.2205", %"class.WTF::Vector.2205"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.2208"*, %"class.blink::Member.2208"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.2208", %"class.blink::Member.2208"* %16, i64 %18
  %20 = bitcast %"class.blink::TransitionKeyframe"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.2208"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #13
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::KeyframeEffectModel.2200"* @_ZN5blink25MakeGarbageCollectedTraitINS_19KeyframeEffectModelINS_18TransitionKeyframeEEEE4CallIJRNS_10HeapVectorINS_6MemberIS2_EELj0EEERNS_11EffectModel18CompositeOperationER13scoped_refptrINS_14TimingFunctionEEEEEPS3_DpOT_(%"class.blink::HeapVector.2202"* dereferenceable(16), i32* dereferenceable(4), %class.scoped_refptr.494* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_11EffectModelEEEPhm(i64 88) #13
  %6 = bitcast i8* %5 to %"class.blink::KeyframeEffectModel.2200"*
  %7 = load i32, i32* %1, align 4
  %8 = getelementptr inbounds %class.scoped_refptr.494, %class.scoped_refptr.494* %2, i64 0, i32 0
  %9 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %8, align 8
  %10 = icmp eq %"class.blink::TimingFunction"* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 1 monotonic
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.29, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.30, i64 0, i64 0)) #13
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  br label %18

18:                                               ; preds = %3, %11, %15
  %19 = ptrtoint %"class.blink::TimingFunction"* %9 to i64
  %20 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink23KeyframeEffectModelBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds i8, i8* %5, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #13
  %22 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_19InterpolationEffectEEEPhm(i64 24) #13
  store i8 0, i8* %22, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #13
  %24 = getelementptr inbounds i8, i8* %22, i64 -4
  %25 = bitcast i8* %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = or i16 %26, 1
  store atomic i16 %27, i16* %25 release, align 2
  %28 = getelementptr inbounds i8, i8* %5, i64 32
  %29 = bitcast i8* %28 to i8**
  store i8* %22, i8** %29, align 8
  %30 = getelementptr inbounds i8, i8* %5, i64 40
  %31 = bitcast i8* %30 to i32*
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds i8, i8* %5, i64 48
  %33 = bitcast i8* %32 to <2 x double>*
  store <2 x double> <double 0x7FF8000000000000, double 0.000000e+00>, <2 x double>* %33, align 8
  %34 = getelementptr inbounds i8, i8* %5, i64 64
  %35 = bitcast i8* %34 to i32*
  store i32 %7, i32* %35, align 8
  %36 = getelementptr inbounds i8, i8* %5, i64 72
  %37 = bitcast i8* %36 to i64*
  store i64 %19, i64* %37, align 8
  %38 = getelementptr inbounds i8, i8* %5, i64 80
  store i8 0, i8* %38, align 8
  %39 = getelementptr inbounds i8, i8* %5, i64 81
  store i8 1, i8* %39, align 1
  %40 = getelementptr inbounds i8, i8* %5, i64 82
  store i8 0, i8* %40, align 2
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink19KeyframeEffectModelINS_18TransitionKeyframeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %41 = bitcast i8* %21 to %"class.WTF::Vector.2062"*
  %42 = getelementptr inbounds %"class.blink::HeapVector.2202", %"class.blink::HeapVector.2202"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load %"class.blink::Member.2208"*, %"class.blink::Member.2208"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::HeapVector.2202", %"class.blink::HeapVector.2202"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8KeyframeEEELj0ENS1_13HeapAllocatorEE6AppendINS2_INS1_18TransitionKeyframeEEEEEvPKT_j(%"class.WTF::Vector.2062"* %41, %"class.blink::Member.2208"* %43, i32 %45) #13
  %46 = getelementptr inbounds i8, i8* %5, i64 -4
  %47 = bitcast i8* %46 to i16*
  %48 = load atomic i16, i16* %47 monotonic, align 2
  %49 = or i16 %48, 1
  store atomic i16 %49, i16* %47 release, align 2
  ret %"class.blink::KeyframeEffectModel.2200"* %6
}

declare void @_ZN5blink14KeyframeEffectC1EPNS_7ElementEPNS_23KeyframeEffectModelBaseERKNS_6TimingENS0_8PriorityEPNS_15AnimationEffect13EventDelegateE(%"class.blink::KeyframeEffect"*, %"class.blink::Element"*, %"class.blink::KeyframeEffectModelBase"*, %"struct.blink::Timing"* dereferenceable(80), i32, %"class.blink::AnimationEffect::EventDelegate"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #13
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.441"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS1_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.439"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::Animation"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.439", %"class.WTF::HashTable.439"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.441"*, %"struct.WTF::KeyValuePair.441"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.441"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.441"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.439"* %0, %"struct.WTF::KeyValuePair.441"* null)
  %9 = load %"struct.WTF::KeyValuePair.441"*, %"struct.WTF::KeyValuePair.441"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.441"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.439", %"class.WTF::HashTable.439"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #13
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.441"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.441"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.441"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #13
  br i1 %57, label %176, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.441"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.441"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.441"* %59 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %71, i64 16) #13
  %72 = getelementptr inbounds %"class.WTF::HashTable.439", %"class.WTF::HashTable.439"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.441"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #13
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !3

96:                                               ; preds = %87
  tail call void @llvm.trap() #13
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %97, %82, %78
  %100 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  %101 = bitcast %"struct.WTF::KeyValuePair.441"* %79 to i64*
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %79, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #13
  br label %118

118:                                              ; preds = %117, %114, %99
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %79, i64 0, i32 1
  %120 = load %"class.blink::Animation"*, %"class.blink::Animation"** %2, align 8
  %121 = ptrtoint %"class.blink::Animation"* %120 to i64
  %122 = bitcast %"class.blink::Member.442"* %119 to i64*
  store atomic i64 %121, i64* %122 monotonic, align 8
  %123 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %128, label %125

125:                                              ; preds = %118
  %126 = bitcast %"class.blink::Animation"* %120 to i8*
  %127 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %126) #13
  br label %128

128:                                              ; preds = %118, %125
  %129 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %164, label %131

131:                                              ; preds = %128
  %132 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %133 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %132, i64 0, i32 1
  %134 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %133) #13
  %135 = icmp eq i8* %134, null
  br i1 %135, label %136, label %138, !prof !3

136:                                              ; preds = %131
  %137 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %133, i8* %137) #13
  br label %138

138:                                              ; preds = %136, %131
  %139 = phi i8* [ %137, %136 ], [ %134, %131 ]
  %140 = bitcast i8* %139 to %"class.blink::ThreadState"**
  %141 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %140, align 8
  %142 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %141, i64 0, i32 9
  %143 = load i8, i8* %142, align 1, !range !2
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %164, label %145

145:                                              ; preds = %138
  %146 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %141, i64 0, i32 13
  %147 = load i64, i64* %146, align 8
  %148 = add i64 %147, 1
  store i64 %148, i64* %146, align 8
  %149 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %141, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %150 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %149, align 8
  %151 = load atomic i64, i64* %122 monotonic, align 8
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %161, label %153

153:                                              ; preds = %145
  %154 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %150, i64 0, i32 0, i32 0
  %155 = inttoptr i64 %151 to i8*
  %156 = bitcast %"class.blink::MarkingVisitor"* %150 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %157 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %156, align 8
  %158 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %157, i64 5
  %159 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %158, align 8
  tail call void %159(%"class.blink::Visitor"* %154, i8* nonnull %155, i8* %155, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9AnimationEE5TraceEPNS_7VisitorEPKv) #13
  %160 = load i64, i64* %146, align 8
  br label %161

161:                                              ; preds = %153, %145
  %162 = phi i64 [ %148, %145 ], [ %160, %153 ]
  %163 = add i64 %162, -1
  store i64 %163, i64* %146, align 8
  br label %164

164:                                              ; preds = %128, %138, %161
  %165 = getelementptr inbounds %"class.WTF::HashTable.439", %"class.WTF::HashTable.439"* %0, i64 0, i32 2
  %166 = load i32, i32* %165, align 4
  %167 = add i32 %166, 1
  store i32 %167, i32* %165, align 4
  %168 = getelementptr inbounds %"class.WTF::HashTable.439", %"class.WTF::HashTable.439"* %0, i64 0, i32 3
  %169 = load i32, i32* %168, align 8
  %170 = add i32 %169, %167
  %171 = shl i32 %170, 1
  %172 = load i32, i32* %12, align 8
  %173 = icmp ult i32 %171, %172
  br i1 %173, label %176, label %174

174:                                              ; preds = %164
  %175 = tail call %"struct.WTF::KeyValuePair.441"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.439"* %0, %"struct.WTF::KeyValuePair.441"* %79)
  br label %176

176:                                              ; preds = %54, %164, %174
  %177 = phi i8 [ 1, %164 ], [ 1, %174 ], [ 0, %54 ]
  %178 = phi %"struct.WTF::KeyValuePair.441"* [ %79, %164 ], [ %175, %174 ], [ %47, %54 ]
  %179 = insertvalue { %"struct.WTF::KeyValuePair.441"*, i8 } undef, %"struct.WTF::KeyValuePair.441"* %178, 0
  %180 = insertvalue { %"struct.WTF::KeyValuePair.441"*, i8 } %179, i8 %177, 1
  ret { %"struct.WTF::KeyValuePair.441"*, i8 } %180
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.441"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES1_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.439"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::Animation"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.439", %"class.WTF::HashTable.439"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.441"*, %"struct.WTF::KeyValuePair.441"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.441"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.441"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.439"* %0, %"struct.WTF::KeyValuePair.441"* null)
  %9 = load %"struct.WTF::KeyValuePair.441"*, %"struct.WTF::KeyValuePair.441"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.441"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.439", %"class.WTF::HashTable.439"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #13
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.441"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.441"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.441"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #13
  br i1 %57, label %157, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.441"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.441"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.441"* %59 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %71, i64 16) #13
  %72 = getelementptr inbounds %"class.WTF::HashTable.439", %"class.WTF::HashTable.439"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.441"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = bitcast %"class.WTF::String"* %1 to i64*
  %81 = load i64, i64* %80, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  %82 = bitcast %"struct.WTF::KeyValuePair.441"* %79 to i64*
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %79, i64 0, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  store i64 %81, i64* %82, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #13
  br label %99

99:                                               ; preds = %98, %95, %78
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %79, i64 0, i32 1
  %101 = load %"class.blink::Animation"*, %"class.blink::Animation"** %2, align 8
  %102 = ptrtoint %"class.blink::Animation"* %101 to i64
  %103 = bitcast %"class.blink::Member.442"* %100 to i64*
  store atomic i64 %102, i64* %103 monotonic, align 8
  %104 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %109, label %106

106:                                              ; preds = %99
  %107 = bitcast %"class.blink::Animation"* %101 to i8*
  %108 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %107) #13
  br label %109

109:                                              ; preds = %99, %106
  %110 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %145, label %112

112:                                              ; preds = %109
  %113 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %114 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %113, i64 0, i32 1
  %115 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %114) #13
  %116 = icmp eq i8* %115, null
  br i1 %116, label %117, label %119, !prof !3

117:                                              ; preds = %112
  %118 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %114, i8* %118) #13
  br label %119

119:                                              ; preds = %117, %112
  %120 = phi i8* [ %118, %117 ], [ %115, %112 ]
  %121 = bitcast i8* %120 to %"class.blink::ThreadState"**
  %122 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %121, align 8
  %123 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %122, i64 0, i32 9
  %124 = load i8, i8* %123, align 1, !range !2
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %145, label %126

126:                                              ; preds = %119
  %127 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %122, i64 0, i32 13
  %128 = load i64, i64* %127, align 8
  %129 = add i64 %128, 1
  store i64 %129, i64* %127, align 8
  %130 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %122, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %131 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %130, align 8
  %132 = load atomic i64, i64* %103 monotonic, align 8
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %142, label %134

134:                                              ; preds = %126
  %135 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %131, i64 0, i32 0, i32 0
  %136 = inttoptr i64 %132 to i8*
  %137 = bitcast %"class.blink::MarkingVisitor"* %131 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %138 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %137, align 8
  %139 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %138, i64 5
  %140 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %139, align 8
  tail call void %140(%"class.blink::Visitor"* %135, i8* nonnull %136, i8* %136, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9AnimationEE5TraceEPNS_7VisitorEPKv) #13
  %141 = load i64, i64* %127, align 8
  br label %142

142:                                              ; preds = %134, %126
  %143 = phi i64 [ %129, %126 ], [ %141, %134 ]
  %144 = add i64 %143, -1
  store i64 %144, i64* %127, align 8
  br label %145

145:                                              ; preds = %109, %119, %142
  %146 = getelementptr inbounds %"class.WTF::HashTable.439", %"class.WTF::HashTable.439"* %0, i64 0, i32 2
  %147 = load i32, i32* %146, align 4
  %148 = add i32 %147, 1
  store i32 %148, i32* %146, align 4
  %149 = getelementptr inbounds %"class.WTF::HashTable.439", %"class.WTF::HashTable.439"* %0, i64 0, i32 3
  %150 = load i32, i32* %149, align 8
  %151 = add i32 %150, %148
  %152 = shl i32 %151, 1
  %153 = load i32, i32* %12, align 8
  %154 = icmp ult i32 %152, %153
  br i1 %154, label %157, label %155

155:                                              ; preds = %145
  %156 = tail call %"struct.WTF::KeyValuePair.441"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.439"* %0, %"struct.WTF::KeyValuePair.441"* %79)
  br label %157

157:                                              ; preds = %54, %145, %155
  %158 = phi i8 [ 1, %145 ], [ 1, %155 ], [ 0, %54 ]
  %159 = phi %"struct.WTF::KeyValuePair.441"* [ %79, %145 ], [ %156, %155 ], [ %47, %54 ]
  %160 = insertvalue { %"struct.WTF::KeyValuePair.441"*, i8 } undef, %"struct.WTF::KeyValuePair.441"* %159, 0
  %161 = insertvalue { %"struct.WTF::KeyValuePair.441"*, i8 } %160, i8 %158, 1
  ret { %"struct.WTF::KeyValuePair.441"*, i8 } %161
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE5eraseEPKS7_(%"class.WTF::HashTable.439"*, %"struct.WTF::KeyValuePair.441"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #13
  br label %19

19:                                               ; preds = %2, %15, %18
  %20 = bitcast %"struct.WTF::KeyValuePair.441"* %1 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %20, align 8
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %1, i64 0, i32 1
  %22 = bitcast %"class.blink::Member.442"* %21 to i64*
  store atomic i64 0, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::HashTable.439", %"class.WTF::HashTable.439"* %0, i64 0, i32 3
  %24 = load i32, i32* %23, align 8
  %25 = add i32 %24, 1
  %26 = and i32 %25, 2147483647
  %27 = and i32 %24, -2147483648
  %28 = or i32 %26, %27
  store i32 %28, i32* %23, align 8
  %29 = getelementptr inbounds %"class.WTF::HashTable.439", %"class.WTF::HashTable.439"* %0, i64 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = add i32 %30, -1
  store i32 %31, i32* %29, align 4
  %32 = mul i32 %31, 6
  %33 = getelementptr inbounds %"class.WTF::HashTable.439", %"class.WTF::HashTable.439"* %0, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = icmp ult i32 %32, %34
  %36 = icmp ugt i32 %34, 8
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %67

38:                                               ; preds = %19
  %39 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %40 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %39, i64 0, i32 1
  %41 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %40) #13
  %42 = icmp eq i8* %41, null
  br i1 %42, label %43, label %45, !prof !3

43:                                               ; preds = %38
  %44 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %40, i8* %44) #13
  br label %45

45:                                               ; preds = %43, %38
  %46 = phi i8* [ %44, %43 ], [ %41, %38 ]
  %47 = bitcast i8* %46 to %"class.blink::ThreadState"**
  %48 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %48, i64 0, i32 6
  %50 = load i8, i8* %49, align 8, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %48, i64 0, i32 16
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %67, label %56

56:                                               ; preds = %45, %52
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %48, i64 0, i32 13
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %67

60:                                               ; preds = %56
  %61 = load i32, i32* %33, align 8
  %62 = lshr i32 %61, 1
  %63 = zext i32 %62 to i64
  %64 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_9AnimationEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %63) #13
  %65 = bitcast %"class.blink::HeapHashTableBacking"* %64 to %"struct.WTF::KeyValuePair.441"*
  %66 = tail call %"struct.WTF::KeyValuePair.441"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.439"* %0, %"struct.WTF::KeyValuePair.441"* %65, i32 %62, %"struct.WTF::KeyValuePair.441"* null) #13
  br label %67

67:                                               ; preds = %52, %19, %60, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.441"*, %"struct.WTF::KeyValuePair.441"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE4findERKS1_(%"class.WTF::HashTable.439"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.439", %"class.WTF::HashTable.439"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.441"*, %"struct.WTF::KeyValuePair.441"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.441"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.439", %"class.WTF::HashTable.439"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #13
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.441"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.441"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #13
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair.441"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair.441"*, %"struct.WTF::KeyValuePair.441"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.439", %"class.WTF::HashTable.439"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair.441"*, %"struct.WTF::KeyValuePair.441"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair.441"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair.441"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.441"*, %"struct.WTF::KeyValuePair.441"* } undef, %"struct.WTF::KeyValuePair.441"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.441"*, %"struct.WTF::KeyValuePair.441"* } %77, %"struct.WTF::KeyValuePair.441"* %76, 1
  ret { %"struct.WTF::KeyValuePair.441"*, %"struct.WTF::KeyValuePair.441"* } %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.581"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.581", %"class.WTF::HashTable.581"* %0, i64 0, i32 0
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %6 = icmp eq %"class.WTF::String"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.581"* %0, %"class.WTF::String"* null)
  %9 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.WTF::String"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.581", %"class.WTF::HashTable.581"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #13
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %27
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"class.WTF::StringImpl"* [ %30, %32 ], [ %66, %58 ]
  %48 = phi %"class.WTF::String"* [ %28, %32 ], [ %64, %58 ]
  %49 = phi %"class.WTF::String"* [ null, %32 ], [ %59, %58 ]
  %50 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %51 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %52 = bitcast %"class.WTF::String"* %48 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, inttoptr (i64 -1 to i8*)
  br i1 %54, label %58, label %55

55:                                               ; preds = %46
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %47, %"class.WTF::StringImpl"* %56) #13
  br i1 %57, label %131, label %58

58:                                               ; preds = %46, %55
  %59 = phi %"class.WTF::String"* [ %49, %55 ], [ %48, %46 ]
  %60 = icmp eq i64 %51, 0
  %61 = select i1 %60, i64 %45, i64 %51
  %62 = add i64 %61, %50
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %63
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"class.WTF::String"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"class.WTF::String"* %59 to i64*
  store i64 0, i64* %71, align 8
  %72 = getelementptr inbounds %"class.WTF::HashTable.581", %"class.WTF::HashTable.581"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"class.WTF::String"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %100, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %100

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i33
  %92 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #13
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !3

97:                                               ; preds = %88
  tail call void @llvm.trap() #13
  unreachable

98:                                               ; preds = %88
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %89, align 4
  br label %100

100:                                              ; preds = %98, %83, %78
  %101 = ptrtoint %"class.WTF::StringImpl"* %81 to i64
  %102 = bitcast %"class.WTF::String"* %79 to i64*
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  store i64 %101, i64* %102, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #13
  br label %119

119:                                              ; preds = %100, %115, %118
  %120 = getelementptr inbounds %"class.WTF::HashTable.581", %"class.WTF::HashTable.581"* %0, i64 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = add i32 %121, 1
  store i32 %122, i32* %120, align 4
  %123 = getelementptr inbounds %"class.WTF::HashTable.581", %"class.WTF::HashTable.581"* %0, i64 0, i32 3
  %124 = load i32, i32* %123, align 8
  %125 = add i32 %124, %122
  %126 = shl i32 %125, 1
  %127 = load i32, i32* %12, align 8
  %128 = icmp ult i32 %126, %127
  br i1 %128, label %131, label %129

129:                                              ; preds = %119
  %130 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.581"* %0, %"class.WTF::String"* %79)
  br label %131

131:                                              ; preds = %55, %119, %129
  %132 = phi i8 [ 1, %119 ], [ 1, %129 ], [ 0, %55 ]
  %133 = phi %"class.WTF::String"* [ %79, %119 ], [ %130, %129 ], [ %48, %55 ]
  %134 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %133, 0
  %135 = insertvalue { %"class.WTF::String"*, i8 } %134, i8 %132, 1
  ret { %"class.WTF::String"*, i8 } %135
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.581"*, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.581", %"class.WTF::HashTable.581"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.581", %"class.WTF::HashTable.581"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #13
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i64 0, i64 0), i8* %22, i8* %23) #13
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.25, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #13
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #13
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #13
  %36 = bitcast i8* %35 to %"class.WTF::String"*
  %37 = call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.581"* %0, %"class.WTF::String"* %36, i32 %32, %"class.WTF::String"* %1) #13
  ret %"class.WTF::String"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.581"*, %"class.WTF::String"*, i32, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.581", align 8
  %6 = bitcast %"class.WTF::HashTable.581"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.WTF::HashTable.581", %"class.WTF::HashTable.581"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.581", %"class.WTF::HashTable.581"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.581", %"class.WTF::HashTable.581"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.581", %"class.WTF::HashTable.581"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.581"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"class.WTF::String"* %1, %"class.WTF::String"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.581", %"class.WTF::HashTable.581"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.581", %"class.WTF::HashTable.581"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"class.WTF::String"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.581"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.581"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %23 = ptrtoint %"class.WTF::String"* %22 to i64
  br label %71

24:                                               ; preds = %110
  %25 = bitcast %"class.WTF::HashTable.581"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.581"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %111, %24 ]
  %33 = phi %"class.WTF::String"* [ null, %16 ], [ %114, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %112, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"class.WTF::String"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %62, %39
  %42 = phi i64 [ 0, %39 ], [ %63, %62 ]
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 %42
  %44 = bitcast %"class.WTF::String"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %47 = ptrtoint i8* %45 to i64
  switch i64 %47, label %48 [
    i64 -1, label %62
    i64 0, label %62
  ]

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = bitcast i8* %45 to i32*
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %48
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi i32 [ %57, %56 ], [ %55, %48 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #13
  br label %62

62:                                               ; preds = %61, %58, %41, %41
  %63 = add nuw nsw i64 %42, 1
  %64 = icmp eq i64 %63, %40
  br i1 %64, label %65, label %41

65:                                               ; preds = %62, %37
  %66 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #13
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %67

67:                                               ; preds = %28, %65
  %68 = getelementptr inbounds %"class.WTF::HashTable.581", %"class.WTF::HashTable.581"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, -2147483648
  store i32 %70, i32* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  ret %"class.WTF::String"* %33

71:                                               ; preds = %21, %110
  %72 = phi i64 [ %111, %110 ], [ %23, %21 ]
  %73 = phi i32 [ %112, %110 ], [ %13, %21 ]
  %74 = phi %"class.WTF::String"* [ %113, %110 ], [ %22, %21 ]
  %75 = phi %"class.WTF::String"* [ %114, %110 ], [ null, %21 ]
  %76 = phi i32 [ %115, %110 ], [ 0, %21 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %74, i64 %77
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 0, i32 0, i32 0
  %80 = bitcast %"class.WTF::String"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  switch i64 %81, label %82 [
    i64 -1, label %110
    i64 0, label %110
  ]

82:                                               ; preds = %71
  %83 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.581"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %78) #13
  %84 = extractvalue { %"class.WTF::String"*, i8 } %83, 0
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %84, i64 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #13
  br label %101

101:                                              ; preds = %82, %97, %100
  %102 = load i64, i64* %80, align 8
  %103 = bitcast %"class.WTF::String"* %84 to i64*
  store i64 %102, i64* %103, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %104 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 %77
  %106 = icmp eq %"class.WTF::String"* %105, %3
  %107 = select i1 %106, %"class.WTF::String"* %84, %"class.WTF::String"* %75
  %108 = load i32, i32* %12, align 8
  %109 = ptrtoint %"class.WTF::String"* %104 to i64
  br label %110

110:                                              ; preds = %71, %71, %101
  %111 = phi i64 [ %72, %71 ], [ %109, %101 ], [ %72, %71 ]
  %112 = phi i32 [ %73, %71 ], [ %108, %101 ], [ %73, %71 ]
  %113 = phi %"class.WTF::String"* [ %74, %71 ], [ %104, %101 ], [ %74, %71 ]
  %114 = phi %"class.WTF::String"* [ %75, %71 ], [ %107, %101 ], [ %75, %71 ]
  %115 = add i32 %76, 1
  %116 = icmp eq i32 %115, %112
  br i1 %116, label %24, label %71
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.581"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.581", %"class.WTF::HashTable.581"* %0, i64 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.581", %"class.WTF::HashTable.581"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #13
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %20
  %22 = ptrtoint %"class.WTF::String"* %21 to i64
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"class.WTF::String"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"class.WTF::String"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"class.WTF::String"* %44, null
  %46 = ptrtoint %"class.WTF::String"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"class.WTF::String"* [ null, %26 ], [ %62, %61 ]
  %50 = phi %"class.WTF::StringImpl"* [ %24, %26 ], [ %70, %61 ]
  %51 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %52 = phi %"class.WTF::String"* [ %21, %26 ], [ %67, %61 ]
  %53 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %54 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %55 = bitcast %"class.WTF::String"* %52 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, inttoptr (i64 -1 to i8*)
  br i1 %57, label %61, label %58

58:                                               ; preds = %48
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %50, %"class.WTF::StringImpl"* %59) #13
  br i1 %60, label %72, label %61

61:                                               ; preds = %58, %48
  %62 = phi %"class.WTF::String"* [ %49, %58 ], [ %52, %48 ]
  %63 = icmp eq i64 %54, 0
  %64 = select i1 %63, i64 %39, i64 %54
  %65 = add i64 %64, %53
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %66
  %68 = ptrtoint %"class.WTF::String"* %67 to i64
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %67, i64 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %58, %42
  %73 = phi i64 [ %47, %42 ], [ %51, %58 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %58 ]
  %75 = inttoptr i64 %73 to %"class.WTF::String"*
  %76 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %75, 0
  %77 = insertvalue { %"class.WTF::String"*, i8 } %76, i8 %74, 1
  ret { %"class.WTF::String"*, i8 } %77
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink15CSSPropertyNameELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.2251"*, %"class.blink::CSSPropertyName"* dereferenceable(16)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2251", %"class.WTF::Vector.2251"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2251", %"class.WTF::Vector.2251"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::CSSPropertyName"*, %"class.blink::CSSPropertyName"** %6, align 8
  %8 = icmp ugt %"class.blink::CSSPropertyName"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %7, i64 %10
  %12 = icmp ugt %"class.blink::CSSPropertyName"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2251", %"class.WTF::Vector.2251"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::CSSPropertyName"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15CSSPropertyNameEEEmm(i64 %26) #13
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15CSSPropertyNameEEEPKcv, i64 0, i64 0)) #13
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.2251"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 4
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::CSSPropertyName"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 4
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::CSSPropertyName"*, %"class.blink::CSSPropertyName"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::CSSPropertyName"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::CSSPropertyName"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !4

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #13
  %47 = bitcast %"class.WTF::Vector.2251"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #13
  %51 = bitcast %"class.WTF::Vector.2251"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::CSSPropertyName"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::CSSPropertyName"* %1 to i64
  %56 = ptrtoint %"class.blink::CSSPropertyName"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 4
  %59 = getelementptr inbounds %"class.WTF::Vector.2251", %"class.WTF::Vector.2251"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !4

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::CSSPropertyName"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15CSSPropertyNameEEEmm(i64 %71) #13
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15CSSPropertyNameEEEPKcv, i64 0, i64 0)) #13
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.2251"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::CSSPropertyName"*, %"class.blink::CSSPropertyName"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::CSSPropertyName"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::CSSPropertyName"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !4

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #13
  %87 = bitcast %"class.WTF::Vector.2251"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #13
  %91 = bitcast %"class.WTF::Vector.2251"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 4
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::CSSPropertyName"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::CSSPropertyName"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::CSSPropertyName"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::CSSPropertyName"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %100, i64 %103, i32 0
  %105 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %101, i64 0, i32 0
  %106 = load i32, i32* %105, align 8
  store i32 %106, i32* %104, align 8
  %107 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %100, i64 %103, i32 1
  %108 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %101, i64 0, i32 1
  %109 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %108, i64 0, i32 0, i32 0, i32 0
  %110 = bitcast %"class.WTF::AtomicString"* %108 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast %"class.WTF::AtomicString"* %107 to i64*
  store i64 %111, i64* %112, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %109, align 8
  %113 = load i32, i32* %3, align 4
  %114 = add i32 %113, 1
  store i32 %114, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15CSSPropertyNameEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.20, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.31, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_9AnimationEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EES1_EEbRKT0_(%"class.WTF::HashTable.439"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.439", %"class.WTF::HashTable.439"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.441"*, %"struct.WTF::KeyValuePair.441"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.441"* %4, null
  br i1 %5, label %61, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.439", %"class.WTF::HashTable.439"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #13
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %61, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.441"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.441"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #13
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.441", %"struct.WTF::KeyValuePair.441"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %61, label %41

61:                                               ; preds = %48, %52, %2, %19
  %62 = phi %"struct.WTF::KeyValuePair.441"* [ null, %2 ], [ null, %19 ], [ %42, %48 ], [ null, %52 ]
  %63 = icmp ne %"struct.WTF::KeyValuePair.441"* %62, null
  ret i1 %63
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15InspectedFramesEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InspectedFrames"*
  tail call void @_ZNK5blink15InspectedFrames5TraceEPNS_7VisitorE(%"class.blink::InspectedFrames"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

declare void @_ZNK5blink15InspectedFrames5TraceEPNS_7VisitorE(%"class.blink::InspectedFrames"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17InspectorCSSAgentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InspectorCSSAgent"*
  tail call void @_ZNK5blink17InspectorCSSAgent5TraceEPNS_7VisitorE(%"class.blink::InspectorCSSAgent"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

declare void @_ZNK5blink17InspectorCSSAgent5TraceEPNS_7VisitorE(%"class.blink::InspectorCSSAgent"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CoreProbeSink"*
  tail call void @_ZNK5blink13CoreProbeSink5TraceEPNS_7VisitorE(%"class.blink::CoreProbeSink"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

declare void @_ZNK5blink13CoreProbeSink5TraceEPNS_7VisitorE(%"class.blink::CoreProbeSink"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZN5blink8protocol9Animation10Dispatcher4wireEPN5crdtp14UberDispatcherEPNS1_7BackendE(%"class.crdtp::UberDispatcher"*, %"class.blink::protocol::Animation::Backend"*) local_unnamed_addr #1

declare void @_ZN5blink19InspectorAgentState8InitFromEPNS_21InspectorSessionStateE(%"class.blink::InspectorAgentState"*, %"class.blink::InspectorSessionState"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { nounwind readonly }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink23InspectorAnimationAgent15getPlaybackRateEPd: argument 0"}
!7 = distinct !{!7, !"_ZN5blink23InspectorAnimationAgent15getPlaybackRateEPd"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN5blink23InspectorAnimationAgent15AssertAnimationERKN3WTF6StringERPNS_9AnimationE: argument 0"}
!10 = distinct !{!10, !"_ZN5blink23InspectorAnimationAgent15AssertAnimationERKN3WTF6StringERPNS_9AnimationE"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN5blink23InspectorAnimationAgent15AssertAnimationERKN3WTF6StringERPNS_9AnimationE: argument 0"}
!13 = distinct !{!13, !"_ZN5blink23InspectorAnimationAgent15AssertAnimationERKN3WTF6StringERPNS_9AnimationE"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN5blink23InspectorAnimationAgent15AssertAnimationERKN3WTF6StringERPNS_9AnimationE: argument 0"}
!16 = distinct !{!16, !"_ZN5blink23InspectorAnimationAgent15AssertAnimationERKN3WTF6StringERPNS_9AnimationE"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN5blink23InspectorAnimationAgent15AssertAnimationERKN3WTF6StringERPNS_9AnimationE: argument 0"}
!19 = distinct !{!19, !"_ZN5blink23InspectorAnimationAgent15AssertAnimationERKN3WTF6StringERPNS_9AnimationE"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN5blink23InspectorAnimationAgent15AssertAnimationERKN3WTF6StringERPNS_9AnimationE: argument 0"}
!22 = distinct !{!22, !"_ZN5blink23InspectorAnimationAgent15AssertAnimationERKN3WTF6StringERPNS_9AnimationE"}
!23 = distinct !{!23, !24}
!24 = !{!"llvm.loop.unroll.disable"}
!25 = !{!26, !28}
!26 = distinct !{!26, !27, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!27 = distinct !{!27, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!28 = distinct !{!28, !29, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!29 = distinct !{!29, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
