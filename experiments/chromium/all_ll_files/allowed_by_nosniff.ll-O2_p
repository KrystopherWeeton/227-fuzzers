; ModuleID = '../../third_party/blink/renderer/platform/loader/allowed_by_nosniff.cc'
source_filename = "../../third_party/blink/renderer/platform/loader/allowed_by_nosniff.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional", %class.scoped_refptr.14, %class.scoped_refptr.15, %"struct.blink::CacheControlHeader", %"class.absl::optional.16", %"class.absl::optional.21", %"class.absl::optional.21", %"class.absl::optional.21", i64, %"class.blink::KURL", %"class.WTF::Vector.26", %"class.WTF::String", %"class.WTF::Vector", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.31", %"class.WTF::Vector", %"class.blink::KURL", %"class.absl::optional.36" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector", %"class.WTF::String", i64, i64, %"class.WTF::Vector.4", %"class.WTF::Vector.9" }
%"class.WTF::Vector.4" = type { %"class.WTF::VectorBuffer.5" }
%"class.WTF::VectorBuffer.5" = type { %"class.WTF::VectorBufferBase.6" }
%"class.WTF::VectorBufferBase.6" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.9" = type { %"class.WTF::VectorBuffer.10" }
%"class.WTF::VectorBuffer.10" = type { %"class.WTF::VectorBufferBase.11" }
%"class.WTF::VectorBufferBase.11" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.14 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.15 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.16", %"class.absl::optional.16" }
%"class.absl::optional.16" = type { %"class.absl::optional_internal::optional_data.17" }
%"class.absl::optional_internal::optional_data.17" = type { %"class.absl::optional_internal::optional_data_base.18" }
%"class.absl::optional_internal::optional_data_base.18" = type { %"class.absl::optional_internal::optional_data_dtor_base.19" }
%"class.absl::optional_internal::optional_data_dtor_base.19" = type { i8, %union.anon.20 }
%union.anon.20 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.21" = type { %"class.absl::optional_internal::optional_data.22" }
%"class.absl::optional_internal::optional_data.22" = type { %"class.absl::optional_internal::optional_data_base.23" }
%"class.absl::optional_internal::optional_data_base.23" = type { %"class.absl::optional_internal::optional_data_dtor_base.24" }
%"class.absl::optional_internal::optional_data_dtor_base.24" = type { i8, %union.anon.25 }
%union.anon.25 = type { %"class.base::Time" }
%"class.WTF::Vector.26" = type { %"class.WTF::VectorBuffer.27" }
%"class.WTF::VectorBuffer.27" = type { %"class.WTF::VectorBufferBase.28" }
%"class.WTF::VectorBufferBase.28" = type { %"class.blink::KURL"*, i32, i32 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.absl::optional.31" = type { %"class.absl::optional_internal::optional_data.32" }
%"class.absl::optional_internal::optional_data.32" = type { %"class.absl::optional_internal::optional_data_base.33" }
%"class.absl::optional_internal::optional_data_base.33" = type { %"class.absl::optional_internal::optional_data_dtor_base.34" }
%"class.absl::optional_internal::optional_data_dtor_base.34" = type { i8, %union.anon.35 }
%union.anon.35 = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.absl::optional.36" = type { %"class.absl::optional_internal::optional_data.37" }
%"class.absl::optional_internal::optional_data.37" = type { %"class.absl::optional_internal::optional_data_base.38" }
%"class.absl::optional_internal::optional_data_base.38" = type { %"class.absl::optional_internal::optional_data_dtor_base.39" }
%"class.absl::optional_internal::optional_data_dtor_base.39" = type { i8, %union.anon.40 }
%union.anon.40 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.45" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.45" = type { %"class.absl::optional_internal::optional_data.46" }
%"class.absl::optional_internal::optional_data.46" = type { %"class.absl::optional_internal::optional_data_base.47" }
%"class.absl::optional_internal::optional_data_base.47" = type { %"class.absl::optional_internal::optional_data_dtor_base.48" }
%"class.absl::optional_internal::optional_data_dtor_base.48" = type { i8, %union.anon.49 }
%union.anon.49 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.43 }
%union.anon.43 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::StringAppend.50" = type { %"class.WTF::StringAppend.51", %"class.WTF::String" }
%"class.WTF::StringAppend.51" = type { %"class.WTF::StringAppend.52", i8* }
%"class.WTF::StringAppend.52" = type { i8*, %"class.WTF::String" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.50", i8* }
%"class.WTF::StringTypeAdapter.53" = type <{ i8*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::StringTypeAdapter.55" = type { %"class.WTF::StringTypeAdapter.56" }
%"class.WTF::StringTypeAdapter.56" = type { %"class.WTF::StringView" }

$_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev = comdat any

$_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

@.str = private unnamed_addr constant [4 x i8] c".js\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c".mjs\00", align 1
@_ZN3url11kBlobSchemeE = external constant [0 x i8], align 1
@_ZN3url17kFileSystemSchemeE = external constant [0 x i8], align 1
@_ZN5blink10http_names20kXContentTypeOptionsE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.2 = private unnamed_addr constant [33 x i8] c"Refused to execute script from '\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"' because its MIME type ('\00", align 1
@.str.4 = private unnamed_addr constant [64 x i8] c"') is not executable, and strict MIME type checking is enabled.\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"application/\00", align 1
@_ZN5blink12_GLOBAL__N_120kApplicationFeaturesE = internal unnamed_addr constant [2 x i32] [i32 1070, i32 1067], align 4
@.str.6 = private unnamed_addr constant [6 x i8] c"text/\00", align 1
@_ZN5blink12_GLOBAL__N_113kTextFeaturesE = internal unnamed_addr constant [2 x i32] [i32 1069, i32 1066], align 4
@.str.7 = private unnamed_addr constant [22 x i8] c"') is not executable.\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.8 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"image/\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"audio/\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"video/\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"text/csv\00", align 1
@.str.13 = private unnamed_addr constant [25 x i8] c"application/octet-stream\00", align 1
@_ZN5blink12_GLOBAL__N_131kApplicationOctetStreamFeaturesE = internal unnamed_addr constant [2 x i32] [i32 2172, i32 2167], align 4
@.str.14 = private unnamed_addr constant [16 x i8] c"application/xml\00", align 1
@_ZN5blink12_GLOBAL__N_123kApplicationXmlFeaturesE = internal unnamed_addr constant [2 x i32] [i32 2173, i32 2168], align 4
@.str.15 = private unnamed_addr constant [10 x i8] c"text/html\00", align 1
@_ZN5blink12_GLOBAL__N_117kTextHtmlFeaturesE = internal unnamed_addr constant [2 x i32] [i32 2174, i32 2169], align 4
@.str.16 = private unnamed_addr constant [11 x i8] c"text/plain\00", align 1
@_ZN5blink12_GLOBAL__N_118kTextPlainFeaturesE = internal unnamed_addr constant [2 x i32] [i32 2175, i32 2170], align 4
@.str.17 = private unnamed_addr constant [9 x i8] c"text/xml\00", align 1
@_ZN5blink12_GLOBAL__N_116kTextXmlFeaturesE = internal unnamed_addr constant [2 x i32] [i32 2176, i32 2171], align 4
@.str.18 = private unnamed_addr constant [10 x i8] c"text/json\00", align 1
@.str.19 = private unnamed_addr constant [17 x i8] c"application/json\00", align 1
@_ZN5blink12_GLOBAL__N_113kJsonFeaturesE = internal unnamed_addr constant [2 x i32] [i32 3738, i32 3737], align 4
@_ZN5blink12_GLOBAL__N_116kUnknownFeaturesE = internal unnamed_addr constant [2 x i32] [i32 3740, i32 3739], align 4
@.str.20 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.21 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.22 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16AllowedByNosniff16MimeTypeAsScriptERNS_10UseCounterEPNS_13ConsoleLoggerERKNS_16ResourceResponseENS0_13MimeTypeCheckE(%"class.blink::UseCounter"* dereferenceable(8), %"class.blink::ConsoleLogger"*, %"class.blink::ResourceResponse"* dereferenceable(1072), i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::StringAppend.50", align 8
  %6 = alloca %"class.WTF::StringAppend.50", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::StringAppend", align 8
  %15 = alloca %"class.WTF::StringAppend.50", align 8
  %16 = alloca %"class.WTF::StringAppend.51", align 8
  %17 = alloca i32, align 4
  %18 = alloca %"class.WTF::StringView", align 8
  %19 = alloca %"class.WTF::StringView", align 8
  %20 = alloca %"class.WTF::String", align 8
  %21 = alloca %"class.WTF::StringAppend", align 8
  %22 = alloca %"class.WTF::StringAppend.50", align 8
  %23 = alloca %"class.WTF::StringAppend.51", align 8
  %24 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink16ResourceResponse17CurrentRequestUrlEv(%"class.blink::ResourceResponse"* %2) #7
  %25 = tail call zeroext i1 @_ZNK5blink4KURL22ProtocolIsInHTTPFamilyEv(%"class.blink::KURL"* %24) #7
  %26 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #7
  %27 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #7
  br i1 %25, label %62, label %28

28:                                               ; preds = %4
  %29 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink16ResourceResponse17CurrentRequestUrlEv(%"class.blink::ResourceResponse"* %2) #7
  %30 = tail call %"class.WTF::StringImpl"* @_ZNK5blink4KURL17LastPathComponentEv(%"class.blink::KURL"* %29) #7
  %31 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %32 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i8** %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 3, i32* %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = call zeroext i1 @_ZNK3WTF10StringImpl8EndsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %30, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #7
  br i1 %37, label %61, label %38

38:                                               ; preds = %28, %36
  %39 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink16ResourceResponse17CurrentRequestUrlEv(%"class.blink::ResourceResponse"* %2) #7
  %40 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL17LastPathComponentEv(%"class.blink::KURL"* %39) #7
  %41 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %42 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8** %43, align 8
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 4, i32* %44, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %45, label %46, label %47

46:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #7
  br label %63

47:                                               ; preds = %38
  %48 = call zeroext i1 @_ZNK3WTF10StringImpl8EndsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %40, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #7
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %47
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %47
  %58 = phi i32 [ %56, %55 ], [ %54, %47 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %57
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #7
  br label %63

61:                                               ; preds = %36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #7
  br label %65

62:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #7
  br label %81

63:                                               ; preds = %60, %57, %46
  %64 = phi i1 [ %48, %60 ], [ %48, %57 ], [ false, %46 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #7
  br i1 %35, label %79, label %65

65:                                               ; preds = %61, %63
  %66 = phi i1 [ true, %61 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %65
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %65
  %76 = phi i32 [ %74, %73 ], [ %72, %65 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #7
  br i1 %66, label %846, label %81

79:                                               ; preds = %75, %63
  %80 = phi i1 [ %66, %75 ], [ %64, %63 ]
  br i1 %80, label %846, label %81

81:                                               ; preds = %78, %62, %79
  %82 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink16ResourceResponse17CurrentRequestUrlEv(%"class.blink::ResourceResponse"* %2) #7
  %83 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83)
  %84 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %85 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i8** %86, align 8
  %87 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 4, i32* %87, align 8
  %88 = call zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"* %82, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %7) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83)
  br i1 %88, label %846, label %89

89:                                               ; preds = %81
  %90 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink16ResourceResponse17CurrentRequestUrlEv(%"class.blink::ResourceResponse"* %2) #7
  %91 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kBlobSchemeE, i64 0, i64 0)) #8
  %92 = icmp ult i64 %91, 4294967296
  br i1 %92, label %94, label %93, !prof !2

93:                                               ; preds = %89
  call void @llvm.trap() #7
  unreachable

94:                                               ; preds = %89
  %95 = trunc i64 %91 to i32
  %96 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %97 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kBlobSchemeE, i64 0, i64 0), i8** %98, align 8
  %99 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %95, i32* %99, align 8
  %100 = call zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"* %90, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %10) #7
  br i1 %100, label %846, label %101

101:                                              ; preds = %94
  %102 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink16ResourceResponse17CurrentRequestUrlEv(%"class.blink::ResourceResponse"* %2) #7
  %103 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url17kFileSystemSchemeE, i64 0, i64 0)) #8
  %104 = icmp ult i64 %103, 4294967296
  br i1 %104, label %106, label %105, !prof !2

105:                                              ; preds = %101
  call void @llvm.trap() #7
  unreachable

106:                                              ; preds = %101
  %107 = trunc i64 %103 to i32
  %108 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %109 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url17kFileSystemSchemeE, i64 0, i64 0), i8** %110, align 8
  %111 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %107, i32* %111, align 8
  %112 = call zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"* %102, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %11) #7
  br i1 %112, label %846, label %113

113:                                              ; preds = %106
  %114 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %114) #7
  %115 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %115, align 8
  %116 = call %"class.WTF::StringImpl"* @_ZNK5blink16ResourceResponse15HttpContentTypeEv(%"class.blink::ResourceResponse"* %2) #7
  store %"class.WTF::StringImpl"* %116, %"class.WTF::StringImpl"** %115, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %147, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %135

125:                                              ; preds = %118
  %126 = zext i32 %124 to i33
  %127 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %126, i33 1) #7
  %128 = extractvalue { i33, i1 } %127, 1
  %129 = extractvalue { i33, i1 } %127, 0
  %130 = icmp slt i33 %129, 0
  %131 = or i1 %128, %130
  br i1 %131, label %132, label %133, !prof !3

132:                                              ; preds = %125
  call void @llvm.trap() #7
  unreachable

133:                                              ; preds = %125
  %134 = trunc i33 %129 to i32
  store i32 %134, i32* %123, align 4
  br label %135

135:                                              ; preds = %118, %133
  %136 = phi i32 [ %134, %133 ], [ %124, %118 ]
  %137 = load atomic i32, i32* %119 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %143

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %142 = add i32 %136, -1
  store i32 %142, i32* %141, align 4
  br label %143

143:                                              ; preds = %140, %135
  %144 = phi i32 [ %142, %140 ], [ %136, %135 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #7
  br label %147

147:                                              ; preds = %113, %143, %146
  %148 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names20kXContentTypeOptionsE, align 8
  %149 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse15HttpHeaderFieldERKN3WTF12AtomicStringE(%"class.blink::ResourceResponse"* %2, %"class.WTF::AtomicString"* dereferenceable(8) %148) #7
  %150 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %149, i64 0, i32 0
  %151 = call i32 @_ZN5blink29ParseContentTypeOptionsHeaderERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %150) #7
  %152 = icmp eq i32 %151, 1
  br i1 %152, label %153, label %459

153:                                              ; preds = %147
  %154 = call zeroext i1 @_ZN5blink16MIMETypeRegistry29IsSupportedJavaScriptMIMETypeERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %12) #7
  br i1 %154, label %459, label %155

155:                                              ; preds = %153
  %156 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %156) #7
  %157 = bitcast %"class.WTF::StringAppend"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %157) #7
  %158 = bitcast %"class.WTF::StringAppend.50"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %158) #7
  %159 = bitcast %"class.WTF::StringAppend.51"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %159) #7
  %160 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink16ResourceResponse17CurrentRequestUrlEv(%"class.blink::ResourceResponse"* %2) #7
  %161 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL12ElidedStringEv(%"class.blink::KURL"* %160) #7
  %162 = icmp eq %"class.WTF::StringImpl"* %161, null
  br i1 %162, label %238, label %163

163:                                              ; preds = %155
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load atomic i32, i32* %164 monotonic, align 4
  %166 = and i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  br i1 %167, label %170, label %180

170:                                              ; preds = %163
  %171 = zext i32 %169 to i33
  %172 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %171, i33 1) #7
  %173 = extractvalue { i33, i1 } %172, 1
  %174 = extractvalue { i33, i1 } %172, 0
  %175 = icmp slt i33 %174, 0
  %176 = or i1 %173, %175
  br i1 %176, label %177, label %178, !prof !3

177:                                              ; preds = %170
  call void @llvm.trap() #7
  unreachable

178:                                              ; preds = %170
  %179 = trunc i33 %174 to i32
  store i32 %179, i32* %168, align 4
  br label %180

180:                                              ; preds = %178, %163
  %181 = phi i32 [ %179, %178 ], [ %169, %163 ]
  %182 = load atomic i32, i32* %164 monotonic, align 4
  %183 = and i32 %182, 2
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %195

185:                                              ; preds = %180
  %186 = zext i32 %181 to i33
  %187 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %186, i33 1) #7
  %188 = extractvalue { i33, i1 } %187, 1
  %189 = extractvalue { i33, i1 } %187, 0
  %190 = icmp slt i33 %189, 0
  %191 = or i1 %188, %190
  br i1 %191, label %192, label %193, !prof !3

192:                                              ; preds = %185
  call void @llvm.trap() #7
  unreachable

193:                                              ; preds = %185
  %194 = trunc i33 %189 to i32
  store i32 %194, i32* %168, align 4
  br label %195

195:                                              ; preds = %193, %180
  %196 = phi i32 [ %194, %193 ], [ %181, %180 ]
  %197 = load atomic i32, i32* %164 monotonic, align 4
  %198 = and i32 %197, 2
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %202

200:                                              ; preds = %195
  %201 = add i32 %196, -1
  store i32 %201, i32* %168, align 4
  br label %202

202:                                              ; preds = %200, %195
  %203 = phi i32 [ %201, %200 ], [ %196, %195 ]
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %206

205:                                              ; preds = %202
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %161) #7
  br label %206

206:                                              ; preds = %202, %205
  %207 = load atomic i32, i32* %164 monotonic, align 4, !noalias !4
  %208 = and i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = load i32, i32* %168, align 4
  br i1 %209, label %211, label %221

211:                                              ; preds = %206
  %212 = zext i32 %210 to i33
  %213 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %212, i33 1) #7
  %214 = extractvalue { i33, i1 } %213, 1
  %215 = extractvalue { i33, i1 } %213, 0
  %216 = icmp slt i33 %215, 0
  %217 = or i1 %214, %216
  br i1 %217, label %218, label %219, !prof !3

218:                                              ; preds = %211
  call void @llvm.trap() #7, !noalias !4
  unreachable

219:                                              ; preds = %211
  %220 = trunc i33 %215 to i32
  store i32 %220, i32* %168, align 4, !noalias !4
  br label %221

221:                                              ; preds = %206, %219
  %222 = phi i32 [ %220, %219 ], [ %210, %206 ]
  %223 = bitcast %"class.WTF::StringAppend.51"* %16 to i64*
  store i64 ptrtoint ([33 x i8]* @.str.2 to i64), i64* %223, align 8, !alias.scope !4
  %224 = getelementptr inbounds %"class.WTF::StringAppend.51", %"class.WTF::StringAppend.51"* %16, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %161, %"class.WTF::StringImpl"** %224, align 8, !alias.scope !4
  %225 = load atomic i32, i32* %164 monotonic, align 4, !noalias !4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %242

228:                                              ; preds = %221
  %229 = zext i32 %222 to i33
  %230 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %229, i33 1) #7
  %231 = extractvalue { i33, i1 } %230, 1
  %232 = extractvalue { i33, i1 } %230, 0
  %233 = icmp slt i33 %232, 0
  %234 = or i1 %231, %233
  br i1 %234, label %235, label %236, !prof !3

235:                                              ; preds = %228
  call void @llvm.trap() #7, !noalias !4
  unreachable

236:                                              ; preds = %228
  %237 = trunc i33 %232 to i32
  store i32 %237, i32* %168, align 4, !noalias !4
  br label %242

238:                                              ; preds = %155
  %239 = bitcast %"class.WTF::StringAppend.51"* %16 to i64*
  store i64 ptrtoint ([33 x i8]* @.str.2 to i64), i64* %239, align 8, !alias.scope !4
  %240 = getelementptr inbounds %"class.WTF::StringAppend.51", %"class.WTF::StringAppend.51"* %16, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %240, align 8, !alias.scope !4
  %241 = getelementptr inbounds %"class.WTF::StringAppend.51", %"class.WTF::StringAppend.51"* %16, i64 0, i32 1
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i8** %241, align 8, !alias.scope !4
  br label %254

242:                                              ; preds = %236, %221
  %243 = phi i32 [ %237, %236 ], [ %222, %221 ]
  %244 = getelementptr inbounds %"class.WTF::StringAppend.51", %"class.WTF::StringAppend.51"* %16, i64 0, i32 1
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i8** %244, align 8, !alias.scope !4
  %245 = load atomic i32, i32* %164 monotonic, align 4, !noalias !4
  %246 = and i32 %245, 2
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %248, label %250

248:                                              ; preds = %242
  %249 = add i32 %243, -1
  store i32 %249, i32* %168, align 4, !noalias !4
  br label %250

250:                                              ; preds = %248, %242
  %251 = phi i32 [ %249, %248 ], [ %243, %242 ]
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %254

253:                                              ; preds = %250
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %161) #7, !noalias !4
  br label %254

254:                                              ; preds = %238, %250, %253
  %255 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %256 = icmp eq %"class.WTF::StringImpl"* %255, null
  br i1 %256, label %274, label %257

257:                                              ; preds = %254
  %258 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = load atomic i32, i32* %258 monotonic, align 4
  %260 = and i32 %259, 2
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %274

262:                                              ; preds = %257
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 0
  %264 = load i32, i32* %263, align 4
  %265 = zext i32 %264 to i33
  %266 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %265, i33 1) #7
  %267 = extractvalue { i33, i1 } %266, 1
  %268 = extractvalue { i33, i1 } %266, 0
  %269 = icmp slt i33 %268, 0
  %270 = or i1 %267, %269
  br i1 %270, label %271, label %272, !prof !3

271:                                              ; preds = %262
  call void @llvm.trap() #7
  unreachable

272:                                              ; preds = %262
  %273 = trunc i33 %268 to i32
  store i32 %273, i32* %263, align 4
  br label %274

274:                                              ; preds = %254, %257, %272
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.50"* nonnull sret %15, %"class.WTF::StringAppend.51"* nonnull dereferenceable(24) %16, %"class.WTF::StringImpl"* %255)
  %275 = bitcast %"class.WTF::StringAppend.50"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %275)
  %276 = bitcast %"class.WTF::StringAppend.50"* %15 to i64*
  %277 = load i64, i64* %276, align 8, !noalias !7
  %278 = bitcast %"class.WTF::StringAppend.50"* %6 to i64*
  store i64 %277, i64* %278, align 8, !noalias !7
  %279 = getelementptr inbounds %"class.WTF::StringAppend.50", %"class.WTF::StringAppend.50"* %15, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %280 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %279, align 8, !noalias !7
  %281 = getelementptr inbounds %"class.WTF::StringAppend.50", %"class.WTF::StringAppend.50"* %6, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %280, %"class.WTF::StringImpl"** %281, align 8, !noalias !7
  %282 = icmp eq %"class.WTF::StringImpl"* %280, null
  br i1 %282, label %300, label %283

283:                                              ; preds = %274
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %280, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %285 = load atomic i32, i32* %284 monotonic, align 4
  %286 = and i32 %285, 2
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %288, label %300

288:                                              ; preds = %283
  %289 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %280, i64 0, i32 0
  %290 = load i32, i32* %289, align 4
  %291 = zext i32 %290 to i33
  %292 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %291, i33 1) #7
  %293 = extractvalue { i33, i1 } %292, 1
  %294 = extractvalue { i33, i1 } %292, 0
  %295 = icmp slt i33 %294, 0
  %296 = or i1 %293, %295
  br i1 %296, label %297, label %298, !prof !3

297:                                              ; preds = %288
  call void @llvm.trap() #7
  unreachable

298:                                              ; preds = %288
  %299 = trunc i33 %294 to i32
  store i32 %299, i32* %289, align 4
  br label %300

300:                                              ; preds = %298, %283, %274
  %301 = getelementptr inbounds %"class.WTF::StringAppend.50", %"class.WTF::StringAppend.50"* %6, i64 0, i32 0, i32 1
  %302 = getelementptr inbounds %"class.WTF::StringAppend.50", %"class.WTF::StringAppend.50"* %15, i64 0, i32 0, i32 1
  %303 = bitcast i8** %302 to i64*
  %304 = load i64, i64* %303, align 8, !noalias !7
  %305 = bitcast i8** %301 to i64*
  store i64 %304, i64* %305, align 8, !noalias !7
  %306 = getelementptr inbounds %"class.WTF::StringAppend.50", %"class.WTF::StringAppend.50"* %15, i64 0, i32 1, i32 0, i32 0
  %307 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %306, align 8, !noalias !7
  %308 = getelementptr inbounds %"class.WTF::StringAppend.50", %"class.WTF::StringAppend.50"* %6, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %307, %"class.WTF::StringImpl"** %308, align 8, !noalias !7
  %309 = icmp eq %"class.WTF::StringImpl"* %307, null
  br i1 %309, label %327, label %310

310:                                              ; preds = %300
  %311 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %307, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %312 = load atomic i32, i32* %311 monotonic, align 4
  %313 = and i32 %312, 2
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %327

315:                                              ; preds = %310
  %316 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %307, i64 0, i32 0
  %317 = load i32, i32* %316, align 4
  %318 = zext i32 %317 to i33
  %319 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %318, i33 1) #7
  %320 = extractvalue { i33, i1 } %319, 1
  %321 = extractvalue { i33, i1 } %319, 0
  %322 = icmp slt i33 %321, 0
  %323 = or i1 %320, %322
  br i1 %323, label %324, label %325, !prof !3

324:                                              ; preds = %315
  call void @llvm.trap() #7
  unreachable

325:                                              ; preds = %315
  %326 = trunc i33 %321 to i32
  store i32 %326, i32* %316, align 4
  br label %327

327:                                              ; preds = %300, %310, %325
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend"* nonnull %14, %"class.WTF::StringAppend.50"* nonnull byval(%"class.WTF::StringAppend.50") align 8 %6, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.4, i64 0, i64 0)) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %275)
  %328 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %14)
  %329 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %328, %"class.WTF::StringImpl"** %329, align 8
  %330 = bitcast %"class.blink::ConsoleLogger"* %1 to void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)***
  %331 = load void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)**, void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)*** %330, align 8
  %332 = getelementptr inbounds void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)*, void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)** %331, i64 3
  %333 = load void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)*, void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)** %332, align 8
  call void %333(%"class.blink::ConsoleLogger"* %1, i32 7, i32 3, %"class.WTF::String"* nonnull dereferenceable(8) %13, i1 zeroext false) #7
  %334 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %329, align 8
  %335 = icmp eq %"class.WTF::StringImpl"* %334, null
  br i1 %335, label %349, label %336

336:                                              ; preds = %327
  %337 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %334, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %338 = load atomic i32, i32* %337 monotonic, align 4
  %339 = and i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %334, i64 0, i32 0
  %342 = load i32, i32* %341, align 4
  br i1 %340, label %343, label %345

343:                                              ; preds = %336
  %344 = add i32 %342, -1
  store i32 %344, i32* %341, align 4
  br label %345

345:                                              ; preds = %343, %336
  %346 = phi i32 [ %344, %343 ], [ %342, %336 ]
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %348, label %349

348:                                              ; preds = %345
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %334) #7
  br label %349

349:                                              ; preds = %327, %345, %348
  %350 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  %351 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %350, align 8
  %352 = icmp eq %"class.WTF::StringImpl"* %351, null
  br i1 %352, label %366, label %353

353:                                              ; preds = %349
  %354 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %351, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %355 = load atomic i32, i32* %354 monotonic, align 4
  %356 = and i32 %355, 2
  %357 = icmp eq i32 %356, 0
  %358 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %351, i64 0, i32 0
  %359 = load i32, i32* %358, align 4
  br i1 %357, label %360, label %362

360:                                              ; preds = %353
  %361 = add i32 %359, -1
  store i32 %361, i32* %358, align 4
  br label %362

362:                                              ; preds = %360, %353
  %363 = phi i32 [ %361, %360 ], [ %359, %353 ]
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %365, label %366

365:                                              ; preds = %362
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %351) #7
  br label %366

366:                                              ; preds = %365, %362, %349
  %367 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %368 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %367, align 8
  %369 = icmp eq %"class.WTF::StringImpl"* %368, null
  br i1 %369, label %383, label %370

370:                                              ; preds = %366
  %371 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %368, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %372 = load atomic i32, i32* %371 monotonic, align 4
  %373 = and i32 %372, 2
  %374 = icmp eq i32 %373, 0
  %375 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %368, i64 0, i32 0
  %376 = load i32, i32* %375, align 4
  br i1 %374, label %377, label %379

377:                                              ; preds = %370
  %378 = add i32 %376, -1
  store i32 %378, i32* %375, align 4
  br label %379

379:                                              ; preds = %377, %370
  %380 = phi i32 [ %378, %377 ], [ %376, %370 ]
  %381 = icmp eq i32 %380, 0
  br i1 %381, label %382, label %383

382:                                              ; preds = %379
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %368) #7
  br label %383

383:                                              ; preds = %366, %379, %382
  %384 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %306, align 8
  %385 = icmp eq %"class.WTF::StringImpl"* %384, null
  br i1 %385, label %399, label %386

386:                                              ; preds = %383
  %387 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %384, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %388 = load atomic i32, i32* %387 monotonic, align 4
  %389 = and i32 %388, 2
  %390 = icmp eq i32 %389, 0
  %391 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %384, i64 0, i32 0
  %392 = load i32, i32* %391, align 4
  br i1 %390, label %393, label %395

393:                                              ; preds = %386
  %394 = add i32 %392, -1
  store i32 %394, i32* %391, align 4
  br label %395

395:                                              ; preds = %393, %386
  %396 = phi i32 [ %394, %393 ], [ %392, %386 ]
  %397 = icmp eq i32 %396, 0
  br i1 %397, label %398, label %399

398:                                              ; preds = %395
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %384) #7
  br label %399

399:                                              ; preds = %398, %395, %383
  %400 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %279, align 8
  %401 = icmp eq %"class.WTF::StringImpl"* %400, null
  br i1 %401, label %415, label %402

402:                                              ; preds = %399
  %403 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %400, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %404 = load atomic i32, i32* %403 monotonic, align 4
  %405 = and i32 %404, 2
  %406 = icmp eq i32 %405, 0
  %407 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %400, i64 0, i32 0
  %408 = load i32, i32* %407, align 4
  br i1 %406, label %409, label %411

409:                                              ; preds = %402
  %410 = add i32 %408, -1
  store i32 %410, i32* %407, align 4
  br label %411

411:                                              ; preds = %409, %402
  %412 = phi i32 [ %410, %409 ], [ %408, %402 ]
  %413 = icmp eq i32 %412, 0
  br i1 %413, label %414, label %415

414:                                              ; preds = %411
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %400) #7
  br label %415

415:                                              ; preds = %399, %411, %414
  %416 = getelementptr inbounds %"class.WTF::StringAppend.51", %"class.WTF::StringAppend.51"* %16, i64 0, i32 0, i32 1, i32 0, i32 0
  %417 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %416, align 8
  %418 = icmp eq %"class.WTF::StringImpl"* %417, null
  br i1 %418, label %432, label %419

419:                                              ; preds = %415
  %420 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %417, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %421 = load atomic i32, i32* %420 monotonic, align 4
  %422 = and i32 %421, 2
  %423 = icmp eq i32 %422, 0
  %424 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %417, i64 0, i32 0
  %425 = load i32, i32* %424, align 4
  br i1 %423, label %426, label %428

426:                                              ; preds = %419
  %427 = add i32 %425, -1
  store i32 %427, i32* %424, align 4
  br label %428

428:                                              ; preds = %426, %419
  %429 = phi i32 [ %427, %426 ], [ %425, %419 ]
  %430 = icmp eq i32 %429, 0
  br i1 %430, label %431, label %432

431:                                              ; preds = %428
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %417) #7
  br label %432

432:                                              ; preds = %415, %428, %431
  br i1 %162, label %458, label %433

433:                                              ; preds = %432
  %434 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %435 = load atomic i32, i32* %434 monotonic, align 4
  %436 = and i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 0
  %439 = load i32, i32* %438, align 4
  br i1 %437, label %440, label %442

440:                                              ; preds = %433
  %441 = add i32 %439, -1
  store i32 %441, i32* %438, align 4
  br label %442

442:                                              ; preds = %440, %433
  %443 = phi i32 [ %441, %440 ], [ %439, %433 ]
  %444 = icmp eq i32 %443, 0
  br i1 %444, label %445, label %447

445:                                              ; preds = %442
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %161) #7
  %446 = load i32, i32* %438, align 4
  br label %447

447:                                              ; preds = %442, %445
  %448 = phi i32 [ %443, %442 ], [ %446, %445 ]
  %449 = load atomic i32, i32* %434 monotonic, align 4
  %450 = and i32 %449, 2
  %451 = icmp eq i32 %450, 0
  br i1 %451, label %452, label %454

452:                                              ; preds = %447
  %453 = add i32 %448, -1
  store i32 %453, i32* %438, align 4
  br label %454

454:                                              ; preds = %452, %447
  %455 = phi i32 [ %453, %452 ], [ %448, %447 ]
  %456 = icmp eq i32 %455, 0
  br i1 %456, label %457, label %458

457:                                              ; preds = %454
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %161) #7
  br label %458

458:                                              ; preds = %432, %454, %457
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %159) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %158) #7
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %157) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %156) #7
  br label %828

459:                                              ; preds = %147, %153
  %460 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %2, i64 0, i32 36
  %461 = load i32, i32* %460, align 4
  %462 = icmp eq i32 %461, 0
  %463 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %463) #7
  store i32 3927, i32* %17, align 4
  %464 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_121AllowMimeTypeAsScriptERKN3WTF6StringEbNS_16AllowedByNosniff13MimeTypeCheckERNS_5mojom10WebFeatureE(%"class.WTF::String"* nonnull dereferenceable(8) %12, i1 zeroext %462, i32 %3, i32* nonnull dereferenceable(4) %17)
  %465 = bitcast %"class.WTF::StringView"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %465) #7
  %466 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %467 = bitcast %"class.WTF::StringView"* %18 to i64*
  store i64 %466, i64* %467, align 8
  %468 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i8** %468, align 8
  %469 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  store i32 12, i32* %469, align 8
  %470 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %471 = icmp eq %"class.WTF::StringImpl"* %470, null
  br i1 %471, label %477, label %472

472:                                              ; preds = %459
  %473 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %470, %"class.WTF::StringView"* nonnull dereferenceable(24) %18) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %465) #7
  br i1 %473, label %478, label %474

474:                                              ; preds = %472
  %475 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %476 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  br label %486

477:                                              ; preds = %459
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %465) #7
  br label %486

478:                                              ; preds = %472
  %479 = zext i1 %462 to i64
  %480 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZN5blink12_GLOBAL__N_120kApplicationFeaturesE, i64 0, i64 %479
  %481 = load i32, i32* %480, align 4
  %482 = bitcast %"class.blink::UseCounter"* %0 to void (%"class.blink::UseCounter"*, i32)***
  %483 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %482, align 8
  %484 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %483, i64 3
  %485 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %484, align 8
  call void %485(%"class.blink::UseCounter"* %0, i32 %481) #7
  br label %505

486:                                              ; preds = %474, %477
  %487 = phi %"class.WTF::StringImpl"* [ %476, %474 ], [ null, %477 ]
  %488 = phi i64 [ %475, %474 ], [ %466, %477 ]
  %489 = bitcast %"class.WTF::StringView"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %489) #7
  %490 = bitcast %"class.WTF::StringView"* %19 to i64*
  store i64 %488, i64* %490, align 8
  %491 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), i8** %491, align 8
  %492 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 2
  store i32 5, i32* %492, align 8
  %493 = icmp eq %"class.WTF::StringImpl"* %487, null
  br i1 %493, label %496, label %494

494:                                              ; preds = %486
  %495 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %487, %"class.WTF::StringView"* nonnull dereferenceable(24) %19) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %489) #7
  br i1 %495, label %497, label %505

496:                                              ; preds = %486
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %489) #7
  br label %505

497:                                              ; preds = %494
  %498 = zext i1 %462 to i64
  %499 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZN5blink12_GLOBAL__N_113kTextFeaturesE, i64 0, i64 %498
  %500 = load i32, i32* %499, align 4
  %501 = bitcast %"class.blink::UseCounter"* %0 to void (%"class.blink::UseCounter"*, i32)***
  %502 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %501, align 8
  %503 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %502, i64 3
  %504 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %503, align 8
  call void %504(%"class.blink::UseCounter"* %0, i32 %500) #7
  br label %505

505:                                              ; preds = %496, %494, %497, %478
  %506 = load i32, i32* %17, align 4
  %507 = icmp eq i32 %506, 3927
  br i1 %507, label %513, label %508

508:                                              ; preds = %505
  %509 = bitcast %"class.blink::UseCounter"* %0 to void (%"class.blink::UseCounter"*, i32)***
  %510 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %509, align 8
  %511 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %510, i64 3
  %512 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %511, align 8
  call void %512(%"class.blink::UseCounter"* %0, i32 %506) #7
  br label %513

513:                                              ; preds = %505, %508
  br i1 %464, label %818, label %514

514:                                              ; preds = %513
  %515 = bitcast %"class.WTF::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %515) #7
  %516 = bitcast %"class.WTF::StringAppend"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %516) #7
  %517 = bitcast %"class.WTF::StringAppend.50"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %517) #7
  %518 = bitcast %"class.WTF::StringAppend.51"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %518) #7
  %519 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink16ResourceResponse17CurrentRequestUrlEv(%"class.blink::ResourceResponse"* %2) #7
  %520 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL12ElidedStringEv(%"class.blink::KURL"* %519) #7
  %521 = icmp eq %"class.WTF::StringImpl"* %520, null
  br i1 %521, label %597, label %522

522:                                              ; preds = %514
  %523 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %520, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %524 = load atomic i32, i32* %523 monotonic, align 4
  %525 = and i32 %524, 2
  %526 = icmp eq i32 %525, 0
  %527 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %520, i64 0, i32 0
  %528 = load i32, i32* %527, align 4
  br i1 %526, label %529, label %539

529:                                              ; preds = %522
  %530 = zext i32 %528 to i33
  %531 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %530, i33 1) #7
  %532 = extractvalue { i33, i1 } %531, 1
  %533 = extractvalue { i33, i1 } %531, 0
  %534 = icmp slt i33 %533, 0
  %535 = or i1 %532, %534
  br i1 %535, label %536, label %537, !prof !3

536:                                              ; preds = %529
  call void @llvm.trap() #7
  unreachable

537:                                              ; preds = %529
  %538 = trunc i33 %533 to i32
  store i32 %538, i32* %527, align 4
  br label %539

539:                                              ; preds = %537, %522
  %540 = phi i32 [ %538, %537 ], [ %528, %522 ]
  %541 = load atomic i32, i32* %523 monotonic, align 4
  %542 = and i32 %541, 2
  %543 = icmp eq i32 %542, 0
  br i1 %543, label %544, label %554

544:                                              ; preds = %539
  %545 = zext i32 %540 to i33
  %546 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %545, i33 1) #7
  %547 = extractvalue { i33, i1 } %546, 1
  %548 = extractvalue { i33, i1 } %546, 0
  %549 = icmp slt i33 %548, 0
  %550 = or i1 %547, %549
  br i1 %550, label %551, label %552, !prof !3

551:                                              ; preds = %544
  call void @llvm.trap() #7
  unreachable

552:                                              ; preds = %544
  %553 = trunc i33 %548 to i32
  store i32 %553, i32* %527, align 4
  br label %554

554:                                              ; preds = %552, %539
  %555 = phi i32 [ %553, %552 ], [ %540, %539 ]
  %556 = load atomic i32, i32* %523 monotonic, align 4
  %557 = and i32 %556, 2
  %558 = icmp eq i32 %557, 0
  br i1 %558, label %559, label %561

559:                                              ; preds = %554
  %560 = add i32 %555, -1
  store i32 %560, i32* %527, align 4
  br label %561

561:                                              ; preds = %559, %554
  %562 = phi i32 [ %560, %559 ], [ %555, %554 ]
  %563 = icmp eq i32 %562, 0
  br i1 %563, label %564, label %565

564:                                              ; preds = %561
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %520) #7
  br label %565

565:                                              ; preds = %561, %564
  %566 = load atomic i32, i32* %523 monotonic, align 4, !noalias !10
  %567 = and i32 %566, 2
  %568 = icmp eq i32 %567, 0
  %569 = load i32, i32* %527, align 4
  br i1 %568, label %570, label %580

570:                                              ; preds = %565
  %571 = zext i32 %569 to i33
  %572 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %571, i33 1) #7
  %573 = extractvalue { i33, i1 } %572, 1
  %574 = extractvalue { i33, i1 } %572, 0
  %575 = icmp slt i33 %574, 0
  %576 = or i1 %573, %575
  br i1 %576, label %577, label %578, !prof !3

577:                                              ; preds = %570
  call void @llvm.trap() #7, !noalias !10
  unreachable

578:                                              ; preds = %570
  %579 = trunc i33 %574 to i32
  store i32 %579, i32* %527, align 4, !noalias !10
  br label %580

580:                                              ; preds = %565, %578
  %581 = phi i32 [ %579, %578 ], [ %569, %565 ]
  %582 = bitcast %"class.WTF::StringAppend.51"* %23 to i64*
  store i64 ptrtoint ([33 x i8]* @.str.2 to i64), i64* %582, align 8, !alias.scope !10
  %583 = getelementptr inbounds %"class.WTF::StringAppend.51", %"class.WTF::StringAppend.51"* %23, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %520, %"class.WTF::StringImpl"** %583, align 8, !alias.scope !10
  %584 = load atomic i32, i32* %523 monotonic, align 4, !noalias !10
  %585 = and i32 %584, 2
  %586 = icmp eq i32 %585, 0
  br i1 %586, label %587, label %601

587:                                              ; preds = %580
  %588 = zext i32 %581 to i33
  %589 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %588, i33 1) #7
  %590 = extractvalue { i33, i1 } %589, 1
  %591 = extractvalue { i33, i1 } %589, 0
  %592 = icmp slt i33 %591, 0
  %593 = or i1 %590, %592
  br i1 %593, label %594, label %595, !prof !3

594:                                              ; preds = %587
  call void @llvm.trap() #7, !noalias !10
  unreachable

595:                                              ; preds = %587
  %596 = trunc i33 %591 to i32
  store i32 %596, i32* %527, align 4, !noalias !10
  br label %601

597:                                              ; preds = %514
  %598 = bitcast %"class.WTF::StringAppend.51"* %23 to i64*
  store i64 ptrtoint ([33 x i8]* @.str.2 to i64), i64* %598, align 8, !alias.scope !10
  %599 = getelementptr inbounds %"class.WTF::StringAppend.51", %"class.WTF::StringAppend.51"* %23, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %599, align 8, !alias.scope !10
  %600 = getelementptr inbounds %"class.WTF::StringAppend.51", %"class.WTF::StringAppend.51"* %23, i64 0, i32 1
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i8** %600, align 8, !alias.scope !10
  br label %613

601:                                              ; preds = %595, %580
  %602 = phi i32 [ %596, %595 ], [ %581, %580 ]
  %603 = getelementptr inbounds %"class.WTF::StringAppend.51", %"class.WTF::StringAppend.51"* %23, i64 0, i32 1
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i8** %603, align 8, !alias.scope !10
  %604 = load atomic i32, i32* %523 monotonic, align 4, !noalias !10
  %605 = and i32 %604, 2
  %606 = icmp eq i32 %605, 0
  br i1 %606, label %607, label %609

607:                                              ; preds = %601
  %608 = add i32 %602, -1
  store i32 %608, i32* %527, align 4, !noalias !10
  br label %609

609:                                              ; preds = %607, %601
  %610 = phi i32 [ %608, %607 ], [ %602, %601 ]
  %611 = icmp eq i32 %610, 0
  br i1 %611, label %612, label %613

612:                                              ; preds = %609
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %520) #7, !noalias !10
  br label %613

613:                                              ; preds = %597, %609, %612
  %614 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %615 = icmp eq %"class.WTF::StringImpl"* %614, null
  br i1 %615, label %633, label %616

616:                                              ; preds = %613
  %617 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %614, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %618 = load atomic i32, i32* %617 monotonic, align 4
  %619 = and i32 %618, 2
  %620 = icmp eq i32 %619, 0
  br i1 %620, label %621, label %633

621:                                              ; preds = %616
  %622 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %614, i64 0, i32 0
  %623 = load i32, i32* %622, align 4
  %624 = zext i32 %623 to i33
  %625 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %624, i33 1) #7
  %626 = extractvalue { i33, i1 } %625, 1
  %627 = extractvalue { i33, i1 } %625, 0
  %628 = icmp slt i33 %627, 0
  %629 = or i1 %626, %628
  br i1 %629, label %630, label %631, !prof !3

630:                                              ; preds = %621
  call void @llvm.trap() #7
  unreachable

631:                                              ; preds = %621
  %632 = trunc i33 %627 to i32
  store i32 %632, i32* %622, align 4
  br label %633

633:                                              ; preds = %613, %616, %631
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.50"* nonnull sret %22, %"class.WTF::StringAppend.51"* nonnull dereferenceable(24) %23, %"class.WTF::StringImpl"* %614)
  %634 = bitcast %"class.WTF::StringAppend.50"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %634)
  %635 = bitcast %"class.WTF::StringAppend.50"* %22 to i64*
  %636 = load i64, i64* %635, align 8, !noalias !13
  %637 = bitcast %"class.WTF::StringAppend.50"* %5 to i64*
  store i64 %636, i64* %637, align 8, !noalias !13
  %638 = getelementptr inbounds %"class.WTF::StringAppend.50", %"class.WTF::StringAppend.50"* %22, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %639 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %638, align 8, !noalias !13
  %640 = getelementptr inbounds %"class.WTF::StringAppend.50", %"class.WTF::StringAppend.50"* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %639, %"class.WTF::StringImpl"** %640, align 8, !noalias !13
  %641 = icmp eq %"class.WTF::StringImpl"* %639, null
  br i1 %641, label %659, label %642

642:                                              ; preds = %633
  %643 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %639, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %644 = load atomic i32, i32* %643 monotonic, align 4
  %645 = and i32 %644, 2
  %646 = icmp eq i32 %645, 0
  br i1 %646, label %647, label %659

647:                                              ; preds = %642
  %648 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %639, i64 0, i32 0
  %649 = load i32, i32* %648, align 4
  %650 = zext i32 %649 to i33
  %651 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %650, i33 1) #7
  %652 = extractvalue { i33, i1 } %651, 1
  %653 = extractvalue { i33, i1 } %651, 0
  %654 = icmp slt i33 %653, 0
  %655 = or i1 %652, %654
  br i1 %655, label %656, label %657, !prof !3

656:                                              ; preds = %647
  call void @llvm.trap() #7
  unreachable

657:                                              ; preds = %647
  %658 = trunc i33 %653 to i32
  store i32 %658, i32* %648, align 4
  br label %659

659:                                              ; preds = %657, %642, %633
  %660 = getelementptr inbounds %"class.WTF::StringAppend.50", %"class.WTF::StringAppend.50"* %5, i64 0, i32 0, i32 1
  %661 = getelementptr inbounds %"class.WTF::StringAppend.50", %"class.WTF::StringAppend.50"* %22, i64 0, i32 0, i32 1
  %662 = bitcast i8** %661 to i64*
  %663 = load i64, i64* %662, align 8, !noalias !13
  %664 = bitcast i8** %660 to i64*
  store i64 %663, i64* %664, align 8, !noalias !13
  %665 = getelementptr inbounds %"class.WTF::StringAppend.50", %"class.WTF::StringAppend.50"* %22, i64 0, i32 1, i32 0, i32 0
  %666 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %665, align 8, !noalias !13
  %667 = getelementptr inbounds %"class.WTF::StringAppend.50", %"class.WTF::StringAppend.50"* %5, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %666, %"class.WTF::StringImpl"** %667, align 8, !noalias !13
  %668 = icmp eq %"class.WTF::StringImpl"* %666, null
  br i1 %668, label %686, label %669

669:                                              ; preds = %659
  %670 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %666, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %671 = load atomic i32, i32* %670 monotonic, align 4
  %672 = and i32 %671, 2
  %673 = icmp eq i32 %672, 0
  br i1 %673, label %674, label %686

674:                                              ; preds = %669
  %675 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %666, i64 0, i32 0
  %676 = load i32, i32* %675, align 4
  %677 = zext i32 %676 to i33
  %678 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %677, i33 1) #7
  %679 = extractvalue { i33, i1 } %678, 1
  %680 = extractvalue { i33, i1 } %678, 0
  %681 = icmp slt i33 %680, 0
  %682 = or i1 %679, %681
  br i1 %682, label %683, label %684, !prof !3

683:                                              ; preds = %674
  call void @llvm.trap() #7
  unreachable

684:                                              ; preds = %674
  %685 = trunc i33 %680 to i32
  store i32 %685, i32* %675, align 4
  br label %686

686:                                              ; preds = %659, %669, %684
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend"* nonnull %21, %"class.WTF::StringAppend.50"* nonnull byval(%"class.WTF::StringAppend.50") align 8 %5, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0)) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %634)
  %687 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %21)
  %688 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %687, %"class.WTF::StringImpl"** %688, align 8
  %689 = bitcast %"class.blink::ConsoleLogger"* %1 to void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)***
  %690 = load void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)**, void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)*** %689, align 8
  %691 = getelementptr inbounds void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)*, void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)** %690, i64 3
  %692 = load void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)*, void (%"class.blink::ConsoleLogger"*, i32, i32, %"class.WTF::String"*, i1)** %691, align 8
  call void %692(%"class.blink::ConsoleLogger"* %1, i32 7, i32 3, %"class.WTF::String"* nonnull dereferenceable(8) %20, i1 zeroext false) #7
  %693 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %688, align 8
  %694 = icmp eq %"class.WTF::StringImpl"* %693, null
  br i1 %694, label %708, label %695

695:                                              ; preds = %686
  %696 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %693, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %697 = load atomic i32, i32* %696 monotonic, align 4
  %698 = and i32 %697, 2
  %699 = icmp eq i32 %698, 0
  %700 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %693, i64 0, i32 0
  %701 = load i32, i32* %700, align 4
  br i1 %699, label %702, label %704

702:                                              ; preds = %695
  %703 = add i32 %701, -1
  store i32 %703, i32* %700, align 4
  br label %704

704:                                              ; preds = %702, %695
  %705 = phi i32 [ %703, %702 ], [ %701, %695 ]
  %706 = icmp eq i32 %705, 0
  br i1 %706, label %707, label %708

707:                                              ; preds = %704
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %693) #7
  br label %708

708:                                              ; preds = %686, %704, %707
  %709 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %21, i64 0, i32 0, i32 1, i32 0, i32 0
  %710 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %709, align 8
  %711 = icmp eq %"class.WTF::StringImpl"* %710, null
  br i1 %711, label %725, label %712

712:                                              ; preds = %708
  %713 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %710, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %714 = load atomic i32, i32* %713 monotonic, align 4
  %715 = and i32 %714, 2
  %716 = icmp eq i32 %715, 0
  %717 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %710, i64 0, i32 0
  %718 = load i32, i32* %717, align 4
  br i1 %716, label %719, label %721

719:                                              ; preds = %712
  %720 = add i32 %718, -1
  store i32 %720, i32* %717, align 4
  br label %721

721:                                              ; preds = %719, %712
  %722 = phi i32 [ %720, %719 ], [ %718, %712 ]
  %723 = icmp eq i32 %722, 0
  br i1 %723, label %724, label %725

724:                                              ; preds = %721
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %710) #7
  br label %725

725:                                              ; preds = %724, %721, %708
  %726 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %21, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %727 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %726, align 8
  %728 = icmp eq %"class.WTF::StringImpl"* %727, null
  br i1 %728, label %742, label %729

729:                                              ; preds = %725
  %730 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %727, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %731 = load atomic i32, i32* %730 monotonic, align 4
  %732 = and i32 %731, 2
  %733 = icmp eq i32 %732, 0
  %734 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %727, i64 0, i32 0
  %735 = load i32, i32* %734, align 4
  br i1 %733, label %736, label %738

736:                                              ; preds = %729
  %737 = add i32 %735, -1
  store i32 %737, i32* %734, align 4
  br label %738

738:                                              ; preds = %736, %729
  %739 = phi i32 [ %737, %736 ], [ %735, %729 ]
  %740 = icmp eq i32 %739, 0
  br i1 %740, label %741, label %742

741:                                              ; preds = %738
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %727) #7
  br label %742

742:                                              ; preds = %725, %738, %741
  %743 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %665, align 8
  %744 = icmp eq %"class.WTF::StringImpl"* %743, null
  br i1 %744, label %758, label %745

745:                                              ; preds = %742
  %746 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %743, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %747 = load atomic i32, i32* %746 monotonic, align 4
  %748 = and i32 %747, 2
  %749 = icmp eq i32 %748, 0
  %750 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %743, i64 0, i32 0
  %751 = load i32, i32* %750, align 4
  br i1 %749, label %752, label %754

752:                                              ; preds = %745
  %753 = add i32 %751, -1
  store i32 %753, i32* %750, align 4
  br label %754

754:                                              ; preds = %752, %745
  %755 = phi i32 [ %753, %752 ], [ %751, %745 ]
  %756 = icmp eq i32 %755, 0
  br i1 %756, label %757, label %758

757:                                              ; preds = %754
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %743) #7
  br label %758

758:                                              ; preds = %757, %754, %742
  %759 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %638, align 8
  %760 = icmp eq %"class.WTF::StringImpl"* %759, null
  br i1 %760, label %774, label %761

761:                                              ; preds = %758
  %762 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %759, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %763 = load atomic i32, i32* %762 monotonic, align 4
  %764 = and i32 %763, 2
  %765 = icmp eq i32 %764, 0
  %766 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %759, i64 0, i32 0
  %767 = load i32, i32* %766, align 4
  br i1 %765, label %768, label %770

768:                                              ; preds = %761
  %769 = add i32 %767, -1
  store i32 %769, i32* %766, align 4
  br label %770

770:                                              ; preds = %768, %761
  %771 = phi i32 [ %769, %768 ], [ %767, %761 ]
  %772 = icmp eq i32 %771, 0
  br i1 %772, label %773, label %774

773:                                              ; preds = %770
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %759) #7
  br label %774

774:                                              ; preds = %758, %770, %773
  %775 = getelementptr inbounds %"class.WTF::StringAppend.51", %"class.WTF::StringAppend.51"* %23, i64 0, i32 0, i32 1, i32 0, i32 0
  %776 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %775, align 8
  %777 = icmp eq %"class.WTF::StringImpl"* %776, null
  br i1 %777, label %791, label %778

778:                                              ; preds = %774
  %779 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %776, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %780 = load atomic i32, i32* %779 monotonic, align 4
  %781 = and i32 %780, 2
  %782 = icmp eq i32 %781, 0
  %783 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %776, i64 0, i32 0
  %784 = load i32, i32* %783, align 4
  br i1 %782, label %785, label %787

785:                                              ; preds = %778
  %786 = add i32 %784, -1
  store i32 %786, i32* %783, align 4
  br label %787

787:                                              ; preds = %785, %778
  %788 = phi i32 [ %786, %785 ], [ %784, %778 ]
  %789 = icmp eq i32 %788, 0
  br i1 %789, label %790, label %791

790:                                              ; preds = %787
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %776) #7
  br label %791

791:                                              ; preds = %774, %787, %790
  br i1 %521, label %817, label %792

792:                                              ; preds = %791
  %793 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %520, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %794 = load atomic i32, i32* %793 monotonic, align 4
  %795 = and i32 %794, 2
  %796 = icmp eq i32 %795, 0
  %797 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %520, i64 0, i32 0
  %798 = load i32, i32* %797, align 4
  br i1 %796, label %799, label %801

799:                                              ; preds = %792
  %800 = add i32 %798, -1
  store i32 %800, i32* %797, align 4
  br label %801

801:                                              ; preds = %799, %792
  %802 = phi i32 [ %800, %799 ], [ %798, %792 ]
  %803 = icmp eq i32 %802, 0
  br i1 %803, label %804, label %806

804:                                              ; preds = %801
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %520) #7
  %805 = load i32, i32* %797, align 4
  br label %806

806:                                              ; preds = %801, %804
  %807 = phi i32 [ %802, %801 ], [ %805, %804 ]
  %808 = load atomic i32, i32* %793 monotonic, align 4
  %809 = and i32 %808, 2
  %810 = icmp eq i32 %809, 0
  br i1 %810, label %811, label %813

811:                                              ; preds = %806
  %812 = add i32 %807, -1
  store i32 %812, i32* %797, align 4
  br label %813

813:                                              ; preds = %811, %806
  %814 = phi i32 [ %812, %811 ], [ %807, %806 ]
  %815 = icmp eq i32 %814, 0
  br i1 %815, label %816, label %817

816:                                              ; preds = %813
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %520) #7
  br label %817

817:                                              ; preds = %791, %813, %816
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %518) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %517) #7
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %516) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %515) #7
  br label %827

818:                                              ; preds = %513
  %819 = icmp eq i32 %3, 2
  br i1 %819, label %820, label %827

820:                                              ; preds = %818
  %821 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_121AllowMimeTypeAsScriptERKN3WTF6StringEbNS_16AllowedByNosniff13MimeTypeCheckERNS_5mojom10WebFeatureE(%"class.WTF::String"* nonnull dereferenceable(8) %12, i1 zeroext %462, i32 0, i32* nonnull dereferenceable(4) %17)
  br i1 %821, label %827, label %822

822:                                              ; preds = %820
  %823 = bitcast %"class.blink::UseCounter"* %0 to void (%"class.blink::UseCounter"*, i32)***
  %824 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %823, align 8
  %825 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %824, i64 3
  %826 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %825, align 8
  call void %826(%"class.blink::UseCounter"* %0, i32 3090) #7
  br label %827

827:                                              ; preds = %820, %822, %818, %817
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %463) #7
  br label %828

828:                                              ; preds = %827, %458
  %829 = phi i1 [ %464, %827 ], [ false, %458 ]
  %830 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %831 = icmp eq %"class.WTF::StringImpl"* %830, null
  br i1 %831, label %845, label %832

832:                                              ; preds = %828
  %833 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %830, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %834 = load atomic i32, i32* %833 monotonic, align 4
  %835 = and i32 %834, 2
  %836 = icmp eq i32 %835, 0
  %837 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %830, i64 0, i32 0
  %838 = load i32, i32* %837, align 4
  br i1 %836, label %839, label %841

839:                                              ; preds = %832
  %840 = add i32 %838, -1
  store i32 %840, i32* %837, align 4
  br label %841

841:                                              ; preds = %839, %832
  %842 = phi i32 [ %840, %839 ], [ %838, %832 ]
  %843 = icmp eq i32 %842, 0
  br i1 %843, label %844, label %845

844:                                              ; preds = %841
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %830) #7
  br label %845

845:                                              ; preds = %828, %841, %844
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114) #7
  br label %846

846:                                              ; preds = %78, %106, %94, %81, %79, %845
  %847 = phi i1 [ %829, %845 ], [ true, %79 ], [ true, %81 ], [ true, %94 ], [ true, %106 ], [ true, %78 ]
  ret i1 %847
}

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink16ResourceResponse17CurrentRequestUrlEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink4KURL22ProtocolIsInHTTPFamilyEv(%"class.blink::KURL"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL17LastPathComponentEv(%"class.blink::KURL"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"*, %"class.WTF::StringView"* byval(%"class.WTF::StringView") align 8) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink16ResourceResponse15HttpContentTypeEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #1

declare i32 @_ZN5blink29ParseContentTypeOptionsHeaderERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse15HttpHeaderFieldERKN3WTF12AtomicStringE(%"class.blink::ResourceResponse"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink16MIMETypeRegistry29IsSupportedJavaScriptMIMETypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.50"* noalias sret, %"class.WTF::StringAppend.51"* dereferenceable(24), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.51", align 8
  %5 = bitcast %"class.WTF::StringAppend.51"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend.51"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.51", %"class.WTF::StringAppend.51"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.51", %"class.WTF::StringAppend.51"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #7
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !3

26:                                               ; preds = %17
  tail call void @llvm.trap() #7
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %3, %12, %27
  %30 = getelementptr inbounds %"class.WTF::StringAppend.51", %"class.WTF::StringAppend.51"* %4, i64 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.51", %"class.WTF::StringAppend.51"* %1, i64 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %54

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #7
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !3

50:                                               ; preds = %41
  tail call void @llvm.trap() #7
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %54

53:                                               ; preds = %29
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.50"* %0, %"class.WTF::StringAppend.51"* nonnull byval(%"class.WTF::StringAppend.51") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %66

54:                                               ; preds = %36, %51
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.50"* %0, %"class.WTF::StringAppend.51"* nonnull byval(%"class.WTF::StringAppend.51") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %54
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %54
  %63 = phi i32 [ %61, %60 ], [ %59, %54 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #7
  br label %66

66:                                               ; preds = %53, %62, %65
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL12ElidedStringEv(%"class.blink::KURL"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.53", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.53", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.53", align 8
  %5 = alloca i8*, align 8
  %6 = alloca i16*, align 8
  %7 = bitcast %"class.WTF::StringTypeAdapter.53"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #7
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false) #7
  %9 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.53"* nonnull %4, i8* %9) #7
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = bitcast %"class.WTF::StringTypeAdapter.53"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #7
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false) #7
  %15 = load i8*, i8** %14, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.53"* nonnull %3, i8* %15) #7
  %16 = bitcast %"class.WTF::StringTypeAdapter.53"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #7
  %17 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false) #7
  %18 = load i8*, i8** %17, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.53"* nonnull %2, i8* %18) #7
  %19 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %23 = select i1 %21, %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"* %20
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #7
  br i1 %27, label %28, label %29

28:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #7
  br label %72

29:                                               ; preds = %1
  %30 = icmp eq %"class.WTF::StringImpl"* %11, null
  %31 = select i1 %30, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %11
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #7
  br i1 %35, label %72, label %36

36:                                               ; preds = %29
  %37 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #7
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %38 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %39 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %38, i8** nonnull dereferenceable(8) %5) #7
  %40 = load i8*, i8** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %40)
  %41 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %41, label %108, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %59

49:                                               ; preds = %42
  %50 = zext i32 %48 to i33
  %51 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %50, i33 1) #7
  %52 = extractvalue { i33, i1 } %51, 1
  %53 = extractvalue { i33, i1 } %51, 0
  %54 = icmp slt i33 %53, 0
  %55 = or i1 %52, %54
  br i1 %55, label %56, label %57, !prof !3

56:                                               ; preds = %49
  call void @llvm.trap() #7
  unreachable

57:                                               ; preds = %49
  %58 = trunc i33 %53 to i32
  store i32 %58, i32* %47, align 4
  br label %59

59:                                               ; preds = %42, %57
  %60 = phi i32 [ %58, %57 ], [ %48, %42 ]
  %61 = ptrtoint %"class.WTF::StringImpl"* %39 to i64
  %62 = load atomic i32, i32* %43 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %67 = add i32 %60, -1
  store i32 %67, i32* %66, align 4
  br label %68

68:                                               ; preds = %65, %59
  %69 = phi i32 [ %67, %65 ], [ %60, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %108

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #7
  br label %108

72:                                               ; preds = %29, %28
  %73 = bitcast i16** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #7
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %6, align 8
  %74 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %75 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %74, i16** nonnull dereferenceable(8) %6) #7
  %76 = load i16*, i16** %6, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %76)
  %77 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %77, label %108, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %95

85:                                               ; preds = %78
  %86 = zext i32 %84 to i33
  %87 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #7
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !3

92:                                               ; preds = %85
  call void @llvm.trap() #7
  unreachable

93:                                               ; preds = %85
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %83, align 4
  br label %95

95:                                               ; preds = %78, %93
  %96 = phi i32 [ %94, %93 ], [ %84, %78 ]
  %97 = ptrtoint %"class.WTF::StringImpl"* %75 to i64
  %98 = load atomic i32, i32* %79 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %103 = add i32 %96, -1
  store i32 %103, i32* %102, align 4
  br label %104

104:                                              ; preds = %101, %95
  %105 = phi i32 [ %103, %101 ], [ %96, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #7
  br label %108

108:                                              ; preds = %107, %104, %72, %71, %68, %36
  %109 = phi i8* [ %37, %36 ], [ %37, %68 ], [ %37, %71 ], [ %73, %72 ], [ %73, %104 ], [ %73, %107 ]
  %110 = phi i64 [ 0, %36 ], [ %61, %68 ], [ %61, %71 ], [ 0, %72 ], [ %97, %104 ], [ %97, %107 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #7
  %111 = inttoptr i64 %110 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %111
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_121AllowMimeTypeAsScriptERKN3WTF6StringEbNS_16AllowedByNosniff13MimeTypeCheckERNS_5mojom10WebFeatureE(%"class.WTF::String"* dereferenceable(8), i1 zeroext, i32, i32* nocapture dereferenceable(4)) unnamed_addr #0 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = alloca %"class.WTF::StringView", align 8
  %18 = tail call zeroext i1 @_ZN5blink16MIMETypeRegistry29IsSupportedJavaScriptMIMETypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %0) #7
  br i1 %18, label %240, label %19

19:                                               ; preds = %4
  %20 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #7
  %21 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %22 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0), i8** %23, align 8
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 6, i32* %24, align 8
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %19
  %29 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %26, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #7
  br i1 %29, label %34, label %30

30:                                               ; preds = %28
  %31 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  br label %35

33:                                               ; preds = %19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #7
  br label %35

34:                                               ; preds = %28
  store i32 674, i32* %3, align 4
  br label %240

35:                                               ; preds = %30, %33
  %36 = phi %"class.WTF::StringImpl"* [ %32, %30 ], [ null, %33 ]
  %37 = phi i64 [ %31, %30 ], [ %21, %33 ]
  %38 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #7
  %39 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %37, i64* %39, align 8
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i8** %40, align 8
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 6, i32* %41, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %35
  %44 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %36, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #7
  br i1 %44, label %49, label %45

45:                                               ; preds = %43
  %46 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  br label %50

48:                                               ; preds = %35
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #7
  br label %50

49:                                               ; preds = %43
  store i32 1544, i32* %3, align 4
  br label %240

50:                                               ; preds = %45, %48
  %51 = phi %"class.WTF::StringImpl"* [ %47, %45 ], [ null, %48 ]
  %52 = phi i64 [ %46, %45 ], [ %37, %48 ]
  %53 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #7
  %54 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %52, i64* %54, align 8
  %55 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0), i8** %55, align 8
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 6, i32* %56, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %50
  %59 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %51, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #7
  br i1 %59, label %64, label %60

60:                                               ; preds = %58
  %61 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  br label %65

63:                                               ; preds = %50
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #7
  br label %65

64:                                               ; preds = %58
  store i32 1545, i32* %3, align 4
  br label %240

65:                                               ; preds = %60, %63
  %66 = phi %"class.WTF::StringImpl"* [ %62, %60 ], [ null, %63 ]
  %67 = phi i64 [ %61, %60 ], [ %52, %63 ]
  %68 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #7
  %69 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %67, i64* %69, align 8
  %70 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0), i8** %70, align 8
  %71 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 8, i32* %71, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %65
  %74 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %66, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #7
  br i1 %74, label %76, label %77

75:                                               ; preds = %65
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #7
  br label %77

76:                                               ; preds = %73
  store i32 1546, i32* %3, align 4
  br label %240

77:                                               ; preds = %75, %73
  %78 = icmp eq i32 %2, 0
  br i1 %78, label %240, label %79

79:                                               ; preds = %77
  %80 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %80) #7
  %81 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %82 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %81, i64* %82, align 8
  %83 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), i8** %83, align 8
  %84 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 5, i32* %84, align 8
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %85, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #7
  br i1 %88, label %90, label %89

89:                                               ; preds = %79, %87
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %80) #7
  br label %111

90:                                               ; preds = %87
  %91 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #7
  %92 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %0, i32 5, i32 -1) #7
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %92, %"class.WTF::StringImpl"** %93, align 8
  %94 = call zeroext i1 @_ZN5blink16MIMETypeRegistry35IsLegacySupportedJavaScriptLanguageERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %10) #7
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %90
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #7
  br label %110

110:                                              ; preds = %109, %106, %90
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %80) #7
  br i1 %94, label %240, label %111

111:                                              ; preds = %89, %110
  %112 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %112) #7
  %113 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %114 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.13, i64 0, i64 0), i8** %115, align 8
  %116 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 24, i32* %116, align 8
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %124, label %119

119:                                              ; preds = %111
  %120 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %117, %"class.WTF::StringView"* nonnull dereferenceable(24) %11) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %112) #7
  br i1 %120, label %125, label %121

121:                                              ; preds = %119
  %122 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  br label %129

124:                                              ; preds = %111
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %112) #7
  br label %129

125:                                              ; preds = %119
  %126 = zext i1 %1 to i64
  %127 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZN5blink12_GLOBAL__N_131kApplicationOctetStreamFeaturesE, i64 0, i64 %126
  %128 = load i32, i32* %127, align 4
  store i32 %128, i32* %3, align 4
  br label %240

129:                                              ; preds = %121, %124
  %130 = phi %"class.WTF::StringImpl"* [ %123, %121 ], [ null, %124 ]
  %131 = phi i64 [ %122, %121 ], [ %113, %124 ]
  %132 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %132) #7
  %133 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %131, i64* %133, align 8
  %134 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i64 0, i64 0), i8** %134, align 8
  %135 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 15, i32* %135, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %136, label %142, label %137

137:                                              ; preds = %129
  %138 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %130, %"class.WTF::StringView"* nonnull dereferenceable(24) %12) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %132) #7
  br i1 %138, label %143, label %139

139:                                              ; preds = %137
  %140 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  br label %147

142:                                              ; preds = %129
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %132) #7
  br label %147

143:                                              ; preds = %137
  %144 = zext i1 %1 to i64
  %145 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZN5blink12_GLOBAL__N_123kApplicationXmlFeaturesE, i64 0, i64 %144
  %146 = load i32, i32* %145, align 4
  store i32 %146, i32* %3, align 4
  br label %240

147:                                              ; preds = %139, %142
  %148 = phi %"class.WTF::StringImpl"* [ %141, %139 ], [ null, %142 ]
  %149 = phi i64 [ %140, %139 ], [ %131, %142 ]
  %150 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %150) #7
  %151 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %149, i64* %151, align 8
  %152 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i64 0, i64 0), i8** %152, align 8
  %153 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 9, i32* %153, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %148, null
  br i1 %154, label %160, label %155

155:                                              ; preds = %147
  %156 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %148, %"class.WTF::StringView"* nonnull dereferenceable(24) %13) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %150) #7
  br i1 %156, label %161, label %157

157:                                              ; preds = %155
  %158 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  br label %165

160:                                              ; preds = %147
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %150) #7
  br label %165

161:                                              ; preds = %155
  %162 = zext i1 %1 to i64
  %163 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZN5blink12_GLOBAL__N_117kTextHtmlFeaturesE, i64 0, i64 %162
  %164 = load i32, i32* %163, align 4
  store i32 %164, i32* %3, align 4
  br label %240

165:                                              ; preds = %157, %160
  %166 = phi %"class.WTF::StringImpl"* [ %159, %157 ], [ null, %160 ]
  %167 = phi i64 [ %158, %157 ], [ %149, %160 ]
  %168 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %168) #7
  %169 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %167, i64* %169, align 8
  %170 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i8** %170, align 8
  %171 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 10, i32* %171, align 8
  %172 = icmp eq %"class.WTF::StringImpl"* %166, null
  br i1 %172, label %178, label %173

173:                                              ; preds = %165
  %174 = call zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %166, %"class.WTF::StringView"* nonnull dereferenceable(24) %14) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %168) #7
  br i1 %174, label %179, label %175

175:                                              ; preds = %173
  %176 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %177 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  br label %183

178:                                              ; preds = %165
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %168) #7
  br label %183

179:                                              ; preds = %173
  %180 = zext i1 %1 to i64
  %181 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZN5blink12_GLOBAL__N_118kTextPlainFeaturesE, i64 0, i64 %180
  %182 = load i32, i32* %181, align 4
  store i32 %182, i32* %3, align 4
  br label %240

183:                                              ; preds = %175, %178
  %184 = phi %"class.WTF::StringImpl"* [ %177, %175 ], [ null, %178 ]
  %185 = phi i64 [ %176, %175 ], [ %167, %178 ]
  %186 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %186) #7
  %187 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %185, i64* %187, align 8
  %188 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0), i8** %188, align 8
  %189 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 8, i32* %189, align 8
  %190 = icmp eq %"class.WTF::StringImpl"* %184, null
  br i1 %190, label %196, label %191

191:                                              ; preds = %183
  %192 = call zeroext i1 @_ZNK3WTF10StringImpl22StartsWithIgnoringCaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %184, %"class.WTF::StringView"* nonnull dereferenceable(24) %15) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %186) #7
  br i1 %192, label %197, label %193

193:                                              ; preds = %191
  %194 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %195 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  br label %201

196:                                              ; preds = %183
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %186) #7
  br label %201

197:                                              ; preds = %191
  %198 = zext i1 %1 to i64
  %199 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZN5blink12_GLOBAL__N_116kTextXmlFeaturesE, i64 0, i64 %198
  %200 = load i32, i32* %199, align 4
  store i32 %200, i32* %3, align 4
  br label %240

201:                                              ; preds = %193, %196
  %202 = phi %"class.WTF::StringImpl"* [ %195, %193 ], [ null, %196 ]
  %203 = phi i64 [ %194, %193 ], [ %185, %196 ]
  %204 = bitcast %"class.WTF::StringView"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %204) #7
  %205 = bitcast %"class.WTF::StringView"* %16 to i64*
  store i64 %203, i64* %205, align 8
  %206 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i64 0, i64 0), i8** %206, align 8
  %207 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 9, i32* %207, align 8
  %208 = icmp eq %"class.WTF::StringImpl"* %202, null
  br i1 %208, label %212, label %209

209:                                              ; preds = %201
  %210 = call zeroext i1 @_ZNK3WTF10StringImpl22StartsWithIgnoringCaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %202, %"class.WTF::StringView"* nonnull dereferenceable(24) %16) #7
  %211 = bitcast %"class.WTF::StringView"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %211) #7
  br i1 %210, label %227, label %217

212:                                              ; preds = %201
  %213 = bitcast %"class.WTF::StringView"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %213) #7
  %214 = bitcast %"class.WTF::StringView"* %17 to i64*
  store i64 %203, i64* %214, align 8
  %215 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0), i8** %215, align 8
  %216 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  store i32 16, i32* %216, align 8
  br label %229

217:                                              ; preds = %209
  %218 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %219 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %220 = bitcast %"class.WTF::StringView"* %17 to i64*
  store i64 %218, i64* %220, align 8
  %221 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0), i8** %221, align 8
  %222 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  store i32 16, i32* %222, align 8
  %223 = icmp eq %"class.WTF::StringImpl"* %219, null
  br i1 %223, label %229, label %224

224:                                              ; preds = %217
  %225 = call zeroext i1 @_ZNK3WTF10StringImpl22StartsWithIgnoringCaseERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %219, %"class.WTF::StringView"* nonnull dereferenceable(24) %17) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %211) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %204) #7
  %226 = zext i1 %1 to i64
  br i1 %225, label %232, label %236

227:                                              ; preds = %209
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %211) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %204) #7
  %228 = zext i1 %1 to i64
  br label %232

229:                                              ; preds = %212, %217
  %230 = phi i8* [ %213, %212 ], [ %211, %217 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %230) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %204) #7
  %231 = zext i1 %1 to i64
  br label %236

232:                                              ; preds = %224, %227
  %233 = phi i64 [ %228, %227 ], [ %226, %224 ]
  %234 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZN5blink12_GLOBAL__N_113kJsonFeaturesE, i64 0, i64 %233
  %235 = load i32, i32* %234, align 4
  store i32 %235, i32* %3, align 4
  br label %240

236:                                              ; preds = %229, %224
  %237 = phi i64 [ %226, %224 ], [ %231, %229 ]
  %238 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZN5blink12_GLOBAL__N_116kUnknownFeaturesE, i64 0, i64 %237
  %239 = load i32, i32* %238, align 4
  store i32 %239, i32* %3, align 4
  br label %240

240:                                              ; preds = %125, %161, %197, %236, %232, %179, %143, %110, %77, %4, %76, %64, %49, %34
  %241 = phi i1 [ false, %34 ], [ false, %49 ], [ false, %64 ], [ false, %76 ], [ true, %4 ], [ false, %77 ], [ true, %110 ], [ true, %143 ], [ true, %179 ], [ true, %232 ], [ true, %236 ], [ true, %197 ], [ true, %161 ], [ true, %125 ]
  ret i1 %241
}

declare zeroext i1 @_ZNK3WTF10StringImpl8EndsWithERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

declare zeroext i1 @_ZN5blink16MIMETypeRegistry35IsLegacySupportedJavaScriptLanguageERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK3WTF10StringImpl22StartsWithIgnoringCaseERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZNK3WTF10StringImpl27StartsWithIgnoringASCIICaseERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.50"*, %"class.WTF::StringAppend.51"* byval(%"class.WTF::StringAppend.51") align 8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.51"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.50"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.51", %"class.WTF::StringAppend.51"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.50", %"class.WTF::StringAppend.50"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #7
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %16
  tail call void @llvm.trap() #7
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %3, %11, %26
  %29 = getelementptr inbounds %"class.WTF::StringAppend.50", %"class.WTF::StringAppend.50"* %0, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.51", %"class.WTF::StringAppend.51"* %1, i64 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.50", %"class.WTF::StringAppend.50"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %65, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %53

43:                                               ; preds = %36
  %44 = zext i32 %42 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #7
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !3

50:                                               ; preds = %43
  tail call void @llvm.trap() #7
  unreachable

51:                                               ; preds = %43
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %41, align 4
  br label %53

53:                                               ; preds = %36, %51
  %54 = phi i32 [ %52, %51 ], [ %42, %36 ]
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %60 = add i32 %54, -1
  store i32 %60, i32* %59, align 4
  br label %61

61:                                               ; preds = %58, %53
  %62 = phi i32 [ %60, %58 ], [ %54, %53 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #7
  br label %65

65:                                               ; preds = %28, %61, %64
  br i1 %10, label %79, label %66

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #7
  br label %79

79:                                               ; preds = %65, %75, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend"*, %"class.WTF::StringAppend.50"* byval(%"class.WTF::StringAppend.50") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.50"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.50", %"class.WTF::StringAppend.50"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #7
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %16
  tail call void @llvm.trap() #7
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.50", %"class.WTF::StringAppend.50"* %1, i64 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.50", %"class.WTF::StringAppend.50"* %1, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %57

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #7
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !3

52:                                               ; preds = %43
  tail call void @llvm.trap() #7
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %57

55:                                               ; preds = %28
  %56 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  store i8* %2, i8** %56, align 8
  br label %70

57:                                               ; preds = %38, %53
  %58 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  store i8* %2, i8** %58, align 8
  %59 = load atomic i32, i32* %39 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #7
  br label %70

70:                                               ; preds = %55, %69, %66
  br i1 %10, label %84, label %71

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #7
  br label %84

84:                                               ; preds = %70, %80, %83
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.53", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.53"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #7
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.53", %"class.WTF::StringTypeAdapter.53"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.53"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.53"* nonnull %4, i8* %14) #7
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.50"* %9) #7
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #7
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.50"* %9) #7
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #7
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i64 0, i64 0), i8* %25, i8* %26) #7
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.21, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #7
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #7
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #7
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #7
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #7
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i8* %41, i8* %42) #7
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.21, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #7
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #7
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #7
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.55", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.53", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.53"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.53"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.53"* nonnull %4, i8* %9) #7
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.55"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #7
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.55", %"class.WTF::StringTypeAdapter.55"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.55", %"class.WTF::StringTypeAdapter.55"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #7
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.55"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.51"* %10, i8* %1) #7
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.55", %"class.WTF::StringTypeAdapter.55"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.51"* %10) #7
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.56"* nonnull %30, i8* %33) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #7
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.50"* %5) #7
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.53"* nonnull %4, i8* %36) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #7
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.55", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.53", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.53"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.53"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.53"* nonnull %4, i8* %9) #7
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.55"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #7
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.55", %"class.WTF::StringTypeAdapter.55"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.55", %"class.WTF::StringTypeAdapter.55"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #7
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.55"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.51"* %10, i16* %1) #7
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.55", %"class.WTF::StringTypeAdapter.55"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.51"* %10) #7
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i16, i16* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.56"* nonnull %30, i16* %33) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #7
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.50"* %5) #7
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.53"* nonnull %4, i16* %36) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #7
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.53"*, i8*) unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.50"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.50", %"class.WTF::StringAppend.50"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.50", %"class.WTF::StringAppend.50"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.51"* %8) #7
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #7
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.51"* %8) #7
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #7
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i64 0, i64 0), i8* %26, i8* %27) #7
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.21, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #7
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #7
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #7
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #7
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #7
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i8* %41, i8* %42) #7
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.21, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #7
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #7
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.51"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.53", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.51", %"class.WTF::StringAppend.51"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.53"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #7
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.53", %"class.WTF::StringTypeAdapter.53"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.51", %"class.WTF::StringAppend.51"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.53"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.53"* nonnull %4, i8* %14) #7
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.52"* %9) #7
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #7
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.52"* %9) #7
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #7
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i64 0, i64 0), i8* %25, i8* %26) #7
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.21, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #7
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #7
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #7
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #7
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #7
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i8* %41, i8* %42) #7
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.21, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #7
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #7
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #7
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.52"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.53", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.53"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #7
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.53", %"class.WTF::StringTypeAdapter.53"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.52", %"class.WTF::StringAppend.52"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.53"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.53"* nonnull %4, i8* %13) #7
  %14 = getelementptr inbounds %"class.WTF::StringAppend.52", %"class.WTF::StringAppend.52"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #7
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #7
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i64 0, i64 0), i8* %30, i8* %31) #7
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.21, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #7
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #7
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #7
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #7
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #7
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i8* %45, i8* %46) #7
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.21, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #7
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #7
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #7
  ret i32 %23
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.53"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.56"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.51"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.53", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.55", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.53", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.51", %"class.WTF::StringAppend.51"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.53"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #7
  %8 = getelementptr inbounds %"class.WTF::StringAppend.51", %"class.WTF::StringAppend.51"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.53"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.53"* nonnull %5, i8* %10) #7
  %11 = bitcast %"class.WTF::StringTypeAdapter.53"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #7
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.53", %"class.WTF::StringTypeAdapter.53"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.51", %"class.WTF::StringAppend.51"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #7
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.53"* nonnull %3, i8* %14) #7
  %15 = bitcast %"class.WTF::StringTypeAdapter.55"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #7
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.55", %"class.WTF::StringTypeAdapter.55"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.55", %"class.WTF::StringTypeAdapter.55"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.51", %"class.WTF::StringAppend.51"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #7
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.55"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.53"* nonnull %3, i8* %1) #7
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.55", %"class.WTF::StringTypeAdapter.55"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.56"* nonnull %34, i8* %37) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #7
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.52"* %6) #7
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.53"* nonnull %5, i8* %40) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #7
  ret void
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.53"*, i16*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.56"*, i16*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.51"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.53", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.55", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.53", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.51", %"class.WTF::StringAppend.51"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.53"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #7
  %8 = getelementptr inbounds %"class.WTF::StringAppend.51", %"class.WTF::StringAppend.51"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.53"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.53"* nonnull %5, i8* %10) #7
  %11 = bitcast %"class.WTF::StringTypeAdapter.53"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #7
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.53", %"class.WTF::StringTypeAdapter.53"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.51", %"class.WTF::StringAppend.51"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #7
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.53"* nonnull %3, i8* %14) #7
  %15 = bitcast %"class.WTF::StringTypeAdapter.55"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #7
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.55", %"class.WTF::StringTypeAdapter.55"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.55", %"class.WTF::StringTypeAdapter.55"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.51", %"class.WTF::StringAppend.51"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #7
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.55"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.53"* nonnull %3, i16* %1) #7
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.55", %"class.WTF::StringTypeAdapter.55"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.56"* nonnull %34, i16* %37) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #7
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.52"* %6) #7
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.53"* nonnull %5, i16* %40) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!6 = distinct !{!6, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!9 = distinct !{!9, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!12 = distinct !{!12, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!15 = distinct !{!15, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
