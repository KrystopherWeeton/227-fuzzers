; ModuleID = '../../extensions/common/permissions/usb_device_permission_data.cc'
source_filename = "../../extensions/common/permissions/usb_device_permission_data.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::UsbDevicePermissionData" = type { i32, i32, i32, i32 }
%"struct.extensions::APIPermission::CheckParam" = type { i8 }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.0", %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i64 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.13" }
%"union.absl::variant_internal::DestructibleUnionImpl.13" = type { %"union.absl::variant_internal::DestructibleUnionImpl.14" }
%"union.absl::variant_internal::DestructibleUnionImpl.14" = type { %"union.absl::variant_internal::DestructibleUnionImpl.15" }
%"union.absl::variant_internal::DestructibleUnionImpl.15" = type { %"union.absl::variant_internal::DestructibleUnionImpl.16" }
%"union.absl::variant_internal::DestructibleUnionImpl.16" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN10extensions12_GLOBAL__N_112kVendorIdKeyE = internal constant [9 x i8] c"vendorId\00", align 1
@_ZN10extensions12_GLOBAL__N_113kProductIdKeyE = internal constant [10 x i8] c"productId\00", align 1
@_ZN10extensions12_GLOBAL__N_115kInterfaceIdKeyE = internal constant [12 x i8] c"interfaceId\00", align 1
@_ZN10extensions12_GLOBAL__N_118kInterfaceClassKeyE = internal constant [15 x i8] c"interfaceClass\00", align 1

@_ZN10extensions23UsbDevicePermissionDataC1Ev = hidden unnamed_addr alias void (%"class.extensions::UsbDevicePermissionData"*), void (%"class.extensions::UsbDevicePermissionData"*)* @_ZN10extensions23UsbDevicePermissionDataC2Ev
@_ZN10extensions23UsbDevicePermissionDataC1Eiiii = hidden unnamed_addr alias void (%"class.extensions::UsbDevicePermissionData"*, i32, i32, i32, i32), void (%"class.extensions::UsbDevicePermissionData"*, i32, i32, i32, i32)* @_ZN10extensions23UsbDevicePermissionDataC2Eiiii

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10extensions23UsbDevicePermissionDataC2Ev(%"class.extensions::UsbDevicePermissionData"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.extensions::UsbDevicePermissionData"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 -1, i64 16, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10extensions23UsbDevicePermissionDataC2Eiiii(%"class.extensions::UsbDevicePermissionData"* nocapture, i32, i32, i32, i32) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.extensions::UsbDevicePermissionData", %"class.extensions::UsbDevicePermissionData"* %0, i64 0, i32 0
  store i32 %1, i32* %6, align 4
  %7 = getelementptr inbounds %"class.extensions::UsbDevicePermissionData", %"class.extensions::UsbDevicePermissionData"* %0, i64 0, i32 1
  store i32 %2, i32* %7, align 4
  %8 = getelementptr inbounds %"class.extensions::UsbDevicePermissionData", %"class.extensions::UsbDevicePermissionData"* %0, i64 0, i32 2
  store i32 %3, i32* %8, align 4
  %9 = getelementptr inbounds %"class.extensions::UsbDevicePermissionData", %"class.extensions::UsbDevicePermissionData"* %0, i64 0, i32 3
  store i32 %4, i32* %9, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10extensions23UsbDevicePermissionData5CheckEPKNS_13APIPermission10CheckParamE(%"class.extensions::UsbDevicePermissionData"* nocapture readonly, %"struct.extensions::APIPermission::CheckParam"* readonly) local_unnamed_addr #1 align 2 {
  %3 = icmp eq %"struct.extensions::APIPermission::CheckParam"* %1, null
  br i1 %3, label %70, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.extensions::APIPermission::CheckParam", %"struct.extensions::APIPermission::CheckParam"* %1, i64 20, i32 0
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.extensions::UsbDevicePermissionData", %"class.extensions::UsbDevicePermissionData"* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %12, label %70

12:                                               ; preds = %8, %4
  %13 = getelementptr inbounds %"class.extensions::UsbDevicePermissionData", %"class.extensions::UsbDevicePermissionData"* %0, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, -1
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.extensions::APIPermission::CheckParam"* %1 to i16*
  %18 = load i16, i16* %17, align 8
  %19 = zext i16 %18 to i32
  %20 = icmp eq i32 %14, %19
  br i1 %20, label %21, label %70

21:                                               ; preds = %16, %12
  %22 = getelementptr inbounds %"class.extensions::UsbDevicePermissionData", %"class.extensions::UsbDevicePermissionData"* %0, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, -1
  br i1 %24, label %31, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"struct.extensions::APIPermission::CheckParam", %"struct.extensions::APIPermission::CheckParam"* %1, i64 2
  %27 = bitcast %"struct.extensions::APIPermission::CheckParam"* %26 to i16*
  %28 = load i16, i16* %27, align 2
  %29 = zext i16 %28 to i32
  %30 = icmp eq i32 %23, %29
  br i1 %30, label %31, label %70

31:                                               ; preds = %25, %21
  %32 = getelementptr inbounds %"struct.extensions::APIPermission::CheckParam", %"struct.extensions::APIPermission::CheckParam"* %1, i64 16
  %33 = bitcast %"struct.extensions::APIPermission::CheckParam"* %32 to i32*
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, -2
  br i1 %35, label %40, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.extensions::UsbDevicePermissionData", %"class.extensions::UsbDevicePermissionData"* %0, i64 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, %34
  br i1 %39, label %40, label %70

40:                                               ; preds = %36, %31
  %41 = getelementptr inbounds %"struct.extensions::APIPermission::CheckParam", %"struct.extensions::APIPermission::CheckParam"* %1, i64 8
  %42 = bitcast %"struct.extensions::APIPermission::CheckParam"* %41 to %"class.std::__1::set"**
  %43 = load %"class.std::__1::set"*, %"class.std::__1::set"** %42, align 8
  %44 = icmp eq %"class.std::__1::set"* %43, null
  br i1 %44, label %70, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.extensions::UsbDevicePermissionData", %"class.extensions::UsbDevicePermissionData"* %0, i64 0, i32 3
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, -1
  br i1 %48, label %70, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %43, i64 0, i32 0, i32 1, i32 0, i32 0
  %51 = bitcast %"class.std::__1::__tree_end_node"* %50 to %"class.std::__1::__tree_node"**
  %52 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %51, align 8
  %53 = icmp eq %"class.std::__1::__tree_node"* %52, null
  br i1 %53, label %70, label %54

54:                                               ; preds = %49, %66
  %55 = phi %"class.std::__1::__tree_node"* [ %68, %66 ], [ %52, %49 ]
  %56 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %55, i64 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = icmp slt i32 %47, %57
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  %60 = bitcast %"class.std::__1::__tree_node"* %55 to %"class.std::__1::__tree_node"**
  br label %66

61:                                               ; preds = %54
  %62 = icmp slt i32 %57, %47
  br i1 %62, label %63, label %70

63:                                               ; preds = %61
  %64 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %55, i64 0, i32 0, i32 1
  %65 = bitcast %"class.std::__1::__tree_node_base"** %64 to %"class.std::__1::__tree_node"**
  br label %66

66:                                               ; preds = %63, %59
  %67 = phi %"class.std::__1::__tree_node"** [ %60, %59 ], [ %65, %63 ]
  %68 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %67, align 8
  %69 = icmp eq %"class.std::__1::__tree_node"* %68, null
  br i1 %69, label %70, label %54

70:                                               ; preds = %66, %61, %49, %40, %8, %45, %36, %25, %16, %2
  %71 = phi i1 [ false, %2 ], [ false, %8 ], [ false, %36 ], [ false, %25 ], [ false, %16 ], [ true, %45 ], [ true, %40 ], [ false, %49 ], [ false, %66 ], [ true, %61 ]
  ret i1 %71
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::Value"* @_ZNK10extensions23UsbDevicePermissionData7ToValueEv(%"class.extensions::UsbDevicePermissionData"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #8
  %3 = bitcast i8* %2 to %"class.base::DictionaryValue"*
  tail call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %3) #9
  %4 = getelementptr inbounds %"class.extensions::UsbDevicePermissionData", %"class.extensions::UsbDevicePermissionData"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue10SetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::DictionaryValue"* nonnull %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZN10extensions12_GLOBAL__N_112kVendorIdKeyE, i64 0, i64 0), i64 8, i32 %5) #9
  %7 = getelementptr inbounds %"class.extensions::UsbDevicePermissionData", %"class.extensions::UsbDevicePermissionData"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue10SetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::DictionaryValue"* nonnull %3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZN10extensions12_GLOBAL__N_113kProductIdKeyE, i64 0, i64 0), i64 9, i32 %8) #9
  %10 = getelementptr inbounds %"class.extensions::UsbDevicePermissionData", %"class.extensions::UsbDevicePermissionData"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue10SetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::DictionaryValue"* nonnull %3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_ZN10extensions12_GLOBAL__N_115kInterfaceIdKeyE, i64 0, i64 0), i64 11, i32 %11) #9
  %13 = getelementptr inbounds %"class.extensions::UsbDevicePermissionData", %"class.extensions::UsbDevicePermissionData"* %0, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue10SetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::DictionaryValue"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @_ZN10extensions12_GLOBAL__N_118kInterfaceClassKeyE, i64 0, i64 0), i64 14, i32 %14) #9
  %16 = bitcast i8* %2 to %"class.base::Value"*
  ret %"class.base::Value"* %16
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"*) unnamed_addr #5

declare %"class.base::Value"* @_ZN4base15DictionaryValue10SetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::DictionaryValue"*, i8*, i64, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions23UsbDevicePermissionData9FromValueEPKN4base5ValueE(%"class.extensions::UsbDevicePermissionData"* nocapture, %"class.base::Value"*) local_unnamed_addr #3 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"class.base::DictionaryValue"*, align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = icmp eq %"class.base::Value"* %1, null
  br i1 %12, label %134, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.base::DictionaryValue"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  store %"class.base::DictionaryValue"* inttoptr (i64 -6148914691236517206 to %"class.base::DictionaryValue"*), %"class.base::DictionaryValue"** %7, align 8
  %15 = call zeroext i1 @_ZNK4base5Value15GetAsDictionaryEPPKNS_15DictionaryValueE(%"class.base::Value"* nonnull %1, %"class.base::DictionaryValue"** nonnull %7) #9
  br i1 %15, label %16, label %132

16:                                               ; preds = %13
  %17 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #9
  %18 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  store i8 8, i8* %19, align 1
  %20 = bitcast %"class.std::__1::basic_string"* %8 to i64*
  store i64 7226432899844564342, i64* %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = bitcast i64* %21 to i8*
  store i8 0, i8* %22, align 8
  %23 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %7, align 8
  %24 = getelementptr inbounds %"class.extensions::UsbDevicePermissionData", %"class.extensions::UsbDevicePermissionData"* %0, i64 0, i32 0
  %25 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #9
  store i32 -1431655766, i32* %6, align 4
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = call zeroext i1 @_ZNK4base15DictionaryValue10GetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(%"class.base::DictionaryValue"* %23, i8* nonnull %17, i64 8, i32* nonnull %6) #9
  br i1 %27, label %28, label %32

28:                                               ; preds = %16
  %29 = load i32, i32* %6, align 4
  %30 = add i32 %29, 1
  %31 = icmp ugt i32 %30, 65536
  br i1 %31, label %34, label %32

32:                                               ; preds = %28, %16
  %33 = phi i32 [ -1, %16 ], [ %29, %28 ]
  store i32 %33, i32* %24, align 4
  br label %34

34:                                               ; preds = %32, %28
  %35 = phi i1 [ false, %28 ], [ true, %32 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #9
  %36 = load i8, i8* %19, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %34
  %39 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %39) #8
  br label %40

40:                                               ; preds = %34, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #9
  br i1 %35, label %41, label %132

41:                                               ; preds = %40
  %42 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #9
  %43 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  store i8 9, i8* %44, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %42, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @_ZN10extensions12_GLOBAL__N_113kProductIdKeyE, i64 0, i64 0), i64 9, i1 false) #9
  %45 = getelementptr inbounds i8, i8* %42, i64 9
  store i8 0, i8* %45, align 1
  %46 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %7, align 8
  %47 = getelementptr inbounds %"class.extensions::UsbDevicePermissionData", %"class.extensions::UsbDevicePermissionData"* %0, i64 0, i32 1
  %48 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #9
  store i32 -1431655766, i32* %5, align 4
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = call zeroext i1 @_ZNK4base15DictionaryValue10GetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(%"class.base::DictionaryValue"* %46, i8* nonnull %42, i64 9, i32* nonnull %5) #9
  br i1 %50, label %51, label %55

51:                                               ; preds = %41
  %52 = load i32, i32* %5, align 4
  %53 = add i32 %52, 1
  %54 = icmp ugt i32 %53, 65536
  br i1 %54, label %57, label %55

55:                                               ; preds = %51, %41
  %56 = phi i32 [ -1, %41 ], [ %52, %51 ]
  store i32 %56, i32* %47, align 4
  br label %57

57:                                               ; preds = %55, %51
  %58 = phi i1 [ false, %51 ], [ true, %55 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #9
  %59 = load i8, i8* %44, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %57
  %62 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %62) #8
  br label %63

63:                                               ; preds = %57, %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #9
  br i1 %58, label %64, label %132

64:                                               ; preds = %63
  %65 = load i32, i32* %47, align 4
  %66 = icmp eq i32 %65, -1
  br i1 %66, label %70, label %67

67:                                               ; preds = %64
  %68 = load i32, i32* %24, align 4
  %69 = icmp eq i32 %68, -1
  br i1 %69, label %132, label %70

70:                                               ; preds = %64, %67
  %71 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #9
  %72 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  store i8 11, i8* %73, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @_ZN10extensions12_GLOBAL__N_115kInterfaceIdKeyE, i64 0, i64 0), i64 11, i1 false) #9
  %74 = getelementptr inbounds i8, i8* %71, i64 11
  store i8 0, i8* %74, align 1
  %75 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %7, align 8
  %76 = getelementptr inbounds %"class.extensions::UsbDevicePermissionData", %"class.extensions::UsbDevicePermissionData"* %0, i64 0, i32 2
  %77 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %77) #9
  store i32 -1431655766, i32* %4, align 4
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = call zeroext i1 @_ZNK4base15DictionaryValue10GetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(%"class.base::DictionaryValue"* %75, i8* nonnull %71, i64 11, i32* nonnull %4) #9
  br i1 %79, label %80, label %84

80:                                               ; preds = %70
  %81 = load i32, i32* %4, align 4
  %82 = add i32 %81, 1
  %83 = icmp ugt i32 %82, 256
  br i1 %83, label %86, label %84

84:                                               ; preds = %80, %70
  %85 = phi i32 [ -1, %70 ], [ %81, %80 ]
  store i32 %85, i32* %76, align 4
  br label %86

86:                                               ; preds = %84, %80
  %87 = phi i1 [ false, %80 ], [ true, %84 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %77) #9
  %88 = load i8, i8* %73, align 1
  %89 = icmp slt i8 %88, 0
  br i1 %89, label %90, label %92

90:                                               ; preds = %86
  %91 = load i8*, i8** %78, align 8
  call void @_ZdlPv(i8* %91) #8
  br label %92

92:                                               ; preds = %86, %90
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #9
  br i1 %87, label %93, label %132

93:                                               ; preds = %92
  %94 = load i32, i32* %76, align 4
  %95 = icmp eq i32 %94, -1
  br i1 %95, label %99, label %96

96:                                               ; preds = %93
  %97 = load i32, i32* %47, align 4
  %98 = icmp eq i32 %97, -1
  br i1 %98, label %132, label %99

99:                                               ; preds = %93, %96
  %100 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %100) #9
  %101 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  store i8 14, i8* %102, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %100, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @_ZN10extensions12_GLOBAL__N_118kInterfaceClassKeyE, i64 0, i64 0), i64 14, i1 false) #9
  %103 = getelementptr inbounds i8, i8* %100, i64 14
  store i8 0, i8* %103, align 2
  %104 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %7, align 8
  %105 = getelementptr inbounds %"class.extensions::UsbDevicePermissionData", %"class.extensions::UsbDevicePermissionData"* %0, i64 0, i32 3
  %106 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %106) #9
  store i32 -1431655766, i32* %3, align 4
  %107 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = call zeroext i1 @_ZNK4base15DictionaryValue10GetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(%"class.base::DictionaryValue"* %104, i8* nonnull %100, i64 14, i32* nonnull %3) #9
  br i1 %108, label %109, label %113

109:                                              ; preds = %99
  %110 = load i32, i32* %3, align 4
  %111 = add i32 %110, 1
  %112 = icmp ugt i32 %111, 256
  br i1 %112, label %115, label %113

113:                                              ; preds = %109, %99
  %114 = phi i32 [ -1, %99 ], [ %110, %109 ]
  store i32 %114, i32* %105, align 4
  br label %115

115:                                              ; preds = %113, %109
  %116 = phi i1 [ false, %109 ], [ true, %113 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %106) #9
  %117 = load i8, i8* %102, align 1
  %118 = icmp slt i8 %117, 0
  br i1 %118, label %119, label %121

119:                                              ; preds = %115
  %120 = load i8*, i8** %107, align 8
  call void @_ZdlPv(i8* %120) #8
  br label %121

121:                                              ; preds = %115, %119
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %100) #9
  br i1 %116, label %122, label %132

122:                                              ; preds = %121
  %123 = load i32, i32* %105, align 4
  %124 = icmp eq i32 %123, -1
  br i1 %124, label %125, label %128

125:                                              ; preds = %122
  %126 = load i32, i32* %47, align 4
  %127 = icmp eq i32 %126, -1
  br i1 %127, label %132, label %131

128:                                              ; preds = %122
  %129 = load i32, i32* %76, align 4
  %130 = icmp eq i32 %129, -1
  br i1 %130, label %131, label %132

131:                                              ; preds = %125, %128
  br label %132

132:                                              ; preds = %40, %63, %67, %128, %125, %121, %96, %92, %131, %13
  %133 = phi i1 [ false, %13 ], [ false, %40 ], [ false, %63 ], [ false, %67 ], [ true, %131 ], [ false, %92 ], [ false, %96 ], [ false, %121 ], [ false, %125 ], [ false, %128 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  br label %134

134:                                              ; preds = %2, %132
  %135 = phi i1 [ %133, %132 ], [ false, %2 ]
  ret i1 %135
}

declare zeroext i1 @_ZNK4base5Value15GetAsDictionaryEPPKNS_15DictionaryValueE(%"class.base::Value"*, %"class.base::DictionaryValue"**) local_unnamed_addr #5

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10extensions23UsbDevicePermissionDataltERKS0_(%"class.extensions::UsbDevicePermissionData"*, %"class.extensions::UsbDevicePermissionData"* dereferenceable(16)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.extensions::UsbDevicePermissionData", %"class.extensions::UsbDevicePermissionData"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.extensions::UsbDevicePermissionData", %"class.extensions::UsbDevicePermissionData"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.extensions::UsbDevicePermissionData", %"class.extensions::UsbDevicePermissionData"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.extensions::UsbDevicePermissionData", %"class.extensions::UsbDevicePermissionData"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.extensions::UsbDevicePermissionData", %"class.extensions::UsbDevicePermissionData"* %1, i64 0, i32 0
  %8 = getelementptr inbounds %"class.extensions::UsbDevicePermissionData", %"class.extensions::UsbDevicePermissionData"* %1, i64 0, i32 1
  %9 = getelementptr inbounds %"class.extensions::UsbDevicePermissionData", %"class.extensions::UsbDevicePermissionData"* %1, i64 0, i32 2
  %10 = getelementptr inbounds %"class.extensions::UsbDevicePermissionData", %"class.extensions::UsbDevicePermissionData"* %1, i64 0, i32 3
  %11 = load i32, i32* %3, align 4
  %12 = load i32, i32* %7, align 4
  %13 = icmp slt i32 %11, %12
  br i1 %13, label %32, label %14

14:                                               ; preds = %2
  %15 = icmp slt i32 %12, %11
  br i1 %15, label %32, label %16

16:                                               ; preds = %14
  %17 = load i32, i32* %4, align 4
  %18 = load i32, i32* %8, align 4
  %19 = icmp slt i32 %17, %18
  br i1 %19, label %32, label %20

20:                                               ; preds = %16
  %21 = icmp slt i32 %18, %17
  br i1 %21, label %32, label %22

22:                                               ; preds = %20
  %23 = load i32, i32* %5, align 4
  %24 = load i32, i32* %9, align 4
  %25 = icmp slt i32 %23, %24
  br i1 %25, label %32, label %26

26:                                               ; preds = %22
  %27 = icmp slt i32 %24, %23
  br i1 %27, label %32, label %28

28:                                               ; preds = %26
  %29 = load i32, i32* %6, align 4
  %30 = load i32, i32* %10, align 4
  %31 = icmp slt i32 %29, %30
  br label %32

32:                                               ; preds = %2, %14, %16, %20, %22, %26, %28
  %33 = phi i1 [ true, %2 ], [ false, %14 ], [ true, %16 ], [ false, %20 ], [ %31, %28 ], [ true, %22 ], [ false, %26 ]
  ret i1 %33
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK10extensions23UsbDevicePermissionDataeqERKS0_(%"class.extensions::UsbDevicePermissionData"* nocapture readonly, %"class.extensions::UsbDevicePermissionData"* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.extensions::UsbDevicePermissionData", %"class.extensions::UsbDevicePermissionData"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.extensions::UsbDevicePermissionData", %"class.extensions::UsbDevicePermissionData"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.extensions::UsbDevicePermissionData", %"class.extensions::UsbDevicePermissionData"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.extensions::UsbDevicePermissionData", %"class.extensions::UsbDevicePermissionData"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %26

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.extensions::UsbDevicePermissionData", %"class.extensions::UsbDevicePermissionData"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.extensions::UsbDevicePermissionData", %"class.extensions::UsbDevicePermissionData"* %1, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %26

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.extensions::UsbDevicePermissionData", %"class.extensions::UsbDevicePermissionData"* %0, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.extensions::UsbDevicePermissionData", %"class.extensions::UsbDevicePermissionData"* %1, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %22, %24
  br label %26

26:                                               ; preds = %20, %14, %8, %2
  %27 = phi i1 [ false, %14 ], [ false, %8 ], [ false, %2 ], [ %25, %20 ]
  ret i1 %27
}

declare zeroext i1 @_ZNK4base15DictionaryValue10GetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(%"class.base::DictionaryValue"*, i8*, i64, i32*) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
