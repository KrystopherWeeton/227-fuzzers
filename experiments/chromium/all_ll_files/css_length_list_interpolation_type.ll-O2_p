; ModuleID = '../../third_party/blink/renderer/core/animation/css_length_list_interpolation_type.cc'
source_filename = "../../third_party/blink/renderer/core/animation/css_length_list_interpolation_type.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.23", i32, [4 x i8], %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.155", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.171", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.189", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.196", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.77", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.112", %"class.std::__1::unique_ptr.135", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.55" = type { %"struct.std::__1::__atomic_base.56" }
%"struct.std::__1::__atomic_base.56" = type { %"struct.std::__1::__atomic_base.57" }
%"struct.std::__1::__atomic_base.57" = type { %"struct.std::__1::__cxx_atomic_impl.58" }
%"struct.std::__1::__cxx_atomic_impl.58" = type { %"struct.std::__1::__cxx_atomic_base_impl.59" }
%"struct.std::__1::__cxx_atomic_base_impl.59" = type { i64 }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.blink::Worklist.66"* }
%"class.blink::Worklist.66" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.blink::Worklist.73"* }
%"class.blink::Worklist.73" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.blink::Worklist.80"* }
%"class.blink::Worklist.80" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::Worklist.87"* }
%"class.blink::Worklist.87" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.blink::Worklist.94"* }
%"class.blink::Worklist.94" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.blink::Worklist.101"* }
%"class.blink::Worklist.101" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.blink::Worklist.108"* }
%"class.blink::Worklist.108" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.55" }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.115", %"class.std::__1::__compressed_pair.122", %"class.std::__1::__compressed_pair.127", %"class.std::__1::__compressed_pair.129", [4 x i8] }>
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117", %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { i64 }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { float }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.138", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.147" }
%"class.WTF::Vector.147" = type { %"class.WTF::VectorBuffer.148" }
%"class.WTF::VectorBuffer.148" = type { %"class.WTF::VectorBufferBase.149" }
%"class.WTF::VectorBufferBase.149" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.163" }
%"class.WTF::VectorBuffer.163" = type { %"class.WTF::VectorBufferBase.164" }
%"class.WTF::VectorBufferBase.164" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.177" }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.66"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.73"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.80"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.87"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.94"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.200" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.195 }
%class.scoped_refptr.195 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.196" = type { %"struct.std::__1::__atomic_base.197" }
%"struct.std::__1::__atomic_base.197" = type { %"struct.std::__1::__cxx_atomic_impl.198" }
%"struct.std::__1::__cxx_atomic_impl.198" = type { %"struct.std::__1::__cxx_atomic_base_impl.199" }
%"struct.std::__1::__cxx_atomic_base_impl.199" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::CSSLengthListInterpolationType" = type <{ %"class.blink::CSSInterpolationType", i32, [4 x i8] }>
%"class.blink::CSSInterpolationType" = type { %"class.blink::InterpolationType", %"class.blink::WeakPersistent" }
%"class.blink::InterpolationType" = type { i32 (...)**, %"class.blink::PropertyHandle" }
%"class.blink::PropertyHandle" = type { i32, %union.anon, %"class.WTF::AtomicString" }
%union.anon = type { %"class.blink::CSSProperty"* }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::PropertyRegistration"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PropertyRegistration" = type <{ %"class.blink::CSSSyntaxDefinition", i8, [7 x i8], %"class.blink::Member", %class.scoped_refptr.4, %"class.WTF::Vector.18", i8, [7 x i8] }>
%"class.blink::CSSSyntaxDefinition" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::CSSSyntaxComponent"*, i32, i32 }
%"class.blink::CSSSyntaxComponent" = type <{ i32, [4 x i8], %"class.WTF::String", i32, [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%class.scoped_refptr.4 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.5", %"class.WTF::Vector.7", %"class.WTF::Vector.12", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.5" = type { %"class.base::RefCounted.6" }
%"class.base::RefCounted.6" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector.7" = type { %"class.WTF::VectorBuffer.8" }
%"class.WTF::VectorBuffer.8" = type { %"class.WTF::VectorBufferBase.9" }
%"class.WTF::VectorBufferBase.9" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.12" = type { %"class.WTF::VectorBuffer.13" }
%"class.WTF::VectorBuffer.13" = type { %"class.WTF::VectorBufferBase.14" }
%"class.WTF::VectorBufferBase.14" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.15 }
%union.anon.15 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.WTF::Vector.18" = type { %"class.WTF::VectorBuffer.19" }
%"class.WTF::VectorBuffer.19" = type { %"class.WTF::VectorBufferBase.20" }
%"class.WTF::VectorBufferBase.20" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"struct.blink::InterpolationValue" = type { %"class.std::__1::unique_ptr.205", %class.scoped_refptr.211 }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.blink::InterpolableValue"* }
%"class.blink::InterpolableValue" = type { i32 (...)** }
%class.scoped_refptr.211 = type { %"class.blink::NonInterpolableValue"* }
%"class.blink::NonInterpolableValue" = type <{ i32 (...)**, %"class.WTF::RefCounted.212", [4 x i8] }>
%"class.WTF::RefCounted.212" = type { %"class.base::RefCounted.213" }
%"class.base::RefCounted.213" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.214" = type { %"class.WTF::VectorBuffer.215" }
%"class.WTF::VectorBuffer.215" = type { %"class.WTF::VectorBufferBase.216" }
%"class.WTF::VectorBufferBase.216" = type { %"class.std::__1::unique_ptr.217"*, i32, i32 }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.1524" }
%"class.std::__1::__compressed_pair.1524" = type { %"struct.std::__1::__compressed_pair_elem.1525" }
%"struct.std::__1::__compressed_pair_elem.1525" = type { %"class.blink::InterpolationType::ConversionChecker"* }
%"class.blink::InterpolationType::ConversionChecker" = type { i32 (...)**, %"class.blink::InterpolationType"* }
%"class.WTF::Vector.1469" = type { %"class.WTF::VectorBuffer.1470" }
%"class.WTF::VectorBuffer.1470" = type { %"class.WTF::VectorBufferBase.1471" }
%"class.WTF::VectorBufferBase.1471" = type { %class.scoped_refptr.211*, i32, i32 }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.blink::UnderlyingLengthChecker"* }
%"class.blink::UnderlyingLengthChecker" = type <{ %"class.blink::InterpolationType::ConversionChecker", i32, [4 x i8] }>
%"class.blink::InterpolableList" = type { %"class.blink::InterpolableValue", %"class.WTF::Vector.1464" }
%"class.WTF::Vector.1464" = type { %"class.WTF::VectorBuffer.1465" }
%"class.WTF::VectorBuffer.1465" = type { %"class.WTF::VectorBufferBase.1466" }
%"class.WTF::VectorBufferBase.1466" = type { %"class.std::__1::unique_ptr.205"*, i32, i32 }
%"class.blink::InterpolableLength" = type { %"class.blink::InterpolableValue", i32, %"struct.blink::CSSPrimitiveValue::CSSLengthArray", %"class.blink::Persistent.1478" }
%"struct.blink::CSSPrimitiveValue::CSSLengthArray" = type { %"class.WTF::Vector.1474", %"class.std::__1::bitset" }
%"class.WTF::Vector.1474" = type { %"class.WTF::VectorBuffer.1475" }
%"class.WTF::VectorBuffer.1475" = type { %"class.WTF::VectorBufferBase.630", [80 x i8] }
%"class.WTF::VectorBufferBase.630" = type { double*, i32, i32 }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.blink::Persistent.1478" = type { %"class.blink::PersistentBase.1479" }
%"class.blink::PersistentBase.1479" = type { %"class.blink::CSSMathExpressionNode"*, %"class.blink::PersistentNodePtr.359" }
%"class.blink::CSSMathExpressionNode" = type opaque
%"class.blink::PersistentNodePtr.359" = type { %"class.blink::PersistentNode"* }
%"class.blink::StyleResolverState" = type <{ %"class.blink::ElementResolveContext", %"class.blink::Document"*, %class.scoped_refptr.798, %"class.blink::CSSToLengthConversionData", %class.scoped_refptr.254, %class.scoped_refptr.254, %"class.blink::CSSAnimationUpdate", i32, [4 x i8], %"class.blink::FontBuilder", %"class.blink::PseudoElement"*, %"class.blink::ElementStyleResources", i32, i8, i8, [2 x i8] }>
%"class.blink::ElementResolveContext" = type <{ %"class.blink::Element"*, %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"*, %class.scoped_refptr.254, i32, [4 x i8] }>
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.236" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.228", %"class.blink::Member.228" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.228", %"class.blink::Member.230", %"class.blink::Member.228", %"class.blink::Member.228", %"class.blink::Member.232" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.230" = type { %"class.blink::MemberBase.231" }
%"class.blink::MemberBase.231" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.405", %"class.blink::Member.407", %"class.blink::Member.230", %"class.blink::Member.409", %"class.blink::Member.409", %"class.blink::Member.433", %"class.blink::Member.435", %"class.blink::Member.437", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.442", %"class.blink::HeapVector.444" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.405" = type { %"class.blink::MemberBase.406" }
%"class.blink::MemberBase.406" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.407" = type { %"class.blink::MemberBase.408" }
%"class.blink::MemberBase.408" = type { %"class.blink::Document"* }
%"class.blink::Member.409" = type { %"class.blink::MemberBase.410" }
%"class.blink::MemberBase.410" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.413" }
%"class.blink::HeapHashMap.413" = type { %"class.WTF::HashMap.416" }
%"class.WTF::HashMap.416" = type { %"class.WTF::HashTable.417" }
%"class.WTF::HashTable.417" = type <{ %"struct.WTF::KeyValuePair.419"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.419" = type { %"class.WTF::AtomicString", %"class.blink::Member.420" }
%"class.blink::Member.420" = type { %"class.blink::MemberBase.421" }
%"class.blink::MemberBase.421" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.424", i32, %"class.blink::HeapVector.426" }
%"class.blink::Member.424" = type { %"class.blink::MemberBase.425" }
%"class.blink::MemberBase.425" = type { %"class.blink::Element"* }
%"class.blink::HeapVector.426" = type { %"class.WTF::Vector.429" }
%"class.WTF::Vector.429" = type { %"class.WTF::VectorBuffer.430" }
%"class.WTF::VectorBuffer.430" = type { %"class.WTF::VectorBufferBase.431" }
%"class.WTF::VectorBufferBase.431" = type { %"class.blink::Member.424"*, i32, i32 }
%"class.blink::Member.433" = type { %"class.blink::MemberBase.434" }
%"class.blink::MemberBase.434" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.435" = type { %"class.blink::MemberBase.436" }
%"class.blink::MemberBase.436" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.437" = type { %"class.blink::MemberBase.438" }
%"class.blink::MemberBase.438" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.439" }
%"class.blink::Member.439" = type { %"class.blink::MemberBase.440" }
%"class.blink::MemberBase.440" = type { %"class.blink::HeapHashMap.441"* }
%"class.blink::HeapHashMap.441" = type opaque
%"class.blink::Member.442" = type { %"class.blink::MemberBase.443" }
%"class.blink::MemberBase.443" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.444" = type { %"class.WTF::Vector.447" }
%"class.WTF::Vector.447" = type { %"class.WTF::VectorBuffer.448" }
%"class.WTF::VectorBuffer.448" = type { %"class.WTF::VectorBufferBase.449" }
%"class.WTF::VectorBufferBase.449" = type { %"class.blink::Member.450"*, i32, i32 }
%"class.blink::Member.450" = type { %"class.blink::MemberBase.451" }
%"class.blink::MemberBase.451" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.452", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.454, %"class.WTF::Vector.473", %"class.WTF::Vector.473", %"class.blink::Member.228", %"class.blink::Member.478", %"class.blink::HeapHashSet", %"class.blink::Member.407", %"class.WTF::HashSet.486", %"class.WTF::TextPosition", %"class.blink::Member.490", %"class.blink::HeapVector.492", %"class.blink::Member.499" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.452" = type { %"class.blink::MemberBase.453" }
%"class.blink::MemberBase.453" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.454 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.455", %"class.WTF::Vector.457" }
%"class.WTF::RefCounted.455" = type { %"class.base::RefCounted.456" }
%"class.base::RefCounted.456" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.457" = type { %"class.WTF::VectorBuffer.458" }
%"class.WTF::VectorBuffer.458" = type { %"class.WTF::VectorBufferBase.459" }
%"class.WTF::VectorBufferBase.459" = type { %"class.std::__1::unique_ptr.460"*, i32, i32 }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.463", %"class.WTF::String" }
%"class.WTF::Vector.463" = type { %"class.WTF::VectorBuffer.464" }
%"class.WTF::VectorBuffer.464" = type { %"class.WTF::VectorBufferBase.465" }
%"class.WTF::VectorBufferBase.465" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.473" = type { %"class.WTF::VectorBuffer.474" }
%"class.WTF::VectorBuffer.474" = type { %"class.WTF::VectorBufferBase.475" }
%"class.WTF::VectorBufferBase.475" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.478" = type { %"class.blink::MemberBase.479" }
%"class.blink::MemberBase.479" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.480" }
%"class.blink::Member.480" = type { %"class.blink::MemberBase.481" }
%"class.blink::MemberBase.481" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.484" }
%"class.WTF::HashTable.484" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.231" }
%"class.WTF::HashSet.486" = type { %"class.WTF::HashTable.487" }
%"class.WTF::HashTable.487" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.490" = type { %"class.blink::MemberBase.491" }
%"class.blink::MemberBase.491" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.454, %"class.blink::Member.450", %"class.blink::Member.478" }
%"class.blink::HeapVector.492" = type { %"class.WTF::Vector.495" }
%"class.WTF::Vector.495" = type { %"class.WTF::VectorBuffer.496" }
%"class.WTF::VectorBuffer.496" = type { %"class.WTF::VectorBufferBase.497" }
%"class.WTF::VectorBufferBase.497" = type { %"class.blink::Member.478"*, i32, i32 }
%"class.blink::Member.499" = type { %"class.blink::MemberBase.500" }
%"class.blink::MemberBase.500" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.232" = type { %"class.blink::MemberBase.233" }
%"class.blink::MemberBase.233" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.228" = type { %"class.blink::MemberBase.229" }
%"class.blink::MemberBase.229" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.236" = type { %"class.blink::MemberBase.237" }
%"class.blink::MemberBase.237" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.240", %"class.blink::Member.242", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.240" = type { %"class.WTF::SingleThreadedBitField.241" }
%"class.WTF::SingleThreadedBitField.241" = type { i32 }
%"class.blink::Member.242" = type { %"class.blink::MemberBase.243" }
%"class.blink::MemberBase.243" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.246 }
%class.scoped_refptr.246 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.247", %"class.WTF::AtomicString", %"class.WTF::Vector.249" }
%"class.WTF::RefCounted.247" = type { %"class.base::RefCounted.248" }
%"class.base::RefCounted.248" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.249" = type { %"class.WTF::VectorBuffer.250" }
%"class.WTF::VectorBuffer.250" = type { %"class.WTF::VectorBufferBase.251", [32 x i8] }
%"class.WTF::VectorBufferBase.251" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.1064", %"class.WTF::Vector.1064", i8, i32, %"class.blink::Member.1071", %"class.blink::Member.1073", %"class.blink::Member.1075", %"class.blink::Member.1077", %"class.blink::Member.1079", %"class.blink::Member.1081", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1089", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1095", %"class.blink::Member.1097", %"class.blink::Member.450", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1100", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.426", %"class.blink::Member.424", %"class.blink::Member.1125", %"class.blink::Member.424", %"class.blink::Member.424", %"class.blink::Member.424", %"class.blink::UserActionElementSet", %"class.blink::Member.1134", double, double, i64, i64, %"class.blink::HeapHashSet.1136", %"class.blink::HeapHashSet.1143", i16, i8, %"class.blink::Member.1150", %"class.blink::Member.1152", %"class.blink::Member.1154", %"class.blink::Member.1156", %"class.blink::TextLinkColors", %"class.blink::Member.1158", i8, [7 x i8], %"class.blink::HeapHashMap.1160", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.424", %"class.WTF::Vector.1167", %"class.blink::Member.1172", %"class.blink::Member.1174", i8, %"class.blink::Member.424", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1176", %"class.blink::HeapVector.1178", %"class.std::__1::unique_ptr.1186", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1192", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1205", %"class.WTF::Vector.1207", i8, i8, %"class.std::__1::unique_ptr.1212", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.426", %"class.blink::HeapVector.1218", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1226", i8, i32, %"class.blink::Member.1228", %"class.blink::Member.1230", %"class.blink::Member.1232", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1234", %"class.WTF::HashMap.1236", %"class.blink::Member.1241", %"class.blink::Member.1243", %"class.blink::Member.1245", %"class.blink::Member.1247", %"class.blink::Member.407", %"class.blink::Member.407", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1249", i8, i32, %"class.blink::Member.1256", %"class.blink::Member.1258", i32, %"class.blink::Member.1260", %"class.blink::Member.1262", %"class.blink::Member.1264", %"class.std::__1::unique_ptr.1266", i64, %"class.std::__1::unique_ptr.1272", i32, i32, %"class.blink::Member.1283", %"class.blink::Member.1285", %"class.blink::Member.1287", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1289", %"class.WTF::Vector.1291", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1296", %"class.blink::Member.1303", %"class.std::__1::unique_ptr.1305", %"class.blink::Member.1311", i8, i8, %"class.WTF::String", %"class.blink::Member.1313", i8, [7 x i8], %"class.blink::HeapHashMap.1315", %"class.blink::HeapObserverSet.1322", %"class.blink::Member.1330", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1332", i32, i8, i8, %"class.blink::WeakMember.1334", %"class.blink::Member.1335" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1057" }
%"class.blink::HeapHashMap.1057" = type { %"class.WTF::HashMap.1060" }
%"class.WTF::HashMap.1060" = type { %"class.WTF::HashTable.1061" }
%"class.WTF::HashTable.1061" = type <{ %"struct.WTF::KeyValuePair.1063"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1063" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.1064" = type { %"class.WTF::VectorBuffer.1065" }
%"class.WTF::VectorBuffer.1065" = type { %"class.WTF::VectorBufferBase.1066" }
%"class.WTF::VectorBufferBase.1066" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.1067 }
%class.scoped_refptr.1067 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.1068", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.1068" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.307" }
%"struct.std::__1::atomic.307" = type { %"struct.std::__1::__atomic_base.308" }
%"struct.std::__1::__atomic_base.308" = type { %"struct.std::__1::__atomic_base.309" }
%"struct.std::__1::__atomic_base.309" = type { %"struct.std::__1::__cxx_atomic_impl.310" }
%"struct.std::__1::__cxx_atomic_impl.310" = type { %"struct.std::__1::__cxx_atomic_base_impl.311" }
%"struct.std::__1::__cxx_atomic_base_impl.311" = type { i32 }
%"class.blink::Member.1071" = type { %"class.blink::MemberBase.1072" }
%"class.blink::MemberBase.1072" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.1073" = type { %"class.blink::MemberBase.1074" }
%"class.blink::MemberBase.1074" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1348", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1381", i32, i8, [3 x i8], %"class.blink::HeapVector.1383", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1391", %"class.blink::Member.1393", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1402", %"class.blink::Member.1408", %"class.blink::Member.1410", i8, [7 x i8] }>
%"class.blink::Supplementable.1348" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1349" }
%"class.blink::HeapHashMap.1349" = type { %"class.WTF::HashMap.1352" }
%"class.WTF::HashMap.1352" = type { %"class.WTF::HashTable.1353" }
%"class.WTF::HashTable.1353" = type <{ %"struct.WTF::KeyValuePair.1355"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1355" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1356" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1025" }
%"class.blink::HeapHashSet.1025" = type { %"class.WTF::HashSet.1028" }
%"class.WTF::HashSet.1028" = type { %"class.WTF::HashTable.1029" }
%"class.WTF::HashTable.1029" = type <{ %"class.blink::WeakMember.1031"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1031" = type opaque
%"class.blink::Supplementable.1356" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1357" }
%"class.blink::HeapHashMap.1357" = type { %"class.WTF::HashMap.1360" }
%"class.WTF::HashMap.1360" = type { %"class.WTF::HashTable.1361" }
%"class.WTF::HashTable.1361" = type <{ %"struct.WTF::KeyValuePair.1363"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1363" = type { i8*, %"class.blink::Member.1480" }
%"class.blink::Member.1480" = type { %"class.blink::MemberBase.1481" }
%"class.blink::MemberBase.1481" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1482" }
%"class.blink::Member.1482" = type { %"class.blink::MemberBase.1483" }
%"class.blink::MemberBase.1483" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1364, %"class.std::__1::unique_ptr.1365", %"class.std::__1::unique_ptr.1365", %"class.std::__1::unique_ptr.1371", %"class.std::__1::unique_ptr.1371", %"class.blink::Member.1073", i32, [4 x i8], %"class.WTF::HashSet.1377", i32, i32 }
%class.scoped_refptr.1364 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.1365" = type { %"class.std::__1::__compressed_pair.1366" }
%"class.std::__1::__compressed_pair.1366" = type { %"struct.std::__1::__compressed_pair_elem.1367" }
%"struct.std::__1::__compressed_pair_elem.1367" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1371" = type { %"class.std::__1::__compressed_pair.1372" }
%"class.std::__1::__compressed_pair.1372" = type { %"struct.std::__1::__compressed_pair_elem.1373" }
%"struct.std::__1::__compressed_pair_elem.1373" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1377" = type { %"class.WTF::HashTable.1378" }
%"class.WTF::HashTable.1378" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1381" = type { %"class.blink::MemberBase.1382" }
%"class.blink::MemberBase.1382" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1383" = type { %"class.WTF::Vector.1386" }
%"class.WTF::Vector.1386" = type { %"class.WTF::VectorBuffer.1387" }
%"class.WTF::VectorBuffer.1387" = type { %"class.WTF::VectorBufferBase.1388" }
%"class.WTF::VectorBufferBase.1388" = type { %"class.blink::Member.1389"*, i32, i32 }
%"class.blink::Member.1389" = type opaque
%"class.blink::Member.1391" = type { %"class.blink::MemberBase.1392" }
%"class.blink::MemberBase.1392" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1393" = type { %"class.blink::MemberBase.1394" }
%"class.blink::MemberBase.1394" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1395", i32, i32 }
%"class.blink::HeapHashMap.1395" = type { %"class.WTF::HashMap.1398" }
%"class.WTF::HashMap.1398" = type { %"class.WTF::HashTable.1399" }
%"class.WTF::HashTable.1399" = type <{ %"struct.WTF::KeyValuePair.1401"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1401" = type opaque
%"class.std::__1::unique_ptr.1402" = type { %"class.std::__1::__compressed_pair.1403" }
%"class.std::__1::__compressed_pair.1403" = type { %"struct.std::__1::__compressed_pair_elem.1404" }
%"struct.std::__1::__compressed_pair_elem.1404" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1408" = type { %"class.blink::MemberBase.1409" }
%"class.blink::MemberBase.1409" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1410" = type { %"class.blink::MemberBase.1411" }
%"class.blink::MemberBase.1411" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.1075" = type { %"class.blink::MemberBase.1076" }
%"class.blink::MemberBase.1076" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1077" = type { %"class.blink::MemberBase.1078" }
%"class.blink::MemberBase.1078" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1079" = type { %"class.blink::MemberBase.1080" }
%"class.blink::MemberBase.1080" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1089" = type { %"class.std::__1::__compressed_pair.1090" }
%"class.std::__1::__compressed_pair.1090" = type { %"struct.std::__1::__compressed_pair_elem.1091" }
%"struct.std::__1::__compressed_pair_elem.1091" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1083" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.1083" = type { %"class.std::__1::__compressed_pair.1084" }
%"class.std::__1::__compressed_pair.1084" = type { %"struct.std::__1::__compressed_pair_elem.1085" }
%"struct.std::__1::__compressed_pair_elem.1085" = type { %"class.blink::KURL"* }
%"class.blink::Member.1095" = type { %"class.blink::MemberBase.1096" }
%"class.blink::MemberBase.1096" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1097" = type { %"class.blink::MemberBase.1098" }
%"class.blink::MemberBase.1098" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.1099 }
%class.scoped_refptr.1099 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.1100" = type { %"class.WTF::VectorBuffer.1101" }
%"class.WTF::VectorBuffer.1101" = type { %"class.WTF::VectorBufferBase.1102" }
%"class.WTF::VectorBufferBase.1102" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1103 }
%class.scoped_refptr.1103 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1104", i32, i32, %"class.blink::Persistent.1106" }
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1106" = type { %"class.blink::PersistentBase.1107" }
%"class.blink::PersistentBase.1107" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.359" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1110" }
%"class.blink::HeapHashMap.1110" = type { %"class.WTF::HashMap.1113" }
%"class.WTF::HashMap.1113" = type { %"class.WTF::HashTable.1114" }
%"class.WTF::HashTable.1114" = type <{ %"struct.WTF::KeyValuePair.1116"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1116" = type { %"class.blink::WeakMember.1117", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1117" = type { %"class.blink::MemberBase.1118" }
%"class.blink::MemberBase.1118" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.1125" = type { %"class.blink::MemberBase.1126" }
%"class.blink::MemberBase.1126" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1127" }
%"class.blink::HeapHashMap.1127" = type { %"class.WTF::HashMap.1130" }
%"class.WTF::HashMap.1130" = type { %"class.WTF::HashTable.1131" }
%"class.WTF::HashTable.1131" = type <{ %"struct.WTF::KeyValuePair.1133"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1133" = type opaque
%"class.blink::Member.1134" = type { %"class.blink::MemberBase.1135" }
%"class.blink::MemberBase.1135" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1136" = type { %"class.WTF::HashSet.1139" }
%"class.WTF::HashSet.1139" = type { %"class.WTF::HashTable.1140" }
%"class.WTF::HashTable.1140" = type <{ %"class.blink::WeakMember.1142"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1142" = type opaque
%"class.blink::HeapHashSet.1143" = type { %"class.WTF::HashSet.1146" }
%"class.WTF::HashSet.1146" = type { %"class.WTF::HashTable.1147" }
%"class.WTF::HashTable.1147" = type <{ %"class.blink::WeakMember.1149"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1149" = type opaque
%"class.blink::Member.1150" = type { %"class.blink::MemberBase.1151" }
%"class.blink::MemberBase.1151" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1152" = type { %"class.blink::MemberBase.1153" }
%"class.blink::MemberBase.1153" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1154" = type { %"class.blink::MemberBase.1155" }
%"class.blink::MemberBase.1155" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.1156" = type { %"class.blink::MemberBase.1157" }
%"class.blink::MemberBase.1157" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.1158" = type { %"class.blink::MemberBase.1159" }
%"class.blink::MemberBase.1159" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1160" = type { %"class.WTF::HashMap.1163" }
%"class.WTF::HashMap.1163" = type { %"class.WTF::HashTable.1164" }
%"class.WTF::HashTable.1164" = type <{ %"struct.WTF::KeyValuePair.1166"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1166" = type opaque
%"class.WTF::Vector.1167" = type { %"class.WTF::VectorBuffer.1168" }
%"class.WTF::VectorBuffer.1168" = type { %"class.WTF::VectorBufferBase.1169" }
%"class.WTF::VectorBufferBase.1169" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1173" }
%"class.blink::MemberBase.1173" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1174" = type { %"class.blink::MemberBase.1175" }
%"class.blink::MemberBase.1175" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1176" = type { %"class.blink::MemberBase.1177" }
%"class.blink::MemberBase.1177" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1178" = type { %"class.WTF::Vector.1181" }
%"class.WTF::Vector.1181" = type { %"class.WTF::VectorBuffer.1182" }
%"class.WTF::VectorBuffer.1182" = type { %"class.WTF::VectorBufferBase.1183" }
%"class.WTF::VectorBufferBase.1183" = type { %"class.blink::Member.1184"*, i32, i32 }
%"class.blink::Member.1184" = type opaque
%"class.std::__1::unique_ptr.1186" = type { %"class.std::__1::__compressed_pair.1187" }
%"class.std::__1::__compressed_pair.1187" = type { %"struct.std::__1::__compressed_pair_elem.1188" }
%"struct.std::__1::__compressed_pair_elem.1188" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1192" = type { %"class.WTF::HashSet.1195" }
%"class.WTF::HashSet.1195" = type { %"class.WTF::HashTable.1196" }
%"class.WTF::HashTable.1196" = type <{ %"class.blink::WeakMember.1198"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1198" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1199", i32, [4 x i8] }>
%"class.WTF::Vector.1199" = type { %"class.WTF::VectorBuffer.1200" }
%"class.WTF::VectorBuffer.1200" = type { %"class.WTF::VectorBufferBase.1201" }
%"class.WTF::VectorBufferBase.1201" = type { %"struct.std::__1::pair.1202"*, i32, i32 }
%"struct.std::__1::pair.1202" = type opaque
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.1206" }
%"class.blink::MemberBase.1206" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1207" = type { %"class.WTF::VectorBuffer.1208" }
%"class.WTF::VectorBuffer.1208" = type { %"class.WTF::VectorBufferBase.1209" }
%"class.WTF::VectorBufferBase.1209" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1212" = type { %"class.std::__1::__compressed_pair.1213" }
%"class.std::__1::__compressed_pair.1213" = type { %"struct.std::__1::__compressed_pair_elem.1214" }
%"struct.std::__1::__compressed_pair_elem.1214" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1218" = type { %"class.WTF::Vector.1221" }
%"class.WTF::Vector.1221" = type { %"class.WTF::VectorBuffer.1222" }
%"class.WTF::VectorBuffer.1222" = type { %"class.WTF::VectorBufferBase.1223" }
%"class.WTF::VectorBufferBase.1223" = type { %"class.blink::Member.1224"*, i32, i32 }
%"class.blink::Member.1224" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.407" }
%"class.blink::Member.1226" = type { %"class.blink::MemberBase.1227" }
%"class.blink::MemberBase.1227" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1228" = type { %"class.blink::MemberBase.1229" }
%"class.blink::MemberBase.1229" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1230" = type { %"class.blink::MemberBase.1231" }
%"class.blink::MemberBase.1231" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1232" = type { %"class.blink::MemberBase.1233" }
%"class.blink::MemberBase.1233" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1234" = type { %"class.blink::MemberBase.1235" }
%"class.blink::MemberBase.1235" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1236" = type { %"class.WTF::HashTable.1237" }
%"class.WTF::HashTable.1237" = type <{ %"struct.WTF::KeyValuePair.1240"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1240" = type opaque
%"class.blink::Member.1241" = type { %"class.blink::MemberBase.1242" }
%"class.blink::MemberBase.1242" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1243" = type { %"class.blink::MemberBase.1244" }
%"class.blink::MemberBase.1244" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1245" = type { %"class.blink::MemberBase.1246" }
%"class.blink::MemberBase.1246" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1247" = type { %"class.blink::MemberBase.1248" }
%"class.blink::MemberBase.1248" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1124", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1121, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.1121 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1122" }>
%"class.base::RefCountedThreadSafe.1122" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.1123 }
%class.scoped_refptr.1123 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.312" }
%"struct.std::__1::atomic.312" = type { %"struct.std::__1::__atomic_base.313" }
%"struct.std::__1::__atomic_base.313" = type { %"struct.std::__1::__atomic_base.314" }
%"struct.std::__1::__atomic_base.314" = type { %"struct.std::__1::__cxx_atomic_impl.315" }
%"struct.std::__1::__cxx_atomic_impl.315" = type { %"struct.std::__1::__cxx_atomic_base_impl.316" }
%"struct.std::__1::__cxx_atomic_base_impl.316" = type { i8 }
%"class.blink::WeakMember.1124" = type { %"class.blink::MemberBase.408" }
%"class.blink::HeapHashSet.1249" = type { %"class.WTF::HashSet.1252" }
%"class.WTF::HashSet.1252" = type { %"class.WTF::HashTable.1253" }
%"class.WTF::HashTable.1253" = type <{ %"class.blink::Member.1255"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1255" = type opaque
%"class.blink::Member.1256" = type { %"class.blink::MemberBase.1257" }
%"class.blink::MemberBase.1257" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1258" = type { %"class.blink::MemberBase.1259" }
%"class.blink::MemberBase.1259" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1260" = type { %"class.blink::MemberBase.1261" }
%"class.blink::MemberBase.1261" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1262" = type { %"class.blink::MemberBase.1263" }
%"class.blink::MemberBase.1263" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1264" = type { %"class.blink::MemberBase.1265" }
%"class.blink::MemberBase.1265" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1266" = type { %"class.std::__1::__compressed_pair.1267" }
%"class.std::__1::__compressed_pair.1267" = type { %"struct.std::__1::__compressed_pair_elem.1268" }
%"struct.std::__1::__compressed_pair_elem.1268" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1272" = type { %"class.std::__1::__compressed_pair.1273" }
%"class.std::__1::__compressed_pair.1273" = type { %"struct.std::__1::__compressed_pair_elem.1274" }
%"struct.std::__1::__compressed_pair_elem.1274" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.486", %"class.WTF::HashSet.486", %"class.WTF::HashSet.486", %"class.WTF::HashSet.486", %"class.WTF::HashSet.486", %"class.WTF::HashSet.486", i32, [4 x i8], %"class.WTF::HashMap.1275", %"class.WTF::HashMap.1275", %"class.WTF::HashMap.1275", %"class.WTF::HashMap.1275", %"class.WTF::HashMap.1275", %"class.WTF::HashMap.1275", %"class.WTF::HashMap.1275", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1275" = type { %"class.WTF::HashTable.1276" }
%"class.WTF::HashTable.1276" = type <{ %"struct.WTF::KeyValuePair.1279"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1279" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1283" = type { %"class.blink::MemberBase.1284" }
%"class.blink::MemberBase.1284" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1285" = type { %"class.blink::MemberBase.1286" }
%"class.blink::MemberBase.1286" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1287" = type { %"class.blink::MemberBase.1288" }
%"class.blink::MemberBase.1288" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1289" = type { %"class.blink::MemberBase.1290" }
%"class.blink::MemberBase.1290" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1291" = type { %"class.WTF::VectorBuffer.1292" }
%"class.WTF::VectorBuffer.1292" = type { %"class.WTF::VectorBufferBase.1293" }
%"class.WTF::VectorBufferBase.1293" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1296" = type { %"class.WTF::HashMap.1299" }
%"class.WTF::HashMap.1299" = type { %"class.WTF::HashTable.1300" }
%"class.WTF::HashTable.1300" = type <{ %"struct.WTF::KeyValuePair.1302"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1302" = type opaque
%"class.blink::Member.1303" = type { %"class.blink::MemberBase.1304" }
%"class.blink::MemberBase.1304" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1305" = type { %"class.std::__1::__compressed_pair.1306" }
%"class.std::__1::__compressed_pair.1306" = type { %"struct.std::__1::__compressed_pair_elem.1307" }
%"struct.std::__1::__compressed_pair_elem.1307" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1311" = type { %"class.blink::MemberBase.1312" }
%"class.blink::MemberBase.1312" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1313" = type { %"class.blink::MemberBase.1314" }
%"class.blink::MemberBase.1314" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1315" = type { %"class.WTF::HashMap.1318" }
%"class.WTF::HashMap.1318" = type { %"class.WTF::HashTable.1319" }
%"class.WTF::HashTable.1319" = type <{ %"struct.WTF::KeyValuePair.1321"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1321" = type opaque
%"class.blink::HeapObserverSet.1322" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1323" }
%"class.blink::HeapHashSet.1323" = type { %"class.WTF::HashSet.1326" }
%"class.WTF::HashSet.1326" = type { %"class.WTF::HashTable.1327" }
%"class.WTF::HashTable.1327" = type <{ %"class.blink::WeakMember.1329"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1329" = type opaque
%"class.blink::Member.1330" = type { %"class.blink::MemberBase.1331" }
%"class.blink::MemberBase.1331" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1332" = type { %"class.blink::MemberBase.1333" }
%"class.blink::MemberBase.1333" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.407", %"class.blink::HeapHashSet.1339", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1346", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1339" = type { %"class.WTF::HashSet.1342" }
%"class.WTF::HashSet.1342" = type { %"class.WTF::HashTable.1343" }
%"class.WTF::HashTable.1343" = type <{ %"class.blink::Member.1345"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1345" = type opaque
%"class.blink::HeapTaskRunnerTimer.1346" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1347", { i64, i64 } }
%"class.blink::WeakMember.1347" = type { %"class.blink::MemberBase.1333" }
%"class.blink::WeakMember.1334" = type { %"class.blink::MemberBase.229" }
%"class.blink::Member.1335" = type { %"class.blink::MemberBase.1336" }
%"class.blink::MemberBase.1336" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%class.scoped_refptr.798 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.783", %"class.std::__1::unique_ptr.785" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.332", %"class.blink::DataRef.504", %"class.blink::DataRef.508", %"class.blink::DataRef.703", %"class.blink::DataRef.766", %"class.blink::DataRef.770", %"class.blink::DataRef.774", %"class.blink::DataRef.778", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.255 }
%class.scoped_refptr.255 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.256", %"class.blink::DataRef.258", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.256" = type { %"class.base::RefCounted.257" }
%"class.base::RefCounted.257" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.258" = type { %class.scoped_refptr.259 }
%class.scoped_refptr.259 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.260", %"class.blink::Font" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.295 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.263, %class.scoped_refptr.271, %class.scoped_refptr.281, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.294 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.262 }
%class.scoped_refptr.262 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1412", [4 x i8] }>
%"class.WTF::RefCounted.1412" = type { %"class.base::RefCounted.1413" }
%"class.base::RefCounted.1413" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.263 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.269", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.264" }
%"class.WTF::Vector.264" = type { %"class.WTF::VectorBuffer.265" }
%"class.WTF::VectorBuffer.265" = type { %"class.WTF::VectorBufferBase.266" }
%"class.WTF::VectorBufferBase.266" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.269" = type { %"class.base::RefCounted.270" }
%"class.base::RefCounted.270" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.271 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.272", %"class.WTF::RefCounted.279", [4 x i8] }>
%"class.blink::FontSettings.272" = type { %"class.WTF::Vector.273" }
%"class.WTF::Vector.273" = type { %"class.WTF::VectorBuffer.274" }
%"class.WTF::VectorBuffer.274" = type { %"class.WTF::VectorBufferBase.275" }
%"class.WTF::VectorBufferBase.275" = type { %"class.blink::FontTagValuePair.276"*, i32, i32 }
%"class.blink::FontTagValuePair.276" = type { i32, float }
%"class.WTF::RefCounted.279" = type { %"class.base::RefCounted.280" }
%"class.base::RefCounted.280" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.281 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.282", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.291, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.286 }
%union.anon.286 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.291 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.292", [4 x i8] }>
%"class.WTF::RefCounted.292" = type { %"class.base::RefCounted.293" }
%"class.base::RefCounted.293" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.294 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.295 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.296", %"class.WTF::Vector.298", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent.328", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.296" = type { %"class.base::RefCounted.297" }
%"class.base::RefCounted.297" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.298" = type { %"class.WTF::VectorBuffer.299" }
%"class.WTF::VectorBuffer.299" = type { %"class.WTF::VectorBufferBase.300", [8 x i8] }
%"class.WTF::VectorBufferBase.300" = type { %class.scoped_refptr.301*, i32, i32 }
%class.scoped_refptr.301 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.302", [4 x i8] }>
%"class.WTF::RefCounted.302" = type { %"class.base::RefCounted.303" }
%"class.base::RefCounted.303" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.318", %class.scoped_refptr.325, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.302" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.306 }
%union.anon.306 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.317, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.307" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.307" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.312" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.317 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.318" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.321, %class.scoped_refptr.321 }
%class.scoped_refptr.321 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.325 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.326", [4 x i8] }>
%"class.WTF::RefCounted.326" = type { %"class.base::RefCounted.327" }
%"class.base::RefCounted.327" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent.328" = type { %"class.blink::PersistentBase.329" }
%"class.blink::PersistentBase.329" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.330 }
%class.scoped_refptr.330 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.331, i8, i8, i8, i8 }>
%union.anon.331 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.332" = type { %class.scoped_refptr.333 }
%class.scoped_refptr.333 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.334", [4 x i8], %"class.blink::DataRef.336", %"class.blink::DataRef.372", %"class.WTF::Vector.376", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.380, %class.scoped_refptr.389, %"class.blink::Persistent.397", %"class.blink::Persistent.399", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.334" = type { %"class.base::RefCounted.335" }
%"class.base::RefCounted.335" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.336" = type { %class.scoped_refptr.337 }
%class.scoped_refptr.337 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.338", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.340, %class.scoped_refptr.347, %"class.blink::Persistent.360", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.338" = type { %"class.base::RefCounted.339" }
%"class.base::RefCounted.339" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.340 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.341", %"class.WTF::Vector.342" }
%"class.base::RefCountedThreadSafe.341" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.342" = type { %"class.WTF::VectorBuffer.343" }
%"class.WTF::VectorBuffer.343" = type { %"class.WTF::VectorBufferBase.344" }
%"class.WTF::VectorBufferBase.344" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.347 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.348", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.348" = type { %"class.base::RefCounted.349" }
%"class.base::RefCounted.349" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.4 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.352" }
%"class.blink::PersistentBase.352" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.359" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.355" }
%"class.WTF::HashMap.355" = type { %"class.WTF::HashTable.356" }
%"class.WTF::HashTable.356" = type <{ %"struct.WTF::KeyValuePair.358"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.358" = type opaque
%"class.blink::Persistent.360" = type { %"class.blink::PersistentBase.361" }
%"class.blink::PersistentBase.361" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.359" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.364" }
%"class.WTF::Vector.364" = type { %"class.WTF::VectorBuffer.365" }
%"class.WTF::VectorBuffer.365" = type { %"class.WTF::VectorBufferBase.366" }
%"class.WTF::VectorBufferBase.366" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.367", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.367" = type { %"class.blink::MemberBase.368" }
%"class.blink::MemberBase.368" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.372" = type { %class.scoped_refptr.373 }
%class.scoped_refptr.373 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.374", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.374" = type { %"class.base::RefCounted.375" }
%"class.base::RefCounted.375" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.376" = type { %"class.WTF::VectorBuffer.377" }
%"class.WTF::VectorBuffer.377" = type { %"class.WTF::VectorBufferBase.251" }
%class.scoped_refptr.380 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.381", %"class.WTF::Vector.383" }
%"class.WTF::RefCounted.381" = type { %"class.base::RefCounted.382" }
%"class.base::RefCounted.382" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.383" = type { %"class.WTF::VectorBuffer.384" }
%"class.WTF::VectorBuffer.384" = type { %"class.WTF::VectorBufferBase.385" }
%"class.WTF::VectorBufferBase.385" = type { %"struct.std::__1::pair.386"*, i32, i32 }
%"struct.std::__1::pair.386" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.389 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.390", [4 x i8], %"class.WTF::Vector.392" }
%"class.WTF::RefCounted.390" = type { %"class.base::RefCounted.391" }
%"class.base::RefCounted.391" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.392" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.394", [28 x i8] }>
%"class.WTF::VectorBufferBase.394" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.397" = type { %"class.blink::PersistentBase.398" }
%"class.blink::PersistentBase.398" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.359" }
%"class.blink::Persistent.399" = type { %"class.blink::PersistentBase.400" }
%"class.blink::PersistentBase.400" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.359" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.403", %"class.blink::Member.502" }
%"class.blink::Member.403" = type { %"class.blink::MemberBase.404" }
%"class.blink::MemberBase.404" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.502" = type { %"class.blink::MemberBase.503" }
%"class.blink::MemberBase.503" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.504" = type { %class.scoped_refptr.505 }
%class.scoped_refptr.505 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.506", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.506" = type { %"class.base::RefCounted.507" }
%"class.base::RefCounted.507" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.508" = type { %class.scoped_refptr.509 }
%class.scoped_refptr.509 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.510", [4 x i8], %"class.blink::DataRef.512", %"class.blink::DataRef.578", %"class.blink::TransformOperations", %class.scoped_refptr.389, %"class.blink::Persistent.697", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.510" = type { %"class.base::RefCounted.511" }
%"class.base::RefCounted.511" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.512" = type { %class.scoped_refptr.513 }
%class.scoped_refptr.513 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.514", [4 x i8], %"class.blink::DataRef.516", %"class.blink::Persistent.554", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.514" = type { %"class.base::RefCounted.515" }
%"class.base::RefCounted.515" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.516" = type { %class.scoped_refptr.517 }
%class.scoped_refptr.517 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.518", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.536, %class.scoped_refptr.539, %class.scoped_refptr.542, %class.scoped_refptr.545, %class.scoped_refptr.546, %class.scoped_refptr.547, %"class.blink::Persistent.554", %"class.blink::Persistent.569", %"class.absl::optional.573", %"class.absl::optional.573", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.518" = type { %"class.base::RefCounted.519" }
%"class.base::RefCounted.519" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.520", %"class.std::__1::unique_ptr.525" }
%"class.WTF::Vector.520" = type { %"class.WTF::VectorBuffer.521" }
%"class.WTF::VectorBuffer.521" = type { %"class.WTF::VectorBufferBase.522" }
%"class.WTF::VectorBufferBase.522" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.525" = type { %"class.std::__1::__compressed_pair.526" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.527" }
%"struct.std::__1::__compressed_pair_elem.527" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.528", %"class.WTF::Vector.520", i32, i32 }
%"class.WTF::Vector.528" = type { %"class.WTF::VectorBuffer.529" }
%"class.WTF::VectorBuffer.529" = type { %"class.WTF::VectorBufferBase.530" }
%"class.WTF::VectorBufferBase.530" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.536 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.537", [4 x i8] }>
%"class.WTF::RefCounted.537" = type { %"class.base::RefCounted.538" }
%"class.base::RefCounted.538" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.539 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.540", [4 x i8] }>
%"class.WTF::RefCounted.540" = type { %"class.base::RefCounted.541" }
%"class.base::RefCounted.541" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.542 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.543" }>
%"class.WTF::RefCounted.543" = type { %"class.base::RefCounted.544" }
%"class.base::RefCounted.544" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.545 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.546 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.547 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.548", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.548" = type { %"class.base::RefCounted.549" }
%"class.base::RefCounted.549" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.550" }
%"class.blink::DataRef.550" = type { %class.scoped_refptr.551 }
%class.scoped_refptr.551 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.397", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.552" }
%"class.WTF::RefCounted.552" = type { %"class.base::RefCounted.553" }
%"class.base::RefCounted.553" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.569" = type { %"class.blink::PersistentBase.570" }
%"class.blink::PersistentBase.570" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.359" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.539, %"class.blink::Member.367", i32, [4 x i8] }>
%"class.absl::optional.573" = type { %"class.absl::optional_internal::optional_data.574" }
%"class.absl::optional_internal::optional_data.574" = type { %"class.absl::optional_internal::optional_data_base.575" }
%"class.absl::optional_internal::optional_data_base.575" = type { %"class.absl::optional_internal::optional_data_dtor_base.576" }
%"class.absl::optional_internal::optional_data_dtor_base.576" = type { i8, [3 x i8], %union.anon.577 }
%union.anon.577 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.554" = type { %"class.blink::PersistentBase.555" }
%"class.blink::PersistentBase.555" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.359" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.558" }
%"class.blink::HeapVector.558" = type { %"class.WTF::Vector.561" }
%"class.WTF::Vector.561" = type { %"class.WTF::VectorBuffer.562" }
%"class.WTF::VectorBuffer.562" = type { %"class.WTF::VectorBufferBase.563" }
%"class.WTF::VectorBufferBase.563" = type { %"class.blink::Member.564"*, i32, i32 }
%"class.blink::Member.564" = type { %"class.blink::MemberBase.565" }
%"class.blink::MemberBase.565" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.578" = type { %class.scoped_refptr.579 }
%class.scoped_refptr.579 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.580", %"class.blink::DataRef.582", %"class.blink::DataRef.586", %"class.blink::DataRef.595", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.614", %"class.std::__1::unique_ptr.625", %"class.std::__1::unique_ptr.663", %"class.std::__1::unique_ptr.674", %"class.std::__1::unique_ptr.685", %"class.WTF::Vector.7", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.580" = type { %"class.base::RefCounted.581" }
%"class.base::RefCounted.581" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.582" = type { %class.scoped_refptr.583 }
%class.scoped_refptr.583 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.584", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.584" = type { %"class.base::RefCounted.585" }
%"class.base::RefCounted.585" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.586" = type { %class.scoped_refptr.587 }
%class.scoped_refptr.587 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.588", [4 x i8], %"class.WTF::Vector.590", i8, [7 x i8] }>
%"class.WTF::RefCounted.588" = type { %"class.base::RefCounted.589" }
%"class.base::RefCounted.589" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.590" = type { %"class.WTF::VectorBuffer.591" }
%"class.WTF::VectorBuffer.591" = type { %"class.WTF::VectorBufferBase.592" }
%"class.WTF::VectorBufferBase.592" = type { i32*, i32, i32 }
%"class.blink::DataRef.595" = type { %class.scoped_refptr.596 }
%class.scoped_refptr.596 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.597", [4 x i8], %"class.WTF::HashMap.599", %"class.WTF::HashMap.599", %"class.WTF::HashMap.599", %"class.WTF::HashMap.599", %"class.WTF::HashMap.599", %"class.WTF::HashMap.599", %"class.WTF::HashMap.604", %"class.WTF::HashMap.604", %"class.WTF::HashMap.604", %"class.WTF::HashMap.604", %"class.WTF::HashMap.609", %"class.WTF::Vector.520", %"class.WTF::Vector.520", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.597" = type { %"class.base::RefCounted.598" }
%"class.base::RefCounted.598" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.599" = type { %"class.WTF::HashTable.600" }
%"class.WTF::HashTable.600" = type <{ %"struct.WTF::KeyValuePair.603"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.603" = type { %"class.WTF::String", %"class.WTF::Vector.1514" }
%"class.WTF::Vector.1514" = type { %"class.WTF::VectorBuffer.1515" }
%"class.WTF::VectorBuffer.1515" = type { %"class.WTF::VectorBufferBase.1516" }
%"class.WTF::VectorBufferBase.1516" = type { i64*, i32, i32 }
%"class.WTF::HashMap.604" = type { %"class.WTF::HashTable.605" }
%"class.WTF::HashTable.605" = type <{ %"struct.WTF::KeyValuePair.608"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.608" = type { i64, %"class.WTF::Vector.7" }
%"class.WTF::HashMap.609" = type { %"class.WTF::HashTable.610" }
%"class.WTF::HashTable.610" = type <{ %"struct.WTF::KeyValuePair.613"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.613" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.614" = type { %"class.std::__1::__compressed_pair.615" }
%"class.std::__1::__compressed_pair.615" = type { %"struct.std::__1::__compressed_pair_elem.616" }
%"struct.std::__1::__compressed_pair_elem.616" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.617" }
%"class.WTF::HashMap.617" = type { %"class.WTF::HashTable.618" }
%"class.WTF::HashTable.618" = type <{ %"struct.WTF::KeyValuePair.621"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.621" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1519", %"class.absl::optional.1519", %"class.absl::optional.1519" }
%"class.absl::optional.1519" = type { %"class.absl::optional_internal::optional_data.1520" }
%"class.absl::optional_internal::optional_data.1520" = type { %"class.absl::optional_internal::optional_data_base.1521" }
%"class.absl::optional_internal::optional_data_base.1521" = type { %"class.absl::optional_internal::optional_data_dtor_base.1522" }
%"class.absl::optional_internal::optional_data_dtor_base.1522" = type { i8, %union.anon.1523 }
%union.anon.1523 = type { i32 }
%"class.std::__1::unique_ptr.625" = type { %"class.std::__1::__compressed_pair.626" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.627" }
%"struct.std::__1::__compressed_pair_elem.627" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.376", %"class.WTF::Vector.640", %"class.WTF::Vector.628", %"class.WTF::Vector.645", %"class.WTF::Vector.650", %"class.WTF::Vector.655" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.628", %"class.WTF::Vector.628", %"class.WTF::Vector.633" }
%"class.WTF::Vector.633" = type { %"class.WTF::VectorBuffer.634" }
%"class.WTF::VectorBuffer.634" = type { %"class.WTF::VectorBufferBase.635" }
%"class.WTF::VectorBufferBase.635" = type { %class.scoped_refptr.636*, i32, i32 }
%class.scoped_refptr.636 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.637" }
%"class.base::RefCountedThreadSafe.637" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.640" = type { %"class.WTF::VectorBuffer.641" }
%"class.WTF::VectorBuffer.641" = type { %"class.WTF::VectorBufferBase.642" }
%"class.WTF::VectorBufferBase.642" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.628" = type { %"class.WTF::VectorBuffer.629" }
%"class.WTF::VectorBuffer.629" = type { %"class.WTF::VectorBufferBase.630" }
%"class.WTF::Vector.645" = type { %"class.WTF::VectorBuffer.646" }
%"class.WTF::VectorBuffer.646" = type { %"class.WTF::VectorBufferBase.647" }
%"class.WTF::VectorBufferBase.647" = type { i32*, i32, i32 }
%"class.WTF::Vector.650" = type { %"class.WTF::VectorBuffer.651" }
%"class.WTF::VectorBuffer.651" = type { %"class.WTF::VectorBufferBase.652" }
%"class.WTF::VectorBufferBase.652" = type { i32*, i32, i32 }
%"class.WTF::Vector.655" = type { %"class.WTF::VectorBuffer.656" }
%"class.WTF::VectorBuffer.656" = type { %"class.WTF::VectorBufferBase.657" }
%"class.WTF::VectorBufferBase.657" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.663" = type { %"class.std::__1::__compressed_pair.664" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.665" }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.666" }
%"class.WTF::Vector.666" = type { %"class.WTF::VectorBuffer.667" }
%"class.WTF::VectorBuffer.667" = type { %"class.WTF::VectorBufferBase.668" }
%"class.WTF::VectorBufferBase.668" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.674" = type { %"class.std::__1::__compressed_pair.675" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.676" }
%"struct.std::__1::__compressed_pair_elem.676" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.677" }
%"class.WTF::Vector.677" = type { %"class.WTF::VectorBuffer.678" }
%"class.WTF::VectorBuffer.678" = type { %"class.WTF::VectorBufferBase.679" }
%"class.WTF::VectorBufferBase.679" = type { %"class.blink::Persistent.397"*, i32, i32 }
%"class.std::__1::unique_ptr.685" = type { %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.687" }
%"struct.std::__1::__compressed_pair_elem.687" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.397", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.691" }
%"class.WTF::Vector.691" = type { %"class.WTF::VectorBuffer.692" }
%"class.WTF::VectorBuffer.692" = type { %"class.WTF::VectorBufferBase.693" }
%"class.WTF::VectorBufferBase.693" = type { %class.scoped_refptr.694*, i32, i32 }
%class.scoped_refptr.694 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.543", [4 x i8] }>
%"class.blink::Persistent.697" = type { %"class.blink::PersistentBase.698" }
%"class.blink::PersistentBase.698" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.359" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.701" }
%"class.blink::Member.701" = type { %"class.blink::MemberBase.702" }
%"class.blink::MemberBase.702" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.703" = type { %class.scoped_refptr.704 }
%class.scoped_refptr.704 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.705", [4 x i8], %"class.blink::DataRef.707", %"class.blink::DataRef.711", %"class.blink::DataRef.728", %"class.blink::DataRef.746", %"class.blink::DataRef.758", %"class.blink::DataRef.762", %class.scoped_refptr.732, i32, [4 x i8] }>
%"class.WTF::RefCounted.705" = type { %"class.base::RefCounted.706" }
%"class.base::RefCounted.706" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.707" = type { %class.scoped_refptr.708 }
%class.scoped_refptr.708 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.709", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.709" = type { %"class.base::RefCounted.710" }
%"class.base::RefCounted.710" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.711" = type { %class.scoped_refptr.712 }
%class.scoped_refptr.712 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.713", %class.scoped_refptr.715, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.713" = type { %"class.base::RefCounted.714" }
%"class.base::RefCounted.714" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.715 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.716", %"class.std::__1::unique_ptr.722", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.540" }>
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.722" = type { %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"class.blink::Path"* }
%"class.blink::Path" = type opaque
%"class.blink::DataRef.728" = type { %class.scoped_refptr.729 }
%class.scoped_refptr.729 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.730", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.730" = type { %"class.base::RefCounted.731" }
%"class.base::RefCounted.731" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.732, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.746" = type { %class.scoped_refptr.747 }
%class.scoped_refptr.747 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.748", [4 x i8], %class.scoped_refptr.750, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.748" = type { %"class.base::RefCounted.749" }
%"class.base::RefCounted.749" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.750 = type { %"class.base::RefCountedData.751"* }
%"class.base::RefCountedData.751" = type { %"class.base::RefCountedThreadSafe.752", %"class.WTF::Vector.753" }
%"class.base::RefCountedThreadSafe.752" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.753" = type { %"class.WTF::VectorBuffer.754" }
%"class.WTF::VectorBuffer.754" = type { %"class.WTF::VectorBufferBase.755" }
%"class.WTF::VectorBufferBase.755" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.758" = type { %class.scoped_refptr.759 }
%class.scoped_refptr.759 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.760", %class.scoped_refptr.732, %class.scoped_refptr.732, %class.scoped_refptr.732 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.762" = type { %class.scoped_refptr.763 }
%class.scoped_refptr.763 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.764", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.764" = type { %"class.base::RefCounted.765" }
%"class.base::RefCounted.765" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.732 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.733", %"class.blink::Persistent.735", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.733" = type { %"class.base::RefCounted.734" }
%"class.base::RefCounted.734" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.735" = type { %"class.blink::PersistentBase.736" }
%"class.blink::PersistentBase.736" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.359" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.424", %"class.blink::HeapHashMap.739" }
%"class.blink::HeapHashMap.739" = type { %"class.WTF::HashMap.742" }
%"class.WTF::HashMap.742" = type { %"class.WTF::HashTable.743" }
%"class.WTF::HashTable.743" = type <{ %"struct.WTF::KeyValuePair.745"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.745" = type opaque
%"class.blink::DataRef.766" = type { %class.scoped_refptr.767 }
%class.scoped_refptr.767 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.768", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.768" = type { %"class.base::RefCounted.769" }
%"class.base::RefCounted.769" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.770" = type { %class.scoped_refptr.771 }
%class.scoped_refptr.771 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.772", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.772" = type { %"class.base::RefCounted.773" }
%"class.base::RefCounted.773" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.774" = type { %class.scoped_refptr.775 }
%class.scoped_refptr.775 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.776", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.776" = type { %"class.base::RefCounted.777" }
%"class.base::RefCounted.777" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.778" = type { %class.scoped_refptr.779 }
%class.scoped_refptr.779 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.780", %class.scoped_refptr.782 }
%"class.WTF::RefCounted.780" = type { %"class.base::RefCounted.781" }
%"class.base::RefCounted.781" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.782 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1055", %"class.blink::StyleVariables", %class.scoped_refptr.782 }
%"class.WTF::RefCounted.1055" = type { %"class.base::RefCounted.1056" }
%"class.base::RefCounted.1056" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.783" = type { %"class.base::RefCounted.784" }
%"class.base::RefCounted.784" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.788" }
%"class.std::__1::unique_ptr.788" = type { %"class.std::__1::__compressed_pair.789" }
%"class.std::__1::__compressed_pair.789" = type { %"struct.std::__1::__compressed_pair_elem.790" }
%"struct.std::__1::__compressed_pair_elem.790" = type { %"class.WTF::Vector.791"* }
%"class.WTF::Vector.791" = type opaque
%"class.blink::CSSToLengthConversionData" = type <{ %"class.blink::ComputedStyle"*, %"class.blink::CSSToLengthConversionData::FontSizes", %"class.blink::CSSToLengthConversionData::ViewportSize", float, [4 x i8] }>
%"class.blink::CSSToLengthConversionData::FontSizes" = type <{ float, float, %"class.blink::Font"*, float, [4 x i8] }>
%"class.blink::CSSToLengthConversionData::ViewportSize" = type { %"class.blink::DoubleSize" }
%"class.blink::DoubleSize" = type { double, double }
%class.scoped_refptr.254 = type { %"class.blink::ComputedStyle"* }
%"class.blink::CSSAnimationUpdate" = type { %"class.blink::HeapVector.799", %"class.WTF::Vector.954", %"class.blink::HeapHashSet.959", %"class.WTF::Vector.954", %"class.blink::HeapVector.966", %"class.blink::HeapVector.973", %"class.blink::HeapHashMap.980", %"class.WTF::HashSet.987", %"class.WTF::HashSet.987", %"class.blink::HeapHashMap.991", %"class.blink::HeapHashMap.991", %"class.blink::HeapHashMap.991", %"class.blink::HeapHashMap.991" }
%"class.blink::HeapVector.799" = type { %"class.WTF::Vector.802" }
%"class.WTF::Vector.802" = type { %"class.WTF::VectorBuffer.803" }
%"class.WTF::VectorBuffer.803" = type { %"class.WTF::VectorBufferBase.804" }
%"class.WTF::VectorBufferBase.804" = type { %"class.blink::NewCSSAnimation"*, i32, i32 }
%"class.blink::NewCSSAnimation" = type { %"class.WTF::AtomicString", i64, i64, %"class.blink::Member.805", %"struct.blink::Timing", %"class.blink::Member.881", i32, %"class.blink::Member.893", %"class.WTF::Vector.655" }
%"class.blink::Member.805" = type { %"class.blink::MemberBase.806" }
%"class.blink::MemberBase.806" = type { %"class.blink::InertEffect"* }
%"class.blink::InertEffect" = type { %"class.blink::AnimationEffect", %"class.blink::Member.828", i8, %"class.absl::optional.809", %"class.absl::optional.876" }
%"class.blink::AnimationEffect" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.807", %"struct.blink::Timing", %"class.blink::Member.814", %"struct.blink::Timing::CalculatedTiming", i8, %"class.absl::optional.809", %"class.absl::optional.823", %"class.blink::AnimationTimeDelta" }
%"class.blink::Member.807" = type { %"class.blink::MemberBase.808" }
%"class.blink::MemberBase.808" = type { %"class.blink::AnimationEffectOwner"* }
%"class.blink::AnimationEffectOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.814" = type { %"class.blink::MemberBase.815" }
%"class.blink::MemberBase.815" = type { %"class.blink::AnimationEffect::EventDelegate"* }
%"class.blink::AnimationEffect::EventDelegate" = type { i32 (...)** }
%"struct.blink::Timing::CalculatedTiming" = type { i32, %"class.absl::optional.818", %"class.absl::optional.818", i8, i8, i8, %"class.absl::optional.809", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.818" = type { %"class.absl::optional_internal::optional_data.819" }
%"class.absl::optional_internal::optional_data.819" = type { %"class.absl::optional_internal::optional_data_base.820" }
%"class.absl::optional_internal::optional_data_base.820" = type { %"class.absl::optional_internal::optional_data_dtor_base.821" }
%"class.absl::optional_internal::optional_data_dtor_base.821" = type { i8, %union.anon.822 }
%union.anon.822 = type { double }
%"class.absl::optional.823" = type { %"class.absl::optional_internal::optional_data.824" }
%"class.absl::optional_internal::optional_data.824" = type { %"class.absl::optional_internal::optional_data_base.825" }
%"class.absl::optional_internal::optional_data_base.825" = type { %"class.absl::optional_internal::optional_data_dtor_base.826" }
%"class.absl::optional_internal::optional_data_dtor_base.826" = type { i8, %union.anon.827 }
%union.anon.827 = type { i32 }
%"class.blink::AnimationTimeDelta" = type { double }
%"class.blink::Member.828" = type { %"class.blink::MemberBase.829" }
%"class.blink::MemberBase.829" = type { %"class.blink::KeyframeEffectModelBase"* }
%"class.blink::KeyframeEffectModelBase" = type <{ %"class.blink::EffectModel", %"class.blink::HeapVector.832", %"class.blink::Member.840", %"class.blink::Member.864", i32, [4 x i8], double, %"class.blink::AnimationTimeDelta", i32, [4 x i8], %class.scoped_refptr.636, i8, i8, i8, [5 x i8] }>
%"class.blink::EffectModel" = type { i32 (...)** }
%"class.blink::HeapVector.832" = type { %"class.WTF::Vector.835" }
%"class.WTF::Vector.835" = type { %"class.WTF::VectorBuffer.836" }
%"class.WTF::VectorBuffer.836" = type { %"class.WTF::VectorBufferBase.837" }
%"class.WTF::VectorBufferBase.837" = type { %"class.blink::Member.838"*, i32, i32 }
%"class.blink::Member.838" = type { %"class.blink::MemberBase.1491" }
%"class.blink::MemberBase.1491" = type { %"class.blink::Keyframe"* }
%"class.blink::Keyframe" = type { i32 (...)**, %"class.absl::optional.818", %"class.absl::optional.1494", %class.scoped_refptr.636 }
%"class.absl::optional.1494" = type { %"class.absl::optional_internal::optional_data.1495" }
%"class.absl::optional_internal::optional_data.1495" = type { %"class.absl::optional_internal::optional_data_base.1496" }
%"class.absl::optional_internal::optional_data_base.1496" = type { %"class.absl::optional_internal::optional_data_dtor_base.1497" }
%"class.absl::optional_internal::optional_data_dtor_base.1497" = type { i8, %union.anon.1498 }
%union.anon.1498 = type { i32 }
%"class.blink::Member.840" = type { %"class.blink::MemberBase.841" }
%"class.blink::MemberBase.841" = type { %"class.blink::HeapHashMap.842"* }
%"class.blink::HeapHashMap.842" = type { %"class.WTF::HashMap.845" }
%"class.WTF::HashMap.845" = type { %"class.WTF::HashTable.846" }
%"class.WTF::HashTable.846" = type <{ %"struct.WTF::KeyValuePair.848"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.848" = type { %"class.blink::PropertyHandle", %"class.blink::Member.849" }
%"class.blink::Member.849" = type { %"class.blink::MemberBase.850" }
%"class.blink::MemberBase.850" = type { %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* }
%"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup" = type { %"class.blink::HeapVector.853" }
%"class.blink::HeapVector.853" = type { %"class.WTF::Vector.856" }
%"class.WTF::Vector.856" = type { %"class.WTF::VectorBuffer.857" }
%"class.WTF::VectorBuffer.857" = type { %"class.WTF::VectorBufferBase.858" }
%"class.WTF::VectorBufferBase.858" = type { %"class.blink::Member.859"*, i32, i32 }
%"class.blink::Member.859" = type { %"class.blink::MemberBase.860" }
%"class.blink::MemberBase.860" = type { %"class.blink::Keyframe::PropertySpecificKeyframe"* }
%"class.blink::Keyframe::PropertySpecificKeyframe" = type <{ i32 (...)**, double, %class.scoped_refptr.636, i32, [4 x i8] }>
%"class.blink::Member.864" = type { %"class.blink::MemberBase.865" }
%"class.blink::MemberBase.865" = type { %"class.blink::InterpolationEffect"* }
%"class.blink::InterpolationEffect" = type { i8, %"class.blink::HeapVector.868" }
%"class.blink::HeapVector.868" = type { %"class.WTF::Vector.871" }
%"class.WTF::Vector.871" = type { %"class.WTF::VectorBuffer.872" }
%"class.WTF::VectorBuffer.872" = type { %"class.WTF::VectorBufferBase.873" }
%"class.WTF::VectorBufferBase.873" = type { %"class.blink::Member.874"*, i32, i32 }
%"class.blink::Member.874" = type { %"class.blink::MemberBase.1484" }
%"class.blink::MemberBase.1484" = type { %"class.blink::InterpolationEffect::InterpolationRecord"* }
%"class.blink::InterpolationEffect::InterpolationRecord" = type { %"class.blink::Member.1487", %class.scoped_refptr.636, double, double, double, double }
%"class.blink::Member.1487" = type { %"class.blink::MemberBase.1488" }
%"class.blink::MemberBase.1488" = type { %"class.blink::Interpolation"* }
%"class.blink::Interpolation" = type { i32 (...)** }
%"class.absl::optional.809" = type { %"class.absl::optional_internal::optional_data.810" }
%"class.absl::optional_internal::optional_data.810" = type { %"class.absl::optional_internal::optional_data_base.811" }
%"class.absl::optional_internal::optional_data_base.811" = type { %"class.absl::optional_internal::optional_data_dtor_base.812" }
%"class.absl::optional_internal::optional_data_dtor_base.812" = type { i8, %union.anon.813 }
%union.anon.813 = type { %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.876" = type { %"class.absl::optional_internal::optional_data.877" }
%"class.absl::optional_internal::optional_data.877" = type { %"class.absl::optional_internal::optional_data_base.878" }
%"class.absl::optional_internal::optional_data_base.878" = type { %"class.absl::optional_internal::optional_data_dtor_base.879" }
%"class.absl::optional_internal::optional_data_dtor_base.879" = type { i8, %union.anon.880 }
%union.anon.880 = type { i32 }
%"struct.blink::Timing" = type <{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, %"class.absl::optional.809", i32, [4 x i8], %class.scoped_refptr.636, i16, [6 x i8] }>
%"class.blink::Member.881" = type { %"class.blink::MemberBase.882" }
%"class.blink::MemberBase.882" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.885", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::HeapVector.885" = type { %"class.WTF::Vector.888" }
%"class.WTF::Vector.888" = type { %"class.WTF::VectorBuffer.889" }
%"class.WTF::VectorBuffer.889" = type { %"class.WTF::VectorBufferBase.890" }
%"class.WTF::VectorBufferBase.890" = type { %"class.blink::Member.891"*, i32, i32 }
%"class.blink::Member.891" = type opaque
%"class.blink::Member.893" = type { %"class.blink::MemberBase.894" }
%"class.blink::MemberBase.894" = type { %"class.blink::AnimationTimeline"* }
%"class.blink::AnimationTimeline" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.407", i32, [4 x i8], %"class.blink::HeapHashSet.895", %"class.blink::HeapHashSet.903", %"class.std::__1::unique_ptr.910", %"class.absl::optional.943" }
%"class.blink::HeapHashSet.895" = type { %"class.WTF::HashSet.898" }
%"class.WTF::HashSet.898" = type { %"class.WTF::HashTable.899" }
%"class.WTF::HashTable.899" = type <{ %"class.blink::Member.901"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.901" = type { %"class.blink::MemberBase.902" }
%"class.blink::MemberBase.902" = type { %"class.blink::Animation"* }
%"class.blink::Animation" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::CompositorAnimationDelegate", %"class.blink::CompositorAnimationClient", %"class.blink::AnimationEffectOwner", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.WTF::String", i32, [4 x i8], double, %"class.absl::optional.818", %"class.absl::optional.809", %"class.absl::optional.809", %"class.absl::optional.876", %"class.absl::optional.809", i8, [3 x i8], i32, %"class.blink::Member.1032", %"class.blink::Member.1032", %"class.blink::Member.1034", %"class.blink::Member.407", %"class.blink::Member.893", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.blink::Member.1036", %"class.blink::Member.1036", %"class.blink::Member.1036", %"class.std::__1::unique_ptr.1038", i8, [3 x i8], i32, %"class.blink::Member.1044", i8, [7 x i8], %"class.base::TimeTicks", i8, i8, i8, [5 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.1016" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.1004" }
%"class.blink::HeapVector.1004" = type { %"class.WTF::Vector.1007" }
%"class.WTF::Vector.1007" = type { %"class.WTF::VectorBuffer.1008" }
%"class.WTF::VectorBuffer.1008" = type { %"class.WTF::VectorBufferBase.1009", [32 x i8] }
%"class.WTF::VectorBufferBase.1009" = type { %"struct.std::__1::pair.1010"*, i32, i32 }
%"struct.std::__1::pair.1010" = type { %"class.WTF::AtomicString", %"class.blink::Member.1011" }
%"class.blink::Member.1011" = type { %"class.blink::MemberBase.1012" }
%"class.blink::MemberBase.1012" = type { %"class.blink::HeapVector.1013"* }
%"class.blink::HeapVector.1013" = type opaque
%"class.std::__1::unique_ptr.1016" = type { %"class.std::__1::__compressed_pair.1017" }
%"class.std::__1::__compressed_pair.1017" = type { %"struct.std::__1::__compressed_pair_elem.1018" }
%"struct.std::__1::__compressed_pair_elem.1018" = type { %"class.WTF::Vector.1019"* }
%"class.WTF::Vector.1019" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1023" }
%"class.blink::WeakMember.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::CompositorAnimationDelegate" = type { i32 (...)** }
%"class.blink::CompositorAnimationClient" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1032" = type { %"class.blink::MemberBase.1033" }
%"class.blink::MemberBase.1033" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.blink::Member.1034" = type { %"class.blink::MemberBase.1035" }
%"class.blink::MemberBase.1035" = type { %"class.blink::AnimationEffect"* }
%"class.blink::Member.1036" = type { %"class.blink::MemberBase.1037" }
%"class.blink::MemberBase.1037" = type { %"class.blink::Event"* }
%"class.blink::Event" = type opaque
%"class.std::__1::unique_ptr.1038" = type { %"class.std::__1::__compressed_pair.1039" }
%"class.std::__1::__compressed_pair.1039" = type { %"struct.std::__1::__compressed_pair_elem.1040" }
%"struct.std::__1::__compressed_pair_elem.1040" = type { %"class.blink::Animation::CompositorState"* }
%"class.blink::Animation::CompositorState" = type { %"class.absl::optional.818", %"class.absl::optional.818", double, i8, i32 }
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Animation::CompositorAnimationHolder"* }
%"class.blink::Animation::CompositorAnimationHolder" = type { %"class.blink::ThreadState::PrefinalizerRegistration.1048", %"class.std::__1::unique_ptr.1049", %"class.blink::Member.901" }
%"class.blink::ThreadState::PrefinalizerRegistration.1048" = type { i8 }
%"class.std::__1::unique_ptr.1049" = type { %"class.std::__1::__compressed_pair.1050" }
%"class.std::__1::__compressed_pair.1050" = type { %"struct.std::__1::__compressed_pair_elem.1051" }
%"struct.std::__1::__compressed_pair_elem.1051" = type { %"class.blink::CompositorAnimation"* }
%"class.blink::CompositorAnimation" = type opaque
%"class.blink::HeapHashSet.903" = type { %"class.WTF::HashSet.906" }
%"class.WTF::HashSet.906" = type { %"class.WTF::HashTable.907" }
%"class.WTF::HashTable.907" = type <{ %"class.blink::WeakMember.909"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.909" = type opaque
%"class.std::__1::unique_ptr.910" = type { %"class.std::__1::__compressed_pair.911" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem.912" }
%"struct.std::__1::__compressed_pair_elem.912" = type { %"class.blink::CompositorAnimationTimeline"* }
%"class.blink::CompositorAnimationTimeline" = type { %class.scoped_refptr.913 }
%class.scoped_refptr.913 = type { %"class.cc::AnimationTimeline"* }
%"class.cc::AnimationTimeline" = type <{ i32 (...)**, %"class.base::RefCounted.914", [4 x i8], %"class.std::__1::unordered_map", i32, [4 x i8], %"class.cc::AnimationHost"*, i8, i8, [6 x i8] }>
%"class.base::RefCounted.914" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.915" }
%"class.std::__1::__hash_table.915" = type <{ %"class.std::__1::unique_ptr.916", %"class.std::__1::__compressed_pair.926", %"class.std::__1::__compressed_pair.931", %"class.std::__1::__compressed_pair.935", [4 x i8] }>
%"class.std::__1::unique_ptr.916" = type { %"class.std::__1::__compressed_pair.917" }
%"class.std::__1::__compressed_pair.917" = type { %"struct.std::__1::__compressed_pair_elem.918", %"struct.std::__1::__compressed_pair_elem.920" }
%"struct.std::__1::__compressed_pair_elem.918" = type { %"struct.std::__1::__hash_node_base.919"** }
%"struct.std::__1::__hash_node_base.919" = type { %"struct.std::__1::__hash_node_base.919"* }
%"struct.std::__1::__compressed_pair_elem.920" = type { %"class.std::__1::__bucket_list_deallocator.921" }
%"class.std::__1::__bucket_list_deallocator.921" = type { %"class.std::__1::__compressed_pair.922" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"struct.std::__1::__hash_node_base.919" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"class.cc::AnimationHost" = type opaque
%"class.absl::optional.943" = type { %"class.absl::optional_internal::optional_data.944" }
%"class.absl::optional_internal::optional_data.944" = type { %"class.absl::optional_internal::optional_data_base.945" }
%"class.absl::optional_internal::optional_data_base.945" = type { %"class.absl::optional_internal::optional_data_dtor_base.946" }
%"class.absl::optional_internal::optional_data_dtor_base.946" = type { i8, %union.anon.947 }
%union.anon.947 = type { %"struct.blink::AnimationTimeline::PhaseAndTime" }
%"struct.blink::AnimationTimeline::PhaseAndTime" = type { i32, %"class.absl::optional.948" }
%"class.absl::optional.948" = type { %"class.absl::optional_internal::optional_data.949" }
%"class.absl::optional_internal::optional_data.949" = type { %"class.absl::optional_internal::optional_data_base.950" }
%"class.absl::optional_internal::optional_data_base.950" = type { %"class.absl::optional_internal::optional_data_dtor_base.951" }
%"class.absl::optional_internal::optional_data_dtor_base.951" = type { i8, %union.anon.952 }
%union.anon.952 = type { %"class.base::TimeDelta" }
%"class.blink::HeapHashSet.959" = type { %"class.WTF::HashSet.962" }
%"class.WTF::HashSet.962" = type { %"class.WTF::HashTable.963" }
%"class.WTF::HashTable.963" = type <{ %"class.blink::Member.965"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.965" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::Animation"* }
%"class.WTF::Vector.954" = type { %"class.WTF::VectorBuffer.955" }
%"class.WTF::VectorBuffer.955" = type { %"class.WTF::VectorBufferBase.956" }
%"class.WTF::VectorBufferBase.956" = type { i32*, i32, i32 }
%"class.blink::HeapVector.966" = type { %"class.WTF::Vector.969" }
%"class.WTF::Vector.969" = type { %"class.WTF::VectorBuffer.970" }
%"class.WTF::VectorBuffer.970" = type { %"class.WTF::VectorBufferBase.971" }
%"class.WTF::VectorBufferBase.971" = type { %"class.blink::UpdatedCSSAnimation"*, i32, i32 }
%"class.blink::UpdatedCSSAnimation" = type { i32, %"class.blink::Member.901", %"class.blink::Member.805", %"struct.blink::Timing", %"class.blink::Member.881", i32, %"class.blink::Member.893", %"class.WTF::Vector.655" }
%"class.blink::HeapVector.973" = type { %"class.WTF::Vector.976" }
%"class.WTF::Vector.976" = type { %"class.WTF::VectorBuffer.977" }
%"class.WTF::VectorBuffer.977" = type { %"class.WTF::VectorBufferBase.978" }
%"class.WTF::VectorBufferBase.978" = type { %"class.blink::Member.901"*, i32, i32 }
%"class.blink::HeapHashMap.980" = type { %"class.WTF::HashMap.983" }
%"class.WTF::HashMap.983" = type { %"class.WTF::HashTable.984" }
%"class.WTF::HashTable.984" = type <{ %"struct.WTF::KeyValuePair.986"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.986" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1510" }
%"class.blink::Member.1510" = type { %"class.blink::MemberBase.1511" }
%"class.blink::MemberBase.1511" = type { %"struct.blink::CSSAnimationUpdate::NewTransition"* }
%"struct.blink::CSSAnimationUpdate::NewTransition" = type { i32 (...)**, %"class.blink::PropertyHandle", %class.scoped_refptr.254, %class.scoped_refptr.254, %class.scoped_refptr.254, double, %"class.blink::Member.805" }
%"class.WTF::HashSet.987" = type { %"class.WTF::HashTable.988" }
%"class.WTF::HashTable.988" = type <{ %"class.blink::PropertyHandle"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.991" = type { %"class.WTF::HashMap.994" }
%"class.WTF::HashMap.994" = type { %"class.WTF::HashTable.995" }
%"class.WTF::HashTable.995" = type <{ %"struct.WTF::KeyValuePair.997"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.997" = type { %"class.blink::PropertyHandle", %"class.blink::Member.1500" }
%"class.blink::Member.1500" = type { %"class.blink::MemberBase.1501" }
%"class.blink::MemberBase.1501" = type { %"class.blink::HeapVector.1502"* }
%"class.blink::HeapVector.1502" = type { %"class.WTF::Vector.1505" }
%"class.WTF::Vector.1505" = type { %"class.WTF::VectorBuffer.1506" }
%"class.WTF::VectorBuffer.1506" = type { %"class.WTF::VectorBufferBase.1507", [8 x i8] }
%"class.WTF::VectorBufferBase.1507" = type { %"class.blink::Member.1487"*, i32, i32 }
%"class.blink::FontBuilder" = type <{ %"class.blink::Document"*, %"class.blink::TreeScope"*, %"class.blink::FontDescription", i32, [4 x i8] }>
%"class.blink::PseudoElement" = type opaque
%"class.blink::ElementStyleResources" = type { %"class.blink::Element"*, %"class.WTF::HashSet.998", %"class.WTF::HashSet.998", float, %"class.blink::PseudoElement"* }
%"class.WTF::HashSet.998" = type { %"class.WTF::HashTable.999" }
%"class.WTF::HashTable.999" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.407", %class.scoped_refptr.254, %"class.blink::SelectorFilter", %"class.blink::Member.1440", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1416" }
%"class.blink::HeapHashMap.1416" = type { %"class.WTF::HashMap.1419" }
%"class.WTF::HashMap.1419" = type { %"class.WTF::HashTable.1420" }
%"class.WTF::HashTable.1420" = type <{ %"struct.WTF::KeyValuePair.1422"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1422" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1423", %"class.std::__1::unique_ptr.1434" }
%"class.blink::HeapVector.1423" = type { %"class.WTF::Vector.1426" }
%"class.WTF::Vector.1426" = type { %"class.WTF::VectorBuffer.1427" }
%"class.WTF::VectorBuffer.1427" = type { %"class.WTF::VectorBufferBase.1428" }
%"class.WTF::VectorBufferBase.1428" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.424", %"class.WTF::Vector.1429" }
%"class.WTF::Vector.1429" = type { %"class.WTF::VectorBuffer.1430" }
%"class.WTF::VectorBuffer.1430" = type { %"class.WTF::VectorBufferBase.956", [16 x i8] }
%"class.std::__1::unique_ptr.1434" = type { %"class.std::__1::__compressed_pair.1435" }
%"class.std::__1::__compressed_pair.1435" = type { %"struct.std::__1::__compressed_pair_elem.1436" }
%"struct.std::__1::__compressed_pair_elem.1436" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1440" = type { %"class.blink::MemberBase.1441" }
%"class.blink::MemberBase.1441" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.std::__1::unique_ptr.1442" = type { %"class.std::__1::__compressed_pair.1443" }
%"class.std::__1::__compressed_pair.1443" = type { %"struct.std::__1::__compressed_pair_elem.1444" }
%"struct.std::__1::__compressed_pair_elem.1444" = type { %"class.blink::InheritedLengthListChecker"* }
%"class.blink::InheritedLengthListChecker" = type { %"class.blink::CSSInterpolationType::CSSConversionChecker", %"class.blink::CSSProperty"*, %"class.WTF::Vector.753" }
%"class.blink::CSSInterpolationType::CSSConversionChecker" = type { %"class.blink::InterpolationType::ConversionChecker" }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.332", %"class.blink::DataRef.504", %"class.blink::DataRef.508", %"class.blink::DataRef.703", %"class.blink::DataRef.766", %"class.blink::DataRef.770", %"class.blink::DataRef.774", %"class.blink::DataRef.778", [20 x i8], [4 x i8] }>
%"class.WTF::Vector.1451" = type { %"class.WTF::VectorBuffer.1452" }
%"class.WTF::VectorBuffer.1452" = type { %"class.WTF::VectorBufferBase.1453", [32 x i8] }
%"class.WTF::VectorBufferBase.1453" = type { %"class.blink::Member"*, i32, i32 }
%"struct.blink::PairwiseInterpolationValue" = type { %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.205", %class.scoped_refptr.211 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.blink::UnderlyingValueOwner" = type { %"class.blink::UnderlyingValue", %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* }
%"class.blink::UnderlyingValue" = type { i32 (...)** }
%"class.base::RepeatingCallback.1459" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.1460" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.1461" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.blink::InterpolationEnvironment" = type { i32 (...)**, %"class.blink::InterpolationTypesMap"* }
%"class.blink::InterpolationTypesMap" = type { i32 (...)** }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NonInterpolableList" = type { %"class.blink::NonInterpolableValue.base", %"class.WTF::Vector.1469" }
%"class.blink::NonInterpolableValue.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.212" }>

$_ZN5blink26ListInterpolationFunctions33InterpolableValuesKnownCompatibleEPKNS_17InterpolableValueES3_ = comdat any

$_ZN5blink20CSSInterpolationTypeD2Ev = comdat any

$_ZN5blink30CSSLengthListInterpolationTypeD0Ev = comdat any

$_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE = comdat any

$_ZNK5blink20CSSInterpolationType14CreateCSSValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERKNS_18StyleResolverStateE = comdat any

$_ZNK5blink20CSSInterpolationType33PreInterpolationCompositeIfNeededENS_18InterpolationValueERKS1_NS_11EffectModel18CompositeOperationERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS8_14default_deleteISB_EEEELj0ENS6_18PartitionAllocatorEEE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink20NonInterpolableValueEEEEmm = comdat any

$_ZNK3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorI13scoped_refptrIKN5blink20NonInterpolableValueEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink19NonInterpolableListD2Ev = comdat any

$_ZN5blink19NonInterpolableListD0Ev = comdat any

$_ZNK5blink19NonInterpolableList7GetTypeEv = comdat any

$_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink17InterpolationTypeD2Ev = comdat any

$_ZN5blink17InterpolationTypeD0Ev = comdat any

$_ZNK5blink17InterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_ = comdat any

$_ZNK5blink17InterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd = comdat any

$_ZN5blink23UnderlyingLengthCheckerD0Ev = comdat any

$_ZNK5blink23UnderlyingLengthChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE = comdat any

$_ZN5blink17InterpolationType17ConversionCheckerD2Ev = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_23UnderlyingLengthCheckerENS6_ISC_EEEEEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm = comdat any

$_ZN5blink26InheritedLengthListCheckerD2Ev = comdat any

$_ZN5blink26InheritedLengthListCheckerD0Ev = comdat any

$_ZNK5blink20CSSInterpolationType20CSSConversionChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE = comdat any

$_ZNK5blink26InheritedLengthListChecker7IsValidERKNS_18StyleResolverStateERKNS_18InterpolationValueE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink6LengthEEEmm = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_26InheritedLengthListCheckerENS6_ISC_EEEEEEvOT_ = comdat any

$_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFbPKN5blink17InterpolableValueES6_EJEEES7_E3RunEPNS0_13BindStateBaseES6_S6_ = comdat any

$_ZN4base8internal9BindStateIPFbPKN5blink17InterpolableValueES5_EJEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFbPKN5blink20NonInterpolableValueES6_EJEEES7_E3RunEPNS0_13BindStateBaseES6_S6_ = comdat any

$_ZN4base8internal9BindStateIPFbPKN5blink20NonInterpolableValueES5_EJEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZTVN5blink19NonInterpolableListE = comdat any

$_ZTVN5blink17InterpolationTypeE = comdat any

$_ZTVN5blink23UnderlyingLengthCheckerE = comdat any

$_ZTVN5blink26InheritedLengthListCheckerE = comdat any

@_ZTVN5blink30CSSLengthListInterpolationTypeE = hidden unnamed_addr constant { [18 x i8*] } { [18 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::CSSInterpolationType"*)* @_ZN5blink20CSSInterpolationTypeD2Ev to i8*), i8* bitcast (void (%"class.blink::CSSLengthListInterpolationType"*)* @_ZN5blink30CSSLengthListInterpolationTypeD0Ev to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.214"*)* @_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.214"*)* @_ZNK5blink20CSSInterpolationType18MaybeConvertSingleERKNS_8Keyframe24PropertySpecificKeyframeERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSD_14default_deleteISG_EEEELj0ENSB_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::CSSLengthListInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink30CSSLengthListInterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_ to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"class.blink::InterpolationEnvironment"*)* @_ZNK5blink20CSSInterpolationType27MaybeConvertUnderlyingValueERKNS_24InterpolationEnvironmentE to i8*), i8* bitcast (void (%"class.blink::CSSLengthListInterpolationType"*, %"class.blink::UnderlyingValueOwner"*, double, %"struct.blink::InterpolationValue"*, double)* @_ZNK5blink30CSSLengthListInterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd to i8*), i8* bitcast (void (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"*)* @_ZNK5blink20CSSInterpolationType5ApplyERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_24InterpolationEnvironmentE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSLengthListInterpolationType"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.214"*)* @_ZNK5blink30CSSLengthListInterpolationType19MaybeConvertNeutralERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSLengthListInterpolationType"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.214"*)* @_ZNK5blink30CSSLengthListInterpolationType19MaybeConvertInitialERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSLengthListInterpolationType"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.214"*)* @_ZNK5blink30CSSLengthListInterpolationType19MaybeConvertInheritERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSLengthListInterpolationType"*, %"class.blink::CSSValue"*, %"class.blink::StyleResolverState"*, %"class.WTF::Vector.214"*)* @_ZNK5blink30CSSLengthListInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS9_14default_deleteISC_EEEELj0ENS7_18PartitionAllocatorEEE to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)* @_ZNK5blink20CSSInterpolationType14CreateCSSValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERKNS_18StyleResolverStateE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*, i32, %"class.WTF::Vector.214"*)* @_ZNK5blink20CSSInterpolationType33PreInterpolationCompositeIfNeededENS_18InterpolationValueERKS1_NS_11EffectModel18CompositeOperationERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS8_14default_deleteISB_EEEELj0ENS6_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"struct.blink::InterpolationValue"*, %"class.blink::CSSLengthListInterpolationType"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink30CSSLengthListInterpolationType43MaybeConvertStandardPropertyUnderlyingValueERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::CSSLengthListInterpolationType"*, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"*)* @_ZNK5blink30CSSLengthListInterpolationType26ApplyStandardPropertyValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_18StyleResolverStateE to i8*)] }, align 8
@_ZTVN5blink16InterpolableListE = external unnamed_addr constant { [20 x i8*] }, align 8
@.str = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.1 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEEEEPKcv = private unnamed_addr constant [147 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::InterpolableValue, std::__1::default_delete<blink::InterpolableValue> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink20NonInterpolableValueEEEEPKcv = private unnamed_addr constant [96 x i8] c"const char *WTF::GetStringWithTypeName() [T = scoped_refptr<const blink::NonInterpolableValue>]\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.3 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZTVN5blink19NonInterpolableListE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::NonInterpolableList"*)* @_ZN5blink19NonInterpolableListD2Ev to i8*), i8* bitcast (void (%"class.blink::NonInterpolableList"*)* @_ZN5blink19NonInterpolableListD0Ev to i8*), i8* bitcast (i8* (%"class.blink::NonInterpolableList"*)* @_ZNK5blink19NonInterpolableList7GetTypeEv to i8*)] }, comdat, align 8
@_ZN5blink19NonInterpolableList12static_type_E = external local_unnamed_addr global i8*, align 8
@_ZTVN5blink20CSSInterpolationTypeE = external unnamed_addr constant { [18 x i8*] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZTVN5blink17InterpolationTypeE = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InterpolationType"*)* @_ZN5blink17InterpolationTypeD2Ev to i8*), i8* bitcast (void (%"class.blink::InterpolationType"*)* @_ZN5blink17InterpolationTypeD0Ev to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.214"*)* @_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink17InterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_ to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"*, double, %"struct.blink::InterpolationValue"*, double)* @_ZNK5blink17InterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN5blink23UnderlyingLengthCheckerE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InterpolationType::ConversionChecker"*)* @_ZN5blink17InterpolationType17ConversionCheckerD2Ev to i8*), i8* bitcast (void (%"class.blink::UnderlyingLengthChecker"*)* @_ZN5blink23UnderlyingLengthCheckerD0Ev to i8*), i8* bitcast (i1 (%"class.blink::UnderlyingLengthChecker"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink23UnderlyingLengthChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE to i8*)] }, comdat, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEEEEPKcv = private unnamed_addr constant [185 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::InterpolationType::ConversionChecker, std::__1::default_delete<blink::InterpolationType::ConversionChecker> >]\00", align 1
@_ZTVN5blink26InheritedLengthListCheckerE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InheritedLengthListChecker"*)* @_ZN5blink26InheritedLengthListCheckerD2Ev to i8*), i8* bitcast (void (%"class.blink::InheritedLengthListChecker"*)* @_ZN5blink26InheritedLengthListCheckerD0Ev to i8*), i8* bitcast (i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink20CSSInterpolationType20CSSConversionChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE to i8*), i8* bitcast (i1 (%"class.blink::InheritedLengthListChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)* @_ZNK5blink26InheritedLengthListChecker7IsValidERKNS_18StyleResolverStateERKNS_18InterpolationValueE to i8*)] }, comdat, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink6LengthEEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::Length]\00", align 1

@_ZN5blink30CSSLengthListInterpolationTypeC1ENS_14PropertyHandleE = hidden unnamed_addr alias void (%"class.blink::CSSLengthListInterpolationType"*, %"class.blink::PropertyHandle"*), void (%"class.blink::CSSLengthListInterpolationType"*, %"class.blink::PropertyHandle"*)* @_ZN5blink30CSSLengthListInterpolationTypeC2ENS_14PropertyHandleE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink30CSSLengthListInterpolationTypeC2ENS_14PropertyHandleE(%"class.blink::CSSLengthListInterpolationType"*, %"class.blink::PropertyHandle"* nocapture readonly byval(%"class.blink::PropertyHandle") align 8) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = getelementptr inbounds %"class.blink::CSSLengthListInterpolationType", %"class.blink::CSSLengthListInterpolationType"* %0, i64 0, i32 0
  %5 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %6 = bitcast %"class.blink::PropertyHandle"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* nonnull align 8 %6, i64 16, i1 false) #11
  %7 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #11
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #11
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %2, %11, %26
  tail call void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"* %4, %"class.blink::PropertyHandle"* nonnull byval(%"class.blink::PropertyHandle") align 8 %3, %"class.blink::PropertyRegistration"* null) #11
  %29 = getelementptr inbounds %"class.blink::CSSLengthListInterpolationType", %"class.blink::CSSLengthListInterpolationType"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink30CSSLengthListInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  %30 = getelementptr inbounds %"class.blink::CSSLengthListInterpolationType", %"class.blink::CSSLengthListInterpolationType"* %0, i64 0, i32 1
  %31 = getelementptr inbounds %"class.blink::CSSLengthListInterpolationType", %"class.blink::CSSLengthListInterpolationType"* %0, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0
  %32 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::CSSLengthListInterpolationType", %"class.blink::CSSLengthListInterpolationType"* %0, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8, !noalias !3
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %64, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4, !noalias !3
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %53

43:                                               ; preds = %36
  %44 = zext i32 %42 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #11
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %43
  tail call void @llvm.trap() #11, !noalias !3
  unreachable

51:                                               ; preds = %43
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %41, align 4, !noalias !3
  br label %53

53:                                               ; preds = %51, %36
  %54 = phi i32 [ %52, %51 ], [ %42, %36 ]
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  %59 = add i32 %54, -1
  store i32 %59, i32* %41, align 4
  br label %60

60:                                               ; preds = %58, %53
  %61 = phi i32 [ %59, %58 ], [ %54, %53 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #11
  br label %64

64:                                               ; preds = %28, %60, %63
  %65 = tail call i32 @_ZN5blink27LengthListPropertyFunctions13GetValueRangeERKNS_11CSSPropertyE(%"class.blink::CSSProperty"* dereferenceable(24) %32) #11
  store i32 %65, i32* %30, align 8
  br i1 %10, label %79, label %66

66:                                               ; preds = %64
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #11
  br label %79

79:                                               ; preds = %64, %75, %78
  ret void
}

declare void @_ZN5blink20CSSInterpolationTypeC2ENS_14PropertyHandleEPKNS_20PropertyRegistrationE(%"class.blink::CSSInterpolationType"*, %"class.blink::PropertyHandle"* byval(%"class.blink::PropertyHandle") align 8, %"class.blink::PropertyRegistration"*) unnamed_addr #1

declare i32 @_ZN5blink27LengthListPropertyFunctions13GetValueRangeERKNS_11CSSPropertyE(%"class.blink::CSSProperty"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink30CSSLengthListInterpolationType19MaybeConvertNeutralERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSLengthListInterpolationType"* nocapture readnone, %"struct.blink::InterpolationValue"* nocapture readonly dereferenceable(16), %"class.WTF::Vector.214"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::Vector.1469", align 8
  %6 = alloca %"class.std::__1::unique_ptr.220", align 8
  %7 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %7, align 8
  %9 = icmp eq %"class.blink::InterpolableValue"* %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %4
  %11 = bitcast %"class.blink::InterpolableValue"* %8 to %"class.blink::InterpolableList"*
  %12 = getelementptr inbounds %"class.blink::InterpolableList", %"class.blink::InterpolableList"* %11, i64 0, i32 1, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %4, %10
  %15 = phi i32 [ %13, %10 ], [ 0, %4 ]
  %16 = bitcast %"class.std::__1::unique_ptr.220"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = tail call noalias i8* @malloc(i64 24) #11
  %18 = bitcast i8* %17 to i32 (...)***
  %19 = getelementptr inbounds i8, i8* %17, i64 8
  %20 = bitcast i8* %19 to %"class.blink::InterpolationType"**
  store %"class.blink::InterpolationType"* null, %"class.blink::InterpolationType"** %20, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink23UnderlyingLengthCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %21 = getelementptr inbounds i8, i8* %17, i64 16
  %22 = bitcast i8* %21 to i32*
  store i32 %15, i32* %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %6, i64 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.std::__1::unique_ptr.220"* %6 to i8**
  store i8* %17, i8** %24, align 8
  %25 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %3, i64 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %3, i64 0, i32 0, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %26, %28
  br i1 %29, label %39, label %30, !prof !2

30:                                               ; preds = %14
  %31 = ptrtoint i8* %17 to i64
  %32 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %3, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.std::__1::unique_ptr.217"*, %"class.std::__1::unique_ptr.217"** %32, align 8
  %34 = zext i32 %26 to i64
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.217"* %33, i64 %34
  store %"class.blink::UnderlyingLengthChecker"* null, %"class.blink::UnderlyingLengthChecker"** %23, align 8
  %36 = bitcast %"class.std::__1::unique_ptr.217"* %35 to i64*
  store i64 %31, i64* %36, align 8
  %37 = load i32, i32* %25, align 4
  %38 = add i32 %37, 1
  store i32 %38, i32* %25, align 4
  br label %40

39:                                               ; preds = %14
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_23UnderlyingLengthCheckerENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.214"* %3, %"class.std::__1::unique_ptr.220"* nonnull dereferenceable(8) %6) #11
  br label %40

40:                                               ; preds = %30, %39
  %41 = load %"class.blink::UnderlyingLengthChecker"*, %"class.blink::UnderlyingLengthChecker"** %23, align 8
  store %"class.blink::UnderlyingLengthChecker"* null, %"class.blink::UnderlyingLengthChecker"** %23, align 8
  %42 = icmp eq %"class.blink::UnderlyingLengthChecker"* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %40
  %44 = bitcast %"class.blink::UnderlyingLengthChecker"* %41 to void (%"class.blink::UnderlyingLengthChecker"*)***
  %45 = load void (%"class.blink::UnderlyingLengthChecker"*)**, void (%"class.blink::UnderlyingLengthChecker"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.blink::UnderlyingLengthChecker"*)*, void (%"class.blink::UnderlyingLengthChecker"*)** %45, i64 1
  %47 = load void (%"class.blink::UnderlyingLengthChecker"*)*, void (%"class.blink::UnderlyingLengthChecker"*)** %46, align 8
  call void %47(%"class.blink::UnderlyingLengthChecker"* nonnull %41) #11
  br label %48

48:                                               ; preds = %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  %49 = icmp eq i32 %15, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %48
  %51 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 16, i1 false) #11
  br label %212

52:                                               ; preds = %48
  %53 = call noalias i8* @malloc(i64 24) #11, !noalias !6
  %54 = bitcast i8* %53 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8, !noalias !6
  %55 = getelementptr inbounds i8, i8* %53, i64 8
  %56 = getelementptr inbounds i8, i8* %53, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = zext i32 %15 to i64
  %59 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm(i64 %58) #11, !noalias !6
  %60 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %59, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #11, !noalias !6
  %61 = ptrtoint i8* %60 to i64
  %62 = bitcast i8* %55 to i64*
  store atomic i64 %61, i64* %62 monotonic, align 8, !noalias !6
  %63 = lshr i64 %59, 3
  %64 = trunc i64 %63 to i32
  store i32 %64, i32* %57, align 8, !noalias !6
  %65 = shl nuw nsw i64 %58, 3
  %66 = getelementptr inbounds i8, i8* %53, i64 20
  %67 = bitcast i8* %66 to i32*
  store i32 %15, i32* %67, align 4, !noalias !6
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 %65, i1 false) #11, !noalias !6
  %68 = ptrtoint i8* %53 to i64
  %69 = bitcast %"class.WTF::Vector.1469"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #11, !noalias !6
  %70 = getelementptr inbounds %"class.WTF::Vector.1469", %"class.WTF::Vector.1469"* %5, i64 0, i32 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.WTF::Vector.1469", %"class.WTF::Vector.1469"* %5, i64 0, i32 0, i32 0, i32 1
  %72 = getelementptr inbounds %"class.WTF::Vector.1469", %"class.WTF::Vector.1469"* %5, i64 0, i32 0, i32 0, i32 2
  %73 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink20NonInterpolableValueEEEEmm(i64 %58) #11, !noalias !6
  %74 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %73, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink20NonInterpolableValueEEEEPKcv, i64 0, i64 0)) #11, !noalias !6
  %75 = ptrtoint i8* %74 to i64
  %76 = bitcast %"class.WTF::Vector.1469"* %5 to i64*
  store atomic i64 %75, i64* %76 monotonic, align 8, !noalias !6
  %77 = lshr i64 %73, 3
  %78 = trunc i64 %77 to i32
  store i32 %78, i32* %71, align 8, !noalias !6
  store i32 %15, i32* %72, align 4, !noalias !6
  call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 %65, i1 false) #11, !noalias !6
  %79 = bitcast i8* %55 to %"class.WTF::Vector.1464"*
  br label %80

80:                                               ; preds = %117, %52
  %81 = phi i32 [ 0, %52 ], [ %118, %117 ]
  %82 = call %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength13CreateNeutralEv() #11, !noalias !9
  %83 = icmp eq %"class.blink::InterpolableLength"* %82, null
  br i1 %83, label %115, label %84

84:                                               ; preds = %80
  %85 = ptrtoint %"class.blink::InterpolableLength"* %82 to i64
  %86 = call dereferenceable(8) %"class.std::__1::unique_ptr.205"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1464"* %79, i32 %81) #11, !noalias !6
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.205"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %87, align 8, !noalias !6
  %89 = bitcast %"class.std::__1::unique_ptr.205"* %86 to i64*
  store i64 %85, i64* %89, align 8, !noalias !6
  %90 = icmp eq %"class.blink::InterpolableValue"* %88, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %84
  %92 = bitcast %"class.blink::InterpolableValue"* %88 to void (%"class.blink::InterpolableValue"*)***
  %93 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %92, align 8, !noalias !6
  %94 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %93, i64 1
  %95 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %94, align 8, !noalias !6
  call void %95(%"class.blink::InterpolableValue"* nonnull %88) #11, !noalias !6
  br label %96

96:                                               ; preds = %91, %84
  %97 = call dereferenceable(8) %class.scoped_refptr.211* @_ZN3WTF6VectorI13scoped_refptrIKN5blink20NonInterpolableValueEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1469"* nonnull %5, i32 %81) #11, !noalias !6
  %98 = bitcast %class.scoped_refptr.211* %97 to i64*
  %99 = getelementptr inbounds %class.scoped_refptr.211, %class.scoped_refptr.211* %97, i64 0, i32 0
  %100 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %99, align 8, !noalias !6
  store i64 0, i64* %98, align 8, !noalias !6
  %101 = icmp eq %"class.blink::NonInterpolableValue"* %100, null
  br i1 %101, label %117, label %102

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %100, i64 0, i32 1, i32 0
  %104 = getelementptr inbounds %"class.base::RefCounted.213", %"class.base::RefCounted.213"* %103, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %104) #11, !noalias !6
  %105 = getelementptr inbounds %"class.base::RefCounted.213", %"class.base::RefCounted.213"* %103, i64 0, i32 0, i32 0
  %106 = load i32, i32* %105, align 4, !noalias !6
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %117

108:                                              ; preds = %102
  %109 = getelementptr inbounds %"class.base::RefCounted.213", %"class.base::RefCounted.213"* %103, i64 -2
  %110 = bitcast %"class.base::RefCounted.213"* %109 to %"class.blink::NonInterpolableValue"*
  %111 = bitcast %"class.base::RefCounted.213"* %109 to void (%"class.blink::NonInterpolableValue"*)***
  %112 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %111, align 8, !noalias !6
  %113 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %112, i64 1
  %114 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %113, align 8, !noalias !6
  call void %114(%"class.blink::NonInterpolableValue"* nonnull %110) #11, !noalias !6
  br label %117

115:                                              ; preds = %80
  %116 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %116, i8 0, i64 16, i1 false) #11, !alias.scope !6
  br label %167

117:                                              ; preds = %108, %102, %96
  %118 = add nuw i32 %81, 1
  %119 = icmp eq i32 %118, %15
  br i1 %119, label %120, label %80

120:                                              ; preds = %117
  %121 = load i32, i32* %71, align 8, !noalias !6
  %122 = call noalias i8* @malloc(i64 32) #11, !noalias !6
  %123 = getelementptr inbounds i8, i8* %122, i64 8
  %124 = bitcast i8* %123 to i32*
  store i32 1, i32* %124, align 4, !noalias !6
  %125 = bitcast i8* %122 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink19NonInterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %125, align 8, !noalias !6
  %126 = getelementptr inbounds i8, i8* %122, i64 16
  %127 = bitcast i8* %126 to %class.scoped_refptr.211**
  store %class.scoped_refptr.211* null, %class.scoped_refptr.211** %127, align 8, !noalias !6
  %128 = getelementptr inbounds i8, i8* %122, i64 24
  %129 = bitcast i8* %128 to i32*
  store i32 0, i32* %129, align 8, !noalias !6
  %130 = icmp eq i32 %121, 0
  br i1 %130, label %140, label %131

131:                                              ; preds = %120
  %132 = zext i32 %121 to i64
  %133 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink20NonInterpolableValueEEEEmm(i64 %132) #11, !noalias !6
  %134 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %133, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink20NonInterpolableValueEEEEPKcv, i64 0, i64 0)) #11, !noalias !6
  %135 = ptrtoint i8* %134 to i64
  %136 = bitcast i8* %126 to i64*
  store atomic i64 %135, i64* %136 monotonic, align 8, !noalias !6
  %137 = lshr i64 %133, 3
  %138 = trunc i64 %137 to i32
  store i32 %138, i32* %129, align 8, !noalias !6
  %139 = bitcast i8* %134 to %class.scoped_refptr.211*
  br label %140

140:                                              ; preds = %131, %120
  %141 = phi %class.scoped_refptr.211* [ null, %120 ], [ %139, %131 ]
  %142 = load i32, i32* %72, align 4, !noalias !6
  %143 = getelementptr inbounds i8, i8* %122, i64 28
  %144 = bitcast i8* %143 to i32*
  store i32 %142, i32* %144, align 4, !noalias !6
  %145 = load %class.scoped_refptr.211*, %class.scoped_refptr.211** %70, align 8, !noalias !6
  %146 = zext i32 %142 to i64
  %147 = getelementptr inbounds %class.scoped_refptr.211, %class.scoped_refptr.211* %145, i64 %146
  %148 = icmp eq i32 %142, 0
  br i1 %148, label %162, label %149

149:                                              ; preds = %140, %158
  %150 = phi %class.scoped_refptr.211* [ %159, %158 ], [ %141, %140 ]
  %151 = phi %class.scoped_refptr.211* [ %160, %158 ], [ %145, %140 ]
  %152 = getelementptr inbounds %class.scoped_refptr.211, %class.scoped_refptr.211* %151, i64 0, i32 0
  %153 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %152, align 8, !noalias !6
  %154 = getelementptr inbounds %class.scoped_refptr.211, %class.scoped_refptr.211* %150, i64 0, i32 0
  store %"class.blink::NonInterpolableValue"* %153, %"class.blink::NonInterpolableValue"** %154, align 8, !noalias !6
  %155 = icmp eq %"class.blink::NonInterpolableValue"* %153, null
  br i1 %155, label %158, label %156

156:                                              ; preds = %149
  %157 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %153, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %157) #11, !noalias !6
  br label %158

158:                                              ; preds = %156, %149
  %159 = getelementptr inbounds %class.scoped_refptr.211, %class.scoped_refptr.211* %150, i64 1
  %160 = getelementptr inbounds %class.scoped_refptr.211, %class.scoped_refptr.211* %151, i64 1
  %161 = icmp eq %class.scoped_refptr.211* %160, %147
  br i1 %161, label %162, label %149

162:                                              ; preds = %158, %140
  %163 = ptrtoint i8* %122 to i64
  %164 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %68, i64* %164, align 8, !alias.scope !6
  %165 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %166 = bitcast %class.scoped_refptr.211* %165 to i64*
  store i64 %163, i64* %166, align 8, !alias.scope !6
  br label %167

167:                                              ; preds = %162, %115
  %168 = phi i64 [ 0, %162 ], [ %68, %115 ]
  %169 = load %class.scoped_refptr.211*, %class.scoped_refptr.211** %70, align 8, !noalias !6
  %170 = icmp eq %class.scoped_refptr.211* %169, null
  br i1 %170, label %204, label %171, !prof !12

171:                                              ; preds = %167
  %172 = bitcast %class.scoped_refptr.211* %169 to i8*
  %173 = load i32, i32* %72, align 4, !noalias !6
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %202, label %175, !prof !2

175:                                              ; preds = %171
  %176 = zext i32 %173 to i64
  %177 = getelementptr inbounds %class.scoped_refptr.211, %class.scoped_refptr.211* %169, i64 %176
  br label %178

178:                                              ; preds = %196, %175
  %179 = phi %class.scoped_refptr.211* [ %197, %196 ], [ %169, %175 ]
  %180 = getelementptr inbounds %class.scoped_refptr.211, %class.scoped_refptr.211* %179, i64 0, i32 0
  %181 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %180, align 8, !noalias !6
  %182 = icmp eq %"class.blink::NonInterpolableValue"* %181, null
  br i1 %182, label %196, label %183

183:                                              ; preds = %178
  %184 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %181, i64 0, i32 1, i32 0
  %185 = getelementptr inbounds %"class.base::RefCounted.213", %"class.base::RefCounted.213"* %184, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %185) #11, !noalias !6
  %186 = getelementptr inbounds %"class.base::RefCounted.213", %"class.base::RefCounted.213"* %184, i64 0, i32 0, i32 0
  %187 = load i32, i32* %186, align 4, !noalias !6
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %196

189:                                              ; preds = %183
  %190 = getelementptr inbounds %"class.base::RefCounted.213", %"class.base::RefCounted.213"* %184, i64 -2
  %191 = bitcast %"class.base::RefCounted.213"* %190 to %"class.blink::NonInterpolableValue"*
  %192 = bitcast %"class.base::RefCounted.213"* %190 to void (%"class.blink::NonInterpolableValue"*)***
  %193 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %192, align 8, !noalias !6
  %194 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %193, i64 1
  %195 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %194, align 8, !noalias !6
  call void %195(%"class.blink::NonInterpolableValue"* nonnull %191) #11, !noalias !6
  br label %196

196:                                              ; preds = %189, %183, %178
  %197 = getelementptr inbounds %class.scoped_refptr.211, %class.scoped_refptr.211* %179, i64 1
  %198 = icmp eq %class.scoped_refptr.211* %197, %177
  br i1 %198, label %199, label %178

199:                                              ; preds = %196
  store i32 0, i32* %72, align 4, !noalias !6
  %200 = bitcast %"class.WTF::Vector.1469"* %5 to i8**
  %201 = load i8*, i8** %200, align 8, !noalias !6
  br label %202

202:                                              ; preds = %199, %171
  %203 = phi i8* [ %201, %199 ], [ %172, %171 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %203) #11, !noalias !6
  store %class.scoped_refptr.211* null, %class.scoped_refptr.211** %70, align 8, !noalias !6
  br label %204

204:                                              ; preds = %202, %167
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #11, !noalias !6
  %205 = icmp eq i64 %168, 0
  br i1 %205, label %212, label %206

206:                                              ; preds = %204
  %207 = inttoptr i64 %168 to %"class.blink::InterpolableList"*
  %208 = inttoptr i64 %168 to void (%"class.blink::InterpolableList"*)***
  %209 = load void (%"class.blink::InterpolableList"*)**, void (%"class.blink::InterpolableList"*)*** %208, align 8, !noalias !6
  %210 = getelementptr inbounds void (%"class.blink::InterpolableList"*)*, void (%"class.blink::InterpolableList"*)** %209, i64 1
  %211 = load void (%"class.blink::InterpolableList"*)*, void (%"class.blink::InterpolableList"*)** %210, align 8, !noalias !6
  call void %211(%"class.blink::InterpolableList"* nonnull %207) #11, !noalias !6
  br label %212

212:                                              ; preds = %206, %204, %50
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink30CSSLengthListInterpolationType19MaybeConvertInitialERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSLengthListInterpolationType"* nocapture readonly, %"class.blink::StyleResolverState"* nocapture readonly dereferenceable(600), %"class.WTF::Vector.214"* nocapture readnone dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::Vector.753", align 8
  %6 = bitcast %"class.WTF::Vector.753"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::Vector.753", %"class.WTF::Vector.753"* %5, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::Vector.753", %"class.WTF::Vector.753"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false) #11
  %9 = getelementptr inbounds %"class.blink::CSSLengthListInterpolationType", %"class.blink::CSSLengthListInterpolationType"* %1, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0
  %10 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::CSSLengthListInterpolationType", %"class.blink::CSSLengthListInterpolationType"* %1, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8, !noalias !13
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %42, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4, !noalias !13
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %31

21:                                               ; preds = %14
  %22 = zext i32 %20 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #11
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !2

28:                                               ; preds = %21
  tail call void @llvm.trap() #11, !noalias !13
  unreachable

29:                                               ; preds = %21
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %19, align 4, !noalias !13
  br label %31

31:                                               ; preds = %29, %14
  %32 = phi i32 [ %30, %29 ], [ %20, %14 ]
  %33 = load atomic i32, i32* %15 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %31
  %37 = add i32 %32, -1
  store i32 %37, i32* %19, align 4
  br label %38

38:                                               ; preds = %36, %31
  %39 = phi i32 [ %37, %36 ], [ %32, %31 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #11
  br label %42

42:                                               ; preds = %4, %38, %41
  %43 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %2, i64 0, i32 1
  %44 = load %"class.blink::Document"*, %"class.blink::Document"** %43, align 8
  %45 = tail call dereferenceable(80) %"class.blink::StyleResolver"* @_ZNK5blink8Document16GetStyleResolverEv(%"class.blink::Document"* %44) #11
  %46 = tail call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink13StyleResolver12InitialStyleEv(%"class.blink::StyleResolver"* %45) #11
  %47 = call zeroext i1 @_ZN5blink27LengthListPropertyFunctions20GetInitialLengthListERKNS_11CSSPropertyERKNS_13ComputedStyleERN3WTF6VectorINS_6LengthELj0ENS7_18PartitionAllocatorEEE(%"class.blink::CSSProperty"* dereferenceable(24) %10, %"class.blink::ComputedStyle"* dereferenceable(104) %46, %"class.WTF::Vector.753"* nonnull dereferenceable(16) %5) #11
  br i1 %47, label %50, label %48

48:                                               ; preds = %42
  %49 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #11
  br label %51

50:                                               ; preds = %42
  call fastcc void @_ZN5blinkL22MaybeConvertLengthListERKN3WTF6VectorINS_6LengthELj0ENS0_18PartitionAllocatorEEEf(%"struct.blink::InterpolationValue"* sret %0, %"class.WTF::Vector.753"* nonnull dereferenceable(16) %5, float 1.000000e+00)
  br label %51

51:                                               ; preds = %50, %48
  %52 = load %"class.blink::Length"*, %"class.blink::Length"** %7, align 8
  %53 = icmp eq %"class.blink::Length"* %52, null
  br i1 %53, label %75, label %54, !prof !12

54:                                               ; preds = %51
  %55 = bitcast %"class.blink::Length"* %52 to i8*
  %56 = load i32, i32* %8, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %73, label %58, !prof !2

58:                                               ; preds = %54
  %59 = zext i32 %56 to i64
  %60 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %52, i64 %59
  br label %61

61:                                               ; preds = %67, %58
  %62 = phi %"class.blink::Length"* [ %68, %67 ], [ %52, %58 ]
  %63 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %62, i64 0, i32 2
  %64 = load i8, i8* %63, align 1
  %65 = icmp eq i8 %64, 8
  br i1 %65, label %66, label %67

66:                                               ; preds = %61
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %62) #11
  br label %67

67:                                               ; preds = %66, %61
  %68 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %62, i64 1
  %69 = icmp eq %"class.blink::Length"* %68, %60
  br i1 %69, label %70, label %61

70:                                               ; preds = %67
  store i32 0, i32* %8, align 4
  %71 = bitcast %"class.WTF::Vector.753"* %5 to i8**
  %72 = load i8*, i8** %71, align 8
  br label %73

73:                                               ; preds = %70, %54
  %74 = phi i8* [ %72, %70 ], [ %55, %54 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %74) #11
  store %"class.blink::Length"* null, %"class.blink::Length"** %7, align 8
  br label %75

75:                                               ; preds = %51, %73
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret void
}

declare zeroext i1 @_ZN5blink27LengthListPropertyFunctions20GetInitialLengthListERKNS_11CSSPropertyERKNS_13ComputedStyleERN3WTF6VectorINS_6LengthELj0ENS7_18PartitionAllocatorEEE(%"class.blink::CSSProperty"* dereferenceable(24), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.WTF::Vector.753"* dereferenceable(16)) local_unnamed_addr #1

declare dereferenceable(80) %"class.blink::StyleResolver"* @_ZNK5blink8Document16GetStyleResolverEv(%"class.blink::Document"*) local_unnamed_addr #1

declare dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink13StyleResolver12InitialStyleEv(%"class.blink::StyleResolver"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL22MaybeConvertLengthListERKN3WTF6VectorINS_6LengthELj0ENS0_18PartitionAllocatorEEEf(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.WTF::Vector.753"* dereferenceable(16), float) unnamed_addr #0 {
  %4 = alloca %"class.WTF::Vector.1469", align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.753", %"class.WTF::Vector.753"* %1, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #11
  br label %171

10:                                               ; preds = %3
  %11 = tail call noalias i8* @malloc(i64 24) #11, !noalias !16
  %12 = bitcast i8* %11 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8, !noalias !16
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  %14 = getelementptr inbounds i8, i8* %11, i64 16
  %15 = bitcast i8* %14 to i32*
  %16 = zext i32 %6 to i64
  %17 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm(i64 %16) #11, !noalias !16
  %18 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %17, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #11, !noalias !16
  %19 = ptrtoint i8* %18 to i64
  %20 = bitcast i8* %13 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8, !noalias !16
  %21 = lshr i64 %17, 3
  %22 = trunc i64 %21 to i32
  store i32 %22, i32* %15, align 8, !noalias !16
  %23 = shl nuw nsw i64 %16, 3
  %24 = getelementptr inbounds i8, i8* %11, i64 20
  %25 = bitcast i8* %24 to i32*
  store i32 %6, i32* %25, align 4, !noalias !16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 %23, i1 false) #11, !noalias !16
  %26 = ptrtoint i8* %11 to i64
  %27 = bitcast %"class.WTF::Vector.1469"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #11, !noalias !16
  %28 = getelementptr inbounds %"class.WTF::Vector.1469", %"class.WTF::Vector.1469"* %4, i64 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.WTF::Vector.1469", %"class.WTF::Vector.1469"* %4, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::Vector.1469", %"class.WTF::Vector.1469"* %4, i64 0, i32 0, i32 0, i32 2
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink20NonInterpolableValueEEEEmm(i64 %16) #11, !noalias !16
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink20NonInterpolableValueEEEEPKcv, i64 0, i64 0)) #11, !noalias !16
  %33 = ptrtoint i8* %32 to i64
  %34 = bitcast %"class.WTF::Vector.1469"* %4 to i64*
  store atomic i64 %33, i64* %34 monotonic, align 8, !noalias !16
  %35 = lshr i64 %31, 3
  %36 = trunc i64 %35 to i32
  store i32 %36, i32* %29, align 8, !noalias !16
  store i32 %6, i32* %30, align 4, !noalias !16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 %23, i1 false) #11, !noalias !16
  %37 = bitcast i8* %13 to %"class.WTF::Vector.1464"*
  br label %38

38:                                               ; preds = %76, %10
  %39 = phi i32 [ 0, %10 ], [ %77, %76 ]
  %40 = call dereferenceable(8) %"class.blink::Length"* @_ZNK3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.753"* %1, i32 %39) #11, !noalias !19
  %41 = call %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength18MaybeConvertLengthERKNS_6LengthEf(%"class.blink::Length"* dereferenceable(8) %40, float %2) #11, !noalias !19
  %42 = icmp eq %"class.blink::InterpolableLength"* %41, null
  br i1 %42, label %74, label %43

43:                                               ; preds = %38
  %44 = ptrtoint %"class.blink::InterpolableLength"* %41 to i64
  %45 = call dereferenceable(8) %"class.std::__1::unique_ptr.205"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1464"* %37, i32 %39) #11, !noalias !16
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.205"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %46, align 8, !noalias !16
  %48 = bitcast %"class.std::__1::unique_ptr.205"* %45 to i64*
  store i64 %44, i64* %48, align 8, !noalias !16
  %49 = icmp eq %"class.blink::InterpolableValue"* %47, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %43
  %51 = bitcast %"class.blink::InterpolableValue"* %47 to void (%"class.blink::InterpolableValue"*)***
  %52 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %51, align 8, !noalias !16
  %53 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %52, i64 1
  %54 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %53, align 8, !noalias !16
  call void %54(%"class.blink::InterpolableValue"* nonnull %47) #11, !noalias !16
  br label %55

55:                                               ; preds = %50, %43
  %56 = call dereferenceable(8) %class.scoped_refptr.211* @_ZN3WTF6VectorI13scoped_refptrIKN5blink20NonInterpolableValueEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1469"* nonnull %4, i32 %39) #11, !noalias !16
  %57 = bitcast %class.scoped_refptr.211* %56 to i64*
  %58 = getelementptr inbounds %class.scoped_refptr.211, %class.scoped_refptr.211* %56, i64 0, i32 0
  %59 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %58, align 8, !noalias !16
  store i64 0, i64* %57, align 8, !noalias !16
  %60 = icmp eq %"class.blink::NonInterpolableValue"* %59, null
  br i1 %60, label %76, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %59, i64 0, i32 1, i32 0
  %63 = getelementptr inbounds %"class.base::RefCounted.213", %"class.base::RefCounted.213"* %62, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %63) #11, !noalias !16
  %64 = getelementptr inbounds %"class.base::RefCounted.213", %"class.base::RefCounted.213"* %62, i64 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 4, !noalias !16
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %76

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.base::RefCounted.213", %"class.base::RefCounted.213"* %62, i64 -2
  %69 = bitcast %"class.base::RefCounted.213"* %68 to %"class.blink::NonInterpolableValue"*
  %70 = bitcast %"class.base::RefCounted.213"* %68 to void (%"class.blink::NonInterpolableValue"*)***
  %71 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %70, align 8, !noalias !16
  %72 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %71, i64 1
  %73 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %72, align 8, !noalias !16
  call void %73(%"class.blink::NonInterpolableValue"* nonnull %69) #11, !noalias !16
  br label %76

74:                                               ; preds = %38
  %75 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 16, i1 false) #11, !alias.scope !16
  br label %126

76:                                               ; preds = %67, %61, %55
  %77 = add nuw i32 %39, 1
  %78 = icmp eq i32 %77, %6
  br i1 %78, label %79, label %38

79:                                               ; preds = %76
  %80 = load i32, i32* %29, align 8, !noalias !16
  %81 = call noalias i8* @malloc(i64 32) #11, !noalias !16
  %82 = getelementptr inbounds i8, i8* %81, i64 8
  %83 = bitcast i8* %82 to i32*
  store i32 1, i32* %83, align 4, !noalias !16
  %84 = bitcast i8* %81 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink19NonInterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %84, align 8, !noalias !16
  %85 = getelementptr inbounds i8, i8* %81, i64 16
  %86 = bitcast i8* %85 to %class.scoped_refptr.211**
  store %class.scoped_refptr.211* null, %class.scoped_refptr.211** %86, align 8, !noalias !16
  %87 = getelementptr inbounds i8, i8* %81, i64 24
  %88 = bitcast i8* %87 to i32*
  store i32 0, i32* %88, align 8, !noalias !16
  %89 = icmp eq i32 %80, 0
  br i1 %89, label %99, label %90

90:                                               ; preds = %79
  %91 = zext i32 %80 to i64
  %92 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink20NonInterpolableValueEEEEmm(i64 %91) #11, !noalias !16
  %93 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %92, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink20NonInterpolableValueEEEEPKcv, i64 0, i64 0)) #11, !noalias !16
  %94 = ptrtoint i8* %93 to i64
  %95 = bitcast i8* %85 to i64*
  store atomic i64 %94, i64* %95 monotonic, align 8, !noalias !16
  %96 = lshr i64 %92, 3
  %97 = trunc i64 %96 to i32
  store i32 %97, i32* %88, align 8, !noalias !16
  %98 = bitcast i8* %93 to %class.scoped_refptr.211*
  br label %99

99:                                               ; preds = %90, %79
  %100 = phi %class.scoped_refptr.211* [ null, %79 ], [ %98, %90 ]
  %101 = load i32, i32* %30, align 4, !noalias !16
  %102 = getelementptr inbounds i8, i8* %81, i64 28
  %103 = bitcast i8* %102 to i32*
  store i32 %101, i32* %103, align 4, !noalias !16
  %104 = load %class.scoped_refptr.211*, %class.scoped_refptr.211** %28, align 8, !noalias !16
  %105 = zext i32 %101 to i64
  %106 = getelementptr inbounds %class.scoped_refptr.211, %class.scoped_refptr.211* %104, i64 %105
  %107 = icmp eq i32 %101, 0
  br i1 %107, label %121, label %108

108:                                              ; preds = %99, %117
  %109 = phi %class.scoped_refptr.211* [ %118, %117 ], [ %100, %99 ]
  %110 = phi %class.scoped_refptr.211* [ %119, %117 ], [ %104, %99 ]
  %111 = getelementptr inbounds %class.scoped_refptr.211, %class.scoped_refptr.211* %110, i64 0, i32 0
  %112 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %111, align 8, !noalias !16
  %113 = getelementptr inbounds %class.scoped_refptr.211, %class.scoped_refptr.211* %109, i64 0, i32 0
  store %"class.blink::NonInterpolableValue"* %112, %"class.blink::NonInterpolableValue"** %113, align 8, !noalias !16
  %114 = icmp eq %"class.blink::NonInterpolableValue"* %112, null
  br i1 %114, label %117, label %115

115:                                              ; preds = %108
  %116 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %112, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %116) #11, !noalias !16
  br label %117

117:                                              ; preds = %115, %108
  %118 = getelementptr inbounds %class.scoped_refptr.211, %class.scoped_refptr.211* %109, i64 1
  %119 = getelementptr inbounds %class.scoped_refptr.211, %class.scoped_refptr.211* %110, i64 1
  %120 = icmp eq %class.scoped_refptr.211* %119, %106
  br i1 %120, label %121, label %108

121:                                              ; preds = %117, %99
  %122 = ptrtoint i8* %81 to i64
  %123 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %26, i64* %123, align 8, !alias.scope !16
  %124 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %125 = bitcast %class.scoped_refptr.211* %124 to i64*
  store i64 %122, i64* %125, align 8, !alias.scope !16
  br label %126

126:                                              ; preds = %121, %74
  %127 = phi i64 [ 0, %121 ], [ %26, %74 ]
  %128 = load %class.scoped_refptr.211*, %class.scoped_refptr.211** %28, align 8, !noalias !16
  %129 = icmp eq %class.scoped_refptr.211* %128, null
  br i1 %129, label %163, label %130, !prof !12

130:                                              ; preds = %126
  %131 = bitcast %class.scoped_refptr.211* %128 to i8*
  %132 = load i32, i32* %30, align 4, !noalias !16
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %161, label %134, !prof !2

134:                                              ; preds = %130
  %135 = zext i32 %132 to i64
  %136 = getelementptr inbounds %class.scoped_refptr.211, %class.scoped_refptr.211* %128, i64 %135
  br label %137

137:                                              ; preds = %155, %134
  %138 = phi %class.scoped_refptr.211* [ %156, %155 ], [ %128, %134 ]
  %139 = getelementptr inbounds %class.scoped_refptr.211, %class.scoped_refptr.211* %138, i64 0, i32 0
  %140 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %139, align 8, !noalias !16
  %141 = icmp eq %"class.blink::NonInterpolableValue"* %140, null
  br i1 %141, label %155, label %142

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %140, i64 0, i32 1, i32 0
  %144 = getelementptr inbounds %"class.base::RefCounted.213", %"class.base::RefCounted.213"* %143, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %144) #11, !noalias !16
  %145 = getelementptr inbounds %"class.base::RefCounted.213", %"class.base::RefCounted.213"* %143, i64 0, i32 0, i32 0
  %146 = load i32, i32* %145, align 4, !noalias !16
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %155

148:                                              ; preds = %142
  %149 = getelementptr inbounds %"class.base::RefCounted.213", %"class.base::RefCounted.213"* %143, i64 -2
  %150 = bitcast %"class.base::RefCounted.213"* %149 to %"class.blink::NonInterpolableValue"*
  %151 = bitcast %"class.base::RefCounted.213"* %149 to void (%"class.blink::NonInterpolableValue"*)***
  %152 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %151, align 8, !noalias !16
  %153 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %152, i64 1
  %154 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %153, align 8, !noalias !16
  call void %154(%"class.blink::NonInterpolableValue"* nonnull %150) #11, !noalias !16
  br label %155

155:                                              ; preds = %148, %142, %137
  %156 = getelementptr inbounds %class.scoped_refptr.211, %class.scoped_refptr.211* %138, i64 1
  %157 = icmp eq %class.scoped_refptr.211* %156, %136
  br i1 %157, label %158, label %137

158:                                              ; preds = %155
  store i32 0, i32* %30, align 4, !noalias !16
  %159 = bitcast %"class.WTF::Vector.1469"* %4 to i8**
  %160 = load i8*, i8** %159, align 8, !noalias !16
  br label %161

161:                                              ; preds = %158, %130
  %162 = phi i8* [ %160, %158 ], [ %131, %130 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %162) #11, !noalias !16
  store %class.scoped_refptr.211* null, %class.scoped_refptr.211** %28, align 8, !noalias !16
  br label %163

163:                                              ; preds = %161, %126
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #11, !noalias !16
  %164 = icmp eq i64 %127, 0
  br i1 %164, label %171, label %165

165:                                              ; preds = %163
  %166 = inttoptr i64 %127 to %"class.blink::InterpolableList"*
  %167 = inttoptr i64 %127 to void (%"class.blink::InterpolableList"*)***
  %168 = load void (%"class.blink::InterpolableList"*)**, void (%"class.blink::InterpolableList"*)*** %167, align 8, !noalias !16
  %169 = getelementptr inbounds void (%"class.blink::InterpolableList"*)*, void (%"class.blink::InterpolableList"*)** %168, i64 1
  %170 = load void (%"class.blink::InterpolableList"*)*, void (%"class.blink::InterpolableList"*)** %169, align 8, !noalias !16
  call void %170(%"class.blink::InterpolableList"* nonnull %166) #11, !noalias !16
  br label %171

171:                                              ; preds = %165, %163, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink30CSSLengthListInterpolationType19MaybeConvertInheritERKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSLengthListInterpolationType"* nocapture readonly, %"class.blink::StyleResolverState"* nocapture readonly dereferenceable(600), %"class.WTF::Vector.214"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::Vector.753", align 8
  %6 = alloca %"class.std::__1::unique_ptr.1442", align 8
  %7 = bitcast %"class.WTF::Vector.753"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::Vector.753", %"class.WTF::Vector.753"* %5, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::Vector.753", %"class.WTF::Vector.753"* %5, i64 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.WTF::Vector.753", %"class.WTF::Vector.753"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false) #11
  %11 = getelementptr inbounds %"class.blink::CSSLengthListInterpolationType", %"class.blink::CSSLengthListInterpolationType"* %1, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0
  %12 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::CSSLengthListInterpolationType", %"class.blink::CSSLengthListInterpolationType"* %1, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8, !noalias !22
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %44, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4, !noalias !22
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %33

23:                                               ; preds = %16
  %24 = zext i32 %22 to i33
  %25 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %24, i33 1) #11
  %26 = extractvalue { i33, i1 } %25, 1
  %27 = extractvalue { i33, i1 } %25, 0
  %28 = icmp slt i33 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %31, !prof !2

30:                                               ; preds = %23
  tail call void @llvm.trap() #11, !noalias !22
  unreachable

31:                                               ; preds = %23
  %32 = trunc i33 %27 to i32
  store i32 %32, i32* %21, align 4, !noalias !22
  br label %33

33:                                               ; preds = %31, %16
  %34 = phi i32 [ %32, %31 ], [ %22, %16 ]
  %35 = load atomic i32, i32* %17 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %33
  %39 = add i32 %34, -1
  store i32 %39, i32* %21, align 4
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i32 [ %39, %38 ], [ %34, %33 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #11
  br label %44

44:                                               ; preds = %4, %40, %43
  %45 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %2, i64 0, i32 4, i32 0
  %46 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %45, align 8
  %47 = call zeroext i1 @_ZN5blink27LengthListPropertyFunctions13GetLengthListERKNS_11CSSPropertyERKNS_13ComputedStyleERN3WTF6VectorINS_6LengthELj0ENS7_18PartitionAllocatorEEE(%"class.blink::CSSProperty"* dereferenceable(24) %12, %"class.blink::ComputedStyle"* dereferenceable(104) %46, %"class.WTF::Vector.753"* nonnull dereferenceable(16) %5) #11
  %48 = bitcast %"class.std::__1::unique_ptr.1442"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #11
  %49 = bitcast %"class.blink::CSSProperty"** %11 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8, !noalias !25
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %81, label %53

53:                                               ; preds = %44
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4, !noalias !25
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %70

60:                                               ; preds = %53
  %61 = zext i32 %59 to i33
  %62 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %61, i33 1) #11
  %63 = extractvalue { i33, i1 } %62, 1
  %64 = extractvalue { i33, i1 } %62, 0
  %65 = icmp slt i33 %64, 0
  %66 = or i1 %63, %65
  br i1 %66, label %67, label %68, !prof !2

67:                                               ; preds = %60
  call void @llvm.trap() #11, !noalias !25
  unreachable

68:                                               ; preds = %60
  %69 = trunc i33 %64 to i32
  store i32 %69, i32* %58, align 4, !noalias !25
  br label %70

70:                                               ; preds = %68, %53
  %71 = phi i32 [ %69, %68 ], [ %59, %53 ]
  %72 = load atomic i32, i32* %54 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %77

75:                                               ; preds = %70
  %76 = add i32 %71, -1
  store i32 %76, i32* %58, align 4
  br label %77

77:                                               ; preds = %75, %70
  %78 = phi i32 [ %76, %75 ], [ %71, %70 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #11
  br label %81

81:                                               ; preds = %44, %77, %80
  %82 = call noalias i8* @malloc(i64 40) #11
  %83 = getelementptr inbounds i8, i8* %82, i64 8
  %84 = bitcast i8* %83 to %"class.blink::InterpolationType"**
  store %"class.blink::InterpolationType"* null, %"class.blink::InterpolationType"** %84, align 8
  %85 = bitcast i8* %82 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink26InheritedLengthListCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %85, align 8
  %86 = getelementptr inbounds i8, i8* %82, i64 16
  %87 = bitcast i8* %86 to i64*
  store i64 %50, i64* %87, align 8
  %88 = getelementptr inbounds i8, i8* %82, i64 24
  %89 = load i32, i32* %9, align 8
  %90 = bitcast i8* %88 to %"class.blink::Length"**
  store %"class.blink::Length"* null, %"class.blink::Length"** %90, align 8
  %91 = getelementptr inbounds i8, i8* %82, i64 32
  %92 = bitcast i8* %91 to i32*
  store i32 0, i32* %92, align 8
  %93 = icmp eq i32 %89, 0
  br i1 %93, label %103, label %94

94:                                               ; preds = %81
  %95 = zext i32 %89 to i64
  %96 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink6LengthEEEmm(i64 %95) #11
  %97 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %96, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink6LengthEEEPKcv, i64 0, i64 0)) #11
  %98 = ptrtoint i8* %97 to i64
  %99 = bitcast i8* %88 to i64*
  store atomic i64 %98, i64* %99 monotonic, align 8
  %100 = lshr i64 %96, 3
  %101 = trunc i64 %100 to i32
  store i32 %101, i32* %92, align 8
  %102 = bitcast i8* %97 to %"class.blink::Length"*
  br label %103

103:                                              ; preds = %94, %81
  %104 = phi %"class.blink::Length"* [ null, %81 ], [ %102, %94 ]
  %105 = load i32, i32* %10, align 4
  %106 = getelementptr inbounds i8, i8* %82, i64 36
  %107 = bitcast i8* %106 to i32*
  store i32 %105, i32* %107, align 4
  %108 = load %"class.blink::Length"*, %"class.blink::Length"** %8, align 8
  %109 = zext i32 %105 to i64
  %110 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %108, i64 %109
  %111 = icmp eq i32 %105, 0
  br i1 %111, label %125, label %112

112:                                              ; preds = %103, %121
  %113 = phi %"class.blink::Length"* [ %122, %121 ], [ %104, %103 ]
  %114 = phi %"class.blink::Length"* [ %123, %121 ], [ %108, %103 ]
  %115 = bitcast %"class.blink::Length"* %114 to i64*
  %116 = bitcast %"class.blink::Length"* %113 to i64*
  %117 = load i64, i64* %115, align 4
  store i64 %117, i64* %116, align 4
  %118 = and i64 %117, 280375465082880
  %119 = icmp eq i64 %118, 8796093022208
  br i1 %119, label %120, label %121

120:                                              ; preds = %112
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %113) #11
  br label %121

121:                                              ; preds = %120, %112
  %122 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %113, i64 1
  %123 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %114, i64 1
  %124 = icmp eq %"class.blink::Length"* %123, %110
  br i1 %124, label %125, label %112

125:                                              ; preds = %121, %103
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr.1442", %"class.std::__1::unique_ptr.1442"* %6, i64 0, i32 0, i32 0, i32 0
  %127 = bitcast %"class.std::__1::unique_ptr.1442"* %6 to i8**
  store i8* %82, i8** %127, align 8
  %128 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %3, i64 0, i32 0, i32 0, i32 2
  %129 = load i32, i32* %128, align 4
  %130 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %3, i64 0, i32 0, i32 0, i32 1
  %131 = load i32, i32* %130, align 8
  %132 = icmp eq i32 %129, %131
  br i1 %132, label %142, label %133, !prof !2

133:                                              ; preds = %125
  %134 = ptrtoint i8* %82 to i64
  %135 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %3, i64 0, i32 0, i32 0, i32 0
  %136 = load %"class.std::__1::unique_ptr.217"*, %"class.std::__1::unique_ptr.217"** %135, align 8
  %137 = zext i32 %129 to i64
  %138 = getelementptr inbounds %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.217"* %136, i64 %137
  store %"class.blink::InheritedLengthListChecker"* null, %"class.blink::InheritedLengthListChecker"** %126, align 8
  %139 = bitcast %"class.std::__1::unique_ptr.217"* %138 to i64*
  store i64 %134, i64* %139, align 8
  %140 = load i32, i32* %128, align 4
  %141 = add i32 %140, 1
  store i32 %141, i32* %128, align 4
  br label %143

142:                                              ; preds = %125
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_26InheritedLengthListCheckerENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.214"* %3, %"class.std::__1::unique_ptr.1442"* nonnull dereferenceable(8) %6) #11
  br label %143

143:                                              ; preds = %133, %142
  %144 = load %"class.blink::InheritedLengthListChecker"*, %"class.blink::InheritedLengthListChecker"** %126, align 8
  store %"class.blink::InheritedLengthListChecker"* null, %"class.blink::InheritedLengthListChecker"** %126, align 8
  %145 = icmp eq %"class.blink::InheritedLengthListChecker"* %144, null
  br i1 %145, label %151, label %146

146:                                              ; preds = %143
  %147 = bitcast %"class.blink::InheritedLengthListChecker"* %144 to void (%"class.blink::InheritedLengthListChecker"*)***
  %148 = load void (%"class.blink::InheritedLengthListChecker"*)**, void (%"class.blink::InheritedLengthListChecker"*)*** %147, align 8
  %149 = getelementptr inbounds void (%"class.blink::InheritedLengthListChecker"*)*, void (%"class.blink::InheritedLengthListChecker"*)** %148, i64 1
  %150 = load void (%"class.blink::InheritedLengthListChecker"*)*, void (%"class.blink::InheritedLengthListChecker"*)** %149, align 8
  call void %150(%"class.blink::InheritedLengthListChecker"* nonnull %144) #11
  br label %151

151:                                              ; preds = %143, %146
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #11
  br i1 %47, label %154, label %152

152:                                              ; preds = %151
  %153 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %153, i8 0, i64 16, i1 false) #11
  br label %163

154:                                              ; preds = %151
  %155 = bitcast %"class.blink::ComputedStyle"** %45 to %"class.blink::ComputedStyleBase"**
  %156 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %155, align 8
  %157 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %156, i64 0, i32 1, i32 0, i32 0
  %158 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %157, align 8
  %159 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %158, i64 0, i32 2, i32 0, i32 0
  %160 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %159, align 8
  %161 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %160, i64 0, i32 6
  %162 = load float, float* %161, align 8
  call fastcc void @_ZN5blinkL22MaybeConvertLengthListERKN3WTF6VectorINS_6LengthELj0ENS0_18PartitionAllocatorEEEf(%"struct.blink::InterpolationValue"* sret %0, %"class.WTF::Vector.753"* nonnull dereferenceable(16) %5, float %162)
  br label %163

163:                                              ; preds = %154, %152
  %164 = load %"class.blink::Length"*, %"class.blink::Length"** %8, align 8
  %165 = icmp eq %"class.blink::Length"* %164, null
  br i1 %165, label %187, label %166, !prof !12

166:                                              ; preds = %163
  %167 = bitcast %"class.blink::Length"* %164 to i8*
  %168 = load i32, i32* %10, align 4
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %185, label %170, !prof !2

170:                                              ; preds = %166
  %171 = zext i32 %168 to i64
  %172 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %164, i64 %171
  br label %173

173:                                              ; preds = %179, %170
  %174 = phi %"class.blink::Length"* [ %180, %179 ], [ %164, %170 ]
  %175 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %174, i64 0, i32 2
  %176 = load i8, i8* %175, align 1
  %177 = icmp eq i8 %176, 8
  br i1 %177, label %178, label %179

178:                                              ; preds = %173
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %174) #11
  br label %179

179:                                              ; preds = %178, %173
  %180 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %174, i64 1
  %181 = icmp eq %"class.blink::Length"* %180, %172
  br i1 %181, label %182, label %173

182:                                              ; preds = %179
  store i32 0, i32* %10, align 4
  %183 = bitcast %"class.WTF::Vector.753"* %5 to i8**
  %184 = load i8*, i8** %183, align 8
  br label %185

185:                                              ; preds = %182, %166
  %186 = phi i8* [ %184, %182 ], [ %167, %166 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %186) #11
  store %"class.blink::Length"* null, %"class.blink::Length"** %8, align 8
  br label %187

187:                                              ; preds = %163, %185
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  ret void
}

declare zeroext i1 @_ZN5blink27LengthListPropertyFunctions13GetLengthListERKNS_11CSSPropertyERKNS_13ComputedStyleERN3WTF6VectorINS_6LengthELj0ENS7_18PartitionAllocatorEEE(%"class.blink::CSSProperty"* dereferenceable(24), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.WTF::Vector.753"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink30CSSLengthListInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS9_14default_deleteISC_EEEELj0ENS7_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSLengthListInterpolationType"* nocapture readnone, %"class.blink::CSSValue"* dereferenceable(3), %"class.blink::StyleResolverState"* nocapture readnone, %"class.WTF::Vector.214"* nocapture readnone dereferenceable(16)) unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::Vector.1469", align 8
  %7 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 0, i32 2
  %8 = load i8, i8* %7, align 1
  %9 = icmp eq i8 %8, 52
  br i1 %9, label %12, label %10

10:                                               ; preds = %5
  %11 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #11
  br label %188

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 6, i32 2
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  %17 = tail call noalias i8* @malloc(i64 24) #11, !noalias !28
  %18 = bitcast i8* %17 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN5blink16InterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8, !noalias !28
  %19 = getelementptr inbounds i8, i8* %17, i64 8
  br i1 %16, label %20, label %25

20:                                               ; preds = %12
  %21 = ptrtoint i8* %17 to i64
  %22 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #11, !noalias !31
  store i64 %21, i64* %22, align 8, !alias.scope !31
  %23 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %24 = bitcast %class.scoped_refptr.211* %23 to i64*
  store i64 0, i64* %24, align 8, !alias.scope !31
  br label %188

25:                                               ; preds = %12
  %26 = bitcast i8* %19 to %"class.std::__1::unique_ptr.205"**
  store %"class.std::__1::unique_ptr.205"* null, %"class.std::__1::unique_ptr.205"** %26, align 8, !noalias !28
  %27 = getelementptr inbounds i8, i8* %17, i64 16
  %28 = bitcast i8* %27 to i32*
  store i32 0, i32* %28, align 8, !noalias !28
  %29 = zext i32 %15 to i64
  %30 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm(i64 %29) #11, !noalias !28
  %31 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %30, i8* getelementptr inbounds ([147 x i8], [147 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #11, !noalias !28
  %32 = ptrtoint i8* %31 to i64
  %33 = bitcast i8* %19 to i64*
  store atomic i64 %32, i64* %33 monotonic, align 8, !noalias !28
  %34 = lshr i64 %30, 3
  %35 = trunc i64 %34 to i32
  store i32 %35, i32* %28, align 8, !noalias !28
  %36 = shl nuw nsw i64 %29, 3
  %37 = getelementptr inbounds i8, i8* %17, i64 20
  %38 = bitcast i8* %37 to i32*
  store i32 %15, i32* %38, align 4, !noalias !28
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 %36, i1 false) #11, !noalias !28
  %39 = ptrtoint i8* %17 to i64
  %40 = bitcast %"class.WTF::Vector.1469"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #11, !noalias !28
  %41 = getelementptr inbounds %"class.WTF::Vector.1469", %"class.WTF::Vector.1469"* %6, i64 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.WTF::Vector.1469", %"class.WTF::Vector.1469"* %6, i64 0, i32 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.WTF::Vector.1469", %"class.WTF::Vector.1469"* %6, i64 0, i32 0, i32 0, i32 2
  %44 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink20NonInterpolableValueEEEEmm(i64 %29) #11, !noalias !28
  %45 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %44, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink20NonInterpolableValueEEEEPKcv, i64 0, i64 0)) #11, !noalias !28
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.1469"* %6 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8, !noalias !28
  %48 = lshr i64 %44, 3
  %49 = trunc i64 %48 to i32
  store i32 %49, i32* %42, align 8, !noalias !28
  store i32 %15, i32* %43, align 4, !noalias !28
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 %36, i1 false) #11, !noalias !28
  %50 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 2, i32 2
  %51 = bitcast i8* %50 to %"class.WTF::Vector.1451"*
  %52 = bitcast i8* %19 to %"class.WTF::Vector.1464"*
  br label %53

53:                                               ; preds = %93, %25
  %54 = phi i32 [ 0, %25 ], [ %94, %93 ]
  %55 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1451"* %51, i32 %54) #11, !noalias !34
  %56 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %55, i64 0, i32 0, i32 0
  %57 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %56, align 8, !noalias !34
  %58 = call %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength20MaybeConvertCSSValueERKNS_8CSSValueE(%"class.blink::CSSValue"* dereferenceable(3) %57) #11, !noalias !34
  %59 = icmp eq %"class.blink::InterpolableLength"* %58, null
  br i1 %59, label %91, label %60

60:                                               ; preds = %53
  %61 = ptrtoint %"class.blink::InterpolableLength"* %58 to i64
  %62 = call dereferenceable(8) %"class.std::__1::unique_ptr.205"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1464"* %52, i32 %54) #11, !noalias !28
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.205"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %63, align 8, !noalias !28
  %65 = bitcast %"class.std::__1::unique_ptr.205"* %62 to i64*
  store i64 %61, i64* %65, align 8, !noalias !28
  %66 = icmp eq %"class.blink::InterpolableValue"* %64, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %60
  %68 = bitcast %"class.blink::InterpolableValue"* %64 to void (%"class.blink::InterpolableValue"*)***
  %69 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %68, align 8, !noalias !28
  %70 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %69, i64 1
  %71 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %70, align 8, !noalias !28
  call void %71(%"class.blink::InterpolableValue"* nonnull %64) #11, !noalias !28
  br label %72

72:                                               ; preds = %67, %60
  %73 = call dereferenceable(8) %class.scoped_refptr.211* @_ZN3WTF6VectorI13scoped_refptrIKN5blink20NonInterpolableValueEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1469"* nonnull %6, i32 %54) #11, !noalias !28
  %74 = bitcast %class.scoped_refptr.211* %73 to i64*
  %75 = getelementptr inbounds %class.scoped_refptr.211, %class.scoped_refptr.211* %73, i64 0, i32 0
  %76 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %75, align 8, !noalias !28
  store i64 0, i64* %74, align 8, !noalias !28
  %77 = icmp eq %"class.blink::NonInterpolableValue"* %76, null
  br i1 %77, label %93, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %76, i64 0, i32 1, i32 0
  %80 = getelementptr inbounds %"class.base::RefCounted.213", %"class.base::RefCounted.213"* %79, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %80) #11, !noalias !28
  %81 = getelementptr inbounds %"class.base::RefCounted.213", %"class.base::RefCounted.213"* %79, i64 0, i32 0, i32 0
  %82 = load i32, i32* %81, align 4, !noalias !28
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %93

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.base::RefCounted.213", %"class.base::RefCounted.213"* %79, i64 -2
  %86 = bitcast %"class.base::RefCounted.213"* %85 to %"class.blink::NonInterpolableValue"*
  %87 = bitcast %"class.base::RefCounted.213"* %85 to void (%"class.blink::NonInterpolableValue"*)***
  %88 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %87, align 8, !noalias !28
  %89 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %88, i64 1
  %90 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %89, align 8, !noalias !28
  call void %90(%"class.blink::NonInterpolableValue"* nonnull %86) #11, !noalias !28
  br label %93

91:                                               ; preds = %53
  %92 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 16, i1 false) #11, !alias.scope !28
  br label %143

93:                                               ; preds = %84, %78, %72
  %94 = add nuw i32 %54, 1
  %95 = icmp eq i32 %94, %15
  br i1 %95, label %96, label %53

96:                                               ; preds = %93
  %97 = load i32, i32* %42, align 8, !noalias !28
  %98 = call noalias i8* @malloc(i64 32) #11, !noalias !28
  %99 = getelementptr inbounds i8, i8* %98, i64 8
  %100 = bitcast i8* %99 to i32*
  store i32 1, i32* %100, align 4, !noalias !28
  %101 = bitcast i8* %98 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink19NonInterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %101, align 8, !noalias !28
  %102 = getelementptr inbounds i8, i8* %98, i64 16
  %103 = bitcast i8* %102 to %class.scoped_refptr.211**
  store %class.scoped_refptr.211* null, %class.scoped_refptr.211** %103, align 8, !noalias !28
  %104 = getelementptr inbounds i8, i8* %98, i64 24
  %105 = bitcast i8* %104 to i32*
  store i32 0, i32* %105, align 8, !noalias !28
  %106 = icmp eq i32 %97, 0
  br i1 %106, label %116, label %107

107:                                              ; preds = %96
  %108 = zext i32 %97 to i64
  %109 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink20NonInterpolableValueEEEEmm(i64 %108) #11, !noalias !28
  %110 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %109, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink20NonInterpolableValueEEEEPKcv, i64 0, i64 0)) #11, !noalias !28
  %111 = ptrtoint i8* %110 to i64
  %112 = bitcast i8* %102 to i64*
  store atomic i64 %111, i64* %112 monotonic, align 8, !noalias !28
  %113 = lshr i64 %109, 3
  %114 = trunc i64 %113 to i32
  store i32 %114, i32* %105, align 8, !noalias !28
  %115 = bitcast i8* %110 to %class.scoped_refptr.211*
  br label %116

116:                                              ; preds = %107, %96
  %117 = phi %class.scoped_refptr.211* [ null, %96 ], [ %115, %107 ]
  %118 = load i32, i32* %43, align 4, !noalias !28
  %119 = getelementptr inbounds i8, i8* %98, i64 28
  %120 = bitcast i8* %119 to i32*
  store i32 %118, i32* %120, align 4, !noalias !28
  %121 = load %class.scoped_refptr.211*, %class.scoped_refptr.211** %41, align 8, !noalias !28
  %122 = zext i32 %118 to i64
  %123 = getelementptr inbounds %class.scoped_refptr.211, %class.scoped_refptr.211* %121, i64 %122
  %124 = icmp eq i32 %118, 0
  br i1 %124, label %138, label %125

125:                                              ; preds = %116, %134
  %126 = phi %class.scoped_refptr.211* [ %135, %134 ], [ %117, %116 ]
  %127 = phi %class.scoped_refptr.211* [ %136, %134 ], [ %121, %116 ]
  %128 = getelementptr inbounds %class.scoped_refptr.211, %class.scoped_refptr.211* %127, i64 0, i32 0
  %129 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %128, align 8, !noalias !28
  %130 = getelementptr inbounds %class.scoped_refptr.211, %class.scoped_refptr.211* %126, i64 0, i32 0
  store %"class.blink::NonInterpolableValue"* %129, %"class.blink::NonInterpolableValue"** %130, align 8, !noalias !28
  %131 = icmp eq %"class.blink::NonInterpolableValue"* %129, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %125
  %133 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %129, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %133) #11, !noalias !28
  br label %134

134:                                              ; preds = %132, %125
  %135 = getelementptr inbounds %class.scoped_refptr.211, %class.scoped_refptr.211* %126, i64 1
  %136 = getelementptr inbounds %class.scoped_refptr.211, %class.scoped_refptr.211* %127, i64 1
  %137 = icmp eq %class.scoped_refptr.211* %136, %123
  br i1 %137, label %138, label %125

138:                                              ; preds = %134, %116
  %139 = ptrtoint i8* %98 to i64
  %140 = bitcast %"struct.blink::InterpolationValue"* %0 to i64*
  store i64 %39, i64* %140, align 8, !alias.scope !28
  %141 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %0, i64 0, i32 1
  %142 = bitcast %class.scoped_refptr.211* %141 to i64*
  store i64 %139, i64* %142, align 8, !alias.scope !28
  br label %143

143:                                              ; preds = %138, %91
  %144 = phi i64 [ 0, %138 ], [ %39, %91 ]
  %145 = load %class.scoped_refptr.211*, %class.scoped_refptr.211** %41, align 8, !noalias !28
  %146 = icmp eq %class.scoped_refptr.211* %145, null
  br i1 %146, label %180, label %147, !prof !12

147:                                              ; preds = %143
  %148 = bitcast %class.scoped_refptr.211* %145 to i8*
  %149 = load i32, i32* %43, align 4, !noalias !28
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %178, label %151, !prof !2

151:                                              ; preds = %147
  %152 = zext i32 %149 to i64
  %153 = getelementptr inbounds %class.scoped_refptr.211, %class.scoped_refptr.211* %145, i64 %152
  br label %154

154:                                              ; preds = %172, %151
  %155 = phi %class.scoped_refptr.211* [ %173, %172 ], [ %145, %151 ]
  %156 = getelementptr inbounds %class.scoped_refptr.211, %class.scoped_refptr.211* %155, i64 0, i32 0
  %157 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %156, align 8, !noalias !28
  %158 = icmp eq %"class.blink::NonInterpolableValue"* %157, null
  br i1 %158, label %172, label %159

159:                                              ; preds = %154
  %160 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %157, i64 0, i32 1, i32 0
  %161 = getelementptr inbounds %"class.base::RefCounted.213", %"class.base::RefCounted.213"* %160, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %161) #11, !noalias !28
  %162 = getelementptr inbounds %"class.base::RefCounted.213", %"class.base::RefCounted.213"* %160, i64 0, i32 0, i32 0
  %163 = load i32, i32* %162, align 4, !noalias !28
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %172

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.base::RefCounted.213", %"class.base::RefCounted.213"* %160, i64 -2
  %167 = bitcast %"class.base::RefCounted.213"* %166 to %"class.blink::NonInterpolableValue"*
  %168 = bitcast %"class.base::RefCounted.213"* %166 to void (%"class.blink::NonInterpolableValue"*)***
  %169 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %168, align 8, !noalias !28
  %170 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %169, i64 1
  %171 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %170, align 8, !noalias !28
  call void %171(%"class.blink::NonInterpolableValue"* nonnull %167) #11, !noalias !28
  br label %172

172:                                              ; preds = %165, %159, %154
  %173 = getelementptr inbounds %class.scoped_refptr.211, %class.scoped_refptr.211* %155, i64 1
  %174 = icmp eq %class.scoped_refptr.211* %173, %153
  br i1 %174, label %175, label %154

175:                                              ; preds = %172
  store i32 0, i32* %43, align 4, !noalias !28
  %176 = bitcast %"class.WTF::Vector.1469"* %6 to i8**
  %177 = load i8*, i8** %176, align 8, !noalias !28
  br label %178

178:                                              ; preds = %175, %147
  %179 = phi i8* [ %177, %175 ], [ %148, %147 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %179) #11, !noalias !28
  store %class.scoped_refptr.211* null, %class.scoped_refptr.211** %41, align 8, !noalias !28
  br label %180

180:                                              ; preds = %178, %143
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #11, !noalias !28
  %181 = icmp eq i64 %144, 0
  br i1 %181, label %188, label %182

182:                                              ; preds = %180
  %183 = inttoptr i64 %144 to %"class.blink::InterpolableList"*
  %184 = inttoptr i64 %144 to void (%"class.blink::InterpolableList"*)***
  %185 = load void (%"class.blink::InterpolableList"*)**, void (%"class.blink::InterpolableList"*)*** %184, align 8, !noalias !28
  %186 = getelementptr inbounds void (%"class.blink::InterpolableList"*)*, void (%"class.blink::InterpolableList"*)** %185, i64 1
  %187 = load void (%"class.blink::InterpolableList"*)*, void (%"class.blink::InterpolableList"*)** %186, align 8, !noalias !28
  call void %187(%"class.blink::InterpolableList"* nonnull %183) #11, !noalias !28
  br label %188

188:                                              ; preds = %182, %180, %20, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink30CSSLengthListInterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_(%"struct.blink::PairwiseInterpolationValue"* noalias sret, %"class.blink::CSSLengthListInterpolationType"* nocapture readnone, %"struct.blink::InterpolationValue"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RepeatingCallback", align 8
  %6 = tail call i8* @_Znwm(i64 40) #12, !noalias !37
  %7 = bitcast i8* %6 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %7, void ()* bitcast (void (%"struct.blink::PairwiseInterpolationValue"*, %"class.base::internal::BindStateBase"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZNK5blink30CSSLengthListInterpolationType17MaybeMergeSinglesEONS3_18InterpolationValueES6_E3$_2JEEEFNS3_26PairwiseInterpolationValueES6_S6_EE3RunEPNS0_13BindStateBaseES6_S6_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZNK5blink30CSSLengthListInterpolationType17MaybeMergeSinglesEONS2_18InterpolationValueES5_E3$_2JEE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !37
  %8 = bitcast %"class.base::RepeatingCallback"* %5 to i8**
  store i8* %6, i8** %8, align 8, !alias.scope !37
  call void @_ZN5blink26ListInterpolationFunctions17MaybeMergeSinglesEONS_18InterpolationValueES2_NS0_22LengthMatchingStrategyEN4base17RepeatingCallbackIFNS_26PairwiseInterpolationValueES2_S2_EEE(%"struct.blink::PairwiseInterpolationValue"* sret %0, %"struct.blink::InterpolationValue"* dereferenceable(16) %2, %"struct.blink::InterpolationValue"* dereferenceable(16) %3, i32 1, %"class.base::RepeatingCallback"* nonnull %5) #11
  %9 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %9) #11
  ret void
}

declare void @_ZN5blink26ListInterpolationFunctions17MaybeMergeSinglesEONS_18InterpolationValueES2_NS0_22LengthMatchingStrategyEN4base17RepeatingCallbackIFNS_26PairwiseInterpolationValueES2_S2_EEE(%"struct.blink::PairwiseInterpolationValue"* sret, %"struct.blink::InterpolationValue"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16), i32, %"class.base::RepeatingCallback"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink30CSSLengthListInterpolationType43MaybeConvertStandardPropertyUnderlyingValueERKNS_13ComputedStyleE(%"struct.blink::InterpolationValue"* noalias nocapture sret, %"class.blink::CSSLengthListInterpolationType"* nocapture readonly, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::Vector.753", align 8
  %5 = bitcast %"class.WTF::Vector.753"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.WTF::Vector.753", %"class.WTF::Vector.753"* %4, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.WTF::Vector.753", %"class.WTF::Vector.753"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #11
  %8 = getelementptr inbounds %"class.blink::CSSLengthListInterpolationType", %"class.blink::CSSLengthListInterpolationType"* %1, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0
  %9 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::CSSLengthListInterpolationType", %"class.blink::CSSLengthListInterpolationType"* %1, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8, !noalias !44
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %41, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4, !noalias !44
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %20, label %30

20:                                               ; preds = %13
  %21 = zext i32 %19 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #11
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !2

27:                                               ; preds = %20
  tail call void @llvm.trap() #11, !noalias !44
  unreachable

28:                                               ; preds = %20
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %18, align 4, !noalias !44
  br label %30

30:                                               ; preds = %28, %13
  %31 = phi i32 [ %29, %28 ], [ %19, %13 ]
  %32 = load atomic i32, i32* %14 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %30
  %36 = add i32 %31, -1
  store i32 %36, i32* %18, align 4
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i32 [ %36, %35 ], [ %31, %30 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #11
  br label %41

41:                                               ; preds = %3, %37, %40
  %42 = call zeroext i1 @_ZN5blink27LengthListPropertyFunctions13GetLengthListERKNS_11CSSPropertyERKNS_13ComputedStyleERN3WTF6VectorINS_6LengthELj0ENS7_18PartitionAllocatorEEE(%"class.blink::CSSProperty"* dereferenceable(24) %9, %"class.blink::ComputedStyle"* dereferenceable(104) %2, %"class.WTF::Vector.753"* nonnull dereferenceable(16) %4) #11
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = bitcast %"struct.blink::InterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 16, i1 false) #11
  br label %52

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %47 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %47, i64 0, i32 2, i32 0, i32 0
  %49 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %49, i64 0, i32 6
  %51 = load float, float* %50, align 8
  call fastcc void @_ZN5blinkL22MaybeConvertLengthListERKN3WTF6VectorINS_6LengthELj0ENS0_18PartitionAllocatorEEEf(%"struct.blink::InterpolationValue"* sret %0, %"class.WTF::Vector.753"* nonnull dereferenceable(16) %4, float %51)
  br label %52

52:                                               ; preds = %45, %43
  %53 = load %"class.blink::Length"*, %"class.blink::Length"** %6, align 8
  %54 = icmp eq %"class.blink::Length"* %53, null
  br i1 %54, label %76, label %55, !prof !12

55:                                               ; preds = %52
  %56 = bitcast %"class.blink::Length"* %53 to i8*
  %57 = load i32, i32* %7, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %74, label %59, !prof !2

59:                                               ; preds = %55
  %60 = zext i32 %57 to i64
  %61 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %53, i64 %60
  br label %62

62:                                               ; preds = %68, %59
  %63 = phi %"class.blink::Length"* [ %69, %68 ], [ %53, %59 ]
  %64 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %63, i64 0, i32 2
  %65 = load i8, i8* %64, align 1
  %66 = icmp eq i8 %65, 8
  br i1 %66, label %67, label %68

67:                                               ; preds = %62
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %63) #11
  br label %68

68:                                               ; preds = %67, %62
  %69 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %63, i64 1
  %70 = icmp eq %"class.blink::Length"* %69, %61
  br i1 %70, label %71, label %62

71:                                               ; preds = %68
  store i32 0, i32* %7, align 4
  %72 = bitcast %"class.WTF::Vector.753"* %4 to i8**
  %73 = load i8*, i8** %72, align 8
  br label %74

74:                                               ; preds = %71, %55
  %75 = phi i8* [ %73, %71 ], [ %56, %55 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %75) #11
  store %"class.blink::Length"* null, %"class.blink::Length"** %6, align 8
  br label %76

76:                                               ; preds = %52, %74
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink30CSSLengthListInterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd(%"class.blink::CSSLengthListInterpolationType"*, %"class.blink::UnderlyingValueOwner"* dereferenceable(40), double, %"struct.blink::InterpolationValue"* dereferenceable(16), double) unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::RepeatingCallback.1459", align 8
  %7 = alloca %"class.base::RepeatingCallback.1460", align 8
  %8 = alloca %"class.base::RepeatingCallback.1461", align 8
  %9 = getelementptr inbounds %"class.blink::CSSLengthListInterpolationType", %"class.blink::CSSLengthListInterpolationType"* %0, i64 0, i32 0, i32 0
  %10 = tail call i8* @_Znwm(i64 48) #12, !noalias !47
  %11 = bitcast i8* %10 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %11, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*, %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFbPKN5blink17InterpolableValueES6_EJEEES7_E3RunEPNS0_13BindStateBaseES6_S6_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFbPKN5blink17InterpolableValueES5_EJEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !47
  %12 = getelementptr inbounds i8, i8* %10, i64 32
  %13 = bitcast i8* %12 to i64*
  store i64 ptrtoint (i1 (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)* @_ZN5blink26ListInterpolationFunctions33InterpolableValuesKnownCompatibleEPKNS_17InterpolableValueES3_ to i64), i64* %13, align 8, !noalias !47
  %14 = bitcast %"class.base::RepeatingCallback.1459"* %6 to i8**
  store i8* %10, i8** %14, align 8, !alias.scope !47
  %15 = tail call i8* @_Znwm(i64 48) #12, !noalias !54
  %16 = bitcast i8* %15 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %16, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*, %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFbPKN5blink20NonInterpolableValueES6_EJEEES7_E3RunEPNS0_13BindStateBaseES6_S6_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFbPKN5blink20NonInterpolableValueES5_EJEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !54
  %17 = getelementptr inbounds i8, i8* %15, i64 32
  %18 = bitcast i8* %17 to i64*
  store i64 ptrtoint (i1 (%"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"*)* @_ZN5blink26ListInterpolationFunctions29VerifyNoNonInterpolableValuesEPKNS_20NonInterpolableValueES3_ to i64), i64* %18, align 8, !noalias !54
  %19 = bitcast %"class.base::RepeatingCallback.1460"* %7 to i8**
  store i8* %15, i8** %19, align 8, !alias.scope !54
  %20 = tail call i8* @_Znwm(i64 40) #12, !noalias !61
  %21 = bitcast i8* %20 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %21, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.blink::UnderlyingValue"*, double, %"class.blink::InterpolableValue"*, %"class.blink::NonInterpolableValue"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZNK5blink30CSSLengthListInterpolationType9CompositeERNS3_20UnderlyingValueOwnerEdRKNS3_18InterpolationValueEdE3$_3JEEEFvRNS3_15UnderlyingValueEdRKNS3_17InterpolableValueEPKNS3_20NonInterpolableValueEEE3RunEPNS0_13BindStateBaseESD_dSG_SJ_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZNK5blink30CSSLengthListInterpolationType9CompositeERNS2_20UnderlyingValueOwnerEdRKNS2_18InterpolationValueEdE3$_3JEE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !61
  %22 = bitcast %"class.base::RepeatingCallback.1461"* %8 to i8**
  store i8* %20, i8** %22, align 8, !alias.scope !61
  call void @_ZN5blink26ListInterpolationFunctions9CompositeERNS_20UnderlyingValueOwnerEdRKNS_17InterpolationTypeERKNS_18InterpolationValueENS0_22LengthMatchingStrategyEN4base17RepeatingCallbackIFbPKNS_17InterpolableValueESE_EEENSB_IFbPKNS_20NonInterpolableValueESJ_EEENSB_IFvRNS_15UnderlyingValueEdRSD_SJ_EEE(%"class.blink::UnderlyingValueOwner"* dereferenceable(40) %1, double %2, %"class.blink::InterpolationType"* dereferenceable(32) %9, %"struct.blink::InterpolationValue"* dereferenceable(16) %3, i32 1, %"class.base::RepeatingCallback.1459"* nonnull %6, %"class.base::RepeatingCallback.1460"* nonnull %7, %"class.base::RepeatingCallback.1461"* nonnull %8) #11
  %23 = getelementptr inbounds %"class.base::RepeatingCallback.1461", %"class.base::RepeatingCallback.1461"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #11
  %24 = getelementptr inbounds %"class.base::RepeatingCallback.1460", %"class.base::RepeatingCallback.1460"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #11
  %25 = getelementptr inbounds %"class.base::RepeatingCallback.1459", %"class.base::RepeatingCallback.1459"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %25) #11
  ret void
}

declare void @_ZN5blink26ListInterpolationFunctions9CompositeERNS_20UnderlyingValueOwnerEdRKNS_17InterpolationTypeERKNS_18InterpolationValueENS0_22LengthMatchingStrategyEN4base17RepeatingCallbackIFbPKNS_17InterpolableValueESE_EEENSB_IFbPKNS_20NonInterpolableValueESJ_EEENSB_IFvRNS_15UnderlyingValueEdRSD_SJ_EEE(%"class.blink::UnderlyingValueOwner"* dereferenceable(40), double, %"class.blink::InterpolationType"* dereferenceable(32), %"struct.blink::InterpolationValue"* dereferenceable(16), i32, %"class.base::RepeatingCallback.1459"*, %"class.base::RepeatingCallback.1460"*, %"class.base::RepeatingCallback.1461"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink26ListInterpolationFunctions33InterpolableValuesKnownCompatibleEPKNS_17InterpolableValueES3_(%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*) #0 comdat align 2 {
  ret i1 true
}

declare zeroext i1 @_ZN5blink26ListInterpolationFunctions29VerifyNoNonInterpolableValuesEPKNS_20NonInterpolableValueES3_(%"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"*) #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink30CSSLengthListInterpolationType26ApplyStandardPropertyValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_18StyleResolverStateE(%"class.blink::CSSLengthListInterpolationType"* nocapture readonly, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"* nocapture readnone, %"class.blink::StyleResolverState"* dereferenceable(600)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::Vector.753", align 8
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"class.blink::Length"*
  %8 = bitcast %"class.blink::InterpolableValue"* %1 to %"class.blink::InterpolableList"*
  %9 = getelementptr inbounds %"class.blink::InterpolableList", %"class.blink::InterpolableList"* %8, i64 0, i32 1, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %"class.WTF::Vector.753"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.WTF::Vector.753", %"class.WTF::Vector.753"* %5, i64 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.WTF::Vector.753", %"class.WTF::Vector.753"* %5, i64 0, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.WTF::Vector.753", %"class.WTF::Vector.753"* %5, i64 0, i32 0, i32 0, i32 2
  %15 = bitcast %"class.WTF::Vector.753"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false)
  store %"class.blink::Length"* null, %"class.blink::Length"** %12, align 8
  store i32 0, i32* %13, align 8
  %16 = icmp eq i32 %10, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %4
  store i32 0, i32* %14, align 4
  br label %71

18:                                               ; preds = %4
  %19 = zext i32 %10 to i64
  %20 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink6LengthEEEmm(i64 %19) #11
  %21 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink6LengthEEEPKcv, i64 0, i64 0)) #11
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.WTF::Vector.753"* %5 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = lshr i64 %20, 3
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %13, align 8
  %26 = bitcast i8* %21 to %"class.blink::Length"*
  store i32 %10, i32* %14, align 4
  %27 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %26, i64 %19
  %28 = shl nuw nsw i64 %19, 3
  %29 = add nsw i64 %28, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %18, %34
  %35 = phi %"class.blink::Length"* [ %38, %34 ], [ %26, %18 ]
  %36 = phi i64 [ %39, %34 ], [ %32, %18 ]
  %37 = bitcast %"class.blink::Length"* %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %37, i8 0, i64 7, i1 false) #11
  %38 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %35, i64 1
  %39 = add i64 %36, -1
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %34, !llvm.loop !68

41:                                               ; preds = %34, %18
  %42 = phi %"class.blink::Length"* [ %26, %18 ], [ %38, %34 ]
  %43 = icmp ult i64 %29, 56
  br i1 %43, label %63, label %44

44:                                               ; preds = %41, %44
  %45 = phi %"class.blink::Length"* [ %61, %44 ], [ %42, %41 ]
  %46 = bitcast %"class.blink::Length"* %45 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %46, i8 0, i64 7, i1 false) #11
  %47 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %45, i64 1
  %48 = bitcast %"class.blink::Length"* %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %48, i8 0, i64 7, i1 false) #11
  %49 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %45, i64 2
  %50 = bitcast %"class.blink::Length"* %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %50, i8 0, i64 7, i1 false) #11
  %51 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %45, i64 3
  %52 = bitcast %"class.blink::Length"* %51 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %52, i8 0, i64 7, i1 false) #11
  %53 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %45, i64 4
  %54 = bitcast %"class.blink::Length"* %53 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %54, i8 0, i64 7, i1 false) #11
  %55 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %45, i64 5
  %56 = bitcast %"class.blink::Length"* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %56, i8 0, i64 7, i1 false) #11
  %57 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %45, i64 6
  %58 = bitcast %"class.blink::Length"* %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %58, i8 0, i64 7, i1 false) #11
  %59 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %45, i64 7
  %60 = bitcast %"class.blink::Length"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %60, i8 0, i64 7, i1 false) #11
  %61 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %45, i64 8
  %62 = icmp eq %"class.blink::Length"* %61, %27
  br i1 %62, label %63, label %44

63:                                               ; preds = %44, %41
  br i1 %16, label %71, label %64

64:                                               ; preds = %63
  %65 = bitcast i64* %6 to i8*
  %66 = getelementptr inbounds %"class.blink::InterpolableValue", %"class.blink::InterpolableValue"* %1, i64 1
  %67 = bitcast %"class.blink::InterpolableValue"* %66 to %"class.WTF::Vector.1464"*
  %68 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %3, i64 0, i32 3
  %69 = getelementptr inbounds %"class.blink::CSSLengthListInterpolationType", %"class.blink::CSSLengthListInterpolationType"* %0, i64 0, i32 1
  %70 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 2
  br label %132

71:                                               ; preds = %153, %17, %63
  %72 = getelementptr inbounds %"class.blink::CSSLengthListInterpolationType", %"class.blink::CSSLengthListInterpolationType"* %0, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0
  %73 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::CSSLengthListInterpolationType", %"class.blink::CSSLengthListInterpolationType"* %0, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8, !noalias !70
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %105, label %77

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4, !noalias !70
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %94

84:                                               ; preds = %77
  %85 = zext i32 %83 to i33
  %86 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %85, i33 1) #11
  %87 = extractvalue { i33, i1 } %86, 1
  %88 = extractvalue { i33, i1 } %86, 0
  %89 = icmp slt i33 %88, 0
  %90 = or i1 %87, %89
  br i1 %90, label %91, label %92, !prof !2

91:                                               ; preds = %84
  call void @llvm.trap() #11, !noalias !70
  unreachable

92:                                               ; preds = %84
  %93 = trunc i33 %88 to i32
  store i32 %93, i32* %82, align 4, !noalias !70
  br label %94

94:                                               ; preds = %92, %77
  %95 = phi i32 [ %93, %92 ], [ %83, %77 ]
  %96 = load atomic i32, i32* %78 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %101

99:                                               ; preds = %94
  %100 = add i32 %95, -1
  store i32 %100, i32* %82, align 4
  br label %101

101:                                              ; preds = %99, %94
  %102 = phi i32 [ %100, %99 ], [ %95, %94 ]
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %101
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #11
  br label %105

105:                                              ; preds = %71, %101, %104
  %106 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %3, i64 0, i32 2, i32 0
  %107 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %106, align 8
  call void @_ZN5blink27LengthListPropertyFunctions13SetLengthListERKNS_11CSSPropertyERNS_13ComputedStyleEON3WTF6VectorINS_6LengthELj0ENS6_18PartitionAllocatorEEE(%"class.blink::CSSProperty"* dereferenceable(24) %73, %"class.blink::ComputedStyle"* dereferenceable(104) %107, %"class.WTF::Vector.753"* nonnull dereferenceable(16) %5) #11
  %108 = load %"class.blink::Length"*, %"class.blink::Length"** %12, align 8
  %109 = icmp eq %"class.blink::Length"* %108, null
  br i1 %109, label %131, label %110, !prof !12

110:                                              ; preds = %105
  %111 = bitcast %"class.blink::Length"* %108 to i8*
  %112 = load i32, i32* %14, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %129, label %114, !prof !2

114:                                              ; preds = %110
  %115 = zext i32 %112 to i64
  %116 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %108, i64 %115
  br label %117

117:                                              ; preds = %123, %114
  %118 = phi %"class.blink::Length"* [ %124, %123 ], [ %108, %114 ]
  %119 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %118, i64 0, i32 2
  %120 = load i8, i8* %119, align 1
  %121 = icmp eq i8 %120, 8
  br i1 %121, label %122, label %123

122:                                              ; preds = %117
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %118) #11
  br label %123

123:                                              ; preds = %122, %117
  %124 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %118, i64 1
  %125 = icmp eq %"class.blink::Length"* %124, %116
  br i1 %125, label %126, label %117

126:                                              ; preds = %123
  store i32 0, i32* %14, align 4
  %127 = bitcast %"class.WTF::Vector.753"* %5 to i8**
  %128 = load i8*, i8** %127, align 8
  br label %129

129:                                              ; preds = %126, %110
  %130 = phi i8* [ %128, %126 ], [ %111, %110 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %130) #11
  store %"class.blink::Length"* null, %"class.blink::Length"** %12, align 8
  br label %131

131:                                              ; preds = %105, %129
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #11
  ret void

132:                                              ; preds = %153, %64
  %133 = phi i32 [ 0, %64 ], [ %154, %153 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #11
  %134 = call dereferenceable(8) %"class.std::__1::unique_ptr.205"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1464"* %67, i32 %133) #11
  %135 = bitcast %"class.std::__1::unique_ptr.205"* %134 to %"class.blink::InterpolableLength"**
  %136 = load %"class.blink::InterpolableLength"*, %"class.blink::InterpolableLength"** %135, align 8
  %137 = load i32, i32* %69, align 8
  call void @_ZNK5blink18InterpolableLength12CreateLengthERKNS_25CSSToLengthConversionDataENS_10ValueRangeE(%"class.blink::Length"* nonnull sret %7, %"class.blink::InterpolableLength"* %136, %"class.blink::CSSToLengthConversionData"* dereferenceable(56) %68, i32 %137) #11
  %138 = call dereferenceable(8) %"class.blink::Length"* @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.753"* nonnull %5, i32 %133) #11
  %139 = load i8, i8* %70, align 1
  %140 = icmp eq i8 %139, 8
  br i1 %140, label %141, label %142

141:                                              ; preds = %132
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %7) #11
  br label %142

142:                                              ; preds = %141, %132
  %143 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %138, i64 0, i32 2
  %144 = load i8, i8* %143, align 1
  %145 = icmp eq i8 %144, 8
  br i1 %145, label %146, label %147

146:                                              ; preds = %142
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %138) #11
  br label %147

147:                                              ; preds = %142, %146
  %148 = bitcast %"class.blink::Length"* %138 to i64*
  %149 = load i64, i64* %6, align 8
  store i64 %149, i64* %148, align 4
  %150 = load i8, i8* %70, align 1
  %151 = icmp eq i8 %150, 8
  br i1 %151, label %152, label %153

152:                                              ; preds = %147
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %7) #11
  br label %153

153:                                              ; preds = %147, %152
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #11
  %154 = add nuw i32 %133, 1
  %155 = icmp eq i32 %154, %10
  br i1 %155, label %71, label %132
}

declare void @_ZNK5blink18InterpolableLength12CreateLengthERKNS_25CSSToLengthConversionDataENS_10ValueRangeE(%"class.blink::Length"* sret, %"class.blink::InterpolableLength"*, %"class.blink::CSSToLengthConversionData"* dereferenceable(56), i32) local_unnamed_addr #1

declare void @_ZN5blink27LengthListPropertyFunctions13SetLengthListERKNS_11CSSPropertyERNS_13ComputedStyleEON3WTF6VectorINS_6LengthELj0ENS6_18PartitionAllocatorEEE(%"class.blink::CSSProperty"* dereferenceable(24), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.WTF::Vector.753"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20CSSInterpolationTypeD2Ev(%"class.blink::CSSInterpolationType"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink20CSSInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #11
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #11
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %3, align 8
  br label %25

25:                                               ; preds = %1, %13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink17InterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %26 = getelementptr inbounds %"class.blink::CSSInterpolationType", %"class.blink::CSSInterpolationType"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #11
  br label %42

42:                                               ; preds = %25, %38, %41
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink30CSSLengthListInterpolationTypeD0Ev(%"class.blink::CSSLengthListInterpolationType"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSLengthListInterpolationType", %"class.blink::CSSLengthListInterpolationType"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink20CSSInterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSLengthListInterpolationType", %"class.blink::CSSLengthListInterpolationType"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #11
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #11
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %3, align 8
  br label %25

25:                                               ; preds = %13, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink17InterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %26 = getelementptr inbounds %"class.blink::CSSLengthListInterpolationType", %"class.blink::CSSLengthListInterpolationType"* %0, i64 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #11
  br label %42

42:                                               ; preds = %25, %38, %41
  %43 = bitcast %"class.blink::CSSLengthListInterpolationType"* %0 to i8*
  tail call void @free(i8* %43) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17InterpolationType20MaybeConvertPairwiseERKNS_8Keyframe24PropertySpecificKeyframeES4_RKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS0_17ConversionCheckerENSD_14default_deleteISF_EEEELj0ENSB_18PartitionAllocatorEEE(%"struct.blink::PairwiseInterpolationValue"* noalias sret, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32), %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32), %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16), %"class.WTF::Vector.214"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %8 = alloca %"struct.blink::InterpolationValue", align 8
  %9 = alloca %"struct.blink::InterpolationValue", align 8
  %10 = bitcast %"struct.blink::InterpolationValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %8, i64 0, i32 1, i32 0
  %13 = bitcast %"class.blink::InterpolationType"* %1 to void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.214"*)***
  %14 = bitcast %"struct.blink::InterpolationValue"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false)
  %15 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.214"*)**, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.214"*)*** %13, align 8
  %16 = getelementptr inbounds void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.214"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.214"*)** %15, i64 3
  %17 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.214"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.214"*)** %16, align 8
  call void %17(%"struct.blink::InterpolationValue"* nonnull sret %8, %"class.blink::InterpolationType"* %1, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32) %2, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %4, %"struct.blink::InterpolationValue"* dereferenceable(16) %5, %"class.WTF::Vector.214"* dereferenceable(16) %6) #11
  %18 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %11, align 8
  %19 = icmp eq %"class.blink::InterpolableValue"* %18, null
  br i1 %19, label %20, label %22

20:                                               ; preds = %7
  %21 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #11
  br label %64

22:                                               ; preds = %7
  %23 = bitcast %"struct.blink::InterpolationValue"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #11
  %24 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %9, i64 0, i32 1, i32 0
  %26 = bitcast %"struct.blink::InterpolationValue"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false)
  %27 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.214"*)**, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.214"*)*** %13, align 8
  %28 = getelementptr inbounds void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.214"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.214"*)** %27, i64 3
  %29 = load void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.214"*)*, void (%"struct.blink::InterpolationValue"*, %"class.blink::InterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"*, %"class.blink::InterpolationEnvironment"*, %"struct.blink::InterpolationValue"*, %"class.WTF::Vector.214"*)** %28, align 8
  call void %29(%"struct.blink::InterpolationValue"* nonnull sret %9, %"class.blink::InterpolationType"* %1, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32) %3, %"class.blink::InterpolationEnvironment"* dereferenceable(16) %4, %"struct.blink::InterpolationValue"* dereferenceable(16) %5, %"class.WTF::Vector.214"* dereferenceable(16) %6) #11
  %30 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %24, align 8
  %31 = icmp eq %"class.blink::InterpolableValue"* %30, null
  br i1 %31, label %32, label %34

32:                                               ; preds = %22
  %33 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false) #11
  br label %39

34:                                               ; preds = %22
  %35 = bitcast %"class.blink::InterpolationType"* %1 to void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)***
  %36 = load void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)**, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)** %36, i64 4
  %38 = load void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)*, void (%"struct.blink::PairwiseInterpolationValue"*, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"*)** %37, align 8
  call void %38(%"struct.blink::PairwiseInterpolationValue"* sret %0, %"class.blink::InterpolationType"* %1, %"struct.blink::InterpolationValue"* nonnull dereferenceable(16) %8, %"struct.blink::InterpolationValue"* nonnull dereferenceable(16) %9) #11
  br label %39

39:                                               ; preds = %34, %32
  %40 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %25, align 8
  %41 = icmp eq %"class.blink::NonInterpolableValue"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %40, i64 0, i32 1, i32 0
  %44 = getelementptr inbounds %"class.base::RefCounted.213", %"class.base::RefCounted.213"* %43, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %44) #11
  %45 = getelementptr inbounds %"class.base::RefCounted.213", %"class.base::RefCounted.213"* %43, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %55

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.base::RefCounted.213", %"class.base::RefCounted.213"* %43, i64 -2
  %50 = bitcast %"class.base::RefCounted.213"* %49 to %"class.blink::NonInterpolableValue"*
  %51 = bitcast %"class.base::RefCounted.213"* %49 to void (%"class.blink::NonInterpolableValue"*)***
  %52 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %52, i64 1
  %54 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %53, align 8
  call void %54(%"class.blink::NonInterpolableValue"* nonnull %50) #11
  br label %55

55:                                               ; preds = %48, %42, %39
  %56 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %24, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %24, align 8
  %57 = icmp eq %"class.blink::InterpolableValue"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %55
  %59 = bitcast %"class.blink::InterpolableValue"* %56 to void (%"class.blink::InterpolableValue"*)***
  %60 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %60, i64 1
  %62 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %61, align 8
  call void %62(%"class.blink::InterpolableValue"* nonnull %56) #11
  br label %63

63:                                               ; preds = %55, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #11
  br label %64

64:                                               ; preds = %63, %20
  %65 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %12, align 8
  %66 = icmp eq %"class.blink::NonInterpolableValue"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %65, i64 0, i32 1, i32 0
  %69 = getelementptr inbounds %"class.base::RefCounted.213", %"class.base::RefCounted.213"* %68, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %69) #11
  %70 = getelementptr inbounds %"class.base::RefCounted.213", %"class.base::RefCounted.213"* %68, i64 0, i32 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %80

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.base::RefCounted.213", %"class.base::RefCounted.213"* %68, i64 -2
  %75 = bitcast %"class.base::RefCounted.213"* %74 to %"class.blink::NonInterpolableValue"*
  %76 = bitcast %"class.base::RefCounted.213"* %74 to void (%"class.blink::NonInterpolableValue"*)***
  %77 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %77, i64 1
  %79 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %78, align 8
  call void %79(%"class.blink::NonInterpolableValue"* nonnull %75) #11
  br label %80

80:                                               ; preds = %73, %67, %64
  %81 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %11, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %11, align 8
  %82 = icmp eq %"class.blink::InterpolableValue"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %80
  %84 = bitcast %"class.blink::InterpolableValue"* %81 to void (%"class.blink::InterpolableValue"*)***
  %85 = load void (%"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %85, i64 1
  %87 = load void (%"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*)** %86, align 8
  call void %87(%"class.blink::InterpolableValue"* nonnull %81) #11
  br label %88

88:                                               ; preds = %80, %83
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #11
  ret void
}

declare void @_ZNK5blink20CSSInterpolationType18MaybeConvertSingleERKNS_8Keyframe24PropertySpecificKeyframeERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSD_14default_deleteISG_EEEELj0ENSB_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* sret, %"class.blink::CSSInterpolationType"*, %"class.blink::Keyframe::PropertySpecificKeyframe"* dereferenceable(32), %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16), %"class.WTF::Vector.214"* dereferenceable(16)) unnamed_addr #1

declare void @_ZNK5blink20CSSInterpolationType27MaybeConvertUnderlyingValueERKNS_24InterpolationEnvironmentE(%"struct.blink::InterpolationValue"* sret, %"class.blink::CSSInterpolationType"*, %"class.blink::InterpolationEnvironment"* dereferenceable(16)) unnamed_addr #1

declare void @_ZNK5blink20CSSInterpolationType5ApplyERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERNS_24InterpolationEnvironmentE(%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"*, %"class.blink::InterpolationEnvironment"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSValue"* @_ZNK5blink20CSSInterpolationType14CreateCSSValueERKNS_17InterpolableValueEPKNS_20NonInterpolableValueERKNS_18StyleResolverStateE(%"class.blink::CSSInterpolationType"*, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"*, %"class.blink::StyleResolverState"* dereferenceable(600)) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSValue"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink20CSSInterpolationType33PreInterpolationCompositeIfNeededENS_18InterpolationValueERKS1_NS_11EffectModel18CompositeOperationERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS8_14default_deleteISB_EEEELj0ENS6_18PartitionAllocatorEEE(%"struct.blink::InterpolationValue"* noalias sret, %"class.blink::CSSInterpolationType"*, %"struct.blink::InterpolationValue"*, %"struct.blink::InterpolationValue"* dereferenceable(16), i32, %"class.WTF::Vector.214"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %"struct.blink::InterpolationValue"* %2 to <2 x i64>*
  %9 = load <2 x i64>, <2 x i64>* %8, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %7, align 8
  %10 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 1, i32 0
  %11 = bitcast %"struct.blink::InterpolationValue"* %0 to <2 x i64>*
  store <2 x i64> %9, <2 x i64>* %11, align 8
  store %"class.blink::NonInterpolableValue"* null, %"class.blink::NonInterpolableValue"** %10, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolableValueENS2_14default_deleteIS5_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink20NonInterpolableValueEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength18MaybeConvertLengthERKNS_6LengthEf(%"class.blink::Length"* dereferenceable(8), float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Length"* @_ZNK3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.753"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.753", %"class.WTF::Vector.753"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.753", %"class.WTF::Vector.753"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Length"*, %"class.blink::Length"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %24, i64 %25
  ret %"class.blink::Length"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr.205"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1464"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1464", %"class.WTF::Vector.1464"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.1464", %"class.WTF::Vector.1464"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr.205"*, %"class.std::__1::unique_ptr.205"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.205"* %24, i64 %25
  ret %"class.std::__1::unique_ptr.205"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %class.scoped_refptr.211* @_ZN3WTF6VectorI13scoped_refptrIKN5blink20NonInterpolableValueEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1469"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1469", %"class.WTF::Vector.1469"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.1469", %"class.WTF::Vector.1469"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %class.scoped_refptr.211*, %class.scoped_refptr.211** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %class.scoped_refptr.211, %class.scoped_refptr.211* %24, i64 %25
  ret %class.scoped_refptr.211* %26
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19NonInterpolableListD2Ev(%"class.blink::NonInterpolableList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NonInterpolableList", %"class.blink::NonInterpolableList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink19NonInterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::NonInterpolableList", %"class.blink::NonInterpolableList"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.WTF::Vector.1469", %"class.WTF::Vector.1469"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %class.scoped_refptr.211*, %class.scoped_refptr.211** %4, align 8
  %6 = icmp eq %class.scoped_refptr.211* %5, null
  br i1 %6, label %41, label %7, !prof !12

7:                                                ; preds = %1
  %8 = bitcast %class.scoped_refptr.211* %5 to i8*
  %9 = getelementptr inbounds %"class.blink::NonInterpolableList", %"class.blink::NonInterpolableList"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %39, label %12, !prof !2

12:                                               ; preds = %7
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %class.scoped_refptr.211, %class.scoped_refptr.211* %5, i64 %13
  br label %15

15:                                               ; preds = %33, %12
  %16 = phi %class.scoped_refptr.211* [ %34, %33 ], [ %5, %12 ]
  %17 = getelementptr inbounds %class.scoped_refptr.211, %class.scoped_refptr.211* %16, i64 0, i32 0
  %18 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %17, align 8
  %19 = icmp eq %"class.blink::NonInterpolableValue"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %18, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.base::RefCounted.213", %"class.base::RefCounted.213"* %21, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %22) #11
  %23 = getelementptr inbounds %"class.base::RefCounted.213", %"class.base::RefCounted.213"* %21, i64 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.base::RefCounted.213", %"class.base::RefCounted.213"* %21, i64 -2
  %28 = bitcast %"class.base::RefCounted.213"* %27 to %"class.blink::NonInterpolableValue"*
  %29 = bitcast %"class.base::RefCounted.213"* %27 to void (%"class.blink::NonInterpolableValue"*)***
  %30 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %30, i64 1
  %32 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %31, align 8
  tail call void %32(%"class.blink::NonInterpolableValue"* nonnull %28) #11
  br label %33

33:                                               ; preds = %26, %20, %15
  %34 = getelementptr inbounds %class.scoped_refptr.211, %class.scoped_refptr.211* %16, i64 1
  %35 = icmp eq %class.scoped_refptr.211* %34, %14
  br i1 %35, label %36, label %15

36:                                               ; preds = %33
  store i32 0, i32* %9, align 4
  %37 = bitcast %"class.WTF::Vector.1469"* %3 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %7
  %40 = phi i8* [ %38, %36 ], [ %8, %7 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #11
  store %class.scoped_refptr.211* null, %class.scoped_refptr.211** %4, align 8
  br label %41

41:                                               ; preds = %1, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19NonInterpolableListD0Ev(%"class.blink::NonInterpolableList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NonInterpolableList", %"class.blink::NonInterpolableList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink19NonInterpolableListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::NonInterpolableList", %"class.blink::NonInterpolableList"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.WTF::Vector.1469", %"class.WTF::Vector.1469"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %class.scoped_refptr.211*, %class.scoped_refptr.211** %4, align 8
  %6 = icmp eq %class.scoped_refptr.211* %5, null
  br i1 %6, label %41, label %7, !prof !12

7:                                                ; preds = %1
  %8 = bitcast %class.scoped_refptr.211* %5 to i8*
  %9 = getelementptr inbounds %"class.blink::NonInterpolableList", %"class.blink::NonInterpolableList"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %39, label %12, !prof !2

12:                                               ; preds = %7
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %class.scoped_refptr.211, %class.scoped_refptr.211* %5, i64 %13
  br label %15

15:                                               ; preds = %33, %12
  %16 = phi %class.scoped_refptr.211* [ %34, %33 ], [ %5, %12 ]
  %17 = getelementptr inbounds %class.scoped_refptr.211, %class.scoped_refptr.211* %16, i64 0, i32 0
  %18 = load %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"** %17, align 8
  %19 = icmp eq %"class.blink::NonInterpolableValue"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::NonInterpolableValue", %"class.blink::NonInterpolableValue"* %18, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.base::RefCounted.213", %"class.base::RefCounted.213"* %21, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %22) #11
  %23 = getelementptr inbounds %"class.base::RefCounted.213", %"class.base::RefCounted.213"* %21, i64 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.base::RefCounted.213", %"class.base::RefCounted.213"* %21, i64 -2
  %28 = bitcast %"class.base::RefCounted.213"* %27 to %"class.blink::NonInterpolableValue"*
  %29 = bitcast %"class.base::RefCounted.213"* %27 to void (%"class.blink::NonInterpolableValue"*)***
  %30 = load void (%"class.blink::NonInterpolableValue"*)**, void (%"class.blink::NonInterpolableValue"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %30, i64 1
  %32 = load void (%"class.blink::NonInterpolableValue"*)*, void (%"class.blink::NonInterpolableValue"*)** %31, align 8
  tail call void %32(%"class.blink::NonInterpolableValue"* nonnull %28) #11
  br label %33

33:                                               ; preds = %26, %20, %15
  %34 = getelementptr inbounds %class.scoped_refptr.211, %class.scoped_refptr.211* %16, i64 1
  %35 = icmp eq %class.scoped_refptr.211* %34, %14
  br i1 %35, label %36, label %15

36:                                               ; preds = %33
  store i32 0, i32* %9, align 4
  %37 = bitcast %"class.WTF::Vector.1469"* %3 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %7
  %40 = phi i8* [ %38, %36 ], [ %8, %7 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #11
  br label %41

41:                                               ; preds = %1, %39
  %42 = bitcast %"class.blink::NonInterpolableList"* %0 to i8*
  tail call void @free(i8* %42) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink19NonInterpolableList7GetTypeEv(%"class.blink::NonInterpolableList"*) unnamed_addr #0 comdat align 2 {
  %2 = load i8*, i8** @_ZN5blink19NonInterpolableList12static_type_E, align 8
  ret i8* %2
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr.205"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolableValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1464"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1464", %"class.WTF::Vector.1464"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.1464", %"class.WTF::Vector.1464"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr.205"*, %"class.std::__1::unique_ptr.205"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.205"* %24, i64 %25
  ret %"class.std::__1::unique_ptr.205"* %26
}

declare void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #1

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #1

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InterpolationTypeD2Ev(%"class.blink::InterpolationType"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InterpolationType", %"class.blink::InterpolationType"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink17InterpolationTypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InterpolationType", %"class.blink::InterpolationType"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #11
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InterpolationTypeD0Ev(%"class.blink::InterpolationType"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17InterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_(%"struct.blink::PairwiseInterpolationValue"* noalias sret, %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = bitcast %"struct.blink::InterpolationValue"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %5, align 8
  %8 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %"struct.blink::InterpolationValue"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %8, align 8
  %11 = bitcast %"struct.blink::PairwiseInterpolationValue"* %0 to i64*
  store i64 %7, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.blink::PairwiseInterpolationValue", %"struct.blink::PairwiseInterpolationValue"* %0, i64 0, i32 1
  %13 = bitcast %"class.std::__1::unique_ptr.205"* %12 to i64*
  store i64 %10, i64* %13, align 8
  %14 = getelementptr inbounds %"struct.blink::PairwiseInterpolationValue", %"struct.blink::PairwiseInterpolationValue"* %0, i64 0, i32 2
  %15 = bitcast %class.scoped_refptr.211* %14 to i64*
  store i64 0, i64* %15, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17InterpolationType9CompositeERNS_20UnderlyingValueOwnerEdRKNS_18InterpolationValueEd(%"class.blink::InterpolationType"*, %"class.blink::UnderlyingValueOwner"* dereferenceable(40), double, %"struct.blink::InterpolationValue"* dereferenceable(16), double) unnamed_addr #0 comdat align 2 {
  %6 = tail call dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZN5blink20UnderlyingValueOwner12MutableValueEv(%"class.blink::UnderlyingValueOwner"* %1) #11
  %7 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %7, align 8
  %9 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %9, align 8
  %11 = bitcast %"class.blink::InterpolableValue"* %8 to void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)***
  %12 = load void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %12, i64 14
  %14 = load void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %13, align 8
  tail call void %14(%"class.blink::InterpolableValue"* %8, double %2, %"class.blink::InterpolableValue"* dereferenceable(8) %10) #11
  ret void
}

declare dereferenceable(16) %"struct.blink::InterpolationValue"* @_ZN5blink20UnderlyingValueOwner12MutableValueEv(%"class.blink::UnderlyingValueOwner"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23UnderlyingLengthCheckerD0Ev(%"class.blink::UnderlyingLengthChecker"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.blink::UnderlyingLengthChecker"* %0 to i8*
  tail call void @free(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink23UnderlyingLengthChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE(%"class.blink::UnderlyingLengthChecker"*, %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::UnderlyingLengthChecker", %"class.blink::UnderlyingLengthChecker"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %6, align 8
  %8 = icmp eq %"class.blink::InterpolableValue"* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.blink::InterpolableValue"* %7 to %"class.blink::InterpolableList"*
  %11 = getelementptr inbounds %"class.blink::InterpolableList", %"class.blink::InterpolableList"* %10, i64 0, i32 1, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %3, %9
  %14 = phi i32 [ %12, %9 ], [ 0, %3 ]
  %15 = icmp eq i32 %5, %14
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InterpolationType17ConversionCheckerD2Ev(%"class.blink::InterpolationType::ConversionChecker"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_23UnderlyingLengthCheckerENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.214"*, %"class.std::__1::unique_ptr.220"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.217"*, %"class.std::__1::unique_ptr.217"** %16, align 8
  br i1 %15, label %18, label %45, !prof !12

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.217"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([185 x i8], [185 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.214"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.217"*, %"class.std::__1::unique_ptr.217"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.217"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.217"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !12

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.214"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.214"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.217"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.217"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.217"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.220"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::UnderlyingLengthChecker"* null, %"class.blink::UnderlyingLengthChecker"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.217"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength13CreateNeutralEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26InheritedLengthListCheckerD2Ev(%"class.blink::InheritedLengthListChecker"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InheritedLengthListChecker", %"class.blink::InheritedLengthListChecker"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink26InheritedLengthListCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InheritedLengthListChecker", %"class.blink::InheritedLengthListChecker"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.WTF::Vector.753", %"class.WTF::Vector.753"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::Length"*, %"class.blink::Length"** %4, align 8
  %6 = icmp eq %"class.blink::Length"* %5, null
  br i1 %6, label %29, label %7, !prof !12

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::Length"* %5 to i8*
  %9 = getelementptr inbounds %"class.blink::InheritedLengthListChecker", %"class.blink::InheritedLengthListChecker"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %27, label %12, !prof !2

12:                                               ; preds = %7
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 %13
  br label %15

15:                                               ; preds = %21, %12
  %16 = phi %"class.blink::Length"* [ %22, %21 ], [ %5, %12 ]
  %17 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %16, i64 0, i32 2
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 8
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %16) #11
  br label %21

21:                                               ; preds = %20, %15
  %22 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %16, i64 1
  %23 = icmp eq %"class.blink::Length"* %22, %14
  br i1 %23, label %24, label %15

24:                                               ; preds = %21
  store i32 0, i32* %9, align 4
  %25 = bitcast %"class.WTF::Vector.753"* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %7
  %28 = phi i8* [ %26, %24 ], [ %8, %7 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %28) #11
  store %"class.blink::Length"* null, %"class.blink::Length"** %4, align 8
  br label %29

29:                                               ; preds = %1, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26InheritedLengthListCheckerD0Ev(%"class.blink::InheritedLengthListChecker"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InheritedLengthListChecker", %"class.blink::InheritedLengthListChecker"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink26InheritedLengthListCheckerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InheritedLengthListChecker", %"class.blink::InheritedLengthListChecker"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.WTF::Vector.753", %"class.WTF::Vector.753"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::Length"*, %"class.blink::Length"** %4, align 8
  %6 = icmp eq %"class.blink::Length"* %5, null
  br i1 %6, label %29, label %7, !prof !12

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::Length"* %5 to i8*
  %9 = getelementptr inbounds %"class.blink::InheritedLengthListChecker", %"class.blink::InheritedLengthListChecker"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %27, label %12, !prof !2

12:                                               ; preds = %7
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 %13
  br label %15

15:                                               ; preds = %21, %12
  %16 = phi %"class.blink::Length"* [ %22, %21 ], [ %5, %12 ]
  %17 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %16, i64 0, i32 2
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 8
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %16) #11
  br label %21

21:                                               ; preds = %20, %15
  %22 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %16, i64 1
  %23 = icmp eq %"class.blink::Length"* %22, %14
  br i1 %23, label %24, label %15

24:                                               ; preds = %21
  store i32 0, i32* %9, align 4
  %25 = bitcast %"class.WTF::Vector.753"* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %7
  %28 = phi i8* [ %26, %24 ], [ %8, %7 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %28) #11
  br label %29

29:                                               ; preds = %1, %27
  %30 = bitcast %"class.blink::InheritedLengthListChecker"* %0 to i8*
  tail call void @free(i8* %30) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20CSSInterpolationType20CSSConversionChecker7IsValidERKNS_24InterpolationEnvironmentERKNS_18InterpolationValueE(%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::InterpolationEnvironment"* dereferenceable(16), %"struct.blink::InterpolationValue"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::InterpolationEnvironment", %"class.blink::InterpolationEnvironment"* %1, i64 1
  %5 = bitcast %"class.blink::InterpolationEnvironment"* %4 to %"class.blink::StyleResolverState"**
  %6 = load %"class.blink::StyleResolverState"*, %"class.blink::StyleResolverState"** %5, align 8
  %7 = bitcast %"class.blink::CSSInterpolationType::CSSConversionChecker"* %0 to i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)***
  %8 = load i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)**, i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)*, i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)** %8, i64 3
  %10 = load i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)*, i1 (%"class.blink::CSSInterpolationType::CSSConversionChecker"*, %"class.blink::StyleResolverState"*, %"struct.blink::InterpolationValue"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::CSSInterpolationType::CSSConversionChecker"* %0, %"class.blink::StyleResolverState"* dereferenceable(600) %6, %"struct.blink::InterpolationValue"* dereferenceable(16) %2) #11
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink26InheritedLengthListChecker7IsValidERKNS_18StyleResolverStateERKNS_18InterpolationValueE(%"class.blink::InheritedLengthListChecker"*, %"class.blink::StyleResolverState"* dereferenceable(600), %"struct.blink::InterpolationValue"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::Vector.753", align 8
  %5 = bitcast %"class.WTF::Vector.753"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.WTF::Vector.753", %"class.WTF::Vector.753"* %4, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.WTF::Vector.753", %"class.WTF::Vector.753"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #11
  %8 = getelementptr inbounds %"class.blink::InheritedLengthListChecker", %"class.blink::InheritedLengthListChecker"* %0, i64 0, i32 1
  %9 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::StyleResolverState", %"class.blink::StyleResolverState"* %1, i64 0, i32 4, i32 0
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = call zeroext i1 @_ZN5blink27LengthListPropertyFunctions13GetLengthListERKNS_11CSSPropertyERKNS_13ComputedStyleERN3WTF6VectorINS_6LengthELj0ENS7_18PartitionAllocatorEEE(%"class.blink::CSSProperty"* dereferenceable(24) %9, %"class.blink::ComputedStyle"* dereferenceable(104) %11, %"class.WTF::Vector.753"* nonnull dereferenceable(16) %4) #11
  %13 = getelementptr inbounds %"class.blink::InheritedLengthListChecker", %"class.blink::InheritedLengthListChecker"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = load i32, i32* %7, align 4
  %16 = icmp eq i32 %14, %15
  br i1 %16, label %17, label %73

17:                                               ; preds = %3
  %18 = icmp eq i32 %14, 0
  br i1 %18, label %73, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"class.blink::InheritedLengthListChecker", %"class.blink::InheritedLengthListChecker"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %21 = load %"class.blink::Length"*, %"class.blink::Length"** %20, align 8
  %22 = load %"class.blink::Length"*, %"class.blink::Length"** %6, align 8
  %23 = zext i32 %14 to i64
  %24 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %21, i64 %23
  br label %25

25:                                               ; preds = %69, %19
  %26 = phi %"class.blink::Length"* [ %71, %69 ], [ %22, %19 ]
  %27 = phi %"class.blink::Length"* [ %70, %69 ], [ %21, %19 ]
  %28 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %27, i64 0, i32 2
  %29 = load i8, i8* %28, align 1
  %30 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %26, i64 0, i32 2
  %31 = load i8, i8* %30, align 1
  %32 = icmp eq i8 %29, %31
  br i1 %32, label %33, label %73

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %27, i64 0, i32 1
  %35 = load i8, i8* %34, align 4, !range !73
  %36 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %26, i64 0, i32 1
  %37 = load i8, i8* %36, align 4, !range !73
  %38 = icmp eq i8 %35, %37
  br i1 %38, label %39, label %73

39:                                               ; preds = %33
  %40 = icmp eq i8 %29, 12
  br i1 %40, label %69, label %41

41:                                               ; preds = %39
  %42 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %27, i64 0, i32 3
  %43 = load i8, i8* %42, align 2, !range !73
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %48, label %45

45:                                               ; preds = %41
  %46 = bitcast %"class.blink::Length"* %27 to float*
  %47 = load float, float* %46, align 4
  br label %52

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %27, i64 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = sitofp i32 %50 to float
  br label %52

52:                                               ; preds = %48, %45
  %53 = phi float [ %47, %45 ], [ %51, %48 ]
  %54 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %26, i64 0, i32 3
  %55 = load i8, i8* %54, align 2, !range !73
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %52
  %58 = bitcast %"class.blink::Length"* %26 to float*
  %59 = load float, float* %58, align 4
  br label %64

60:                                               ; preds = %52
  %61 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %26, i64 0, i32 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = sitofp i32 %62 to float
  br label %64

64:                                               ; preds = %60, %57
  %65 = phi float [ %59, %57 ], [ %63, %60 ]
  %66 = fcmp oeq float %53, %65
  br i1 %66, label %69, label %67

67:                                               ; preds = %64
  %68 = call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %27, %"class.blink::Length"* dereferenceable(8) %26) #11
  br i1 %68, label %69, label %73

69:                                               ; preds = %67, %64, %39
  %70 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %27, i64 1
  %71 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %26, i64 1
  %72 = icmp eq %"class.blink::Length"* %70, %24
  br i1 %72, label %73, label %25

73:                                               ; preds = %25, %33, %67, %69, %3, %17
  %74 = phi i1 [ false, %3 ], [ true, %17 ], [ false, %67 ], [ true, %69 ], [ false, %33 ], [ false, %25 ]
  %75 = load %"class.blink::Length"*, %"class.blink::Length"** %6, align 8
  %76 = icmp eq %"class.blink::Length"* %75, null
  br i1 %76, label %98, label %77, !prof !12

77:                                               ; preds = %73
  %78 = bitcast %"class.blink::Length"* %75 to i8*
  %79 = load i32, i32* %7, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %96, label %81, !prof !2

81:                                               ; preds = %77
  %82 = zext i32 %79 to i64
  %83 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %75, i64 %82
  br label %84

84:                                               ; preds = %90, %81
  %85 = phi %"class.blink::Length"* [ %91, %90 ], [ %75, %81 ]
  %86 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %85, i64 0, i32 2
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %87, 8
  br i1 %88, label %89, label %90

89:                                               ; preds = %84
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %85) #11
  br label %90

90:                                               ; preds = %89, %84
  %91 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %85, i64 1
  %92 = icmp eq %"class.blink::Length"* %91, %83
  br i1 %92, label %93, label %84

93:                                               ; preds = %90
  store i32 0, i32* %7, align 4
  %94 = bitcast %"class.WTF::Vector.753"* %4 to i8**
  %95 = load i8*, i8** %94, align 8
  br label %96

96:                                               ; preds = %93, %77
  %97 = phi i8* [ %95, %93 ], [ %78, %77 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %97) #11
  store %"class.blink::Length"* null, %"class.blink::Length"** %6, align 8
  br label %98

98:                                               ; preds = %73, %96
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #11
  ret i1 %74
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink6LengthEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS3_26InheritedLengthListCheckerENS6_ISC_EEEEEEvOT_(%"class.WTF::Vector.214"*, %"class.std::__1::unique_ptr.1442"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.214", %"class.WTF::Vector.214"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.217"*, %"class.std::__1::unique_ptr.217"** %16, align 8
  br i1 %15, label %18, label %45, !prof !12

18:                                               ; preds = %2
  %19 = icmp eq %"class.std::__1::unique_ptr.217"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS2_14default_deleteIS6_EEEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([185 x i8], [185 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17InterpolationType17ConversionCheckerENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.214"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.std::__1::unique_ptr.217"*, %"class.std::__1::unique_ptr.217"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.std::__1::unique_ptr.217"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.std::__1::unique_ptr.217"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !12

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector.214"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector.214"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.std::__1::unique_ptr.217"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.std::__1::unique_ptr.217"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.217"* %46, i64 %48
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.1442", %"class.std::__1::unique_ptr.1442"* %1, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.std::__1::unique_ptr.1442"* %1 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.blink::InheritedLengthListChecker"* null, %"class.blink::InheritedLengthListChecker"** %50, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.217"* %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

declare %"class.blink::InterpolableLength"* @_ZN5blink18InterpolableLength20MaybeConvertCSSValueERKNS_8CSSValueE(%"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1451"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1451", %"class.WTF::Vector.1451"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.1451", %"class.WTF::Vector.1451"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member"*, %"class.blink::Member"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %24, i64 %25
  ret %"class.blink::Member"* %26
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZNK5blink30CSSLengthListInterpolationType17MaybeMergeSinglesEONS3_18InterpolationValueES6_E3$_2JEEEFNS3_26PairwiseInterpolationValueES6_S6_EE3RunEPNS0_13BindStateBaseES6_S6_"(%"struct.blink::PairwiseInterpolationValue"* noalias sret, %"class.base::internal::BindStateBase"* nocapture readnone, %"struct.blink::InterpolationValue"* nocapture dereferenceable(16), %"struct.blink::InterpolationValue"* nocapture dereferenceable(16)) #0 align 2 {
  %5 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %5, align 8, !noalias !74
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %5, align 8, !noalias !74
  %7 = getelementptr inbounds %"struct.blink::InterpolationValue", %"struct.blink::InterpolationValue"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"** %7, align 8, !noalias !74
  store %"class.blink::InterpolableValue"* null, %"class.blink::InterpolableValue"** %7, align 8, !noalias !74
  tail call void @_ZN5blink18InterpolableLength12MergeSinglesENSt3__110unique_ptrINS_17InterpolableValueENS1_14default_deleteIS3_EEEES6_(%"struct.blink::PairwiseInterpolationValue"* sret %0, %"class.blink::InterpolableValue"* %6, %"class.blink::InterpolableValue"* %8) #11
  ret void
}

declare void @_ZN5blink18InterpolableLength12MergeSinglesENSt3__110unique_ptrINS_17InterpolableValueENS1_14default_deleteIS3_EEEES6_(%"struct.blink::PairwiseInterpolationValue"* sret, %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZNK5blink30CSSLengthListInterpolationType17MaybeMergeSinglesEONS2_18InterpolationValueES5_E3$_2JEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal7InvokerINS0_9BindStateIPFbPKN5blink17InterpolableValueES6_EJEEES7_E3RunEPNS0_13BindStateBaseES6_S6_(%"class.base::internal::BindStateBase"*, %"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*) #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to i1 (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)**
  %6 = load i1 (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)*, i1 (%"class.blink::InterpolableValue"*, %"class.blink::InterpolableValue"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.blink::InterpolableValue"* %1, %"class.blink::InterpolableValue"* %2) #11
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFbPKN5blink17InterpolableValueES5_EJEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal7InvokerINS0_9BindStateIPFbPKN5blink20NonInterpolableValueES6_EJEEES7_E3RunEPNS0_13BindStateBaseES6_S6_(%"class.base::internal::BindStateBase"*, %"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"*) #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to i1 (%"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"*)**
  %6 = load i1 (%"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"*)*, i1 (%"class.blink::NonInterpolableValue"*, %"class.blink::NonInterpolableValue"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.blink::NonInterpolableValue"* %1, %"class.blink::NonInterpolableValue"* %2) #11
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFbPKN5blink20NonInterpolableValueES5_EJEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZNK5blink30CSSLengthListInterpolationType9CompositeERNS3_20UnderlyingValueOwnerEdRKNS3_18InterpolationValueEdE3$_3JEEEFvRNS3_15UnderlyingValueEdRKNS3_17InterpolableValueEPKNS3_20NonInterpolableValueEEE3RunEPNS0_13BindStateBaseESD_dSG_SJ_"(%"class.base::internal::BindStateBase"* nocapture readnone, %"class.blink::UnderlyingValue"* dereferenceable(8), double, %"class.blink::InterpolableValue"* dereferenceable(8), %"class.blink::NonInterpolableValue"*) #0 align 2 {
  %6 = bitcast %"class.blink::UnderlyingValue"* %1 to %"class.blink::InterpolableValue"* (%"class.blink::UnderlyingValue"*)***
  %7 = load %"class.blink::InterpolableValue"* (%"class.blink::UnderlyingValue"*)**, %"class.blink::InterpolableValue"* (%"class.blink::UnderlyingValue"*)*** %6, align 8
  %8 = load %"class.blink::InterpolableValue"* (%"class.blink::UnderlyingValue"*)*, %"class.blink::InterpolableValue"* (%"class.blink::UnderlyingValue"*)** %7, align 8
  %9 = tail call dereferenceable(8) %"class.blink::InterpolableValue"* %8(%"class.blink::UnderlyingValue"* %1) #11
  %10 = bitcast %"class.blink::InterpolableValue"* %9 to void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)***
  %11 = load void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)**, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %11, i64 14
  %13 = load void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)*, void (%"class.blink::InterpolableValue"*, double, %"class.blink::InterpolableValue"*)** %12, align 8
  tail call void %13(%"class.blink::InterpolableValue"* %9, double %2, %"class.blink::InterpolableValue"* dereferenceable(8) %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZNK5blink30CSSLengthListInterpolationType9CompositeERNS2_20UnderlyingValueOwnerEdRKNS2_18InterpolationValueEdE3$_3JEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Length"* @_ZN3WTF6VectorIN5blink6LengthELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.753"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.753", %"class.WTF::Vector.753"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.753", %"class.WTF::Vector.753"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Length"*, %"class.blink::Length"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %24, i64 %25
  ret %"class.blink::Length"* %26
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!5 = distinct !{!5, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN5blink26ListInterpolationFunctions10CreateListIZNKS_30CSSLengthListInterpolationType19MaybeConvertNeutralERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS8_14default_deleteISB_EEEELj0ENS6_18PartitionAllocatorEEEE3$_0EES3_jT_: argument 0"}
!8 = distinct !{!8, !"_ZN5blink26ListInterpolationFunctions10CreateListIZNKS_30CSSLengthListInterpolationType19MaybeConvertNeutralERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS8_14default_deleteISB_EEEELj0ENS6_18PartitionAllocatorEEEE3$_0EES3_jT_"}
!9 = !{!10, !7}
!10 = distinct !{!10, !11, !"_ZZNK5blink30CSSLengthListInterpolationType19MaybeConvertNeutralERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEEENK3$_0clEj: argument 0"}
!11 = distinct !{!11, !"_ZZNK5blink30CSSLengthListInterpolationType19MaybeConvertNeutralERKNS_18InterpolationValueERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS6_14default_deleteIS9_EEEELj0ENS4_18PartitionAllocatorEEEENK3$_0clEj"}
!12 = !{!"branch_weights", i32 2000, i32 1}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!15 = distinct !{!15, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN5blink26ListInterpolationFunctions10CreateListIZNS_L22MaybeConvertLengthListERKN3WTF6VectorINS_6LengthELj0ENS2_18PartitionAllocatorEEEfE3$_4EENS_18InterpolationValueEjT_: argument 0"}
!18 = distinct !{!18, !"_ZN5blink26ListInterpolationFunctions10CreateListIZNS_L22MaybeConvertLengthListERKN3WTF6VectorINS_6LengthELj0ENS2_18PartitionAllocatorEEEfE3$_4EENS_18InterpolationValueEjT_"}
!19 = !{!20, !17}
!20 = distinct !{!20, !21, !"_ZZN5blinkL22MaybeConvertLengthListERKN3WTF6VectorINS_6LengthELj0ENS0_18PartitionAllocatorEEEfENK3$_4clEj: argument 0"}
!21 = distinct !{!21, !"_ZZN5blinkL22MaybeConvertLengthListERKN3WTF6VectorINS_6LengthELj0ENS0_18PartitionAllocatorEEEfENK3$_4clEj"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!24 = distinct !{!24, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!27 = distinct !{!27, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN5blink26ListInterpolationFunctions10CreateListIZNKS_30CSSLengthListInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSB_14default_deleteISE_EEEELj0ENS9_18PartitionAllocatorEEEE3$_1EENS_18InterpolationValueEjT_: argument 0"}
!30 = distinct !{!30, !"_ZN5blink26ListInterpolationFunctions10CreateListIZNKS_30CSSLengthListInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENSB_14default_deleteISE_EEEELj0ENS9_18PartitionAllocatorEEEE3$_1EENS_18InterpolationValueEjT_"}
!31 = !{!32, !29}
!32 = distinct !{!32, !33, !"_ZN5blink26ListInterpolationFunctions15CreateEmptyListEv: argument 0"}
!33 = distinct !{!33, !"_ZN5blink26ListInterpolationFunctions15CreateEmptyListEv"}
!34 = !{!35, !29}
!35 = distinct !{!35, !36, !"_ZZNK5blink30CSSLengthListInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS9_14default_deleteISC_EEEELj0ENS7_18PartitionAllocatorEEEENK3$_1clEj: argument 0"}
!36 = distinct !{!36, !"_ZZNK5blink30CSSLengthListInterpolationType17MaybeConvertValueERKNS_8CSSValueEPKNS_18StyleResolverStateERN3WTF6VectorINSt3__110unique_ptrINS_17InterpolationType17ConversionCheckerENS9_14default_deleteISC_EEEELj0ENS7_18PartitionAllocatorEEEENK3$_1clEj"}
!37 = !{!38, !40, !42}
!38 = distinct !{!38, !39, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERZNK5blink30CSSLengthListInterpolationType17MaybeMergeSinglesEONS3_18InterpolationValueES6_E3$_2JEEEDcOT0_DpOT1_: argument 0"}
!39 = distinct !{!39, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERZNK5blink30CSSLengthListInterpolationType17MaybeMergeSinglesEONS3_18InterpolationValueES6_E3$_2JEEEDcOT0_DpOT1_"}
!40 = distinct !{!40, !41, !"_ZN4base13BindRepeatingIRZNK5blink30CSSLengthListInterpolationType17MaybeMergeSinglesEONS1_18InterpolationValueES4_E3$_2JEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!41 = distinct !{!41, !"_ZN4base13BindRepeatingIRZNK5blink30CSSLengthListInterpolationType17MaybeMergeSinglesEONS1_18InterpolationValueES4_E3$_2JEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!42 = distinct !{!42, !43, !"_ZN3WTF13BindRepeatingIZNK5blink30CSSLengthListInterpolationType17MaybeMergeSinglesEONS1_18InterpolationValueES4_E3$_2JEFNS1_26PairwiseInterpolationValueES4_S4_EEEN4base17RepeatingCallbackIT1_EET_DpOT0_: argument 0"}
!43 = distinct !{!43, !"_ZN3WTF13BindRepeatingIZNK5blink30CSSLengthListInterpolationType17MaybeMergeSinglesEONS1_18InterpolationValueES4_E3$_2JEFNS1_26PairwiseInterpolationValueES4_S4_EEEN4base17RepeatingCallbackIT1_EET_DpOT0_"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!46 = distinct !{!46, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!47 = !{!48, !50, !52}
!48 = distinct !{!48, !49, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERPFbPKN5blink17InterpolableValueES6_EJEEEDcOT0_DpOT1_: argument 0"}
!49 = distinct !{!49, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERPFbPKN5blink17InterpolableValueES6_EJEEEDcOT0_DpOT1_"}
!50 = distinct !{!50, !51, !"_ZN4base13BindRepeatingIRPFbPKN5blink17InterpolableValueES4_EJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!51 = distinct !{!51, !"_ZN4base13BindRepeatingIRPFbPKN5blink17InterpolableValueES4_EJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!52 = distinct !{!52, !53, !"_ZN3WTF13BindRepeatingIPFbPKN5blink17InterpolableValueES4_EJES5_EEN4base17RepeatingCallbackIT1_EET_DpOT0_: argument 0"}
!53 = distinct !{!53, !"_ZN3WTF13BindRepeatingIPFbPKN5blink17InterpolableValueES4_EJES5_EEN4base17RepeatingCallbackIT1_EET_DpOT0_"}
!54 = !{!55, !57, !59}
!55 = distinct !{!55, !56, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERPFbPKN5blink20NonInterpolableValueES6_EJEEEDcOT0_DpOT1_: argument 0"}
!56 = distinct !{!56, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERPFbPKN5blink20NonInterpolableValueES6_EJEEEDcOT0_DpOT1_"}
!57 = distinct !{!57, !58, !"_ZN4base13BindRepeatingIRPFbPKN5blink20NonInterpolableValueES4_EJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!58 = distinct !{!58, !"_ZN4base13BindRepeatingIRPFbPKN5blink20NonInterpolableValueES4_EJEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!59 = distinct !{!59, !60, !"_ZN3WTF13BindRepeatingIPFbPKN5blink20NonInterpolableValueES4_EJES5_EEN4base17RepeatingCallbackIT1_EET_DpOT0_: argument 0"}
!60 = distinct !{!60, !"_ZN3WTF13BindRepeatingIPFbPKN5blink20NonInterpolableValueES4_EJES5_EEN4base17RepeatingCallbackIT1_EET_DpOT0_"}
!61 = !{!62, !64, !66}
!62 = distinct !{!62, !63, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERZNK5blink30CSSLengthListInterpolationType9CompositeERNS3_20UnderlyingValueOwnerEdRKNS3_18InterpolationValueEdE3$_3JEEEDcOT0_DpOT1_: argument 0"}
!63 = distinct !{!63, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERZNK5blink30CSSLengthListInterpolationType9CompositeERNS3_20UnderlyingValueOwnerEdRKNS3_18InterpolationValueEdE3$_3JEEEDcOT0_DpOT1_"}
!64 = distinct !{!64, !65, !"_ZN4base13BindRepeatingIRZNK5blink30CSSLengthListInterpolationType9CompositeERNS1_20UnderlyingValueOwnerEdRKNS1_18InterpolationValueEdE3$_3JEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!65 = distinct !{!65, !"_ZN4base13BindRepeatingIRZNK5blink30CSSLengthListInterpolationType9CompositeERNS1_20UnderlyingValueOwnerEdRKNS1_18InterpolationValueEdE3$_3JEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!66 = distinct !{!66, !67, !"_ZN3WTF13BindRepeatingIZNK5blink30CSSLengthListInterpolationType9CompositeERNS1_20UnderlyingValueOwnerEdRKNS1_18InterpolationValueEdE3$_3JEFvRNS1_15UnderlyingValueEdRKNS1_17InterpolableValueEPKNS1_20NonInterpolableValueEEEEN4base17RepeatingCallbackIT1_EET_DpOT0_: argument 0"}
!67 = distinct !{!67, !"_ZN3WTF13BindRepeatingIZNK5blink30CSSLengthListInterpolationType9CompositeERNS1_20UnderlyingValueOwnerEdRKNS1_18InterpolationValueEdE3$_3JEFvRNS1_15UnderlyingValueEdRKNS1_17InterpolableValueEPKNS1_20NonInterpolableValueEEEEN4base17RepeatingCallbackIT1_EET_DpOT0_"}
!68 = distinct !{!68, !69}
!69 = !{!"llvm.loop.unroll.disable"}
!70 = !{!71}
!71 = distinct !{!71, !72, !"_ZNK5blink17InterpolationType11GetPropertyEv: argument 0"}
!72 = distinct !{!72, !"_ZNK5blink17InterpolationType11GetPropertyEv"}
!73 = !{i8 0, i8 2}
!74 = !{!75, !77, !79, !81}
!75 = distinct !{!75, !76, !"_ZZNK5blink30CSSLengthListInterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_ENK3$_2clES2_S2_: argument 0"}
!76 = distinct !{!76, !"_ZZNK5blink30CSSLengthListInterpolationType17MaybeMergeSinglesEONS_18InterpolationValueES2_ENK3$_2clES2_S2_"}
!77 = distinct !{!77, !78, !"_ZN4base8internal13FunctorTraitsIZNK5blink30CSSLengthListInterpolationType17MaybeMergeSinglesEONS2_18InterpolationValueES5_E3$_2vE6InvokeIRKS6_JS4_S4_EEENS2_26PairwiseInterpolationValueEOT_DpOT0_: argument 0"}
!78 = distinct !{!78, !"_ZN4base8internal13FunctorTraitsIZNK5blink30CSSLengthListInterpolationType17MaybeMergeSinglesEONS2_18InterpolationValueES5_E3$_2vE6InvokeIRKS6_JS4_S4_EEENS2_26PairwiseInterpolationValueEOT_DpOT0_"}
!79 = distinct !{!79, !80, !"_ZN4base8internal12InvokeHelperILb0EN5blink26PairwiseInterpolationValueEE8MakeItSoIRKZNKS2_30CSSLengthListInterpolationType17MaybeMergeSinglesEONS2_18InterpolationValueES8_E3$_2JS7_S7_EEES3_OT_DpOT0_: argument 0"}
!80 = distinct !{!80, !"_ZN4base8internal12InvokeHelperILb0EN5blink26PairwiseInterpolationValueEE8MakeItSoIRKZNKS2_30CSSLengthListInterpolationType17MaybeMergeSinglesEONS2_18InterpolationValueES8_E3$_2JS7_S7_EEES3_OT_DpOT0_"}
!81 = distinct !{!81, !82, !"_ZN4base8internal7InvokerINS0_9BindStateIZNK5blink30CSSLengthListInterpolationType17MaybeMergeSinglesEONS3_18InterpolationValueES6_E3$_2JEEEFNS3_26PairwiseInterpolationValueES6_S6_EE7RunImplIRKS7_RKNSt3__15tupleIJEEEJEEES9_OT_OT0_NSF_16integer_sequenceImJXspT1_EEEES6_S6_: argument 0"}
!82 = distinct !{!82, !"_ZN4base8internal7InvokerINS0_9BindStateIZNK5blink30CSSLengthListInterpolationType17MaybeMergeSinglesEONS3_18InterpolationValueES6_E3$_2JEEEFNS3_26PairwiseInterpolationValueES6_S6_EE7RunImplIRKS7_RKNSt3__15tupleIJEEEJEEES9_OT_OT0_NSF_16integer_sequenceImJXspT1_EEEES6_S6_"}
