; ModuleID = '../../third_party/boringssl/src/crypto/dh_extra/params.c'
source_filename = "../../third_party/boringssl/src/crypto/dh_extra/params.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
%struct.dh_st = type { %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, i32, %union.crypto_mutex_st, %struct.bn_mont_ctx_st*, %struct.bignum_st*, %struct.bignum_st*, i8*, i32, %struct.bignum_st*, i32, i32 }
%union.crypto_mutex_st = type { double, [48 x i8] }
%struct.bn_mont_ctx_st = type { %struct.bignum_st, %struct.bignum_st, [2 x i64] }
%struct.bn_gencb_st = type { i8*, i32 (i32, i32, %struct.bn_gencb_st*)* }
%struct.bignum_ctx = type opaque

@BN_get_rfc3526_prime_1536.kPrime1536Data = internal constant [24 x i64] [i64 -1, i64 -1048094028263623897, i64 7425368496004700164, i64 -7001644933747141011, i64 2045464732017971899, i64 -8978667873486262890, i64 7572309818504171359, i64 -7432548837780761702, i64 -4467433697928036603, i64 5271575865889938237, i64 -5863928532294754330, i64 -1281155366686974043, i64 864511594326308845, i64 -843225458941629077, i64 -1979976941098336570, i64 5755940542857986629, i64 3470879405153129527, i64 -1183011067081899237, i64 5857503583518590173, i64 147421033984662306, i64 2955010104097229940, i64 -4267615245585081135, i64 -3958705157555305932, i64 -1], align 16
@BN_get_rfc3526_prime_1536.kPrime1536BN = internal constant %struct.bignum_st { i64* getelementptr inbounds ([24 x i64], [24 x i64]* @BN_get_rfc3526_prime_1536.kPrime1536Data, i32 0, i32 0), i32 24, i32 24, i32 0, i32 2 }, align 8
@.str = private unnamed_addr constant [57 x i8] c"../../third_party/boringssl/src/crypto/dh_extra/params.c\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.bignum_st* @BN_get_rfc3526_prime_1536(%struct.bignum_st*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.bignum_st* %0, null
  br i1 %2, label %3, label %6

3:                                                ; preds = %1
  %4 = tail call %struct.bignum_st* @BN_new() #2
  %5 = icmp eq %struct.bignum_st* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %3, %1
  %7 = phi %struct.bignum_st* [ %0, %1 ], [ %4, %3 ]
  %8 = phi %struct.bignum_st* [ null, %1 ], [ %4, %3 ]
  %9 = tail call %struct.bignum_st* @BN_copy(%struct.bignum_st* nonnull %7, %struct.bignum_st* nonnull @BN_get_rfc3526_prime_1536.kPrime1536BN) #2
  %10 = icmp eq %struct.bignum_st* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %6
  tail call void @BN_free(%struct.bignum_st* %8) #2
  br label %12

12:                                               ; preds = %6, %3, %11
  %13 = phi %struct.bignum_st* [ null, %11 ], [ null, %3 ], [ %7, %6 ]
  ret %struct.bignum_st* %13
}

declare %struct.bignum_st* @BN_new() local_unnamed_addr #1

declare %struct.bignum_st* @BN_copy(%struct.bignum_st*, %struct.bignum_st*) local_unnamed_addr #1

declare void @BN_free(%struct.bignum_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @DH_generate_parameters_ex(%struct.dh_st* nocapture, i32, i32, %struct.bn_gencb_st*) local_unnamed_addr #0 {
  %5 = tail call %struct.bignum_ctx* @BN_CTX_new() #2
  %6 = icmp eq %struct.bignum_ctx* %5, null
  br i1 %6, label %64, label %7

7:                                                ; preds = %4
  tail call void @BN_CTX_start(%struct.bignum_ctx* nonnull %5) #2
  %8 = tail call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* nonnull %5) #2
  %9 = tail call %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx* nonnull %5) #2
  %10 = icmp eq %struct.bignum_st* %8, null
  %11 = icmp eq %struct.bignum_st* %9, null
  %12 = or i1 %10, %11
  br i1 %12, label %63, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.dh_st, %struct.dh_st* %0, i64 0, i32 0
  %15 = load %struct.bignum_st*, %struct.bignum_st** %14, align 8
  %16 = icmp eq %struct.bignum_st* %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %13
  %18 = tail call %struct.bignum_st* @BN_new() #2
  store %struct.bignum_st* %18, %struct.bignum_st** %14, align 8
  %19 = icmp eq %struct.bignum_st* %18, null
  br i1 %19, label %63, label %20

20:                                               ; preds = %17, %13
  %21 = getelementptr inbounds %struct.dh_st, %struct.dh_st* %0, i64 0, i32 1
  %22 = load %struct.bignum_st*, %struct.bignum_st** %21, align 8
  %23 = icmp eq %struct.bignum_st* %22, null
  br i1 %23, label %24, label %27

24:                                               ; preds = %20
  %25 = tail call %struct.bignum_st* @BN_new() #2
  store %struct.bignum_st* %25, %struct.bignum_st** %21, align 8
  %26 = icmp eq %struct.bignum_st* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %24, %20
  %28 = icmp slt i32 %2, 2
  br i1 %28, label %29, label %30

29:                                               ; preds = %27
  tail call void @ERR_put_error(i32 5, i32 0, i32 100, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i64 0, i64 0), i32 154) #2
  br label %63

30:                                               ; preds = %27
  switch i32 %2, label %43 [
    i32 2, label %31
    i32 5, label %37
  ]

31:                                               ; preds = %30
  %32 = tail call i32 @BN_set_word(%struct.bignum_st* nonnull %8, i64 24) #2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %63, label %34

34:                                               ; preds = %31
  %35 = tail call i32 @BN_set_word(%struct.bignum_st* nonnull %9, i64 11) #2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %63, label %51

37:                                               ; preds = %30
  %38 = tail call i32 @BN_set_word(%struct.bignum_st* nonnull %8, i64 10) #2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %63, label %40

40:                                               ; preds = %37
  %41 = tail call i32 @BN_set_word(%struct.bignum_st* nonnull %9, i64 3) #2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %63, label %51

43:                                               ; preds = %30
  %44 = tail call i32 @BN_set_word(%struct.bignum_st* nonnull %8, i64 2) #2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %63, label %46

46:                                               ; preds = %43
  %47 = tail call i32 @BN_set_word(%struct.bignum_st* nonnull %9, i64 1) #2
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %63, label %49

49:                                               ; preds = %46
  %50 = sext i32 %2 to i64
  br label %51

51:                                               ; preds = %40, %34, %49
  %52 = phi i64 [ %50, %49 ], [ 2, %34 ], [ 5, %40 ]
  %53 = load %struct.bignum_st*, %struct.bignum_st** %14, align 8
  %54 = tail call i32 @BN_generate_prime_ex(%struct.bignum_st* %53, i32 %1, i32 1, %struct.bignum_st* nonnull %8, %struct.bignum_st* nonnull %9, %struct.bn_gencb_st* %3) #2
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %63, label %56

56:                                               ; preds = %51
  %57 = tail call i32 @BN_GENCB_call(%struct.bn_gencb_st* %3, i32 3, i32 0) #2
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %63, label %59

59:                                               ; preds = %56
  %60 = load %struct.bignum_st*, %struct.bignum_st** %21, align 8
  %61 = tail call i32 @BN_set_word(%struct.bignum_st* %60, i64 %52) #2
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %43, %46, %37, %40, %31, %34, %51, %56, %29, %24, %17, %7, %59
  tail call void @ERR_put_error(i32 5, i32 0, i32 3, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i64 0, i64 0), i32 202) #2
  br label %65

64:                                               ; preds = %4
  tail call void @ERR_put_error(i32 5, i32 0, i32 3, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i64 0, i64 0), i32 202) #2
  br label %67

65:                                               ; preds = %59, %63
  %66 = phi i32 [ 0, %63 ], [ 1, %59 ]
  tail call void @BN_CTX_end(%struct.bignum_ctx* nonnull %5) #2
  tail call void @BN_CTX_free(%struct.bignum_ctx* nonnull %5) #2
  br label %67

67:                                               ; preds = %64, %65
  %68 = phi i32 [ 0, %64 ], [ %66, %65 ]
  ret i32 %68
}

declare %struct.bignum_ctx* @BN_CTX_new() local_unnamed_addr #1

declare void @BN_CTX_start(%struct.bignum_ctx*) local_unnamed_addr #1

declare %struct.bignum_st* @BN_CTX_get(%struct.bignum_ctx*) local_unnamed_addr #1

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #1

declare i32 @BN_set_word(%struct.bignum_st*, i64) local_unnamed_addr #1

declare i32 @BN_generate_prime_ex(%struct.bignum_st*, i32, i32, %struct.bignum_st*, %struct.bignum_st*, %struct.bn_gencb_st*) local_unnamed_addr #1

declare i32 @BN_GENCB_call(%struct.bn_gencb_st*, i32, i32) local_unnamed_addr #1

declare void @BN_CTX_end(%struct.bignum_ctx*) local_unnamed_addr #1

declare void @BN_CTX_free(%struct.bignum_ctx*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.dh_st* @DHparams_dup(%struct.dh_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = tail call %struct.dh_st* @DH_new() #2
  %3 = icmp eq %struct.dh_st* %2, null
  br i1 %3, label %63, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.dh_st, %struct.dh_st* %0, i64 0, i32 7
  %6 = load %struct.bignum_st*, %struct.bignum_st** %5, align 8
  %7 = icmp eq %struct.bignum_st* %6, null
  %8 = getelementptr inbounds %struct.dh_st, %struct.dh_st* %2, i64 0, i32 0
  %9 = getelementptr inbounds %struct.dh_st, %struct.dh_st* %0, i64 0, i32 0
  %10 = load %struct.bignum_st*, %struct.bignum_st** %9, align 8
  %11 = icmp eq %struct.bignum_st* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %4
  %13 = tail call %struct.bignum_st* @BN_dup(%struct.bignum_st* nonnull %10) #2
  %14 = icmp eq %struct.bignum_st* %13, null
  br i1 %14, label %62, label %15

15:                                               ; preds = %12, %4
  %16 = phi %struct.bignum_st* [ %13, %12 ], [ null, %4 ]
  %17 = load %struct.bignum_st*, %struct.bignum_st** %8, align 8
  tail call void @BN_free(%struct.bignum_st* %17) #2
  store %struct.bignum_st* %16, %struct.bignum_st** %8, align 8
  %18 = getelementptr inbounds %struct.dh_st, %struct.dh_st* %2, i64 0, i32 1
  %19 = getelementptr inbounds %struct.dh_st, %struct.dh_st* %0, i64 0, i32 1
  %20 = load %struct.bignum_st*, %struct.bignum_st** %19, align 8
  %21 = icmp eq %struct.bignum_st* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %15
  %23 = tail call %struct.bignum_st* @BN_dup(%struct.bignum_st* nonnull %20) #2
  %24 = icmp eq %struct.bignum_st* %23, null
  br i1 %24, label %62, label %25

25:                                               ; preds = %22, %15
  %26 = phi %struct.bignum_st* [ %23, %22 ], [ null, %15 ]
  %27 = load %struct.bignum_st*, %struct.bignum_st** %18, align 8
  tail call void @BN_free(%struct.bignum_st* %27) #2
  store %struct.bignum_st* %26, %struct.bignum_st** %18, align 8
  br i1 %7, label %63, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %struct.dh_st, %struct.dh_st* %2, i64 0, i32 7
  %30 = load %struct.bignum_st*, %struct.bignum_st** %5, align 8
  %31 = icmp eq %struct.bignum_st* %30, null
  br i1 %31, label %35, label %32

32:                                               ; preds = %28
  %33 = tail call %struct.bignum_st* @BN_dup(%struct.bignum_st* nonnull %30) #2
  %34 = icmp eq %struct.bignum_st* %33, null
  br i1 %34, label %62, label %35

35:                                               ; preds = %32, %28
  %36 = phi %struct.bignum_st* [ %33, %32 ], [ null, %28 ]
  %37 = load %struct.bignum_st*, %struct.bignum_st** %29, align 8
  tail call void @BN_free(%struct.bignum_st* %37) #2
  store %struct.bignum_st* %36, %struct.bignum_st** %29, align 8
  %38 = getelementptr inbounds %struct.dh_st, %struct.dh_st* %2, i64 0, i32 8
  %39 = getelementptr inbounds %struct.dh_st, %struct.dh_st* %0, i64 0, i32 8
  %40 = load %struct.bignum_st*, %struct.bignum_st** %39, align 8
  %41 = icmp eq %struct.bignum_st* %40, null
  br i1 %41, label %45, label %42

42:                                               ; preds = %35
  %43 = tail call %struct.bignum_st* @BN_dup(%struct.bignum_st* nonnull %40) #2
  %44 = icmp eq %struct.bignum_st* %43, null
  br i1 %44, label %62, label %45

45:                                               ; preds = %42, %35
  %46 = phi %struct.bignum_st* [ %43, %42 ], [ null, %35 ]
  %47 = load %struct.bignum_st*, %struct.bignum_st** %38, align 8
  tail call void @BN_free(%struct.bignum_st* %47) #2
  store %struct.bignum_st* %46, %struct.bignum_st** %38, align 8
  %48 = getelementptr inbounds %struct.dh_st, %struct.dh_st* %2, i64 0, i32 9
  %49 = load i8*, i8** %48, align 8
  tail call void @OPENSSL_free(i8* %49) #2
  store i8* null, i8** %48, align 8
  %50 = getelementptr inbounds %struct.dh_st, %struct.dh_st* %2, i64 0, i32 10
  store i32 0, i32* %50, align 8
  %51 = getelementptr inbounds %struct.dh_st, %struct.dh_st* %0, i64 0, i32 9
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %63, label %54

54:                                               ; preds = %45
  %55 = getelementptr inbounds %struct.dh_st, %struct.dh_st* %0, i64 0, i32 10
  %56 = load i32, i32* %55, align 8
  %57 = sext i32 %56 to i64
  %58 = tail call i8* @OPENSSL_memdup(i8* nonnull %52, i64 %57) #2
  store i8* %58, i8** %48, align 8
  %59 = icmp eq i8* %58, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %54
  %61 = load i32, i32* %55, align 8
  store i32 %61, i32* %50, align 8
  br label %63

62:                                               ; preds = %54, %12, %22, %32, %42
  tail call void @DH_free(%struct.dh_st* nonnull %2) #2
  br label %63

63:                                               ; preds = %60, %45, %25, %1, %62
  %64 = phi %struct.dh_st* [ null, %62 ], [ null, %1 ], [ %2, %25 ], [ %2, %45 ], [ %2, %60 ]
  ret %struct.dh_st* %64
}

declare %struct.dh_st* @DH_new() local_unnamed_addr #1

declare void @DH_free(%struct.dh_st*) local_unnamed_addr #1

declare void @OPENSSL_free(i8*) local_unnamed_addr #1

declare i8* @OPENSSL_memdup(i8*, i64) local_unnamed_addr #1

declare %struct.bignum_st* @BN_dup(%struct.bignum_st*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
