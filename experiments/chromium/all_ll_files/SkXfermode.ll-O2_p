; ModuleID = '../../third_party/skia/src/core/SkXfermode.cpp'
source_filename = "../../third_party/skia/src/core/SkXfermode.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%class.SkXfermode = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp = type { %class.SkXfermode* }
%class.GrXPFactory = type { i32 (...)** }
%class.SkProcCoeffXfermode = type { %class.SkXfermode.base, i32 }
%class.SkXfermode.base = type { %class.SkRefCnt.base }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkRasterPipeline_ = type { %class.SkRasterPipeline, %class.SkSTArenaAlloc }
%class.SkRasterPipeline = type { %class.SkArenaAlloc*, %"struct.SkRasterPipeline::StageList"*, i32, i32 }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"struct.SkRasterPipeline::StageList" = type { %"struct.SkRasterPipeline::StageList"*, i32, i8* }
%class.SkSTArenaAlloc = type { %"struct.std::__1::array", %class.SkArenaAlloc.base, [4 x i8] }
%"struct.std::__1::array" = type { [256 x i8] }
%class.SkArenaAlloc.base = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes }>
%struct.SkRasterPipeline_MemoryCtx = type { i8*, i32 }

$_ZN19SkProcCoeffXfermodeD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK19SkProcCoeffXfermode6xfer32EPjPKjiPKh = comdat any

$_ZN12SkRefCntBaseD2Ev = comdat any

$_ZTV19SkProcCoeffXfermode = comdat any

@.str = private unnamed_addr constant [6 x i8] c"Clear\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"Src\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"Dst\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"SrcOver\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"DstOver\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"SrcIn\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"DstIn\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"SrcOut\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"DstOut\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"SrcATop\00", align 1
@.str.10 = private unnamed_addr constant [8 x i8] c"DstATop\00", align 1
@.str.11 = private unnamed_addr constant [4 x i8] c"Xor\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"Plus\00", align 1
@.str.13 = private unnamed_addr constant [9 x i8] c"Modulate\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"Screen\00", align 1
@.str.15 = private unnamed_addr constant [8 x i8] c"Overlay\00", align 1
@.str.16 = private unnamed_addr constant [7 x i8] c"Darken\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"Lighten\00", align 1
@.str.18 = private unnamed_addr constant [11 x i8] c"ColorDodge\00", align 1
@.str.19 = private unnamed_addr constant [10 x i8] c"ColorBurn\00", align 1
@.str.20 = private unnamed_addr constant [10 x i8] c"HardLight\00", align 1
@.str.21 = private unnamed_addr constant [10 x i8] c"SoftLight\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"Difference\00", align 1
@.str.23 = private unnamed_addr constant [10 x i8] c"Exclusion\00", align 1
@.str.24 = private unnamed_addr constant [9 x i8] c"Multiply\00", align 1
@.str.25 = private unnamed_addr constant [4 x i8] c"Hue\00", align 1
@.str.26 = private unnamed_addr constant [11 x i8] c"Saturation\00", align 1
@.str.27 = private unnamed_addr constant [6 x i8] c"Color\00", align 1
@.str.28 = private unnamed_addr constant [11 x i8] c"Luminosity\00", align 1
@__const._Z16SkBlendMode_Name11SkBlendMode.gModeStrings = private unnamed_addr constant [29 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i32 0, i32 0)], align 16
@_ZZN10SkXfermode4MakeE11SkBlendModeE4once = internal global [29 x %class.SkOnce] zeroinitializer, align 16
@_ZZN10SkXfermode4MakeE11SkBlendModeE6cached = internal unnamed_addr global [29 x %class.SkXfermode*] zeroinitializer, align 16
@_ZN6SkOpts15create_xfermodeE = external local_unnamed_addr global %class.SkXfermode* (i32)*, align 8
@_ZTV19SkProcCoeffXfermode = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRefCntBase*)* @_ZN12SkRefCntBaseD2Ev to i8*), i8* bitcast (void (%class.SkProcCoeffXfermode*)* @_ZN19SkProcCoeffXfermodeD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.SkProcCoeffXfermode*, i32*, i32*, i32, i8*)* @_ZNK19SkProcCoeffXfermode6xfer32EPjPKjiPKh to i8*)] }, comdat, align 8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_Z16SkBlendMode_Name11SkBlendMode(i32) local_unnamed_addr #0 {
  %2 = sext i32 %0 to i64
  %3 = getelementptr inbounds [29 x i8*], [29 x i8*]* @__const._Z16SkBlendMode_Name11SkBlendMode.gModeStrings, i64 0, i64 %2
  %4 = load i8*, i8** %3, align 8
  ret i8* %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkXfermode4MakeE11SkBlendMode(%class.sk_sp* noalias nocapture sret, i32) local_unnamed_addr #2 align 2 {
  %3 = icmp ugt i32 %1, 28
  %4 = icmp eq i32 %1, 3
  %5 = or i1 %3, %4
  br i1 %5, label %40, label %6

6:                                                ; preds = %2
  %7 = sext i32 %1 to i64
  %8 = getelementptr inbounds [29 x %class.SkOnce], [29 x %class.SkOnce]* @_ZZN10SkXfermode4MakeE11SkBlendModeE4once, i64 0, i64 %7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i8, i8* %8 acquire, align 1
  switch i8 %9, label %10 [
    i8 2, label %33
    i8 0, label %11
  ]

10:                                               ; preds = %11, %6
  br label %30

11:                                               ; preds = %6
  %12 = cmpxchg i8* %8, i8 0, i8 1 monotonic monotonic
  %13 = extractvalue { i8, i1 } %12, 1
  br i1 %13, label %14, label %10

14:                                               ; preds = %11
  %15 = load %class.SkXfermode* (i32)*, %class.SkXfermode* (i32)** @_ZN6SkOpts15create_xfermodeE, align 8
  %16 = tail call %class.SkXfermode* %15(i32 %1) #8
  %17 = icmp eq %class.SkXfermode* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds [29 x %class.SkXfermode*], [29 x %class.SkXfermode*]* @_ZZN10SkXfermode4MakeE11SkBlendModeE6cached, i64 0, i64 %7
  store %class.SkXfermode* %16, %class.SkXfermode** %19, align 8
  br label %29

20:                                               ; preds = %14
  %21 = tail call i8* @_Znwm(i64 16) #9
  %22 = getelementptr inbounds i8, i8* %21, i64 8
  %23 = bitcast i8* %22 to i32*
  store i32 1, i32* %23, align 4
  %24 = bitcast i8* %21 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV19SkProcCoeffXfermode, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %25 = getelementptr inbounds i8, i8* %21, i64 12
  %26 = bitcast i8* %25 to i32*
  store i32 %1, i32* %26, align 4
  %27 = getelementptr inbounds [29 x %class.SkXfermode*], [29 x %class.SkXfermode*]* @_ZZN10SkXfermode4MakeE11SkBlendModeE6cached, i64 0, i64 %7
  %28 = bitcast %class.SkXfermode** %27 to i8**
  store i8* %21, i8** %28, align 8
  br label %29

29:                                               ; preds = %20, %18
  store atomic i8 2, i8* %8 release, align 1
  br label %33

30:                                               ; preds = %10, %30
  %31 = load atomic i8, i8* %8 acquire, align 1
  %32 = icmp eq i8 %31, 2
  br i1 %32, label %33, label %30

33:                                               ; preds = %30, %6, %29
  %34 = getelementptr inbounds [29 x %class.SkXfermode*], [29 x %class.SkXfermode*]* @_ZZN10SkXfermode4MakeE11SkBlendModeE6cached, i64 0, i64 %7
  %35 = load %class.SkXfermode*, %class.SkXfermode** %34, align 8
  %36 = icmp eq %class.SkXfermode* %35, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %class.SkXfermode, %class.SkXfermode* %35, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 1 monotonic, !noalias !2
  br label %40

40:                                               ; preds = %37, %33, %2
  %41 = phi %class.SkXfermode* [ null, %2 ], [ %35, %33 ], [ %35, %37 ]
  %42 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkXfermode* %41, %class.SkXfermode** %42, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10SkXfermode8IsOpaqueE11SkBlendModeNS_15SrcColorOpacityE(i32, i32) local_unnamed_addr #2 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #8
  store i32 -1431655766, i32* %3, align 4
  %6 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #8
  store i32 -1431655766, i32* %4, align 4
  %7 = call zeroext i1 @_Z19SkBlendMode_AsCoeff11SkBlendModeP16SkBlendModeCoeffS1_(i32 %0, i32* nonnull %3, i32* nonnull %4) #8
  br i1 %7, label %8, label %27

8:                                                ; preds = %2
  %9 = load i32, i32* %3, align 4
  %10 = add i32 %9, -4
  %11 = icmp ult i32 %10, 6
  br i1 %11, label %22, label %12

12:                                               ; preds = %22, %8
  %13 = load i32, i32* %4, align 4
  switch i32 %13, label %21 [
    i32 0, label %27
    i32 7, label %14
    i32 6, label %16
    i32 2, label %19
  ]

14:                                               ; preds = %12
  %15 = icmp eq i32 %1, 0
  br label %27

16:                                               ; preds = %12
  %17 = add i32 %1, -1
  %18 = icmp ult i32 %17, 2
  br label %27

19:                                               ; preds = %12
  %20 = icmp eq i32 %1, 1
  br label %27

21:                                               ; preds = %12
  br label %27

22:                                               ; preds = %8
  %23 = trunc i32 %10 to i8
  %24 = lshr i8 51, %23
  %25 = and i8 %24, 1
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %12, label %27

27:                                               ; preds = %22, %12, %2, %21, %19, %16, %14
  %28 = phi i1 [ false, %21 ], [ %20, %19 ], [ %18, %16 ], [ %15, %14 ], [ false, %2 ], [ true, %12 ], [ false, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #8
  ret i1 %28
}

declare zeroext i1 @_Z19SkBlendMode_AsCoeff11SkBlendModeP16SkBlendModeCoeffS1_(i32, i32*, i32*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrXPFactory* @_Z23SkBlendMode_AsXPFactory11SkBlendMode(i32) local_unnamed_addr #2 {
  %2 = tail call zeroext i1 @_Z19SkBlendMode_AsCoeff11SkBlendModeP16SkBlendModeCoeffS1_(i32 %0, i32* null, i32* null) #8
  br i1 %2, label %3, label %5

3:                                                ; preds = %1
  %4 = tail call %class.GrXPFactory* @_ZN21GrPorterDuffXPFactory3GetE11SkBlendMode(i32 %0) #8
  br label %7

5:                                                ; preds = %1
  %6 = tail call %class.GrXPFactory* @_ZN16GrCustomXfermode3GetE11SkBlendMode(i32 %0) #8
  br label %7

7:                                                ; preds = %5, %3
  %8 = phi %class.GrXPFactory* [ %4, %3 ], [ %6, %5 ]
  ret %class.GrXPFactory* %8
}

declare %class.GrXPFactory* @_ZN21GrPorterDuffXPFactory3GetE11SkBlendMode(i32) local_unnamed_addr #3

declare %class.GrXPFactory* @_ZN16GrCustomXfermode3GetE11SkBlendMode(i32) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19SkProcCoeffXfermodeD0Ev(%class.SkProcCoeffXfermode*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %class.SkProcCoeffXfermode* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #2 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #8
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK19SkProcCoeffXfermode6xfer32EPjPKjiPKh(%class.SkProcCoeffXfermode*, i32*, i32*, i32, i8*) unnamed_addr #2 comdat align 2 {
  %6 = alloca %class.SkRasterPipeline_, align 8
  %7 = alloca %struct.SkRasterPipeline_MemoryCtx, align 8
  %8 = alloca %struct.SkRasterPipeline_MemoryCtx, align 8
  %9 = alloca %struct.SkRasterPipeline_MemoryCtx, align 8
  %10 = bitcast %class.SkRasterPipeline_* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 312, i8* nonnull %10) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 312, i1 false)
  %11 = getelementptr inbounds %class.SkRasterPipeline_, %class.SkRasterPipeline_* %6, i64 0, i32 0
  %12 = getelementptr inbounds %class.SkRasterPipeline_, %class.SkRasterPipeline_* %6, i64 0, i32 1, i32 0, i32 0, i64 256
  %13 = bitcast i8* %12 to %class.SkArenaAlloc*
  call void @_ZN16SkRasterPipelineC2EP12SkArenaAlloc(%class.SkRasterPipeline* nonnull %11, %class.SkArenaAlloc* %13) #8
  %14 = getelementptr inbounds %class.SkRasterPipeline_, %class.SkRasterPipeline_* %6, i64 0, i32 1, i32 0, i32 0, i64 0
  call void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc* %13, i8* %14, i64 256, i64 256) #8
  %15 = bitcast %struct.SkRasterPipeline_MemoryCtx* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false)
  %16 = bitcast %struct.SkRasterPipeline_MemoryCtx* %7 to i32**
  store i32* %1, i32** %16, align 8
  %17 = getelementptr inbounds %struct.SkRasterPipeline_MemoryCtx, %struct.SkRasterPipeline_MemoryCtx* %7, i64 0, i32 1
  store i32 0, i32* %17, align 8
  %18 = bitcast %struct.SkRasterPipeline_MemoryCtx* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 16, i1 false)
  %19 = bitcast %struct.SkRasterPipeline_MemoryCtx* %8 to i32**
  store i32* %2, i32** %19, align 8
  %20 = getelementptr inbounds %struct.SkRasterPipeline_MemoryCtx, %struct.SkRasterPipeline_MemoryCtx* %8, i64 0, i32 1
  store i32 0, i32* %20, align 8
  %21 = bitcast %struct.SkRasterPipeline_MemoryCtx* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 16, i1 false)
  %22 = getelementptr inbounds %struct.SkRasterPipeline_MemoryCtx, %struct.SkRasterPipeline_MemoryCtx* %9, i64 0, i32 0
  store i8* %4, i8** %22, align 8
  %23 = getelementptr inbounds %struct.SkRasterPipeline_MemoryCtx, %struct.SkRasterPipeline_MemoryCtx* %9, i64 0, i32 1
  store i32 0, i32* %23, align 8
  call void @_ZN16SkRasterPipeline11append_loadE11SkColorTypePK26SkRasterPipeline_MemoryCtx(%class.SkRasterPipeline* nonnull %11, i32 6, %struct.SkRasterPipeline_MemoryCtx* nonnull %8) #8
  call void @_ZN16SkRasterPipeline15append_load_dstE11SkColorTypePK26SkRasterPipeline_MemoryCtx(%class.SkRasterPipeline* nonnull %11, i32 6, %struct.SkRasterPipeline_MemoryCtx* nonnull %7) #8
  %24 = getelementptr inbounds %class.SkProcCoeffXfermode, %class.SkProcCoeffXfermode* %0, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = call zeroext i1 @_Z34SkBlendMode_ShouldPreScaleCoverage11SkBlendModeb(i32 %25, i1 zeroext false) #8
  br i1 %26, label %27, label %32

27:                                               ; preds = %5
  %28 = icmp eq i8* %4, null
  br i1 %28, label %30, label %29

29:                                               ; preds = %27
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* nonnull %11, i32 89, i8* nonnull %21) #8
  br label %30

30:                                               ; preds = %27, %29
  %31 = load i32, i32* %24, align 4
  call void @_Z24SkBlendMode_AppendStages11SkBlendModeP16SkRasterPipeline(i32 %31, %class.SkRasterPipeline* nonnull %11) #8
  br label %36

32:                                               ; preds = %5
  %33 = load i32, i32* %24, align 4
  call void @_Z24SkBlendMode_AppendStages11SkBlendModeP16SkRasterPipeline(i32 %33, %class.SkRasterPipeline* nonnull %11) #8
  %34 = icmp eq i8* %4, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %32
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* nonnull %11, i32 93, i8* nonnull %21) #8
  br label %36

36:                                               ; preds = %32, %35, %30
  call void @_ZN16SkRasterPipeline12append_storeE11SkColorTypePK26SkRasterPipeline_MemoryCtx(%class.SkRasterPipeline* nonnull %11, i32 6, %struct.SkRasterPipeline_MemoryCtx* nonnull %7) #8
  %37 = sext i32 %3 to i64
  call void @_ZNK16SkRasterPipeline3runEmmmm(%class.SkRasterPipeline* nonnull %11, i64 0, i64 0, i64 %37, i64 1) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #8
  call void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc* %13) #8
  call void @llvm.lifetime.end.p0i8(i64 312, i8* nonnull %10) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkRefCntBaseD2Ev(%class.SkRefCntBase*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN16SkRasterPipeline11append_loadE11SkColorTypePK26SkRasterPipeline_MemoryCtx(%class.SkRasterPipeline*, i32, %struct.SkRasterPipeline_MemoryCtx*) local_unnamed_addr #3

declare void @_ZN16SkRasterPipeline15append_load_dstE11SkColorTypePK26SkRasterPipeline_MemoryCtx(%class.SkRasterPipeline*, i32, %struct.SkRasterPipeline_MemoryCtx*) local_unnamed_addr #3

declare zeroext i1 @_Z34SkBlendMode_ShouldPreScaleCoverage11SkBlendModeb(i32, i1 zeroext) local_unnamed_addr #3

declare void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline*, i32, i8*) local_unnamed_addr #3

declare void @_Z24SkBlendMode_AppendStages11SkBlendModeP16SkRasterPipeline(i32, %class.SkRasterPipeline*) local_unnamed_addr #3

declare void @_ZN16SkRasterPipeline12append_storeE11SkColorTypePK26SkRasterPipeline_MemoryCtx(%class.SkRasterPipeline*, i32, %struct.SkRasterPipeline_MemoryCtx*) local_unnamed_addr #3

declare void @_ZNK16SkRasterPipeline3runEmmmm(%class.SkRasterPipeline*, i64, i64, i64, i64) local_unnamed_addr #3

declare void @_ZN16SkRasterPipelineC2EP12SkArenaAlloc(%class.SkRasterPipeline*, %class.SkArenaAlloc*) unnamed_addr #3

declare void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc*, i8*, i64, i64) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc*) unnamed_addr #7

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_Z9sk_ref_spI10SkXfermodeE5sk_spIT_EPS2_: argument 0"}
!4 = distinct !{!4, !"_Z9sk_ref_spI10SkXfermodeE5sk_spIT_EPS2_"}
