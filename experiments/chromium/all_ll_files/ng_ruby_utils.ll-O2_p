; ModuleID = '../../third_party/blink/renderer/core/layout/ng/inline/ng_ruby_utils.cc'
source_filename = "../../third_party/blink/renderer/core/layout/ng/inline/ng_ruby_utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::Vector<blink::ShapeResult::RunFontData, 0, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::Vector<blink::ShapeResult::RunFontData, 0, WTF::PartitionAllocator> >::InstanceStorage" = type { [16 x i8] }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1981 }
%class.scoped_refptr.1981 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1982", %"class.WTF::Vector.630", %"class.WTF::Vector.1984", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1982" = type { %"class.base::RefCounted.1983" }
%"class.base::RefCounted.1983" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1984" = type { %"class.WTF::VectorBuffer.1985" }
%"class.WTF::VectorBuffer.1985" = type { %"class.WTF::VectorBufferBase.1986" }
%"class.WTF::VectorBufferBase.1986" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1987 }
%union.anon.1987 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.1972" }
%"class.blink::Member.1972" = type { %"class.blink::MemberBase.1973" }
%"class.blink::MemberBase.1973" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1974" }
%"class.blink::Member.1974" = type { %"class.blink::MemberBase.1975" }
%"class.blink::MemberBase.1975" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1623", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1625", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1630 }
%"class.WTF::RefCounted.1623" = type { %"class.base::RefCounted.1624" }
%"class.base::RefCounted.1624" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1625" = type { %"class.absl::optional_internal::optional_data.1626" }
%"class.absl::optional_internal::optional_data.1626" = type { %"class.absl::optional_internal::optional_data_base.1627" }
%"class.absl::optional_internal::optional_data_base.1627" = type { %"class.absl::optional_internal::optional_data_dtor_base.1628" }
%"class.absl::optional_internal::optional_data_dtor_base.1628" = type { i8, %union.anon.1629 }
%union.anon.1629 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1630 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1995 }
%class.scoped_refptr.1995 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.2005" }
%"class.blink::Member.2005" = type { %"class.blink::MemberBase.2006" }
%"class.blink::MemberBase.2006" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.2001" }
%"class.blink::MemberBase.2001" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.2002" }
%"class.blink::MemberBase.2002" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.2003" }
%"class.blink::MemberBase.2003" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.2004" }
%"class.blink::MemberBase.2004" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.1996", %"class.WTF::Vector.1996" }
%"class.WTF::Vector.1996" = type { %"class.WTF::VectorBuffer.1997" }
%"class.WTF::VectorBuffer.1997" = type { %"class.WTF::VectorBufferBase.1998" }
%"class.WTF::VectorBufferBase.1998" = type { %class.scoped_refptr.1995*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.1976" }
%"class.WTF::Vector.1976" = type { %"class.WTF::VectorBuffer.1977" }
%"class.WTF::VectorBuffer.1977" = type { %"class.WTF::VectorBufferBase.1978" }
%"class.WTF::VectorBufferBase.1978" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1676", %"class.absl::optional.1676", %"class.absl::optional.1676" }
%"class.absl::optional.1676" = type { %"class.absl::optional_internal::optional_data.1677" }
%"class.absl::optional_internal::optional_data.1677" = type { %"class.absl::optional_internal::optional_data_base.1678" }
%"class.absl::optional_internal::optional_data_base.1678" = type { %"class.absl::optional_internal::optional_data_dtor_base.1679" }
%"class.absl::optional_internal::optional_data_dtor_base.1679" = type { i8, %union.anon.1680 }
%union.anon.1680 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.1991" }
%"class.WTF::VectorBuffer.1991" = type { %"class.WTF::VectorBufferBase.1992", [32 x i8] }
%"class.WTF::VectorBufferBase.1992" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::ShapeResultView" = type { %"class.WTF::RefCounted.1631", %class.scoped_refptr.1633, i32, i32, i32, i32, float, i32, [0 x %struct.anon.1634] }
%"class.WTF::RefCounted.1631" = type { %"class.base::RefCounted.1632" }
%"class.base::RefCounted.1632" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1633 = type { %"class.blink::SimpleFontData"* }
%struct.anon.1634 = type { i8* }
%"class.WTF::Vector.2016" = type { %"class.WTF::VectorBuffer.2017" }
%"class.WTF::VectorBuffer.2017" = type { %"class.WTF::VectorBufferBase.2018" }
%"class.WTF::VectorBufferBase.2018" = type { %"struct.blink::ShapeResult::RunFontData"*, i32, i32 }
%"struct.blink::ShapeResult::RunFontData" = type { %"class.blink::SimpleFontData"*, i32 }
%"struct.blink::NGInlineItemResult" = type { %"class.blink::NGInlineItem"*, i32, %"struct.blink::NGTextOffset", %"class.absl::optional.1660", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %class.scoped_refptr.1665, %"class.WTF::String", %class.scoped_refptr.1640, %class.scoped_refptr.1666, %"class.absl::optional.1856", %"struct.blink::NGLineBoxStrut", %"struct.blink::NGLineBoxStrut", %"struct.blink::NGLineBoxStrut", i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.blink::NGInlineItem" = type { i32, i32, %class.scoped_refptr.1640, %"class.blink::LayoutObject"*, i32, i32 }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"struct.blink::NGTextOffset" = type { i32, i32 }
%"class.absl::optional.1660" = type { %"class.absl::optional_internal::optional_data.1661" }
%"class.absl::optional_internal::optional_data.1661" = type { %"class.absl::optional_internal::optional_data_base.1662" }
%"class.absl::optional_internal::optional_data_base.1662" = type { %"class.absl::optional_internal::optional_data_dtor_base.1663" }
%"class.absl::optional_internal::optional_data_dtor_base.1663" = type { i8, %union.anon.1664 }
%union.anon.1664 = type { i32 }
%class.scoped_refptr.1665 = type { %"class.blink::ShapeResultView"* }
%class.scoped_refptr.1640 = type { %"class.blink::ShapeResult"* }
%"class.blink::ShapeResult" = type <{ %"class.WTF::RefCounted.1641", float, %"class.blink::FloatRect", %"class.WTF::Vector.1643", %class.scoped_refptr.1633, %"class.std::__1::unique_ptr.1649", i32, i32, i32, [4 x i8] }>
%"class.WTF::RefCounted.1641" = type { %"class.base::RefCounted.1642" }
%"class.base::RefCounted.1642" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1643" = type { %"class.WTF::VectorBuffer.1644" }
%"class.WTF::VectorBuffer.1644" = type { %"class.WTF::VectorBufferBase.1645" }
%"class.WTF::VectorBufferBase.1645" = type { %class.scoped_refptr.1646*, i32, i32 }
%class.scoped_refptr.1646 = type opaque
%"class.std::__1::unique_ptr.1649" = type { %"class.std::__1::__compressed_pair.1650" }
%"class.std::__1::__compressed_pair.1650" = type { %"struct.std::__1::__compressed_pair_elem.1651" }
%"struct.std::__1::__compressed_pair_elem.1651" = type { %"class.blink::ShapeResult::CharacterPositionData"* }
%"class.blink::ShapeResult::CharacterPositionData" = type { %"class.WTF::Vector.1652", i32, float }
%"class.WTF::Vector.1652" = type { %"class.WTF::VectorBuffer.1653" }
%"class.WTF::VectorBuffer.1653" = type { %"class.WTF::VectorBufferBase.1654" }
%"class.WTF::VectorBufferBase.1654" = type { %"struct.blink::ShapeResultCharacterData"*, i32, i32 }
%"struct.blink::ShapeResultCharacterData" = type { float, i8 }
%class.scoped_refptr.1666 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type { %"class.WTF::RefCounted.1667", [4 x i8], %"class.blink::NGConstraintSpace", %class.scoped_refptr.1814, %union.anon.1832, %"class.blink::LayoutUnit", %"struct.blink::NGLayoutResult::Bitfields" }
%"class.WTF::RefCounted.1667" = type { %"class.base::RefCounted.1668" }
%"class.base::RefCounted.1668" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NGConstraintSpace" = type <{ %"struct.blink::LogicalSize", %union.anon.1669, %"class.blink::NGExclusionSpace", %"struct.blink::NGConstraintSpace::Bitfields", [4 x i8] }>
%"struct.blink::LogicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1669 = type { %"struct.blink::NGConstraintSpace::RareData"* }
%"struct.blink::NGConstraintSpace::RareData" = type { %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, %union.anon.1670 }
%"struct.blink::NGBfcOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1670 = type { %"struct.blink::NGConstraintSpace::RareData::CustomData", [40 x i8] }
%"struct.blink::NGConstraintSpace::RareData::CustomData" = type { %class.scoped_refptr.1704 }
%class.scoped_refptr.1704 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.1705", [4 x i8], %"class.std::__1::unique_ptr.1707", i64, %"class.WTF::Vector.1711", %"class.WTF::Vector.1716", %"class.WTF::Vector.1722", %"class.WTF::Vector.1740", %class.scoped_refptr.1546, %"class.WTF::HashMap.1746", %"class.WTF::Vector.1751", %"class.WTF::Vector.1711", %"class.WTF::Vector.1756", %"class.WTF::HashMap.1761", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.1705" = type { %"class.base::RefCountedThreadSafe.1706" }
%"class.base::RefCountedThreadSafe.1706" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1707" = type { %"class.std::__1::__compressed_pair.1708" }
%"class.std::__1::__compressed_pair.1708" = type { %"struct.std::__1::__compressed_pair_elem.1709" }
%"struct.std::__1::__compressed_pair_elem.1709" = type { i8* }
%"class.WTF::Vector.1716" = type { %"class.WTF::VectorBuffer.1717" }
%"class.WTF::VectorBuffer.1717" = type { %"class.WTF::VectorBufferBase.1718", [8 x i8] }
%"class.WTF::VectorBufferBase.1718" = type { %class.scoped_refptr.1719*, i32, i32 }
%class.scoped_refptr.1719 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1722" = type { %"class.WTF::VectorBuffer.1723" }
%"class.WTF::VectorBuffer.1723" = type { %"class.WTF::VectorBufferBase.1724" }
%"class.WTF::VectorBufferBase.1724" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1726", %"class.std::__1::unique_ptr.1732" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1725 }
%class.scoped_refptr.1725 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1726" = type { %"class.std::__1::__compressed_pair.1727" }
%"class.std::__1::__compressed_pair.1727" = type { %"struct.std::__1::__compressed_pair_elem.1728" }
%"struct.std::__1::__compressed_pair_elem.1728" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1732" = type { %"class.std::__1::__compressed_pair.1733" }
%"class.std::__1::__compressed_pair.1733" = type { %"struct.std::__1::__compressed_pair_elem.1734" }
%"struct.std::__1::__compressed_pair_elem.1734" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1740" = type { %"class.WTF::VectorBuffer.1741" }
%"class.WTF::VectorBuffer.1741" = type { %"class.WTF::VectorBufferBase.1742" }
%"class.WTF::VectorBufferBase.1742" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1743", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1743" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1746" = type { %"class.WTF::HashTable.1747" }
%"class.WTF::HashTable.1747" = type <{ %"struct.WTF::KeyValuePair.1750"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1750" = type opaque
%"class.WTF::Vector.1751" = type { %"class.WTF::VectorBuffer.1752" }
%"class.WTF::VectorBuffer.1752" = type { %"class.WTF::VectorBufferBase.1753" }
%"class.WTF::VectorBufferBase.1753" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.1711" = type { %"class.WTF::VectorBuffer.1712" }
%"class.WTF::VectorBuffer.1712" = type { %"class.WTF::VectorBufferBase.1713", [16 x i8] }
%"class.WTF::VectorBufferBase.1713" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1756" = type { %"class.WTF::VectorBuffer.1757" }
%"class.WTF::VectorBuffer.1757" = type { %"class.WTF::VectorBufferBase.1758" }
%"class.WTF::VectorBufferBase.1758" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type opaque
%"class.WTF::HashMap.1761" = type { %"class.WTF::HashTable.1762" }
%"class.WTF::HashTable.1762" = type <{ %"struct.WTF::KeyValuePair.1765"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1765" = type { i8**, %"class.std::__1::unique_ptr.2007" }
%"class.std::__1::unique_ptr.2007" = type { %"class.std::__1::__compressed_pair.2008" }
%"class.std::__1::__compressed_pair.2008" = type { %"struct.std::__1::__compressed_pair_elem.2009" }
%"struct.std::__1::__compressed_pair_elem.2009" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::NGExclusionSpace" = type { %"class.std::__1::unique_ptr.1766" }
%"class.std::__1::unique_ptr.1766" = type { %"class.std::__1::__compressed_pair.1767" }
%"class.std::__1::__compressed_pair.1767" = type { %"struct.std::__1::__compressed_pair_elem.1768" }
%"struct.std::__1::__compressed_pair_elem.1768" = type { %"class.blink::NGExclusionSpaceInternal"* }
%"class.blink::NGExclusionSpaceInternal" = type { %class.scoped_refptr.1769, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.std::__1::unique_ptr.1786" }
%class.scoped_refptr.1769 = type { %"class.base::RefCountedData.1770"* }
%"class.base::RefCountedData.1770" = type { %"class.base::RefCountedThreadSafe.1771", %"class.WTF::Vector.1772" }
%"class.base::RefCountedThreadSafe.1771" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1772" = type { %"class.WTF::VectorBuffer.1773" }
%"class.WTF::VectorBuffer.1773" = type { %"class.WTF::VectorBufferBase.1774" }
%"class.WTF::VectorBufferBase.1774" = type { %class.scoped_refptr.1775*, i32, i32 }
%class.scoped_refptr.1775 = type { %"struct.blink::NGExclusion"* }
%"struct.blink::NGExclusion" = type { %"class.WTF::RefCounted.1776", %"struct.blink::NGBfcRect", i32, i8, %"class.std::__1::unique_ptr.1778" }
%"class.WTF::RefCounted.1776" = type { %"class.base::RefCounted.1777" }
%"class.base::RefCounted.1777" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::NGBfcRect" = type { %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset" }
%"class.std::__1::unique_ptr.1778" = type { %"class.std::__1::__compressed_pair.1779" }
%"class.std::__1::__compressed_pair.1779" = type { %"struct.std::__1::__compressed_pair_elem.1780" }
%"struct.std::__1::__compressed_pair_elem.1780" = type { %"struct.blink::NGExclusionShapeData"* }
%"struct.blink::NGExclusionShapeData" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1666, %"class.WTF::Vector.1864", %"class.std::__1::unique_ptr.1869", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1890, %"class.blink::Persistent.1891" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::Vector.1864" = type { %"class.WTF::VectorBuffer.1865" }
%"class.WTF::VectorBuffer.1865" = type { %"class.WTF::VectorBufferBase.1866", [8 x i8] }
%"class.WTF::VectorBufferBase.1866" = type { %class.scoped_refptr.1666*, i32, i32 }
%"class.std::__1::unique_ptr.1869" = type { %"class.std::__1::__compressed_pair.1870" }
%"class.std::__1::__compressed_pair.1870" = type { %"struct.std::__1::__compressed_pair_elem.1871" }
%"struct.std::__1::__compressed_pair_elem.1871" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1872", %"class.absl::optional.1877", %"class.absl::optional.1882" }
%"class.absl::optional.1872" = type { %"class.absl::optional_internal::optional_data.1873" }
%"class.absl::optional_internal::optional_data.1873" = type { %"class.absl::optional_internal::optional_data_base.1874" }
%"class.absl::optional_internal::optional_data_base.1874" = type { %"class.absl::optional_internal::optional_data_dtor_base.1875" }
%"class.absl::optional_internal::optional_data_dtor_base.1875" = type { i8, %union.anon.1876 }
%union.anon.1876 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1877" = type { %"class.absl::optional_internal::optional_data.1878" }
%"class.absl::optional_internal::optional_data.1878" = type { %"class.absl::optional_internal::optional_data_base.1879" }
%"class.absl::optional_internal::optional_data_base.1879" = type { %"class.absl::optional_internal::optional_data_dtor_base.1880" }
%"class.absl::optional_internal::optional_data_dtor_base.1880" = type { i8, [3 x i8], %union.anon.1881 }
%union.anon.1881 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1882" = type { %"class.absl::optional_internal::optional_data.1883" }
%"class.absl::optional_internal::optional_data.1883" = type { %"class.absl::optional_internal::optional_data_base.1884" }
%"class.absl::optional_internal::optional_data_base.1884" = type { %"class.absl::optional_internal::optional_data_dtor_base.1885" }
%"class.absl::optional_internal::optional_data_dtor_base.1885" = type { i8, %union.anon.1886 }
%union.anon.1886 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1890 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1891" = type { %"class.blink::PersistentBase.1892" }
%"class.blink::PersistentBase.1892" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1895", %"struct.blink::PhysicalRect", %"class.blink::Member.1905" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.std::__1::unique_ptr.1895" = type { %"class.std::__1::__compressed_pair.1896" }
%"class.std::__1::__compressed_pair.1896" = type { %"struct.std::__1::__compressed_pair_elem.1897" }
%"struct.std::__1::__compressed_pair_elem.1897" = type { %"class.WTF::HashSet.1898"* }
%"class.WTF::HashSet.1898" = type { %"class.WTF::HashTable.1899" }
%"class.WTF::HashTable.1899" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1905" = type { %"class.blink::MemberBase.1906" }
%"class.blink::MemberBase.1906" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"struct.blink::NGBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1786" = type { %"class.std::__1::__compressed_pair.1787" }
%"class.std::__1::__compressed_pair.1787" = type { %"struct.std::__1::__compressed_pair_elem.1788" }
%"struct.std::__1::__compressed_pair_elem.1788" = type { %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* }
%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry" = type <{ %"class.WTF::Vector.1789", %"class.WTF::Vector.1802", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.1789" = type { %"class.WTF::VectorBuffer.1790" }
%"class.WTF::VectorBuffer.1790" = type { %"class.WTF::VectorBufferBase.1791", [320 x i8] }
%"class.WTF::VectorBufferBase.1791" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelf" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", [4 x i8], %"class.WTF::Vector.1792", %"class.WTF::Vector.1792", %class.scoped_refptr.1797, i8, [7 x i8] }>
%"class.WTF::Vector.1792" = type { %"class.WTF::VectorBuffer.1793" }
%"class.WTF::VectorBuffer.1793" = type { %"class.WTF::VectorBufferBase.1794", [8 x i8] }
%"class.WTF::VectorBufferBase.1794" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelfEdge" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1797 = type { %"class.blink::NGShapeExclusions"* }
%"class.blink::NGShapeExclusions" = type { %"class.WTF::RefCounted.1798", %"class.WTF::Vector.1772", %"class.WTF::Vector.1772" }
%"class.WTF::RefCounted.1798" = type { %"class.base::RefCounted.1799" }
%"class.base::RefCounted.1799" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1802" = type { %"class.WTF::VectorBuffer.1803" }
%"class.WTF::VectorBuffer.1803" = type { %"class.WTF::VectorBufferBase.1804", [288 x i8] }
%"class.WTF::VectorBufferBase.1804" = type { %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGClosedArea" = type { %"struct.blink::NGLayoutOpportunity", %"class.WTF::Vector.1792", %"class.WTF::Vector.1792" }
%"struct.blink::NGLayoutOpportunity" = type { %"struct.blink::NGBfcRect", %class.scoped_refptr.1805 }
%class.scoped_refptr.1805 = type { %"class.blink::NGShapeExclusions"* }
%"struct.blink::NGConstraintSpace::Bitfields" = type { i32 }
%class.scoped_refptr.1814 = type { %"class.blink::NGPhysicalFragment"* }
%"class.blink::NGPhysicalFragment" = type { %"class.WTF::RefCounted.1815", %"class.blink::LayoutObject"*, %"struct.blink::PhysicalSize", i24, %class.scoped_refptr.1817, %"class.std::__1::unique_ptr.1820" }
%"class.WTF::RefCounted.1815" = type { %"class.base::RefCounted.1816" }
%"class.base::RefCounted.1816" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1817 = type { %"class.blink::NGBreakToken"* }
%"class.blink::NGBreakToken" = type <{ i32 (...)**, %"class.WTF::RefCounted.1818", [4 x i8], %"class.blink::LayoutBox"*, i16, [6 x i8] }>
%"class.WTF::RefCounted.1818" = type { %"class.base::RefCounted.1819" }
%"class.base::RefCounted.1819" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1820" = type { %"class.std::__1::__compressed_pair.1821" }
%"class.std::__1::__compressed_pair.1821" = type { %"struct.std::__1::__compressed_pair_elem.1822" }
%"struct.std::__1::__compressed_pair_elem.1822" = type { %"class.WTF::Vector.1823"* }
%"class.WTF::Vector.1823" = type { %"class.WTF::VectorBuffer.1824" }
%"class.WTF::VectorBuffer.1824" = type { %"class.WTF::VectorBufferBase.1825" }
%"class.WTF::VectorBufferBase.1825" = type { %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGPhysicalOutOfFlowPositionedNode" = type { %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset", i8, %"class.blink::LayoutInline"* }
%"class.blink::LayoutInline" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutObjectChildList", %union.anon.1826 }
%union.anon.1826 = type { %"class.blink::LineBoxList" }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%union.anon.1832 = type { %"struct.blink::NGLayoutResult::RareData"* }
%"struct.blink::NGLayoutResult::RareData" = type { %"class.blink::LayoutUnit", %"class.absl::optional.1671", %class.scoped_refptr.1833, i32, %"struct.blink::LogicalOffset", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGBlockNode", %union.anon.1834, %"class.blink::NGExclusionSpace", %class.scoped_refptr.1704, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i32, i32, %"class.std::__1::unique_ptr.1835", %"class.absl::optional.1851" }
%"class.absl::optional.1671" = type { %"class.absl::optional_internal::optional_data.1672" }
%"class.absl::optional_internal::optional_data.1672" = type { %"class.absl::optional_internal::optional_data_base.1673" }
%"class.absl::optional_internal::optional_data_base.1673" = type { %"class.absl::optional_internal::optional_data_dtor_base.1674" }
%"class.absl::optional_internal::optional_data_dtor_base.1674" = type { i8, %union.anon.1675 }
%union.anon.1675 = type { %"class.blink::LayoutUnit" }
%class.scoped_refptr.1833 = type { %"class.blink::NGEarlyBreak"* }
%"class.blink::NGEarlyBreak" = type <{ %"class.WTF::RefCounted.1861", [4 x i8], %union.anon.1863, %class.scoped_refptr.1833, i32, [4 x i8] }>
%"class.WTF::RefCounted.1861" = type { %"class.base::RefCounted.1862" }
%"class.base::RefCounted.1862" = type { %"class.base::subtle::RefCountedBase" }
%union.anon.1863 = type { %"class.blink::LayoutBox"* }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::NGMarginStrut" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i8, [2 x i8] }>
%"class.blink::NGBlockNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.blink::NGLayoutInputNode.base" = type <{ %"class.blink::LayoutBox"*, i8 }>
%union.anon.1834 = type { %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1835" = type { %"class.std::__1::__compressed_pair.1836" }
%"class.std::__1::__compressed_pair.1836" = type { %"struct.std::__1::__compressed_pair_elem.1837" }
%"struct.std::__1::__compressed_pair_elem.1837" = type { %"struct.blink::NGGridData"* }
%"struct.blink::NGGridData" = type { i32, i32, i32, i32, %"struct.blink::NGGridData::TrackCollectionGeometry", %"struct.blink::NGGridData::TrackCollectionGeometry" }
%"struct.blink::NGGridData::TrackCollectionGeometry" = type { %"class.WTF::Vector.1838", %"class.WTF::Vector.1843", %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.1838" = type { %"class.WTF::VectorBuffer.1839" }
%"class.WTF::VectorBuffer.1839" = type { %"class.WTF::VectorBufferBase.1840" }
%"class.WTF::VectorBufferBase.1840" = type { %"struct.blink::NGGridData::SetData"*, i32, i32 }
%"struct.blink::NGGridData::SetData" = type { %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.1843" = type { %"class.WTF::VectorBuffer.1844" }
%"class.WTF::VectorBuffer.1844" = type { %"class.WTF::VectorBufferBase.1845" }
%"class.WTF::VectorBufferBase.1845" = type { %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, i32, i32 }
%"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range" = type <{ i32, i32, i32, i32, %"struct.blink::TrackSpanProperties", [3 x i8] }>
%"struct.blink::TrackSpanProperties" = type { i8 }
%"class.absl::optional.1851" = type { %"class.absl::optional_internal::optional_data.1852" }
%"class.absl::optional_internal::optional_data.1852" = type { %"class.absl::optional_internal::optional_data_base.1853" }
%"class.absl::optional_internal::optional_data_base.1853" = type { %"class.absl::optional_internal::optional_data_dtor_base.1854" }
%"class.absl::optional_internal::optional_data_dtor_base.1854" = type { i8, %union.anon.1855 }
%union.anon.1855 = type { %"struct.blink::NGLayoutResult::MathData" }
%"struct.blink::NGLayoutResult::MathData" = type { %"class.blink::LayoutUnit" }
%"struct.blink::NGLayoutResult::Bitfields" = type { i32 }
%"class.absl::optional.1856" = type { %"class.absl::optional_internal::optional_data.1857" }
%"class.absl::optional_internal::optional_data.1857" = type { %"class.absl::optional_internal::optional_data_base.1858" }
%"class.absl::optional_internal::optional_data_base.1858" = type { %"class.absl::optional_internal::optional_data_dtor_base.1859" }
%"class.absl::optional_internal::optional_data_dtor_base.1859" = type { i8, [7 x i8], %union.anon.1860 }
%union.anon.1860 = type { %"struct.blink::NGPositionedFloat" }
%"struct.blink::NGPositionedFloat" = type <{ %class.scoped_refptr.1666, %"struct.blink::NGBfcOffset", i8, [7 x i8] }>
%"struct.blink::NGLineBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::NGPhysicalFragment::PostLayoutChildLinkList::ConstIterator" = type { %"struct.blink::NGLink"*, %"struct.blink::NGLink"*, %"struct.blink::NGLink" }
%"struct.blink::NGLink" = type { %"class.blink::NGPhysicalFragment"*, %"struct.blink::PhysicalOffset" }
%"class.blink::NGLineInfo" = type <{ %"struct.blink::NGInlineItemsData"*, %"class.blink::ComputedStyle"*, %"class.WTF::Vector.1943", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"struct.blink::NGInlineItemsData" = type { %"class.WTF::String", %"class.WTF::Vector.1907", %"class.std::__1::unique_ptr.1912", %"class.std::__1::unique_ptr.1927" }
%"class.WTF::Vector.1907" = type { %"class.WTF::VectorBuffer.1908" }
%"class.WTF::VectorBuffer.1908" = type { %"class.WTF::VectorBufferBase.1909" }
%"class.WTF::VectorBufferBase.1909" = type { %"class.blink::NGInlineItem"*, i32, i32 }
%"class.std::__1::unique_ptr.1912" = type { %"class.std::__1::__compressed_pair.1913" }
%"class.std::__1::__compressed_pair.1913" = type { %"struct.std::__1::__compressed_pair_elem.1914" }
%"struct.std::__1::__compressed_pair_elem.1914" = type { %"class.blink::NGInlineItemSegments"* }
%"class.blink::NGInlineItemSegments" = type { %"class.WTF::Vector.1915", %"class.WTF::Vector.1920" }
%"class.WTF::Vector.1915" = type { %"class.WTF::VectorBuffer.1916" }
%"class.WTF::VectorBuffer.1916" = type { %"class.WTF::VectorBufferBase.1917" }
%"class.WTF::VectorBufferBase.1917" = type { %"class.blink::NGInlineItemSegment"*, i32, i32 }
%"class.blink::NGInlineItemSegment" = type <{ i32, i16, [2 x i8] }>
%"class.WTF::Vector.1920" = type { %"class.WTF::VectorBuffer.1921" }
%"class.WTF::VectorBuffer.1921" = type { %"class.WTF::VectorBufferBase.1071" }
%"class.std::__1::unique_ptr.1927" = type { %"class.std::__1::__compressed_pair.1928" }
%"class.std::__1::__compressed_pair.1928" = type { %"struct.std::__1::__compressed_pair_elem.1929" }
%"struct.std::__1::__compressed_pair_elem.1929" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type { %"class.WTF::Vector.1930", %"class.WTF::HashMap.1935", %"class.WTF::String" }
%"class.WTF::Vector.1930" = type { %"class.WTF::VectorBuffer.1931" }
%"class.WTF::VectorBuffer.1931" = type { %"class.WTF::VectorBufferBase.1932" }
%"class.WTF::VectorBufferBase.1932" = type { %"class.blink::NGOffsetMappingUnit"*, i32, i32 }
%"class.blink::NGOffsetMappingUnit" = type { i32, %"class.blink::LayoutObject"*, i32, i32, i32, i32 }
%"class.WTF::HashMap.1935" = type { %"class.WTF::HashTable.1936" }
%"class.WTF::HashTable.1936" = type <{ %"struct.WTF::KeyValuePair.1939"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1939" = type opaque
%"class.WTF::Vector.1943" = type { %"class.WTF::VectorBuffer.1944" }
%"class.WTF::VectorBuffer.1944" = type { %"class.WTF::VectorBufferBase.1945", [5120 x i8] }
%"class.WTF::VectorBufferBase.1945" = type { %"struct.blink::NGInlineItemResult"*, i32, i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NGLogicalLineItems" = type { %"class.WTF::Vector.1948" }
%"class.WTF::Vector.1948" = type { %"class.WTF::VectorBuffer.1949" }
%"class.WTF::VectorBuffer.1949" = type { %"class.WTF::VectorBufferBase.1950", [1920 x i8] }
%"class.WTF::VectorBufferBase.1950" = type { %"struct.blink::NGLogicalLineItem"*, i32, i32 }
%"struct.blink::NGLogicalLineItem" = type <{ %class.scoped_refptr.1666, %"class.blink::NGInlineItem"*, %class.scoped_refptr.1665, %"struct.blink::NGTextOffset", %"class.WTF::String", %"class.blink::LayoutObject"*, i32, [4 x i8], %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"struct.blink::LogicalRect", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, i8, i8, i8, i8, [4 x i8] }>
%"struct.blink::LogicalRect" = type { %"struct.blink::LogicalOffset", %"struct.blink::LogicalSize" }
%"class.blink::NGPhysicalBoxFragment" = type { %"class.blink::NGPhysicalFragment", i24, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::NGInkOverflow", [0 x %"struct.blink::NGLink"] }
%"class.blink::NGInkOverflow" = type { %union.anon.1953 }
%union.anon.1953 = type { %"struct.blink::NGSingleInkOverflow"* }
%"struct.blink::NGSingleInkOverflow" = type { %"struct.blink::PhysicalRect" }
%"class.logging::CheckOpResult" = type { i8* }

$_ZNK5blink12NGInlineItem5StyleEv = comdat any

$_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj = comdat any

@_ZZN5blink12_GLOBAL__N_137AdjustTextOverUnderOffsetsForEmHeightENS_10LayoutUnitES1_RKNS_13ComputedStyleERKNS_15ShapeResultViewEE11s_run_fonts = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink12_GLOBAL__N_137AdjustTextOverUnderOffsetsForEmHeightENS_10LayoutUnitES1_RKNS_13ComputedStyleERKNS_15ShapeResultViewEE11s_run_fonts = internal global i64 0, align 8
@.str = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.4 = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/css/css_global_rule_set.h\00", align 1
@.str.5 = private unnamed_addr constant [20 x i8] c"features_.IsAlive()\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5blink25AdjustTextRectForEmHeightERKNS_12PhysicalRectERKNS_13ComputedStyleEPKNS_15ShapeResultViewENS_11WritingModeE(%"struct.blink::PhysicalRect"* nocapture readonly dereferenceable(16), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::ShapeResultView"*, i8 zeroext) local_unnamed_addr #0 {
  %5 = icmp eq %"class.blink::ShapeResultView"* %2, null
  br i1 %5, label %6, label %12

6:                                                ; preds = %4
  %7 = bitcast %"struct.blink::PhysicalRect"* %0 to i64*
  %8 = load i64, i64* %7, align 4
  %9 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %0, i64 0, i32 1
  %10 = bitcast %"struct.blink::PhysicalSize"* %9 to i64*
  %11 = load i64, i64* %10, align 4
  br label %98

12:                                               ; preds = %4
  %13 = icmp eq i8 %3, 0
  %14 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %0, i64 0, i32 1, i32 1
  %15 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %0, i64 0, i32 1, i32 0
  %16 = select i1 %13, %"class.blink::LayoutUnit"* %14, %"class.blink::LayoutUnit"* %15
  %17 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %16, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = tail call fastcc i64 @_ZN5blink12_GLOBAL__N_137AdjustTextOverUnderOffsetsForEmHeightENS_10LayoutUnitES1_RKNS_13ComputedStyleERKNS_15ShapeResultViewE(i32 0, i32 %18, %"class.blink::ComputedStyle"* dereferenceable(104) %1, %"class.blink::ShapeResultView"* nonnull dereferenceable(40) %2)
  %20 = trunc i64 %19 to i32
  %21 = lshr i64 %19, 32
  %22 = trunc i64 %21 to i32
  %23 = icmp sgt i32 %22, -1
  %24 = select i1 %23, i32 -2147483648, i32 2147483647
  %25 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %18, i32 %22) #7
  %26 = extractvalue { i32, i1 } %25, 1
  %27 = extractvalue { i32, i1 } %25, 0
  %28 = select i1 %26, i32 %24, i32 %27, !prof !2
  %29 = icmp sgt i32 %20, -1
  %30 = select i1 %29, i32 -2147483648, i32 2147483647
  %31 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %22, i32 %20) #7
  %32 = extractvalue { i32, i1 } %31, 1
  %33 = extractvalue { i32, i1 } %31, 0
  %34 = select i1 %32, i32 %30, i32 %33, !prof !2
  br i1 %13, label %35, label %56

35:                                               ; preds = %12
  %36 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %0, i64 0, i32 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %0, i64 0, i32 0, i32 1, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp slt i32 %20, 0
  %41 = select i1 %40, i32 -2147483648, i32 2147483647
  %42 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %39, i32 %20) #7
  %43 = extractvalue { i32, i1 } %42, 1
  %44 = extractvalue { i32, i1 } %42, 0
  %45 = select i1 %43, i32 %41, i32 %44, !prof !2
  %46 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %0, i64 0, i32 1, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %45 to i64
  %49 = shl nuw i64 %48, 32
  %50 = zext i32 %37 to i64
  %51 = or i64 %49, %50
  %52 = zext i32 %34 to i64
  %53 = shl nuw i64 %52, 32
  %54 = zext i32 %47 to i64
  %55 = or i64 %53, %54
  br label %98

56:                                               ; preds = %12
  %57 = icmp eq i8 %3, 2
  %58 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %0, i64 0, i32 0, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %79

60:                                               ; preds = %56
  %61 = icmp slt i32 %28, 0
  %62 = select i1 %61, i32 -2147483648, i32 2147483647
  %63 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %59, i32 %28) #7
  %64 = extractvalue { i32, i1 } %63, 1
  %65 = extractvalue { i32, i1 } %63, 0
  %66 = select i1 %64, i32 %62, i32 %65, !prof !2
  %67 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %0, i64 0, i32 0, i32 1, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %0, i64 0, i32 1, i32 1, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %68 to i64
  %72 = shl nuw i64 %71, 32
  %73 = zext i32 %66 to i64
  %74 = or i64 %72, %73
  %75 = zext i32 %70 to i64
  %76 = shl nuw i64 %75, 32
  %77 = zext i32 %34 to i64
  %78 = or i64 %76, %77
  br label %98

79:                                               ; preds = %56
  %80 = icmp slt i32 %20, 0
  %81 = select i1 %80, i32 -2147483648, i32 2147483647
  %82 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %59, i32 %20) #7
  %83 = extractvalue { i32, i1 } %82, 1
  %84 = extractvalue { i32, i1 } %82, 0
  %85 = select i1 %83, i32 %81, i32 %84, !prof !2
  %86 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %0, i64 0, i32 0, i32 1, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %0, i64 0, i32 1, i32 1, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %87 to i64
  %91 = shl nuw i64 %90, 32
  %92 = zext i32 %85 to i64
  %93 = or i64 %91, %92
  %94 = zext i32 %89 to i64
  %95 = shl nuw i64 %94, 32
  %96 = zext i32 %34 to i64
  %97 = or i64 %95, %96
  br label %98

98:                                               ; preds = %35, %60, %79, %6
  %99 = phi i64 [ %8, %6 ], [ %51, %35 ], [ %74, %60 ], [ %93, %79 ]
  %100 = phi i64 [ %11, %6 ], [ %55, %35 ], [ %78, %60 ], [ %97, %79 ]
  %101 = insertvalue { i64, i64 } undef, i64 %99, 0
  %102 = insertvalue { i64, i64 } %101, i64 %100, 1
  ret { i64, i64 } %102
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZN5blink12_GLOBAL__N_137AdjustTextOverUnderOffsetsForEmHeightENS_10LayoutUnitES1_RKNS_13ComputedStyleERKNS_15ShapeResultViewE(i32, i32, %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::ShapeResultView"* dereferenceable(40)) unnamed_addr #0 {
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %6, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %8, i64 0, i32 1
  %10 = tail call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %9) #7
  %11 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %10, i64 0, i32 2
  %12 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %11, align 8
  %13 = icmp eq %"class.blink::SimpleFontData"* %12, null
  br i1 %13, label %14, label %18

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %9, i64 0, i32 0
  %16 = tail call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %10, %"class.blink::FontDescription"* dereferenceable(80) %15) #7
  store %"class.blink::SimpleFontData"* %16, %"class.blink::SimpleFontData"** %11, align 8
  %17 = icmp eq %"class.blink::SimpleFontData"* %16, null
  br i1 %17, label %125, label %18

18:                                               ; preds = %4, %14
  %19 = phi %"class.blink::SimpleFontData"* [ %16, %14 ], [ %12, %4 ]
  %20 = tail call i32 @_ZNK5blink13ComputedStyle15GetFontBaselineEv(%"class.blink::ComputedStyle"* %2) #7
  %21 = icmp sgt i32 %0, -1
  %22 = select i1 %21, i32 -2147483648, i32 2147483647
  %23 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1, i32 %0) #7
  %24 = extractvalue { i32, i1 } %23, 1
  %25 = extractvalue { i32, i1 } %23, 0
  %26 = select i1 %24, i32 %22, i32 %25, !prof !2
  %27 = icmp eq i32 %20, 0
  %28 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %19, i64 0, i32 1, i32 1
  %29 = load float, float* %28, align 4
  br i1 %27, label %35, label %30

30:                                               ; preds = %18
  %31 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %19, i64 0, i32 1, i32 2
  %32 = load float, float* %31, align 4
  %33 = fadd float %29, %32
  %34 = fmul float %33, 5.000000e-01
  br label %35

35:                                               ; preds = %18, %30
  %36 = phi float [ %34, %30 ], [ %29, %18 ]
  %37 = fmul float %36, 6.400000e+01
  %38 = tail call float @llvm.round.f32(float %37) #7
  %39 = fcmp ult float %38, 0xC1E0000000000000
  %40 = fcmp ugt float %38, 0x41DFFFFFE0000000
  %41 = fcmp ogt float %38, 0xC1E0000000000000
  %42 = select i1 %41, float %38, float 0xC1E0000000000000
  %43 = fptosi float %42 to i32
  %44 = select i1 %39, i32 0, i32 2147483647
  %45 = select i1 %40, i32 %44, i32 %43
  %46 = icmp sgt i32 %45, -1
  %47 = select i1 %46, i32 -2147483648, i32 2147483647
  %48 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %26, i32 %45) #7
  %49 = extractvalue { i32, i1 } %48, 1
  %50 = extractvalue { i32, i1 } %48, 0
  %51 = select i1 %49, i32 %47, i32 %50, !prof !2
  %52 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_137AdjustTextOverUnderOffsetsForEmHeightENS_10LayoutUnitES1_RKNS_13ComputedStyleERKNS_15ShapeResultViewEE11s_run_fonts to i8*) acquire, align 8
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %58, !prof !3

54:                                               ; preds = %35
  %55 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_137AdjustTextOverUnderOffsetsForEmHeightENS_10LayoutUnitES1_RKNS_13ComputedStyleERKNS_15ShapeResultViewEE11s_run_fonts) #7
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %58, label %57

57:                                               ; preds = %54
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_137AdjustTextOverUnderOffsetsForEmHeightENS_10LayoutUnitES1_RKNS_13ComputedStyleERKNS_15ShapeResultViewEE11s_run_fonts, i64 0, i32 0, i32 0, i64 0), i8 0, i64 16, i1 false) #7
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_137AdjustTextOverUnderOffsetsForEmHeightENS_10LayoutUnitES1_RKNS_13ComputedStyleERKNS_15ShapeResultViewEE11s_run_fonts) #7
  br label %58

58:                                               ; preds = %54, %57, %35
  tail call void @_ZNK5blink15ShapeResultView14GetRunFontDataEPN3WTF6VectorINS_11ShapeResult11RunFontDataELj0ENS1_18PartitionAllocatorEEE(%"class.blink::ShapeResultView"* %3, %"class.WTF::Vector.2016"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_137AdjustTextOverUnderOffsetsForEmHeightENS_10LayoutUnitES1_RKNS_13ComputedStyleERKNS_15ShapeResultViewEE11s_run_fonts to %"class.WTF::Vector.2016"*)) #7
  %59 = load %"struct.blink::ShapeResult::RunFontData"*, %"struct.blink::ShapeResult::RunFontData"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_137AdjustTextOverUnderOffsetsForEmHeightENS_10LayoutUnitES1_RKNS_13ComputedStyleERKNS_15ShapeResultViewEE11s_run_fonts to %"struct.blink::ShapeResult::RunFontData"**), align 8
  %60 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_137AdjustTextOverUnderOffsetsForEmHeightENS_10LayoutUnitES1_RKNS_13ComputedStyleERKNS_15ShapeResultViewEE11s_run_fonts, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds %"struct.blink::ShapeResult::RunFontData", %"struct.blink::ShapeResult::RunFontData"* %59, i64 %61
  %63 = icmp eq i32 %60, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %58
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_137AdjustTextOverUnderOffsetsForEmHeightENS_10LayoutUnitES1_RKNS_13ComputedStyleERKNS_15ShapeResultViewEE11s_run_fonts, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  br label %106

65:                                               ; preds = %101
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_137AdjustTextOverUnderOffsetsForEmHeightENS_10LayoutUnitES1_RKNS_13ComputedStyleERKNS_15ShapeResultViewEE11s_run_fonts, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %66 = icmp eq i32 %103, 2147483647
  br i1 %66, label %106, label %108

67:                                               ; preds = %58, %101
  %68 = phi i32 [ %102, %101 ], [ 2147483647, %58 ]
  %69 = phi i32 [ %103, %101 ], [ 2147483647, %58 ]
  %70 = phi %"struct.blink::ShapeResult::RunFontData"* [ %104, %101 ], [ %59, %58 ]
  %71 = getelementptr inbounds %"struct.blink::ShapeResult::RunFontData", %"struct.blink::ShapeResult::RunFontData"* %70, i64 0, i32 0
  %72 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %71, align 8
  %73 = icmp eq %"class.blink::SimpleFontData"* %72, null
  br i1 %73, label %101, label %74

74:                                               ; preds = %67
  %75 = tail call i64 @_ZNK5blink14SimpleFontData30NormalizedTypoAscentAndDescentENS_12FontBaselineE(%"class.blink::SimpleFontData"* nonnull %72, i32 %20) #7
  %76 = trunc i64 %75 to i32
  %77 = lshr i64 %75, 32
  %78 = trunc i64 %77 to i32
  %79 = icmp sgt i32 %76, -1
  %80 = select i1 %79, i32 -2147483648, i32 2147483647
  %81 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %45, i32 %76) #7
  %82 = extractvalue { i32, i1 } %81, 1
  %83 = extractvalue { i32, i1 } %81, 0
  %84 = select i1 %82, i32 %80, i32 %83, !prof !2
  %85 = icmp sgt i32 %84, 0
  %86 = select i1 %85, i32 %84, i32 0
  %87 = and i32 %86, 2147483584
  %88 = icmp sgt i32 %78, -1
  %89 = select i1 %88, i32 -2147483648, i32 2147483647
  %90 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %51, i32 %78) #7
  %91 = extractvalue { i32, i1 } %90, 1
  %92 = extractvalue { i32, i1 } %90, 0
  %93 = select i1 %91, i32 %89, i32 %92, !prof !2
  %94 = icmp sgt i32 %93, 0
  %95 = select i1 %94, i32 %93, i32 0
  %96 = and i32 %95, 2147483584
  %97 = icmp slt i32 %87, %69
  %98 = select i1 %97, i32 %87, i32 %69
  %99 = icmp slt i32 %96, %68
  %100 = select i1 %99, i32 %96, i32 %68
  br label %101

101:                                              ; preds = %67, %74
  %102 = phi i32 [ %68, %67 ], [ %100, %74 ]
  %103 = phi i32 [ %69, %67 ], [ %98, %74 ]
  %104 = getelementptr inbounds %"struct.blink::ShapeResult::RunFontData", %"struct.blink::ShapeResult::RunFontData"* %70, i64 1
  %105 = icmp eq %"struct.blink::ShapeResult::RunFontData"* %104, %62
  br i1 %105, label %65, label %67

106:                                              ; preds = %64, %65
  %107 = phi i32 [ 2147483647, %64 ], [ %102, %65 ]
  br label %108

108:                                              ; preds = %106, %65
  %109 = phi i32 [ %107, %106 ], [ %102, %65 ]
  %110 = phi i32 [ 0, %106 ], [ %103, %65 ]
  %111 = icmp eq i32 %109, 2147483647
  %112 = select i1 %111, i32 0, i32 %109
  %113 = icmp slt i32 %110, 0
  %114 = select i1 %113, i32 -2147483648, i32 2147483647
  %115 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %0, i32 %110) #7
  %116 = extractvalue { i32, i1 } %115, 1
  %117 = extractvalue { i32, i1 } %115, 0
  %118 = select i1 %116, i32 %114, i32 %117, !prof !2
  %119 = icmp sgt i32 %112, -1
  %120 = select i1 %119, i32 -2147483648, i32 2147483647
  %121 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1, i32 %112) #7
  %122 = extractvalue { i32, i1 } %121, 1
  %123 = extractvalue { i32, i1 } %121, 0
  %124 = select i1 %122, i32 %120, i32 %123, !prof !2
  br label %125

125:                                              ; preds = %14, %108
  %126 = phi i32 [ %118, %108 ], [ %0, %14 ]
  %127 = phi i32 [ %124, %108 ], [ %1, %14 ]
  %128 = zext i32 %127 to i64
  %129 = shl nuw i64 %128, 32
  %130 = zext i32 %126 to i64
  %131 = or i64 %129, %130
  ret i64 %131
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink11GetOverhangERKNS_18NGInlineItemResultE(%"struct.blink::NGInlineItemResult"* nocapture readonly dereferenceable(160)) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %"class.blink::NGPhysicalFragment::PostLayoutChildLinkList::ConstIterator", align 8
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %0, i64 0, i32 9, i32 0
  %7 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %6, align 8
  %8 = icmp eq %"class.blink::NGLayoutResult"* %7, null
  br i1 %8, label %285, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %7, i64 0, i32 3, i32 0
  %11 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %10, align 8
  %12 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12)
  store i32 2147483647, i32* %2, align 4
  %13 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13)
  store i32 2147483647, i32* %3, align 4
  %14 = tail call { i32, %"struct.blink::NGLink"* } @_ZNK5blink18NGPhysicalFragment18PostLayoutChildrenEv(%"class.blink::NGPhysicalFragment"* %11) #7
  %15 = extractvalue { i32, %"struct.blink::NGLink"* } %14, 0
  %16 = extractvalue { i32, %"struct.blink::NGLink"* } %14, 1
  %17 = zext i32 %15 to i64
  %18 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %16, i64 %17
  %19 = icmp eq i32 %15, 0
  br i1 %19, label %33, label %20

20:                                               ; preds = %9, %30
  %21 = phi %"struct.blink::NGLink"* [ %31, %30 ], [ %16, %9 ]
  %22 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %21, i64 0, i32 0
  %23 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %22, align 8, !noalias !4
  %24 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %23, i64 0, i32 1
  %25 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %24, align 8, !noalias !4
  %26 = icmp eq %"class.blink::LayoutObject"* %25, null
  br i1 %26, label %30, label %27, !prof !2

27:                                               ; preds = %20
  %28 = tail call %"class.blink::NGPhysicalFragment"* @_ZNK5blink18NGPhysicalFragment10PostLayoutEv(%"class.blink::NGPhysicalFragment"* %23) #7, !noalias !4
  %29 = icmp eq %"class.blink::NGPhysicalFragment"* %28, null
  br i1 %29, label %30, label %33

30:                                               ; preds = %27, %20
  %31 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %21, i64 1
  %32 = icmp eq %"struct.blink::NGLink"* %31, %18
  br i1 %32, label %282, label %20

33:                                               ; preds = %27, %9
  %34 = phi %"struct.blink::NGLink"* [ %16, %9 ], [ %21, %27 ]
  %35 = phi %"class.blink::NGPhysicalFragment"* [ inttoptr (i64 -6148914691236517206 to %"class.blink::NGPhysicalFragment"*), %9 ], [ %28, %27 ]
  %36 = icmp eq %"struct.blink::NGLink"* %34, %18
  br i1 %36, label %282, label %37

37:                                               ; preds = %33
  %38 = bitcast %"class.blink::NGPhysicalFragment::PostLayoutChildLinkList::ConstIterator"* %4 to i8*
  %39 = getelementptr inbounds %"class.blink::NGPhysicalFragment::PostLayoutChildLinkList::ConstIterator", %"class.blink::NGPhysicalFragment::PostLayoutChildLinkList::ConstIterator"* %4, i64 0, i32 0
  %40 = getelementptr inbounds %"class.blink::NGPhysicalFragment::PostLayoutChildLinkList::ConstIterator", %"class.blink::NGPhysicalFragment::PostLayoutChildLinkList::ConstIterator"* %4, i64 0, i32 1
  %41 = getelementptr inbounds %"class.blink::NGPhysicalFragment::PostLayoutChildLinkList::ConstIterator", %"class.blink::NGPhysicalFragment::PostLayoutChildLinkList::ConstIterator"* %4, i64 0, i32 2, i32 0
  %42 = getelementptr inbounds %"class.blink::NGPhysicalFragment::PostLayoutChildLinkList::ConstIterator", %"class.blink::NGPhysicalFragment::PostLayoutChildLinkList::ConstIterator"* %4, i64 0, i32 2, i32 1, i32 0, i32 0
  %43 = getelementptr inbounds %"class.blink::NGPhysicalFragment::PostLayoutChildLinkList::ConstIterator", %"class.blink::NGPhysicalFragment::PostLayoutChildLinkList::ConstIterator"* %4, i64 0, i32 2, i32 1, i32 1, i32 0
  %44 = getelementptr inbounds %"class.blink::NGPhysicalFragment::PostLayoutChildLinkList::ConstIterator", %"class.blink::NGPhysicalFragment::PostLayoutChildLinkList::ConstIterator"* %4, i64 0, i32 2, i32 1
  %45 = bitcast %"struct.blink::PhysicalOffset"* %44 to i64*
  %46 = getelementptr inbounds %"class.blink::NGPhysicalFragment::PostLayoutChildLinkList::ConstIterator", %"class.blink::NGPhysicalFragment::PostLayoutChildLinkList::ConstIterator"* %4, i64 0, i32 2
  %47 = bitcast %"struct.blink::NGLink"* %46 to i64*
  br label %53

48:                                               ; preds = %218, %238, %235
  store i32 %220, i32* %2, align 4
  store i32 %219, i32* %3, align 4
  %49 = and i8 %222, 1
  %50 = icmp ne i8 %49, 0
  %51 = icmp ne %"class.blink::ComputedStyle"* %221, null
  %52 = and i1 %51, %50
  br i1 %52, label %240, label %282

53:                                               ; preds = %37, %238
  %54 = phi i32 [ 2147483647, %37 ], [ %219, %238 ]
  %55 = phi i32 [ 2147483647, %37 ], [ %220, %238 ]
  %56 = phi i8 [ 0, %37 ], [ %222, %238 ]
  %57 = phi %"class.blink::ComputedStyle"* [ null, %37 ], [ %221, %238 ]
  %58 = phi %"class.blink::NGPhysicalFragment"* [ %35, %37 ], [ %233, %238 ]
  %59 = phi %"struct.blink::NGLink"* [ %34, %37 ], [ %226, %238 ]
  %60 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %58, i64 0, i32 3
  %61 = bitcast i24* %60 to i32*
  %62 = load i32, i32* %61, align 8
  %63 = and i32 %62, 64
  %64 = icmp eq i32 %63, 0
  %65 = and i32 %62, 960
  %66 = icmp ne i32 %65, 256
  %67 = and i1 %64, %66
  br i1 %67, label %68, label %218

68:                                               ; preds = %53
  %69 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %58, i64 0, i32 1
  %70 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %69, align 8
  %71 = icmp eq %"class.blink::LayoutObject"* %70, null
  br i1 %71, label %218, label %72

72:                                               ; preds = %68
  %73 = bitcast %"class.blink::LayoutObject"* %70 to i1 (%"class.blink::LayoutObject"*, i32)***
  %74 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %73, align 8
  %75 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %74, i64 92
  %76 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %75, align 8
  %77 = call zeroext i1 %76(%"class.blink::LayoutObject"* nonnull %70, i32 43) #7
  br i1 %77, label %78, label %81

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %70, i64 0, i32 5, i32 0
  %80 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %79, align 8
  br label %218

81:                                               ; preds = %72
  %82 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %73, align 8
  %83 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %82, i64 92
  %84 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %83, align 8
  %85 = call zeroext i1 %84(%"class.blink::LayoutObject"* nonnull %70, i32 41) #7
  br i1 %85, label %86, label %218

86:                                               ; preds = %81
  %87 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %69, align 8
  %88 = load i32, i32* %61, align 8
  %89 = lshr i32 %88, 10
  %90 = and i32 %89, 3
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %87, i64 0, i32 5, i32 0
  %94 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %93, align 8
  br label %97

95:                                               ; preds = %86
  %96 = call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"* %87, i32 %90) #7
  br label %97

97:                                               ; preds = %92, %95
  %98 = phi %"class.blink::ComputedStyle"* [ %94, %92 ], [ %96, %95 ]
  %99 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %98, i64 0, i32 0, i32 9
  %100 = bitcast [20 x i8]* %99 to i160*
  %101 = load i160, i160* %100, align 8
  %102 = lshr i160 %101, 102
  %103 = trunc i160 %102 to i16
  %104 = and i16 %103, 3
  %105 = lshr i160 %101, 107
  %106 = trunc i160 %105 to i16
  %107 = and i16 %106, 256
  %108 = or i16 %107, %104
  %109 = icmp eq i16 %104, 0
  %110 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %58, i64 0, i32 2, i32 0, i32 0
  %111 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %58, i64 0, i32 2, i32 1, i32 0
  %112 = select i1 %109, i32* %110, i32* %111
  %113 = load i32, i32* %112, align 4
  %114 = call { i32, %"struct.blink::NGLink"* } @_ZNK5blink18NGPhysicalFragment18PostLayoutChildrenEv(%"class.blink::NGPhysicalFragment"* %58) #7
  %115 = extractvalue { i32, %"struct.blink::NGLink"* } %114, 0
  %116 = extractvalue { i32, %"struct.blink::NGLink"* } %114, 1
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %38) #7
  store i64 -6148914691236517206, i64* %47, align 8
  store %"struct.blink::NGLink"* %116, %"struct.blink::NGLink"** %39, align 8, !alias.scope !7
  %117 = zext i32 %115 to i64
  %118 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %116, i64 %117
  store %"struct.blink::NGLink"* %118, %"struct.blink::NGLink"** %40, align 8, !alias.scope !7
  store i32 0, i32* %42, align 8, !alias.scope !7
  store i32 0, i32* %43, align 4, !alias.scope !7
  %119 = icmp eq i32 %115, 0
  br i1 %119, label %138, label %120

120:                                              ; preds = %97, %135
  %121 = phi %"struct.blink::NGLink"* [ %136, %135 ], [ %116, %97 ]
  %122 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %121, i64 0, i32 0
  %123 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %122, align 8, !noalias !7
  %124 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %123, i64 0, i32 1
  %125 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %124, align 8, !noalias !7
  %126 = icmp eq %"class.blink::LayoutObject"* %125, null
  br i1 %126, label %135, label %127, !prof !2

127:                                              ; preds = %120
  %128 = call %"class.blink::NGPhysicalFragment"* @_ZNK5blink18NGPhysicalFragment10PostLayoutEv(%"class.blink::NGPhysicalFragment"* %123) #7, !noalias !7
  %129 = icmp eq %"class.blink::NGPhysicalFragment"* %128, null
  br i1 %129, label %135, label %130

130:                                              ; preds = %127
  store %"class.blink::NGPhysicalFragment"* %128, %"class.blink::NGPhysicalFragment"** %41, align 8, !alias.scope !7
  %131 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %121, i64 0, i32 1
  %132 = bitcast %"struct.blink::PhysicalOffset"* %131 to i64*
  %133 = load i64, i64* %132, align 4, !noalias !7
  store i64 %133, i64* %45, align 8, !alias.scope !7
  %134 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %39, align 8
  br label %138

135:                                              ; preds = %127, %120
  %136 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %121, i64 1
  store %"struct.blink::NGLink"* %136, %"struct.blink::NGLink"** %39, align 8, !alias.scope !7
  %137 = icmp eq %"struct.blink::NGLink"* %136, %118
  br i1 %137, label %144, label %120

138:                                              ; preds = %97, %130
  %139 = phi %"struct.blink::NGLink"* [ %116, %97 ], [ %134, %130 ]
  %140 = icmp eq %"struct.blink::NGLink"* %139, %118
  br i1 %140, label %144, label %141

141:                                              ; preds = %138
  %142 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %58, i64 0, i32 2
  %143 = bitcast %"struct.blink::PhysicalSize"* %142 to i64*
  br label %148

144:                                              ; preds = %135, %215, %138
  %145 = phi i32 [ %54, %138 ], [ %185, %215 ], [ %54, %135 ]
  %146 = phi i32 [ %55, %138 ], [ %186, %215 ], [ %55, %135 ]
  %147 = phi i8 [ %56, %138 ], [ %187, %215 ], [ %56, %135 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %38) #7
  br label %218

148:                                              ; preds = %141, %215
  %149 = phi %"struct.blink::NGLink"* [ %139, %141 ], [ %216, %215 ]
  %150 = phi i32 [ %54, %141 ], [ %185, %215 ]
  %151 = phi i32 [ %55, %141 ], [ %186, %215 ]
  %152 = phi i8 [ %56, %141 ], [ %187, %215 ]
  %153 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %41, align 8
  %154 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %153, i64 0, i32 2, i32 0, i32 0
  %155 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %153, i64 0, i32 2, i32 1, i32 0
  %156 = select i1 %109, i32* %154, i32* %155
  %157 = load i32, i32* %156, align 4
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %183, label %159

159:                                              ; preds = %148
  %160 = load i64, i64* %143, align 8
  %161 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %153, i64 0, i32 2
  %162 = bitcast %"struct.blink::PhysicalSize"* %161 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = call i64 @_ZNK5blink14PhysicalOffset16ConvertToLogicalENS_20WritingDirectionModeENS_12PhysicalSizeES2_(%"struct.blink::PhysicalOffset"* %44, i16 %108, i64 %160, i64 %163) #7
  %165 = trunc i64 %164 to i32
  %166 = icmp sgt i32 %165, -1
  %167 = select i1 %166, i32 -2147483648, i32 2147483647
  %168 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %113, i32 %165) #7
  %169 = extractvalue { i32, i1 } %168, 1
  %170 = extractvalue { i32, i1 } %168, 0
  %171 = select i1 %169, i32 %167, i32 %170, !prof !2
  %172 = icmp sgt i32 %157, -1
  %173 = select i1 %172, i32 -2147483648, i32 2147483647
  %174 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %171, i32 %157) #7
  %175 = extractvalue { i32, i1 } %174, 1
  %176 = extractvalue { i32, i1 } %174, 0
  %177 = select i1 %175, i32 %173, i32 %176, !prof !2
  %178 = icmp sgt i32 %151, %165
  %179 = select i1 %178, i32 %165, i32 %151
  %180 = icmp slt i32 %177, %150
  %181 = select i1 %180, i32 %177, i32 %150
  %182 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %39, align 8
  br label %183

183:                                              ; preds = %148, %159
  %184 = phi %"struct.blink::NGLink"* [ %182, %159 ], [ %149, %148 ]
  %185 = phi i32 [ %181, %159 ], [ %150, %148 ]
  %186 = phi i32 [ %179, %159 ], [ %151, %148 ]
  %187 = phi i8 [ 1, %159 ], [ %152, %148 ]
  %188 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %184, i64 1
  store %"struct.blink::NGLink"* %188, %"struct.blink::NGLink"** %39, align 8
  %189 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %40, align 8
  %190 = icmp eq %"struct.blink::NGLink"* %188, %189
  br i1 %190, label %215, label %191

191:                                              ; preds = %183, %210
  %192 = phi %"struct.blink::NGLink"* [ %211, %210 ], [ %189, %183 ]
  %193 = phi %"struct.blink::NGLink"* [ %213, %210 ], [ %188, %183 ]
  %194 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %193, i64 0, i32 0
  %195 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %194, align 8
  %196 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %195, i64 0, i32 1
  %197 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %196, align 8
  %198 = icmp eq %"class.blink::LayoutObject"* %197, null
  br i1 %198, label %210, label %199, !prof !2

199:                                              ; preds = %191
  %200 = call %"class.blink::NGPhysicalFragment"* @_ZNK5blink18NGPhysicalFragment10PostLayoutEv(%"class.blink::NGPhysicalFragment"* %195) #7
  %201 = icmp eq %"class.blink::NGPhysicalFragment"* %200, null
  br i1 %201, label %202, label %205

202:                                              ; preds = %199
  %203 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %39, align 8
  %204 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %40, align 8
  br label %210

205:                                              ; preds = %199
  store %"class.blink::NGPhysicalFragment"* %200, %"class.blink::NGPhysicalFragment"** %41, align 8
  %206 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %39, align 8
  %207 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %206, i64 0, i32 1
  %208 = bitcast %"struct.blink::PhysicalOffset"* %207 to i64*
  %209 = load i64, i64* %208, align 4
  store i64 %209, i64* %45, align 8
  br label %215

210:                                              ; preds = %202, %191
  %211 = phi %"struct.blink::NGLink"* [ %204, %202 ], [ %192, %191 ]
  %212 = phi %"struct.blink::NGLink"* [ %203, %202 ], [ %193, %191 ]
  %213 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %212, i64 1
  store %"struct.blink::NGLink"* %213, %"struct.blink::NGLink"** %39, align 8
  %214 = icmp eq %"struct.blink::NGLink"* %213, %211
  br i1 %214, label %215, label %191

215:                                              ; preds = %210, %183, %205
  %216 = phi %"struct.blink::NGLink"* [ %188, %183 ], [ %206, %205 ], [ %211, %210 ]
  %217 = icmp eq %"struct.blink::NGLink"* %216, %118
  br i1 %217, label %144, label %148

218:                                              ; preds = %53, %81, %144, %68, %78
  %219 = phi i32 [ %54, %78 ], [ %54, %68 ], [ %145, %144 ], [ %54, %81 ], [ %54, %53 ]
  %220 = phi i32 [ %55, %78 ], [ %55, %68 ], [ %146, %144 ], [ %55, %81 ], [ %55, %53 ]
  %221 = phi %"class.blink::ComputedStyle"* [ %80, %78 ], [ %57, %68 ], [ %57, %144 ], [ %57, %81 ], [ %57, %53 ]
  %222 = phi i8 [ %56, %78 ], [ %56, %68 ], [ %147, %144 ], [ %56, %81 ], [ %56, %53 ]
  %223 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %59, i64 1
  %224 = icmp eq %"struct.blink::NGLink"* %223, %18
  br i1 %224, label %48, label %225

225:                                              ; preds = %218, %235
  %226 = phi %"struct.blink::NGLink"* [ %236, %235 ], [ %223, %218 ]
  %227 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %226, i64 0, i32 0
  %228 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %227, align 8
  %229 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %228, i64 0, i32 1
  %230 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %229, align 8
  %231 = icmp eq %"class.blink::LayoutObject"* %230, null
  br i1 %231, label %235, label %232, !prof !2

232:                                              ; preds = %225
  %233 = call %"class.blink::NGPhysicalFragment"* @_ZNK5blink18NGPhysicalFragment10PostLayoutEv(%"class.blink::NGPhysicalFragment"* %228) #7
  %234 = icmp eq %"class.blink::NGPhysicalFragment"* %233, null
  br i1 %234, label %235, label %238

235:                                              ; preds = %232, %225
  %236 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %226, i64 1
  %237 = icmp eq %"struct.blink::NGLink"* %236, %18
  br i1 %237, label %48, label %225

238:                                              ; preds = %232
  %239 = icmp eq %"struct.blink::NGLink"* %226, %18
  br i1 %239, label %48, label %53

240:                                              ; preds = %48
  %241 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %241)
  store i32 -1431655766, i32* %5, align 4
  %242 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %221, i64 0, i32 0, i32 0, i32 0, i32 0
  %243 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %242, align 8
  %244 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %243, i64 0, i32 1, i32 0, i32 0
  %245 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %244, align 8
  %246 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %245, i64 0, i32 1, i32 0, i32 5
  %247 = load float, float* %246, align 4
  %248 = fadd float %247, 5.000000e-01
  %249 = fptosi float %248 to i32
  %250 = icmp sgt i32 %249, 33554431
  br i1 %250, label %257, label %251

251:                                              ; preds = %240
  %252 = icmp slt i32 %249, -33554432
  %253 = shl i32 %249, 6
  %254 = sdiv i32 %253, 2
  %255 = select i1 %252, i32 -1073741824, i32 %254
  %256 = sext i32 %255 to i64
  br label %257

257:                                              ; preds = %251, %240
  %258 = phi i64 [ 1073741823, %240 ], [ %256, %251 ]
  %259 = call i1 @llvm.is.constant.i64(i64 %258) #7
  br i1 %259, label %267, label %260

260:                                              ; preds = %257
  %261 = icmp slt i64 %258, 0
  %262 = select i1 %261, i32 -2147483648, i32 2147483647
  %263 = add nsw i64 %258, 2147483648
  %264 = icmp ult i64 %263, 4294967296
  %265 = trunc i64 %258 to i32
  %266 = select i1 %264, i32 %265, i32 %262, !prof !10
  br label %269

267:                                              ; preds = %257
  %268 = trunc i64 %258 to i32
  br label %269

269:                                              ; preds = %260, %267
  %270 = phi i32 [ %266, %260 ], [ %268, %267 ]
  store i32 %270, i32* %5, align 4
  %271 = icmp slt i32 %270, %220
  %272 = bitcast i32* %5 to %"class.blink::LayoutUnit"*
  %273 = bitcast i32* %2 to %"class.blink::LayoutUnit"*
  %274 = select i1 %271, %"class.blink::LayoutUnit"* %272, %"class.blink::LayoutUnit"* %273
  %275 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %274, i64 0, i32 0
  %276 = load i32, i32* %275, align 4
  %277 = icmp slt i32 %270, %219
  %278 = bitcast i32* %3 to %"class.blink::LayoutUnit"*
  %279 = select i1 %277, %"class.blink::LayoutUnit"* %272, %"class.blink::LayoutUnit"* %278
  %280 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %279, i64 0, i32 0
  %281 = load i32, i32* %280, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %241)
  br label %282

282:                                              ; preds = %30, %33, %48, %269
  %283 = phi i32 [ %276, %269 ], [ 0, %48 ], [ 0, %33 ], [ 0, %30 ]
  %284 = phi i32 [ %281, %269 ], [ 0, %48 ], [ 0, %33 ], [ 0, %30 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12)
  br label %285

285:                                              ; preds = %1, %282
  %286 = phi i32 [ %283, %282 ], [ 0, %1 ]
  %287 = phi i32 [ %284, %282 ], [ 0, %1 ]
  %288 = zext i32 %287 to i64
  %289 = shl nuw i64 %288, 32
  %290 = zext i32 %286 to i64
  %291 = or i64 %289, %290
  ret i64 %291
}

declare { i32, %"struct.blink::NGLink"* } @_ZNK5blink18NGPhysicalFragment18PostLayoutChildrenEv(%"class.blink::NGPhysicalFragment"*) local_unnamed_addr #2

declare i64 @_ZNK5blink14PhysicalOffset16ConvertToLogicalENS_20WritingDirectionModeENS_12PhysicalSizeES2_(%"struct.blink::PhysicalOffset"*, i16, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink21CanApplyStartOverhangERKNS_10NGLineInfoERNS_10LayoutUnitE(%"class.blink::NGLineInfo"* dereferenceable(5208), %"class.blink::LayoutUnit"* nocapture dereferenceable(4)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %76, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp ult i32 %9, 2
  br i1 %10, label %76, label %11

11:                                               ; preds = %6
  %12 = add i32 %9, -2
  br label %13

13:                                               ; preds = %32, %11
  %14 = phi i32 [ %12, %11 ], [ %33, %32 ]
  %15 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1943"* %7, i32 %14) #7
  %16 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %15, i64 0, i32 0
  %17 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %17, i64 0, i32 4
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 3
  br i1 %20, label %30, label %21

21:                                               ; preds = %13
  %22 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1943"* %7, i32 %14) #7
  %23 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %22, i64 0, i32 0
  %24 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %24, i64 0, i32 4
  %26 = load i32, i32* %25, align 8
  %27 = icmp ne i32 %26, 4
  %28 = icmp eq i32 %14, 0
  %29 = or i1 %28, %27
  br i1 %29, label %34, label %32

30:                                               ; preds = %13
  %31 = icmp eq i32 %14, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %21, %30
  %33 = add i32 %14, -1
  br label %13

34:                                               ; preds = %21, %30
  %35 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1943"* %7, i32 %14) #7
  %36 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %35, i64 0, i32 0
  %37 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %37, i64 0, i32 4
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %76

41:                                               ; preds = %34
  %42 = load i32, i32* %8, align 4
  %43 = add i32 %42, -1
  %44 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1943"* %7, i32 %43) #7
  %45 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %44, i64 0, i32 0
  %46 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %45, align 8
  %47 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %36, align 8
  %48 = tail call %"class.blink::ComputedStyle"* @_ZNK5blink12NGInlineItem5StyleEv(%"class.blink::NGInlineItem"* %47)
  %49 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %50, i64 0, i32 1, i32 0, i32 0
  %52 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %52, i64 0, i32 1, i32 0, i32 5
  %54 = load float, float* %53, align 4
  %55 = fadd float %54, 5.000000e-01
  %56 = fptosi float %55 to i32
  %57 = tail call %"class.blink::ComputedStyle"* @_ZNK5blink12NGInlineItem5StyleEv(%"class.blink::NGInlineItem"* %46)
  %58 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %59, i64 0, i32 1, i32 0, i32 0
  %61 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %61, i64 0, i32 1, i32 0, i32 5
  %63 = load float, float* %62, align 4
  %64 = fadd float %63, 5.000000e-01
  %65 = fptosi float %64 to i32
  %66 = icmp sgt i32 %56, %65
  br i1 %66, label %76, label %67

67:                                               ; preds = %41
  %68 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %35, i64 0, i32 4
  %69 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %68, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = load i32, i32* %3, align 4
  %72 = icmp slt i32 %70, %71
  %73 = select i1 %72, %"class.blink::LayoutUnit"* %68, %"class.blink::LayoutUnit"* %1
  %74 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %73, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  store i32 %75, i32* %3, align 4
  br label %76

76:                                               ; preds = %6, %67, %41, %34, %2
  %77 = phi i1 [ false, %2 ], [ false, %6 ], [ false, %34 ], [ true, %67 ], [ false, %41 ]
  ret i1 %77
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ComputedStyle"* @_ZNK5blink12NGInlineItem5StyleEv(%"class.blink::NGInlineItem"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 24
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %0, i64 0, i32 3
  %8 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  br i1 %6, label %44, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 6, i32 0, i32 0
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %13, label %20

13:                                               ; preds = %9, %13
  %14 = phi %"class.blink::LayoutObject"* [ %16, %13 ], [ %8, %9 ]
  %15 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %14, i64 0, i32 7
  %16 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %16, i64 0, i32 6, i32 0, i32 0
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %19 = icmp eq %"class.blink::Node"* %18, null
  br i1 %19, label %13, label %20

20:                                               ; preds = %13, %9
  %21 = phi %"class.blink::Node"* [ %11, %9 ], [ %18, %13 ]
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %21, i64 0, i32 3, i32 0, i32 0
  %23 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %23, i64 0, i32 2, i32 0, i32 0
  %25 = load %"class.blink::Document"*, %"class.blink::Document"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %25, i64 0, i32 59, i32 0, i32 0
  %27 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %27, i64 0, i32 31, i32 0, i32 0
  %29 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %29, i64 0, i32 0, i32 11
  %31 = load i8, i8* %30, align 8
  %32 = and i8 %31, 1
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %20
  %35 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.4, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0)) #7
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  br label %37

37:                                               ; preds = %34, %20
  %38 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %29, i64 0, i32 0, i32 0, i32 0
  %39 = load i8, i8* %38, align 8, !range !11
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %37
  %42 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %8) #7
  %43 = icmp eq %"class.blink::ComputedStyle"* %42, null
  br i1 %43, label %44, label %47

44:                                               ; preds = %37, %41, %1
  %45 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 5, i32 0
  %46 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %45, align 8
  br label %47

47:                                               ; preds = %44, %41
  %48 = phi %"class.blink::ComputedStyle"* [ %42, %41 ], [ %46, %44 ]
  ret %"class.blink::ComputedStyle"* %48
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink24CommitPendingEndOverhangEPNS_10NGLineInfoE(%"class.blink::NGLineInfo"*) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.blink::NGLineInfo", %"class.blink::NGLineInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp ult i32 %5, 2
  br i1 %6, label %119, label %7

7:                                                ; preds = %1
  %8 = add i32 %5, -1
  %9 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1943"* %3, i32 %8) #7
  %10 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %9, i64 0, i32 0
  %11 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %11, i64 0, i32 4
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %119, label %15

15:                                               ; preds = %7
  %16 = load i32, i32* %4, align 4
  %17 = add i32 %16, -2
  br label %18

18:                                               ; preds = %34, %15
  %19 = phi i32 [ %17, %15 ], [ %35, %34 ]
  %20 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1943"* %3, i32 %19) #7
  %21 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %20, i64 0, i32 0
  %22 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %22, i64 0, i32 4
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 2
  %26 = tail call dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1943"* %3, i32 %19) #7
  br i1 %25, label %37, label %27

27:                                               ; preds = %18
  %28 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %26, i64 0, i32 0
  %29 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %29, i64 0, i32 4
  %31 = load i32, i32* %30, align 8
  %32 = add i32 %31, -3
  %33 = icmp ugt i32 %32, 1
  br i1 %33, label %119, label %34

34:                                               ; preds = %27
  %35 = add i32 %19, -1
  %36 = icmp eq i32 %19, 0
  br i1 %36, label %119, label %18

37:                                               ; preds = %18
  %38 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %26, i64 0, i32 9, i32 0
  %39 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %39, i64 0, i32 3, i32 0
  %41 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %41, i64 0, i32 1
  %43 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %42, align 8
  %44 = bitcast %"class.blink::LayoutObject"* %43 to i1 (%"class.blink::LayoutObject"*, i32)***
  %45 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %44, align 8
  %46 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %45, i64 92
  %47 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %46, align 8
  %48 = tail call zeroext i1 %47(%"class.blink::LayoutObject"* %43, i32 42) #7
  br i1 %48, label %49, label %119

49:                                               ; preds = %37
  %50 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %26, i64 0, i32 5
  %51 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %50, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp slt i32 %52, 1
  br i1 %53, label %119, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %26, i64 0, i32 0
  %56 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %55, align 8
  %57 = tail call %"class.blink::ComputedStyle"* @_ZNK5blink12NGInlineItem5StyleEv(%"class.blink::NGInlineItem"* %56)
  %58 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %59, i64 0, i32 1, i32 0, i32 0
  %61 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %61, i64 0, i32 1, i32 0, i32 5
  %63 = load float, float* %62, align 4
  %64 = fadd float %63, 5.000000e-01
  %65 = fptosi float %64 to i32
  %66 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %10, align 8
  %67 = tail call %"class.blink::ComputedStyle"* @_ZNK5blink12NGInlineItem5StyleEv(%"class.blink::NGInlineItem"* %66)
  %68 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %67, i64 0, i32 0, i32 0, i32 0, i32 0
  %69 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %69, i64 0, i32 1, i32 0, i32 0
  %71 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %71, i64 0, i32 1, i32 0, i32 5
  %73 = load float, float* %72, align 4
  %74 = fadd float %73, 5.000000e-01
  %75 = fptosi float %74 to i32
  %76 = icmp slt i32 %65, %75
  br i1 %76, label %119, label %77

77:                                               ; preds = %54
  %78 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %78)
  %79 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %10, align 8
  %80 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %79, i64 0, i32 2, i32 0
  %81 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %81, i64 0, i32 1
  %83 = load float, float* %82, align 4
  %84 = fmul float %83, 6.400000e+01
  %85 = fcmp ult float %84, 0xC1E0000000000000
  %86 = fcmp ugt float %84, 0x41DFFFFFE0000000
  %87 = fcmp ogt float %84, 0xC1E0000000000000
  %88 = select i1 %87, float %84, float 0xC1E0000000000000
  %89 = fptosi float %88 to i32
  %90 = select i1 %85, i32 0, i32 2147483647
  %91 = select i1 %86, i32 %90, i32 %89
  store i32 %91, i32* %2, align 4
  %92 = load i32, i32* %51, align 4
  %93 = icmp slt i32 %91, %92
  %94 = bitcast i32* %2 to %"class.blink::LayoutUnit"*
  %95 = select i1 %93, %"class.blink::LayoutUnit"* %94, %"class.blink::LayoutUnit"* %50
  %96 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %95, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %78)
  %98 = tail call i1 @llvm.is.constant.i32(i32 %97) #7
  br i1 %98, label %99, label %103

99:                                               ; preds = %77
  %100 = sub i32 0, %97
  %101 = icmp eq i32 %100, -2147483648
  %102 = select i1 %101, i32 2147483647, i32 %100
  br label %108

103:                                              ; preds = %77
  %104 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %97) #7
  %105 = extractvalue { i32, i1 } %104, 1
  %106 = extractvalue { i32, i1 } %104, 0
  %107 = select i1 %105, i32 2147483647, i32 %106
  br label %108

108:                                              ; preds = %99, %103
  %109 = phi i32 [ %102, %99 ], [ %107, %103 ]
  %110 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %26, i64 0, i32 11, i32 1, i32 0
  store i32 %109, i32* %110, align 4
  %111 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %26, i64 0, i32 4, i32 0
  %112 = load i32, i32* %111, align 4
  %113 = icmp sgt i32 %97, -1
  %114 = select i1 %113, i32 -2147483648, i32 2147483647
  %115 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %112, i32 %97) #7
  %116 = extractvalue { i32, i1 } %115, 1
  %117 = extractvalue { i32, i1 } %115, 0
  %118 = select i1 %116, i32 %114, i32 %117, !prof !2
  store i32 %118, i32* %111, align 4
  store i32 0, i32* %51, align 8
  br label %119

119:                                              ; preds = %34, %27, %54, %49, %37, %7, %1, %108
  %120 = phi i32 [ %97, %108 ], [ 0, %1 ], [ 0, %7 ], [ 0, %37 ], [ 0, %49 ], [ 0, %54 ], [ 0, %27 ], [ 0, %34 ]
  ret i32 %120
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5blink25ComputeAnnotationOverflowERKNS_18NGLogicalLineItemsERKNS_10FontHeightENS_10LayoutUnitERKNS_13ComputedStyleE(%"class.blink::NGLogicalLineItems"* nocapture readonly dereferenceable(1936), %"struct.blink::FontHeight"* nocapture readonly dereferenceable(8), i32, %"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104)) local_unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"class.blink::LayoutUnit", align 4
  %8 = alloca %"class.blink::LayoutUnit", align 4
  %9 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9)
  %10 = getelementptr inbounds %"struct.blink::FontHeight", %"struct.blink::FontHeight"* %1, i64 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, 0
  %13 = select i1 %12, i32 -2147483648, i32 2147483647
  %14 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %2, i32 %11) #7
  %15 = extractvalue { i32, i1 } %14, 1
  %16 = extractvalue { i32, i1 } %14, 0
  %17 = select i1 %15, i32 %13, i32 %16, !prof !2
  store i32 %17, i32* %5, align 4
  %18 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18)
  store i32 %17, i32* %6, align 4
  %19 = getelementptr inbounds %"struct.blink::FontHeight", %"struct.blink::FontHeight"* %1, i64 0, i32 1, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp slt i32 %20, 0
  %22 = select i1 %21, i32 -2147483648, i32 2147483647
  %23 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %11, i32 %20) #7
  %24 = extractvalue { i32, i1 } %23, 1
  %25 = extractvalue { i32, i1 } %23, 0
  %26 = select i1 %24, i32 %22, i32 %25, !prof !2
  %27 = icmp slt i32 %26, 0
  %28 = select i1 %27, i32 -2147483648, i32 2147483647
  %29 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %2, i32 %26) #7
  %30 = extractvalue { i32, i1 } %29, 1
  %31 = extractvalue { i32, i1 } %29, 0
  %32 = select i1 %30, i32 %28, i32 %31, !prof !2
  %33 = getelementptr inbounds %"class.blink::NGLogicalLineItems", %"class.blink::NGLogicalLineItems"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.blink::NGLogicalLineItem"*, %"struct.blink::NGLogicalLineItem"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::NGLogicalLineItems", %"class.blink::NGLogicalLineItems"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %34, i64 %37
  %39 = icmp eq i32 %36, 0
  br i1 %39, label %49, label %40

40:                                               ; preds = %4
  %41 = bitcast %"class.blink::LayoutUnit"* %7 to i8*
  %42 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %7, i64 0, i32 0
  %43 = bitcast %"class.blink::LayoutUnit"* %8 to i8*
  %44 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %8, i64 0, i32 0
  %45 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %46 = bitcast [20 x i8]* %45 to i160*
  %47 = bitcast i32* %5 to %"class.blink::LayoutUnit"*
  %48 = bitcast i32* %6 to %"class.blink::LayoutUnit"*
  br label %77

49:                                               ; preds = %282, %4
  %50 = phi i32 [ %17, %4 ], [ %284, %282 ]
  %51 = phi i32 [ %17, %4 ], [ %283, %282 ]
  %52 = phi i8 [ 0, %4 ], [ %285, %282 ]
  %53 = phi i8 [ 0, %4 ], [ %286, %282 ]
  %54 = phi i8 [ 0, %4 ], [ %287, %282 ]
  %55 = phi i8 [ 0, %4 ], [ %288, %282 ]
  %56 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %57, i64 0, i32 1, i32 0, i32 0
  %59 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %59, i64 0, i32 1, i32 0, i32 5
  %61 = load float, float* %60, align 4
  %62 = fmul float %61, 6.400000e+01
  %63 = fcmp ult float %62, 0xC1E0000000000000
  %64 = fcmp ugt float %62, 0x41DFFFFFE0000000
  %65 = fcmp ogt float %62, 0xC1E0000000000000
  %66 = select i1 %65, float %62, float 0xC1E0000000000000
  %67 = fptosi float %66 to i32
  %68 = select i1 %63, i32 0, i32 2147483647
  %69 = select i1 %64, i32 %68, i32 %67
  %70 = icmp sgt i32 %50, -1
  %71 = select i1 %70, i32 -2147483648, i32 2147483647
  %72 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %51, i32 %50) #7
  %73 = extractvalue { i32, i1 } %72, 1
  %74 = extractvalue { i32, i1 } %72, 0
  %75 = select i1 %73, i32 %71, i32 %74, !prof !2
  %76 = icmp slt i32 %75, %69
  br i1 %76, label %291, label %327

77:                                               ; preds = %40, %282
  %78 = phi i32 [ %17, %40 ], [ %283, %282 ]
  %79 = phi i32 [ %17, %40 ], [ %284, %282 ]
  %80 = phi i8 [ 0, %40 ], [ %288, %282 ]
  %81 = phi i8 [ 0, %40 ], [ %287, %282 ]
  %82 = phi i8 [ 0, %40 ], [ %286, %282 ]
  %83 = phi i8 [ 0, %40 ], [ %285, %282 ]
  %84 = phi %"struct.blink::NGLogicalLineItem"* [ %34, %40 ], [ %289, %282 ]
  %85 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %84, i64 0, i32 1
  %86 = load %"class.blink::NGInlineItem"*, %"class.blink::NGInlineItem"** %85, align 8
  %87 = icmp eq %"class.blink::NGInlineItem"* %86, null
  br i1 %87, label %88, label %100

88:                                               ; preds = %77
  %89 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %84, i64 0, i32 0, i32 0
  %90 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %89, align 8
  %91 = icmp eq %"class.blink::NGLayoutResult"* %90, null
  br i1 %91, label %282, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %90, i64 0, i32 3, i32 0
  %94 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %94, i64 0, i32 3
  %96 = bitcast i24* %95 to i32*
  %97 = load i32, i32* %96, align 8
  %98 = and i32 %97, 960
  %99 = icmp eq i32 %98, 512
  br i1 %99, label %282, label %104

100:                                              ; preds = %77
  %101 = getelementptr inbounds %"class.blink::NGInlineItem", %"class.blink::NGInlineItem"* %86, i64 0, i32 4
  %102 = load i32, i32* %101, align 8
  %103 = icmp eq i32 %102, 1
  br i1 %103, label %282, label %104

104:                                              ; preds = %92, %100
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %41) #7
  %105 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %84, i64 0, i32 10, i32 0, i32 1, i32 0
  %106 = load i32, i32* %105, align 4
  store i32 %106, i32* %42, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43) #7
  %107 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %84, i64 0, i32 10, i32 1, i32 1, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = icmp slt i32 %108, 0
  %110 = select i1 %109, i32 -2147483648, i32 2147483647
  %111 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %106, i32 %108) #7
  %112 = extractvalue { i32, i1 } %111, 1
  %113 = extractvalue { i32, i1 } %111, 0
  %114 = select i1 %112, i32 %110, i32 %113, !prof !2
  store i32 %114, i32* %44, align 4
  %115 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %84, i64 0, i32 2, i32 0
  %116 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %115, align 8
  %117 = icmp eq %"class.blink::ShapeResultView"* %116, null
  br i1 %117, label %127, label %118

118:                                              ; preds = %104
  %119 = tail call %"class.blink::ComputedStyle"* @_ZNK5blink17NGLogicalLineItem5StyleEv(%"struct.blink::NGLogicalLineItem"* %84) #7
  %120 = icmp eq %"class.blink::ComputedStyle"* %119, null
  br i1 %120, label %252, label %121

121:                                              ; preds = %118
  %122 = load %"class.blink::ShapeResultView"*, %"class.blink::ShapeResultView"** %115, align 8
  %123 = tail call fastcc i64 @_ZN5blink12_GLOBAL__N_137AdjustTextOverUnderOffsetsForEmHeightENS_10LayoutUnitES1_RKNS_13ComputedStyleERKNS_15ShapeResultViewE(i32 %106, i32 %114, %"class.blink::ComputedStyle"* nonnull dereferenceable(104) %119, %"class.blink::ShapeResultView"* dereferenceable(40) %122)
  %124 = trunc i64 %123 to i32
  %125 = lshr i64 %123, 32
  %126 = trunc i64 %125 to i32
  store i32 %124, i32* %42, align 4
  store i32 %126, i32* %44, align 4
  br label %252

127:                                              ; preds = %104
  %128 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %84, i64 0, i32 0, i32 0
  %129 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %128, align 8
  %130 = icmp eq %"class.blink::NGLayoutResult"* %129, null
  br i1 %130, label %252, label %131

131:                                              ; preds = %127
  %132 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %129, i64 0, i32 3, i32 0
  %133 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %132, align 8
  %134 = icmp eq %"class.blink::NGPhysicalFragment"* %133, null
  br i1 %134, label %243, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %133, i64 0, i32 1
  %137 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %136, align 8
  %138 = bitcast %"class.blink::LayoutObject"* %137 to i1 (%"class.blink::LayoutObject"*, i32)***
  %139 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %138, align 8
  %140 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %139, i64 92
  %141 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %140, align 8
  %142 = tail call zeroext i1 %141(%"class.blink::LayoutObject"* %137, i32 42) #7
  br i1 %142, label %143, label %240

143:                                              ; preds = %135
  %144 = bitcast %"class.blink::NGPhysicalFragment"* %133 to %"class.blink::NGPhysicalBoxFragment"*
  %145 = tail call { i64, i64 } @_ZNK5blink21NGPhysicalBoxFragment18ScrollableOverflowENS_18NGPhysicalFragment14TextHeightTypeE(%"class.blink::NGPhysicalBoxFragment"* nonnull %144, i32 1) #7
  %146 = extractvalue { i64, i64 } %145, 0
  %147 = trunc i64 %146 to i32
  %148 = lshr i64 %146, 32
  %149 = trunc i64 %148 to i32
  %150 = extractvalue { i64, i64 } %145, 1
  %151 = load i160, i160* %46, align 8
  %152 = lshr i160 %151, 102
  %153 = trunc i160 %152 to i8
  %154 = and i8 %153, 3
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %156, label %177

156:                                              ; preds = %143
  %157 = lshr i64 %150, 32
  %158 = trunc i64 %157 to i32
  %159 = icmp slt i32 %158, 0
  %160 = select i1 %159, i32 -2147483648, i32 2147483647
  %161 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %149, i32 %158) #7
  %162 = extractvalue { i32, i1 } %161, 1
  %163 = extractvalue { i32, i1 } %161, 0
  %164 = select i1 %162, i32 %160, i32 %163, !prof !2
  %165 = icmp slt i32 %164, 0
  %166 = select i1 %165, i32 -2147483648, i32 2147483647
  %167 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %106, i32 %164) #7
  %168 = extractvalue { i32, i1 } %167, 1
  %169 = extractvalue { i32, i1 } %167, 0
  %170 = select i1 %168, i32 %166, i32 %169, !prof !2
  store i32 %170, i32* %44, align 4
  %171 = icmp slt i32 %149, 0
  %172 = select i1 %171, i32 -2147483648, i32 2147483647
  %173 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %106, i32 %149) #7
  %174 = extractvalue { i32, i1 } %173, 1
  %175 = extractvalue { i32, i1 } %173, 0
  %176 = select i1 %174, i32 %172, i32 %175, !prof !2
  store i32 %176, i32* %42, align 4
  br label %207

177:                                              ; preds = %143
  %178 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %133, i64 0, i32 2
  %179 = bitcast %"struct.blink::PhysicalSize"* %178 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = trunc i64 %180 to i32
  %182 = icmp slt i32 %181, 0
  %183 = select i1 %182, i32 -2147483648, i32 2147483647
  %184 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %106, i32 %181) #7
  %185 = extractvalue { i32, i1 } %184, 1
  %186 = extractvalue { i32, i1 } %184, 0
  %187 = select i1 %185, i32 %183, i32 %186, !prof !2
  %188 = trunc i64 %150 to i32
  %189 = icmp slt i32 %188, 0
  %190 = select i1 %189, i32 -2147483648, i32 2147483647
  %191 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %147, i32 %188) #7
  %192 = extractvalue { i32, i1 } %191, 1
  %193 = extractvalue { i32, i1 } %191, 0
  %194 = select i1 %192, i32 %190, i32 %193, !prof !2
  %195 = icmp sgt i32 %194, -1
  %196 = select i1 %195, i32 -2147483648, i32 2147483647
  %197 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %187, i32 %194) #7
  %198 = extractvalue { i32, i1 } %197, 1
  %199 = extractvalue { i32, i1 } %197, 0
  %200 = select i1 %198, i32 %196, i32 %199, !prof !2
  store i32 %200, i32* %42, align 4
  %201 = icmp sgt i32 %147, -1
  %202 = select i1 %201, i32 -2147483648, i32 2147483647
  %203 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %187, i32 %147) #7
  %204 = extractvalue { i32, i1 } %203, 1
  %205 = extractvalue { i32, i1 } %203, 0
  %206 = select i1 %204, i32 %202, i32 %205, !prof !2
  store i32 %206, i32* %44, align 4
  br label %207

207:                                              ; preds = %177, %156
  %208 = phi i32 [ %206, %177 ], [ %170, %156 ]
  %209 = phi i32 [ %200, %177 ], [ %176, %156 ]
  %210 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %128, align 8
  %211 = icmp eq %"class.blink::NGLayoutResult"* %210, null
  br i1 %211, label %252, label %212

212:                                              ; preds = %207
  %213 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %210, i64 0, i32 6, i32 0
  %214 = load i32, i32* %213, align 4
  %215 = and i32 %214, 1
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %222, label %217

217:                                              ; preds = %212
  %218 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %210, i64 0, i32 4, i32 0
  %219 = load %"struct.blink::NGLayoutResult::RareData"*, %"struct.blink::NGLayoutResult::RareData"** %218, align 8
  %220 = getelementptr inbounds %"struct.blink::NGLayoutResult::RareData", %"struct.blink::NGLayoutResult::RareData"* %219, i64 0, i32 11, i32 0
  %221 = load i32, i32* %220, align 8
  br label %222

222:                                              ; preds = %212, %217
  %223 = phi i32 [ %221, %217 ], [ 0, %212 ]
  %224 = icmp eq i8 %154, 2
  br i1 %224, label %225, label %234

225:                                              ; preds = %222
  %226 = tail call i1 @llvm.is.constant.i32(i32 %223) #7
  br i1 %226, label %227, label %230

227:                                              ; preds = %225
  %228 = sub i32 0, %223
  %229 = icmp eq i32 %228, -2147483648
  br i1 %229, label %239, label %234

230:                                              ; preds = %225
  %231 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %223) #7
  %232 = extractvalue { i32, i1 } %231, 1
  %233 = extractvalue { i32, i1 } %231, 0
  br i1 %232, label %239, label %234

234:                                              ; preds = %230, %227, %222
  %235 = phi i32 [ %223, %222 ], [ %228, %227 ], [ %233, %230 ]
  %236 = icmp slt i32 %235, 0
  br i1 %236, label %252, label %237

237:                                              ; preds = %234
  %238 = icmp eq i32 %235, 0
  br i1 %238, label %252, label %239

239:                                              ; preds = %237, %227, %230
  br label %252

240:                                              ; preds = %135
  %241 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %128, align 8
  %242 = icmp eq %"class.blink::NGLayoutResult"* %241, null
  br i1 %242, label %252, label %243

243:                                              ; preds = %131, %240
  %244 = phi %"class.blink::NGLayoutResult"* [ %241, %240 ], [ %129, %131 ]
  %245 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %244, i64 0, i32 3, i32 0
  %246 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %245, align 8
  %247 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %246, i64 0, i32 3
  %248 = bitcast i24* %247 to i32*
  %249 = load i32, i32* %248, align 8
  %250 = and i32 %249, 960
  %251 = icmp eq i32 %250, 128
  br i1 %251, label %275, label %252

252:                                              ; preds = %237, %127, %240, %207, %239, %234, %243, %121, %118
  %253 = phi i32 [ %114, %118 ], [ %126, %121 ], [ %114, %243 ], [ %208, %234 ], [ %208, %237 ], [ %208, %239 ], [ %208, %207 ], [ %114, %240 ], [ %114, %127 ]
  %254 = phi i32 [ %106, %118 ], [ %124, %121 ], [ %106, %243 ], [ %209, %234 ], [ %209, %237 ], [ %209, %239 ], [ %209, %207 ], [ %106, %240 ], [ %106, %127 ]
  %255 = phi i8 [ %81, %118 ], [ %81, %121 ], [ %81, %243 ], [ %81, %234 ], [ %81, %237 ], [ 1, %239 ], [ %81, %207 ], [ %81, %240 ], [ %81, %127 ]
  %256 = phi i8 [ %80, %118 ], [ %80, %121 ], [ %80, %243 ], [ 1, %234 ], [ %80, %237 ], [ %80, %239 ], [ %80, %207 ], [ %80, %240 ], [ %80, %127 ]
  %257 = icmp slt i32 %254, %79
  %258 = select i1 %257, %"class.blink::LayoutUnit"* %7, %"class.blink::LayoutUnit"* %47
  %259 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %258, i64 0, i32 0
  %260 = load i32, i32* %259, align 4
  store i32 %260, i32* %5, align 4
  %261 = icmp slt i32 %78, %253
  %262 = select i1 %261, %"class.blink::LayoutUnit"* %8, %"class.blink::LayoutUnit"* %48
  %263 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %262, i64 0, i32 0
  %264 = load i32, i32* %263, align 4
  store i32 %264, i32* %6, align 4
  %265 = tail call %"class.blink::ComputedStyle"* @_ZNK5blink17NGLogicalLineItem5StyleEv(%"struct.blink::NGLogicalLineItem"* %84) #7
  %266 = icmp eq %"class.blink::ComputedStyle"* %265, null
  br i1 %266, label %275, label %267

267:                                              ; preds = %252
  %268 = tail call i32 @_ZNK5blink13ComputedStyle19GetTextEmphasisMarkEv(%"class.blink::ComputedStyle"* nonnull %265) #7
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %275, label %270

270:                                              ; preds = %267
  %271 = tail call i32 @_ZNK5blink13ComputedStyle30GetTextEmphasisLineLogicalSideEv(%"class.blink::ComputedStyle"* nonnull %265) #7
  %272 = icmp eq i32 %271, 0
  %273 = select i1 %272, i8 %83, i8 1
  %274 = select i1 %272, i8 1, i8 %82
  br label %275

275:                                              ; preds = %243, %252, %267, %270
  %276 = phi i32 [ %264, %252 ], [ %264, %267 ], [ %264, %270 ], [ %78, %243 ]
  %277 = phi i32 [ %260, %252 ], [ %260, %267 ], [ %260, %270 ], [ %79, %243 ]
  %278 = phi i8 [ %83, %252 ], [ %83, %267 ], [ %273, %270 ], [ %83, %243 ]
  %279 = phi i8 [ %82, %252 ], [ %82, %267 ], [ %274, %270 ], [ %82, %243 ]
  %280 = phi i8 [ %255, %252 ], [ %255, %267 ], [ %255, %270 ], [ %81, %243 ]
  %281 = phi i8 [ %256, %252 ], [ %256, %267 ], [ %256, %270 ], [ %80, %243 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41) #7
  br label %282

282:                                              ; preds = %92, %88, %275, %100
  %283 = phi i32 [ %78, %100 ], [ %276, %275 ], [ %78, %92 ], [ %78, %88 ]
  %284 = phi i32 [ %79, %100 ], [ %277, %275 ], [ %79, %92 ], [ %79, %88 ]
  %285 = phi i8 [ %83, %100 ], [ %278, %275 ], [ %83, %92 ], [ %83, %88 ]
  %286 = phi i8 [ %82, %100 ], [ %279, %275 ], [ %82, %92 ], [ %82, %88 ]
  %287 = phi i8 [ %81, %100 ], [ %280, %275 ], [ %81, %92 ], [ %81, %88 ]
  %288 = phi i8 [ %80, %100 ], [ %281, %275 ], [ %80, %92 ], [ %80, %88 ]
  %289 = getelementptr inbounds %"struct.blink::NGLogicalLineItem", %"struct.blink::NGLogicalLineItem"* %84, i64 1
  %290 = icmp eq %"struct.blink::NGLogicalLineItem"* %289, %38
  br i1 %290, label %49, label %77

291:                                              ; preds = %49
  %292 = load i32, i32* %10, align 4
  %293 = load i32, i32* %19, align 4
  %294 = icmp slt i32 %293, 0
  %295 = select i1 %294, i32 -2147483648, i32 2147483647
  %296 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %292, i32 %293) #7
  %297 = extractvalue { i32, i1 } %296, 1
  %298 = extractvalue { i32, i1 } %296, 0
  %299 = select i1 %297, i32 %295, i32 %298, !prof !2
  %300 = icmp sgt i32 %69, -1
  %301 = select i1 %300, i32 -2147483648, i32 2147483647
  %302 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %299, i32 %69) #7
  %303 = extractvalue { i32, i1 } %302, 1
  %304 = extractvalue { i32, i1 } %302, 0
  %305 = select i1 %303, i32 %301, i32 %304, !prof !2
  %306 = sdiv i32 %305, 2
  %307 = sext i32 %306 to i64
  %308 = tail call i1 @llvm.is.constant.i64(i64 %307) #7
  br i1 %308, label %315, label %309

309:                                              ; preds = %291
  %310 = icmp slt i32 %305, -1
  %311 = select i1 %310, i32 -2147483648, i32 2147483647
  %312 = add nsw i64 %307, 2147483648
  %313 = icmp ult i64 %312, 4294967296
  %314 = select i1 %313, i32 %306, i32 %311, !prof !10
  br label %315

315:                                              ; preds = %291, %309
  %316 = phi i32 [ %314, %309 ], [ %306, %291 ]
  %317 = icmp sgt i32 %316, 0
  %318 = select i1 %317, i32 %316, i32 0
  %319 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %2, i32 %318) #7
  %320 = extractvalue { i32, i1 } %319, 1
  %321 = extractvalue { i32, i1 } %319, 0
  %322 = select i1 %320, i32 2147483647, i32 %321, !prof !2
  store i32 %322, i32* %5, align 4
  %323 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %32, i32 %318) #7
  %324 = extractvalue { i32, i1 } %323, 1
  %325 = extractvalue { i32, i1 } %323, 0
  %326 = select i1 %324, i32 -2147483648, i32 %325, !prof !2
  store i32 %326, i32* %6, align 4
  br label %327

327:                                              ; preds = %315, %49
  %328 = phi i32 [ %326, %315 ], [ %51, %49 ]
  %329 = phi i32 [ %322, %315 ], [ %50, %49 ]
  %330 = and i8 %53, 1
  %331 = icmp eq i8 %330, 0
  br i1 %331, label %335, label %332

332:                                              ; preds = %327
  %333 = icmp sgt i32 %329, %2
  %334 = select i1 %333, i32 %2, i32 %329
  store i32 %334, i32* %5, align 4
  br label %335

335:                                              ; preds = %327, %332
  %336 = phi i32 [ %329, %327 ], [ %334, %332 ]
  %337 = and i8 %52, 1
  %338 = icmp eq i8 %337, 0
  br i1 %338, label %342, label %339

339:                                              ; preds = %335
  %340 = icmp slt i32 %328, %32
  %341 = select i1 %340, i32 %32, i32 %328
  store i32 %341, i32* %6, align 4
  br label %342

342:                                              ; preds = %335, %339
  %343 = phi i32 [ %328, %335 ], [ %341, %339 ]
  %344 = icmp slt i32 %336, %2
  %345 = and i8 %55, 1
  %346 = icmp eq i8 %345, 0
  %347 = and i1 %346, %344
  br i1 %347, label %348, label %349

348:                                              ; preds = %342
  store i32 %2, i32* %5, align 4
  br label %349

349:                                              ; preds = %348, %342
  %350 = phi i32 [ %2, %348 ], [ %336, %342 ]
  %351 = icmp sgt i32 %343, %32
  %352 = and i8 %54, 1
  %353 = icmp eq i8 %352, 0
  %354 = and i1 %353, %351
  br i1 %354, label %355, label %356

355:                                              ; preds = %349
  store i32 %32, i32* %6, align 4
  br label %356

356:                                              ; preds = %355, %349
  %357 = phi i32 [ %32, %355 ], [ %343, %349 ]
  %358 = icmp sgt i32 %350, -1
  %359 = select i1 %358, i32 -2147483648, i32 2147483647
  %360 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %2, i32 %350) #7
  %361 = extractvalue { i32, i1 } %360, 1
  %362 = extractvalue { i32, i1 } %360, 0
  %363 = select i1 %361, i32 %359, i32 %362, !prof !2
  %364 = icmp sgt i32 %363, 0
  %365 = select i1 %364, i32 %363, i32 0
  %366 = icmp sgt i32 %32, -1
  %367 = select i1 %366, i32 -2147483648, i32 2147483647
  %368 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %357, i32 %32) #7
  %369 = extractvalue { i32, i1 } %368, 1
  %370 = extractvalue { i32, i1 } %368, 0
  %371 = select i1 %369, i32 %367, i32 %370, !prof !2
  %372 = icmp sgt i32 %371, 0
  %373 = select i1 %372, i32 %371, i32 0
  %374 = icmp sgt i32 %2, -1
  %375 = select i1 %374, i32 -2147483648, i32 2147483647
  %376 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %350, i32 %2) #7
  %377 = extractvalue { i32, i1 } %376, 1
  %378 = extractvalue { i32, i1 } %376, 0
  %379 = select i1 %377, i32 %375, i32 %378, !prof !2
  %380 = icmp sgt i32 %379, 0
  %381 = select i1 %380, i32 %379, i32 0
  %382 = icmp sgt i32 %357, -1
  %383 = select i1 %382, i32 -2147483648, i32 2147483647
  %384 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %32, i32 %357) #7
  %385 = extractvalue { i32, i1 } %384, 1
  %386 = extractvalue { i32, i1 } %384, 0
  %387 = select i1 %385, i32 %383, i32 %386, !prof !2
  %388 = icmp sgt i32 %387, 0
  %389 = select i1 %388, i32 %387, i32 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9)
  %390 = zext i32 %373 to i64
  %391 = shl nuw nsw i64 %390, 32
  %392 = zext i32 %365 to i64
  %393 = or i64 %391, %392
  %394 = insertvalue { i64, i64 } undef, i64 %393, 0
  %395 = zext i32 %389 to i64
  %396 = shl nuw nsw i64 %395, 32
  %397 = zext i32 %381 to i64
  %398 = or i64 %396, %397
  %399 = insertvalue { i64, i64 } %394, i64 %398, 1
  ret { i64, i64 } %399
}

declare %"class.blink::ComputedStyle"* @_ZNK5blink17NGLogicalLineItem5StyleEv(%"struct.blink::NGLogicalLineItem"*) local_unnamed_addr #2

declare { i64, i64 } @_ZNK5blink21NGPhysicalBoxFragment18ScrollableOverflowENS_18NGPhysicalFragment14TextHeightTypeE(%"class.blink::NGPhysicalBoxFragment"*, i32) local_unnamed_addr #2

declare i32 @_ZNK5blink13ComputedStyle19GetTextEmphasisMarkEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #2

declare i32 @_ZNK5blink13ComputedStyle30GetTextEmphasisLineLogicalSideEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #2

declare i32 @_ZNK5blink13ComputedStyle15GetFontBaselineEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #3

declare void @_ZNK5blink15ShapeResultView14GetRunFontDataEPN3WTF6VectorINS_11ShapeResult11RunFontDataELj0ENS1_18PartitionAllocatorEEE(%"class.blink::ShapeResultView"*, %"class.WTF::Vector.2016"*) local_unnamed_addr #2

declare i64 @_ZNK5blink14SimpleFontData30NormalizedTypoAscentAndDescentENS_12FontBaselineE(%"class.blink::SimpleFontData"*, i32) local_unnamed_addr #2

declare %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"*) local_unnamed_addr #2

declare %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #4

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #4

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i32(i32) #6

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #4

declare %"class.blink::NGPhysicalFragment"* @_ZNK5blink18NGPhysicalFragment10PostLayoutEv(%"class.blink::NGPhysicalFragment"*) local_unnamed_addr #2

declare dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #2

declare %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZNK3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1943"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1943", %"class.WTF::Vector.1943"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector.1943", %"class.WTF::Vector.1943"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %24, i64 %25
  ret %"struct.blink::NGInlineItemResult"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"struct.blink::NGInlineItemResult"* @_ZN3WTF6VectorIN5blink18NGInlineItemResultELj32ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1943"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1943", %"class.WTF::Vector.1943"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector.1943", %"class.WTF::Vector.1943"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::NGInlineItemResult"*, %"struct.blink::NGInlineItemResult"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::NGInlineItemResult", %"struct.blink::NGInlineItemResult"* %24, i64 %25
  ret %"struct.blink::NGInlineItemResult"* %26
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 1, i32 1048575}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK5blink18NGPhysicalFragment23PostLayoutChildLinkList5beginEv: argument 0"}
!6 = distinct !{!6, !"_ZNK5blink18NGPhysicalFragment23PostLayoutChildLinkList5beginEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK5blink18NGPhysicalFragment23PostLayoutChildLinkList5beginEv: argument 0"}
!9 = distinct !{!9, !"_ZNK5blink18NGPhysicalFragment23PostLayoutChildLinkList5beginEv"}
!10 = !{!"branch_weights", i32 2000, i32 1}
!11 = !{i8 0, i8 2}
