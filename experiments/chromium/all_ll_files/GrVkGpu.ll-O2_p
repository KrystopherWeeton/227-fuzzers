; ModuleID = '../../third_party/skia/src/gpu/vk/GrVkGpu.cpp'
source_filename = "../../third_party/skia/src/gpu/vk/GrVkGpu.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkImageSubresource = type { i32, i32, i32 }
%union.VkClearColorValue = type { [4 x float] }
%"struct.std::__1::atomic.187" = type { %"struct.std::__1::__atomic_base.188" }
%"struct.std::__1::__atomic_base.188" = type { %"struct.std::__1::__atomic_base.189" }
%"struct.std::__1::__atomic_base.189" = type { %"struct.std::__1::__cxx_atomic_impl.190" }
%"struct.std::__1::__cxx_atomic_impl.190" = type { %"struct.std::__1::__cxx_atomic_base_impl.191" }
%"struct.std::__1::__cxx_atomic_base_impl.191" = type { i64 }
%class.GrVkGpu = type { %class.GrGpu, %class.sk_sp.350, %class.sk_sp.1, %class.sk_sp.494, i8, %struct.VkPhysicalDevice_T*, %struct.VkDevice_T*, %struct.VkQueue_T*, i32, %class.GrVkResourceProvider, %class.GrStagingBufferManager, %class.GrVkMSAALoadManager, %class.GrVkCommandPool*, %class.GrVkPrimaryCommandBuffer*, %class.SkSTArray.605, %class.SkSTArray.605, %class.SkTArray.608, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceMemoryProperties, i8, i8, %"class.std::__1::unique_ptr.615" }
%class.GrGpu = type { %class.SkRefCnt.base, %"class.GrGpu::Stats", %class.sk_sp.3, %"class.std::__1::unique_ptr.76", i32, %class.GrDirectContext*, %class.SkSTArray.139, i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.GrGpu::Stats" = type { i8 }
%class.sk_sp.3 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.4, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.4 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.SkSL::Compiler"* }
%"class.SkSL::Compiler" = type { %"class.SkSL::ErrorReporter", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr.121", %"class.std::__1::shared_ptr.121", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"class.SkSL::ModifiersPool", %"class.SkSL::Inliner", %"class.std::__1::unique_ptr.123", %"class.SkSL::String"*, i32, %"class.SkSL::String", %"class.std::__1::vector.129" }
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%"class.std::__1::shared_ptr" = type { %"class.SkSL::Context"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79" }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.SkSL::Type"* }
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector", i32, i32, %"class.std::__1::vector.91", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.93" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"struct.SkSL::Type::Field"* }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.120"* }
%"class.std::__1::vector.120" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::shared_ptr.121" = type { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::SymbolTable" = type { %"class.std::__1::shared_ptr.121", %"class.std::__1::vector.316", i8, %"class.std::__1::vector.324", %"class.std::__1::forward_list.332", %class.SkTHashMap.341, %"class.SkSL::ErrorReporter"* }
%"class.std::__1::vector.316" = type { %"class.std::__1::__vector_base.317" }
%"class.std::__1::__vector_base.317" = type { %"class.std::__1::unique_ptr.318"*, %"class.std::__1::unique_ptr.318"*, %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::unique_ptr.318" = type { %"class.std::__1::__compressed_pair.749" }
%"class.std::__1::__compressed_pair.749" = type { %"struct.std::__1::__compressed_pair_elem.750" }
%"struct.std::__1::__compressed_pair_elem.750" = type { %"class.SkSL::Symbol"* }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"class.std::__1::unique_ptr.318"* }
%"class.std::__1::vector.324" = type { %"class.std::__1::__vector_base.325" }
%"class.std::__1::__vector_base.325" = type { %"class.std::__1::unique_ptr.326"*, %"class.std::__1::unique_ptr.326"*, %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::unique_ptr.326" = type { %"class.std::__1::__compressed_pair.754" }
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"struct.std::__1::__compressed_pair_elem.755" = type { %"class.SkSL::IRNode"* }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.std::__1::unique_ptr.326"* }
%"class.std::__1::forward_list.332" = type { %"class.std::__1::__forward_list_base.333" }
%"class.std::__1::__forward_list_base.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"struct.std::__1::__forward_begin_node.336" }
%"struct.std::__1::__forward_begin_node.336" = type { %"struct.std::__1::__forward_list_node.337"* }
%"struct.std::__1::__forward_list_node.337" = type { %"struct.std::__1::__forward_begin_node.336", %"class.SkSL::String" }
%class.SkTHashMap.341 = type { %class.SkTHashTable.342 }
%class.SkTHashTable.342 = type { i32, i32, %class.SkAutoTArray.343 }
%class.SkAutoTArray.343 = type { %"class.std::__1::unique_ptr.344" }
%"class.std::__1::unique_ptr.344" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair" = type { %"struct.std::__1::pair.759" }
%"struct.std::__1::pair.759" = type { %"struct.SkSL::SymbolTable::SymbolKey", %"class.SkSL::Symbol"* }
%"struct.SkSL::SymbolTable::SymbolKey" = type <{ %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"struct.SkSL::ParsedModule" = type { %"class.std::__1::shared_ptr.121", %"class.std::__1::shared_ptr.122" }
%"class.std::__1::shared_ptr.122" = type { %"class.SkSL::IRIntrinsicMap"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::IRIntrinsicMap" = type opaque
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.101", %"class.std::__1::__compressed_pair.110", %"class.std::__1::__compressed_pair.115", %"class.std::__1::__compressed_pair.117", [4 x i8] }>
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103", %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { i64 }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { float }
%"class.SkSL::Inliner" = type { %"class.SkSL::Context"*, %"class.SkSL::Mangler", i32 }
%"class.SkSL::Mangler" = type { i32 }
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.SkSL::IRGenerator"* }
%"class.SkSL::IRGenerator" = type opaque
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.84 }
%union.anon.84 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.129" = type { %"class.std::__1::__vector_base.130" }
%"class.std::__1::__vector_base.130" = type { i64*, i64*, %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { i64* }
%class.SkSTArray.139 = type { %class.SkAlignedSTStorage.140, %class.SkTArray.141 }
%class.SkAlignedSTStorage.140 = type { [64 x i8] }
%class.SkTArray.141 = type { %"struct.GrGpu::SubmittedProc"*, i64 }
%"struct.GrGpu::SubmittedProc" = type { void (i8*, i1)*, i8* }
%class.sk_sp.350 = type { %struct.GrVkInterface* }
%struct.GrVkInterface = type { %class.SkRefCnt.base, %"struct.GrVkInterface::Functions" }
%"struct.GrVkInterface::Functions" = type { %"class.GrVkInterface::VkPtr", %"class.GrVkInterface::VkPtr.351", %"class.GrVkInterface::VkPtr.352", %"class.GrVkInterface::VkPtr.353", %"class.GrVkInterface::VkPtr.354", %"class.GrVkInterface::VkPtr.355", %"class.GrVkInterface::VkPtr.356", %"class.GrVkInterface::VkPtr.357", %"class.GrVkInterface::VkPtr.358", %"class.GrVkInterface::VkPtr.359", %"class.GrVkInterface::VkPtr.360", %"class.GrVkInterface::VkPtr.361", %"class.GrVkInterface::VkPtr.362", %"class.GrVkInterface::VkPtr.363", %"class.GrVkInterface::VkPtr.364", %"class.GrVkInterface::VkPtr.365", %"class.GrVkInterface::VkPtr.366", %"class.GrVkInterface::VkPtr.367", %"class.GrVkInterface::VkPtr.368", %"class.GrVkInterface::VkPtr.369", %"class.GrVkInterface::VkPtr.370", %"class.GrVkInterface::VkPtr.371", %"class.GrVkInterface::VkPtr.372", %"class.GrVkInterface::VkPtr.373", %"class.GrVkInterface::VkPtr.373", %"class.GrVkInterface::VkPtr.374", %"class.GrVkInterface::VkPtr.375", %"class.GrVkInterface::VkPtr.376", %"class.GrVkInterface::VkPtr.377", %"class.GrVkInterface::VkPtr.378", %"class.GrVkInterface::VkPtr.379", %"class.GrVkInterface::VkPtr.380", %"class.GrVkInterface::VkPtr.381", %"class.GrVkInterface::VkPtr.382", %"class.GrVkInterface::VkPtr.383", %"class.GrVkInterface::VkPtr.384", %"class.GrVkInterface::VkPtr.385", %"class.GrVkInterface::VkPtr.386", %"class.GrVkInterface::VkPtr.387", %"class.GrVkInterface::VkPtr.388", %"class.GrVkInterface::VkPtr.389", %"class.GrVkInterface::VkPtr.390", %"class.GrVkInterface::VkPtr.391", %"class.GrVkInterface::VkPtr.391", %"class.GrVkInterface::VkPtr.391", %"class.GrVkInterface::VkPtr.392", %"class.GrVkInterface::VkPtr.393", %"class.GrVkInterface::VkPtr.394", %"class.GrVkInterface::VkPtr.395", %"class.GrVkInterface::VkPtr.396", %"class.GrVkInterface::VkPtr.397", %"class.GrVkInterface::VkPtr.398", %"class.GrVkInterface::VkPtr.399", %"class.GrVkInterface::VkPtr.400", %"class.GrVkInterface::VkPtr.401", %"class.GrVkInterface::VkPtr.402", %"class.GrVkInterface::VkPtr.403", %"class.GrVkInterface::VkPtr.404", %"class.GrVkInterface::VkPtr.405", %"class.GrVkInterface::VkPtr.406", %"class.GrVkInterface::VkPtr.407", %"class.GrVkInterface::VkPtr.408", %"class.GrVkInterface::VkPtr.409", %"class.GrVkInterface::VkPtr.410", %"class.GrVkInterface::VkPtr.411", %"class.GrVkInterface::VkPtr.412", %"class.GrVkInterface::VkPtr.413", %"class.GrVkInterface::VkPtr.414", %"class.GrVkInterface::VkPtr.415", %"class.GrVkInterface::VkPtr.416", %"class.GrVkInterface::VkPtr.417", %"class.GrVkInterface::VkPtr.418", %"class.GrVkInterface::VkPtr.419", %"class.GrVkInterface::VkPtr.420", %"class.GrVkInterface::VkPtr.421", %"class.GrVkInterface::VkPtr.422", %"class.GrVkInterface::VkPtr.423", %"class.GrVkInterface::VkPtr.424", %"class.GrVkInterface::VkPtr.425", %"class.GrVkInterface::VkPtr.426", %"class.GrVkInterface::VkPtr.427", %"class.GrVkInterface::VkPtr.428", %"class.GrVkInterface::VkPtr.429", %"class.GrVkInterface::VkPtr.430", %"class.GrVkInterface::VkPtr.431", %"class.GrVkInterface::VkPtr.432", %"class.GrVkInterface::VkPtr.433", %"class.GrVkInterface::VkPtr.434", %"class.GrVkInterface::VkPtr.435", %"class.GrVkInterface::VkPtr.436", %"class.GrVkInterface::VkPtr.437", %"class.GrVkInterface::VkPtr.438", %"class.GrVkInterface::VkPtr.439", %"class.GrVkInterface::VkPtr.440", %"class.GrVkInterface::VkPtr.441", %"class.GrVkInterface::VkPtr.442", %"class.GrVkInterface::VkPtr.443", %"class.GrVkInterface::VkPtr.444", %"class.GrVkInterface::VkPtr.445", %"class.GrVkInterface::VkPtr.445", %"class.GrVkInterface::VkPtr.445", %"class.GrVkInterface::VkPtr.446", %"class.GrVkInterface::VkPtr.447", %"class.GrVkInterface::VkPtr.448", %"class.GrVkInterface::VkPtr.449", %"class.GrVkInterface::VkPtr.450", %"class.GrVkInterface::VkPtr.451", %"class.GrVkInterface::VkPtr.451", %"class.GrVkInterface::VkPtr.452", %"class.GrVkInterface::VkPtr.453", %"class.GrVkInterface::VkPtr.454", %"class.GrVkInterface::VkPtr.455", %"class.GrVkInterface::VkPtr.456", %"class.GrVkInterface::VkPtr.457", %"class.GrVkInterface::VkPtr.458", %"class.GrVkInterface::VkPtr.459", %"class.GrVkInterface::VkPtr.460", %"class.GrVkInterface::VkPtr.461", %"class.GrVkInterface::VkPtr.462", %"class.GrVkInterface::VkPtr.463", %"class.GrVkInterface::VkPtr.464", %"class.GrVkInterface::VkPtr.465", %"class.GrVkInterface::VkPtr.465", %"class.GrVkInterface::VkPtr.466", %"class.GrVkInterface::VkPtr.467", %"class.GrVkInterface::VkPtr.468", %"class.GrVkInterface::VkPtr.469", %"class.GrVkInterface::VkPtr.468", %"class.GrVkInterface::VkPtr.470", %"class.GrVkInterface::VkPtr.471", %"class.GrVkInterface::VkPtr.472", %"class.GrVkInterface::VkPtr.473", %"class.GrVkInterface::VkPtr.474", %"class.GrVkInterface::VkPtr.475", %"class.GrVkInterface::VkPtr.476", %"class.GrVkInterface::VkPtr.477", %"class.GrVkInterface::VkPtr.478", %"class.GrVkInterface::VkPtr.479", %"class.GrVkInterface::VkPtr.480", %"class.GrVkInterface::VkPtr.481", %"class.GrVkInterface::VkPtr.482", %"class.GrVkInterface::VkPtr.483", %"class.GrVkInterface::VkPtr.484", %"class.GrVkInterface::VkPtr.485", %"class.GrVkInterface::VkPtr.486", %"class.GrVkInterface::VkPtr.487", %"class.GrVkInterface::VkPtr.488", %"class.GrVkInterface::VkPtr.489", %"class.GrVkInterface::VkPtr.490", %"class.GrVkInterface::VkPtr.491", %"class.GrVkInterface::VkPtr.492", %"class.GrVkInterface::VkPtr.493" }
%"class.GrVkInterface::VkPtr" = type { i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)* }
%struct.VkInstanceCreateInfo = type { i32, i8*, i32, %struct.VkApplicationInfo*, i32, i8**, i32, i8** }
%struct.VkApplicationInfo = type { i32, i8*, i8*, i32, i8*, i32, i32 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%struct.VkInstance_T = type opaque
%"class.GrVkInterface::VkPtr.351" = type { void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.352" = type { i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)* }
%"class.GrVkInterface::VkPtr.353" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures*)* }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.354" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)* }
%struct.VkFormatProperties = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.355" = type { i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)* }
%struct.VkImageFormatProperties = type { %struct.VkExtent3D, i32, i32, i32, i64 }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.356" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)* }
%"class.GrVkInterface::VkPtr.357" = type { void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)* }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%"class.GrVkInterface::VkPtr.358" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)* }
%"class.GrVkInterface::VkPtr.359" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)* }
%struct.VkDeviceCreateInfo = type { i32, i8*, i32, i32, %struct.VkDeviceQueueCreateInfo*, i32, i8**, i32, i8**, %struct.VkPhysicalDeviceFeatures* }
%struct.VkDeviceQueueCreateInfo = type { i32, i8*, i32, i32, i32, float* }
%"class.GrVkInterface::VkPtr.360" = type { void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.361" = type { i32 (i8*, i32*, %struct.VkExtensionProperties*)* }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%"class.GrVkInterface::VkPtr.362" = type { i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)* }
%"class.GrVkInterface::VkPtr.363" = type { i32 (i32*, %struct.VkLayerProperties*)* }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%"class.GrVkInterface::VkPtr.364" = type { i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)* }
%"class.GrVkInterface::VkPtr.365" = type { void (%struct.VkDevice_T*, i32, i32, %struct.VkQueue_T**)* }
%"class.GrVkInterface::VkPtr.366" = type { i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)* }
%struct.VkSubmitInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32*, i32, %struct.VkCommandBuffer_T**, i32, %struct.VkSemaphore_T** }
%struct.VkCommandBuffer_T = type opaque
%struct.VkSemaphore_T = type opaque
%struct.VkFence_T = type opaque
%"class.GrVkInterface::VkPtr.367" = type { i32 (%struct.VkQueue_T*)* }
%"class.GrVkInterface::VkPtr.368" = type { i32 (%struct.VkDevice_T*)* }
%"class.GrVkInterface::VkPtr.369" = type { i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)* }
%struct.VkMemoryAllocateInfo = type { i32, i8*, i64, i32 }
%struct.VkDeviceMemory_T = type opaque
%"class.GrVkInterface::VkPtr.370" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.371" = type { i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)* }
%"class.GrVkInterface::VkPtr.372" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)* }
%"class.GrVkInterface::VkPtr.373" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)* }
%struct.VkMappedMemoryRange = type { i32, i8*, %struct.VkDeviceMemory_T*, i64, i64 }
%"class.GrVkInterface::VkPtr.374" = type { void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64*)* }
%"class.GrVkInterface::VkPtr.375" = type { i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)* }
%struct.VkBuffer_T = type opaque
%"class.GrVkInterface::VkPtr.376" = type { i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)* }
%struct.VkImage_T = type opaque
%"class.GrVkInterface::VkPtr.377" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)* }
%struct.VkMemoryRequirements = type { i64, i64, i32 }
%"class.GrVkInterface::VkPtr.378" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)* }
%"class.GrVkInterface::VkPtr.379" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, i32*, %struct.VkSparseImageMemoryRequirements*)* }
%struct.VkSparseImageMemoryRequirements = type { %struct.VkSparseImageFormatProperties, i32, i64, i64, i64 }
%struct.VkSparseImageFormatProperties = type { i32, %struct.VkExtent3D, i32 }
%"class.GrVkInterface::VkPtr.380" = type { void (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*)* }
%"class.GrVkInterface::VkPtr.381" = type { i32 (%struct.VkQueue_T*, i32, %struct.VkBindSparseInfo*, %struct.VkFence_T*)* }
%struct.VkBindSparseInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSparseBufferMemoryBindInfo*, i32, %struct.VkSparseImageOpaqueMemoryBindInfo*, i32, %struct.VkSparseImageMemoryBindInfo*, i32, %struct.VkSemaphore_T** }
%struct.VkSparseBufferMemoryBindInfo = type { %struct.VkBuffer_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseMemoryBind = type { i64, i64, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkSparseImageOpaqueMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseImageMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseImageMemoryBind* }
%struct.VkSparseImageMemoryBind = type { %struct.VkImageSubresource, %struct.VkOffset3D, %struct.VkExtent3D, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.382" = type { i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)* }
%struct.VkFenceCreateInfo = type { i32, i8*, i32 }
%"class.GrVkInterface::VkPtr.383" = type { void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.384" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**)* }
%"class.GrVkInterface::VkPtr.385" = type { i32 (%struct.VkDevice_T*, %struct.VkFence_T*)* }
%"class.GrVkInterface::VkPtr.386" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)* }
%"class.GrVkInterface::VkPtr.387" = type { i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)* }
%struct.VkSemaphoreCreateInfo = type { i32, i8*, i32 }
%"class.GrVkInterface::VkPtr.388" = type { void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.389" = type { i32 (%struct.VkDevice_T*, %struct.VkEventCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkEvent_T**)* }
%struct.VkEventCreateInfo = type { i32, i8*, i32 }
%struct.VkEvent_T = type opaque
%"class.GrVkInterface::VkPtr.390" = type { void (%struct.VkDevice_T*, %struct.VkEvent_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.391" = type { i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)* }
%"class.GrVkInterface::VkPtr.392" = type { i32 (%struct.VkDevice_T*, %struct.VkQueryPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkQueryPool_T**)* }
%struct.VkQueryPoolCreateInfo = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkQueryPool_T = type opaque
%"class.GrVkInterface::VkPtr.393" = type { void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.394" = type { i32 (%struct.VkDevice_T*, %struct.VkQueryPool_T*, i32, i32, i64, i8*, i64, i32)* }
%"class.GrVkInterface::VkPtr.395" = type { i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)* }
%struct.VkBufferCreateInfo = type { i32, i8*, i32, i64, i32, i32, i32, i32* }
%"class.GrVkInterface::VkPtr.396" = type { void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.397" = type { i32 (%struct.VkDevice_T*, %struct.VkBufferViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBufferView_T**)* }
%struct.VkBufferViewCreateInfo = type { i32, i8*, i32, %struct.VkBuffer_T*, i32, i64, i64 }
%struct.VkBufferView_T = type opaque
%"class.GrVkInterface::VkPtr.398" = type { void (%struct.VkDevice_T*, %struct.VkBufferView_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.399" = type { i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)* }
%struct.VkImageCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkExtent3D, i32, i32, i32, i32, i32, i32, i32, i32*, i32 }
%"class.GrVkInterface::VkPtr.400" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.401" = type { void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)* }
%struct.VkSubresourceLayout = type { i64, i64, i64, i64, i64 }
%"class.GrVkInterface::VkPtr.402" = type { i32 (%struct.VkDevice_T*, %struct.VkImageViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImageView_T**)* }
%struct.VkImageViewCreateInfo = type { i32, i8*, i32, %struct.VkImage_T*, i32, i32, %struct.VkComponentMapping, %struct.VkImageSubresourceRange }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%struct.VkImageView_T = type opaque
%"class.GrVkInterface::VkPtr.403" = type { void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.404" = type { i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)* }
%struct.VkShaderModuleCreateInfo = type { i32, i8*, i32, i64, i32* }
%struct.VkShaderModule_T = type opaque
%"class.GrVkInterface::VkPtr.405" = type { void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.406" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCacheCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineCache_T**)* }
%struct.VkPipelineCacheCreateInfo = type { i32, i8*, i32, i64, i8* }
%struct.VkPipelineCache_T = type opaque
%"class.GrVkInterface::VkPtr.407" = type { void (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.408" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i64*, i8*)* }
%"class.GrVkInterface::VkPtr.409" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkPipelineCache_T**)* }
%"class.GrVkInterface::VkPtr.410" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)* }
%struct.VkGraphicsPipelineCreateInfo = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, %struct.VkPipelineVertexInputStateCreateInfo*, %struct.VkPipelineInputAssemblyStateCreateInfo*, %struct.VkPipelineTessellationStateCreateInfo*, %struct.VkPipelineViewportStateCreateInfo*, %struct.VkPipelineRasterizationStateCreateInfo*, %struct.VkPipelineMultisampleStateCreateInfo*, %struct.VkPipelineDepthStencilStateCreateInfo*, %struct.VkPipelineColorBlendStateCreateInfo*, %struct.VkPipelineDynamicStateCreateInfo*, %struct.VkPipelineLayout_T*, %struct.VkRenderPass_T*, i32, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineShaderStageCreateInfo = type { i32, i8*, i32, i32, %struct.VkShaderModule_T*, i8*, %struct.VkSpecializationInfo* }
%struct.VkSpecializationInfo = type { i32, %struct.VkSpecializationMapEntry*, i64, i8* }
%struct.VkSpecializationMapEntry = type { i32, i32, i64 }
%struct.VkPipelineVertexInputStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkVertexInputBindingDescription*, i32, %struct.VkVertexInputAttributeDescription* }
%struct.VkVertexInputBindingDescription = type { i32, i32, i32 }
%struct.VkVertexInputAttributeDescription = type { i32, i32, i32, i32 }
%struct.VkPipelineInputAssemblyStateCreateInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkPipelineTessellationStateCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineViewportStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkViewport*, i32, %struct.VkRect2D* }
%struct.VkViewport = type { float, float, float, float, float, float }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%struct.VkPipelineRasterizationStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, float, float, float }
%struct.VkPipelineMultisampleStateCreateInfo = type { i32, i8*, i32, i32, i32, float, i32*, i32, i32 }
%struct.VkPipelineDepthStencilStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float }
%struct.VkStencilOpState = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineColorBlendStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] }
%struct.VkPipelineColorBlendAttachmentState = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineDynamicStateCreateInfo = type { i32, i8*, i32, i32, i32* }
%struct.VkPipelineLayout_T = type opaque
%struct.VkRenderPass_T = type opaque
%struct.VkPipeline_T = type opaque
%"class.GrVkInterface::VkPtr.411" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkComputePipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)* }
%struct.VkComputePipelineCreateInfo = type { i32, i8*, i32, %struct.VkPipelineShaderStageCreateInfo, %struct.VkPipelineLayout_T*, %struct.VkPipeline_T*, i32 }
%"class.GrVkInterface::VkPtr.412" = type { void (%struct.VkDevice_T*, %struct.VkPipeline_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.413" = type { i32 (%struct.VkDevice_T*, %struct.VkPipelineLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineLayout_T**)* }
%struct.VkPipelineLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayout_T**, i32, %struct.VkPushConstantRange* }
%struct.VkDescriptorSetLayout_T = type opaque
%struct.VkPushConstantRange = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.414" = type { void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.415" = type { i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)* }
%struct.VkSamplerCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32 }
%struct.VkSampler_T = type opaque
%"class.GrVkInterface::VkPtr.416" = type { void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.417" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)* }
%struct.VkDescriptorSetLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayoutBinding* }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %struct.VkSampler_T** }
%"class.GrVkInterface::VkPtr.418" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.419" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorPool_T**)* }
%struct.VkDescriptorPoolCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%struct.VkDescriptorPool_T = type opaque
%"class.GrVkInterface::VkPtr.420" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.421" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.422" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetAllocateInfo*, %struct.VkDescriptorSet_T**)* }
%struct.VkDescriptorSetAllocateInfo = type { i32, i8*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSetLayout_T** }
%struct.VkDescriptorSet_T = type opaque
%"class.GrVkInterface::VkPtr.423" = type { i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSet_T**)* }
%"class.GrVkInterface::VkPtr.424" = type { void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)* }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%struct.VkCopyDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, %struct.VkDescriptorSet_T*, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.425" = type { i32 (%struct.VkDevice_T*, %struct.VkFramebufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFramebuffer_T**)* }
%struct.VkFramebufferCreateInfo = type { i32, i8*, i32, %struct.VkRenderPass_T*, i32, %struct.VkImageView_T**, i32, i32, i32 }
%struct.VkFramebuffer_T = type opaque
%"class.GrVkInterface::VkPtr.426" = type { void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.427" = type { i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)* }
%struct.VkRenderPassCreateInfo = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription*, i32, %struct.VkSubpassDescription*, i32, %struct.VkSubpassDependency* }
%struct.VkAttachmentDescription = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription = type { i32, i32, i32, %struct.VkAttachmentReference*, i32, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, i32, i32* }
%struct.VkAttachmentReference = type { i32, i32 }
%struct.VkSubpassDependency = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.428" = type { void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.429" = type { void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkExtent2D*)* }
%"class.GrVkInterface::VkPtr.430" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkCommandPool_T**)* }
%struct.VkCommandPoolCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkCommandPool_T = type opaque
%"class.GrVkInterface::VkPtr.431" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)* }
%"class.GrVkInterface::VkPtr.432" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.433" = type { i32 (%struct.VkDevice_T*, %struct.VkCommandBufferAllocateInfo*, %struct.VkCommandBuffer_T**)* }
%struct.VkCommandBufferAllocateInfo = type { i32, i8*, %struct.VkCommandPool_T*, i32, i32 }
%"class.GrVkInterface::VkPtr.434" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.GrVkInterface::VkPtr.435" = type { i32 (%struct.VkCommandBuffer_T*, %struct.VkCommandBufferBeginInfo*)* }
%struct.VkCommandBufferBeginInfo = type { i32, i8*, i32, %struct.VkCommandBufferInheritanceInfo* }
%struct.VkCommandBufferInheritanceInfo = type { i32, i8*, %struct.VkRenderPass_T*, i32, %struct.VkFramebuffer_T*, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.436" = type { i32 (%struct.VkCommandBuffer_T*)* }
%"class.GrVkInterface::VkPtr.437" = type { i32 (%struct.VkCommandBuffer_T*, i32)* }
%"class.GrVkInterface::VkPtr.438" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipeline_T*)* }
%"class.GrVkInterface::VkPtr.439" = type { void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkViewport*)* }
%"class.GrVkInterface::VkPtr.440" = type { void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)* }
%"class.GrVkInterface::VkPtr.441" = type { void (%struct.VkCommandBuffer_T*, float)* }
%"class.GrVkInterface::VkPtr.442" = type { void (%struct.VkCommandBuffer_T*, float, float, float)* }
%"class.GrVkInterface::VkPtr.443" = type { void (%struct.VkCommandBuffer_T*, float*)* }
%"class.GrVkInterface::VkPtr.444" = type { void (%struct.VkCommandBuffer_T*, float, float)* }
%"class.GrVkInterface::VkPtr.445" = type { void (%struct.VkCommandBuffer_T*, i32, i32)* }
%"class.GrVkInterface::VkPtr.446" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipelineLayout_T*, i32, i32, %struct.VkDescriptorSet_T**, i32, i32*)* }
%"class.GrVkInterface::VkPtr.447" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32)* }
%"class.GrVkInterface::VkPtr.448" = type { void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)* }
%"class.GrVkInterface::VkPtr.449" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32)* }
%"class.GrVkInterface::VkPtr.450" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32)* }
%"class.GrVkInterface::VkPtr.451" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)* }
%"class.GrVkInterface::VkPtr.452" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32)* }
%"class.GrVkInterface::VkPtr.453" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64)* }
%"class.GrVkInterface::VkPtr.454" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)* }
%struct.VkBufferCopy = type { i64, i64, i64 }
%"class.GrVkInterface::VkPtr.455" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageCopy*)* }
%struct.VkImageCopy = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%"class.GrVkInterface::VkPtr.456" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageBlit*, i32)* }
%struct.VkImageBlit = type { %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D], %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D] }
%"class.GrVkInterface::VkPtr.457" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkImage_T*, i32, i32, %struct.VkBufferImageCopy*)* }
%struct.VkBufferImageCopy = type { i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%"class.GrVkInterface::VkPtr.458" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkBuffer_T*, i32, %struct.VkBufferImageCopy*)* }
%"class.GrVkInterface::VkPtr.459" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i8*)* }
%"class.GrVkInterface::VkPtr.460" = type { void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i32)* }
%"class.GrVkInterface::VkPtr.461" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %union.VkClearColorValue*, i32, %struct.VkImageSubresourceRange*)* }
%"class.GrVkInterface::VkPtr.462" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkClearDepthStencilValue*, i32, %struct.VkImageSubresourceRange*)* }
%struct.VkClearDepthStencilValue = type { float, i32 }
%"class.GrVkInterface::VkPtr.463" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkClearAttachment*, i32, %struct.VkClearRect*)* }
%struct.VkClearAttachment = type { i32, i32, %union.VkClearValue }
%union.VkClearValue = type { %union.VkClearColorValue }
%struct.VkClearRect = type { %struct.VkRect2D, i32, i32 }
%"class.GrVkInterface::VkPtr.464" = type { void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageResolve*)* }
%struct.VkImageResolve = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%"class.GrVkInterface::VkPtr.465" = type { void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)* }
%"class.GrVkInterface::VkPtr.466" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkEvent_T**, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)* }
%struct.VkMemoryBarrier = type { i32, i8*, i32, i32 }
%struct.VkBufferMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, %struct.VkBuffer_T*, i64, i64 }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%"class.GrVkInterface::VkPtr.467" = type { void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)* }
%"class.GrVkInterface::VkPtr.469" = type { void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.468" = type { void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)* }
%"class.GrVkInterface::VkPtr.470" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkQueryPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.471" = type { void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32, %struct.VkBuffer_T*, i64, i64, i32)* }
%"class.GrVkInterface::VkPtr.472" = type { void (%struct.VkCommandBuffer_T*, %struct.VkPipelineLayout_T*, i32, i32, i32, i8*)* }
%"class.GrVkInterface::VkPtr.473" = type { void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, i32)* }
%struct.VkRenderPassBeginInfo = type { i32, i8*, %struct.VkRenderPass_T*, %struct.VkFramebuffer_T*, %struct.VkRect2D, i32, %union.VkClearValue* }
%"class.GrVkInterface::VkPtr.474" = type { void (%struct.VkCommandBuffer_T*, i32)* }
%"class.GrVkInterface::VkPtr.475" = type { void (%struct.VkCommandBuffer_T*)* }
%"class.GrVkInterface::VkPtr.476" = type { void (%struct.VkCommandBuffer_T*, i32, %struct.VkCommandBuffer_T**)* }
%"class.GrVkInterface::VkPtr.477" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)* }
%struct.VkPhysicalDeviceFeatures2 = type { i32, i8*, %struct.VkPhysicalDeviceFeatures }
%"class.GrVkInterface::VkPtr.478" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)* }
%struct.VkPhysicalDeviceProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceProperties }
%"class.GrVkInterface::VkPtr.479" = type { void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)* }
%struct.VkFormatProperties2 = type { i32, i8*, %struct.VkFormatProperties }
%"class.GrVkInterface::VkPtr.480" = type { i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)* }
%struct.VkPhysicalDeviceImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkImageFormatProperties2 = type { i32, i8*, %struct.VkImageFormatProperties }
%"class.GrVkInterface::VkPtr.481" = type { void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)* }
%struct.VkQueueFamilyProperties2 = type { i32, i8*, %struct.VkQueueFamilyProperties }
%"class.GrVkInterface::VkPtr.482" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)* }
%struct.VkPhysicalDeviceMemoryProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceMemoryProperties }
%"class.GrVkInterface::VkPtr.483" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)* }
%struct.VkPhysicalDeviceSparseImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkSparseImageFormatProperties2 = type { i32, i8*, %struct.VkSparseImageFormatProperties }
%"class.GrVkInterface::VkPtr.484" = type { void (%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkImageMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkImage_T* }
%struct.VkMemoryRequirements2 = type { i32, i8*, %struct.VkMemoryRequirements }
%"class.GrVkInterface::VkPtr.485" = type { void (%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*)* }
%struct.VkBufferMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkBuffer_T* }
%"class.GrVkInterface::VkPtr.486" = type { void (%struct.VkDevice_T*, %struct.VkImageSparseMemoryRequirementsInfo2*, i32*, %struct.VkSparseImageMemoryRequirements2*)* }
%struct.VkImageSparseMemoryRequirementsInfo2 = type { i32, i8*, %struct.VkImage_T* }
%struct.VkSparseImageMemoryRequirements2 = type { i32, i8*, %struct.VkSparseImageMemoryRequirements }
%"class.GrVkInterface::VkPtr.487" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*)* }
%struct.VkBindBufferMemoryInfo = type { i32, i8*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.GrVkInterface::VkPtr.488" = type { i32 (%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*)* }
%struct.VkBindImageMemoryInfo = type { i32, i8*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64 }
%"class.GrVkInterface::VkPtr.489" = type { void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)* }
%"class.GrVkInterface::VkPtr.490" = type { void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkDescriptorSetLayoutSupport*)* }
%struct.VkDescriptorSetLayoutSupport = type { i32, i8*, i32 }
%"class.GrVkInterface::VkPtr.491" = type { void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)* }
%struct.VkPhysicalDeviceExternalBufferInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalBufferProperties = type { i32, i8*, %struct.VkExternalMemoryProperties }
%struct.VkExternalMemoryProperties = type { i32, i32, i32 }
%"class.GrVkInterface::VkPtr.492" = type { i32 (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversionCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSamplerYcbcrConversion_T**)* }
%struct.VkSamplerYcbcrConversionCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkComponentMapping, i32, i32, i32, i32 }
%struct.VkSamplerYcbcrConversion_T = type opaque
%"class.GrVkInterface::VkPtr.493" = type { void (%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversion_T*, %struct.VkAllocationCallbacks*)* }
%class.sk_sp.1 = type { %class.GrVkMemoryAllocator* }
%class.GrVkMemoryAllocator = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.494 = type { %class.GrVkCaps* }
%class.GrVkCaps = type <{ %class.GrCaps.base, i8, [22 x %"struct.GrVkCaps::FormatInfo"], [31 x i32], i32, %class.SkSTArray.502, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, [2 x i8], i32, [4 x i8] }>
%class.GrCaps.base = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.4, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8 }>
%"struct.GrVkCaps::FormatInfo" = type <{ i16, i16, [4 x i8], %class.SkTDArray.495, %"class.std::__1::unique_ptr.496", i32, [4 x i8] }>
%class.SkTDArray.495 = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.496" = type { %"class.std::__1::__compressed_pair.497" }
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.498" }
%"struct.std::__1::__compressed_pair_elem.498" = type { %"struct.GrVkCaps::ColorTypeInfo"* }
%"struct.GrVkCaps::ColorTypeInfo" = type { i32, i32, i32, %class.GrSwizzle, %class.GrSwizzle }
%class.GrSwizzle = type { i16 }
%class.SkSTArray.502 = type { %class.SkAlignedSTStorage.503, %class.SkTArray.504 }
%class.SkAlignedSTStorage.503 = type { [48 x i8] }
%class.SkTArray.504 = type { %struct.GrVkYcbcrConversionInfo*, i64 }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%struct.VkPhysicalDevice_T = type opaque
%struct.VkDevice_T = type opaque
%struct.VkQueue_T = type opaque
%class.GrVkResourceProvider = type { %class.GrVkGpu*, %struct.VkPipelineCache_T*, %class.SkTArray.506, %class.SkSTArray.508, %class.SkTArray.514, %class.SkSTArray.515, %class.SkMutex, %class.SkSTArray.515, %class.SkTDynamicHash.555, %class.SkTDynamicHash.564, %class.sk_sp.573, %class.SkSTArray.582, %class.GrResourceHandle, %class.GrResourceHandle }
%class.SkTArray.506 = type { %"struct.GrVkResourceProvider::MSAALoadPipeline"*, i64 }
%"struct.GrVkResourceProvider::MSAALoadPipeline" = type { %class.sk_sp.507, %class.GrVkRenderPass* }
%class.sk_sp.507 = type { %class.GrVkPipeline* }
%class.GrVkPipeline = type { %class.GrVkManagedResource, %struct.VkPipeline_T*, %struct.VkPipelineLayout_T* }
%class.GrVkManagedResource = type { %class.GrManagedResource.base, %class.GrVkGpu* }
%class.GrManagedResource.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.GrVkRenderPass = type <{ %class.GrVkManagedResource, %struct.VkRenderPass_T*, i32, %"struct.GrVkRenderPass::AttachmentsDescriptor", i32, i32, %struct.VkExtent2D, i32, i32, i32, [4 x i8] }>
%"struct.GrVkRenderPass::AttachmentsDescriptor" = type { %"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc", %"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc", %"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc", i32 }
%"struct.GrVkRenderPass::AttachmentsDescriptor::AttachmentDesc" = type { i32, i32, %"struct.GrVkRenderPass::LoadStoreOps" }
%"struct.GrVkRenderPass::LoadStoreOps" = type { i32, i32 }
%class.SkSTArray.508 = type { %class.SkAlignedSTStorage.509, %class.SkTArray.510 }
%class.SkAlignedSTStorage.509 = type { [224 x i8] }
%class.SkTArray.510 = type { %"class.GrVkResourceProvider::CompatibleRenderPassSet"*, i64 }
%"class.GrVkResourceProvider::CompatibleRenderPassSet" = type <{ %class.SkSTArray.511, i32, [4 x i8] }>
%class.SkSTArray.511 = type { %class.SkAlignedSTStorage.512, %class.SkTArray.513 }
%class.SkAlignedSTStorage.512 = type { [32 x i8] }
%class.SkTArray.513 = type { %class.GrVkRenderPass**, i64 }
%class.SkTArray.514 = type { %class.GrVkRenderPass**, i64 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.171" }
%"struct.std::__1::atomic.171" = type { %"struct.std::__1::__atomic_base.172" }
%"struct.std::__1::__atomic_base.172" = type { %"struct.std::__1::__atomic_base.173" }
%"struct.std::__1::__atomic_base.173" = type { %"struct.std::__1::__cxx_atomic_impl.174" }
%"struct.std::__1::__cxx_atomic_impl.174" = type { %"struct.std::__1::__cxx_atomic_base_impl.175" }
%"struct.std::__1::__cxx_atomic_base_impl.175" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkSTArray.515 = type { %class.SkAlignedSTStorage.516, %class.SkTArray.517 }
%class.SkAlignedSTStorage.516 = type { [32 x i8] }
%class.SkTArray.517 = type { %class.GrVkCommandPool**, i64 }
%class.SkTDynamicHash.555 = type { %class.SkTHashTable.556 }
%class.SkTHashTable.556 = type { i32, i32, %class.SkAutoTArray.557 }
%class.SkAutoTArray.557 = type { %"class.std::__1::unique_ptr.558" }
%"class.std::__1::unique_ptr.558" = type { %"class.std::__1::__compressed_pair.559" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrVkSampler *, GrVkSampler::Key, SkTDynamicHash<GrVkSampler, GrVkSampler::Key, GrVkSampler>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.564 = type { %class.SkTHashTable.565 }
%class.SkTHashTable.565 = type { i32, i32, %class.SkAutoTArray.566 }
%class.SkAutoTArray.566 = type { %"class.std::__1::unique_ptr.567" }
%"class.std::__1::unique_ptr.567" = type { %"class.std::__1::__compressed_pair.568" }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.569" }
%"struct.std::__1::__compressed_pair_elem.569" = type { %"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrVkSamplerYcbcrConversion *, GrVkSamplerYcbcrConversion::Key, SkTDynamicHash<GrVkSamplerYcbcrConversion, GrVkSamplerYcbcrConversion::Key, GrVkSamplerYcbcrConversion>::AdaptedTraits>::Slot" = type opaque
%class.sk_sp.573 = type { %"class.GrVkResourceProvider::PipelineStateCache"* }
%"class.GrVkResourceProvider::PipelineStateCache" = type { %class.GrThreadSafePipelineBuilder.base, %class.SkLRUCache, %class.GrVkGpu* }
%class.GrThreadSafePipelineBuilder.base = type { %class.SkRefCnt.base, %"class.GrThreadSafePipelineBuilder::Stats" }
%"class.GrThreadSafePipelineBuilder::Stats" = type { i8 }
%class.SkLRUCache = type { i32, %class.SkTHashTable.574, %class.SkTInternalLList }
%class.SkTHashTable.574 = type { i32, i32, %class.SkAutoTArray.575 }
%class.SkAutoTArray.575 = type { %"class.std::__1::unique_ptr.576" }
%"class.std::__1::unique_ptr.576" = type { %"class.std::__1::__compressed_pair.577" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.578" }
%"struct.std::__1::__compressed_pair_elem.578" = type { %"struct.SkTHashTable<SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry *, const GrProgramDesc, SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Traits>::Slot"* }
%"struct.SkTHashTable<SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry *, const GrProgramDesc, SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Traits>::Slot" = type opaque
%class.SkTInternalLList = type { %"struct.SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry"*, %"struct.SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry"* }
%"struct.SkLRUCache<const GrProgramDesc, std::__1::unique_ptr<GrVkResourceProvider::PipelineStateCache::Entry, std::__1::default_delete<GrVkResourceProvider::PipelineStateCache::Entry> >, GrVkResourceProvider::PipelineStateCache::DescHash>::Entry" = type opaque
%class.SkSTArray.582 = type { %class.SkAlignedSTStorage.583, %class.SkTArray.584 }
%class.SkAlignedSTStorage.583 = type { [32 x i8] }
%class.SkTArray.584 = type { %"class.std::__1::unique_ptr.585"*, i64 }
%"class.std::__1::unique_ptr.585" = type { %"class.std::__1::__compressed_pair.586" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.587" }
%"struct.std::__1::__compressed_pair_elem.587" = type { %class.GrVkDescriptorSetManager* }
%class.GrVkDescriptorSetManager = type { %"struct.GrVkDescriptorSetManager::DescriptorPoolManager", %class.SkTArray.588, %class.SkSTArray.589, %class.SkSTArray.592 }
%"struct.GrVkDescriptorSetManager::DescriptorPoolManager" = type { %struct.VkDescriptorSetLayout_T*, i32, i32, i32, i32, %class.GrVkDescriptorPool* }
%class.GrVkDescriptorPool = type { %class.GrVkManagedResource, i32, i32, %struct.VkDescriptorPool_T* }
%class.SkTArray.588 = type { %class.GrVkDescriptorSet**, i64 }
%class.GrVkDescriptorSet = type <{ %class.GrVkRecycledResource, %struct.VkDescriptorSet_T*, %class.GrVkDescriptorPool*, %class.GrResourceHandle, [4 x i8] }>
%class.GrVkRecycledResource = type { %class.GrRecycledResource.base, %class.GrVkGpu* }
%class.GrRecycledResource.base = type { %class.GrManagedResource.base }
%class.SkSTArray.589 = type { %class.SkAlignedSTStorage.590, %class.SkTArray.591 }
%class.SkAlignedSTStorage.590 = type { [16 x i8] }
%class.SkTArray.591 = type { i32*, i64 }
%class.SkSTArray.592 = type { %class.SkAlignedSTStorage.593, %class.SkTArray.594 }
%class.SkAlignedSTStorage.593 = type { [32 x i8] }
%class.SkTArray.594 = type { %class.GrVkSampler**, i64 }
%class.GrVkSampler = type <{ %class.GrVkManagedResource, %struct.VkSampler_T*, %class.GrVkSamplerYcbcrConversion*, %"struct.GrVkSampler::Key", i32, [4 x i8] }>
%class.GrVkSamplerYcbcrConversion = type { %class.GrVkManagedResource, %struct.VkSamplerYcbcrConversion_T*, %"struct.GrVkSamplerYcbcrConversion::Key" }
%"struct.GrVkSamplerYcbcrConversion::Key" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"struct.GrVkSampler::Key" = type { i8, [7 x i8], %"struct.GrVkSamplerYcbcrConversion::Key" }
%class.GrResourceHandle = type { i32 }
%class.GrStagingBufferManager = type { %"class.std::__1::vector.598", %class.GrGpu* }
%"class.std::__1::vector.598" = type { %"class.std::__1::__vector_base.599" }
%"class.std::__1::__vector_base.599" = type { %"struct.GrStagingBufferManager::StagingBuffer"*, %"struct.GrStagingBufferManager::StagingBuffer"*, %"class.std::__1::__compressed_pair.600" }
%"struct.GrStagingBufferManager::StagingBuffer" = type { %class.sk_sp.295, i8*, i64 }
%class.sk_sp.295 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.74, i8* }
%class.sk_sp.74 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.75, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.75 = type { %"struct.std::__1::atomic" }
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.GrBuffer = type { i32 (...)** }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.601" }
%"struct.std::__1::__compressed_pair_elem.601" = type { %"struct.GrStagingBufferManager::StagingBuffer"* }
%class.GrVkMSAALoadManager = type { %struct.VkShaderModule_T*, %struct.VkShaderModule_T*, [2 x %struct.VkPipelineShaderStageCreateInfo], %struct.VkPipelineLayout_T* }
%class.GrVkCommandPool = type <{ %class.GrVkManagedResource, i8, [7 x i8], %struct.VkCommandPool_T*, %"class.std::__1::unique_ptr.518", %class.SkSTArray.553, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.518" = type { %"class.std::__1::__compressed_pair.519" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %class.GrVkPrimaryCommandBuffer* }
%class.SkSTArray.553 = type { %class.SkAlignedSTStorage.554, %class.SkTArray.542 }
%class.SkAlignedSTStorage.554 = type { [32 x i8] }
%class.SkTArray.542 = type { %"class.std::__1::unique_ptr.543"*, i64 }
%"class.std::__1::unique_ptr.543" = type { %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %class.GrVkSecondaryCommandBuffer* }
%class.GrVkSecondaryCommandBuffer = type { %class.GrVkCommandBuffer.base, [3 x i8] }
%class.GrVkCommandBuffer.base = type <{ i32 (...)**, %class.SkSTArray.521, %class.SkSTArray.525, %class.SkSTArray.528, %class.SkSTArray.532, i8, i8, [6 x i8], %class.GrVkRenderPass*, %struct.VkCommandBuffer_T*, [2 x %struct.VkBuffer_T*], %struct.VkBuffer_T*, %struct.VkViewport, %struct.VkRect2D, [4 x float], %class.SkSTArray.536, %class.SkSTArray.539, i8, [3 x i8], i32, i32, i8 }>
%class.SkSTArray.521 = type { %class.SkAlignedSTStorage.522, %class.SkTArray.523 }
%class.SkAlignedSTStorage.522 = type { [256 x i8] }
%class.SkTArray.523 = type { %class.sk_sp.524*, i64 }
%class.sk_sp.524 = type { %class.GrManagedResource* }
%class.GrManagedResource = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkSTArray.525 = type { %class.SkAlignedSTStorage.526, %class.SkTArray.527 }
%class.SkAlignedSTStorage.526 = type { [256 x i8] }
%class.SkTArray.527 = type { %class.gr_sp*, i64 }
%class.gr_sp = type { %class.GrRecycledResource* }
%class.GrRecycledResource = type { %class.GrManagedResource.base, [4 x i8] }
%class.SkSTArray.528 = type { %class.SkAlignedSTStorage.529, %class.SkTArray.530 }
%class.SkAlignedSTStorage.529 = type { [128 x i8] }
%class.SkTArray.530 = type { %class.sk_sp.531*, i64 }
%class.sk_sp.531 = type { %class.GrBuffer* }
%class.SkSTArray.532 = type { %class.SkAlignedSTStorage.533, %class.SkTArray.534 }
%class.SkAlignedSTStorage.533 = type { [128 x i8] }
%class.SkTArray.534 = type { %class.gr_sp.535*, i64 }
%class.gr_sp.535 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.142 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.142 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.143, void (i8*)*, i8* }
%class.SkNVRefCnt.143 = type { %"struct.std::__1::atomic" }
%class.SkSTArray.536 = type { %class.SkAlignedSTStorage.537, %class.SkTArray.538 }
%class.SkAlignedSTStorage.537 = type { [56 x i8] }
%class.SkTArray.538 = type { %struct.VkBufferMemoryBarrier*, i64 }
%class.SkSTArray.539 = type { %class.SkAlignedSTStorage.540, %class.SkTArray.541 }
%class.SkAlignedSTStorage.540 = type { [144 x i8] }
%class.SkTArray.541 = type { %struct.VkImageMemoryBarrier*, i64 }
%class.GrVkPrimaryCommandBuffer = type { %class.GrVkCommandBuffer.base, %class.SkTArray.542, %struct.VkFence_T*, %class.SkTArray.549 }
%class.SkTArray.549 = type { %class.sk_sp.142*, i64 }
%class.SkSTArray.605 = type { %class.SkAlignedSTStorage.606, %class.SkTArray.607 }
%class.SkAlignedSTStorage.606 = type { [8 x i8] }
%class.SkTArray.607 = type { %"class.GrVkSemaphore::Resource"**, i64 }
%"class.GrVkSemaphore::Resource" = type <{ %class.GrVkManagedResource, %struct.VkSemaphore_T*, i8, i8, i8, [5 x i8] }>
%class.SkTArray.608 = type { %"class.std::__1::unique_ptr.609"*, i64 }
%"class.std::__1::unique_ptr.609" = type { %"class.std::__1::__compressed_pair.610" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"class.SkDrawable::GpuDrawHandler"* }
%"class.SkDrawable::GpuDrawHandler" = type { i32 (...)** }
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%"class.std::__1::unique_ptr.615" = type { %"class.std::__1::__compressed_pair.616" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %class.GrVkOpsRenderPass* }
%class.GrVkOpsRenderPass = type { %class.GrOpsRenderPass, %class.sk_sp.619, %"class.std::__1::unique_ptr.543", %class.GrVkRenderPass*, %struct.SkIRect, %class.GrVkPipelineState*, i8, %struct.SkIRect, i32, i32, i8, %class.GrVkGpu* }
%class.GrOpsRenderPass = type { i32 (...)**, i32, %class.GrRenderTarget*, %class.sk_sp.531, %class.sk_sp.531, %class.sk_sp.531, i32, i32 }
%class.GrRenderTarget = type <{ i32 (...)**, %class.sk_sp.618, %class.sk_sp.618, i32, [4 x i8], %class.GrSurface }>
%class.sk_sp.618 = type { %class.GrAttachment* }
%class.GrAttachment = type <{ %class.GrSurface, i8, [3 x i8], i32, i8, i8, [6 x i8] }>
%class.sk_sp.619 = type { %class.GrVkFramebuffer* }
%class.GrVkFramebuffer = type { %class.GrVkManagedResource, %struct.VkFramebuffer_T*, %class.sk_sp.620, %class.sk_sp.620, %class.sk_sp.620, %class.sk_sp.634, %class.GrResourceHandle.635, %class.sk_sp.634, %"class.std::__1::unique_ptr.543" }
%class.sk_sp.620 = type { %class.GrVkAttachment* }
%class.GrVkAttachment = type { %class.GrAttachment.base, %class.GrVkImage, %class.sk_sp.632, %class.sk_sp.632, %class.gr_sp.633, %class.gr_sp.633 }
%class.GrAttachment.base = type <{ %class.GrSurface, i8, [3 x i8], i32, i8, i8 }>
%class.GrVkImage = type { i32 (...)**, %struct.GrVkImageInfo, i32, %class.sk_sp.621, i8, %"class.GrVkImage::Resource"* }
%struct.GrVkImageInfo = type <{ %struct.VkImage_T*, %struct.GrVkAlloc, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], %struct.GrVkYcbcrConversionInfo, i32, [4 x i8] }>
%struct.GrVkAlloc = type <{ %struct.VkDeviceMemory_T*, i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%class.sk_sp.621 = type { %class.GrBackendSurfaceMutableStateImpl* }
%class.GrBackendSurfaceMutableStateImpl = type { %class.SkRefCnt.base, %class.GrBackendSurfaceMutableState, [4 x i8] }
%class.GrBackendSurfaceMutableState = type <{ %union.anon.622, i32, i8, [3 x i8] }>
%union.anon.622 = type { %class.GrVkSharedImageInfo }
%class.GrVkSharedImageInfo = type { %"struct.std::__1::atomic.623", %"struct.std::__1::atomic.627" }
%"struct.std::__1::atomic.623" = type { %"struct.std::__1::__atomic_base.624" }
%"struct.std::__1::__atomic_base.624" = type { %"struct.std::__1::__cxx_atomic_impl.625" }
%"struct.std::__1::__cxx_atomic_impl.625" = type { %"struct.std::__1::__cxx_atomic_base_impl.626" }
%"struct.std::__1::__cxx_atomic_base_impl.626" = type { i32 }
%"struct.std::__1::atomic.627" = type { %"struct.std::__1::__atomic_base.628" }
%"struct.std::__1::__atomic_base.628" = type { %"struct.std::__1::__atomic_base.629" }
%"struct.std::__1::__atomic_base.629" = type { %"struct.std::__1::__cxx_atomic_impl.630" }
%"struct.std::__1::__cxx_atomic_impl.630" = type { %"struct.std::__1::__cxx_atomic_base_impl.631" }
%"struct.std::__1::__cxx_atomic_base_impl.631" = type { i32 }
%"class.GrVkImage::Resource" = type <{ %class.GrTextureResource, %class.GrVkGpu*, %struct.VkImage_T*, %struct.GrVkAlloc, i32, [4 x i8] }>
%class.GrTextureResource = type { %class.GrManagedResource.base, %class.sk_sp.142 }
%class.sk_sp.632 = type { %class.GrVkImageView* }
%class.GrVkImageView = type opaque
%class.gr_sp.633 = type { %class.GrVkDescriptorSet* }
%class.GrResourceHandle.635 = type { i32 }
%class.sk_sp.634 = type { %class.GrVkRenderPass* }
%class.GrVkPipelineState = type <{ %class.sk_sp.507, %class.GrResourceHandle, [4 x i8], %class.SkSTArray.592, %"struct.GrVkPipelineState::RenderTargetState", %struct.GrGLSLBuiltinUniformHandles, [4 x i8], %"class.std::__1::unique_ptr.637", %"class.std::__1::unique_ptr.644", %"class.std::__1::vector.650", %class.GrVkPipelineStateDataManager, i32, [4 x i8] }>
%"struct.GrVkPipelineState::RenderTargetState" = type { %struct.SkISize, i32 }
%struct.GrGLSLBuiltinUniformHandles = type { %class.GrResourceHandle.636, %class.GrResourceHandle.636 }
%class.GrResourceHandle.636 = type { i32 }
%"class.std::__1::unique_ptr.637" = type { %"class.std::__1::__compressed_pair.638" }
%"class.std::__1::__compressed_pair.638" = type { %"struct.std::__1::__compressed_pair_elem.639" }
%"struct.std::__1::__compressed_pair_elem.639" = type { %class.GrGLSLGeometryProcessor* }
%class.GrGLSLGeometryProcessor = type { i32 (...)**, %class.SkTArray.640 }
%class.SkTArray.640 = type { %"struct.GrGLSLGeometryProcessor::TransformInfo"*, i64 }
%"struct.GrGLSLGeometryProcessor::TransformInfo" = type { %class.GrShaderVar, %class.GrShaderVar, %class.GrFragmentProcessor* }
%class.GrShaderVar = type { i32, i32, i32, %class.SkString, %class.SkString, %class.SkString }
%class.SkString = type { %class.sk_sp }
%class.sk_sp = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.216, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray.216 = type { %class.SkAlignedSTStorage.217, %class.SkTArray.218 }
%class.SkAlignedSTStorage.217 = type { [8 x i8] }
%class.SkTArray.218 = type { %"class.std::__1::unique_ptr.213"*, i64 }
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.644" = type { %"class.std::__1::__compressed_pair.645" }
%"class.std::__1::__compressed_pair.645" = type { %"struct.std::__1::__compressed_pair_elem.646" }
%"struct.std::__1::__compressed_pair_elem.646" = type { %class.GrGLSLXferProcessor* }
%class.GrGLSLXferProcessor = type { i32 (...)**, %class.GrResourceHandle.636, %class.GrResourceHandle.636 }
%"class.std::__1::vector.650" = type { %"class.std::__1::__vector_base.651" }
%"class.std::__1::__vector_base.651" = type { %"class.std::__1::unique_ptr.652"*, %"class.std::__1::unique_ptr.652"*, %"class.std::__1::__compressed_pair.659" }
%"class.std::__1::unique_ptr.652" = type { %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %class.GrGLSLFragmentProcessor* }
%class.GrGLSLFragmentProcessor = type { i32 (...)**, %class.SkTArray.39, %class.SkTArray.655 }
%class.SkTArray.39 = type { %class.SkString*, i64 }
%class.SkTArray.655 = type { %"class.std::__1::unique_ptr.652"*, i64 }
%"class.std::__1::__compressed_pair.659" = type { %"struct.std::__1::__compressed_pair_elem.660" }
%"struct.std::__1::__compressed_pair_elem.660" = type { %"class.std::__1::unique_ptr.652"* }
%class.GrVkPipelineStateDataManager = type <{ %class.GrUniformDataManager.base, [7 x i8], %class.sk_sp.295, i8, [7 x i8] }>
%class.GrUniformDataManager.base = type <{ %class.GrGLSLProgramDataManager, i32, [4 x i8], %class.SkTArray.664, %class.SkAutoMalloc, i8 }>
%class.GrGLSLProgramDataManager = type { i32 (...)** }
%class.SkTArray.664 = type { %"struct.GrUniformDataManager::Uniform"*, i64 }
%"struct.GrUniformDataManager::Uniform" = type { i32 }
%class.SkAutoMalloc = type { %"class.std::__1::unique_ptr.665", i64 }
%"class.std::__1::unique_ptr.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.667" }
%"struct.std::__1::__compressed_pair_elem.667" = type { i8* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.266", %"class.std::__1::unique_ptr.272", %class.sk_sp.278, %"class.std::__1::unique_ptr.279", %"class.std::__1::unique_ptr.285", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.291", %"class.std::__1::unique_ptr.304", %"class.std::__1::unique_ptr.310" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.17", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.260" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.2 }
%class.sk_sp.2 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type <{ %class.SkNVRefCnt, i32, %struct.GrContextOptions, i32, [4 x i8], %class.sk_sp.3, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.6", %class.sk_sp.12, %"struct.std::__1::atomic.13", [7 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.GrContextOptions = type { i8, i32, i32, i32, %class.SkExecutor*, i8, i8, i8, i8, i8, i64, float, float, i32, i8, i8, i32, i32, i8, i8, i32, %"class.GrContextOptions::PersistentCache"*, i32, %"class.GrContextOptions::ShaderErrorHandler"*, i32, i32, i8, i8, %class.GrDriverBugWorkarounds }
%class.SkExecutor = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrTextBlobCache* }
%class.GrTextBlobCache = type opaque
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %class.GrThreadSafeCache* }
%class.GrThreadSafeCache = type opaque
%class.sk_sp.12 = type { %class.GrThreadSafePipelineBuilder* }
%class.GrThreadSafePipelineBuilder = type { %class.SkRefCnt.base, %"class.GrThreadSafePipelineBuilder::Stats", [3 x i8] }
%"struct.std::__1::atomic.13" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl.15" }
%"struct.std::__1::__cxx_atomic_impl.15" = type { %"struct.std::__1::__cxx_atomic_base_impl.16" }
%"struct.std::__1::__cxx_atomic_base_impl.16" = type { i8 }
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray.20, %class.SkTHashMap, %class.SkTHashMap.28, %class.SkTArray.37, %class.SkTArray.39, i32, i8, [3 x i8] }>
%class.SkTArray.20 = type { %"class.std::__1::unique_ptr.21"*, i64 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.39, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.22" }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.28 = type { %class.SkTHashTable.29 }
%class.SkTHashTable.29 = type { i32, i32, %class.SkAutoTArray.30 }
%class.SkAutoTArray.30 = type { %"class.std::__1::unique_ptr.31" }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.742" }
%"struct.std::__1::pair.742" = type { i32, %class.SkTArray.743* }
%class.SkTArray.743 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.37 = type { %"class.std::__1::unique_ptr.38"*, i64 }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.744" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.745" }
%"struct.std::__1::__compressed_pair_elem.745" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.743, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.49" }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.52 }
%class.SkFibBlockSizes.52 = type { i32 }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type { %class.GrRecordingContext*, %"struct.GrPathRendererChain::Options", %class.sk_sp.59, %class.SkTArray.68, %class.GrOpsTask*, %class.SkSTArray.225, %class.SkSTArray.228, %"class.std::__1::unique_ptr.230", %class.sk_sp.246, %class.GrTokenTracker, i8, i8, %class.SkTArray.247, %class.GrHashMapWithCache }
%"struct.GrPathRendererChain::Options" = type { i8, i32 }
%class.sk_sp.59 = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef, [4 x i8], %"class.std::__1::unique_ptr.60", i32, [4 x i8] }>
%class.GrNonAtomicRef = type { i32 }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.63, i8, [7 x i8] }>
%class.sk_sp.63 = type { %class.GrCpuBuffer* }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.64, i8*, i64 }
%class.GrNonAtomicRef.64 = type { i32 }
%class.SkTArray.68 = type { %class.sk_sp.69*, i64 }
%class.sk_sp.69 = type { %class.GrRenderTask* }
%class.GrRenderTask = type { %class.SkRefCnt.base, %class.GrRenderTask*, %class.GrRenderTask*, %class.SkSTArray, %class.SkTArray.192, i32, i32, %class.SkSTArray.199, %class.SkSTArray.199, %class.GrTextureResolveRenderTask* }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.70 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.70 = type { %class.sk_sp.71*, i64 }
%class.sk_sp.71 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.72, %class.sk_sp.73, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function.147", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.187" }
%class.SkNVRefCnt.72 = type { %"struct.std::__1::atomic" }
%class.sk_sp.73 = type { %class.GrSurface* }
%class.GrBackendFormat = type { i32, i8, %union.anon.144, i32, [4 x i8] }
%union.anon.144 = type { %struct.anon.145 }
%struct.anon.145 = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%"class.std::__1::function.147" = type { %"class.std::__1::__function::__policy_func.151" }
%"class.std::__1::__function::__policy_func.151" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.152", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker.152" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.73, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.3, %class.sk_sp.186, %class.sk_sp.186 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.161, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.177, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.153 }
%class.SkTHashTable.153 = type { i32, i32, %class.SkAutoTArray.154 }
%class.SkAutoTArray.154 = type { %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.161 = type { %class.SkTHashTable.162 }
%class.SkTHashTable.162 = type { i32, i32, %class.SkAutoTArray.163 }
%class.SkAutoTArray.163 = type { %"class.std::__1::unique_ptr.164" }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.170, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.170 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.176, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.176 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.177 = type { %class.SkTHashTable.178 }
%class.SkTHashTable.178 = type { i32, i32, %class.SkAutoTArray.179 }
%class.SkAutoTArray.179 = type { %"class.std::__1::unique_ptr.180" }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%class.sk_sp.186 = type { %class.GrGpuBuffer* }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%class.SkTArray.192 = type { %class.GrTextureProxy**, i64 }
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.193", %class.GrSurfaceProxy }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%class.SkSTArray.199 = type { %class.SkAlignedSTStorage.200, %class.SkTArray.201 }
%class.SkAlignedSTStorage.200 = type { [8 x i8] }
%class.SkTArray.201 = type { %class.GrRenderTask**, i64 }
%class.GrTextureResolveRenderTask = type opaque
%class.GrOpsTask = type { %class.GrRenderTask, %class.GrAuditTrail*, i8, %class.GrSwizzle, i32, i32, %"struct.std::__1::array", i32, i8, i32, %struct.SkIRect, i32, i32, %class.SkSTArray.202, %class.sk_sp.222, %class.SkTArray.224, %struct.SkRect, %struct.SkIRect }
%"struct.std::__1::array" = type { [4 x float] }
%class.SkSTArray.202 = type { %class.SkAlignedSTStorage.203, %class.SkTArray.204 }
%class.SkAlignedSTStorage.203 = type { [2000 x i8] }
%class.SkTArray.204 = type { %"class.GrOpsTask::OpChain"*, i64 }
%"class.GrOpsTask::OpChain" = type { %"class.GrOpsTask::OpChain::List", %"class.GrProcessorSet::Analysis", [4 x i8], %"class.GrXferProcessor::DstProxyView", %class.GrAppliedClip*, %struct.SkRect }
%"class.GrOpsTask::OpChain::List" = type { %"class.std::__1::unique_ptr.205", %class.GrOp* }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %class.GrOp* }
%class.GrOp = type { i32 (...)**, %"class.std::__1::unique_ptr.205", %class.GrOp*, i16, i16, i32, %struct.SkRect }
%"class.GrProcessorSet::Analysis" = type { i16, [2 x i8] }
%"class.GrXferProcessor::DstProxyView" = type { %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8] }
%class.GrSurfaceProxyView = type <{ %class.sk_sp.71, i32, %class.GrSwizzle, [2 x i8] }>
%struct.SkIPoint = type { i32, i32 }
%class.GrAppliedClip = type { %class.GrAppliedHardClip, %"class.std::__1::unique_ptr.213" }
%class.GrAppliedHardClip = type <{ %class.GrScissorState, %class.GrWindowRectsState, i32, [4 x i8] }>
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.211 }
%union.anon.211 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef.212, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef.212 = type { i32 }
%class.sk_sp.222 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt.223, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt.223 = type { %"struct.std::__1::atomic" }
%class.SkTArray.224 = type { %class.GrSurfaceProxy**, i64 }
%class.SkSTArray.225 = type { %class.SkAlignedSTStorage.226, %class.SkTArray.227 }
%class.SkAlignedSTStorage.226 = type { [32 x i8] }
%class.SkTArray.227 = type { i32*, i64 }
%class.SkSTArray.228 = type { %class.SkAlignedSTStorage.229, %class.SkTArray.68 }
%class.SkAlignedSTStorage.229 = type { [32 x i8] }
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %class.GrPathRendererChain* }
%class.GrPathRendererChain = type { %class.SkSTArray.233, %"class.std::__1::unique_ptr.237", %class.GrPathRenderer* }
%class.SkSTArray.233 = type { %class.SkAlignedSTStorage.234, %class.SkTArray.235 }
%class.SkAlignedSTStorage.234 = type { [64 x i8] }
%class.SkTArray.235 = type { %class.sk_sp.236*, i64 }
%class.sk_sp.236 = type { %class.GrPathRenderer* }
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %class.GrCoverageCountingPathRenderer* }
%class.GrCoverageCountingPathRenderer = type opaque
%class.GrPathRenderer = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.246 = type { %class.GrSoftwarePathRenderer* }
%class.GrSoftwarePathRenderer = type opaque
%class.GrTokenTracker = type { %class.GrDeferredUploadToken, %class.GrDeferredUploadToken }
%class.GrDeferredUploadToken = type { i64 }
%class.SkTArray.247 = type { %class.GrOnFlushCallbackObject**, i64 }
%class.GrOnFlushCallbackObject = type opaque
%class.GrHashMapWithCache = type { %class.SkTHashMap.248, i32, %class.GrRenderTask** }
%class.SkTHashMap.248 = type { %class.SkTHashTable.249 }
%class.SkTHashTable.249 = type { i32, i32, %class.SkAutoTArray.250 }
%class.SkAutoTArray.250 = type { %"class.std::__1::unique_ptr.251" }
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %class.GrProxyProvider* }
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.272" = type { %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.278 = type { %class.GrGpu* }
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %class.GrResourceCache* }
%"class.std::__1::unique_ptr.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %class.GrResourceProvider* }
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.291" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type <{ %"class.SkMessageBus<GrClientMappedBufferManager::BufferFinishedMessage, GrDirectContext::DirectContextID, false>::Inbox", %"class.std::__1::forward_list", i8, [7 x i8] }>
%"class.SkMessageBus<GrClientMappedBufferManager::BufferFinishedMessage, GrDirectContext::DirectContextID, false>::Inbox" = type <{ %class.SkTArray.294, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.294 = type { %"struct.GrClientMappedBufferManager::BufferFinishedMessage"*, i64 }
%"struct.GrClientMappedBufferManager::BufferFinishedMessage" = type <{ %class.sk_sp.295, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type opaque
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%struct.GrVkBackendContext = type <{ %struct.VkInstance_T*, %struct.VkPhysicalDevice_T*, %struct.VkDevice_T*, %struct.VkQueue_T*, i32, i32, i32, i32, i32, [4 x i8], %class.GrVkExtensions*, i32, [4 x i8], %struct.VkPhysicalDeviceFeatures*, %struct.VkPhysicalDeviceFeatures2*, %class.sk_sp.1, %"class.std::__1::function", i8, i8, [6 x i8] }>
%class.GrVkExtensions = type { %class.SkTArray }
%class.SkTArray = type { %"struct.GrVkExtensions::Info"*, i64 }
%"struct.GrVkExtensions::Info" = type <{ %class.SkString, i32, [4 x i8] }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker" = type { void ()* (%"union.std::__1::__function::__policy_storage"*, i8*, %struct.VkInstance_T*, %struct.VkDevice_T*)* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"struct.GrOpsRenderPass::LoadAndStoreInfo" = type { i32, i32, %"struct.std::__1::array" }
%"struct.GrOpsRenderPass::StencilLoadAndStoreInfo" = type { i32, i32 }
%class.GrVkRenderTarget = type { %class.GrRenderTarget.base, %class.sk_sp.620, %class.sk_sp.620, %class.sk_sp.620, [32 x %class.sk_sp.672], %class.GrVkDescriptorSet*, %class.sk_sp.619, %class.GrSurface }
%class.GrRenderTarget.base = type <{ i32 (...)**, %class.sk_sp.618, %class.sk_sp.618, i32 }>
%class.sk_sp.672 = type { %class.GrVkFramebuffer* }
%"class.skia::tracing_internals::ScopedTracer" = type { %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data" }
%"struct.skia::tracing_internals::ScopedTracer::Data" = type { i8*, i8*, i64 }
%class.SkEventTracer = type { i32 (...)** }
%class.sk_sp.678 = type { %class.GrVkBuffer* }
%class.GrVkBuffer = type { %class.GrGpuBuffer, %struct.VkBuffer_T*, %struct.GrVkAlloc, %class.GrVkDescriptorSet* }
%struct.GrMipLevel = type { i8*, i64, %class.sk_sp.74 }
%class.SkTArray.697 = type { i64*, i64 }
%"struct.GrStagingBufferManager::Slice" = type { %class.GrGpuBuffer*, i64, i8* }
%class.SkTArray.698 = type { %struct.VkBufferImageCopy*, i64 }
%class.GrVkCommandBuffer = type <{ i32 (...)**, %class.SkSTArray.521, %class.SkSTArray.525, %class.SkSTArray.528, %class.SkSTArray.532, i8, i8, [6 x i8], %class.GrVkRenderPass*, %struct.VkCommandBuffer_T*, [2 x %struct.VkBuffer_T*], %struct.VkBuffer_T*, %struct.VkViewport, %struct.VkRect2D, [4 x float], %class.SkSTArray.536, %class.SkSTArray.539, i8, [3 x i8], i32, i32, i8, [3 x i8] }>
%class.sk_sp.699 = type { %class.GrTexture* }
%class.sk_sp.701 = type { %class.GrVkTextureRenderTarget* }
%class.GrVkTextureRenderTarget = type { %class.GrVkTexture.base, %class.GrVkRenderTarget.base, %class.GrSurface }
%class.GrVkTexture.base = type { %class.GrTexture.base, %class.sk_sp.620, %class.SkLRUCache.679 }
%class.GrTexture.base = type <{ i32 (...)**, i32, i32, i32 }>
%class.SkLRUCache.679 = type { i32, %class.SkTHashTable.680, %class.SkTInternalLList.688 }
%class.SkTHashTable.680 = type { i32, i32, %class.SkAutoTArray.681 }
%class.SkAutoTArray.681 = type { %"class.std::__1::unique_ptr.682" }
%"class.std::__1::unique_ptr.682" = type { %"class.std::__1::__compressed_pair.683" }
%"class.std::__1::__compressed_pair.683" = type { %"struct.std::__1::__compressed_pair_elem.684" }
%"struct.std::__1::__compressed_pair_elem.684" = type { %"struct.SkTHashTable<SkLRUCache<const GrSamplerState, std::__1::unique_ptr<GrVkTexture::DescriptorCacheEntry, std::__1::default_delete<GrVkTexture::DescriptorCacheEntry> >, GrVkTexture::SamplerHash>::Entry *, const GrSamplerState, SkLRUCache<const GrSamplerState, std::__1::unique_ptr<GrVkTexture::DescriptorCacheEntry, std::__1::default_delete<GrVkTexture::DescriptorCacheEntry> >, GrVkTexture::SamplerHash>::Traits>::Slot"* }
%"struct.SkTHashTable<SkLRUCache<const GrSamplerState, std::__1::unique_ptr<GrVkTexture::DescriptorCacheEntry, std::__1::default_delete<GrVkTexture::DescriptorCacheEntry> >, GrVkTexture::SamplerHash>::Entry *, const GrSamplerState, SkLRUCache<const GrSamplerState, std::__1::unique_ptr<GrVkTexture::DescriptorCacheEntry, std::__1::default_delete<GrVkTexture::DescriptorCacheEntry> >, GrVkTexture::SamplerHash>::Traits>::Slot" = type opaque
%class.SkTInternalLList.688 = type { %"struct.SkLRUCache<const GrSamplerState, std::__1::unique_ptr<GrVkTexture::DescriptorCacheEntry, std::__1::default_delete<GrVkTexture::DescriptorCacheEntry> >, GrVkTexture::SamplerHash>::Entry"*, %"struct.SkLRUCache<const GrSamplerState, std::__1::unique_ptr<GrVkTexture::DescriptorCacheEntry, std::__1::default_delete<GrVkTexture::DescriptorCacheEntry> >, GrVkTexture::SamplerHash>::Entry"* }
%"struct.SkLRUCache<const GrSamplerState, std::__1::unique_ptr<GrVkTexture::DescriptorCacheEntry, std::__1::default_delete<GrVkTexture::DescriptorCacheEntry> >, GrVkTexture::SamplerHash>::Entry" = type opaque
%class.GrVkRenderTarget.base = type { %class.GrRenderTarget.base, %class.sk_sp.620, %class.sk_sp.620, %class.sk_sp.620, [32 x %class.sk_sp.672], %class.GrVkDescriptorSet*, %class.sk_sp.619 }
%class.sk_sp.700 = type { %class.GrVkTexture* }
%class.GrVkTexture = type { %class.GrTexture.base, %class.sk_sp.620, %class.SkLRUCache.679, %class.GrSurface }
%class.SkSTArray.702 = type { %class.SkAlignedSTStorage.703, %class.SkTArray.704 }
%class.SkAlignedSTStorage.703 = type { [20 x i8] }
%class.SkTArray.704 = type { %struct.VkImageSubresourceRange*, i64 }
%class.GrBackendTexture = type { i8, i32, i32, i8, i32, %union.anon.705, %class.sk_sp.621 }
%union.anon.705 = type { %class.GrGLBackendTextureInfo, [120 x i8] }
%class.GrGLBackendTextureInfo = type { %struct.GrGLTextureInfo, %class.GrGLTextureParameters* }
%struct.GrGLTextureInfo = type { i32, i32, i32 }
%class.GrGLTextureParameters = type { %class.SkNVRefCnt.706, %"struct.GrGLTextureParameters::SamplerOverriddenState", %"struct.GrGLTextureParameters::NonsamplerState", i64 }
%class.SkNVRefCnt.706 = type { %"struct.std::__1::atomic" }
%"struct.GrGLTextureParameters::SamplerOverriddenState" = type <{ i32, i32, i32, i32, float, float, i8, [3 x i8] }>
%"struct.GrGLTextureParameters::NonsamplerState" = type <{ i32, i32, i8, [3 x i8] }>
%class.sk_sp.708 = type { %class.GrRenderTarget* }
%class.GrBackendRenderTarget = type { i8, i8, i32, i32, i32, i32, i32, %union.anon.707, %class.sk_sp.621 }
%union.anon.707 = type { %struct.GrGLFramebufferInfo, [136 x i8] }
%struct.GrGLFramebufferInfo = type { i32, i32 }
%class.sk_sp.709 = type { %class.GrVkRenderTarget* }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.710, i32, i32 }
%class.sk_sp.710 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.711, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.711 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.GrVkDrawableInfo = type { %struct.VkCommandBuffer_T*, i32, %struct.VkRenderPass_T*, i32, %struct.VkRect2D*, %struct.VkImage_T* }
%class.GrPixmap = type { %class.GrPixmapBase }
%class.GrPixmapBase = type { i8*, i64, %class.GrImageInfo, %class.sk_sp.74 }
%class.GrImageInfo = type { %class.GrColorInfo, %struct.SkISize }
%class.GrColorInfo = type { %class.sk_sp.710, %class.sk_sp.712, i32, i32 }
%class.sk_sp.712 = type { %class.GrColorSpaceXform* }
%class.GrColorSpaceXform = type { %class.SkRefCnt.base, %struct.SkColorSpaceXformSteps }
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%"struct.GrVkImage::ImageDesc" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8] }>
%class.GrProgramDesc = type <{ %class.SkSTArray.713, i32, [4 x i8] }>
%class.SkSTArray.713 = type { %class.SkAlignedSTStorage.714, %class.SkTArray.227 }
%class.SkAlignedSTStorage.714 = type { [132 x i8] }
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.715, %class.SkAutoSTArray, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.715 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.716, i8, i8, [2 x i8] }>
%class.GrNonAtomicRef.716 = type { i32 }
%class.SkAutoSTArray = type { i32, %"class.std::__1::unique_ptr.717"*, [24 x i8] }
%"class.std::__1::unique_ptr.717" = type { %"class.std::__1::__compressed_pair.718" }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.719" }
%"struct.std::__1::__compressed_pair_elem.719" = type { %class.GrFragmentProcessor* }
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.723, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.723 = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%class.GrSemaphore = type { i32 (...)** }
%class.GrVkSemaphore = type { %class.GrSemaphore, %"class.GrVkSemaphore::Resource"* }
%class.GrBackendSemaphore = type <{ i32, [4 x i8], %union.anon.736, i64, i8, [7 x i8] }>
%union.anon.736 = type { %struct.__GLsync* }
%struct.__GLsync = type opaque
%class.GrRingBuffer = type opaque

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZN7GrVkGpu20stagingBufferManagerEv = comdat any

$_ZN5GrGpu18uniformsRingBufferEv = comdat any

$_ZNK7GrVkGpu12isDeviceLostEv = comdat any

$_ZN7GrVkGpu16checkFinishProcsEv = comdat any

$_ZN7GrVkGpu29releaseUnlockedBackendObjectsEv = comdat any

$_ZN5GrGpu16precompileShaderERK6SkDataS2_ = comdat any

$_ZN7GrVkGpu25getPreferredStencilFormatERK15GrBackendFormat = comdat any

$_ZN5GrGpu30insertManualFramebufferBarrierEv = comdat any

$_ZN5GrGpu14onResetContextEj = comdat any

$_ZN5GrGpu22onResetTextureBindingsEv = comdat any

$_ZN8SkTArrayI5sk_spI18GrRefCntedCallbackELb0EE12checkReallocEiNS3_11ReallocTypeE = comdat any

$_ZN8SkTArrayI5sk_spIK8GrBufferELb0EE12checkReallocEiNS4_11ReallocTypeE = comdat any

$_ZN8SkTArrayI5gr_spIK9GrSurfaceXadL_ZNK7GrIORefI13GrGpuResourceE21addCommandBufferUsageEvEEXadL_ZNKS5_24removeCommandBufferUsageEvEEELb0EE12checkReallocEiNS7_11ReallocTypeE = comdat any

$_ZN8SkTArrayI17VkBufferImageCopyLb0EE12checkReallocEiNS1_11ReallocTypeE = comdat any

$_ZN8SkTArrayImLb0EE12checkReallocEiNS0_11ReallocTypeE = comdat any

$_ZN8SkTArrayIPN13GrVkSemaphore8ResourceELb0EE12checkReallocEiNS3_11ReallocTypeE = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN10SkDrawable14GpuDrawHandlerENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE = comdat any

$_ZN8SkTArrayI23VkImageSubresourceRangeLb0EE12checkReallocEiNS1_11ReallocTypeE = comdat any

@.str = private unnamed_addr constant [27 x i8] c"vkEnumerateInstanceVersion\00", align 1
@.str.1 = private unnamed_addr constant [46 x i8] c"../../third_party/skia/src/gpu/vk/GrVkGpu.cpp\00", align 1
@.str.2 = private unnamed_addr constant [47 x i8] c"Failed to enumerate instance version. Err: %d\0A\00", align 1
@.str.3 = private unnamed_addr constant [30 x i8] c"vkGetPhysicalDeviceProperties\00", align 1
@__const._ZN7GrVkGpu4MakeERK18GrVkBackendContextRK16GrContextOptionsP15GrDirectContext.physDeviceProperties = private unnamed_addr constant { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], [4 x i8], { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, [4 x i8], i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, [4 x i8], i64, i64, i64 }, %struct.VkPhysicalDeviceSparseProperties, [4 x i8] } { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, [256 x i8] cx i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA", [4 x i8] c"\AA\AA\AA\AA", { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, [4 x i8], i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, [4 x i8], i64, i64, i64 } { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, i64 -6148914691236517206, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, [3 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766], i32 -1431655766, [3 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766], i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, [2 x i32] [i32 -1431655766, i32 -1431655766], [2 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, [2 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [2 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206 }, %struct.VkPhysicalDeviceSparseProperties { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA" }, align 8
@.str.4 = private unnamed_addr constant [17 x i8] c"VK_KHR_swapchain\00", align 1
@_ZTV7GrVkGpu = hidden unnamed_addr constant { [61 x i8*] } { [61 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrVkGpu*)* @_ZN7GrVkGpuD2Ev to i8*), i8* bitcast (void (%class.GrVkGpu*)* @_ZN7GrVkGpuD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (%class.GrStagingBufferManager* (%class.GrVkGpu*)* @_ZN7GrVkGpu20stagingBufferManagerEv to i8*), i8* bitcast (%class.GrRingBuffer* (%class.GrGpu*)* @_ZN5GrGpu18uniformsRingBufferEv to i8*), i8* bitcast (void (%class.GrVkGpu*, i32)* @_ZN7GrVkGpu10disconnectEN5GrGpu14DisconnectTypeE to i8*), i8* bitcast (%class.GrThreadSafePipelineBuilder* (%class.GrVkGpu*)* @_ZN7GrVkGpu15pipelineBuilderEv to i8*), i8* bitcast (void (%class.sk_sp.12*, %class.GrVkGpu*)* @_ZN7GrVkGpu18refPipelineBuilderEv to i8*), i8* bitcast (i1 (%class.GrVkGpu*)* @_ZNK7GrVkGpu12isDeviceLostEv to i8*), i8* bitcast (void (%class.GrVkGpu*, %class.GrOpsRenderPass*)* @_ZN7GrVkGpu6submitEP15GrOpsRenderPass to i8*), i8* bitcast (i64 (%class.GrVkGpu*)* @_ZN7GrVkGpu11insertFenceEv to i8*), i8* bitcast (i1 (%class.GrVkGpu*, i64)* @_ZN7GrVkGpu9waitFenceEm to i8*), i8* bitcast (void (%class.GrVkGpu*, i64)* @_ZNK7GrVkGpu11deleteFenceEm to i8*), i8* bitcast (%class.GrSemaphore* (%class.GrVkGpu*, i1)* @_ZN7GrVkGpu13makeSemaphoreEb to i8*), i8* bitcast (%class.GrSemaphore* (%class.GrVkGpu*, %class.GrBackendSemaphore*, i32, i32)* @_ZN7GrVkGpu20wrapBackendSemaphoreERK18GrBackendSemaphoreN18GrResourceProvider17SemaphoreWrapTypeE15GrWrapOwnership to i8*), i8* bitcast (void (%class.GrVkGpu*, %class.GrSemaphore*)* @_ZN7GrVkGpu15insertSemaphoreEP11GrSemaphore to i8*), i8* bitcast (void (%class.GrVkGpu*, %class.GrSemaphore*)* @_ZN7GrVkGpu13waitSemaphoreEP11GrSemaphore to i8*), i8* bitcast (void (%class.GrVkGpu*, void (i8*)*, i8*)* @_ZN7GrVkGpu15addFinishedProcEPFvPvES0_ to i8*), i8* bitcast (void (%class.GrVkGpu*)* @_ZN7GrVkGpu16checkFinishProcsEv to i8*), i8* bitcast (void (%class.GrVkGpu*)* @_ZN7GrVkGpu24finishOutstandingGpuWorkEv to i8*), i8* bitcast (void (%class.GrVkGpu*, %class.sk_sp.295*)* @_ZN7GrVkGpu21takeOwnershipOfBufferE5sk_spI11GrGpuBufferE to i8*), i8* bitcast (%class.GrSemaphore* (%class.GrVkGpu*, %class.GrTexture*)* @_ZN7GrVkGpu34prepareTextureForCrossContextUsageEP9GrTexture to i8*), i8* bitcast (void (%class.GrVkGpu*)* @_ZN7GrVkGpu29releaseUnlockedBackendObjectsEv to i8*), i8* bitcast (i1 (%class.GrVkGpu*, %class.GrBackendTexture*, %class.GrBackendSurfaceMutableState*, %class.GrBackendSurfaceMutableState*, %class.sk_sp.142*)* @_ZN7GrVkGpu22setBackendTextureStateERK16GrBackendTextureRK28GrBackendSurfaceMutableStatePS3_5sk_spI18GrRefCntedCallbackE to i8*), i8* bitcast (i1 (%class.GrVkGpu*, %class.GrBackendRenderTarget*, %class.GrBackendSurfaceMutableState*, %class.GrBackendSurfaceMutableState*, %class.sk_sp.142*)* @_ZN7GrVkGpu27setBackendRenderTargetStateERK21GrBackendRenderTargetRK28GrBackendSurfaceMutableStatePS3_5sk_spI18GrRefCntedCallbackE to i8*), i8* bitcast (void (%class.GrVkGpu*, %class.GrBackendTexture*)* @_ZN7GrVkGpu20deleteBackendTextureERK16GrBackendTexture to i8*), i8* bitcast (i1 (%class.GrVkGpu*, %class.GrProgramDesc*, %class.GrProgramInfo*)* @_ZN7GrVkGpu7compileERK13GrProgramDescRK13GrProgramInfo to i8*), i8* bitcast (i1 (%class.GrGpu*, %class.SkData*, %class.SkData*)* @_ZN5GrGpu16precompileShaderERK6SkDataS2_ to i8*), i8* bitcast (void (%class.sk_sp.618*, %class.GrVkGpu*, %class.GrBackendFormat*, i64, i32)* @_ZN7GrVkGpu21makeStencilAttachmentERK15GrBackendFormat7SkISizei to i8*), i8* bitcast (void (%class.GrBackendFormat*, %class.GrVkGpu*, %class.GrBackendFormat*)* @_ZN7GrVkGpu25getPreferredStencilFormatERK15GrBackendFormat to i8*), i8* bitcast (void (%class.sk_sp.618*, %class.GrVkGpu*, i64, %class.GrBackendFormat*, i32, i1)* @_ZN7GrVkGpu18makeMSAAAttachmentE7SkISizeRK15GrBackendFormati11GrProtected to i8*), i8* bitcast (void (%class.GrVkGpu*)* @_ZN7GrVkGpu24storeVkPipelineCacheDataEv to i8*), i8* bitcast (void (%class.GrGpu*)* @_ZN5GrGpu30insertManualFramebufferBarrierEv to i8*), i8* bitcast (void (%class.GrVkGpu*, %class.GrRenderTarget*, i32)* @_ZN7GrVkGpu11xferBarrierEP14GrRenderTarget17GrXferBarrierType to i8*), i8* bitcast (void (%class.GrBackendTexture*, %class.GrVkGpu*, i64, %class.GrBackendFormat*, i1, i1, i1)* @_ZN7GrVkGpu22onCreateBackendTextureE7SkISizeRK15GrBackendFormat12GrRenderable11GrMipmapped11GrProtected to i8*), i8* bitcast (void (%class.GrBackendTexture*, %class.GrVkGpu*, i64, %class.GrBackendFormat*, i1, i1)* @_ZN7GrVkGpu32onCreateCompressedBackendTextureE7SkISizeRK15GrBackendFormat11GrMipmapped11GrProtected to i8*), i8* bitcast (i1 (%class.GrVkGpu*, %class.GrBackendTexture*, %class.sk_sp.142*, <2 x float>, <2 x float>)* @_ZN7GrVkGpu21onClearBackendTextureERK16GrBackendTexture5sk_spI18GrRefCntedCallbackENSt3__15arrayIfLm4EEE to i8*), i8* bitcast (i1 (%class.GrVkGpu*, %class.GrBackendTexture*, %class.sk_sp.142*, i8*, i64)* @_ZN7GrVkGpu32onUpdateCompressedBackendTextureERK16GrBackendTexture5sk_spI18GrRefCntedCallbackEPKvm to i8*), i8* bitcast (void (%class.GrGpu*, i32)* @_ZN5GrGpu14onResetContextEj to i8*), i8* bitcast (void (%class.GrGpu*)* @_ZN5GrGpu22onResetTextureBindingsEv to i8*), i8* bitcast (void (%class.sk_sp.699*, %class.GrVkGpu*, i64, %class.GrBackendFormat*, i1, i32, i1, i1, i32, i32)* @_ZN7GrVkGpu15onCreateTextureE7SkISizeRK15GrBackendFormat12GrRenderablei10SkBudgeted11GrProtectedij to i8*), i8* bitcast (void (%class.sk_sp.699*, %class.GrVkGpu*, i64, %class.GrBackendFormat*, i1, i1, i1, i8*, i64)* @_ZN7GrVkGpu25onCreateCompressedTextureE7SkISizeRK15GrBackendFormat10SkBudgeted11GrMipmapped11GrProtectedPKvm to i8*), i8* bitcast (void (%class.sk_sp.699*, %class.GrVkGpu*, %class.GrBackendTexture*, i32, i1, i32)* @_ZN7GrVkGpu20onWrapBackendTextureERK16GrBackendTexture15GrWrapOwnership15GrWrapCacheable8GrIOType to i8*), i8* bitcast (void (%class.sk_sp.699*, %class.GrVkGpu*, %class.GrBackendTexture*, i32, i1)* @_ZN7GrVkGpu30onWrapCompressedBackendTextureERK16GrBackendTexture15GrWrapOwnership15GrWrapCacheable to i8*), i8* bitcast (void (%class.sk_sp.699*, %class.GrVkGpu*, %class.GrBackendTexture*, i32, i32, i1)* @_ZN7GrVkGpu30onWrapRenderableBackendTextureERK16GrBackendTexturei15GrWrapOwnership15GrWrapCacheable to i8*), i8* bitcast (void (%class.sk_sp.708*, %class.GrVkGpu*, %class.GrBackendRenderTarget*)* @_ZN7GrVkGpu25onWrapBackendRenderTargetERK21GrBackendRenderTarget to i8*), i8* bitcast (void (%class.sk_sp.708*, %class.GrVkGpu*, %struct.SkImageInfo*, %struct.GrVkDrawableInfo*)* @_ZN7GrVkGpu37onWrapVulkanSecondaryCBAsRenderTargetERK11SkImageInfoRK16GrVkDrawableInfo to i8*), i8* bitcast (void (%class.sk_sp.295*, %class.GrVkGpu*, i64, i32, i32, i8*)* @_ZN7GrVkGpu14onCreateBufferEm15GrGpuBufferType15GrAccessPatternPKv to i8*), i8* bitcast (i1 (%class.GrVkGpu*, %class.GrSurface*, i64, i64, i32, i32, i8*, i64)* @_ZN7GrVkGpu12onReadPixelsEP9GrSurface7SkIRect11GrColorTypeS3_Pvm to i8*), i8* bitcast (i1 (%class.GrVkGpu*, %class.GrSurface*, i64, i64, i32, i32, %struct.GrMipLevel*, i32, i1)* @_ZN7GrVkGpu13onWritePixelsEP9GrSurface7SkIRect11GrColorTypeS3_PK10GrMipLevelib to i8*), i8* bitcast (i1 (%class.GrVkGpu*, %class.GrTexture*, i64, i64, i32, i32, %class.sk_sp.295*, i64, i64)* @_ZN7GrVkGpu18onTransferPixelsToEP9GrTexture7SkIRect11GrColorTypeS3_5sk_spI11GrGpuBufferEmm to i8*), i8* bitcast (i1 (%class.GrVkGpu*, %class.GrSurface*, i64, i64, i32, i32, %class.sk_sp.295*, i64)* @_ZN7GrVkGpu20onTransferPixelsFromEP9GrSurface7SkIRect11GrColorTypeS3_5sk_spI11GrGpuBufferEm to i8*), i8* bitcast (void (%class.GrVkGpu*, %class.GrRenderTarget*, %struct.SkIRect*)* @_ZN7GrVkGpu21onResolveRenderTargetEP14GrRenderTargetRK7SkIRect to i8*), i8* bitcast (i1 (%class.GrVkGpu*, %class.GrTexture*)* @_ZN7GrVkGpu24onRegenerateMipMapLevelsEP9GrTexture to i8*), i8* bitcast (i1 (%class.GrVkGpu*, %class.GrSurface*, %class.GrSurface*, %struct.SkIRect*, %struct.SkIPoint*)* @_ZN7GrVkGpu13onCopySurfaceEP9GrSurfaceS1_RK7SkIRectRK8SkIPoint to i8*), i8* bitcast (%class.GrOpsRenderPass* (%class.GrVkGpu*, %class.GrRenderTarget*, i1, %class.GrAttachment*, i32, %struct.SkIRect*, %"struct.GrOpsRenderPass::LoadAndStoreInfo"*, %"struct.GrOpsRenderPass::StencilLoadAndStoreInfo"*, %class.SkTArray.224*, i32)* @_ZN7GrVkGpu18onGetOpsRenderPassEP14GrRenderTargetbP12GrAttachment15GrSurfaceOriginRK7SkIRectRKN15GrOpsRenderPass16LoadAndStoreInfoERKNS8_23StencilLoadAndStoreInfoERK8SkTArrayIP14GrSurfaceProxyLb1EE18GrXferBarrierFlags to i8*), i8* bitcast (void (%class.GrVkGpu*, %class.GrSurfaceProxy**, i64, i32, %class.GrBackendSurfaceMutableState*)* @_ZN7GrVkGpu46prepareSurfacesForBackendAccessAndStateUpdatesE6SkSpanIP14GrSurfaceProxyEN9SkSurface20BackendSurfaceAccessEPK28GrBackendSurfaceMutableState to i8*), i8* bitcast (i1 (%class.GrVkGpu*, i1)* @_ZN7GrVkGpu13onSubmitToGpuEb to i8*), i8* bitcast (void (%class.GrVkGpu*)* @_ZN7GrVkGpu24onReportSubmitHistogramsEv to i8*)] }, align 8
@.str.5 = private unnamed_addr constant [29 x i8] c"disabled-by-default-skia.gpu\00", align 1
@__PRETTY_FUNCTION__._ZN7GrVkGpu19submitCommandBufferENS_9SyncQueueE = private unnamed_addr constant [54 x i8] c"bool GrVkGpu::submitCommandBuffer(GrVkGpu::SyncQueue)\00", align 1
@.str.6 = private unnamed_addr constant [49 x i8] c"Can't upload mipmap data to linear tiled texture\00", align 1
@_ZZN7GrVkGpu19uploadTexDataLinearEP14GrVkAttachment7SkIRect11GrColorTypePKvmE6subres = internal constant %struct.VkImageSubresource { i32 1, i32 0, i32 0 }, align 4
@_ZZN7GrVkGpu15onCreateTextureE7SkISizeRK15GrBackendFormat12GrRenderablei10SkBudgeted11GrProtectedijE15kZeroClearColor = internal constant %union.VkClearColorValue zeroinitializer, align 4
@.str.7 = private unnamed_addr constant [49 x i8] c"Trying to create mipmap for linear tiled texture\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"Failed to init image info\0A\00", align 1
@_ZZN7GrVkGpu24onReportSubmitHistogramsEvE24atomic_histogram_pointer = internal global %"struct.std::__1::atomic.187" zeroinitializer, align 8
@.str.9 = private unnamed_addr constant [39 x i8] c"Skia.VulkanMemoryAllocator.PercentUsed\00", align 1
@_ZZN7GrVkGpu24onReportSubmitHistogramsEvE24atomic_histogram_pointer_0 = internal global %"struct.std::__1::atomic.187" zeroinitializer, align 8
@.str.10 = private unnamed_addr constant [43 x i8] c"Skia.VulkanMemoryAllocator.AmountAllocated\00", align 1
@.str.11 = private unnamed_addr constant [50 x i8] c"Can't copy from protected memory to non-protected\00", align 1
@.str.12 = private unnamed_addr constant [89 x i8] c"Failed vulkan call. Error: %d,CreateFence(this->device(), &createInfo, nullptr, &fence)\0A\00", align 1
@.str.13 = private unnamed_addr constant [77 x i8] c"Failed vulkan call. Error: %d,QueueSubmit(this->queue(), 0, nullptr, fence)\0A\00", align 1
@.str.14 = private unnamed_addr constant [88 x i8] c"Failed vulkan call. Error: %d,WaitForFences(this->device(), 1, (VkFence*)&fence, 1, 0)\0A\00", align 1
@.str.15 = private unnamed_addr constant [39 x i8] c"../../third_party/skia/src/gpu/GrGpu.h\00", align 1
@.str.16 = private unnamed_addr constant [42 x i8] c"Manual framebuffer barrier not supported.\00", align 1
@_ZZN7GrVkGpu19submitCommandBufferENS_9SyncQueueEE28trace_event_unique_atomic379.0.0 = internal unnamed_addr global i64 0, align 8
@switch.table._ZN7GrVkGpu18onTransferPixelsToEP9GrTexture7SkIRect11GrColorTypeS3_5sk_spI11GrGpuBufferEmm = private unnamed_addr constant [31 x i64] [i64 0, i64 1, i64 2, i64 2, i64 4, i64 4, i64 4, i64 2, i64 4, i64 4, i64 4, i64 1, i64 2, i64 2, i64 8, i64 8, i64 16, i64 2, i64 4, i64 4, i64 8, i64 4, i64 16, i64 4, i64 3, i64 1, i64 2, i64 2, i64 2, i64 2, i64 2], align 8
@switch.table._ZN7GrVkGpu12onReadPixelsEP9GrSurface7SkIRect11GrColorTypeS3_Pvm = private unnamed_addr constant [30 x i64] [i64 1, i64 2, i64 2, i64 4, i64 4, i64 4, i64 2, i64 4, i64 4, i64 4, i64 1, i64 2, i64 2, i64 8, i64 8, i64 16, i64 2, i64 4, i64 4, i64 8, i64 4, i64 16, i64 4, i64 3, i64 1, i64 2, i64 2, i64 2, i64 2, i64 2], align 8

@_ZN7GrVkGpuC1EP15GrDirectContextRK18GrVkBackendContext5sk_spI8GrVkCapsES5_IK13GrVkInterfaceEjjS5_I19GrVkMemoryAllocatorE = hidden unnamed_addr alias void (%class.GrVkGpu*, %class.GrDirectContext*, %struct.GrVkBackendContext*, %class.sk_sp.494*, %class.sk_sp.350*, i32, i32, %class.sk_sp.1*), void (%class.GrVkGpu*, %class.GrDirectContext*, %struct.GrVkBackendContext*, %class.sk_sp.494*, %class.sk_sp.350*, i32, i32, %class.sk_sp.1*)* @_ZN7GrVkGpuC2EP15GrDirectContextRK18GrVkBackendContext5sk_spI8GrVkCapsES5_IK13GrVkInterfaceEjjS5_I19GrVkMemoryAllocatorE
@_ZN7GrVkGpuD1Ev = hidden unnamed_addr alias void (%class.GrVkGpu*), void (%class.GrVkGpu*)* @_ZN7GrVkGpuD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpu4MakeERK18GrVkBackendContextRK16GrContextOptionsP15GrDirectContext(%class.sk_sp.278* noalias nocapture sret, %struct.GrVkBackendContext* dereferenceable(136), %struct.GrContextOptions* dereferenceable(240), %class.GrDirectContext*) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.VkPhysicalDeviceProperties, align 8
  %7 = alloca %"class.std::__1::function", align 8
  %8 = alloca %class.GrVkExtensions, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %"class.std::__1::function", align 8
  %11 = alloca %"class.std::__1::function", align 8
  %12 = alloca %struct.VkPhysicalDeviceFeatures2, align 8
  %13 = alloca %struct.VkPhysicalDeviceFeatures2, align 8
  %14 = alloca %class.GrVkExtensions, align 8
  %15 = alloca i8*, align 8
  %16 = alloca %"class.std::__1::function", align 8
  %17 = alloca %class.sk_sp.1, align 8
  %18 = alloca %class.sk_sp.350, align 8
  %19 = alloca %class.sk_sp.494, align 8
  %20 = alloca %class.sk_sp.350, align 8
  %21 = alloca %class.sk_sp.1, align 8
  %22 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %1, i64 0, i32 0
  %23 = load %struct.VkInstance_T*, %struct.VkInstance_T** %22, align 8
  %24 = icmp eq %struct.VkInstance_T* %23, null
  br i1 %24, label %37, label %25

25:                                               ; preds = %4
  %26 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %1, i64 0, i32 1
  %27 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %26, align 8
  %28 = icmp eq %struct.VkPhysicalDevice_T* %27, null
  br i1 %28, label %37, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %1, i64 0, i32 2
  %31 = load %struct.VkDevice_T*, %struct.VkDevice_T** %30, align 8
  %32 = icmp eq %struct.VkDevice_T* %31, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %1, i64 0, i32 3
  %35 = load %struct.VkQueue_T*, %struct.VkQueue_T** %34, align 8
  %36 = icmp eq %struct.VkQueue_T* %35, null
  br i1 %36, label %37, label %39

37:                                               ; preds = %33, %29, %25, %4
  %38 = getelementptr inbounds %class.sk_sp.278, %class.sk_sp.278* %0, i64 0, i32 0
  store %class.GrGpu* null, %class.GrGpu** %38, align 8
  br label %498

39:                                               ; preds = %33
  %40 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %1, i64 0, i32 16
  %41 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %1, i64 0, i32 16, i32 0, i32 2
  %42 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %41, align 8
  %43 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %42, i64 0, i32 2
  %44 = load i8, i8* %43, align 8, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %class.sk_sp.278, %class.sk_sp.278* %0, i64 0, i32 0
  store %class.GrGpu* null, %class.GrGpu** %47, align 8
  br label %498

48:                                               ; preds = %39
  %49 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %1, i64 0, i32 16, i32 0, i32 1, i32 0
  %50 = load void ()* (%"union.std::__1::__function::__policy_storage"*, i8*, %struct.VkInstance_T*, %struct.VkDevice_T*)*, void ()* (%"union.std::__1::__function::__policy_storage"*, i8*, %struct.VkInstance_T*, %struct.VkDevice_T*)** %49, align 8
  %51 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %40, i64 0, i32 0, i32 0
  %52 = tail call void ()* %50(%"union.std::__1::__function::__policy_storage"* %51, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), %struct.VkInstance_T* null, %struct.VkDevice_T* null) #14
  %53 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %53) #14
  store i32 0, i32* %5, align 4
  %54 = icmp eq void ()* %52, null
  br i1 %54, label %55, label %56

55:                                               ; preds = %48
  store i32 4194304, i32* %5, align 4
  br label %62

56:                                               ; preds = %48
  %57 = bitcast void ()* %52 to i32 (i32*)*
  %58 = call i32 %57(i32* nonnull %5) #14
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %56
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 80, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 %58) #14
  %61 = getelementptr inbounds %class.sk_sp.278, %class.sk_sp.278* %0, i64 0, i32 0
  store %class.GrGpu* null, %class.GrGpu** %61, align 8
  br label %497

62:                                               ; preds = %56, %55
  %63 = load %struct.VkInstance_T*, %struct.VkInstance_T** %22, align 8
  %64 = load void ()* (%"union.std::__1::__function::__policy_storage"*, i8*, %struct.VkInstance_T*, %struct.VkDevice_T*)*, void ()* (%"union.std::__1::__function::__policy_storage"*, i8*, %struct.VkInstance_T*, %struct.VkDevice_T*)** %49, align 8
  %65 = call void ()* %64(%"union.std::__1::__function::__policy_storage"* %51, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3, i64 0, i64 0), %struct.VkInstance_T* %63, %struct.VkDevice_T* null) #14
  %66 = icmp eq void ()* %65, null
  br i1 %66, label %67, label %69

67:                                               ; preds = %62
  %68 = getelementptr inbounds %class.sk_sp.278, %class.sk_sp.278* %0, i64 0, i32 0
  store %class.GrGpu* null, %class.GrGpu** %68, align 8
  br label %497

69:                                               ; preds = %62
  %70 = bitcast void ()* %65 to void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)*
  %71 = bitcast %struct.VkPhysicalDeviceProperties* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 824, i8* nonnull %71) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* align 8 bitcast ({ i32, i32, i32, i32, i32, [256 x i8], [16 x i8], [4 x i8], { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, [4 x i8], i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, [4 x i8], i64, i64, i64 }, %struct.VkPhysicalDeviceSparseProperties, [4 x i8] }* @__const._ZN7GrVkGpu4MakeERK18GrVkBackendContextRK16GrContextOptionsP15GrDirectContext.physDeviceProperties to i8*), i64 824, i1 false)
  %72 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %26, align 8
  call void %70(%struct.VkPhysicalDevice_T* %72, %struct.VkPhysicalDeviceProperties* nonnull %6) #14
  %73 = getelementptr inbounds %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceProperties* %6, i64 0, i32 0
  %74 = load i32, i32* %73, align 8
  %75 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %1, i64 0, i32 7
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %76, 0
  %78 = load i32, i32* %5, align 4
  %79 = select i1 %77, i32 %78, i32 %76
  %80 = icmp ult i32 %79, %78
  %81 = select i1 %80, i32 %79, i32 %78
  store i32 %81, i32* %5, align 4
  %82 = icmp ult i32 %79, %74
  %83 = select i1 %82, i32 %79, i32 %74
  %84 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %1, i64 0, i32 10
  %85 = load %class.GrVkExtensions*, %class.GrVkExtensions** %84, align 8
  %86 = icmp eq %class.GrVkExtensions* %85, null
  br i1 %86, label %127, label %87

87:                                               ; preds = %69
  %88 = call i8* @_Znwm(i64 1232) #15
  %89 = bitcast i8* %88 to %struct.GrVkInterface*
  %90 = bitcast %"class.std::__1::function"* %7 to i8*
  %91 = bitcast %"class.std::__1::function"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %90, i8* align 8 %91, i64 16, i1 false) #14
  %92 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %7, i64 0, i32 0, i32 1
  %93 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %1, i64 0, i32 16, i32 0, i32 1
  %94 = bitcast %"struct.std::__1::__function::__policy_invoker"* %93 to i64*
  %95 = bitcast %"struct.std::__1::__function::__policy_invoker"* %92 to i64*
  %96 = load i64, i64* %94, align 8
  store i64 %96, i64* %95, align 8
  %97 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %7, i64 0, i32 0, i32 2
  %98 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %41, align 8
  store %"struct.std::__1::__function::__policy"* %98, %"struct.std::__1::__function::__policy"** %97, align 8
  %99 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %98, i64 0, i32 0
  %100 = load i8* (i8*)*, i8* (i8*)** %99, align 8
  %101 = icmp eq i8* (i8*)* %100, null
  br i1 %101, label %109, label %102

102:                                              ; preds = %87
  %103 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %40, i64 0, i32 0, i32 0, i32 0
  %104 = load i8*, i8** %103, align 8
  %105 = call i8* %100(i8* %104) #14
  %106 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %7, i64 0, i32 0, i32 0, i32 0
  store i8* %105, i8** %106, align 8
  %107 = load i32, i32* %5, align 4
  %108 = load %class.GrVkExtensions*, %class.GrVkExtensions** %84, align 8
  br label %109

109:                                              ; preds = %102, %87
  %110 = phi %class.GrVkExtensions* [ %108, %102 ], [ %85, %87 ]
  %111 = phi i32 [ %107, %102 ], [ %81, %87 ]
  %112 = load %struct.VkInstance_T*, %struct.VkInstance_T** %22, align 8
  %113 = load %struct.VkDevice_T*, %struct.VkDevice_T** %30, align 8
  call void @_ZN13GrVkInterfaceC1ENSt3__18functionIFPFvvEPKcP12VkInstance_TP10VkDevice_TEEES7_S9_jjPK14GrVkExtensions(%struct.GrVkInterface* nonnull %89, %"class.std::__1::function"* nonnull %7, %struct.VkInstance_T* %112, %struct.VkDevice_T* %113, i32 %111, i32 %83, %class.GrVkExtensions* %110) #14
  %114 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %97, align 8
  %115 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %114, i64 0, i32 1
  %116 = load void (i8*)*, void (i8*)** %115, align 8
  %117 = icmp eq void (i8*)* %116, null
  br i1 %117, label %121, label %118

118:                                              ; preds = %109
  %119 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %7, i64 0, i32 0, i32 0, i32 0
  %120 = load i8*, i8** %119, align 8
  call void %116(i8* %120) #14
  br label %121

121:                                              ; preds = %109, %118
  %122 = load i32, i32* %5, align 4
  %123 = load %class.GrVkExtensions*, %class.GrVkExtensions** %84, align 8
  %124 = call zeroext i1 @_ZNK13GrVkInterface8validateEjjPK14GrVkExtensions(%struct.GrVkInterface* nonnull %89, i32 %122, i32 %83, %class.GrVkExtensions* %123) #14
  br i1 %124, label %244, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %class.sk_sp.278, %class.sk_sp.278* %0, i64 0, i32 0
  store %class.GrGpu* null, %class.GrGpu** %126, align 8
  br label %485

127:                                              ; preds = %69
  %128 = bitcast %class.GrVkExtensions* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %128) #14
  %129 = getelementptr inbounds %class.GrVkExtensions, %class.GrVkExtensions* %8, i64 0, i32 0, i32 0
  %130 = getelementptr inbounds %class.GrVkExtensions, %class.GrVkExtensions* %8, i64 0, i32 0, i32 1
  store %"struct.GrVkExtensions::Info"* null, %"struct.GrVkExtensions::Info"** %129, align 8
  store i64 1, i64* %130, align 8
  %131 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %1, i64 0, i32 8
  %132 = load i32, i32* %131, align 8
  %133 = and i32 %132, 8
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %137

135:                                              ; preds = %127
  %136 = bitcast %"class.std::__1::function"* %40 to i8*
  br label %167

137:                                              ; preds = %127
  %138 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %138) #14
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0), i8** %9, align 8
  %139 = bitcast %"class.std::__1::function"* %10 to i8*
  %140 = bitcast %"class.std::__1::function"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %139, i8* align 8 %140, i64 16, i1 false) #14
  %141 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %10, i64 0, i32 0, i32 1
  %142 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %1, i64 0, i32 16, i32 0, i32 1
  %143 = bitcast %"struct.std::__1::__function::__policy_invoker"* %142 to i64*
  %144 = bitcast %"struct.std::__1::__function::__policy_invoker"* %141 to i64*
  %145 = load i64, i64* %143, align 8
  store i64 %145, i64* %144, align 8
  %146 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %10, i64 0, i32 0, i32 2
  %147 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %41, align 8
  store %"struct.std::__1::__function::__policy"* %147, %"struct.std::__1::__function::__policy"** %146, align 8
  %148 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %147, i64 0, i32 0
  %149 = load i8* (i8*)*, i8* (i8*)** %148, align 8
  %150 = icmp eq i8* (i8*)* %149, null
  br i1 %150, label %156, label %151

151:                                              ; preds = %137
  %152 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %40, i64 0, i32 0, i32 0, i32 0
  %153 = load i8*, i8** %152, align 8
  %154 = call i8* %149(i8* %153) #14
  %155 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %10, i64 0, i32 0, i32 0, i32 0
  store i8* %154, i8** %155, align 8
  br label %156

156:                                              ; preds = %137, %151
  %157 = load %struct.VkInstance_T*, %struct.VkInstance_T** %22, align 8
  %158 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %26, align 8
  call void @_ZN14GrVkExtensions4initENSt3__18functionIFPFvvEPKcP12VkInstance_TP10VkDevice_TEEES7_P18VkPhysicalDevice_TjPKS5_jSF_(%class.GrVkExtensions* nonnull %8, %"class.std::__1::function"* nonnull %10, %struct.VkInstance_T* %157, %struct.VkPhysicalDevice_T* %158, i32 0, i8** null, i32 1, i8** nonnull %9) #14
  %159 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %146, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %159, i64 0, i32 1
  %161 = load void (i8*)*, void (i8*)** %160, align 8
  %162 = icmp eq void (i8*)* %161, null
  br i1 %162, label %166, label %163

163:                                              ; preds = %156
  %164 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %10, i64 0, i32 0, i32 0, i32 0
  %165 = load i8*, i8** %164, align 8
  call void %161(i8* %165) #14
  br label %166

166:                                              ; preds = %156, %163
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %138) #14
  br label %167

167:                                              ; preds = %135, %166
  %168 = phi i8* [ %136, %135 ], [ %140, %166 ]
  %169 = call i8* @_Znwm(i64 1232) #15
  %170 = bitcast i8* %169 to %struct.GrVkInterface*
  %171 = bitcast %"class.std::__1::function"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %171, i8* align 8 %168, i64 16, i1 false) #14
  %172 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %11, i64 0, i32 0, i32 1
  %173 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %1, i64 0, i32 16, i32 0, i32 1
  %174 = bitcast %"struct.std::__1::__function::__policy_invoker"* %173 to i64*
  %175 = bitcast %"struct.std::__1::__function::__policy_invoker"* %172 to i64*
  %176 = load i64, i64* %174, align 8
  store i64 %176, i64* %175, align 8
  %177 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %11, i64 0, i32 0, i32 2
  %178 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %41, align 8
  store %"struct.std::__1::__function::__policy"* %178, %"struct.std::__1::__function::__policy"** %177, align 8
  %179 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %178, i64 0, i32 0
  %180 = load i8* (i8*)*, i8* (i8*)** %179, align 8
  %181 = icmp eq i8* (i8*)* %180, null
  br i1 %181, label %187, label %182

182:                                              ; preds = %167
  %183 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %40, i64 0, i32 0, i32 0, i32 0
  %184 = load i8*, i8** %183, align 8
  %185 = call i8* %180(i8* %184) #14
  %186 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %11, i64 0, i32 0, i32 0, i32 0
  store i8* %185, i8** %186, align 8
  br label %187

187:                                              ; preds = %182, %167
  %188 = load %struct.VkInstance_T*, %struct.VkInstance_T** %22, align 8
  %189 = load %struct.VkDevice_T*, %struct.VkDevice_T** %30, align 8
  %190 = load i32, i32* %5, align 4
  call void @_ZN13GrVkInterfaceC1ENSt3__18functionIFPFvvEPKcP12VkInstance_TP10VkDevice_TEEES7_S9_jjPK14GrVkExtensions(%struct.GrVkInterface* nonnull %170, %"class.std::__1::function"* nonnull %11, %struct.VkInstance_T* %188, %struct.VkDevice_T* %189, i32 %190, i32 %83, %class.GrVkExtensions* nonnull %8) #14
  %191 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %177, align 8
  %192 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %191, i64 0, i32 1
  %193 = load void (i8*)*, void (i8*)** %192, align 8
  %194 = icmp eq void (i8*)* %193, null
  br i1 %194, label %198, label %195

195:                                              ; preds = %187
  %196 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %11, i64 0, i32 0, i32 0, i32 0
  %197 = load i8*, i8** %196, align 8
  call void %193(i8* %197) #14
  br label %198

198:                                              ; preds = %187, %195
  %199 = load i32, i32* %5, align 4
  %200 = call zeroext i1 @_ZNK13GrVkInterface8validateEjjPK14GrVkExtensions(%struct.GrVkInterface* nonnull %170, i32 %199, i32 %83, %class.GrVkExtensions* nonnull %8) #14
  br i1 %200, label %223, label %201

201:                                              ; preds = %198
  %202 = getelementptr inbounds %class.sk_sp.278, %class.sk_sp.278* %0, i64 0, i32 0
  store %class.GrGpu* null, %class.GrGpu** %202, align 8
  %203 = load i64, i64* %130, align 8
  %204 = and i64 %203, 4294967294
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %210

206:                                              ; preds = %210, %201
  %207 = phi i64 [ %203, %201 ], [ %215, %210 ]
  %208 = and i64 %207, 1
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %222, label %219

210:                                              ; preds = %201, %210
  %211 = phi i64 [ %214, %210 ], [ 0, %201 ]
  %212 = load %"struct.GrVkExtensions::Info"*, %"struct.GrVkExtensions::Info"** %129, align 8
  %213 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %212, i64 %211, i32 0
  call void @_ZN8SkStringD1Ev(%class.SkString* %213) #14
  %214 = add nuw nsw i64 %211, 1
  %215 = load i64, i64* %130, align 8
  %216 = lshr i64 %215, 1
  %217 = and i64 %216, 2147483647
  %218 = icmp ult i64 %214, %217
  br i1 %218, label %210, label %206

219:                                              ; preds = %206
  %220 = bitcast %class.GrVkExtensions* %8 to i8**
  %221 = load i8*, i8** %220, align 8
  call void @_Z7sk_freePv(i8* %221) #14
  br label %222

222:                                              ; preds = %206, %219
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %128) #14
  br label %485

223:                                              ; preds = %198
  %224 = load i64, i64* %130, align 8
  %225 = and i64 %224, 4294967294
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %227, label %231

227:                                              ; preds = %231, %223
  %228 = phi i64 [ %224, %223 ], [ %236, %231 ]
  %229 = and i64 %228, 1
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %243, label %240

231:                                              ; preds = %223, %231
  %232 = phi i64 [ %235, %231 ], [ 0, %223 ]
  %233 = load %"struct.GrVkExtensions::Info"*, %"struct.GrVkExtensions::Info"** %129, align 8
  %234 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %233, i64 %232, i32 0
  call void @_ZN8SkStringD1Ev(%class.SkString* %234) #14
  %235 = add nuw nsw i64 %232, 1
  %236 = load i64, i64* %130, align 8
  %237 = lshr i64 %236, 1
  %238 = and i64 %237, 2147483647
  %239 = icmp ult i64 %235, %238
  br i1 %239, label %231, label %227

240:                                              ; preds = %227
  %241 = bitcast %class.GrVkExtensions* %8 to i8**
  %242 = load i8*, i8** %241, align 8
  call void @_Z7sk_freePv(i8* %242) #14
  br label %243

243:                                              ; preds = %227, %240
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %128) #14
  br label %244

244:                                              ; preds = %243, %121
  %245 = phi %struct.GrVkInterface* [ %170, %243 ], [ %89, %121 ]
  %246 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %1, i64 0, i32 14
  %247 = load %struct.VkPhysicalDeviceFeatures2*, %struct.VkPhysicalDeviceFeatures2** %246, align 8
  %248 = icmp eq %struct.VkPhysicalDeviceFeatures2* %247, null
  br i1 %248, label %258, label %249

249:                                              ; preds = %244
  %250 = call i8* @_Znwm(i64 1344) #15
  %251 = bitcast i8* %250 to %class.GrVkCaps*
  %252 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %26, align 8
  %253 = load i32, i32* %5, align 4
  %254 = load %class.GrVkExtensions*, %class.GrVkExtensions** %84, align 8
  %255 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %1, i64 0, i32 18
  %256 = load i8, i8* %255, align 1, !range !2
  %257 = icmp ne i8 %256, 0
  call void @_ZN8GrVkCapsC1ERK16GrContextOptionsPK13GrVkInterfaceP18VkPhysicalDevice_TRK25VkPhysicalDeviceFeatures2jjRK14GrVkExtensions11GrProtected(%class.GrVkCaps* nonnull %251, %struct.GrContextOptions* dereferenceable(240) %2, %struct.GrVkInterface* %245, %struct.VkPhysicalDevice_T* %252, %struct.VkPhysicalDeviceFeatures2* nonnull dereferenceable(240) %247, i32 %253, i32 %83, %class.GrVkExtensions* dereferenceable(16) %254, i1 zeroext %257) #14
  br label %361

258:                                              ; preds = %244
  %259 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %1, i64 0, i32 13
  %260 = load %struct.VkPhysicalDeviceFeatures*, %struct.VkPhysicalDeviceFeatures** %259, align 8
  %261 = icmp eq %struct.VkPhysicalDeviceFeatures* %260, null
  br i1 %261, label %276, label %262

262:                                              ; preds = %258
  %263 = bitcast %struct.VkPhysicalDeviceFeatures* %260 to i8*
  %264 = bitcast %struct.VkPhysicalDeviceFeatures2* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %264) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %264, i8 -86, i64 240, i1 false)
  %265 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures2, %struct.VkPhysicalDeviceFeatures2* %12, i64 0, i32 1
  store i8* null, i8** %265, align 8
  %266 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures2, %struct.VkPhysicalDeviceFeatures2* %12, i64 0, i32 2
  %267 = bitcast %struct.VkPhysicalDeviceFeatures* %266 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %267, i8* nonnull align 4 %263, i64 220, i1 false)
  %268 = call i8* @_Znwm(i64 1344) #15
  %269 = bitcast i8* %268 to %class.GrVkCaps*
  %270 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %26, align 8
  %271 = load i32, i32* %5, align 4
  %272 = load %class.GrVkExtensions*, %class.GrVkExtensions** %84, align 8
  %273 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %1, i64 0, i32 18
  %274 = load i8, i8* %273, align 1, !range !2
  %275 = icmp ne i8 %274, 0
  call void @_ZN8GrVkCapsC1ERK16GrContextOptionsPK13GrVkInterfaceP18VkPhysicalDevice_TRK25VkPhysicalDeviceFeatures2jjRK14GrVkExtensions11GrProtected(%class.GrVkCaps* nonnull %269, %struct.GrContextOptions* dereferenceable(240) %2, %struct.GrVkInterface* %245, %struct.VkPhysicalDevice_T* %270, %struct.VkPhysicalDeviceFeatures2* nonnull dereferenceable(240) %12, i32 %271, i32 %83, %class.GrVkExtensions* dereferenceable(16) %272, i1 zeroext %275) #14
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %264) #14
  br label %361

276:                                              ; preds = %258
  %277 = bitcast %struct.VkPhysicalDeviceFeatures2* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %277) #14
  %278 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %1, i64 0, i32 11
  %279 = bitcast %struct.VkPhysicalDeviceFeatures2* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %279, i8 0, i64 240, i1 false)
  %280 = load i32, i32* %278, align 8
  %281 = and i32 %280, 1
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %285, label %283

283:                                              ; preds = %276
  %284 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures2, %struct.VkPhysicalDeviceFeatures2* %13, i64 0, i32 2, i32 4
  store i32 1, i32* %284, align 8
  br label %285

285:                                              ; preds = %276, %283
  %286 = and i32 %280, 2
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %290, label %288

288:                                              ; preds = %285
  %289 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures2, %struct.VkPhysicalDeviceFeatures2* %13, i64 0, i32 2, i32 7
  store i32 1, i32* %289, align 4
  br label %290

290:                                              ; preds = %285, %288
  %291 = and i32 %280, 4
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %295, label %293

293:                                              ; preds = %290
  %294 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures2, %struct.VkPhysicalDeviceFeatures2* %13, i64 0, i32 2, i32 6
  store i32 1, i32* %294, align 8
  br label %295

295:                                              ; preds = %290, %293
  %296 = bitcast %class.GrVkExtensions* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %296) #14
  %297 = getelementptr inbounds %class.GrVkExtensions, %class.GrVkExtensions* %14, i64 0, i32 0, i32 0
  %298 = getelementptr inbounds %class.GrVkExtensions, %class.GrVkExtensions* %14, i64 0, i32 0, i32 1
  store %"struct.GrVkExtensions::Info"* null, %"struct.GrVkExtensions::Info"** %297, align 8
  store i64 1, i64* %298, align 8
  %299 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %1, i64 0, i32 8
  %300 = load i32, i32* %299, align 8
  %301 = and i32 %300, 8
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %333, label %303

303:                                              ; preds = %295
  %304 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %304) #14
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0), i8** %15, align 8
  %305 = bitcast %"class.std::__1::function"* %16 to i8*
  %306 = bitcast %"class.std::__1::function"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %305, i8* align 8 %306, i64 16, i1 false) #14
  %307 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %16, i64 0, i32 0, i32 1
  %308 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %1, i64 0, i32 16, i32 0, i32 1
  %309 = bitcast %"struct.std::__1::__function::__policy_invoker"* %308 to i64*
  %310 = bitcast %"struct.std::__1::__function::__policy_invoker"* %307 to i64*
  %311 = load i64, i64* %309, align 8
  store i64 %311, i64* %310, align 8
  %312 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %16, i64 0, i32 0, i32 2
  %313 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %41, align 8
  store %"struct.std::__1::__function::__policy"* %313, %"struct.std::__1::__function::__policy"** %312, align 8
  %314 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %313, i64 0, i32 0
  %315 = load i8* (i8*)*, i8* (i8*)** %314, align 8
  %316 = icmp eq i8* (i8*)* %315, null
  br i1 %316, label %322, label %317

317:                                              ; preds = %303
  %318 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %40, i64 0, i32 0, i32 0, i32 0
  %319 = load i8*, i8** %318, align 8
  %320 = call i8* %315(i8* %319) #14
  %321 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %16, i64 0, i32 0, i32 0, i32 0
  store i8* %320, i8** %321, align 8
  br label %322

322:                                              ; preds = %303, %317
  %323 = load %struct.VkInstance_T*, %struct.VkInstance_T** %22, align 8
  %324 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %26, align 8
  call void @_ZN14GrVkExtensions4initENSt3__18functionIFPFvvEPKcP12VkInstance_TP10VkDevice_TEEES7_P18VkPhysicalDevice_TjPKS5_jSF_(%class.GrVkExtensions* nonnull %14, %"class.std::__1::function"* nonnull %16, %struct.VkInstance_T* %323, %struct.VkPhysicalDevice_T* %324, i32 0, i8** null, i32 1, i8** nonnull %15) #14
  %325 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %312, align 8
  %326 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %325, i64 0, i32 1
  %327 = load void (i8*)*, void (i8*)** %326, align 8
  %328 = icmp eq void (i8*)* %327, null
  br i1 %328, label %332, label %329

329:                                              ; preds = %322
  %330 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %16, i64 0, i32 0, i32 0, i32 0
  %331 = load i8*, i8** %330, align 8
  call void %327(i8* %331) #14
  br label %332

332:                                              ; preds = %322, %329
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %304) #14
  br label %333

333:                                              ; preds = %332, %295
  %334 = call i8* @_Znwm(i64 1344) #15
  %335 = bitcast i8* %334 to %class.GrVkCaps*
  %336 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %26, align 8
  %337 = load i32, i32* %5, align 4
  %338 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %1, i64 0, i32 18
  %339 = load i8, i8* %338, align 1, !range !2
  %340 = icmp ne i8 %339, 0
  call void @_ZN8GrVkCapsC1ERK16GrContextOptionsPK13GrVkInterfaceP18VkPhysicalDevice_TRK25VkPhysicalDeviceFeatures2jjRK14GrVkExtensions11GrProtected(%class.GrVkCaps* nonnull %335, %struct.GrContextOptions* dereferenceable(240) %2, %struct.GrVkInterface* %245, %struct.VkPhysicalDevice_T* %336, %struct.VkPhysicalDeviceFeatures2* nonnull dereferenceable(240) %13, i32 %337, i32 %83, %class.GrVkExtensions* nonnull dereferenceable(16) %14, i1 zeroext %340) #14
  %341 = load i64, i64* %298, align 8
  %342 = and i64 %341, 4294967294
  %343 = icmp eq i64 %342, 0
  br i1 %343, label %344, label %348

344:                                              ; preds = %348, %333
  %345 = phi i64 [ %341, %333 ], [ %353, %348 ]
  %346 = and i64 %345, 1
  %347 = icmp eq i64 %346, 0
  br i1 %347, label %360, label %357

348:                                              ; preds = %333, %348
  %349 = phi i64 [ %352, %348 ], [ 0, %333 ]
  %350 = load %"struct.GrVkExtensions::Info"*, %"struct.GrVkExtensions::Info"** %297, align 8
  %351 = getelementptr inbounds %"struct.GrVkExtensions::Info", %"struct.GrVkExtensions::Info"* %350, i64 %349, i32 0
  call void @_ZN8SkStringD1Ev(%class.SkString* %351) #14
  %352 = add nuw nsw i64 %349, 1
  %353 = load i64, i64* %298, align 8
  %354 = lshr i64 %353, 1
  %355 = and i64 %354, 2147483647
  %356 = icmp ult i64 %352, %355
  br i1 %356, label %348, label %344

357:                                              ; preds = %344
  %358 = bitcast %class.GrVkExtensions* %14 to i8**
  %359 = load i8*, i8** %358, align 8
  call void @_Z7sk_freePv(i8* %359) #14
  br label %360

360:                                              ; preds = %344, %357
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %296) #14
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %277) #14
  br label %361

361:                                              ; preds = %262, %360, %249
  %362 = phi i8* [ %334, %360 ], [ %268, %262 ], [ %250, %249 ]
  %363 = ptrtoint i8* %362 to i64
  %364 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %1, i64 0, i32 15, i32 0
  %365 = load %class.GrVkMemoryAllocator*, %class.GrVkMemoryAllocator** %364, align 8
  %366 = icmp eq %class.GrVkMemoryAllocator* %365, null
  br i1 %366, label %371, label %367

367:                                              ; preds = %361
  %368 = getelementptr inbounds %class.GrVkMemoryAllocator, %class.GrVkMemoryAllocator* %365, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %369 = atomicrmw add i32* %368, i32 1 monotonic
  %370 = ptrtoint %class.GrVkMemoryAllocator* %365 to i64
  br label %397

371:                                              ; preds = %361
  %372 = bitcast i8* %362 to %class.GrVkCaps*
  %373 = bitcast %class.sk_sp.1* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %373) #14
  %374 = load %struct.VkInstance_T*, %struct.VkInstance_T** %22, align 8
  %375 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %26, align 8
  %376 = load %struct.VkDevice_T*, %struct.VkDevice_T** %30, align 8
  %377 = load %class.GrVkExtensions*, %class.GrVkExtensions** %84, align 8
  %378 = getelementptr inbounds %class.sk_sp.350, %class.sk_sp.350* %18, i64 0, i32 0
  %379 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %245, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %380 = atomicrmw add i32* %379, i32 1 monotonic
  store %struct.GrVkInterface* %245, %struct.GrVkInterface** %378, align 8
  call void @_ZN22GrVkAMDMemoryAllocator4MakeEP12VkInstance_TP18VkPhysicalDevice_TP10VkDevice_TjPK14GrVkExtensions5sk_spIK13GrVkInterfaceEPK8GrVkCaps(%class.sk_sp.1* nonnull sret %17, %struct.VkInstance_T* %374, %struct.VkPhysicalDevice_T* %375, %struct.VkDevice_T* %376, i32 %83, %class.GrVkExtensions* %377, %class.sk_sp.350* nonnull %18, %class.GrVkCaps* nonnull %372) #14
  %381 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %17, i64 0, i32 0
  %382 = bitcast %class.sk_sp.1* %17 to i64*
  %383 = load i64, i64* %382, align 8
  store %class.GrVkMemoryAllocator* null, %class.GrVkMemoryAllocator** %381, align 8
  %384 = load %struct.GrVkInterface*, %struct.GrVkInterface** %378, align 8
  %385 = icmp eq %struct.GrVkInterface* %384, null
  br i1 %385, label %396, label %386

386:                                              ; preds = %371
  %387 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %384, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %388 = atomicrmw add i32* %387, i32 -1 acq_rel
  %389 = icmp eq i32 %388, 1
  br i1 %389, label %390, label %396

390:                                              ; preds = %386
  %391 = bitcast %struct.GrVkInterface* %384 to %class.SkRefCntBase*
  %392 = bitcast %struct.GrVkInterface* %384 to void (%class.SkRefCntBase*)***
  %393 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %392, align 8
  %394 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %393, i64 2
  %395 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %394, align 8
  call void %395(%class.SkRefCntBase* nonnull %391) #14
  br label %396

396:                                              ; preds = %371, %386, %390
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %373) #14
  br label %397

397:                                              ; preds = %367, %396
  %398 = phi i64 [ %383, %396 ], [ %370, %367 ]
  %399 = icmp eq i64 %398, 0
  br i1 %399, label %473, label %400

400:                                              ; preds = %397
  %401 = call i8* @_Znwm(i64 2288) #15
  %402 = bitcast i8* %401 to %class.GrVkGpu*
  %403 = bitcast %class.sk_sp.494* %19 to i64*
  store i64 %363, i64* %403, align 8
  %404 = getelementptr inbounds %class.sk_sp.350, %class.sk_sp.350* %20, i64 0, i32 0
  %405 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %245, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %406 = atomicrmw add i32* %405, i32 1 monotonic
  store %struct.GrVkInterface* %245, %struct.GrVkInterface** %404, align 8
  %407 = bitcast %class.sk_sp.1* %21 to i64*
  store i64 %398, i64* %407, align 8
  call void @_ZN7GrVkGpuC2EP15GrDirectContextRK18GrVkBackendContext5sk_spI8GrVkCapsES5_IK13GrVkInterfaceEjjS5_I19GrVkMemoryAllocatorE(%class.GrVkGpu* nonnull %402, %class.GrDirectContext* %3, %struct.GrVkBackendContext* dereferenceable(136) %1, %class.sk_sp.494* nonnull %19, %class.sk_sp.350* nonnull %20, i32 undef, i32 undef, %class.sk_sp.1* nonnull %21)
  %408 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %21, i64 0, i32 0
  %409 = load %class.GrVkMemoryAllocator*, %class.GrVkMemoryAllocator** %408, align 8
  %410 = icmp eq %class.GrVkMemoryAllocator* %409, null
  br i1 %410, label %421, label %411

411:                                              ; preds = %400
  %412 = getelementptr inbounds %class.GrVkMemoryAllocator, %class.GrVkMemoryAllocator* %409, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %413 = atomicrmw add i32* %412, i32 -1 acq_rel
  %414 = icmp eq i32 %413, 1
  br i1 %414, label %415, label %421

415:                                              ; preds = %411
  %416 = bitcast %class.GrVkMemoryAllocator* %409 to %class.SkRefCntBase*
  %417 = bitcast %class.GrVkMemoryAllocator* %409 to void (%class.SkRefCntBase*)***
  %418 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %417, align 8
  %419 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %418, i64 2
  %420 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %419, align 8
  call void %420(%class.SkRefCntBase* nonnull %416) #14
  br label %421

421:                                              ; preds = %400, %411, %415
  %422 = load %struct.GrVkInterface*, %struct.GrVkInterface** %404, align 8
  %423 = icmp eq %struct.GrVkInterface* %422, null
  br i1 %423, label %434, label %424

424:                                              ; preds = %421
  %425 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %422, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %426 = atomicrmw add i32* %425, i32 -1 acq_rel
  %427 = icmp eq i32 %426, 1
  br i1 %427, label %428, label %434

428:                                              ; preds = %424
  %429 = bitcast %struct.GrVkInterface* %422 to %class.SkRefCntBase*
  %430 = bitcast %struct.GrVkInterface* %422 to void (%class.SkRefCntBase*)***
  %431 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %430, align 8
  %432 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %431, i64 2
  %433 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %432, align 8
  call void %433(%class.SkRefCntBase* nonnull %429) #14
  br label %434

434:                                              ; preds = %421, %424, %428
  %435 = getelementptr inbounds %class.sk_sp.494, %class.sk_sp.494* %19, i64 0, i32 0
  %436 = load %class.GrVkCaps*, %class.GrVkCaps** %435, align 8
  %437 = icmp eq %class.GrVkCaps* %436, null
  br i1 %437, label %448, label %438

438:                                              ; preds = %434
  %439 = getelementptr inbounds %class.GrVkCaps, %class.GrVkCaps* %436, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %440 = atomicrmw add i32* %439, i32 -1 acq_rel
  %441 = icmp eq i32 %440, 1
  br i1 %441, label %442, label %448

442:                                              ; preds = %438
  %443 = bitcast %class.GrVkCaps* %436 to %class.SkRefCntBase*
  %444 = bitcast %class.GrVkCaps* %436 to void (%class.SkRefCntBase*)***
  %445 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %444, align 8
  %446 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %445, i64 2
  %447 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %446, align 8
  call void %447(%class.SkRefCntBase* nonnull %443) #14
  br label %448

448:                                              ; preds = %434, %438, %442
  %449 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %1, i64 0, i32 18
  %450 = load i8, i8* %449, align 1, !range !2
  %451 = icmp eq i8 %450, 0
  br i1 %451, label %459, label %452

452:                                              ; preds = %448
  %453 = getelementptr inbounds i8, i8* %401, i64 152
  %454 = bitcast i8* %453 to %class.GrVkCaps**
  %455 = load %class.GrVkCaps*, %class.GrVkCaps** %454, align 8
  %456 = getelementptr inbounds %class.GrVkCaps, %class.GrVkCaps* %455, i64 0, i32 20
  %457 = load i8, i8* %456, align 2, !range !2
  %458 = icmp eq i8 %457, 0
  br i1 %458, label %461, label %459

459:                                              ; preds = %452, %448
  %460 = bitcast %class.sk_sp.278* %0 to i8**
  store i8* %401, i8** %460, align 8
  br label %485

461:                                              ; preds = %452
  %462 = getelementptr inbounds %class.sk_sp.278, %class.sk_sp.278* %0, i64 0, i32 0
  store %class.GrGpu* null, %class.GrGpu** %462, align 8
  %463 = getelementptr inbounds i8, i8* %401, i64 8
  %464 = bitcast i8* %463 to i32*
  %465 = atomicrmw add i32* %464, i32 -1 acq_rel
  %466 = icmp eq i32 %465, 1
  br i1 %466, label %467, label %485

467:                                              ; preds = %461
  %468 = bitcast i8* %401 to %class.SkRefCntBase*
  %469 = bitcast i8* %401 to void (%class.SkRefCntBase*)***
  %470 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %469, align 8
  %471 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %470, i64 2
  %472 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %471, align 8
  call void %472(%class.SkRefCntBase* nonnull %468) #14
  br label %485

473:                                              ; preds = %397
  %474 = getelementptr inbounds %class.sk_sp.278, %class.sk_sp.278* %0, i64 0, i32 0
  store %class.GrGpu* null, %class.GrGpu** %474, align 8
  %475 = getelementptr inbounds i8, i8* %362, i64 8
  %476 = bitcast i8* %475 to i32*
  %477 = atomicrmw add i32* %476, i32 -1 acq_rel
  %478 = icmp eq i32 %477, 1
  br i1 %478, label %479, label %485

479:                                              ; preds = %473
  %480 = bitcast i8* %362 to %class.SkRefCntBase*
  %481 = bitcast i8* %362 to void (%class.SkRefCntBase*)***
  %482 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %481, align 8
  %483 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %482, i64 2
  %484 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %483, align 8
  call void %484(%class.SkRefCntBase* nonnull %480) #14
  br label %485

485:                                              ; preds = %459, %461, %467, %125, %222, %473, %479
  %486 = phi %struct.GrVkInterface* [ %170, %222 ], [ %89, %125 ], [ %245, %473 ], [ %245, %479 ], [ %245, %467 ], [ %245, %461 ], [ %245, %459 ]
  %487 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %486, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %488 = atomicrmw add i32* %487, i32 -1 acq_rel
  %489 = icmp eq i32 %488, 1
  br i1 %489, label %490, label %496

490:                                              ; preds = %485
  %491 = bitcast %struct.GrVkInterface* %486 to %class.SkRefCntBase*
  %492 = bitcast %struct.GrVkInterface* %486 to void (%class.SkRefCntBase*)***
  %493 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %492, align 8
  %494 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %493, i64 2
  %495 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %494, align 8
  call void %495(%class.SkRefCntBase* nonnull %491) #14
  br label %496

496:                                              ; preds = %485, %490
  call void @llvm.lifetime.end.p0i8(i64 824, i8* nonnull %71) #14
  br label %497

497:                                              ; preds = %67, %496, %60
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %53) #14
  br label %498

498:                                              ; preds = %497, %46, %37
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_Z17SkDebugf_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN13GrVkInterfaceC1ENSt3__18functionIFPFvvEPKcP12VkInstance_TP10VkDevice_TEEES7_S9_jjPK14GrVkExtensions(%struct.GrVkInterface*, %"class.std::__1::function"*, %struct.VkInstance_T*, %struct.VkDevice_T*, i32, i32, %class.GrVkExtensions*) unnamed_addr #2

declare zeroext i1 @_ZNK13GrVkInterface8validateEjjPK14GrVkExtensions(%struct.GrVkInterface*, i32, i32, %class.GrVkExtensions*) local_unnamed_addr #2

declare void @_ZN14GrVkExtensions4initENSt3__18functionIFPFvvEPKcP12VkInstance_TP10VkDevice_TEEES7_P18VkPhysicalDevice_TjPKS5_jSF_(%class.GrVkExtensions*, %"class.std::__1::function"*, %struct.VkInstance_T*, %struct.VkPhysicalDevice_T*, i32, i8**, i32, i8**) local_unnamed_addr #2

declare void @_ZN8GrVkCapsC1ERK16GrContextOptionsPK13GrVkInterfaceP18VkPhysicalDevice_TRK25VkPhysicalDeviceFeatures2jjRK14GrVkExtensions11GrProtected(%class.GrVkCaps*, %struct.GrContextOptions* dereferenceable(240), %struct.GrVkInterface*, %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2* dereferenceable(240), i32, i32, %class.GrVkExtensions* dereferenceable(16), i1 zeroext) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN22GrVkAMDMemoryAllocator4MakeEP12VkInstance_TP18VkPhysicalDevice_TP10VkDevice_TjPK14GrVkExtensions5sk_spIK13GrVkInterfaceEPK8GrVkCaps(%class.sk_sp.1* sret, %struct.VkInstance_T*, %struct.VkPhysicalDevice_T*, %struct.VkDevice_T*, i32, %class.GrVkExtensions*, %class.sk_sp.350*, %class.GrVkCaps*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpuC2EP15GrDirectContextRK18GrVkBackendContext5sk_spI8GrVkCapsES5_IK13GrVkInterfaceEjjS5_I19GrVkMemoryAllocatorE(%class.GrVkGpu*, %class.GrDirectContext*, %struct.GrVkBackendContext* nocapture readonly dereferenceable(136), %class.sk_sp.494* nocapture, %class.sk_sp.350* nocapture, i32, i32, %class.sk_sp.1* nocapture) unnamed_addr #0 align 2 {
  %9 = alloca %class.sk_sp.3, align 8
  %10 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 0
  tail call void @_ZN5GrGpuC2EP15GrDirectContext(%class.GrGpu* %10, %class.GrDirectContext* %1) #14
  %11 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTV7GrVkGpu, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 1
  %13 = getelementptr inbounds %class.sk_sp.350, %class.sk_sp.350* %4, i64 0, i32 0
  %14 = bitcast %class.sk_sp.350* %4 to i64*
  %15 = load i64, i64* %14, align 8
  store %struct.GrVkInterface* null, %struct.GrVkInterface** %13, align 8
  %16 = bitcast %class.sk_sp.350* %12 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 2
  %18 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %7, i64 0, i32 0
  %19 = bitcast %class.sk_sp.1* %7 to i64*
  %20 = load i64, i64* %19, align 8
  store %class.GrVkMemoryAllocator* null, %class.GrVkMemoryAllocator** %18, align 8
  %21 = bitcast %class.sk_sp.1* %17 to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 3
  %23 = getelementptr inbounds %class.sk_sp.494, %class.sk_sp.494* %3, i64 0, i32 0
  %24 = bitcast %class.sk_sp.494* %3 to i64*
  %25 = load i64, i64* %24, align 8
  store %class.GrVkCaps* null, %class.GrVkCaps** %23, align 8
  %26 = bitcast %class.sk_sp.494* %22 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 4
  store i8 0, i8* %27, align 8
  %28 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 5
  %29 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %2, i64 0, i32 1
  %30 = bitcast %struct.VkPhysicalDevice_T** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %struct.VkPhysicalDevice_T** %28 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 6
  %34 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %2, i64 0, i32 2
  %35 = bitcast %struct.VkDevice_T** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %struct.VkDevice_T** %33 to i64*
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 7
  %39 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %2, i64 0, i32 3
  %40 = bitcast %struct.VkQueue_T** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %struct.VkQueue_T** %38 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 8
  %44 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %2, i64 0, i32 4
  %45 = load i32, i32* %44, align 8
  store i32 %45, i32* %43, align 8
  %46 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 9
  tail call void @_ZN20GrVkResourceProviderC1EP7GrVkGpu(%class.GrVkResourceProvider* %46, %class.GrVkGpu* %0) #14
  %47 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 10
  %48 = bitcast %class.GrStagingBufferManager* %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 24, i1 false) #14
  %49 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 10, i32 1
  store %class.GrGpu* %10, %class.GrGpu** %49, align 8
  %50 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 11
  tail call void @_ZN19GrVkMSAALoadManagerC1Ev(%class.GrVkMSAALoadManager* %50) #14
  %51 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 14, i32 0, i32 0, i64 8
  %52 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 14, i32 0, i32 0, i64 0
  %53 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 14, i32 0, i32 0, i64 16
  %54 = bitcast i8* %53 to i64*
  %55 = bitcast i8* %51 to i8**
  store i8* %52, i8** %55, align 8
  store i64 8589934592, i64* %54, align 8
  %56 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 15, i32 0, i32 0, i64 8
  %57 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 15, i32 0, i32 0, i64 0
  %58 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 15, i32 0, i32 0, i64 16
  %59 = bitcast i8* %58 to i64*
  %60 = bitcast i8* %56 to i8**
  store i8* %57, i8** %60, align 8
  store i64 8589934592, i64* %59, align 8
  %61 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 16, i32 1
  %62 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 16, i32 0
  store %"class.std::__1::unique_ptr.609"* null, %"class.std::__1::unique_ptr.609"** %62, align 8
  store i64 1, i64* %61, align 8
  %63 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 19
  store i8 0, i8* %63, align 8
  %64 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 20
  %65 = getelementptr inbounds %struct.GrVkBackendContext, %struct.GrVkBackendContext* %2, i64 0, i32 18
  %66 = load i8, i8* %65, align 1, !range !2
  store i8 %66, i8* %64, align 1
  %67 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 21
  %68 = bitcast %"class.std::__1::unique_ptr.615"* %67 to i64*
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds %class.sk_sp.494, %class.sk_sp.494* %22, i64 0, i32 0
  %70 = load %class.GrVkCaps*, %class.GrVkCaps** %69, align 8
  %71 = icmp eq %class.GrVkCaps* %70, null
  br i1 %71, label %75, label %72

72:                                               ; preds = %8
  %73 = getelementptr inbounds %class.GrVkCaps, %class.GrVkCaps* %70, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = atomicrmw add i32* %73, i32 1 monotonic
  br label %75

75:                                               ; preds = %8, %72
  %76 = bitcast %class.sk_sp.3* %9 to %class.GrVkCaps**
  store %class.GrVkCaps* %70, %class.GrVkCaps** %76, align 8
  call void @_ZN5GrGpu19initCapsAndCompilerE5sk_spIK6GrCapsE(%class.GrGpu* %10, %class.sk_sp.3* nonnull %9) #14
  %77 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %9, i64 0, i32 0
  %78 = load %class.GrCaps*, %class.GrCaps** %77, align 8
  %79 = icmp eq %class.GrCaps* %78, null
  br i1 %79, label %90, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %78, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = atomicrmw add i32* %81, i32 -1 acq_rel
  %83 = icmp eq i32 %82, 1
  br i1 %83, label %84, label %90

84:                                               ; preds = %80
  %85 = bitcast %class.GrCaps* %78 to %class.SkRefCntBase*
  %86 = bitcast %class.GrCaps* %78 to void (%class.SkRefCntBase*)***
  %87 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %86, align 8
  %88 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %87, i64 2
  %89 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %88, align 8
  call void %89(%class.SkRefCntBase* nonnull %85) #14
  br label %90

90:                                               ; preds = %75, %80, %84
  %91 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 1, i32 0
  %92 = load %struct.GrVkInterface*, %struct.GrVkInterface** %91, align 8
  %93 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %92, i64 0, i32 1, i32 6, i32 0
  %94 = load void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)** %93, align 8
  %95 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %29, align 8
  %96 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 17
  call void %94(%struct.VkPhysicalDevice_T* %95, %struct.VkPhysicalDeviceProperties* %96) #14
  %97 = load %struct.GrVkInterface*, %struct.GrVkInterface** %91, align 8
  %98 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %97, i64 0, i32 1, i32 8, i32 0
  %99 = load void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)** %98, align 8
  %100 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %29, align 8
  %101 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 18
  call void %99(%struct.VkPhysicalDevice_T* %100, %struct.VkPhysicalDeviceMemoryProperties* %101) #14
  call void @_ZN20GrVkResourceProvider4initEv(%class.GrVkResourceProvider* %46) #14
  %102 = call %class.GrVkCommandPool* @_ZN20GrVkResourceProvider23findOrCreateCommandPoolEv(%class.GrVkResourceProvider* %46) #14
  %103 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 12
  store %class.GrVkCommandPool* %102, %class.GrVkCommandPool** %103, align 8
  %104 = icmp eq %class.GrVkCommandPool* %102, null
  br i1 %104, label %109, label %105

105:                                              ; preds = %90
  %106 = getelementptr inbounds %class.GrVkCommandPool, %class.GrVkCommandPool* %102, i64 0, i32 4, i32 0, i32 0, i32 0
  %107 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %106, align 8
  %108 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 13
  store %class.GrVkPrimaryCommandBuffer* %107, %class.GrVkPrimaryCommandBuffer** %108, align 8
  call void @_ZN24GrVkPrimaryCommandBuffer5beginEP7GrVkGpu(%class.GrVkPrimaryCommandBuffer* %107, %class.GrVkGpu* %0) #14
  br label %109

109:                                              ; preds = %90, %105
  ret void
}

declare void @_ZN5GrGpuC2EP15GrDirectContext(%class.GrGpu*, %class.GrDirectContext*) unnamed_addr #2

declare void @_ZN20GrVkResourceProviderC1EP7GrVkGpu(%class.GrVkResourceProvider*, %class.GrVkGpu*) unnamed_addr #2

declare void @_ZN19GrVkMSAALoadManagerC1Ev(%class.GrVkMSAALoadManager*) unnamed_addr #2

declare void @_ZN5GrGpu19initCapsAndCompilerE5sk_spIK6GrCapsE(%class.GrGpu*, %class.sk_sp.3*) local_unnamed_addr #2

declare void @_ZN20GrVkResourceProvider4initEv(%class.GrVkResourceProvider*) local_unnamed_addr #2

declare %class.GrVkCommandPool* @_ZN20GrVkResourceProvider23findOrCreateCommandPoolEv(%class.GrVkResourceProvider*) local_unnamed_addr #2

declare void @_ZN24GrVkPrimaryCommandBuffer5beginEP7GrVkGpu(%class.GrVkPrimaryCommandBuffer*, %class.GrVkGpu*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpu16destroyResourcesEv(%class.GrVkGpu*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 12
  %3 = load %class.GrVkCommandPool*, %class.GrVkCommandPool** %2, align 8
  %4 = icmp eq %class.GrVkCommandPool* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.GrVkCommandPool, %class.GrVkCommandPool* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %7 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %6, align 8
  tail call void @_ZN24GrVkPrimaryCommandBuffer3endEP7GrVkGpub(%class.GrVkPrimaryCommandBuffer* %7, %class.GrVkGpu* %0, i1 zeroext true) #14
  %8 = load %class.GrVkCommandPool*, %class.GrVkCommandPool** %2, align 8
  tail call void @_ZN15GrVkCommandPool5closeEv(%class.GrVkCommandPool* %8) #14
  br label %9

9:                                                ; preds = %1, %5
  %10 = bitcast %class.GrVkGpu* %0 to void (%class.GrVkGpu*)***
  %11 = load void (%class.GrVkGpu*)**, void (%class.GrVkGpu*)*** %10, align 8
  %12 = getelementptr inbounds void (%class.GrVkGpu*)*, void (%class.GrVkGpu*)** %11, i64 19
  %13 = load void (%class.GrVkGpu*)*, void (%class.GrVkGpu*)** %12, align 8
  tail call void %13(%class.GrVkGpu* %0) #14
  %14 = load %class.GrVkCommandPool*, %class.GrVkCommandPool** %2, align 8
  %15 = icmp eq %class.GrVkCommandPool* %14, null
  br i1 %15, label %30, label %16

16:                                               ; preds = %9
  %17 = bitcast %class.GrVkCommandPool* %14 to %class.GrManagedResource*
  %18 = getelementptr inbounds %class.GrVkCommandPool, %class.GrVkCommandPool* %14, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %29

21:                                               ; preds = %16
  %22 = bitcast %class.GrVkCommandPool* %14 to void (%class.GrManagedResource*)***
  %23 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %23, i64 4
  %25 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %24, align 8
  tail call void %25(%class.GrManagedResource* nonnull %17) #14
  %26 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %22, align 8
  %27 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %26, i64 1
  %28 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %27, align 8
  tail call void %28(%class.GrManagedResource* nonnull %17) #14
  br label %29

29:                                               ; preds = %16, %21
  store %class.GrVkCommandPool* null, %class.GrVkCommandPool** %2, align 8
  br label %30

30:                                               ; preds = %9, %29
  %31 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 14, i32 0, i32 0, i64 8
  %32 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 14, i32 0, i32 0, i64 16
  %33 = bitcast i8* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = and i64 %34, 4294967294
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %30
  %38 = bitcast i8* %31 to %"class.GrVkSemaphore::Resource"***
  br label %53

39:                                               ; preds = %72, %30
  %40 = phi i64 [ %34, %30 ], [ %74, %72 ]
  %41 = bitcast i8* %31 to %class.SkTArray.607*
  %42 = and i64 %40, -4294967295
  store i64 %42, i64* %33, align 8
  tail call void @_ZN8SkTArrayIPN13GrVkSemaphore8ResourceELb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.607* %41, i32 0, i32 2) #14
  %43 = load i64, i64* %33, align 8
  %44 = and i64 %43, -4294967297
  store i64 %44, i64* %33, align 8
  %45 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 15, i32 0, i32 0, i64 8
  %46 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 15, i32 0, i32 0, i64 16
  %47 = bitcast i8* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = and i64 %48, 4294967294
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %78, label %51

51:                                               ; preds = %39
  %52 = bitcast i8* %45 to %"class.GrVkSemaphore::Resource"***
  br label %130

53:                                               ; preds = %37, %72
  %54 = phi i64 [ 0, %37 ], [ %73, %72 ]
  %55 = load %"class.GrVkSemaphore::Resource"**, %"class.GrVkSemaphore::Resource"*** %38, align 8
  %56 = getelementptr inbounds %"class.GrVkSemaphore::Resource"*, %"class.GrVkSemaphore::Resource"** %55, i64 %54
  %57 = bitcast %"class.GrVkSemaphore::Resource"** %56 to %class.GrManagedResource**
  %58 = load %class.GrManagedResource*, %class.GrManagedResource** %57, align 8
  %59 = getelementptr inbounds %class.GrManagedResource, %class.GrManagedResource* %58, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = atomicrmw add i32* %59, i32 -1 acq_rel
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %62, label %72

62:                                               ; preds = %53
  %63 = bitcast %class.GrManagedResource* %58 to void (%class.GrManagedResource*)***
  %64 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %63, align 8
  %65 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %64, i64 4
  %66 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %65, align 8
  tail call void %66(%class.GrManagedResource* %58) #14
  %67 = icmp eq %class.GrManagedResource* %58, null
  br i1 %67, label %72, label %68

68:                                               ; preds = %62
  %69 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %63, align 8
  %70 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %69, i64 1
  %71 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %70, align 8
  tail call void %71(%class.GrManagedResource* nonnull %58) #14
  br label %72

72:                                               ; preds = %53, %62, %68
  %73 = add nuw nsw i64 %54, 1
  %74 = load i64, i64* %33, align 8
  %75 = lshr i64 %74, 1
  %76 = and i64 %75, 2147483647
  %77 = icmp ult i64 %73, %76
  br i1 %77, label %53, label %39

78:                                               ; preds = %149, %39
  %79 = phi i64 [ %48, %39 ], [ %151, %149 ]
  %80 = bitcast i8* %45 to %class.SkTArray.607*
  %81 = and i64 %79, -4294967295
  store i64 %81, i64* %47, align 8
  tail call void @_ZN8SkTArrayIPN13GrVkSemaphore8ResourceELb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.607* %80, i32 0, i32 2) #14
  %82 = load i64, i64* %47, align 8
  %83 = and i64 %82, -4294967297
  store i64 %83, i64* %47, align 8
  %84 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 10
  %85 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %86 = bitcast %"struct.GrStagingBufferManager::StagingBuffer"** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %class.GrStagingBufferManager* %84 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = icmp eq i64 %87, %89
  %91 = inttoptr i64 %89 to %"struct.GrStagingBufferManager::StagingBuffer"*
  br i1 %90, label %94, label %115

92:                                               ; preds = %115
  %93 = inttoptr i64 %122 to %"struct.GrStagingBufferManager::StagingBuffer"*
  br label %94

94:                                               ; preds = %92, %78
  %95 = phi i64 [ %87, %78 ], [ %121, %92 ]
  %96 = phi %"struct.GrStagingBufferManager::StagingBuffer"* [ %91, %78 ], [ %93, %92 ]
  %97 = inttoptr i64 %95 to %"struct.GrStagingBufferManager::StagingBuffer"*
  %98 = icmp eq %"struct.GrStagingBufferManager::StagingBuffer"* %96, %97
  br i1 %98, label %127, label %99

99:                                               ; preds = %94, %113
  %100 = phi %"struct.GrStagingBufferManager::StagingBuffer"* [ %101, %113 ], [ %97, %94 ]
  %101 = getelementptr inbounds %"struct.GrStagingBufferManager::StagingBuffer", %"struct.GrStagingBufferManager::StagingBuffer"* %100, i64 -1
  %102 = getelementptr inbounds %"struct.GrStagingBufferManager::StagingBuffer", %"struct.GrStagingBufferManager::StagingBuffer"* %101, i64 0, i32 0, i32 0
  %103 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %102, align 8
  %104 = icmp eq %class.GrGpuBuffer* %103, null
  br i1 %104, label %113, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %103, i64 0, i32 0, i32 1
  %107 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %106, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = atomicrmw add i32* %107, i32 -1 acq_rel
  %109 = icmp eq i32 %108, 1
  br i1 %109, label %110, label %113

110:                                              ; preds = %105
  %111 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %106, i64 -1
  %112 = bitcast %class.GrIORef* %111 to %class.GrGpuResource*
  tail call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %112, i32 0) #14
  br label %113

113:                                              ; preds = %110, %105, %99
  %114 = icmp eq %"struct.GrStagingBufferManager::StagingBuffer"* %101, %96
  br i1 %114, label %127, label %99

115:                                              ; preds = %78, %115
  %116 = phi %"struct.GrStagingBufferManager::StagingBuffer"* [ %126, %115 ], [ %91, %78 ]
  %117 = phi i64 [ %120, %115 ], [ 0, %78 ]
  %118 = getelementptr inbounds %"struct.GrStagingBufferManager::StagingBuffer", %"struct.GrStagingBufferManager::StagingBuffer"* %116, i64 %117, i32 0, i32 0
  %119 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %118, align 8
  tail call void @_ZN11GrGpuBuffer5unmapEv(%class.GrGpuBuffer* %119) #14
  %120 = add nuw i64 %117, 1
  %121 = load i64, i64* %86, align 8
  %122 = load i64, i64* %88, align 8
  %123 = sub i64 %121, %122
  %124 = sdiv exact i64 %123, 24
  %125 = icmp ult i64 %120, %124
  %126 = inttoptr i64 %122 to %"struct.GrStagingBufferManager::StagingBuffer"*
  br i1 %125, label %115, label %92

127:                                              ; preds = %113, %94
  store %"struct.GrStagingBufferManager::StagingBuffer"* %96, %"struct.GrStagingBufferManager::StagingBuffer"** %85, align 8
  %128 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 11
  tail call void @_ZN19GrVkMSAALoadManager16destroyResourcesEP7GrVkGpu(%class.GrVkMSAALoadManager* %128, %class.GrVkGpu* %0) #14
  %129 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 9
  tail call void @_ZN20GrVkResourceProvider16destroyResourcesEv(%class.GrVkResourceProvider* %129) #14
  ret void

130:                                              ; preds = %51, %149
  %131 = phi i64 [ 0, %51 ], [ %150, %149 ]
  %132 = load %"class.GrVkSemaphore::Resource"**, %"class.GrVkSemaphore::Resource"*** %52, align 8
  %133 = getelementptr inbounds %"class.GrVkSemaphore::Resource"*, %"class.GrVkSemaphore::Resource"** %132, i64 %131
  %134 = bitcast %"class.GrVkSemaphore::Resource"** %133 to %class.GrManagedResource**
  %135 = load %class.GrManagedResource*, %class.GrManagedResource** %134, align 8
  %136 = getelementptr inbounds %class.GrManagedResource, %class.GrManagedResource* %135, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = atomicrmw add i32* %136, i32 -1 acq_rel
  %138 = icmp eq i32 %137, 1
  br i1 %138, label %139, label %149

139:                                              ; preds = %130
  %140 = bitcast %class.GrManagedResource* %135 to void (%class.GrManagedResource*)***
  %141 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %140, align 8
  %142 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %141, i64 4
  %143 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %142, align 8
  tail call void %143(%class.GrManagedResource* %135) #14
  %144 = icmp eq %class.GrManagedResource* %135, null
  br i1 %144, label %149, label %145

145:                                              ; preds = %139
  %146 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %140, align 8
  %147 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %146, i64 1
  %148 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %147, align 8
  tail call void %148(%class.GrManagedResource* nonnull %135) #14
  br label %149

149:                                              ; preds = %130, %139, %145
  %150 = add nuw nsw i64 %131, 1
  %151 = load i64, i64* %47, align 8
  %152 = lshr i64 %151, 1
  %153 = and i64 %152, 2147483647
  %154 = icmp ult i64 %150, %153
  br i1 %154, label %130, label %78
}

declare void @_ZN24GrVkPrimaryCommandBuffer3endEP7GrVkGpub(%class.GrVkPrimaryCommandBuffer*, %class.GrVkGpu*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN15GrVkCommandPool5closeEv(%class.GrVkCommandPool*) local_unnamed_addr #2

declare void @_ZN19GrVkMSAALoadManager16destroyResourcesEP7GrVkGpu(%class.GrVkMSAALoadManager*, %class.GrVkGpu*) local_unnamed_addr #2

declare void @_ZN20GrVkResourceProvider16destroyResourcesEv(%class.GrVkResourceProvider*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpuD2Ev(%class.GrVkGpu*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTV7GrVkGpu, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 19
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  tail call void @_ZN7GrVkGpu16destroyResourcesEv(%class.GrVkGpu* %0)
  br label %7

7:                                                ; preds = %1, %6
  %8 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 2, i32 0
  %9 = load %class.GrVkMemoryAllocator*, %class.GrVkMemoryAllocator** %8, align 8
  store %class.GrVkMemoryAllocator* null, %class.GrVkMemoryAllocator** %8, align 8
  %10 = icmp eq %class.GrVkMemoryAllocator* %9, null
  br i1 %10, label %21, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.GrVkMemoryAllocator, %class.GrVkMemoryAllocator* %9, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 -1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %21

15:                                               ; preds = %11
  %16 = bitcast %class.GrVkMemoryAllocator* %9 to %class.SkRefCntBase*
  %17 = bitcast %class.GrVkMemoryAllocator* %9 to void (%class.SkRefCntBase*)***
  %18 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %18, i64 2
  %20 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %19, align 8
  tail call void %20(%class.SkRefCntBase* nonnull %16) #14
  br label %21

21:                                               ; preds = %7, %11, %15
  %22 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %23 = load %class.GrVkOpsRenderPass*, %class.GrVkOpsRenderPass** %22, align 8
  store %class.GrVkOpsRenderPass* null, %class.GrVkOpsRenderPass** %22, align 8
  %24 = icmp eq %class.GrVkOpsRenderPass* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %21
  %26 = bitcast %class.GrVkOpsRenderPass* %23 to void (%class.GrVkOpsRenderPass*)***
  %27 = load void (%class.GrVkOpsRenderPass*)**, void (%class.GrVkOpsRenderPass*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.GrVkOpsRenderPass*)*, void (%class.GrVkOpsRenderPass*)** %27, i64 1
  %29 = load void (%class.GrVkOpsRenderPass*)*, void (%class.GrVkOpsRenderPass*)** %28, align 8
  tail call void %29(%class.GrVkOpsRenderPass* nonnull %23) #14
  br label %30

30:                                               ; preds = %21, %25
  %31 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 16
  %32 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 16, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = and i64 %33, 4294967294
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %class.SkTArray.608, %class.SkTArray.608* %31, i64 0, i32 0
  br label %42

38:                                               ; preds = %53, %30
  %39 = phi i64 [ %33, %30 ], [ %55, %53 ]
  %40 = and i64 %39, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %62, label %59

42:                                               ; preds = %53, %36
  %43 = phi i64 [ 0, %36 ], [ %54, %53 ]
  %44 = load %"class.std::__1::unique_ptr.609"*, %"class.std::__1::unique_ptr.609"** %37, align 8
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.609", %"class.std::__1::unique_ptr.609"* %44, i64 %43, i32 0, i32 0, i32 0
  %46 = load %"class.SkDrawable::GpuDrawHandler"*, %"class.SkDrawable::GpuDrawHandler"** %45, align 8
  store %"class.SkDrawable::GpuDrawHandler"* null, %"class.SkDrawable::GpuDrawHandler"** %45, align 8
  %47 = icmp eq %"class.SkDrawable::GpuDrawHandler"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %42
  %49 = bitcast %"class.SkDrawable::GpuDrawHandler"* %46 to void (%"class.SkDrawable::GpuDrawHandler"*)***
  %50 = load void (%"class.SkDrawable::GpuDrawHandler"*)**, void (%"class.SkDrawable::GpuDrawHandler"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.SkDrawable::GpuDrawHandler"*)*, void (%"class.SkDrawable::GpuDrawHandler"*)** %50, i64 1
  %52 = load void (%"class.SkDrawable::GpuDrawHandler"*)*, void (%"class.SkDrawable::GpuDrawHandler"*)** %51, align 8
  tail call void %52(%"class.SkDrawable::GpuDrawHandler"* nonnull %46) #14
  br label %53

53:                                               ; preds = %48, %42
  %54 = add nuw nsw i64 %43, 1
  %55 = load i64, i64* %32, align 8
  %56 = lshr i64 %55, 1
  %57 = and i64 %56, 2147483647
  %58 = icmp ult i64 %54, %57
  br i1 %58, label %42, label %38

59:                                               ; preds = %38
  %60 = bitcast %class.SkTArray.608* %31 to i8**
  %61 = load i8*, i8** %60, align 8
  tail call void @_Z7sk_freePv(i8* %61) #14
  br label %62

62:                                               ; preds = %38, %59
  %63 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 15, i32 0, i32 0, i64 16
  %64 = bitcast i8* %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = and i64 %65, 1
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %72, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 15, i32 0, i32 0, i64 8
  %70 = bitcast i8* %69 to i8**
  %71 = load i8*, i8** %70, align 8
  tail call void @_Z7sk_freePv(i8* %71) #14
  br label %72

72:                                               ; preds = %62, %68
  %73 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 14, i32 0, i32 0, i64 16
  %74 = bitcast i8* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = and i64 %75, 1
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %82, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 14, i32 0, i32 0, i64 8
  %80 = bitcast i8* %79 to i8**
  %81 = load i8*, i8** %80, align 8
  tail call void @_Z7sk_freePv(i8* %81) #14
  br label %82

82:                                               ; preds = %72, %78
  %83 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 11
  tail call void @_ZN19GrVkMSAALoadManagerD1Ev(%class.GrVkMSAALoadManager* %83) #14
  %84 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 10
  %85 = getelementptr inbounds %class.GrStagingBufferManager, %class.GrStagingBufferManager* %84, i64 0, i32 0, i32 0, i32 0
  %86 = load %"struct.GrStagingBufferManager::StagingBuffer"*, %"struct.GrStagingBufferManager::StagingBuffer"** %85, align 8
  %87 = icmp eq %"struct.GrStagingBufferManager::StagingBuffer"* %86, null
  br i1 %87, label %114, label %88

88:                                               ; preds = %82
  %89 = bitcast %"struct.GrStagingBufferManager::StagingBuffer"* %86 to i8*
  %90 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %91 = load %"struct.GrStagingBufferManager::StagingBuffer"*, %"struct.GrStagingBufferManager::StagingBuffer"** %90, align 8
  %92 = icmp eq %"struct.GrStagingBufferManager::StagingBuffer"* %91, %86
  br i1 %92, label %112, label %93

93:                                               ; preds = %88, %107
  %94 = phi %"struct.GrStagingBufferManager::StagingBuffer"* [ %95, %107 ], [ %91, %88 ]
  %95 = getelementptr inbounds %"struct.GrStagingBufferManager::StagingBuffer", %"struct.GrStagingBufferManager::StagingBuffer"* %94, i64 -1
  %96 = getelementptr inbounds %"struct.GrStagingBufferManager::StagingBuffer", %"struct.GrStagingBufferManager::StagingBuffer"* %95, i64 0, i32 0, i32 0
  %97 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %96, align 8
  %98 = icmp eq %class.GrGpuBuffer* %97, null
  br i1 %98, label %107, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %97, i64 0, i32 0, i32 1
  %101 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = atomicrmw add i32* %101, i32 -1 acq_rel
  %103 = icmp eq i32 %102, 1
  br i1 %103, label %104, label %107

104:                                              ; preds = %99
  %105 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %100, i64 -1
  %106 = bitcast %class.GrIORef* %105 to %class.GrGpuResource*
  tail call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %106, i32 0) #14
  br label %107

107:                                              ; preds = %104, %99, %93
  %108 = icmp eq %"struct.GrStagingBufferManager::StagingBuffer"* %95, %86
  br i1 %108, label %109, label %93

109:                                              ; preds = %107
  %110 = bitcast %class.GrStagingBufferManager* %84 to i8**
  %111 = load i8*, i8** %110, align 8
  br label %112

112:                                              ; preds = %109, %88
  %113 = phi i8* [ %111, %109 ], [ %89, %88 ]
  store %"struct.GrStagingBufferManager::StagingBuffer"* %86, %"struct.GrStagingBufferManager::StagingBuffer"** %90, align 8
  tail call void @_ZdlPv(i8* %113) #15
  br label %114

114:                                              ; preds = %82, %112
  %115 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 9
  tail call void @_ZN20GrVkResourceProviderD1Ev(%class.GrVkResourceProvider* %115) #14
  %116 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 3, i32 0
  %117 = load %class.GrVkCaps*, %class.GrVkCaps** %116, align 8
  %118 = icmp eq %class.GrVkCaps* %117, null
  br i1 %118, label %129, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %class.GrVkCaps, %class.GrVkCaps* %117, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = atomicrmw add i32* %120, i32 -1 acq_rel
  %122 = icmp eq i32 %121, 1
  br i1 %122, label %123, label %129

123:                                              ; preds = %119
  %124 = bitcast %class.GrVkCaps* %117 to %class.SkRefCntBase*
  %125 = bitcast %class.GrVkCaps* %117 to void (%class.SkRefCntBase*)***
  %126 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %125, align 8
  %127 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %126, i64 2
  %128 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %127, align 8
  tail call void %128(%class.SkRefCntBase* nonnull %124) #14
  br label %129

129:                                              ; preds = %114, %119, %123
  %130 = load %class.GrVkMemoryAllocator*, %class.GrVkMemoryAllocator** %8, align 8
  %131 = icmp eq %class.GrVkMemoryAllocator* %130, null
  br i1 %131, label %142, label %132

132:                                              ; preds = %129
  %133 = getelementptr inbounds %class.GrVkMemoryAllocator, %class.GrVkMemoryAllocator* %130, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = atomicrmw add i32* %133, i32 -1 acq_rel
  %135 = icmp eq i32 %134, 1
  br i1 %135, label %136, label %142

136:                                              ; preds = %132
  %137 = bitcast %class.GrVkMemoryAllocator* %130 to %class.SkRefCntBase*
  %138 = bitcast %class.GrVkMemoryAllocator* %130 to void (%class.SkRefCntBase*)***
  %139 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %138, align 8
  %140 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %139, i64 2
  %141 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %140, align 8
  tail call void %141(%class.SkRefCntBase* nonnull %137) #14
  br label %142

142:                                              ; preds = %129, %132, %136
  %143 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 1, i32 0
  %144 = load %struct.GrVkInterface*, %struct.GrVkInterface** %143, align 8
  %145 = icmp eq %struct.GrVkInterface* %144, null
  br i1 %145, label %156, label %146

146:                                              ; preds = %142
  %147 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %144, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = atomicrmw add i32* %147, i32 -1 acq_rel
  %149 = icmp eq i32 %148, 1
  br i1 %149, label %150, label %156

150:                                              ; preds = %146
  %151 = bitcast %struct.GrVkInterface* %144 to %class.SkRefCntBase*
  %152 = bitcast %struct.GrVkInterface* %144 to void (%class.SkRefCntBase*)***
  %153 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %152, align 8
  %154 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, i64 2
  %155 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %154, align 8
  tail call void %155(%class.SkRefCntBase* nonnull %151) #14
  br label %156

156:                                              ; preds = %142, %146, %150
  %157 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 0
  tail call void @_ZN5GrGpuD2Ev(%class.GrGpu* %157) #14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN19GrVkMSAALoadManagerD1Ev(%class.GrVkMSAALoadManager*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN20GrVkResourceProviderD1Ev(%class.GrVkResourceProvider*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5GrGpuD2Ev(%class.GrGpu*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpuD0Ev(%class.GrVkGpu*) unnamed_addr #0 align 2 {
  tail call void @_ZN7GrVkGpuD2Ev(%class.GrVkGpu* %0) #14
  %2 = bitcast %class.GrVkGpu* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpu10disconnectEN5GrGpu14DisconnectTypeE(%class.GrVkGpu*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 0
  tail call void @_ZN5GrGpu10disconnectENS_14DisconnectTypeE(%class.GrGpu* %3, i32 %1) #14
  %4 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 19
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %25

7:                                                ; preds = %2
  tail call void @_ZN7GrVkGpu16destroyResourcesEv(%class.GrVkGpu* %0)
  %8 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 14, i32 0, i32 0, i64 8
  %9 = bitcast i8* %8 to %class.SkTArray.607*
  %10 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 14, i32 0, i32 0, i64 16
  %11 = bitcast i8* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = and i64 %12, -4294967295
  store i64 %13, i64* %11, align 8
  tail call void @_ZN8SkTArrayIPN13GrVkSemaphore8ResourceELb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.607* %9, i32 0, i32 2) #14
  %14 = load i64, i64* %11, align 8
  %15 = and i64 %14, -4294967297
  store i64 %15, i64* %11, align 8
  %16 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 15, i32 0, i32 0, i64 8
  %17 = bitcast i8* %16 to %class.SkTArray.607*
  %18 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 15, i32 0, i32 0, i64 16
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, -4294967295
  store i64 %21, i64* %19, align 8
  tail call void @_ZN8SkTArrayIPN13GrVkSemaphore8ResourceELb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.607* %17, i32 0, i32 2) #14
  %22 = load i64, i64* %19, align 8
  %23 = and i64 %22, -4294967297
  store i64 %23, i64* %19, align 8
  %24 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 13
  store %class.GrVkPrimaryCommandBuffer* null, %class.GrVkPrimaryCommandBuffer** %24, align 8
  store i8 1, i8* %4, align 8
  br label %25

25:                                               ; preds = %2, %7
  ret void
}

declare void @_ZN5GrGpu10disconnectENS_14DisconnectTypeE(%class.GrGpu*, i32) unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.GrThreadSafePipelineBuilder* @_ZN7GrVkGpu15pipelineBuilderEv(%class.GrVkGpu* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 9, i32 10, i32 0
  %3 = bitcast %"class.GrVkResourceProvider::PipelineStateCache"** %2 to %class.GrThreadSafePipelineBuilder**
  %4 = load %class.GrThreadSafePipelineBuilder*, %class.GrThreadSafePipelineBuilder** %3, align 8
  ret %class.GrThreadSafePipelineBuilder* %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN7GrVkGpu18refPipelineBuilderEv(%class.sk_sp.12* noalias nocapture sret, %class.GrVkGpu* nocapture readonly) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 9, i32 10, i32 0
  %4 = load %"class.GrVkResourceProvider::PipelineStateCache"*, %"class.GrVkResourceProvider::PipelineStateCache"** %3, align 8, !noalias !3
  %5 = icmp eq %"class.GrVkResourceProvider::PipelineStateCache"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.GrVkResourceProvider::PipelineStateCache", %"class.GrVkResourceProvider::PipelineStateCache"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic, !noalias !3
  br label %9

9:                                                ; preds = %2, %6
  %10 = bitcast %class.sk_sp.12* %0 to %"class.GrVkResourceProvider::PipelineStateCache"**
  store %"class.GrVkResourceProvider::PipelineStateCache"* %4, %"class.GrVkResourceProvider::PipelineStateCache"** %10, align 8, !alias.scope !3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrOpsRenderPass* @_ZN7GrVkGpu18onGetOpsRenderPassEP14GrRenderTargetbP12GrAttachment15GrSurfaceOriginRK7SkIRectRKN15GrOpsRenderPass16LoadAndStoreInfoERKNS8_23StencilLoadAndStoreInfoERK8SkTArrayIP14GrSurfaceProxyLb1EE18GrXferBarrierFlags(%class.GrVkGpu*, %class.GrRenderTarget*, i1 zeroext, %class.GrAttachment*, i32, %struct.SkIRect* dereferenceable(16), %"struct.GrOpsRenderPass::LoadAndStoreInfo"* nocapture readonly dereferenceable(24), %"struct.GrOpsRenderPass::StencilLoadAndStoreInfo"* dereferenceable(8), %class.SkTArray.224* dereferenceable(16), i32) unnamed_addr #0 align 2 {
  %11 = alloca %"struct.GrOpsRenderPass::LoadAndStoreInfo", align 4
  %12 = alloca %"struct.GrOpsRenderPass::LoadAndStoreInfo", align 4
  %13 = alloca %class.sk_sp.619, align 8
  %14 = alloca %class.sk_sp.619, align 8
  %15 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 21
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.615", %"class.std::__1::unique_ptr.615"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %class.GrVkOpsRenderPass*, %class.GrVkOpsRenderPass** %16, align 8
  %18 = icmp eq %class.GrVkOpsRenderPass* %17, null
  br i1 %18, label %19, label %31

19:                                               ; preds = %10
  %20 = tail call i8* @_Znwm(i64 144) #15
  %21 = bitcast i8* %20 to %class.GrVkOpsRenderPass*
  tail call void @_ZN17GrVkOpsRenderPassC1EP7GrVkGpu(%class.GrVkOpsRenderPass* nonnull %21, %class.GrVkGpu* %0) #14
  %22 = ptrtoint i8* %20 to i64
  %23 = load %class.GrVkOpsRenderPass*, %class.GrVkOpsRenderPass** %16, align 8
  %24 = bitcast %"class.std::__1::unique_ptr.615"* %15 to i64*
  store i64 %22, i64* %24, align 8
  %25 = icmp eq %class.GrVkOpsRenderPass* %23, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %19
  %27 = bitcast %class.GrVkOpsRenderPass* %23 to void (%class.GrVkOpsRenderPass*)***
  %28 = load void (%class.GrVkOpsRenderPass*)**, void (%class.GrVkOpsRenderPass*)*** %27, align 8
  %29 = getelementptr inbounds void (%class.GrVkOpsRenderPass*)*, void (%class.GrVkOpsRenderPass*)** %28, i64 1
  %30 = load void (%class.GrVkOpsRenderPass*)*, void (%class.GrVkOpsRenderPass*)** %29, align 8
  tail call void %30(%class.GrVkOpsRenderPass* nonnull %23) #14
  br label %31

31:                                               ; preds = %10, %19, %26
  %32 = bitcast %class.GrRenderTarget* %1 to %class.GrVkRenderTarget*
  %33 = and i32 %9, 3
  %34 = bitcast %"struct.GrOpsRenderPass::LoadAndStoreInfo"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #14
  %35 = getelementptr inbounds %"struct.GrOpsRenderPass::LoadAndStoreInfo", %"struct.GrOpsRenderPass::LoadAndStoreInfo"* %11, i64 0, i32 0
  %36 = getelementptr inbounds %"struct.GrOpsRenderPass::LoadAndStoreInfo", %"struct.GrOpsRenderPass::LoadAndStoreInfo"* %11, i64 0, i32 1
  %37 = bitcast %"struct.GrOpsRenderPass::LoadAndStoreInfo"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %34, i8* align 4 %37, i64 24, i1 false)
  %38 = bitcast %"struct.GrOpsRenderPass::LoadAndStoreInfo"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %38, i8 0, i64 24, i1 false)
  br i1 %2, label %39, label %62

39:                                               ; preds = %31
  %40 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 3, i32 0
  %41 = load %class.GrVkCaps*, %class.GrVkCaps** %40, align 8
  %42 = getelementptr inbounds %class.GrVkCaps, %class.GrVkCaps* %41, i64 0, i32 28
  %43 = load i8, i8* %42, align 4, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %62, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %class.GrRenderTarget, %class.GrRenderTarget* %1, i64 0, i32 5, i32 0, i32 1
  %47 = bitcast %class.GrIORef* %46 to %class.GrVkAttachment**
  %48 = load %class.GrVkAttachment*, %class.GrVkAttachment** %47, align 8
  %49 = icmp eq %class.GrVkAttachment* %48, null
  br i1 %49, label %62, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %48, i64 0, i32 1, i32 1, i32 5
  %52 = load i32, i32* %51, align 4
  %53 = trunc i32 %52 to i8
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %62

55:                                               ; preds = %50
  store i32 1, i32* %36, align 4
  %56 = getelementptr inbounds %"struct.GrOpsRenderPass::LoadAndStoreInfo", %"struct.GrOpsRenderPass::LoadAndStoreInfo"* %6, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %55
  store i32 2, i32* %35, align 4
  br label %62

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"struct.GrOpsRenderPass::LoadAndStoreInfo", %"struct.GrOpsRenderPass::LoadAndStoreInfo"* %12, i64 0, i32 0
  store i32 2, i32* %61, align 4
  br label %62

62:                                               ; preds = %39, %45, %59, %60, %50, %31
  %63 = phi i1 [ true, %59 ], [ true, %60 ], [ false, %50 ], [ false, %45 ], [ false, %39 ], [ false, %31 ]
  %64 = phi i32 [ 1, %59 ], [ 0, %60 ], [ 0, %50 ], [ 0, %45 ], [ 0, %39 ], [ 0, %31 ]
  %65 = getelementptr inbounds %class.GrRenderTarget, %class.GrRenderTarget* %1, i64 1, i32 5, i32 0, i32 6, i32 0, i32 0, i32 1
  %66 = bitcast %union.anon* %65 to %class.GrVkFramebuffer**
  %67 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %66, align 8
  %68 = icmp eq %class.GrVkFramebuffer* %67, null
  br i1 %68, label %73, label %69

69:                                               ; preds = %62
  %70 = bitcast %class.sk_sp.619* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #14
  call void @_ZNK16GrVkRenderTarget19externalFramebufferEv(%class.sk_sp.619* nonnull sret %13, %class.GrVkRenderTarget* %32) #14
  %71 = bitcast %class.sk_sp.619* %13 to i64*
  %72 = load i64, i64* %71, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #14
  br label %82

73:                                               ; preds = %62
  %74 = icmp ne %class.GrAttachment* %3, null
  %75 = tail call %class.GrVkFramebuffer* @_ZN16GrVkRenderTarget14getFramebufferEbbN14GrVkRenderPass19SelfDependencyFlagsENS0_15LoadFromResolveE(%class.GrVkRenderTarget* %32, i1 zeroext %63, i1 zeroext %74, i32 %33, i32 %64) #14
  %76 = icmp eq %class.GrVkFramebuffer* %75, null
  br i1 %76, label %80, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %75, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = atomicrmw add i32* %78, i32 1 monotonic, !noalias !6
  br label %80

80:                                               ; preds = %73, %77
  %81 = ptrtoint %class.GrVkFramebuffer* %75 to i64
  br label %82

82:                                               ; preds = %80, %69
  %83 = phi i64 [ %72, %69 ], [ %81, %80 ]
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %109, label %85

85:                                               ; preds = %82
  %86 = load %class.GrVkOpsRenderPass*, %class.GrVkOpsRenderPass** %16, align 8
  %87 = bitcast %class.sk_sp.619* %14 to i64*
  store i64 %83, i64* %87, align 8
  %88 = call zeroext i1 @_ZN17GrVkOpsRenderPass3setEP14GrRenderTarget5sk_spI15GrVkFramebufferE15GrSurfaceOriginRK7SkIRectRKN15GrOpsRenderPass16LoadAndStoreInfoERKNS9_23StencilLoadAndStoreInfoESC_N14GrVkRenderPass19SelfDependencyFlagsENSG_15LoadFromResolveERK8SkTArrayIP14GrSurfaceProxyLb1EE(%class.GrVkOpsRenderPass* %86, %class.GrRenderTarget* %1, %class.sk_sp.619* nonnull %14, i32 %4, %struct.SkIRect* dereferenceable(16) %5, %"struct.GrOpsRenderPass::LoadAndStoreInfo"* nonnull dereferenceable(24) %11, %"struct.GrOpsRenderPass::StencilLoadAndStoreInfo"* dereferenceable(8) %7, %"struct.GrOpsRenderPass::LoadAndStoreInfo"* nonnull dereferenceable(24) %12, i32 %33, i32 %64, %class.SkTArray.224* dereferenceable(16) %8) #14
  %89 = getelementptr inbounds %class.sk_sp.619, %class.sk_sp.619* %14, i64 0, i32 0
  %90 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %89, align 8
  %91 = icmp eq %class.GrVkFramebuffer* %90, null
  br i1 %91, label %105, label %92

92:                                               ; preds = %85
  %93 = bitcast %class.GrVkFramebuffer* %90 to %class.GrManagedResource*
  %94 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %90, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = atomicrmw add i32* %94, i32 -1 acq_rel
  %96 = icmp eq i32 %95, 1
  br i1 %96, label %97, label %105

97:                                               ; preds = %92
  %98 = bitcast %class.GrVkFramebuffer* %90 to void (%class.GrManagedResource*)***
  %99 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %98, align 8
  %100 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %99, i64 4
  %101 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %100, align 8
  call void %101(%class.GrManagedResource* nonnull %93) #14
  %102 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %98, align 8
  %103 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %102, i64 1
  %104 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %103, align 8
  call void %104(%class.GrManagedResource* nonnull %93) #14
  br label %105

105:                                              ; preds = %85, %92, %97
  br i1 %88, label %106, label %109

106:                                              ; preds = %105
  %107 = load %class.GrVkOpsRenderPass*, %class.GrVkOpsRenderPass** %16, align 8
  %108 = getelementptr inbounds %class.GrVkOpsRenderPass, %class.GrVkOpsRenderPass* %107, i64 0, i32 0
  br label %109

109:                                              ; preds = %82, %105, %106
  %110 = phi %class.GrOpsRenderPass* [ null, %105 ], [ %108, %106 ], [ null, %82 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #14
  ret %class.GrOpsRenderPass* %110
}

declare void @_ZNK16GrVkRenderTarget19externalFramebufferEv(%class.sk_sp.619* sret, %class.GrVkRenderTarget*) local_unnamed_addr #2

declare %class.GrVkFramebuffer* @_ZN16GrVkRenderTarget14getFramebufferEbbN14GrVkRenderPass19SelfDependencyFlagsENS0_15LoadFromResolveE(%class.GrVkRenderTarget*, i1 zeroext, i1 zeroext, i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN17GrVkOpsRenderPass3setEP14GrRenderTarget5sk_spI15GrVkFramebufferE15GrSurfaceOriginRK7SkIRectRKN15GrOpsRenderPass16LoadAndStoreInfoERKNS9_23StencilLoadAndStoreInfoESC_N14GrVkRenderPass19SelfDependencyFlagsENSG_15LoadFromResolveERK8SkTArrayIP14GrSurfaceProxyLb1EE(%class.GrVkOpsRenderPass*, %class.GrRenderTarget*, %class.sk_sp.619*, i32, %struct.SkIRect* dereferenceable(16), %"struct.GrOpsRenderPass::LoadAndStoreInfo"* dereferenceable(24), %"struct.GrOpsRenderPass::StencilLoadAndStoreInfo"* dereferenceable(8), %"struct.GrOpsRenderPass::LoadAndStoreInfo"* dereferenceable(24), i32, i32, %class.SkTArray.224* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7GrVkGpu19submitCommandBufferENS_9SyncQueueE(%class.GrVkGpu*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %4 = load atomic i64, i64* @_ZZN7GrVkGpu19submitCommandBufferENS_9SyncQueueEE28trace_event_unique_atomic379.0.0 monotonic, align 8
  %5 = inttoptr i64 %4 to i8*
  %6 = icmp eq i64 %4, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %2
  %8 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #14
  %9 = bitcast %class.SkEventTracer* %8 to i8* (%class.SkEventTracer*, i8*)***
  %10 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %9, align 8
  %11 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %10, i64 2
  %12 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %11, align 8
  %13 = tail call i8* %12(%class.SkEventTracer* %8, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0)) #14
  %14 = ptrtoint i8* %13 to i64
  store atomic i64 %14, i64* @_ZZN7GrVkGpu19submitCommandBufferENS_9SyncQueueEE28trace_event_unique_atomic379.0.0 monotonic, align 8
  br label %15

15:                                               ; preds = %2, %7
  %16 = phi i8* [ %5, %2 ], [ %13, %7 ]
  %17 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #14
  %18 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 0
  %19 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1, i32 1
  %21 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1, i32 2
  %22 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1
  %23 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %18, align 8
  %24 = load i8, i8* %16, align 1
  %25 = and i8 %24, 5
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %36, label %27

27:                                               ; preds = %15
  %28 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #14
  %29 = bitcast %class.SkEventTracer* %28 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %30 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %29, align 8
  %31 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %30, i64 4
  %32 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %31, align 8
  %33 = tail call i64 %32(%class.SkEventTracer* %28, i8 signext 88, i8* %16, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__._ZN7GrVkGpu19submitCommandBufferENS_9SyncQueueE, i64 0, i64 0), i64 0, i32 0, i8** null, i8* null, i64* null, i8 zeroext 0) #14
  %34 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %3, i64 0, i32 1
  %35 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %34, i64 0, i32 0
  store i8* %16, i8** %35, align 8
  store i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__._ZN7GrVkGpu19submitCommandBufferENS_9SyncQueueE, i64 0, i64 0), i8** %20, align 8
  store i64 %33, i64* %21, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %34, %"struct.skia::tracing_internals::ScopedTracer::Data"** %18, align 8
  br label %36

36:                                               ; preds = %15, %27
  %37 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 13
  %38 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %37, align 8
  %39 = icmp eq %class.GrVkPrimaryCommandBuffer* %38, null
  br i1 %39, label %256, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %class.GrVkPrimaryCommandBuffer, %class.GrVkPrimaryCommandBuffer* %38, i64 0, i32 0, i32 6
  %42 = load i8, i8* %41, align 1, !range !2
  %43 = icmp eq i8 %42, 0
  %44 = icmp ne i32 %1, 0
  %45 = and i1 %44, %43
  br i1 %45, label %46, label %103

46:                                               ; preds = %40
  %47 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 15, i32 0, i32 0, i64 16
  %48 = bitcast i8* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = and i64 %49, 4294967294
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %103

52:                                               ; preds = %46
  %53 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 14, i32 0, i32 0, i64 16
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = and i64 %55, 4294967294
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %103

58:                                               ; preds = %52
  %59 = getelementptr inbounds %class.GrVkPrimaryCommandBuffer, %class.GrVkPrimaryCommandBuffer* %38, i64 0, i32 3
  %60 = getelementptr inbounds %class.GrVkPrimaryCommandBuffer, %class.GrVkPrimaryCommandBuffer* %38, i64 0, i32 3, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = lshr i64 %61, 1
  %63 = trunc i64 %62 to i32
  %64 = and i32 %63, 2147483647
  %65 = and i64 %61, -4294967295
  store i64 %65, i64* %60, align 8
  %66 = icmp eq i32 %64, 0
  br i1 %66, label %99, label %67

67:                                               ; preds = %58
  %68 = getelementptr inbounds %class.SkTArray.549, %class.SkTArray.549* %59, i64 0, i32 0
  br label %69

69:                                               ; preds = %97, %67
  %70 = phi i64 [ %65, %67 ], [ %98, %97 ]
  %71 = phi i32 [ 0, %67 ], [ %95, %97 ]
  %72 = load %class.sk_sp.142*, %class.sk_sp.142** %68, align 8
  %73 = lshr i64 %70, 1
  %74 = trunc i64 %73 to i32
  %75 = and i32 %74, 2147483647
  %76 = add nuw nsw i32 %75, %71
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %class.sk_sp.142, %class.sk_sp.142* %72, i64 %77, i32 0
  %79 = load %class.GrRefCntedCallback*, %class.GrRefCntedCallback** %78, align 8
  %80 = icmp eq %class.GrRefCntedCallback* %79, null
  br i1 %80, label %94, label %81

81:                                               ; preds = %69
  %82 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %79, i64 0, i32 0
  %83 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = atomicrmw add i32* %83, i32 -1 acq_rel
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %86, label %94

86:                                               ; preds = %81
  %87 = getelementptr inbounds %class.SkNVRefCnt.143, %class.SkNVRefCnt.143* %82, i64 2
  %88 = bitcast %class.SkNVRefCnt.143* %87 to void (i8*)**
  %89 = load void (i8*)*, void (i8*)** %88, align 8
  %90 = getelementptr inbounds %class.SkNVRefCnt.143, %class.SkNVRefCnt.143* %82, i64 4
  %91 = bitcast %class.SkNVRefCnt.143* %90 to i8**
  %92 = load i8*, i8** %91, align 8
  call void %89(i8* %92) #14
  %93 = bitcast %class.GrRefCntedCallback* %79 to i8*
  call void @_ZdlPv(i8* %93) #15
  br label %94

94:                                               ; preds = %86, %81, %69
  %95 = add nuw nsw i32 %71, 1
  %96 = icmp eq i32 %95, %64
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  %98 = load i64, i64* %60, align 8
  br label %69

99:                                               ; preds = %94, %58
  call void @_ZN8SkTArrayI5sk_spI18GrRefCntedCallbackELb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.549* %59, i32 0, i32 2) #14
  %100 = load i64, i64* %60, align 8
  %101 = and i64 %100, -4294967297
  store i64 %101, i64* %60, align 8
  %102 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 9
  br label %253

103:                                              ; preds = %52, %46, %40
  call void @_ZN24GrVkPrimaryCommandBuffer3endEP7GrVkGpub(%class.GrVkPrimaryCommandBuffer* nonnull %38, %class.GrVkGpu* %0, i1 zeroext false) #14
  %104 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 12
  %105 = load %class.GrVkCommandPool*, %class.GrVkCommandPool** %104, align 8
  call void @_ZN15GrVkCommandPool5closeEv(%class.GrVkCommandPool* %105) #14
  %106 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %37, align 8
  %107 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 7
  %108 = load %struct.VkQueue_T*, %struct.VkQueue_T** %107, align 8
  %109 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 15, i32 0, i32 0, i64 8
  %110 = bitcast i8* %109 to %class.SkTArray.607*
  %111 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 14, i32 0, i32 0, i64 8
  %112 = bitcast i8* %111 to %class.SkTArray.607*
  %113 = call zeroext i1 @_ZN24GrVkPrimaryCommandBuffer13submitToQueueEP7GrVkGpuP9VkQueue_TR8SkTArrayIPN13GrVkSemaphore8ResourceELb0EES9_(%class.GrVkPrimaryCommandBuffer* %106, %class.GrVkGpu* %0, %struct.VkQueue_T* %108, %class.SkTArray.607* dereferenceable(16) %110, %class.SkTArray.607* dereferenceable(16) %112) #14
  %114 = icmp eq i32 %1, 0
  %115 = and i1 %114, %113
  br i1 %115, label %116, label %118

116:                                              ; preds = %103
  %117 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %37, align 8
  call void @_ZN24GrVkPrimaryCommandBuffer9forceSyncEP7GrVkGpu(%class.GrVkPrimaryCommandBuffer* %117, %class.GrVkGpu* %0) #14
  br label %118

118:                                              ; preds = %116, %103
  %119 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 16
  %120 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 16, i32 1
  %121 = load i64, i64* %120, align 8
  %122 = lshr i64 %121, 1
  %123 = trunc i64 %122 to i32
  %124 = and i32 %123, 2147483647
  %125 = and i64 %121, -4294967295
  store i64 %125, i64* %120, align 8
  %126 = icmp eq i32 %124, 0
  br i1 %126, label %151, label %127

127:                                              ; preds = %118
  %128 = getelementptr inbounds %class.SkTArray.608, %class.SkTArray.608* %119, i64 0, i32 0
  br label %129

129:                                              ; preds = %149, %127
  %130 = phi i64 [ %125, %127 ], [ %150, %149 ]
  %131 = phi i32 [ 0, %127 ], [ %147, %149 ]
  %132 = load %"class.std::__1::unique_ptr.609"*, %"class.std::__1::unique_ptr.609"** %128, align 8
  %133 = lshr i64 %130, 1
  %134 = trunc i64 %133 to i32
  %135 = and i32 %134, 2147483647
  %136 = add nuw nsw i32 %135, %131
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds %"class.std::__1::unique_ptr.609", %"class.std::__1::unique_ptr.609"* %132, i64 %137, i32 0, i32 0, i32 0
  %139 = load %"class.SkDrawable::GpuDrawHandler"*, %"class.SkDrawable::GpuDrawHandler"** %138, align 8
  store %"class.SkDrawable::GpuDrawHandler"* null, %"class.SkDrawable::GpuDrawHandler"** %138, align 8
  %140 = icmp eq %"class.SkDrawable::GpuDrawHandler"* %139, null
  br i1 %140, label %146, label %141

141:                                              ; preds = %129
  %142 = bitcast %"class.SkDrawable::GpuDrawHandler"* %139 to void (%"class.SkDrawable::GpuDrawHandler"*)***
  %143 = load void (%"class.SkDrawable::GpuDrawHandler"*)**, void (%"class.SkDrawable::GpuDrawHandler"*)*** %142, align 8
  %144 = getelementptr inbounds void (%"class.SkDrawable::GpuDrawHandler"*)*, void (%"class.SkDrawable::GpuDrawHandler"*)** %143, i64 1
  %145 = load void (%"class.SkDrawable::GpuDrawHandler"*)*, void (%"class.SkDrawable::GpuDrawHandler"*)** %144, align 8
  call void %145(%"class.SkDrawable::GpuDrawHandler"* nonnull %139) #14
  br label %146

146:                                              ; preds = %141, %129
  %147 = add nuw nsw i32 %131, 1
  %148 = icmp eq i32 %147, %124
  br i1 %148, label %151, label %149

149:                                              ; preds = %146
  %150 = load i64, i64* %120, align 8
  br label %129

151:                                              ; preds = %146, %118
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN10SkDrawable14GpuDrawHandlerENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.608* %119, i32 0, i32 2) #14
  %152 = load i64, i64* %120, align 8
  %153 = and i64 %152, -4294967297
  store i64 %153, i64* %120, align 8
  br i1 %113, label %154, label %192

154:                                              ; preds = %151
  %155 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 14, i32 0, i32 0, i64 16
  %156 = bitcast i8* %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = and i64 %157, 4294967294
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %162, label %160

160:                                              ; preds = %154
  %161 = bitcast i8* %111 to %"class.GrVkSemaphore::Resource"***
  br label %167

162:                                              ; preds = %186, %154
  %163 = phi i64 [ %157, %154 ], [ %188, %186 ]
  %164 = and i64 %163, -4294967295
  store i64 %164, i64* %156, align 8
  call void @_ZN8SkTArrayIPN13GrVkSemaphore8ResourceELb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.607* %112, i32 0, i32 2) #14
  %165 = load i64, i64* %156, align 8
  %166 = and i64 %165, -4294967297
  store i64 %166, i64* %156, align 8
  br label %192

167:                                              ; preds = %160, %186
  %168 = phi i64 [ 0, %160 ], [ %187, %186 ]
  %169 = load %"class.GrVkSemaphore::Resource"**, %"class.GrVkSemaphore::Resource"*** %161, align 8
  %170 = getelementptr inbounds %"class.GrVkSemaphore::Resource"*, %"class.GrVkSemaphore::Resource"** %169, i64 %168
  %171 = bitcast %"class.GrVkSemaphore::Resource"** %170 to %class.GrManagedResource**
  %172 = load %class.GrManagedResource*, %class.GrManagedResource** %171, align 8
  %173 = getelementptr inbounds %class.GrManagedResource, %class.GrManagedResource* %172, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = atomicrmw add i32* %173, i32 -1 acq_rel
  %175 = icmp eq i32 %174, 1
  br i1 %175, label %176, label %186

176:                                              ; preds = %167
  %177 = bitcast %class.GrManagedResource* %172 to void (%class.GrManagedResource*)***
  %178 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %177, align 8
  %179 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %178, i64 4
  %180 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %179, align 8
  call void %180(%class.GrManagedResource* %172) #14
  %181 = icmp eq %class.GrManagedResource* %172, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %176
  %183 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %177, align 8
  %184 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %183, i64 1
  %185 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %184, align 8
  call void %185(%class.GrManagedResource* nonnull %172) #14
  br label %186

186:                                              ; preds = %167, %176, %182
  %187 = add nuw nsw i64 %168, 1
  %188 = load i64, i64* %156, align 8
  %189 = lshr i64 %188, 1
  %190 = and i64 %189, 2147483647
  %191 = icmp ult i64 %187, %190
  br i1 %191, label %167, label %162

192:                                              ; preds = %162, %151
  %193 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 15, i32 0, i32 0, i64 16
  %194 = bitcast i8* %193 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = and i64 %195, 4294967294
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %200, label %198

198:                                              ; preds = %192
  %199 = bitcast i8* %109 to %"class.GrVkSemaphore::Resource"***
  br label %224

200:                                              ; preds = %243, %192
  %201 = phi i64 [ %195, %192 ], [ %245, %243 ]
  %202 = and i64 %201, -4294967295
  store i64 %202, i64* %194, align 8
  call void @_ZN8SkTArrayIPN13GrVkSemaphore8ResourceELb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.607* %110, i32 0, i32 2) #14
  %203 = load i64, i64* %194, align 8
  %204 = and i64 %203, -4294967297
  store i64 %204, i64* %194, align 8
  %205 = bitcast %class.GrVkCommandPool** %104 to %class.GrManagedResource**
  %206 = load %class.GrManagedResource*, %class.GrManagedResource** %205, align 8
  %207 = getelementptr inbounds %class.GrManagedResource, %class.GrManagedResource* %206, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = atomicrmw add i32* %207, i32 -1 acq_rel
  %209 = icmp eq i32 %208, 1
  br i1 %209, label %210, label %220

210:                                              ; preds = %200
  %211 = bitcast %class.GrManagedResource* %206 to void (%class.GrManagedResource*)***
  %212 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %211, align 8
  %213 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %212, i64 4
  %214 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %213, align 8
  call void %214(%class.GrManagedResource* %206) #14
  %215 = icmp eq %class.GrManagedResource* %206, null
  br i1 %215, label %220, label %216

216:                                              ; preds = %210
  %217 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %211, align 8
  %218 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %217, i64 1
  %219 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %218, align 8
  call void %219(%class.GrManagedResource* nonnull %206) #14
  br label %220

220:                                              ; preds = %200, %210, %216
  %221 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 9
  %222 = call %class.GrVkCommandPool* @_ZN20GrVkResourceProvider23findOrCreateCommandPoolEv(%class.GrVkResourceProvider* %221) #14
  store %class.GrVkCommandPool* %222, %class.GrVkCommandPool** %104, align 8
  %223 = icmp eq %class.GrVkCommandPool* %222, null
  br i1 %223, label %252, label %249

224:                                              ; preds = %198, %243
  %225 = phi i64 [ 0, %198 ], [ %244, %243 ]
  %226 = load %"class.GrVkSemaphore::Resource"**, %"class.GrVkSemaphore::Resource"*** %199, align 8
  %227 = getelementptr inbounds %"class.GrVkSemaphore::Resource"*, %"class.GrVkSemaphore::Resource"** %226, i64 %225
  %228 = bitcast %"class.GrVkSemaphore::Resource"** %227 to %class.GrManagedResource**
  %229 = load %class.GrManagedResource*, %class.GrManagedResource** %228, align 8
  %230 = getelementptr inbounds %class.GrManagedResource, %class.GrManagedResource* %229, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = atomicrmw add i32* %230, i32 -1 acq_rel
  %232 = icmp eq i32 %231, 1
  br i1 %232, label %233, label %243

233:                                              ; preds = %224
  %234 = bitcast %class.GrManagedResource* %229 to void (%class.GrManagedResource*)***
  %235 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %234, align 8
  %236 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %235, i64 4
  %237 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %236, align 8
  call void %237(%class.GrManagedResource* %229) #14
  %238 = icmp eq %class.GrManagedResource* %229, null
  br i1 %238, label %243, label %239

239:                                              ; preds = %233
  %240 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %234, align 8
  %241 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %240, i64 1
  %242 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %241, align 8
  call void %242(%class.GrManagedResource* nonnull %229) #14
  br label %243

243:                                              ; preds = %224, %233, %239
  %244 = add nuw nsw i64 %225, 1
  %245 = load i64, i64* %194, align 8
  %246 = lshr i64 %245, 1
  %247 = and i64 %246, 2147483647
  %248 = icmp ult i64 %244, %247
  br i1 %248, label %224, label %200

249:                                              ; preds = %220
  %250 = getelementptr inbounds %class.GrVkCommandPool, %class.GrVkCommandPool* %222, i64 0, i32 4, i32 0, i32 0, i32 0
  %251 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %250, align 8
  store %class.GrVkPrimaryCommandBuffer* %251, %class.GrVkPrimaryCommandBuffer** %37, align 8
  call void @_ZN24GrVkPrimaryCommandBuffer5beginEP7GrVkGpu(%class.GrVkPrimaryCommandBuffer* %251, %class.GrVkGpu* %0) #14
  br label %253

252:                                              ; preds = %220
  store %class.GrVkPrimaryCommandBuffer* null, %class.GrVkPrimaryCommandBuffer** %37, align 8
  br label %253

253:                                              ; preds = %249, %252, %99
  %254 = phi %class.GrVkResourceProvider* [ %102, %99 ], [ %221, %252 ], [ %221, %249 ]
  %255 = phi i1 [ true, %99 ], [ %113, %252 ], [ %113, %249 ]
  call void @_ZN20GrVkResourceProvider19checkCommandBuffersEv(%class.GrVkResourceProvider* %254) #14
  br label %256

256:                                              ; preds = %253, %36
  %257 = phi i1 [ false, %36 ], [ %255, %253 ]
  %258 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %18, align 8
  %259 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %258, null
  br i1 %259, label %273, label %260

260:                                              ; preds = %256
  %261 = load i8*, i8** %19, align 8
  %262 = load i8, i8* %261, align 1
  %263 = icmp eq i8 %262, 0
  br i1 %263, label %273, label %264

264:                                              ; preds = %260
  %265 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #14
  %266 = load i8*, i8** %19, align 8
  %267 = load i8*, i8** %20, align 8
  %268 = load i64, i64* %21, align 8
  %269 = bitcast %class.SkEventTracer* %265 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %270 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %269, align 8
  %271 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %270, i64 5
  %272 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %271, align 8
  call void %272(%class.SkEventTracer* %265, i8* %266, i8* %267, i64 %268) #14
  br label %273

273:                                              ; preds = %256, %260, %264
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #14
  ret i1 %257
}

declare %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() local_unnamed_addr #2

declare void @_ZN20GrVkResourceProvider19checkCommandBuffersEv(%class.GrVkResourceProvider*) local_unnamed_addr #2

declare zeroext i1 @_ZN24GrVkPrimaryCommandBuffer13submitToQueueEP7GrVkGpuP9VkQueue_TR8SkTArrayIPN13GrVkSemaphore8ResourceELb0EES9_(%class.GrVkPrimaryCommandBuffer*, %class.GrVkGpu*, %struct.VkQueue_T*, %class.SkTArray.607* dereferenceable(16), %class.SkTArray.607* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN24GrVkPrimaryCommandBuffer9forceSyncEP7GrVkGpu(%class.GrVkPrimaryCommandBuffer*, %class.GrVkGpu*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpu14onCreateBufferEm15GrGpuBufferType15GrAccessPatternPKv(%class.sk_sp.295* noalias nocapture sret, %class.GrVkGpu*, i64, i32, i32, i8*) unnamed_addr #0 align 2 {
  %7 = alloca %class.sk_sp.678, align 8
  %8 = getelementptr inbounds %class.sk_sp.295, %class.sk_sp.295* %0, i64 0, i32 0
  %9 = bitcast %class.sk_sp.678* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #14
  call void @_ZN10GrVkBuffer4MakeEP7GrVkGpum15GrGpuBufferType15GrAccessPattern(%class.sk_sp.678* nonnull sret %7, %class.GrVkGpu* %1, i64 %2, i32 %3, i32 %4) #14
  %10 = getelementptr inbounds %class.sk_sp.678, %class.sk_sp.678* %7, i64 0, i32 0
  %11 = load %class.GrVkBuffer*, %class.GrVkBuffer** %10, align 8
  %12 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %11, i64 0, i32 0
  store %class.GrGpuBuffer* %12, %class.GrGpuBuffer** %8, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #14
  %13 = icmp eq i8* %5, null
  %14 = icmp eq %class.GrVkBuffer* %11, null
  %15 = or i1 %13, %14
  br i1 %15, label %18, label %16

16:                                               ; preds = %6
  %17 = call zeroext i1 @_ZN11GrGpuBuffer10updateDataEPKvm(%class.GrGpuBuffer* nonnull %12, i8* nonnull %5, i64 %2) #14
  br label %18

18:                                               ; preds = %16, %6
  ret void
}

declare void @_ZN10GrVkBuffer4MakeEP7GrVkGpum15GrGpuBufferType15GrAccessPattern(%class.sk_sp.678* sret, %class.GrVkGpu*, i64, i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN11GrGpuBuffer10updateDataEPKvm(%class.GrGpuBuffer*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7GrVkGpu13onWritePixelsEP9GrSurface7SkIRect11GrColorTypeS3_PK10GrMipLevelib(%class.GrVkGpu*, %class.GrSurface*, i64, i64, i32, i32, %struct.GrMipLevel* readonly, i32, i1 zeroext) unnamed_addr #0 align 2 {
  %10 = bitcast %class.GrSurface* %1 to %class.GrTexture* (%class.GrSurface*)***
  %11 = load %class.GrTexture* (%class.GrSurface*)**, %class.GrTexture* (%class.GrSurface*)*** %10, align 8
  %12 = getelementptr inbounds %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %11, i64 10
  %13 = load %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %12, align 8
  %14 = tail call %class.GrTexture* %13(%class.GrSurface* %1) #14
  %15 = icmp eq %class.GrTexture* %14, null
  br i1 %15, label %53, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %class.GrTexture, %class.GrTexture* %14, i64 0, i32 5
  %18 = bitcast %class.GrSurface* %17 to %class.GrVkAttachment**
  %19 = load %class.GrVkAttachment*, %class.GrVkAttachment** %18, align 8
  %20 = icmp eq i32 %7, 0
  br i1 %20, label %53, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.GrMipLevel, %struct.GrMipLevel* %6, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %53, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %19, i64 0, i32 1
  %27 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %19, i64 0, i32 1, i32 1, i32 2
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %46

30:                                               ; preds = %25
  %31 = icmp sgt i32 %7, 1
  br i1 %31, label %32, label %33

32:                                               ; preds = %30
  tail call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 501, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.6, i64 0, i64 0)) #14
  br label %53

33:                                               ; preds = %30
  %34 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %19, i64 0, i32 1, i32 3, i32 0
  %35 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %34, align 8
  %36 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %35, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 seq_cst, align 4
  %38 = icmp eq i32 %37, 8
  br i1 %38, label %41, label %39

39:                                               ; preds = %33
  tail call void @_ZN9GrVkImage27setImageLayoutAndQueueIndexEPK7GrVkGpu13VkImageLayoutjjbj(%class.GrVkImage* %26, %class.GrVkGpu* %0, i32 1, i32 16384, i32 16384, i1 zeroext false, i32 -1) #14
  %40 = tail call zeroext i1 @_ZN7GrVkGpu19submitCommandBufferENS_9SyncQueueE(%class.GrVkGpu* %0, i32 0)
  br i1 %40, label %41, label %53

41:                                               ; preds = %33, %39
  %42 = load i8*, i8** %22, align 8
  %43 = getelementptr inbounds %struct.GrMipLevel, %struct.GrMipLevel* %6, i64 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = tail call zeroext i1 @_ZN7GrVkGpu19uploadTexDataLinearEP14GrVkAttachment7SkIRect11GrColorTypePKvm(%class.GrVkGpu* %0, %class.GrVkAttachment* %19, i64 %2, i64 %3, i32 %5, i8* %42, i64 %44)
  br label %50

46:                                               ; preds = %25
  %47 = tail call zeroext i1 @_ZN7GrVkGpu20uploadTexDataOptimalEP14GrVkAttachment7SkIRect11GrColorTypePK10GrMipLeveli(%class.GrVkGpu* %0, %class.GrVkAttachment* %19, i64 %2, i64 %3, i32 %5, %struct.GrMipLevel* %6, i32 %7)
  %48 = icmp eq i32 %7, 1
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  tail call void @_ZN9GrTexture16markMipmapsDirtyEv(%class.GrTexture* nonnull %14) #14
  br label %50

50:                                               ; preds = %46, %49, %41
  %51 = phi i1 [ %45, %41 ], [ %47, %49 ], [ %47, %46 ]
  br i1 %8, label %52, label %53

52:                                               ; preds = %50
  tail call void @_ZN9GrVkImage27setImageLayoutAndQueueIndexEPK7GrVkGpu13VkImageLayoutjjbj(%class.GrVkImage* %26, %class.GrVkGpu* %0, i32 5, i32 32, i32 128, i1 zeroext false, i32 -1) #14
  br label %53

53:                                               ; preds = %21, %16, %50, %52, %39, %32, %9
  %54 = phi i1 [ false, %9 ], [ false, %21 ], [ false, %16 ], [ false, %32 ], [ false, %39 ], [ %51, %52 ], [ %51, %50 ]
  ret i1 %54
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7GrVkGpu19uploadTexDataLinearEP14GrVkAttachment7SkIRect11GrColorTypePKvm(%class.GrVkGpu*, %class.GrVkAttachment*, i64, i64, i32, i8* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %8 = alloca %struct.VkSubresourceLayout, align 8
  %9 = lshr i64 %2, 32
  %10 = trunc i64 %9 to i32
  %11 = lshr i64 %3, 32
  %12 = trunc i64 %11 to i32
  %13 = icmp ult i32 %4, 31
  br i1 %13, label %15, label %14

14:                                               ; preds = %7
  tail call void @llvm.trap() #14
  unreachable

15:                                               ; preds = %7
  %16 = sext i32 %4 to i64
  %17 = getelementptr inbounds [31 x i64], [31 x i64]* @switch.table._ZN7GrVkGpu18onTransferPixelsToEP9GrTexture7SkIRect11GrColorTypeS3_5sk_spI11GrGpuBufferEmm, i64 0, i64 %16
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %3, %2
  %20 = shl i64 %19, 32
  %21 = ashr exact i64 %20, 32
  %22 = mul nsw i64 %18, %21
  %23 = bitcast %struct.VkSubresourceLayout* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %23) #14
  %24 = getelementptr inbounds %struct.VkSubresourceLayout, %struct.VkSubresourceLayout* %8, i64 0, i32 2
  %25 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 1, i32 0
  %26 = bitcast %struct.VkSubresourceLayout* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 40, i1 false)
  %27 = load %struct.GrVkInterface*, %struct.GrVkInterface** %25, align 8
  %28 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %27, i64 0, i32 1, i32 54, i32 0
  %29 = load void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)** %28, align 8
  %30 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 6
  %31 = load %struct.VkDevice_T*, %struct.VkDevice_T** %30, align 8
  %32 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %1, i64 0, i32 1, i32 1, i32 0
  %33 = load %struct.VkImage_T*, %struct.VkImage_T** %32, align 8
  call void %29(%struct.VkDevice_T* %31, %struct.VkImage_T* %33, %struct.VkImageSubresource* nonnull @_ZZN7GrVkGpu19uploadTexDataLinearEP14GrVkAttachment7SkIRect11GrColorTypePKvmE6subres, %struct.VkSubresourceLayout* nonnull %8) #14
  %34 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %1, i64 0, i32 1, i32 1, i32 1
  %35 = getelementptr inbounds %struct.GrVkAlloc, %struct.GrVkAlloc* %34, i64 0, i32 0
  %36 = load %struct.VkDeviceMemory_T*, %struct.VkDeviceMemory_T** %35, align 8
  %37 = icmp eq %struct.VkDeviceMemory_T* %36, null
  br i1 %37, label %95, label %38

38:                                               ; preds = %15
  %39 = ashr i64 %2, 32
  %40 = load i64, i64* %24, align 8
  %41 = mul i64 %40, %39
  %42 = shl i64 %2, 32
  %43 = ashr exact i64 %42, 32
  %44 = mul nsw i64 %18, %43
  %45 = add i64 %41, %44
  %46 = sub i32 %12, %10
  %47 = call i8* @_ZN10GrVkMemory8MapAllocEP7GrVkGpuRK9GrVkAlloc(%class.GrVkGpu* %0, %struct.GrVkAlloc* dereferenceable(48) %34) #14
  %48 = icmp eq i8* %47, null
  br i1 %48, label %95, label %49

49:                                               ; preds = %38
  %50 = sext i32 %46 to i64
  %51 = mul i64 %40, %50
  %52 = getelementptr inbounds i8, i8* %47, i64 %45
  %53 = load i64, i64* %24, align 8
  %54 = icmp eq i64 %22, %53
  %55 = icmp eq i64 %22, %6
  %56 = and i1 %55, %54
  br i1 %56, label %66, label %57

57:                                               ; preds = %49
  %58 = icmp sgt i32 %46, 0
  br i1 %58, label %59, label %94

59:                                               ; preds = %57
  %60 = xor i32 %10, -1
  %61 = add i32 %60, %12
  %62 = and i32 %46, 3
  %63 = icmp ult i32 %61, 3
  br i1 %63, label %82, label %64

64:                                               ; preds = %59
  %65 = sub i32 %46, %62
  br label %68

66:                                               ; preds = %49
  %67 = mul i64 %50, %6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* align 1 %5, i64 %67, i1 false) #14
  br label %94

68:                                               ; preds = %68, %64
  %69 = phi i8* [ %52, %64 ], [ %78, %68 ]
  %70 = phi i8* [ %5, %64 ], [ %79, %68 ]
  %71 = phi i32 [ %65, %64 ], [ %80, %68 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %69, i8* align 1 %70, i64 %22, i1 false) #14
  %72 = getelementptr inbounds i8, i8* %69, i64 %53
  %73 = getelementptr inbounds i8, i8* %70, i64 %6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %72, i8* align 1 %73, i64 %22, i1 false) #14
  %74 = getelementptr inbounds i8, i8* %72, i64 %53
  %75 = getelementptr inbounds i8, i8* %73, i64 %6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %74, i8* align 1 %75, i64 %22, i1 false) #14
  %76 = getelementptr inbounds i8, i8* %74, i64 %53
  %77 = getelementptr inbounds i8, i8* %75, i64 %6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %76, i8* align 1 %77, i64 %22, i1 false) #14
  %78 = getelementptr inbounds i8, i8* %76, i64 %53
  %79 = getelementptr inbounds i8, i8* %77, i64 %6
  %80 = add i32 %71, -4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %68

82:                                               ; preds = %68, %59
  %83 = phi i8* [ %52, %59 ], [ %78, %68 ]
  %84 = phi i8* [ %5, %59 ], [ %79, %68 ]
  %85 = icmp eq i32 %62, 0
  br i1 %85, label %94, label %86

86:                                               ; preds = %82, %86
  %87 = phi i8* [ %90, %86 ], [ %83, %82 ]
  %88 = phi i8* [ %91, %86 ], [ %84, %82 ]
  %89 = phi i32 [ %92, %86 ], [ %62, %82 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %87, i8* align 1 %88, i64 %22, i1 false) #14
  %90 = getelementptr inbounds i8, i8* %87, i64 %53
  %91 = getelementptr inbounds i8, i8* %88, i64 %6
  %92 = add i32 %89, -1
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %86, !llvm.loop !9

94:                                               ; preds = %82, %86, %57, %66
  call void @_ZN10GrVkMemory16FlushMappedAllocEP7GrVkGpuRK9GrVkAllocmm(%class.GrVkGpu* %0, %struct.GrVkAlloc* dereferenceable(48) %34, i64 %45, i64 %51) #14
  call void @_ZN10GrVkMemory10UnmapAllocEPK7GrVkGpuRK9GrVkAlloc(%class.GrVkGpu* %0, %struct.GrVkAlloc* dereferenceable(48) %34) #14
  br label %95

95:                                               ; preds = %94, %38, %15
  %96 = phi i1 [ false, %15 ], [ true, %94 ], [ false, %38 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %23) #14
  ret i1 %96
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7GrVkGpu20uploadTexDataOptimalEP14GrVkAttachment7SkIRect11GrColorTypePK10GrMipLeveli(%class.GrVkGpu*, %class.GrVkAttachment*, i64, i64, i32, %struct.GrMipLevel* readonly, i32) local_unnamed_addr #0 align 2 {
  %8 = alloca %class.SkTArray.697, align 8
  %9 = alloca %"struct.GrStagingBufferManager::Slice", align 8
  %10 = alloca %class.SkTArray.698, align 8
  %11 = trunc i64 %2 to i32
  %12 = lshr i64 %2, 32
  %13 = trunc i64 %12 to i32
  %14 = trunc i64 %3 to i32
  %15 = lshr i64 %3, 32
  %16 = trunc i64 %15 to i32
  %17 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 13
  %18 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %17, align 8
  %19 = icmp eq %class.GrVkPrimaryCommandBuffer* %18, null
  br i1 %19, label %278, label %20

20:                                               ; preds = %7
  %21 = icmp ult i32 %4, 31
  br i1 %21, label %23, label %22

22:                                               ; preds = %20
  tail call void @llvm.trap() #14
  unreachable

23:                                               ; preds = %20
  %24 = sext i32 %4 to i64
  %25 = getelementptr inbounds [31 x i64], [31 x i64]* @switch.table._ZN7GrVkGpu18onTransferPixelsToEP9GrTexture7SkIRect11GrColorTypeS3_5sk_spI11GrGpuBufferEmm, i64 0, i64 %24
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i32 %6, 0
  br i1 %27, label %73, label %28

28:                                               ; preds = %23
  %29 = sext i32 %6 to i64
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 24) #14
  %31 = extractvalue { i64, i1 } %30, 1
  %32 = extractvalue { i64, i1 } %30, 0
  %33 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %32, i64 8) #14
  %34 = extractvalue { i64, i1 } %33, 1
  %35 = or i1 %31, %34
  %36 = extractvalue { i64, i1 } %33, 0
  %37 = select i1 %35, i64 -1, i64 %36
  %38 = tail call i8* @_Znam(i64 %37) #15
  %39 = bitcast i8* %38 to i64*
  store i64 %29, i64* %39, align 16
  %40 = getelementptr inbounds i8, i8* %38, i64 8
  %41 = add nsw i64 %32, -24
  %42 = urem i64 %41, 24
  %43 = sub nsw i64 %32, %42
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 %43, i1 false) #14
  %44 = bitcast i8* %40 to %struct.GrMipLevel*
  %45 = getelementptr inbounds %struct.GrMipLevel, %struct.GrMipLevel* %5, i64 %29
  br label %46

46:                                               ; preds = %28, %69
  %47 = phi %struct.GrMipLevel* [ %71, %69 ], [ %44, %28 ]
  %48 = phi %struct.GrMipLevel* [ %70, %69 ], [ %5, %28 ]
  %49 = bitcast %struct.GrMipLevel* %47 to i8*
  %50 = bitcast %struct.GrMipLevel* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 16, i1 false) #14
  %51 = icmp eq %struct.GrMipLevel* %47, %48
  br i1 %51, label %69, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %struct.GrMipLevel, %struct.GrMipLevel* %48, i64 0, i32 2, i32 0
  %54 = load %class.SkData*, %class.SkData** %53, align 8
  %55 = icmp eq %class.SkData* %54, null
  br i1 %55, label %59, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %class.SkData, %class.SkData* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = atomicrmw add i32* %57, i32 1 monotonic
  br label %59

59:                                               ; preds = %56, %52
  %60 = getelementptr inbounds %struct.GrMipLevel, %struct.GrMipLevel* %47, i64 0, i32 2, i32 0
  %61 = load %class.SkData*, %class.SkData** %60, align 8
  store %class.SkData* %54, %class.SkData** %60, align 8
  %62 = icmp eq %class.SkData* %61, null
  br i1 %62, label %69, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %class.SkData, %class.SkData* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw add i32* %64, i32 -1 acq_rel
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %69

67:                                               ; preds = %63
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %61) #14
  %68 = bitcast %class.SkData* %61 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %68) #14
  br label %69

69:                                               ; preds = %67, %63, %59, %46
  %70 = getelementptr inbounds %struct.GrMipLevel, %struct.GrMipLevel* %48, i64 1
  %71 = getelementptr inbounds %struct.GrMipLevel, %struct.GrMipLevel* %47, i64 1
  %72 = icmp eq %struct.GrMipLevel* %70, %45
  br i1 %72, label %73, label %46

73:                                               ; preds = %69, %23
  %74 = phi %struct.GrMipLevel* [ null, %23 ], [ %44, %69 ]
  %75 = bitcast %class.SkTArray.697* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %75) #14
  %76 = getelementptr inbounds %class.SkTArray.697, %class.SkTArray.697* %8, i64 0, i32 0
  %77 = getelementptr inbounds %class.SkTArray.697, %class.SkTArray.697* %8, i64 0, i32 1
  store i64* null, i64** %76, align 8
  store i64 1, i64* %77, align 8
  %78 = icmp sgt i32 %6, 1
  %79 = sub i32 %14, %11
  %80 = sub i32 %16, %13
  br i1 %78, label %81, label %87

81:                                               ; preds = %73
  %82 = zext i32 %80 to i64
  %83 = shl nuw i64 %82, 32
  %84 = zext i32 %79 to i64
  %85 = or i64 %83, %84
  %86 = call i64 @_Z32GrComputeTightCombinedBufferSizem7SkISizeP8SkTArrayImLb0EEi(i64 %26, i64 %85, %class.SkTArray.697* nonnull %8, i32 %6) #14
  br label %100

87:                                               ; preds = %73
  %88 = mul nsw i32 %80, %79
  %89 = sext i32 %88 to i64
  %90 = mul nsw i64 %26, %89
  call void @_ZN8SkTArrayImLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.697* nonnull %8, i32 1, i32 1) #14
  %91 = load i64*, i64** %76, align 8
  %92 = load i64, i64* %77, align 8
  %93 = lshr i64 %92, 1
  %94 = and i64 %93, 2147483647
  %95 = getelementptr inbounds i64, i64* %91, i64 %94
  %96 = add i64 %92, 2
  %97 = and i64 %96, 4294967294
  %98 = and i64 %92, -4294967295
  %99 = or i64 %97, %98
  store i64 %99, i64* %77, align 8
  store i64 0, i64* %95, align 8
  br label %100

100:                                              ; preds = %87, %81
  %101 = phi i64 [ %86, %81 ], [ %90, %87 ]
  %102 = and i64 %26, 3
  switch i64 %102, label %105 [
    i64 0, label %107
    i64 2, label %103
  ]

103:                                              ; preds = %100
  %104 = shl nuw nsw i64 %26, 1
  br label %107

105:                                              ; preds = %100
  %106 = shl nuw nsw i64 %26, 2
  br label %107

107:                                              ; preds = %105, %103, %100
  %108 = phi i64 [ %106, %105 ], [ %104, %103 ], [ %26, %100 ]
  %109 = bitcast %"struct.GrStagingBufferManager::Slice"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %109) #14
  %110 = getelementptr inbounds %"struct.GrStagingBufferManager::Slice", %"struct.GrStagingBufferManager::Slice"* %9, i64 0, i32 0
  %111 = getelementptr inbounds %"struct.GrStagingBufferManager::Slice", %"struct.GrStagingBufferManager::Slice"* %9, i64 0, i32 1
  %112 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 10
  %113 = bitcast %"struct.GrStagingBufferManager::Slice"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %113, i8 -86, i64 24, i1 false)
  call void @_ZN22GrStagingBufferManager26allocateStagingBufferSliceEmm(%"struct.GrStagingBufferManager::Slice"* nonnull sret %9, %class.GrStagingBufferManager* %112, i64 %101, i64 %108) #14
  %114 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %110, align 8
  %115 = icmp eq %class.GrGpuBuffer* %114, null
  br i1 %115, label %245, label %116

116:                                              ; preds = %107
  %117 = getelementptr inbounds %"struct.GrStagingBufferManager::Slice", %"struct.GrStagingBufferManager::Slice"* %9, i64 0, i32 2
  %118 = load i8*, i8** %117, align 8
  %119 = bitcast %class.SkTArray.698* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %119) #14
  %120 = getelementptr inbounds %class.SkTArray.698, %class.SkTArray.698* %10, i64 0, i32 0
  %121 = getelementptr inbounds %class.SkTArray.698, %class.SkTArray.698* %10, i64 0, i32 1
  store %struct.VkBufferImageCopy* null, %struct.VkBufferImageCopy** %120, align 8
  store i64 1, i64* %121, align 8
  %122 = icmp sgt i32 %6, 0
  br i1 %122, label %124, label %123

123:                                              ; preds = %116
  store i64 1, i64* %121, align 8
  br label %131

124:                                              ; preds = %116
  call void @_ZN8SkTArrayI17VkBufferImageCopyLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.698* nonnull %10, i32 %6, i32 0) #14
  %125 = load i64, i64* %121, align 8
  %126 = shl i64 %125, 32
  %127 = and i64 %126, 4294967296
  %128 = and i64 %125, -4294967297
  %129 = or i64 %127, %128
  store i64 %129, i64* %121, align 8
  %130 = zext i32 %6 to i64
  br label %152

131:                                              ; preds = %236, %123
  %132 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %1, i64 0, i32 1
  call void @_ZN9GrVkImage27setImageLayoutAndQueueIndexEPK7GrVkGpu13VkImageLayoutjjbj(%class.GrVkImage* %132, %class.GrVkGpu* %0, i32 7, i32 4096, i32 4096, i1 zeroext false, i32 -1) #14
  %133 = bitcast %"struct.GrStagingBufferManager::Slice"* %9 to %class.GrVkBuffer**
  %134 = load %class.GrVkBuffer*, %class.GrVkBuffer** %133, align 8
  %135 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %17, align 8
  %136 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %134, i64 0, i32 1
  %137 = load %struct.VkBuffer_T*, %struct.VkBuffer_T** %136, align 8
  %138 = icmp eq %class.GrVkAttachment* %1, null
  %139 = select i1 %138, %class.GrVkImage* null, %class.GrVkImage* %132
  %140 = load i64, i64* %121, align 8
  %141 = lshr i64 %140, 1
  %142 = trunc i64 %141 to i32
  %143 = and i32 %142, 2147483647
  %144 = load %struct.VkBufferImageCopy*, %struct.VkBufferImageCopy** %120, align 8
  call void @_ZN24GrVkPrimaryCommandBuffer17copyBufferToImageEPK7GrVkGpuP10VkBuffer_TP9GrVkImage13VkImageLayoutjPK17VkBufferImageCopy(%class.GrVkPrimaryCommandBuffer* %135, %class.GrVkGpu* %0, %struct.VkBuffer_T* %137, %class.GrVkImage* %139, i32 7, i32 %143, %struct.VkBufferImageCopy* %144) #14
  %145 = load i64, i64* %121, align 8
  %146 = and i64 %145, 1
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %151, label %148

148:                                              ; preds = %131
  %149 = bitcast %class.SkTArray.698* %10 to i8**
  %150 = load i8*, i8** %149, align 8
  call void @_Z7sk_freePv(i8* %150) #14
  br label %151

151:                                              ; preds = %131, %148
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %119) #14
  br label %245

152:                                              ; preds = %236, %124
  %153 = phi i64 [ 0, %124 ], [ %243, %236 ]
  %154 = phi i32 [ %79, %124 ], [ %239, %236 ]
  %155 = phi i32 [ %80, %124 ], [ %242, %236 ]
  %156 = getelementptr inbounds %struct.GrMipLevel, %struct.GrMipLevel* %74, i64 %153, i32 0
  %157 = load i8*, i8** %156, align 8
  %158 = icmp eq i8* %157, null
  br i1 %158, label %236, label %159

159:                                              ; preds = %152
  %160 = sext i32 %154 to i64
  %161 = mul nsw i64 %26, %160
  %162 = getelementptr inbounds %struct.GrMipLevel, %struct.GrMipLevel* %74, i64 %153, i32 1
  %163 = load i64, i64* %162, align 8
  %164 = load i64*, i64** %76, align 8
  %165 = getelementptr inbounds i64, i64* %164, i64 %153
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds i8, i8* %118, i64 %166
  %168 = icmp eq i64 %161, %163
  br i1 %168, label %177, label %169

169:                                              ; preds = %159
  %170 = icmp sgt i32 %155, 0
  br i1 %170, label %171, label %206

171:                                              ; preds = %169
  %172 = add i32 %155, -1
  %173 = and i32 %155, 3
  %174 = icmp ult i32 %172, 3
  br i1 %174, label %194, label %175

175:                                              ; preds = %171
  %176 = sub i32 %155, %173
  br label %180

177:                                              ; preds = %159
  %178 = sext i32 %155 to i64
  %179 = mul i64 %161, %178
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %167, i8* nonnull align 1 %157, i64 %179, i1 false) #14
  br label %206

180:                                              ; preds = %180, %175
  %181 = phi i8* [ %167, %175 ], [ %190, %180 ]
  %182 = phi i8* [ %157, %175 ], [ %191, %180 ]
  %183 = phi i32 [ %176, %175 ], [ %192, %180 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %181, i8* align 1 %182, i64 %161, i1 false) #14
  %184 = getelementptr inbounds i8, i8* %181, i64 %161
  %185 = getelementptr inbounds i8, i8* %182, i64 %163
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %184, i8* align 1 %185, i64 %161, i1 false) #14
  %186 = getelementptr inbounds i8, i8* %184, i64 %161
  %187 = getelementptr inbounds i8, i8* %185, i64 %163
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %186, i8* align 1 %187, i64 %161, i1 false) #14
  %188 = getelementptr inbounds i8, i8* %186, i64 %161
  %189 = getelementptr inbounds i8, i8* %187, i64 %163
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %188, i8* align 1 %189, i64 %161, i1 false) #14
  %190 = getelementptr inbounds i8, i8* %188, i64 %161
  %191 = getelementptr inbounds i8, i8* %189, i64 %163
  %192 = add i32 %183, -4
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %180

194:                                              ; preds = %180, %171
  %195 = phi i8* [ %167, %171 ], [ %190, %180 ]
  %196 = phi i8* [ %157, %171 ], [ %191, %180 ]
  %197 = icmp eq i32 %173, 0
  br i1 %197, label %206, label %198

198:                                              ; preds = %194, %198
  %199 = phi i8* [ %202, %198 ], [ %195, %194 ]
  %200 = phi i8* [ %203, %198 ], [ %196, %194 ]
  %201 = phi i32 [ %204, %198 ], [ %173, %194 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %199, i8* align 1 %200, i64 %161, i1 false) #14
  %202 = getelementptr inbounds i8, i8* %199, i64 %161
  %203 = getelementptr inbounds i8, i8* %200, i64 %163
  %204 = add i32 %201, -1
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %198, !llvm.loop !11

206:                                              ; preds = %194, %198, %169, %177
  call void @_ZN8SkTArrayI17VkBufferImageCopyLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.698* nonnull %10, i32 1, i32 1) #14
  %207 = load %struct.VkBufferImageCopy*, %struct.VkBufferImageCopy** %120, align 8
  %208 = load i64, i64* %121, align 8
  %209 = lshr i64 %208, 1
  %210 = and i64 %209, 2147483647
  %211 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %207, i64 %210
  %212 = add i64 %208, 2
  %213 = and i64 %212, 4294967294
  %214 = and i64 %208, -4294967295
  %215 = or i64 %213, %214
  store i64 %215, i64* %121, align 8
  %216 = bitcast %struct.VkBufferImageCopy* %211 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %216, i8 0, i64 56, i1 false)
  %217 = load i64, i64* %111, align 8
  %218 = load i64*, i64** %76, align 8
  %219 = getelementptr inbounds i64, i64* %218, i64 %153
  %220 = load i64, i64* %219, align 8
  %221 = add i64 %220, %217
  %222 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %211, i64 0, i32 0
  store i64 %221, i64* %222, align 8
  %223 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %207, i64 %210, i32 1
  store i32 %154, i32* %223, align 8
  %224 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %207, i64 %210, i32 2
  store i32 %155, i32* %224, align 4
  %225 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %207, i64 %210, i32 3, i32 0
  store i32 1, i32* %225, align 8
  %226 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %207, i64 %210, i32 3, i32 1
  %227 = trunc i64 %153 to i32
  store i32 %227, i32* %226, align 4
  %228 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %207, i64 %210, i32 3, i32 2
  store i32 0, i32* %228, align 8
  %229 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %207, i64 %210, i32 3, i32 3
  store i32 1, i32* %229, align 4
  %230 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %207, i64 %210, i32 4, i32 0
  store i32 %11, i32* %230, align 8
  %231 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %207, i64 %210, i32 4, i32 1
  store i32 %13, i32* %231, align 4
  %232 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %207, i64 %210, i32 4, i32 2
  store i32 0, i32* %232, align 8
  %233 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %207, i64 %210, i32 5, i32 0
  store i32 %154, i32* %233, align 4
  %234 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %207, i64 %210, i32 5, i32 1
  store i32 %155, i32* %234, align 4
  %235 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %207, i64 %210, i32 5, i32 2
  store i32 1, i32* %235, align 4
  br label %236

236:                                              ; preds = %152, %206
  %237 = sdiv i32 %154, 2
  %238 = icmp sgt i32 %237, 1
  %239 = select i1 %238, i32 %237, i32 1
  %240 = sdiv i32 %155, 2
  %241 = icmp sgt i32 %240, 1
  %242 = select i1 %241, i32 %240, i32 1
  %243 = add nuw nsw i64 %153, 1
  %244 = icmp eq i64 %243, %130
  br i1 %244, label %131, label %152

245:                                              ; preds = %107, %151
  %246 = phi i1 [ true, %151 ], [ false, %107 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %109) #14
  %247 = load i64, i64* %77, align 8
  %248 = and i64 %247, 1
  %249 = icmp eq i64 %248, 0
  br i1 %249, label %253, label %250

250:                                              ; preds = %245
  %251 = bitcast %class.SkTArray.697* %8 to i8**
  %252 = load i8*, i8** %251, align 8
  call void @_Z7sk_freePv(i8* %252) #14
  br label %253

253:                                              ; preds = %245, %250
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %75) #14
  %254 = icmp eq %struct.GrMipLevel* %74, null
  br i1 %254, label %278, label %255

255:                                              ; preds = %253
  %256 = getelementptr inbounds %struct.GrMipLevel, %struct.GrMipLevel* %74, i64 -1, i32 2
  %257 = bitcast %class.sk_sp.74* %256 to i8*
  %258 = bitcast %class.sk_sp.74* %256 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %277, label %261

261:                                              ; preds = %255
  %262 = getelementptr inbounds %struct.GrMipLevel, %struct.GrMipLevel* %74, i64 %259
  br label %263

263:                                              ; preds = %275, %261
  %264 = phi %struct.GrMipLevel* [ %265, %275 ], [ %262, %261 ]
  %265 = getelementptr inbounds %struct.GrMipLevel, %struct.GrMipLevel* %264, i64 -1
  %266 = getelementptr inbounds %struct.GrMipLevel, %struct.GrMipLevel* %264, i64 -1, i32 2, i32 0
  %267 = load %class.SkData*, %class.SkData** %266, align 8
  %268 = icmp eq %class.SkData* %267, null
  br i1 %268, label %275, label %269

269:                                              ; preds = %263
  %270 = getelementptr inbounds %class.SkData, %class.SkData* %267, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %271 = atomicrmw add i32* %270, i32 -1 acq_rel
  %272 = icmp eq i32 %271, 1
  br i1 %272, label %273, label %275

273:                                              ; preds = %269
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %267) #14
  %274 = bitcast %class.SkData* %267 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %274) #14
  br label %275

275:                                              ; preds = %273, %269, %263
  %276 = icmp eq %struct.GrMipLevel* %265, %74
  br i1 %276, label %277, label %263

277:                                              ; preds = %275, %255
  call void @_ZdaPv(i8* %257) #15
  br label %278

278:                                              ; preds = %277, %253, %7
  %279 = phi i1 [ false, %7 ], [ %246, %253 ], [ %246, %277 ]
  ret i1 %279
}

declare void @_ZN9GrTexture16markMipmapsDirtyEv(%class.GrTexture*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7GrVkGpu18onTransferPixelsToEP9GrTexture7SkIRect11GrColorTypeS3_5sk_spI11GrGpuBufferEmm(%class.GrVkGpu*, %class.GrTexture*, i64, i64, i32, i32, %class.sk_sp.295* nocapture, i64, i64) unnamed_addr #0 align 2 {
  %10 = alloca %class.GrBackendFormat, align 8
  %11 = alloca %struct.VkBufferImageCopy, align 8
  %12 = trunc i64 %2 to i32
  %13 = lshr i64 %2, 32
  %14 = trunc i64 %13 to i32
  %15 = trunc i64 %3 to i32
  %16 = lshr i64 %3, 32
  %17 = trunc i64 %16 to i32
  %18 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 13
  %19 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %18, align 8
  %20 = icmp eq %class.GrVkPrimaryCommandBuffer* %19, null
  br i1 %20, label %112, label %21

21:                                               ; preds = %9
  %22 = icmp ult i32 %5, 31
  br i1 %22, label %24, label %23

23:                                               ; preds = %21
  tail call void @llvm.trap() #14
  unreachable

24:                                               ; preds = %21
  %25 = sext i32 %5 to i64
  %26 = getelementptr inbounds [31 x i64], [31 x i64]* @switch.table._ZN7GrVkGpu18onTransferPixelsToEP9GrTexture7SkIRect11GrColorTypeS3_5sk_spI11GrGpuBufferEmm, i64 0, i64 %25
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %class.GrBackendFormat* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %28) #14
  %29 = bitcast %class.GrTexture* %1 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr i8, i8* %30, i64 -24
  %32 = bitcast i8* %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %class.GrTexture* %1 to i8*
  %35 = getelementptr inbounds i8, i8* %34, i64 %33
  %36 = bitcast i8* %35 to %class.GrSurface*
  %37 = bitcast i8* %35 to void (%class.GrBackendFormat*, %class.GrSurface*)***
  %38 = load void (%class.GrBackendFormat*, %class.GrSurface*)**, void (%class.GrBackendFormat*, %class.GrSurface*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.GrBackendFormat*, %class.GrSurface*)*, void (%class.GrBackendFormat*, %class.GrSurface*)** %38, i64 9
  %40 = load void (%class.GrBackendFormat*, %class.GrSurface*)*, void (%class.GrBackendFormat*, %class.GrSurface*)** %39, align 8
  call void %40(%class.GrBackendFormat* nonnull sret %10, %class.GrSurface* %36) #14
  %41 = call i64 @_Z28GrBackendFormatBytesPerPixelRK15GrBackendFormat(%class.GrBackendFormat* nonnull dereferenceable(72) %10) #14
  %42 = icmp eq i64 %41, %27
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %28) #14
  %43 = and i64 %7, 3
  %44 = icmp eq i64 %43, 0
  %45 = and i1 %44, %42
  br i1 %45, label %46, label %112

46:                                               ; preds = %24
  %47 = urem i64 %7, %27
  %48 = icmp ne i64 %47, 0
  %49 = icmp eq %class.GrTexture* %1, null
  %50 = or i1 %49, %48
  br i1 %50, label %112, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %class.GrTexture, %class.GrTexture* %1, i64 0, i32 5
  %53 = bitcast %class.GrSurface* %52 to %class.GrVkAttachment**
  %54 = load %class.GrVkAttachment*, %class.GrVkAttachment** %53, align 8
  %55 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %54, i64 0, i32 1
  %56 = getelementptr inbounds %class.sk_sp.295, %class.sk_sp.295* %6, i64 0, i32 0
  %57 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %56, align 8
  %58 = icmp eq %class.GrGpuBuffer* %57, null
  br i1 %58, label %112, label %59

59:                                               ; preds = %51
  %60 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %54, i64 0, i32 1, i32 1, i32 4
  %61 = load i32, i32* %60, align 8
  %62 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 3, i32 0
  %63 = load %class.GrVkCaps*, %class.GrVkCaps** %62, align 8
  %64 = call i32 @_ZNK8GrVkCaps17transferColorTypeE8VkFormat11GrColorType(%class.GrVkCaps* %63, i32 %61, i32 %4) #14
  %65 = icmp eq i32 %64, %5
  br i1 %65, label %66, label %112

66:                                               ; preds = %59
  %67 = bitcast %struct.VkBufferImageCopy* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %67) #14
  %68 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %11, i64 0, i32 0
  store i64 %7, i64* %68, align 8
  %69 = udiv i64 %8, %27
  %70 = trunc i64 %69 to i32
  %71 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %11, i64 0, i32 1
  store i32 %70, i32* %71, align 8
  %72 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %11, i64 0, i32 2
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 0, i32 1, i32 0, i32 0>, <4 x i32>* %73, align 4
  %74 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %11, i64 0, i32 3, i32 3
  store i32 1, i32* %74, align 4
  %75 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %11, i64 0, i32 4, i32 0
  store i32 %12, i32* %75, align 8
  %76 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %11, i64 0, i32 4, i32 1
  store i32 %14, i32* %76, align 4
  %77 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %11, i64 0, i32 4, i32 2
  store i32 0, i32* %77, align 8
  %78 = sub i32 %15, %12
  %79 = sub i32 %17, %14
  %80 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %11, i64 0, i32 5, i32 0
  store i32 %78, i32* %80, align 4
  %81 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %11, i64 0, i32 5, i32 1
  store i32 %79, i32* %81, align 4
  %82 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %11, i64 0, i32 5, i32 2
  store i32 1, i32* %82, align 4
  call void @_ZN9GrVkImage27setImageLayoutAndQueueIndexEPK7GrVkGpu13VkImageLayoutjjbj(%class.GrVkImage* %55, %class.GrVkGpu* %0, i32 7, i32 4096, i32 4096, i1 zeroext false, i32 -1) #14
  %83 = bitcast %class.sk_sp.295* %6 to %class.GrVkBuffer**
  %84 = load %class.GrVkBuffer*, %class.GrVkBuffer** %83, align 8
  %85 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %18, align 8
  %86 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %84, i64 0, i32 1
  %87 = load %struct.VkBuffer_T*, %struct.VkBuffer_T** %86, align 8
  %88 = icmp eq %class.GrVkAttachment* %54, null
  %89 = select i1 %88, %class.GrVkImage* null, %class.GrVkImage* %55
  call void @_ZN24GrVkPrimaryCommandBuffer17copyBufferToImageEPK7GrVkGpuP10VkBuffer_TP9GrVkImage13VkImageLayoutjPK17VkBufferImageCopy(%class.GrVkPrimaryCommandBuffer* %85, %class.GrVkGpu* %0, %struct.VkBuffer_T* %87, %class.GrVkImage* %89, i32 7, i32 1, %struct.VkBufferImageCopy* nonnull %11) #14
  %90 = bitcast %class.GrVkPrimaryCommandBuffer** %18 to %class.GrVkCommandBuffer**
  %91 = load %class.GrVkCommandBuffer*, %class.GrVkCommandBuffer** %90, align 8
  %92 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %56, align 8
  store %class.GrGpuBuffer* null, %class.GrGpuBuffer** %56, align 8
  %93 = icmp eq %class.GrGpuBuffer* %92, null
  %94 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %92, i64 0, i32 1
  %95 = ptrtoint %class.GrBuffer* %94 to i64
  %96 = select i1 %93, i64 0, i64 %95
  %97 = getelementptr inbounds %class.GrVkCommandBuffer, %class.GrVkCommandBuffer* %91, i64 0, i32 3, i32 0, i32 0, i64 128
  %98 = bitcast i8* %97 to %class.SkTArray.530*
  call void @_ZN8SkTArrayI5sk_spIK8GrBufferELb0EE12checkReallocEiNS4_11ReallocTypeE(%class.SkTArray.530* %98, i32 1, i32 1) #14
  %99 = bitcast i8* %97 to %class.sk_sp.531**
  %100 = load %class.sk_sp.531*, %class.sk_sp.531** %99, align 8
  %101 = getelementptr inbounds %class.GrVkCommandBuffer, %class.GrVkCommandBuffer* %91, i64 0, i32 3, i32 0, i32 0, i64 136
  %102 = bitcast i8* %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = lshr i64 %103, 1
  %105 = and i64 %104, 2147483647
  %106 = getelementptr inbounds %class.sk_sp.531, %class.sk_sp.531* %100, i64 %105
  %107 = add i64 %103, 2
  %108 = and i64 %107, 4294967294
  %109 = and i64 %103, -4294967295
  %110 = or i64 %108, %109
  store i64 %110, i64* %102, align 8
  %111 = bitcast %class.sk_sp.531* %106 to i64*
  store i64 %96, i64* %111, align 8
  call void @_ZN9GrTexture16markMipmapsDirtyEv(%class.GrTexture* nonnull %1) #14
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %67) #14
  br label %112

112:                                              ; preds = %51, %46, %24, %66, %59, %9
  %113 = phi i1 [ false, %9 ], [ false, %24 ], [ false, %46 ], [ true, %66 ], [ false, %51 ], [ false, %59 ]
  ret i1 %113
}

declare i64 @_Z28GrBackendFormatBytesPerPixelRK15GrBackendFormat(%class.GrBackendFormat* dereferenceable(72)) local_unnamed_addr #2

declare i32 @_ZNK8GrVkCaps17transferColorTypeE8VkFormat11GrColorType(%class.GrVkCaps*, i32, i32) local_unnamed_addr #2

declare void @_ZN24GrVkPrimaryCommandBuffer17copyBufferToImageEPK7GrVkGpuP10VkBuffer_TP9GrVkImage13VkImageLayoutjPK17VkBufferImageCopy(%class.GrVkPrimaryCommandBuffer*, %class.GrVkGpu*, %struct.VkBuffer_T*, %class.GrVkImage*, i32, i32, %struct.VkBufferImageCopy*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7GrVkGpu20onTransferPixelsFromEP9GrSurface7SkIRect11GrColorTypeS3_5sk_spI11GrGpuBufferEm(%class.GrVkGpu*, %class.GrSurface*, i64, i64, i32, i32, %class.sk_sp.295* nocapture readonly, i64) unnamed_addr #0 align 2 {
  %9 = alloca %struct.VkBufferImageCopy, align 8
  %10 = alloca %class.sk_sp.295, align 8
  %11 = trunc i64 %2 to i32
  %12 = lshr i64 %2, 32
  %13 = trunc i64 %12 to i32
  %14 = trunc i64 %3 to i32
  %15 = lshr i64 %3, 32
  %16 = trunc i64 %15 to i32
  %17 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 13
  %18 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %17, align 8
  %19 = icmp eq %class.GrVkPrimaryCommandBuffer* %18, null
  br i1 %19, label %99, label %20

20:                                               ; preds = %8
  %21 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 20
  %22 = load i8, i8* %21, align 1, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %99

24:                                               ; preds = %20
  %25 = bitcast %class.GrSurface* %1 to %class.GrRenderTarget* (%class.GrSurface*)***
  %26 = load %class.GrRenderTarget* (%class.GrSurface*)**, %class.GrRenderTarget* (%class.GrSurface*)*** %25, align 8
  %27 = getelementptr inbounds %class.GrRenderTarget* (%class.GrSurface*)*, %class.GrRenderTarget* (%class.GrSurface*)** %26, i64 12
  %28 = load %class.GrRenderTarget* (%class.GrSurface*)*, %class.GrRenderTarget* (%class.GrSurface*)** %27, align 8
  %29 = tail call %class.GrRenderTarget* %28(%class.GrSurface* %1) #14
  %30 = bitcast %class.GrRenderTarget* %29 to %class.GrVkRenderTarget*
  %31 = icmp eq %class.GrRenderTarget* %29, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %24
  %33 = getelementptr inbounds %class.GrRenderTarget, %class.GrRenderTarget* %29, i64 1, i32 5, i32 0, i32 6, i32 0, i32 0, i32 1
  %34 = bitcast %union.anon* %33 to %class.GrVkFramebuffer**
  %35 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %34, align 8
  %36 = icmp eq %class.GrVkFramebuffer* %35, null
  br i1 %36, label %37, label %99

37:                                               ; preds = %32
  %38 = tail call %class.GrVkAttachment* @_ZNK16GrVkRenderTarget17nonMSAAAttachmentEv(%class.GrVkRenderTarget* nonnull %30) #14
  %39 = icmp eq %class.GrVkAttachment* %38, null
  br i1 %39, label %99, label %40

40:                                               ; preds = %37
  %41 = tail call %class.GrVkAttachment* @_ZNK16GrVkRenderTarget17nonMSAAAttachmentEv(%class.GrVkRenderTarget* nonnull %30) #14
  br label %51

42:                                               ; preds = %24
  %43 = bitcast %class.GrSurface* %1 to %class.GrTexture* (%class.GrSurface*)***
  %44 = load %class.GrTexture* (%class.GrSurface*)**, %class.GrTexture* (%class.GrSurface*)*** %43, align 8
  %45 = getelementptr inbounds %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %44, i64 10
  %46 = load %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %45, align 8
  %47 = tail call %class.GrTexture* %46(%class.GrSurface* %1) #14
  %48 = getelementptr inbounds %class.GrTexture, %class.GrTexture* %47, i64 0, i32 5
  %49 = bitcast %class.GrSurface* %48 to %class.GrVkAttachment**
  %50 = load %class.GrVkAttachment*, %class.GrVkAttachment** %49, align 8
  br label %51

51:                                               ; preds = %42, %40
  %52 = phi %class.GrVkAttachment* [ %50, %42 ], [ %41, %40 ]
  %53 = icmp eq %class.GrVkAttachment* %52, null
  %54 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %52, i64 0, i32 1
  %55 = select i1 %53, %class.GrVkImage* null, %class.GrVkImage* %54
  %56 = getelementptr inbounds %class.GrVkImage, %class.GrVkImage* %55, i64 0, i32 1, i32 4
  %57 = load i32, i32* %56, align 8
  %58 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 3, i32 0
  %59 = load %class.GrVkCaps*, %class.GrVkCaps** %58, align 8
  %60 = tail call i32 @_ZNK8GrVkCaps17transferColorTypeE8VkFormat11GrColorType(%class.GrVkCaps* %59, i32 %57, i32 %4) #14
  %61 = icmp eq i32 %60, %5
  br i1 %61, label %62, label %99

62:                                               ; preds = %51
  %63 = bitcast %struct.VkBufferImageCopy* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %63) #14
  %64 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %9, i64 0, i32 0
  store i64 %7, i64* %64, align 8
  %65 = sub i32 %14, %11
  %66 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %9, i64 0, i32 1
  store i32 %65, i32* %66, align 8
  %67 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %9, i64 0, i32 2
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 0, i32 1, i32 0, i32 0>, <4 x i32>* %68, align 4
  %69 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %9, i64 0, i32 3, i32 3
  store i32 1, i32* %69, align 4
  %70 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %9, i64 0, i32 4, i32 0
  store i32 %11, i32* %70, align 8
  %71 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %9, i64 0, i32 4, i32 1
  store i32 %13, i32* %71, align 4
  %72 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %9, i64 0, i32 4, i32 2
  store i32 0, i32* %72, align 8
  %73 = sub i32 %16, %13
  %74 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %9, i64 0, i32 5, i32 0
  store i32 %65, i32* %74, align 4
  %75 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %9, i64 0, i32 5, i32 1
  store i32 %73, i32* %75, align 4
  %76 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %9, i64 0, i32 5, i32 2
  store i32 1, i32* %76, align 4
  tail call void @_ZN9GrVkImage27setImageLayoutAndQueueIndexEPK7GrVkGpu13VkImageLayoutjjbj(%class.GrVkImage* %55, %class.GrVkGpu* %0, i32 6, i32 2048, i32 4096, i1 zeroext false, i32 -1) #14
  %77 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %17, align 8
  %78 = getelementptr inbounds %class.sk_sp.295, %class.sk_sp.295* %10, i64 0, i32 0
  %79 = getelementptr inbounds %class.sk_sp.295, %class.sk_sp.295* %6, i64 0, i32 0
  %80 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %79, align 8
  %81 = icmp eq %class.GrGpuBuffer* %80, null
  br i1 %81, label %85, label %82

82:                                               ; preds = %62
  %83 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %80, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = atomicrmw add i32* %83, i32 1 monotonic
  br label %85

85:                                               ; preds = %62, %82
  store %class.GrGpuBuffer* %80, %class.GrGpuBuffer** %78, align 8
  call void @_ZN24GrVkPrimaryCommandBuffer17copyImageToBufferEPK7GrVkGpuP9GrVkImage13VkImageLayout5sk_spI11GrGpuBufferEjPK17VkBufferImageCopy(%class.GrVkPrimaryCommandBuffer* %77, %class.GrVkGpu* %0, %class.GrVkImage* %55, i32 6, %class.sk_sp.295* nonnull %10, i32 1, %struct.VkBufferImageCopy* nonnull %9) #14
  %86 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %78, align 8
  %87 = icmp eq %class.GrGpuBuffer* %86, null
  br i1 %87, label %96, label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %86, i64 0, i32 0, i32 1
  %90 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = atomicrmw add i32* %90, i32 -1 acq_rel
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %93, label %96

93:                                               ; preds = %88
  %94 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %89, i64 -1
  %95 = bitcast %class.GrIORef* %94 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %95, i32 0) #14
  br label %96

96:                                               ; preds = %85, %88, %93
  %97 = bitcast %class.sk_sp.295* %6 to %class.GrVkBuffer**
  %98 = load %class.GrVkBuffer*, %class.GrVkBuffer** %97, align 8
  call void @_ZNK10GrVkBuffer16addMemoryBarrierEjjjjb(%class.GrVkBuffer* %98, i32 4096, i32 8192, i32 4096, i32 16384, i1 zeroext false) #14
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %63) #14
  br label %99

99:                                               ; preds = %32, %37, %51, %96, %20, %8
  %100 = phi i1 [ false, %8 ], [ false, %20 ], [ true, %96 ], [ false, %51 ], [ false, %37 ], [ false, %32 ]
  ret i1 %100
}

declare %class.GrVkAttachment* @_ZNK16GrVkRenderTarget17nonMSAAAttachmentEv(%class.GrVkRenderTarget*) local_unnamed_addr #2

declare void @_ZN24GrVkPrimaryCommandBuffer17copyImageToBufferEPK7GrVkGpuP9GrVkImage13VkImageLayout5sk_spI11GrGpuBufferEjPK17VkBufferImageCopy(%class.GrVkPrimaryCommandBuffer*, %class.GrVkGpu*, %class.GrVkImage*, i32, %class.sk_sp.295*, i32, %struct.VkBufferImageCopy*) local_unnamed_addr #2

declare void @_ZNK10GrVkBuffer16addMemoryBarrierEjjjjb(%class.GrVkBuffer*, i32, i32, i32, i32, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpu12resolveImageEP9GrSurfaceP16GrVkRenderTargetRK7SkIRectRK8SkIPoint(%class.GrVkGpu*, %class.GrSurface*, %class.GrVkRenderTarget* nocapture readonly, %struct.SkIRect* nocapture readonly dereferenceable(16), %struct.SkIPoint* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = alloca %struct.VkImageResolve, align 16
  %7 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 13
  %8 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %7, align 8
  %9 = icmp eq %class.GrVkPrimaryCommandBuffer* %8, null
  br i1 %9, label %135, label %10

10:                                               ; preds = %5
  %11 = bitcast %struct.VkImageResolve* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %11) #14
  %12 = bitcast %struct.VkImageResolve* %6 to <4 x i32>*
  store <4 x i32> <i32 1, i32 0, i32 0, i32 1>, <4 x i32>* %12, align 16
  %13 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %6, i64 0, i32 1, i32 0
  store i32 %14, i32* %17, align 16
  %18 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %6, i64 0, i32 1, i32 1
  store i32 %16, i32* %18, align 4
  %19 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %6, i64 0, i32 1, i32 2
  %20 = bitcast i32* %19 to <4 x i32>*
  store <4 x i32> <i32 0, i32 1, i32 0, i32 0>, <4 x i32>* %20, align 8
  %21 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %6, i64 0, i32 2, i32 3
  store i32 1, i32* %21, align 4
  %22 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %4, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %4, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %6, i64 0, i32 3, i32 0
  store i32 %23, i32* %26, align 4
  %27 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %6, i64 0, i32 3, i32 1
  store i32 %25, i32* %27, align 4
  %28 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %6, i64 0, i32 3, i32 2
  store i32 0, i32* %28, align 4
  %29 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = sub i32 %30, %14
  %32 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = sub i32 %33, %16
  %35 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %6, i64 0, i32 4, i32 0
  store i32 %31, i32* %35, align 8
  %36 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %6, i64 0, i32 4, i32 1
  store i32 %34, i32* %36, align 4
  %37 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %6, i64 0, i32 4, i32 2
  store i32 1, i32* %37, align 8
  %38 = bitcast %class.GrSurface* %1 to %class.GrRenderTarget* (%class.GrSurface*)***
  %39 = load %class.GrRenderTarget* (%class.GrSurface*)**, %class.GrRenderTarget* (%class.GrSurface*)*** %38, align 8
  %40 = getelementptr inbounds %class.GrRenderTarget* (%class.GrSurface*)*, %class.GrRenderTarget* (%class.GrSurface*)** %39, i64 12
  %41 = load %class.GrRenderTarget* (%class.GrSurface*)*, %class.GrRenderTarget* (%class.GrSurface*)** %40, align 8
  %42 = tail call %class.GrRenderTarget* %41(%class.GrSurface* %1) #14
  %43 = bitcast %class.GrSurface* %1 to %class.GrTexture* (%class.GrSurface*)***
  %44 = load %class.GrTexture* (%class.GrSurface*)**, %class.GrTexture* (%class.GrSurface*)*** %43, align 8
  %45 = getelementptr inbounds %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %44, i64 10
  %46 = load %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %45, align 8
  %47 = tail call %class.GrTexture* %46(%class.GrSurface* %1) #14
  %48 = icmp eq %class.GrTexture* %47, null
  br i1 %48, label %53, label %49

49:                                               ; preds = %10
  %50 = getelementptr inbounds %class.GrTexture, %class.GrTexture* %47, i64 0, i32 5
  %51 = bitcast %class.GrSurface* %50 to %class.GrVkAttachment**
  %52 = load %class.GrVkAttachment*, %class.GrVkAttachment** %51, align 8
  br label %56

53:                                               ; preds = %10
  %54 = bitcast %class.GrRenderTarget* %42 to %class.GrVkRenderTarget*
  %55 = tail call %class.GrVkAttachment* @_ZNK16GrVkRenderTarget17nonMSAAAttachmentEv(%class.GrVkRenderTarget* %54) #14
  br label %56

56:                                               ; preds = %53, %49
  %57 = phi %class.GrVkAttachment* [ %55, %53 ], [ %52, %49 ]
  %58 = icmp eq %class.GrVkAttachment* %57, null
  %59 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %57, i64 0, i32 1
  %60 = select i1 %58, %class.GrVkImage* null, %class.GrVkImage* %59
  tail call void @_ZN9GrVkImage27setImageLayoutAndQueueIndexEPK7GrVkGpu13VkImageLayoutjjbj(%class.GrVkImage* %60, %class.GrVkGpu* %0, i32 7, i32 4096, i32 4096, i1 zeroext false, i32 -1) #14
  %61 = getelementptr inbounds %class.GrVkRenderTarget, %class.GrVkRenderTarget* %2, i64 0, i32 1, i32 0
  %62 = load %class.GrVkAttachment*, %class.GrVkAttachment** %61, align 8
  %63 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %62, i64 0, i32 1
  tail call void @_ZN9GrVkImage27setImageLayoutAndQueueIndexEPK7GrVkGpu13VkImageLayoutjjbj(%class.GrVkImage* %63, %class.GrVkGpu* %0, i32 6, i32 2048, i32 4096, i1 zeroext false, i32 -1) #14
  %64 = bitcast %class.GrVkPrimaryCommandBuffer** %7 to %class.GrVkCommandBuffer**
  %65 = load %class.GrVkCommandBuffer*, %class.GrVkCommandBuffer** %64, align 8
  %66 = load %class.GrVkAttachment*, %class.GrVkAttachment** %61, align 8
  %67 = icmp eq %class.GrVkAttachment* %66, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %56
  %69 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %66, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = atomicrmw add i32* %69, i32 1 monotonic, !noalias !12
  %71 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %66, i64 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = atomicrmw add i32* %71, i32 1 monotonic
  br label %73

73:                                               ; preds = %56, %68
  %74 = getelementptr inbounds %class.GrVkCommandBuffer, %class.GrVkCommandBuffer* %65, i64 0, i32 4, i32 0, i32 0, i64 128
  %75 = bitcast i8* %74 to %class.SkTArray.534*
  %76 = ptrtoint %class.GrVkAttachment* %66 to i64
  tail call void @_ZN8SkTArrayI5gr_spIK9GrSurfaceXadL_ZNK7GrIORefI13GrGpuResourceE21addCommandBufferUsageEvEEXadL_ZNKS5_24removeCommandBufferUsageEvEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.534* %75, i32 1, i32 1) #14
  %77 = bitcast i8* %74 to %class.gr_sp.535**
  %78 = load %class.gr_sp.535*, %class.gr_sp.535** %77, align 8
  %79 = getelementptr inbounds %class.GrVkCommandBuffer, %class.GrVkCommandBuffer* %65, i64 0, i32 4, i32 0, i32 0, i64 136
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = lshr i64 %81, 1
  %83 = and i64 %82, 2147483647
  %84 = getelementptr inbounds %class.gr_sp.535, %class.gr_sp.535* %78, i64 %83
  %85 = add i64 %81, 2
  %86 = and i64 %85, 4294967294
  %87 = and i64 %81, -4294967295
  %88 = or i64 %86, %87
  store i64 %88, i64* %80, align 8
  %89 = bitcast %class.gr_sp.535* %84 to i64*
  store i64 %76, i64* %89, align 8
  br i1 %67, label %98, label %90

90:                                               ; preds = %73
  %91 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %66, i64 0, i32 0, i32 0, i32 0, i32 1
  %92 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = atomicrmw add i32* %92, i32 -1 acq_rel
  %94 = icmp eq i32 %93, 1
  br i1 %94, label %95, label %98

95:                                               ; preds = %90
  %96 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %91, i64 -1
  %97 = bitcast %class.GrIORef* %96 to %class.GrGpuResource*
  tail call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %97, i32 0) #14
  br label %98

98:                                               ; preds = %73, %90, %95
  %99 = load %class.GrVkCommandBuffer*, %class.GrVkCommandBuffer** %64, align 8
  %100 = icmp eq %class.GrSurface* %1, null
  br i1 %100, label %106, label %101

101:                                              ; preds = %98
  %102 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = atomicrmw add i32* %102, i32 1 monotonic, !noalias !15
  %104 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %1, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = atomicrmw add i32* %104, i32 1 monotonic
  br label %106

106:                                              ; preds = %98, %101
  %107 = getelementptr inbounds %class.GrVkCommandBuffer, %class.GrVkCommandBuffer* %99, i64 0, i32 4, i32 0, i32 0, i64 128
  %108 = bitcast i8* %107 to %class.SkTArray.534*
  %109 = ptrtoint %class.GrSurface* %1 to i64
  tail call void @_ZN8SkTArrayI5gr_spIK9GrSurfaceXadL_ZNK7GrIORefI13GrGpuResourceE21addCommandBufferUsageEvEEXadL_ZNKS5_24removeCommandBufferUsageEvEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.534* %108, i32 1, i32 1) #14
  %110 = bitcast i8* %107 to %class.gr_sp.535**
  %111 = load %class.gr_sp.535*, %class.gr_sp.535** %110, align 8
  %112 = getelementptr inbounds %class.GrVkCommandBuffer, %class.GrVkCommandBuffer* %99, i64 0, i32 4, i32 0, i32 0, i64 136
  %113 = bitcast i8* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = lshr i64 %114, 1
  %116 = and i64 %115, 2147483647
  %117 = getelementptr inbounds %class.gr_sp.535, %class.gr_sp.535* %111, i64 %116
  %118 = add i64 %114, 2
  %119 = and i64 %118, 4294967294
  %120 = and i64 %114, -4294967295
  %121 = or i64 %119, %120
  store i64 %121, i64* %113, align 8
  %122 = bitcast %class.gr_sp.535* %117 to i64*
  store i64 %109, i64* %122, align 8
  br i1 %100, label %131, label %123

123:                                              ; preds = %106
  %124 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %1, i64 0, i32 0, i32 1
  %125 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %124, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = atomicrmw add i32* %125, i32 -1 acq_rel
  %127 = icmp eq i32 %126, 1
  br i1 %127, label %128, label %131

128:                                              ; preds = %123
  %129 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %124, i64 -1
  %130 = bitcast %class.GrIORef* %129 to %class.GrGpuResource*
  tail call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %130, i32 0) #14
  br label %131

131:                                              ; preds = %106, %123, %128
  %132 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %7, align 8
  %133 = load %class.GrVkAttachment*, %class.GrVkAttachment** %61, align 8
  %134 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %133, i64 0, i32 1
  call void @_ZN24GrVkPrimaryCommandBuffer12resolveImageEP7GrVkGpuRK9GrVkImageS4_jPK14VkImageResolve(%class.GrVkPrimaryCommandBuffer* %132, %class.GrVkGpu* %0, %class.GrVkImage* dereferenceable(184) %134, %class.GrVkImage* dereferenceable(184) %60, i32 1, %struct.VkImageResolve* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %11) #14
  br label %135

135:                                              ; preds = %5, %131
  ret void
}

declare void @_ZN24GrVkPrimaryCommandBuffer12resolveImageEP7GrVkGpuRK9GrVkImageS4_jPK14VkImageResolve(%class.GrVkPrimaryCommandBuffer*, %class.GrVkGpu*, %class.GrVkImage* dereferenceable(184), %class.GrVkImage* dereferenceable(184), i32, %struct.VkImageResolve*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpu21onResolveRenderTargetEP14GrRenderTargetRK7SkIRect(%class.GrVkGpu*, %class.GrRenderTarget*, %struct.SkIRect* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %struct.SkIPoint*
  %6 = bitcast %class.GrRenderTarget* %1 to %class.GrVkRenderTarget*
  %7 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 3, i32 0
  %8 = load %class.GrVkCaps*, %class.GrVkCaps** %7, align 8
  %9 = getelementptr inbounds %class.GrVkCaps, %class.GrVkCaps* %8, i64 0, i32 28
  %10 = load i8, i8* %9, align 4, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %22, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %class.GrRenderTarget, %class.GrRenderTarget* %1, i64 0, i32 5, i32 0, i32 1
  %14 = bitcast %class.GrIORef* %13 to %class.GrVkAttachment**
  %15 = load %class.GrVkAttachment*, %class.GrVkAttachment** %14, align 8
  %16 = icmp eq %class.GrVkAttachment* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %15, i64 0, i32 1, i32 1, i32 5
  %19 = load i32, i32* %18, align 4
  %20 = trunc i32 %19 to i8
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %44, label %22

22:                                               ; preds = %3, %12, %17
  %23 = icmp eq %class.GrRenderTarget* %1, null
  br i1 %23, label %33, label %24

24:                                               ; preds = %22
  %25 = bitcast %class.GrRenderTarget* %1 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr i8, i8* %26, i64 -24
  %28 = bitcast i8* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %class.GrRenderTarget* %1 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 %29
  %32 = bitcast i8* %31 to %class.GrSurface*
  br label %33

33:                                               ; preds = %24, %22
  %34 = phi %class.GrSurface* [ %32, %24 ], [ null, %22 ]
  %35 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #14
  %36 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i64
  %41 = shl nuw i64 %40, 32
  %42 = zext i32 %37 to i64
  %43 = or i64 %41, %42
  store i64 %43, i64* %4, align 8
  call void @_ZN7GrVkGpu12resolveImageEP9GrSurfaceP16GrVkRenderTargetRK7SkIRectRK8SkIPoint(%class.GrVkGpu* %0, %class.GrSurface* %34, %class.GrVkRenderTarget* %6, %struct.SkIRect* dereferenceable(16) %2, %struct.SkIPoint* nonnull dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #14
  br label %44

44:                                               ; preds = %17, %33
  ret void
}

declare i8* @_ZN10GrVkMemory8MapAllocEP7GrVkGpuRK9GrVkAlloc(%class.GrVkGpu*, %struct.GrVkAlloc* dereferenceable(48)) local_unnamed_addr #2

declare void @_ZN10GrVkMemory16FlushMappedAllocEP7GrVkGpuRK9GrVkAllocmm(%class.GrVkGpu*, %struct.GrVkAlloc* dereferenceable(48), i64, i64) local_unnamed_addr #2

declare void @_ZN10GrVkMemory10UnmapAllocEPK7GrVkGpuRK9GrVkAlloc(%class.GrVkGpu*, %struct.GrVkAlloc* dereferenceable(48)) local_unnamed_addr #2

declare i64 @_Z32GrComputeTightCombinedBufferSizem7SkISizeP8SkTArrayImLb0EEi(i64, i64, %class.SkTArray.697*, i32) local_unnamed_addr #2

declare void @_ZN22GrStagingBufferManager26allocateStagingBufferSliceEmm(%"struct.GrStagingBufferManager::Slice"* sret, %class.GrStagingBufferManager*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7GrVkGpu23uploadTexDataCompressedEP14GrVkAttachmentN7SkImage15CompressionTypeE8VkFormat7SkISize11GrMipmappedPKvm(%class.GrVkGpu*, %class.GrVkAttachment*, i32, i32, i64, i1 zeroext, i8* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %9 = alloca %"struct.GrStagingBufferManager::Slice", align 8
  %10 = alloca %class.SkTArray.698, align 8
  %11 = alloca %class.SkTArray.697, align 8
  %12 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 13
  %13 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %12, align 8
  %14 = icmp eq %class.GrVkPrimaryCommandBuffer* %13, null
  br i1 %14, label %63, label %15

15:                                               ; preds = %8
  %16 = trunc i64 %4 to i32
  %17 = icmp eq i32 %16, 0
  %18 = icmp ult i64 %4, 4294967296
  %19 = or i1 %18, %17
  br i1 %19, label %63, label %20

20:                                               ; preds = %15
  %21 = bitcast %"struct.GrStagingBufferManager::Slice"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #14
  %22 = getelementptr inbounds %"struct.GrStagingBufferManager::Slice", %"struct.GrStagingBufferManager::Slice"* %9, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 24, i1 false) #14
  %23 = bitcast %class.SkTArray.698* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #14
  %24 = getelementptr inbounds %class.SkTArray.698, %class.SkTArray.698* %10, i64 0, i32 0
  %25 = getelementptr inbounds %class.SkTArray.698, %class.SkTArray.698* %10, i64 0, i32 1
  store %struct.VkBufferImageCopy* null, %struct.VkBufferImageCopy** %24, align 8
  store i64 1, i64* %25, align 8
  %26 = bitcast %class.SkTArray.697* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #14
  %27 = getelementptr inbounds %class.SkTArray.697, %class.SkTArray.697* %11, i64 0, i32 0
  %28 = getelementptr inbounds %class.SkTArray.697, %class.SkTArray.697* %11, i64 0, i32 1
  store i64* null, i64** %27, align 8
  store i64 1, i64* %28, align 8
  %29 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 10
  call fastcc void @_ZL26fill_in_compressed_regionsP22GrStagingBufferManagerP8SkTArrayI17VkBufferImageCopyLb0EEPS1_ImLb0EEPNS_5SliceEN7SkImage15CompressionTypeE8VkFormat7SkISize11GrMipmapped(%class.GrStagingBufferManager* %29, %class.SkTArray.698* nonnull %10, %class.SkTArray.697* nonnull %11, %"struct.GrStagingBufferManager::Slice"* nonnull %9, i32 %2, i32 %3, i64 %4, i1 zeroext %5)
  %30 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %22, align 8
  %31 = icmp eq %class.GrGpuBuffer* %30, null
  br i1 %31, label %47, label %32

32:                                               ; preds = %20
  %33 = getelementptr inbounds %"struct.GrStagingBufferManager::Slice", %"struct.GrStagingBufferManager::Slice"* %9, i64 0, i32 2
  %34 = load i8*, i8** %33, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %34, i8* align 1 %6, i64 %7, i1 false)
  %35 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %1, i64 0, i32 1
  call void @_ZN9GrVkImage27setImageLayoutAndQueueIndexEPK7GrVkGpu13VkImageLayoutjjbj(%class.GrVkImage* %35, %class.GrVkGpu* %0, i32 7, i32 4096, i32 4096, i1 zeroext false, i32 -1) #14
  %36 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %12, align 8
  %37 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %30, i64 1
  %38 = bitcast %class.GrGpuBuffer* %37 to %struct.VkBuffer_T**
  %39 = load %struct.VkBuffer_T*, %struct.VkBuffer_T** %38, align 8
  %40 = icmp eq %class.GrVkAttachment* %1, null
  %41 = select i1 %40, %class.GrVkImage* null, %class.GrVkImage* %35
  %42 = load i64, i64* %25, align 8
  %43 = lshr i64 %42, 1
  %44 = trunc i64 %43 to i32
  %45 = and i32 %44, 2147483647
  %46 = load %struct.VkBufferImageCopy*, %struct.VkBufferImageCopy** %24, align 8
  call void @_ZN24GrVkPrimaryCommandBuffer17copyBufferToImageEPK7GrVkGpuP10VkBuffer_TP9GrVkImage13VkImageLayoutjPK17VkBufferImageCopy(%class.GrVkPrimaryCommandBuffer* %36, %class.GrVkGpu* %0, %struct.VkBuffer_T* %39, %class.GrVkImage* %41, i32 7, i32 %45, %struct.VkBufferImageCopy* %46) #14
  br label %47

47:                                               ; preds = %20, %32
  %48 = phi i1 [ true, %32 ], [ false, %20 ]
  %49 = load i64, i64* %28, align 8
  %50 = and i64 %49, 1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = bitcast %class.SkTArray.697* %11 to i8**
  %54 = load i8*, i8** %53, align 8
  call void @_Z7sk_freePv(i8* %54) #14
  br label %55

55:                                               ; preds = %47, %52
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #14
  %56 = load i64, i64* %25, align 8
  %57 = and i64 %56, 1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %55
  %60 = bitcast %class.SkTArray.698* %10 to i8**
  %61 = load i8*, i8** %60, align 8
  call void @_Z7sk_freePv(i8* %61) #14
  br label %62

62:                                               ; preds = %55, %59
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #14
  br label %63

63:                                               ; preds = %15, %8, %62
  %64 = phi i1 [ %48, %62 ], [ false, %8 ], [ false, %15 ]
  ret i1 %64
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL26fill_in_compressed_regionsP22GrStagingBufferManagerP8SkTArrayI17VkBufferImageCopyLb0EEPS1_ImLb0EEPNS_5SliceEN7SkImage15CompressionTypeE8VkFormat7SkISize11GrMipmapped(%class.GrStagingBufferManager*, %class.SkTArray.698*, %class.SkTArray.697*, %"struct.GrStagingBufferManager::Slice"* nocapture, i32, i32, i64, i1 zeroext) unnamed_addr #0 {
  %9 = alloca %"struct.GrStagingBufferManager::Slice", align 8
  %10 = trunc i64 %6 to i32
  %11 = lshr i64 %6, 32
  %12 = trunc i64 %11 to i32
  br i1 %7, label %13, label %17

13:                                               ; preds = %8
  %14 = tail call i32 @_ZN8SkMipmap17ComputeLevelCountEii(i32 %10, i32 %12) #14
  %15 = add nsw i32 %14, 1
  %16 = icmp sgt i32 %14, -1
  br i1 %16, label %17, label %31

17:                                               ; preds = %8, %13
  %18 = phi i32 [ %15, %13 ], [ 1, %8 ]
  tail call void @_ZN8SkTArrayI17VkBufferImageCopyLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.698* %1, i32 %18, i32 0) #14
  %19 = getelementptr inbounds %class.SkTArray.698, %class.SkTArray.698* %1, i64 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = shl i64 %20, 32
  %22 = and i64 %21, 4294967296
  %23 = and i64 %20, -4294967297
  %24 = or i64 %22, %23
  store i64 %24, i64* %19, align 8
  tail call void @_ZN8SkTArrayImLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.697* %2, i32 %18, i32 0) #14
  %25 = getelementptr inbounds %class.SkTArray.697, %class.SkTArray.697* %2, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = shl i64 %26, 32
  %28 = and i64 %27, 4294967296
  %29 = and i64 %26, -4294967297
  %30 = or i64 %28, %29
  store i64 %30, i64* %25, align 8
  br label %38

31:                                               ; preds = %13
  %32 = getelementptr inbounds %class.SkTArray.698, %class.SkTArray.698* %1, i64 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = and i64 %33, -4294967297
  store i64 %34, i64* %32, align 8
  %35 = getelementptr inbounds %class.SkTArray.697, %class.SkTArray.697* %2, i64 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = and i64 %36, -4294967297
  store i64 %37, i64* %35, align 8
  br label %38

38:                                               ; preds = %17, %31
  %39 = phi i32 [ %18, %17 ], [ %15, %31 ]
  %40 = tail call fastcc i64 @_ZL23GrVkFormatBytesPerBlock8VkFormat(i32 %5)
  %41 = tail call i64 @_Z20SkCompressedDataSizeN7SkImage15CompressionTypeE7SkISizeP8SkTArrayImLb0EEb(i32 %4, i64 %6, %class.SkTArray.697* %2, i1 zeroext %7) #14
  %42 = and i64 %40, 3
  switch i64 %42, label %45 [
    i64 0, label %47
    i64 2, label %43
  ]

43:                                               ; preds = %38
  %44 = shl i64 %40, 1
  br label %47

45:                                               ; preds = %38
  %46 = shl i64 %40, 2
  br label %47

47:                                               ; preds = %45, %43, %38
  %48 = phi i64 [ %46, %45 ], [ %44, %43 ], [ %40, %38 ]
  %49 = bitcast %"struct.GrStagingBufferManager::Slice"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #14
  call void @_ZN22GrStagingBufferManager26allocateStagingBufferSliceEmm(%"struct.GrStagingBufferManager::Slice"* nonnull sret %9, %class.GrStagingBufferManager* %0, i64 %41, i64 %48) #14
  %50 = bitcast %"struct.GrStagingBufferManager::Slice"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* nonnull align 8 %49, i64 24, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #14
  %51 = getelementptr inbounds %"struct.GrStagingBufferManager::Slice", %"struct.GrStagingBufferManager::Slice"* %3, i64 0, i32 0
  %52 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %51, align 8
  %53 = icmp ne %class.GrGpuBuffer* %52, null
  %54 = icmp sgt i32 %39, 0
  %55 = and i1 %53, %54
  br i1 %55, label %56, label %109

56:                                               ; preds = %47
  %57 = getelementptr inbounds %class.SkTArray.698, %class.SkTArray.698* %1, i64 0, i32 0
  %58 = getelementptr inbounds %class.SkTArray.698, %class.SkTArray.698* %1, i64 0, i32 1
  %59 = getelementptr inbounds %"struct.GrStagingBufferManager::Slice", %"struct.GrStagingBufferManager::Slice"* %3, i64 0, i32 1
  %60 = getelementptr inbounds %class.SkTArray.697, %class.SkTArray.697* %2, i64 0, i32 0
  %61 = zext i32 %39 to i64
  br label %62

62:                                               ; preds = %62, %56
  %63 = phi i64 [ 0, %56 ], [ %107, %62 ]
  %64 = phi i32 [ %12, %56 ], [ %106, %62 ]
  %65 = phi i32 [ %10, %56 ], [ %103, %62 ]
  call void @_ZN8SkTArrayI17VkBufferImageCopyLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.698* %1, i32 1, i32 1) #14
  %66 = load %struct.VkBufferImageCopy*, %struct.VkBufferImageCopy** %57, align 8
  %67 = load i64, i64* %58, align 8
  %68 = lshr i64 %67, 1
  %69 = and i64 %68, 2147483647
  %70 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %66, i64 %69
  %71 = add i64 %67, 2
  %72 = and i64 %71, 4294967294
  %73 = and i64 %67, -4294967295
  %74 = or i64 %72, %73
  store i64 %74, i64* %58, align 8
  %75 = bitcast %struct.VkBufferImageCopy* %70 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 56, i1 false)
  %76 = load i64, i64* %59, align 8
  %77 = load i64*, i64** %60, align 8
  %78 = getelementptr inbounds i64, i64* %77, i64 %63
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, %76
  %81 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %70, i64 0, i32 0
  store i64 %80, i64* %81, align 8
  %82 = zext i32 %64 to i64
  %83 = shl nuw i64 %82, 32
  %84 = zext i32 %65 to i64
  %85 = or i64 %83, %84
  %86 = call i64 @_Z22GrCompressedDimensionsN7SkImage15CompressionTypeE7SkISize(i32 %4, i64 %85) #14
  %87 = trunc i64 %86 to i32
  %88 = lshr i64 %86, 32
  %89 = trunc i64 %88 to i32
  %90 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %66, i64 %69, i32 1
  store i32 %87, i32* %90, align 8
  %91 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %66, i64 %69, i32 2
  store i32 %89, i32* %91, align 4
  %92 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %66, i64 %69, i32 3, i32 0
  store i32 1, i32* %92, align 8
  %93 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %66, i64 %69, i32 3, i32 1
  %94 = trunc i64 %63 to i32
  store i32 %94, i32* %93, align 4
  %95 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %66, i64 %69, i32 3, i32 2
  %96 = bitcast i32* %95 to <4 x i32>*
  store <4 x i32> <i32 0, i32 1, i32 0, i32 0>, <4 x i32>* %96, align 8
  %97 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %66, i64 %69, i32 4, i32 2
  store i32 0, i32* %97, align 8
  %98 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %66, i64 %69, i32 5, i32 0
  store i32 %65, i32* %98, align 4
  %99 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %66, i64 %69, i32 5, i32 1
  store i32 %64, i32* %99, align 4
  %100 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %66, i64 %69, i32 5, i32 2
  store i32 1, i32* %100, align 4
  %101 = sdiv i32 %65, 2
  %102 = icmp sgt i32 %101, 1
  %103 = select i1 %102, i32 %101, i32 1
  %104 = sdiv i32 %64, 2
  %105 = icmp sgt i32 %104, 1
  %106 = select i1 %105, i32 %104, i32 1
  %107 = add nuw nsw i64 %63, 1
  %108 = icmp eq i64 %107, %61
  br i1 %108, label %109, label %62

109:                                              ; preds = %62, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpu15onCreateTextureE7SkISizeRK15GrBackendFormat12GrRenderablei10SkBudgeted11GrProtectedij(%class.sk_sp.699* noalias nocapture sret, %class.GrVkGpu*, i64, %class.GrBackendFormat* dereferenceable(72), i1 zeroext, i32, i1 zeroext, i1 zeroext, i32, i32) unnamed_addr #0 align 2 {
  %11 = alloca i32, align 4
  %12 = alloca %class.sk_sp.701, align 8
  %13 = alloca %class.sk_sp.700, align 8
  %14 = alloca %class.SkSTArray.702, align 8
  %15 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #14
  store i32 -1431655766, i32* %11, align 4
  %16 = call zeroext i1 @_ZNK15GrBackendFormat10asVkFormatEP8VkFormat(%class.GrBackendFormat* %3, i32* nonnull %11) #14
  %17 = icmp sgt i32 %8, 1
  %18 = zext i1 %17 to i32
  br i1 %4, label %19, label %23

19:                                               ; preds = %10
  %20 = bitcast %class.sk_sp.701* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  %21 = load i32, i32* %11, align 4
  call void @_ZN23GrVkTextureRenderTarget26MakeNewTextureRenderTargetEP7GrVkGpu10SkBudgeted7SkISize8VkFormatji14GrMipmapStatus11GrProtected(%class.sk_sp.701* nonnull sret %12, %class.GrVkGpu* %1, i1 zeroext %6, i64 %2, i32 %21, i32 %8, i32 %5, i32 %18, i1 zeroext %7) #14
  %22 = bitcast %class.sk_sp.701* %12 to i64*
  br label %27

23:                                               ; preds = %10
  %24 = bitcast %class.sk_sp.700* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #14
  %25 = load i32, i32* %11, align 4
  call void @_ZN11GrVkTexture14MakeNewTextureEP7GrVkGpu10SkBudgeted7SkISize8VkFormatj11GrProtected14GrMipmapStatus(%class.sk_sp.700* nonnull sret %13, %class.GrVkGpu* %1, i1 zeroext %6, i64 %2, i32 %25, i32 %8, i1 zeroext %7, i32 %18) #14
  %26 = bitcast %class.sk_sp.700* %13 to i64*
  br label %27

27:                                               ; preds = %23, %19
  %28 = phi i64* [ %26, %23 ], [ %22, %19 ]
  %29 = phi i8* [ %24, %23 ], [ %20, %19 ]
  %30 = load i64, i64* %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #14
  %31 = inttoptr i64 %30 to %class.GrVkTexture*
  %32 = icmp eq i64 %30, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %27
  %34 = getelementptr inbounds %class.sk_sp.699, %class.sk_sp.699* %0, i64 0, i32 0
  store %class.GrTexture* null, %class.GrTexture** %34, align 8
  br label %131

35:                                               ; preds = %27
  %36 = icmp eq i32 %9, 0
  br i1 %36, label %113, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 13
  %39 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %38, align 8
  %40 = icmp eq %class.GrVkPrimaryCommandBuffer* %39, null
  br i1 %40, label %115, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %class.SkSTArray.702, %class.SkSTArray.702* %14, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %42) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 24, i1 false)
  %43 = getelementptr inbounds %class.SkSTArray.702, %class.SkSTArray.702* %14, i64 0, i32 0, i32 0, i64 24
  %44 = getelementptr inbounds %class.SkSTArray.702, %class.SkSTArray.702* %14, i64 0, i32 0, i32 0, i64 32
  %45 = bitcast i8* %44 to i64*
  %46 = bitcast i8* %43 to i8**
  store i8* %42, i8** %46, align 8
  store i64 8589934592, i64* %45, align 8
  %47 = getelementptr inbounds %class.GrVkTexture, %class.GrVkTexture* %31, i64 0, i32 1, i32 0
  %48 = load %class.GrVkAttachment*, %class.GrVkAttachment** %47, align 8
  %49 = icmp eq %class.GrVkAttachment* %48, null
  %50 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %48, i64 0, i32 1
  %51 = select i1 %49, %class.GrVkImage* null, %class.GrVkImage* %50
  %52 = getelementptr inbounds %class.GrVkImage, %class.GrVkImage* %51, i64 0, i32 1, i32 7
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %41
  %56 = bitcast i8* %43 to %struct.VkImageSubresourceRange**
  br label %60

57:                                               ; preds = %41
  %58 = bitcast i8* %43 to %class.SkTArray.704*
  %59 = bitcast i8* %43 to %struct.VkImageSubresourceRange**
  br label %74

60:                                               ; preds = %108, %55
  %61 = phi %struct.VkImageSubresourceRange** [ %56, %55 ], [ %59, %108 ]
  call void @_ZN9GrVkImage27setImageLayoutAndQueueIndexEPK7GrVkGpu13VkImageLayoutjjbj(%class.GrVkImage* %51, %class.GrVkGpu* %1, i32 7, i32 4096, i32 4096, i1 zeroext false, i32 -1) #14
  %62 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %38, align 8
  %63 = load i64, i64* %45, align 8
  %64 = lshr i64 %63, 1
  %65 = trunc i64 %64 to i32
  %66 = and i32 %65, 2147483647
  %67 = load %struct.VkImageSubresourceRange*, %struct.VkImageSubresourceRange** %61, align 8
  call void @_ZN24GrVkPrimaryCommandBuffer15clearColorImageEPK7GrVkGpuP9GrVkImagePK17VkClearColorValuejPK23VkImageSubresourceRange(%class.GrVkPrimaryCommandBuffer* %62, %class.GrVkGpu* %1, %class.GrVkImage* %51, %union.VkClearColorValue* nonnull @_ZZN7GrVkGpu15onCreateTextureE7SkISizeRK15GrBackendFormat12GrRenderablei10SkBudgeted11GrProtectedijE15kZeroClearColor, i32 %66, %struct.VkImageSubresourceRange* %67) #14
  %68 = load i64, i64* %45, align 8
  %69 = and i64 %68, 1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %73, label %71

71:                                               ; preds = %60
  %72 = load i8*, i8** %46, align 8
  call void @_Z7sk_freePv(i8* %72) #14
  br label %73

73:                                               ; preds = %60, %71
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %42) #14
  br label %113

74:                                               ; preds = %57, %108
  %75 = phi i32 [ 0, %57 ], [ %110, %108 ]
  %76 = phi i8 [ 0, %57 ], [ %109, %108 ]
  %77 = shl i32 1, %75
  %78 = and i32 %77, %9
  %79 = icmp eq i32 %78, 0
  %80 = and i8 %76, 1
  %81 = icmp ne i8 %80, 0
  br i1 %79, label %106, label %82

82:                                               ; preds = %74
  br i1 %81, label %83, label %92

83:                                               ; preds = %82
  %84 = load %struct.VkImageSubresourceRange*, %struct.VkImageSubresourceRange** %59, align 8
  %85 = load i64, i64* %45, align 8
  %86 = lshr i64 %85, 1
  %87 = and i64 %86, 2147483647
  %88 = add nsw i64 %87, -1
  %89 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %84, i64 %88, i32 2
  %90 = load i32, i32* %89, align 4
  %91 = add i32 %90, 1
  store i32 %91, i32* %89, align 4
  br label %108

92:                                               ; preds = %82
  call void @_ZN8SkTArrayI23VkImageSubresourceRangeLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.704* %58, i32 1, i32 1) #14
  %93 = load %struct.VkImageSubresourceRange*, %struct.VkImageSubresourceRange** %59, align 8
  %94 = load i64, i64* %45, align 8
  %95 = lshr i64 %94, 1
  %96 = and i64 %95, 2147483647
  %97 = add i64 %94, 2
  %98 = and i64 %97, 4294967294
  %99 = and i64 %94, -4294967295
  %100 = or i64 %98, %99
  store i64 %100, i64* %45, align 8
  %101 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %93, i64 %96, i32 0
  store i32 1, i32* %101, align 4
  %102 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %93, i64 %96, i32 3
  store i32 0, i32* %102, align 4
  %103 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %93, i64 %96, i32 1
  store i32 %75, i32* %103, align 4
  %104 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %93, i64 %96, i32 4
  store i32 1, i32* %104, align 4
  %105 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %93, i64 %96, i32 2
  store i32 1, i32* %105, align 4
  br label %108

106:                                              ; preds = %74
  %107 = select i1 %81, i8 0, i8 %76
  br label %108

108:                                              ; preds = %106, %92, %83
  %109 = phi i8 [ %76, %83 ], [ 1, %92 ], [ %107, %106 ]
  %110 = add nuw i32 %75, 1
  %111 = load i32, i32* %52, align 4
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %74, label %60

113:                                              ; preds = %73, %35
  %114 = bitcast %class.sk_sp.699* %0 to i64*
  store i64 %30, i64* %114, align 8
  br label %131

115:                                              ; preds = %37
  %116 = getelementptr inbounds %class.sk_sp.699, %class.sk_sp.699* %0, i64 0, i32 0
  store %class.GrTexture* null, %class.GrTexture** %116, align 8
  %117 = inttoptr i64 %30 to i8**
  %118 = load i8*, i8** %117, align 8
  %119 = getelementptr i8, i8* %118, i64 -24
  %120 = bitcast i8* %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = add i64 %121, 8
  %123 = inttoptr i64 %30 to i8*
  %124 = getelementptr inbounds i8, i8* %123, i64 %122
  %125 = bitcast i8* %124 to i32*
  %126 = atomicrmw add i32* %125, i32 -1 acq_rel
  %127 = icmp eq i32 %126, 1
  br i1 %127, label %128, label %131

128:                                              ; preds = %115
  %129 = getelementptr inbounds i8, i8* %123, i64 %121
  %130 = bitcast i8* %129 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %130, i32 0) #14
  br label %131

131:                                              ; preds = %33, %113, %115, %128
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #14
  ret void
}

declare zeroext i1 @_ZNK15GrBackendFormat10asVkFormatEP8VkFormat(%class.GrBackendFormat*, i32*) local_unnamed_addr #2

declare void @_ZN23GrVkTextureRenderTarget26MakeNewTextureRenderTargetEP7GrVkGpu10SkBudgeted7SkISize8VkFormatji14GrMipmapStatus11GrProtected(%class.sk_sp.701* sret, %class.GrVkGpu*, i1 zeroext, i64, i32, i32, i32, i32, i1 zeroext) local_unnamed_addr #2

declare void @_ZN11GrVkTexture14MakeNewTextureEP7GrVkGpu10SkBudgeted7SkISize8VkFormatj11GrProtected14GrMipmapStatus(%class.sk_sp.700* sret, %class.GrVkGpu*, i1 zeroext, i64, i32, i32, i1 zeroext, i32) local_unnamed_addr #2

declare void @_ZN24GrVkPrimaryCommandBuffer15clearColorImageEPK7GrVkGpuP9GrVkImagePK17VkClearColorValuejPK23VkImageSubresourceRange(%class.GrVkPrimaryCommandBuffer*, %class.GrVkGpu*, %class.GrVkImage*, %union.VkClearColorValue*, i32, %struct.VkImageSubresourceRange*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpu25onCreateCompressedTextureE7SkISizeRK15GrBackendFormat10SkBudgeted11GrMipmapped11GrProtectedPKvm(%class.sk_sp.699* noalias nocapture sret, %class.GrVkGpu*, i64, %class.GrBackendFormat* dereferenceable(72), i1 zeroext, i1 zeroext, i1 zeroext, i8* nocapture readonly, i64) unnamed_addr #0 align 2 {
  %10 = alloca i32, align 4
  %11 = alloca %class.sk_sp.700, align 8
  %12 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #14
  store i32 -1431655766, i32* %10, align 4
  %13 = call zeroext i1 @_ZNK15GrBackendFormat10asVkFormatEP8VkFormat(%class.GrBackendFormat* %3, i32* nonnull %10) #14
  br i1 %5, label %14, label %20

14:                                               ; preds = %9
  %15 = trunc i64 %2 to i32
  %16 = lshr i64 %2, 32
  %17 = trunc i64 %16 to i32
  %18 = call i32 @_ZN8SkMipmap17ComputeLevelCountEii(i32 %15, i32 %17) #14
  %19 = add nsw i32 %18, 1
  br label %20

20:                                               ; preds = %14, %9
  %21 = phi i32 [ %19, %14 ], [ 1, %9 ]
  %22 = select i1 %5, i32 2, i32 0
  %23 = bitcast %class.sk_sp.700* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #14
  %24 = getelementptr inbounds %class.sk_sp.700, %class.sk_sp.700* %11, i64 0, i32 0
  store %class.GrVkTexture* inttoptr (i64 -6148914691236517206 to %class.GrVkTexture*), %class.GrVkTexture** %24, align 8
  %25 = load i32, i32* %10, align 4
  call void @_ZN11GrVkTexture14MakeNewTextureEP7GrVkGpu10SkBudgeted7SkISize8VkFormatj11GrProtected14GrMipmapStatus(%class.sk_sp.700* nonnull sret %11, %class.GrVkGpu* %1, i1 zeroext %4, i64 %2, i32 %25, i32 %21, i1 zeroext %6, i32 %22) #14
  %26 = load %class.GrVkTexture*, %class.GrVkTexture** %24, align 8
  %27 = icmp eq %class.GrVkTexture* %26, null
  br i1 %27, label %28, label %30

28:                                               ; preds = %20
  %29 = getelementptr inbounds %class.sk_sp.699, %class.sk_sp.699* %0, i64 0, i32 0
  store %class.GrTexture* null, %class.GrTexture** %29, align 8
  br label %60

30:                                               ; preds = %20
  %31 = call i32 @_Z32GrBackendFormatToCompressionTypeRK15GrBackendFormat(%class.GrBackendFormat* dereferenceable(72) %3) #14
  %32 = load %class.GrVkTexture*, %class.GrVkTexture** %24, align 8
  %33 = getelementptr inbounds %class.GrVkTexture, %class.GrVkTexture* %32, i64 0, i32 1, i32 0
  %34 = load %class.GrVkAttachment*, %class.GrVkAttachment** %33, align 8
  %35 = load i32, i32* %10, align 4
  %36 = call zeroext i1 @_ZN7GrVkGpu23uploadTexDataCompressedEP14GrVkAttachmentN7SkImage15CompressionTypeE8VkFormat7SkISize11GrMipmappedPKvm(%class.GrVkGpu* %1, %class.GrVkAttachment* %34, i32 %31, i32 %35, i64 %2, i1 zeroext %5, i8* %7, i64 %8)
  br i1 %36, label %37, label %41

37:                                               ; preds = %30
  %38 = bitcast %class.sk_sp.700* %11 to i64*
  %39 = load i64, i64* %38, align 8
  store %class.GrVkTexture* null, %class.GrVkTexture** %24, align 8
  %40 = bitcast %class.sk_sp.699* %0 to i64*
  store i64 %39, i64* %40, align 8
  br label %60

41:                                               ; preds = %30
  %42 = getelementptr inbounds %class.sk_sp.699, %class.sk_sp.699* %0, i64 0, i32 0
  store %class.GrTexture* null, %class.GrTexture** %42, align 8
  %43 = load %class.GrVkTexture*, %class.GrVkTexture** %24, align 8
  %44 = icmp eq %class.GrVkTexture* %43, null
  br i1 %44, label %60, label %45

45:                                               ; preds = %41
  %46 = bitcast %class.GrVkTexture* %43 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr i8, i8* %47, i64 -24
  %49 = bitcast i8* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = add i64 %50, 8
  %52 = bitcast %class.GrVkTexture* %43 to i8*
  %53 = getelementptr inbounds i8, i8* %52, i64 %51
  %54 = bitcast i8* %53 to i32*
  %55 = atomicrmw add i32* %54, i32 -1 acq_rel
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %57, label %60

57:                                               ; preds = %45
  %58 = getelementptr inbounds i8, i8* %52, i64 %50
  %59 = bitcast i8* %58 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %59, i32 0) #14
  br label %60

60:                                               ; preds = %28, %37, %41, %45, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #14
  ret void
}

declare i32 @_ZN8SkMipmap17ComputeLevelCountEii(i32, i32) local_unnamed_addr #2

declare i32 @_Z32GrBackendFormatToCompressionTypeRK15GrBackendFormat(%class.GrBackendFormat* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpu10copyBufferE5sk_spI11GrGpuBufferES2_mmm(%class.GrVkGpu*, %class.sk_sp.295* nocapture, %class.sk_sp.295* nocapture, i64, i64, i64) local_unnamed_addr #0 align 2 {
  %7 = alloca %struct.VkBufferCopy, align 8
  %8 = alloca %class.sk_sp.295, align 8
  %9 = alloca %class.sk_sp.295, align 8
  %10 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 13
  %11 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %10, align 8
  %12 = icmp eq %class.GrVkPrimaryCommandBuffer* %11, null
  br i1 %12, label %50, label %13

13:                                               ; preds = %6
  %14 = bitcast %struct.VkBufferCopy* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #14
  %15 = getelementptr inbounds %struct.VkBufferCopy, %struct.VkBufferCopy* %7, i64 0, i32 0
  %16 = getelementptr inbounds %struct.VkBufferCopy, %struct.VkBufferCopy* %7, i64 0, i32 1
  %17 = getelementptr inbounds %struct.VkBufferCopy, %struct.VkBufferCopy* %7, i64 0, i32 2
  store i64 %3, i64* %15, align 8
  store i64 %4, i64* %16, align 8
  store i64 %5, i64* %17, align 8
  %18 = getelementptr inbounds %class.sk_sp.295, %class.sk_sp.295* %1, i64 0, i32 0
  %19 = bitcast %class.sk_sp.295* %1 to i64*
  %20 = load i64, i64* %19, align 8
  store %class.GrGpuBuffer* null, %class.GrGpuBuffer** %18, align 8
  %21 = bitcast %class.sk_sp.295* %8 to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %class.sk_sp.295, %class.sk_sp.295* %2, i64 0, i32 0
  %23 = bitcast %class.sk_sp.295* %2 to i64*
  %24 = load i64, i64* %23, align 8
  store %class.GrGpuBuffer* null, %class.GrGpuBuffer** %22, align 8
  %25 = bitcast %class.sk_sp.295* %9 to i64*
  store i64 %24, i64* %25, align 8
  call void @_ZN24GrVkPrimaryCommandBuffer10copyBufferEP7GrVkGpu5sk_spI11GrGpuBufferES4_jPK12VkBufferCopy(%class.GrVkPrimaryCommandBuffer* nonnull %11, %class.GrVkGpu* %0, %class.sk_sp.295* nonnull %8, %class.sk_sp.295* nonnull %9, i32 1, %struct.VkBufferCopy* nonnull %7) #14
  %26 = getelementptr inbounds %class.sk_sp.295, %class.sk_sp.295* %9, i64 0, i32 0
  %27 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %26, align 8
  %28 = icmp eq %class.GrGpuBuffer* %27, null
  br i1 %28, label %37, label %29

29:                                               ; preds = %13
  %30 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %27, i64 0, i32 0, i32 1
  %31 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %37

34:                                               ; preds = %29
  %35 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %30, i64 -1
  %36 = bitcast %class.GrIORef* %35 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %36, i32 0) #14
  br label %37

37:                                               ; preds = %13, %29, %34
  %38 = getelementptr inbounds %class.sk_sp.295, %class.sk_sp.295* %8, i64 0, i32 0
  %39 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %38, align 8
  %40 = icmp eq %class.GrGpuBuffer* %39, null
  br i1 %40, label %49, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %39, i64 0, i32 0, i32 1
  %43 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw add i32* %43, i32 -1 acq_rel
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %42, i64 -1
  %48 = bitcast %class.GrIORef* %47 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %48, i32 0) #14
  br label %49

49:                                               ; preds = %37, %41, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #14
  br label %50

50:                                               ; preds = %6, %49
  ret void
}

declare void @_ZN24GrVkPrimaryCommandBuffer10copyBufferEP7GrVkGpu5sk_spI11GrGpuBufferES4_jPK12VkBufferCopy(%class.GrVkPrimaryCommandBuffer*, %class.GrVkGpu*, %class.sk_sp.295*, %class.sk_sp.295*, i32, %struct.VkBufferCopy*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7GrVkGpu12updateBufferE5sk_spI10GrVkBufferEPKvmm(%class.GrVkGpu*, %class.sk_sp.678* nocapture, i8*, i64, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.sk_sp.678, align 8
  %7 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 13
  %8 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %7, align 8
  %9 = icmp eq %class.GrVkPrimaryCommandBuffer* %8, null
  br i1 %9, label %26, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.sk_sp.678, %class.sk_sp.678* %1, i64 0, i32 0
  %12 = bitcast %class.sk_sp.678* %1 to i64*
  %13 = load i64, i64* %12, align 8
  store %class.GrVkBuffer* null, %class.GrVkBuffer** %11, align 8
  %14 = bitcast %class.sk_sp.678* %6 to i64*
  store i64 %13, i64* %14, align 8
  call void @_ZN24GrVkPrimaryCommandBuffer12updateBufferEP7GrVkGpu5sk_spI10GrVkBufferEmmPKv(%class.GrVkPrimaryCommandBuffer* nonnull %8, %class.GrVkGpu* %0, %class.sk_sp.678* nonnull %6, i64 %3, i64 %4, i8* %2) #14
  %15 = getelementptr inbounds %class.sk_sp.678, %class.sk_sp.678* %6, i64 0, i32 0
  %16 = load %class.GrVkBuffer*, %class.GrVkBuffer** %15, align 8
  %17 = icmp eq %class.GrVkBuffer* %16, null
  br i1 %17, label %26, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %16, i64 0, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 -1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %26

23:                                               ; preds = %18
  %24 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %19, i64 -1
  %25 = bitcast %class.GrIORef* %24 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %25, i32 0) #14
  br label %26

26:                                               ; preds = %23, %18, %10, %5
  %27 = phi i1 [ false, %5 ], [ true, %10 ], [ true, %18 ], [ true, %23 ]
  ret i1 %27
}

declare void @_ZN24GrVkPrimaryCommandBuffer12updateBufferEP7GrVkGpu5sk_spI10GrVkBufferEmmPKv(%class.GrVkPrimaryCommandBuffer*, %class.GrVkGpu*, %class.sk_sp.678*, i64, i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpu20onWrapBackendTextureERK16GrBackendTexture15GrWrapOwnership15GrWrapCacheable8GrIOType(%class.sk_sp.699* noalias nocapture sret, %class.GrVkGpu*, %class.GrBackendTexture* dereferenceable(176), i32, i1 zeroext, i32) unnamed_addr #0 align 2 {
  %7 = alloca %struct.GrVkImageInfo, align 8
  %8 = alloca %class.sk_sp.621, align 8
  %9 = alloca %class.sk_sp.700, align 8
  %10 = alloca %class.sk_sp.621, align 8
  %11 = bitcast %struct.GrVkImageInfo* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %11) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 144, i1 false)
  %12 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 1, i32 5
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 1, i32 6
  store i8 0, i8* %13, align 8
  %14 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 2
  %15 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 36, i1 false) #14
  %16 = bitcast i32* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #14
  store i32 1, i32* %15, align 8
  %17 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 7
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 8
  store i32 -1, i32* %18, align 8
  %19 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 9
  store i8 0, i8* %19, align 4
  %20 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 11, i32 0
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 11, i32 2
  %22 = bitcast i64* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 36, i1 false) #14
  %23 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 12
  store i32 0, i32* %23, align 8
  %24 = call zeroext i1 @_ZNK16GrBackendTexture14getVkImageInfoEP13GrVkImageInfo(%class.GrBackendTexture* %2, %struct.GrVkImageInfo* nonnull %7) #14
  br i1 %24, label %27, label %25

25:                                               ; preds = %6
  %26 = getelementptr inbounds %class.sk_sp.699, %class.sk_sp.699* %0, i64 0, i32 0
  store %class.GrTexture* null, %class.GrTexture** %26, align 8
  br label %156

27:                                               ; preds = %6
  %28 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 3, i32 0
  %29 = load %class.GrVkCaps*, %class.GrVkCaps** %28, align 8
  %30 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 8
  %31 = load i32, i32* %30, align 8
  %32 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 0
  %33 = load %struct.VkImage_T*, %struct.VkImage_T** %32, align 8
  %34 = icmp eq %struct.VkImage_T* %33, null
  br i1 %34, label %73, label %35

35:                                               ; preds = %27
  %36 = icmp ne i32 %3, 1
  %37 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 1, i32 0
  %38 = load %struct.VkDeviceMemory_T*, %struct.VkDeviceMemory_T** %37, align 8
  %39 = icmp ne %struct.VkDeviceMemory_T* %38, null
  %40 = or i1 %36, %39
  br i1 %40, label %41, label %73

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 3
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 1000001002
  br i1 %44, label %45, label %49

45:                                               ; preds = %41
  %46 = getelementptr inbounds %class.GrVkCaps, %class.GrVkCaps* %29, i64 0, i32 9
  %47 = load i8, i8* %46, align 1, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %73, label %49

49:                                               ; preds = %45, %41
  %50 = load i32, i32* %18, align 8
  %51 = icmp ugt i32 %50, -4
  br i1 %51, label %57, label %52

52:                                               ; preds = %49
  %53 = load i32, i32* %23, align 8
  %54 = icmp eq i32 %53, 0
  %55 = icmp eq i32 %50, %31
  %56 = and i1 %55, %54
  br i1 %56, label %57, label %73

57:                                               ; preds = %52, %49
  %58 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 11, i32 3
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %68, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %class.GrVkCaps, %class.GrVkCaps* %29, i64 0, i32 19
  %63 = load i8, i8* %62, align 1, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %73, label %65

65:                                               ; preds = %61
  %66 = load i64, i64* %21, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %75

68:                                               ; preds = %65, %57
  %69 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 5
  %70 = load i32, i32* %69, align 4
  %71 = and i32 %70, 3
  %72 = icmp eq i32 %71, 3
  br i1 %72, label %75, label %73

73:                                               ; preds = %68, %61, %52, %45, %35, %27
  %74 = getelementptr inbounds %class.sk_sp.699, %class.sk_sp.699* %0, i64 0, i32 0
  store %class.GrTexture* null, %class.GrTexture** %74, align 8
  br label %156

75:                                               ; preds = %68, %65
  %76 = load i32, i32* %15, align 8
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %78, label %100

78:                                               ; preds = %75
  %79 = load i64, i64* %21, align 8
  %80 = icmp eq i64 %79, 0
  %81 = or i1 %60, %80
  br i1 %81, label %82, label %102

82:                                               ; preds = %78
  %83 = load i32, i32* %14, align 8
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 4
  %86 = load i32, i32* %85, align 8
  br i1 %84, label %87, label %89

87:                                               ; preds = %82
  %88 = call zeroext i1 @_ZNK8GrVkCaps20isVkFormatTexturableE8VkFormat(%class.GrVkCaps* %29, i32 %86) #14
  br i1 %88, label %95, label %100

89:                                               ; preds = %82
  %90 = call dereferenceable(40) %"struct.GrVkCaps::FormatInfo"* @_ZNK8GrVkCaps13getFormatInfoE8VkFormat(%class.GrVkCaps* %29, i32 %86) #14
  %91 = getelementptr inbounds %"struct.GrVkCaps::FormatInfo", %"struct.GrVkCaps::FormatInfo"* %90, i64 0, i32 1
  %92 = load i16, i16* %91, align 2
  %93 = and i16 %92, 1
  %94 = icmp eq i16 %93, 0
  br i1 %94, label %100, label %95

95:                                               ; preds = %87, %89
  %96 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 5
  %97 = load i32, i32* %96, align 4
  %98 = and i32 %97, 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %102

100:                                              ; preds = %95, %89, %87, %75
  %101 = getelementptr inbounds %class.sk_sp.699, %class.sk_sp.699* %0, i64 0, i32 0
  store %class.GrTexture* null, %class.GrTexture** %101, align 8
  br label %156

102:                                              ; preds = %95, %78
  %103 = call zeroext i1 @_ZNK16GrBackendTexture11isProtectedEv(%class.GrBackendTexture* %2) #14
  br i1 %103, label %104, label %110

104:                                              ; preds = %102
  %105 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 20
  %106 = load i8, i8* %105, align 1, !range !2
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %108, label %110

108:                                              ; preds = %104
  %109 = getelementptr inbounds %class.sk_sp.699, %class.sk_sp.699* %0, i64 0, i32 0
  store %class.GrTexture* null, %class.GrTexture** %109, align 8
  br label %156

110:                                              ; preds = %102, %104
  %111 = bitcast %class.sk_sp.621* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #14
  %112 = getelementptr inbounds %class.sk_sp.621, %class.sk_sp.621* %8, i64 0, i32 0
  store %class.GrBackendSurfaceMutableStateImpl* inttoptr (i64 -6148914691236517206 to %class.GrBackendSurfaceMutableStateImpl*), %class.GrBackendSurfaceMutableStateImpl** %112, align 8
  call void @_ZNK16GrBackendTexture15getMutableStateEv(%class.sk_sp.621* nonnull sret %8, %class.GrBackendTexture* %2) #14
  %113 = bitcast %class.sk_sp.700* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %113) #14
  %114 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %2, i64 0, i32 1
  %115 = load i32, i32* %114, align 4
  %116 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %2, i64 0, i32 2
  %117 = load i32, i32* %116, align 8
  %118 = zext i32 %117 to i64
  %119 = shl nuw i64 %118, 32
  %120 = zext i32 %115 to i64
  %121 = or i64 %119, %120
  %122 = bitcast %class.sk_sp.621* %8 to i64*
  %123 = load i64, i64* %122, align 8
  store %class.GrBackendSurfaceMutableStateImpl* null, %class.GrBackendSurfaceMutableStateImpl** %112, align 8
  %124 = bitcast %class.sk_sp.621* %10 to i64*
  store i64 %123, i64* %124, align 8
  call void @_ZN11GrVkTexture18MakeWrappedTextureEP7GrVkGpu7SkISize15GrWrapOwnership15GrWrapCacheable8GrIOTypeRK13GrVkImageInfo5sk_spI32GrBackendSurfaceMutableStateImplE(%class.sk_sp.700* nonnull sret %9, %class.GrVkGpu* %1, i64 %121, i32 %3, i1 zeroext %4, i32 %5, %struct.GrVkImageInfo* nonnull dereferenceable(144) %7, %class.sk_sp.621* nonnull %10) #14
  %125 = getelementptr inbounds %class.sk_sp.700, %class.sk_sp.700* %9, i64 0, i32 0
  %126 = bitcast %class.sk_sp.700* %9 to i64*
  %127 = load i64, i64* %126, align 8
  store %class.GrVkTexture* null, %class.GrVkTexture** %125, align 8
  %128 = bitcast %class.sk_sp.699* %0 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %class.sk_sp.621, %class.sk_sp.621* %10, i64 0, i32 0
  %130 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %129, align 8
  %131 = icmp eq %class.GrBackendSurfaceMutableStateImpl* %130, null
  br i1 %131, label %142, label %132

132:                                              ; preds = %110
  %133 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %130, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = atomicrmw add i32* %133, i32 -1 acq_rel
  %135 = icmp eq i32 %134, 1
  br i1 %135, label %136, label %142

136:                                              ; preds = %132
  %137 = bitcast %class.GrBackendSurfaceMutableStateImpl* %130 to %class.SkRefCntBase*
  %138 = bitcast %class.GrBackendSurfaceMutableStateImpl* %130 to void (%class.SkRefCntBase*)***
  %139 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %138, align 8
  %140 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %139, i64 2
  %141 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %140, align 8
  call void %141(%class.SkRefCntBase* nonnull %137) #14
  br label %142

142:                                              ; preds = %110, %132, %136
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %113) #14
  %143 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %112, align 8
  %144 = icmp eq %class.GrBackendSurfaceMutableStateImpl* %143, null
  br i1 %144, label %155, label %145

145:                                              ; preds = %142
  %146 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %143, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw add i32* %146, i32 -1 acq_rel
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %155

149:                                              ; preds = %145
  %150 = bitcast %class.GrBackendSurfaceMutableStateImpl* %143 to %class.SkRefCntBase*
  %151 = bitcast %class.GrBackendSurfaceMutableStateImpl* %143 to void (%class.SkRefCntBase*)***
  %152 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %151, align 8
  %153 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %152, i64 2
  %154 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, align 8
  call void %154(%class.SkRefCntBase* nonnull %150) #14
  br label %155

155:                                              ; preds = %142, %145, %149
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #14
  br label %156

156:                                              ; preds = %155, %108, %100, %73, %25
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %11) #14
  ret void
}

declare zeroext i1 @_ZNK16GrBackendTexture14getVkImageInfoEP13GrVkImageInfo(%class.GrBackendTexture*, %struct.GrVkImageInfo*) local_unnamed_addr #2

declare zeroext i1 @_ZNK16GrBackendTexture11isProtectedEv(%class.GrBackendTexture*) local_unnamed_addr #2

declare void @_ZNK16GrBackendTexture15getMutableStateEv(%class.sk_sp.621* sret, %class.GrBackendTexture*) local_unnamed_addr #2

declare void @_ZN11GrVkTexture18MakeWrappedTextureEP7GrVkGpu7SkISize15GrWrapOwnership15GrWrapCacheable8GrIOTypeRK13GrVkImageInfo5sk_spI32GrBackendSurfaceMutableStateImplE(%class.sk_sp.700* sret, %class.GrVkGpu*, i64, i32, i1 zeroext, i32, %struct.GrVkImageInfo* dereferenceable(144), %class.sk_sp.621*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpu30onWrapCompressedBackendTextureERK16GrBackendTexture15GrWrapOwnership15GrWrapCacheable(%class.sk_sp.699* noalias sret, %class.GrVkGpu*, %class.GrBackendTexture* dereferenceable(176), i32, i1 zeroext) unnamed_addr #0 align 2 {
  %6 = bitcast %class.GrVkGpu* %1 to void (%class.sk_sp.699*, %class.GrVkGpu*, %class.GrBackendTexture*, i32, i1, i32)***
  %7 = load void (%class.sk_sp.699*, %class.GrVkGpu*, %class.GrBackendTexture*, i32, i1, i32)**, void (%class.sk_sp.699*, %class.GrVkGpu*, %class.GrBackendTexture*, i32, i1, i32)*** %6, align 8
  %8 = getelementptr inbounds void (%class.sk_sp.699*, %class.GrVkGpu*, %class.GrBackendTexture*, i32, i1, i32)*, void (%class.sk_sp.699*, %class.GrVkGpu*, %class.GrBackendTexture*, i32, i1, i32)** %7, i64 42
  %9 = load void (%class.sk_sp.699*, %class.GrVkGpu*, %class.GrBackendTexture*, i32, i1, i32)*, void (%class.sk_sp.699*, %class.GrVkGpu*, %class.GrBackendTexture*, i32, i1, i32)** %8, align 8
  tail call void %9(%class.sk_sp.699* sret %0, %class.GrVkGpu* %1, %class.GrBackendTexture* dereferenceable(176) %2, i32 %3, i1 zeroext %4, i32 0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpu30onWrapRenderableBackendTextureERK16GrBackendTexturei15GrWrapOwnership15GrWrapCacheable(%class.sk_sp.699* noalias nocapture sret, %class.GrVkGpu*, %class.GrBackendTexture* dereferenceable(176), i32, i32, i1 zeroext) unnamed_addr #0 align 2 {
  %7 = alloca %struct.GrVkImageInfo, align 8
  %8 = alloca %class.sk_sp.621, align 8
  %9 = alloca %class.sk_sp.701, align 8
  %10 = alloca %class.sk_sp.621, align 8
  %11 = bitcast %struct.GrVkImageInfo* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %11) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 144, i1 false)
  %12 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 1, i32 5
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 1, i32 6
  store i8 0, i8* %13, align 8
  %14 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 2
  %15 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 36, i1 false) #14
  %16 = bitcast i32* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #14
  store i32 1, i32* %15, align 8
  %17 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 7
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 8
  store i32 -1, i32* %18, align 8
  %19 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 9
  store i8 0, i8* %19, align 4
  %20 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 11, i32 0
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 11, i32 2
  %22 = bitcast i64* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 36, i1 false) #14
  %23 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 12
  store i32 0, i32* %23, align 8
  %24 = call zeroext i1 @_ZNK16GrBackendTexture14getVkImageInfoEP13GrVkImageInfo(%class.GrBackendTexture* %2, %struct.GrVkImageInfo* nonnull %7) #14
  br i1 %24, label %27, label %25

25:                                               ; preds = %6
  %26 = getelementptr inbounds %class.sk_sp.699, %class.sk_sp.699* %0, i64 0, i32 0
  store %class.GrTexture* null, %class.GrTexture** %26, align 8
  br label %177

27:                                               ; preds = %6
  %28 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 3, i32 0
  %29 = load %class.GrVkCaps*, %class.GrVkCaps** %28, align 8
  %30 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 8
  %31 = load i32, i32* %30, align 8
  %32 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 0
  %33 = load %struct.VkImage_T*, %struct.VkImage_T** %32, align 8
  %34 = icmp eq %struct.VkImage_T* %33, null
  br i1 %34, label %73, label %35

35:                                               ; preds = %27
  %36 = icmp ne i32 %4, 1
  %37 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 1, i32 0
  %38 = load %struct.VkDeviceMemory_T*, %struct.VkDeviceMemory_T** %37, align 8
  %39 = icmp ne %struct.VkDeviceMemory_T* %38, null
  %40 = or i1 %36, %39
  br i1 %40, label %41, label %73

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 3
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 1000001002
  br i1 %44, label %45, label %49

45:                                               ; preds = %41
  %46 = getelementptr inbounds %class.GrVkCaps, %class.GrVkCaps* %29, i64 0, i32 9
  %47 = load i8, i8* %46, align 1, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %73, label %49

49:                                               ; preds = %45, %41
  %50 = load i32, i32* %18, align 8
  %51 = icmp ugt i32 %50, -4
  br i1 %51, label %57, label %52

52:                                               ; preds = %49
  %53 = load i32, i32* %23, align 8
  %54 = icmp eq i32 %53, 0
  %55 = icmp eq i32 %50, %31
  %56 = and i1 %55, %54
  br i1 %56, label %57, label %73

57:                                               ; preds = %52, %49
  %58 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 11, i32 3
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %68, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %class.GrVkCaps, %class.GrVkCaps* %29, i64 0, i32 19
  %63 = load i8, i8* %62, align 1, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %73, label %65

65:                                               ; preds = %61
  %66 = load i64, i64* %21, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %75

68:                                               ; preds = %65, %57
  %69 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 5
  %70 = load i32, i32* %69, align 4
  %71 = and i32 %70, 3
  %72 = icmp eq i32 %71, 3
  br i1 %72, label %75, label %73

73:                                               ; preds = %68, %61, %52, %45, %35, %27
  %74 = getelementptr inbounds %class.sk_sp.699, %class.sk_sp.699* %0, i64 0, i32 0
  store %class.GrTexture* null, %class.GrTexture** %74, align 8
  br label %177

75:                                               ; preds = %68, %65
  %76 = load i32, i32* %15, align 8
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %78, label %103

78:                                               ; preds = %75
  %79 = load i64, i64* %21, align 8
  %80 = icmp eq i64 %79, 0
  %81 = or i1 %60, %80
  br i1 %81, label %82, label %105

82:                                               ; preds = %78
  %83 = load i32, i32* %14, align 8
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 4
  %86 = load i32, i32* %85, align 8
  br i1 %84, label %87, label %89

87:                                               ; preds = %82
  %88 = call zeroext i1 @_ZNK8GrVkCaps20isVkFormatTexturableE8VkFormat(%class.GrVkCaps* %29, i32 %86) #14
  br i1 %88, label %95, label %103

89:                                               ; preds = %82
  %90 = call dereferenceable(40) %"struct.GrVkCaps::FormatInfo"* @_ZNK8GrVkCaps13getFormatInfoE8VkFormat(%class.GrVkCaps* %29, i32 %86) #14
  %91 = getelementptr inbounds %"struct.GrVkCaps::FormatInfo", %"struct.GrVkCaps::FormatInfo"* %90, i64 0, i32 1
  %92 = load i16, i16* %91, align 2
  %93 = and i16 %92, 1
  %94 = icmp eq i16 %93, 0
  br i1 %94, label %103, label %95

95:                                               ; preds = %87, %89
  %96 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 5
  %97 = load i32, i32* %96, align 4
  %98 = and i32 %97, 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = load %class.GrVkCaps*, %class.GrVkCaps** %28, align 8
  %102 = load i32, i32* %15, align 8
  br label %105

103:                                              ; preds = %95, %89, %87, %75
  %104 = getelementptr inbounds %class.sk_sp.699, %class.sk_sp.699* %0, i64 0, i32 0
  store %class.GrTexture* null, %class.GrTexture** %104, align 8
  br label %177

105:                                              ; preds = %100, %78
  %106 = phi i32 [ %102, %100 ], [ 1, %78 ]
  %107 = phi %class.GrVkCaps* [ %101, %100 ], [ %29, %78 ]
  %108 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 4
  %109 = load i32, i32* %108, align 8
  %110 = call zeroext i1 @_ZNK8GrVkCaps18isFormatRenderableE8VkFormati(%class.GrVkCaps* %107, i32 %109, i32 %106) #14
  br i1 %110, label %111, label %118

111:                                              ; preds = %105
  %112 = icmp sgt i32 %3, 1
  br i1 %112, label %120, label %113

113:                                              ; preds = %111
  %114 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 5
  %115 = load i32, i32* %114, align 4
  %116 = and i32 %115, 16
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %120

118:                                              ; preds = %105, %113
  %119 = getelementptr inbounds %class.sk_sp.699, %class.sk_sp.699* %0, i64 0, i32 0
  store %class.GrTexture* null, %class.GrTexture** %119, align 8
  br label %177

120:                                              ; preds = %113, %111
  %121 = call zeroext i1 @_ZNK16GrBackendTexture11isProtectedEv(%class.GrBackendTexture* %2) #14
  br i1 %121, label %122, label %128

122:                                              ; preds = %120
  %123 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 20
  %124 = load i8, i8* %123, align 1, !range !2
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %126, label %128

126:                                              ; preds = %122
  %127 = getelementptr inbounds %class.sk_sp.699, %class.sk_sp.699* %0, i64 0, i32 0
  store %class.GrTexture* null, %class.GrTexture** %127, align 8
  br label %177

128:                                              ; preds = %120, %122
  %129 = load %class.GrVkCaps*, %class.GrVkCaps** %28, align 8
  %130 = load i32, i32* %108, align 8
  %131 = call i32 @_ZNK8GrVkCaps26getRenderTargetSampleCountEi8VkFormat(%class.GrVkCaps* %129, i32 %3, i32 %130) #14
  %132 = bitcast %class.sk_sp.621* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %132) #14
  %133 = getelementptr inbounds %class.sk_sp.621, %class.sk_sp.621* %8, i64 0, i32 0
  store %class.GrBackendSurfaceMutableStateImpl* inttoptr (i64 -6148914691236517206 to %class.GrBackendSurfaceMutableStateImpl*), %class.GrBackendSurfaceMutableStateImpl** %133, align 8
  call void @_ZNK16GrBackendTexture15getMutableStateEv(%class.sk_sp.621* nonnull sret %8, %class.GrBackendTexture* %2) #14
  %134 = bitcast %class.sk_sp.701* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %134) #14
  %135 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %2, i64 0, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %2, i64 0, i32 2
  %138 = load i32, i32* %137, align 8
  %139 = zext i32 %138 to i64
  %140 = shl nuw i64 %139, 32
  %141 = zext i32 %136 to i64
  %142 = or i64 %140, %141
  %143 = bitcast %class.sk_sp.621* %8 to i64*
  %144 = load i64, i64* %143, align 8
  store %class.GrBackendSurfaceMutableStateImpl* null, %class.GrBackendSurfaceMutableStateImpl** %133, align 8
  %145 = bitcast %class.sk_sp.621* %10 to i64*
  store i64 %144, i64* %145, align 8
  call void @_ZN23GrVkTextureRenderTarget30MakeWrappedTextureRenderTargetEP7GrVkGpu7SkISizei15GrWrapOwnership15GrWrapCacheableRK13GrVkImageInfo5sk_spI32GrBackendSurfaceMutableStateImplE(%class.sk_sp.701* nonnull sret %9, %class.GrVkGpu* %1, i64 %142, i32 %131, i32 %4, i1 zeroext %5, %struct.GrVkImageInfo* nonnull dereferenceable(144) %7, %class.sk_sp.621* nonnull %10) #14
  %146 = getelementptr inbounds %class.sk_sp.701, %class.sk_sp.701* %9, i64 0, i32 0
  %147 = bitcast %class.sk_sp.701* %9 to i64*
  %148 = load i64, i64* %147, align 8
  store %class.GrVkTextureRenderTarget* null, %class.GrVkTextureRenderTarget** %146, align 8
  %149 = bitcast %class.sk_sp.699* %0 to i64*
  store i64 %148, i64* %149, align 8
  %150 = getelementptr inbounds %class.sk_sp.621, %class.sk_sp.621* %10, i64 0, i32 0
  %151 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %150, align 8
  %152 = icmp eq %class.GrBackendSurfaceMutableStateImpl* %151, null
  br i1 %152, label %163, label %153

153:                                              ; preds = %128
  %154 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %151, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = atomicrmw add i32* %154, i32 -1 acq_rel
  %156 = icmp eq i32 %155, 1
  br i1 %156, label %157, label %163

157:                                              ; preds = %153
  %158 = bitcast %class.GrBackendSurfaceMutableStateImpl* %151 to %class.SkRefCntBase*
  %159 = bitcast %class.GrBackendSurfaceMutableStateImpl* %151 to void (%class.SkRefCntBase*)***
  %160 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %159, align 8
  %161 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %160, i64 2
  %162 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %161, align 8
  call void %162(%class.SkRefCntBase* nonnull %158) #14
  br label %163

163:                                              ; preds = %128, %153, %157
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134) #14
  %164 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %133, align 8
  %165 = icmp eq %class.GrBackendSurfaceMutableStateImpl* %164, null
  br i1 %165, label %176, label %166

166:                                              ; preds = %163
  %167 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %164, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = atomicrmw add i32* %167, i32 -1 acq_rel
  %169 = icmp eq i32 %168, 1
  br i1 %169, label %170, label %176

170:                                              ; preds = %166
  %171 = bitcast %class.GrBackendSurfaceMutableStateImpl* %164 to %class.SkRefCntBase*
  %172 = bitcast %class.GrBackendSurfaceMutableStateImpl* %164 to void (%class.SkRefCntBase*)***
  %173 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %172, align 8
  %174 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %173, i64 2
  %175 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %174, align 8
  call void %175(%class.SkRefCntBase* nonnull %171) #14
  br label %176

176:                                              ; preds = %163, %166, %170
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %132) #14
  br label %177

177:                                              ; preds = %118, %126, %176, %103, %73, %25
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %11) #14
  ret void
}

declare i32 @_ZNK8GrVkCaps26getRenderTargetSampleCountEi8VkFormat(%class.GrVkCaps*, i32, i32) local_unnamed_addr #2

declare void @_ZN23GrVkTextureRenderTarget30MakeWrappedTextureRenderTargetEP7GrVkGpu7SkISizei15GrWrapOwnership15GrWrapCacheableRK13GrVkImageInfo5sk_spI32GrBackendSurfaceMutableStateImplE(%class.sk_sp.701* sret, %class.GrVkGpu*, i64, i32, i32, i1 zeroext, %struct.GrVkImageInfo* dereferenceable(144), %class.sk_sp.621*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpu25onWrapBackendRenderTargetERK21GrBackendRenderTarget(%class.sk_sp.708* noalias nocapture sret, %class.GrVkGpu*, %class.GrBackendRenderTarget* dereferenceable(176)) unnamed_addr #0 align 2 {
  %4 = alloca %struct.GrVkImageInfo, align 8
  %5 = alloca %class.sk_sp.621, align 8
  %6 = alloca %class.sk_sp.709, align 8
  %7 = alloca %class.sk_sp.621, align 8
  %8 = bitcast %struct.GrVkImageInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %8) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 144, i1 false)
  %9 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 1, i32 5
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 1, i32 6
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 2
  %12 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 36, i1 false) #14
  %13 = bitcast i32* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #14
  store i32 1, i32* %12, align 8
  %14 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 7
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 8
  store i32 -1, i32* %15, align 8
  %16 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 9
  store i8 0, i8* %16, align 4
  %17 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 11, i32 0
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 11, i32 2
  %19 = bitcast i64* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 36, i1 false) #14
  %20 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 12
  store i32 0, i32* %20, align 8
  %21 = call zeroext i1 @_ZNK21GrBackendRenderTarget14getVkImageInfoEP13GrVkImageInfo(%class.GrBackendRenderTarget* %2, %struct.GrVkImageInfo* nonnull %4) #14
  br i1 %21, label %24, label %22

22:                                               ; preds = %3
  %23 = getelementptr inbounds %class.sk_sp.708, %class.sk_sp.708* %0, i64 0, i32 0
  store %class.GrRenderTarget* null, %class.GrRenderTarget** %23, align 8
  br label %134

24:                                               ; preds = %3
  %25 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 3, i32 0
  %26 = load %class.GrVkCaps*, %class.GrVkCaps** %25, align 8
  %27 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 8
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 0
  %30 = load %struct.VkImage_T*, %struct.VkImage_T** %29, align 8
  %31 = icmp eq %struct.VkImage_T* %30, null
  br i1 %31, label %64, label %32

32:                                               ; preds = %24
  %33 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 3
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 1000001002
  br i1 %35, label %36, label %40

36:                                               ; preds = %32
  %37 = getelementptr inbounds %class.GrVkCaps, %class.GrVkCaps* %26, i64 0, i32 9
  %38 = load i8, i8* %37, align 1, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %64, label %40

40:                                               ; preds = %36, %32
  %41 = load i32, i32* %15, align 8
  %42 = icmp ugt i32 %41, -4
  br i1 %42, label %48, label %43

43:                                               ; preds = %40
  %44 = load i32, i32* %20, align 8
  %45 = icmp eq i32 %44, 0
  %46 = icmp eq i32 %41, %28
  %47 = and i1 %46, %45
  br i1 %47, label %48, label %64

48:                                               ; preds = %43, %40
  %49 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 11, i32 3
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %59, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %class.GrVkCaps, %class.GrVkCaps* %26, i64 0, i32 19
  %54 = load i8, i8* %53, align 1, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %64, label %56

56:                                               ; preds = %52
  %57 = load i64, i64* %18, align 8
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %59, label %66

59:                                               ; preds = %56, %48
  %60 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 5
  %61 = load i32, i32* %60, align 4
  %62 = and i32 %61, 3
  %63 = icmp eq i32 %62, 3
  br i1 %63, label %66, label %64

64:                                               ; preds = %59, %52, %43, %36, %24
  %65 = getelementptr inbounds %class.sk_sp.708, %class.sk_sp.708* %0, i64 0, i32 0
  store %class.GrRenderTarget* null, %class.GrRenderTarget** %65, align 8
  br label %134

66:                                               ; preds = %59, %56
  %67 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 4
  %68 = load i32, i32* %67, align 8
  %69 = load i32, i32* %12, align 8
  %70 = call zeroext i1 @_ZNK8GrVkCaps18isFormatRenderableE8VkFormati(%class.GrVkCaps* %26, i32 %68, i32 %69) #14
  br i1 %70, label %71, label %76

71:                                               ; preds = %66
  %72 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %4, i64 0, i32 5
  %73 = load i32, i32* %72, align 4
  %74 = and i32 %73, 16
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %78

76:                                               ; preds = %66, %71
  %77 = getelementptr inbounds %class.sk_sp.708, %class.sk_sp.708* %0, i64 0, i32 0
  store %class.GrRenderTarget* null, %class.GrRenderTarget** %77, align 8
  br label %134

78:                                               ; preds = %71
  %79 = call zeroext i1 @_ZNK21GrBackendRenderTarget11isProtectedEv(%class.GrBackendRenderTarget* %2) #14
  br i1 %79, label %80, label %86

80:                                               ; preds = %78
  %81 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 20
  %82 = load i8, i8* %81, align 1, !range !2
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %80
  %85 = getelementptr inbounds %class.sk_sp.708, %class.sk_sp.708* %0, i64 0, i32 0
  store %class.GrRenderTarget* null, %class.GrRenderTarget** %85, align 8
  br label %134

86:                                               ; preds = %80, %78
  %87 = bitcast %class.sk_sp.621* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #14
  %88 = getelementptr inbounds %class.sk_sp.621, %class.sk_sp.621* %5, i64 0, i32 0
  store %class.GrBackendSurfaceMutableStateImpl* inttoptr (i64 -6148914691236517206 to %class.GrBackendSurfaceMutableStateImpl*), %class.GrBackendSurfaceMutableStateImpl** %88, align 8
  call void @_ZNK21GrBackendRenderTarget15getMutableStateEv(%class.sk_sp.621* nonnull sret %5, %class.GrBackendRenderTarget* %2) #14
  %89 = bitcast %class.sk_sp.709* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #14
  %90 = getelementptr inbounds %class.sk_sp.709, %class.sk_sp.709* %6, i64 0, i32 0
  store %class.GrVkRenderTarget* inttoptr (i64 -6148914691236517206 to %class.GrVkRenderTarget*), %class.GrVkRenderTarget** %90, align 8
  %91 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %2, i64 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %2, i64 0, i32 3
  %94 = load i32, i32* %93, align 8
  %95 = zext i32 %94 to i64
  %96 = shl nuw i64 %95, 32
  %97 = zext i32 %92 to i64
  %98 = or i64 %96, %97
  %99 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %2, i64 0, i32 4
  %100 = load i32, i32* %99, align 4
  %101 = bitcast %class.sk_sp.621* %5 to i64*
  %102 = load i64, i64* %101, align 8
  store %class.GrBackendSurfaceMutableStateImpl* null, %class.GrBackendSurfaceMutableStateImpl** %88, align 8
  %103 = bitcast %class.sk_sp.621* %7 to i64*
  store i64 %102, i64* %103, align 8
  call void @_ZN16GrVkRenderTarget23MakeWrappedRenderTargetEP7GrVkGpu7SkISizeiRK13GrVkImageInfo5sk_spI32GrBackendSurfaceMutableStateImplE(%class.sk_sp.709* nonnull sret %6, %class.GrVkGpu* %1, i64 %98, i32 %100, %struct.GrVkImageInfo* nonnull dereferenceable(144) %4, %class.sk_sp.621* nonnull %7) #14
  %104 = getelementptr inbounds %class.sk_sp.621, %class.sk_sp.621* %7, i64 0, i32 0
  %105 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %104, align 8
  %106 = icmp eq %class.GrBackendSurfaceMutableStateImpl* %105, null
  br i1 %106, label %117, label %107

107:                                              ; preds = %86
  %108 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %105, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = atomicrmw add i32* %108, i32 -1 acq_rel
  %110 = icmp eq i32 %109, 1
  br i1 %110, label %111, label %117

111:                                              ; preds = %107
  %112 = bitcast %class.GrBackendSurfaceMutableStateImpl* %105 to %class.SkRefCntBase*
  %113 = bitcast %class.GrBackendSurfaceMutableStateImpl* %105 to void (%class.SkRefCntBase*)***
  %114 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %113, align 8
  %115 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %114, i64 2
  %116 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %115, align 8
  call void %116(%class.SkRefCntBase* nonnull %112) #14
  br label %117

117:                                              ; preds = %111, %107, %86
  %118 = bitcast %class.sk_sp.709* %6 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %class.sk_sp.708* %0 to i64*
  store i64 %119, i64* %120, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #14
  %121 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %88, align 8
  %122 = icmp eq %class.GrBackendSurfaceMutableStateImpl* %121, null
  br i1 %122, label %133, label %123

123:                                              ; preds = %117
  %124 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %121, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = atomicrmw add i32* %124, i32 -1 acq_rel
  %126 = icmp eq i32 %125, 1
  br i1 %126, label %127, label %133

127:                                              ; preds = %123
  %128 = bitcast %class.GrBackendSurfaceMutableStateImpl* %121 to %class.SkRefCntBase*
  %129 = bitcast %class.GrBackendSurfaceMutableStateImpl* %121 to void (%class.SkRefCntBase*)***
  %130 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %129, align 8
  %131 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %130, i64 2
  %132 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %131, align 8
  call void %132(%class.SkRefCntBase* nonnull %128) #14
  br label %133

133:                                              ; preds = %117, %123, %127
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #14
  br label %134

134:                                              ; preds = %133, %84, %76, %64, %22
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %8) #14
  ret void
}

declare zeroext i1 @_ZNK21GrBackendRenderTarget14getVkImageInfoEP13GrVkImageInfo(%class.GrBackendRenderTarget*, %struct.GrVkImageInfo*) local_unnamed_addr #2

declare zeroext i1 @_ZNK21GrBackendRenderTarget11isProtectedEv(%class.GrBackendRenderTarget*) local_unnamed_addr #2

declare void @_ZNK21GrBackendRenderTarget15getMutableStateEv(%class.sk_sp.621* sret, %class.GrBackendRenderTarget*) local_unnamed_addr #2

declare void @_ZN16GrVkRenderTarget23MakeWrappedRenderTargetEP7GrVkGpu7SkISizeiRK13GrVkImageInfo5sk_spI32GrBackendSurfaceMutableStateImplE(%class.sk_sp.709* sret, %class.GrVkGpu*, i64, i32, %struct.GrVkImageInfo* dereferenceable(144), %class.sk_sp.621*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpu37onWrapVulkanSecondaryCBAsRenderTargetERK11SkImageInfoRK16GrVkDrawableInfo(%class.sk_sp.708* noalias nocapture sret, %class.GrVkGpu*, %struct.SkImageInfo* nocapture readonly dereferenceable(24), %struct.GrVkDrawableInfo* dereferenceable(48)) unnamed_addr #0 align 2 {
  %5 = alloca %struct.GrVkYcbcrConversionInfo, align 8
  %6 = alloca %class.GrBackendFormat, align 8
  %7 = alloca %class.sk_sp.709, align 8
  %8 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 0, i32 2, i32 0
  %9 = load %class.GrCaps*, %class.GrCaps** %8, align 8
  %10 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %9, i64 0, i32 11
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp sgt i32 %13, %11
  br i1 %14, label %19, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 1, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %17, %11
  br i1 %18, label %19, label %21

19:                                               ; preds = %15, %4
  %20 = getelementptr inbounds %class.sk_sp.708, %class.sk_sp.708* %0, i64 0, i32 0
  store %class.GrRenderTarget* null, %class.GrRenderTarget** %20, align 8
  br label %48

21:                                               ; preds = %15
  %22 = bitcast %class.GrBackendFormat* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %22) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 72, i1 false)
  %23 = getelementptr inbounds %struct.GrVkDrawableInfo, %struct.GrVkDrawableInfo* %3, i64 0, i32 3
  %24 = load i32, i32* %23, align 8
  %25 = bitcast %struct.GrVkYcbcrConversionInfo* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %25) #14, !noalias !18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 48, i1 false) #14, !noalias !18
  call void @_ZN15GrBackendFormatC1E8VkFormatRK23GrVkYcbcrConversionInfo(%class.GrBackendFormat* nonnull %6, i32 %24, %struct.GrVkYcbcrConversionInfo* nonnull dereferenceable(48) %5) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %25) #14, !noalias !18
  %26 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %6, i64 0, i32 1
  %27 = load i8, i8* %26, align 4, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %21
  %30 = getelementptr inbounds %class.sk_sp.708, %class.sk_sp.708* %0, i64 0, i32 0
  store %class.GrRenderTarget* null, %class.GrRenderTarget** %30, align 8
  br label %47

31:                                               ; preds = %21
  %32 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 3, i32 0
  %33 = load %class.GrVkCaps*, %class.GrVkCaps** %32, align 8
  %34 = load i32, i32* %23, align 8
  %35 = call i32 @_ZNK8GrVkCaps26getRenderTargetSampleCountEi8VkFormat(%class.GrVkCaps* %33, i32 1, i32 %34) #14
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %31
  %38 = getelementptr inbounds %class.sk_sp.708, %class.sk_sp.708* %0, i64 0, i32 0
  store %class.GrRenderTarget* null, %class.GrRenderTarget** %38, align 8
  br label %47

39:                                               ; preds = %31
  %40 = bitcast %class.sk_sp.709* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #14
  %41 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %2, i64 0, i32 1
  %42 = bitcast %struct.SkISize* %41 to i64*
  %43 = load i64, i64* %42, align 8
  call void @_ZN16GrVkRenderTarget27MakeSecondaryCBRenderTargetEP7GrVkGpu7SkISizeRK16GrVkDrawableInfo(%class.sk_sp.709* nonnull sret %7, %class.GrVkGpu* %1, i64 %43, %struct.GrVkDrawableInfo* dereferenceable(48) %3) #14
  %44 = bitcast %class.sk_sp.709* %7 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %class.sk_sp.708* %0 to i64*
  store i64 %45, i64* %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #14
  br label %47

47:                                               ; preds = %37, %39, %29
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %22) #14
  br label %48

48:                                               ; preds = %47, %19
  ret void
}

declare void @_ZN16GrVkRenderTarget27MakeSecondaryCBRenderTargetEP7GrVkGpu7SkISizeRK16GrVkDrawableInfo(%class.sk_sp.709* sret, %class.GrVkGpu*, i64, %struct.GrVkDrawableInfo* dereferenceable(48)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7GrVkGpu19loadMSAAFromResolveEP17GrVkCommandBufferRK14GrVkRenderPassP12GrAttachmentP14GrVkAttachmentRK7SkIRect(%class.GrVkGpu*, %class.GrVkCommandBuffer*, %class.GrVkRenderPass* dereferenceable(120), %class.GrAttachment*, %class.GrVkAttachment*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 11
  %8 = tail call zeroext i1 @_ZN19GrVkMSAALoadManager19loadMSAAFromResolveEP7GrVkGpuP17GrVkCommandBufferRK14GrVkRenderPassP12GrAttachmentP14GrVkAttachmentRK7SkIRect(%class.GrVkMSAALoadManager* %7, %class.GrVkGpu* %0, %class.GrVkCommandBuffer* %1, %class.GrVkRenderPass* dereferenceable(120) %2, %class.GrAttachment* %3, %class.GrVkAttachment* %4, %struct.SkIRect* dereferenceable(16) %5) #14
  ret i1 %8
}

declare zeroext i1 @_ZN19GrVkMSAALoadManager19loadMSAAFromResolveEP7GrVkGpuP17GrVkCommandBufferRK14GrVkRenderPassP12GrAttachmentP14GrVkAttachmentRK7SkIRect(%class.GrVkMSAALoadManager*, %class.GrVkGpu*, %class.GrVkCommandBuffer*, %class.GrVkRenderPass* dereferenceable(120), %class.GrAttachment*, %class.GrVkAttachment*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7GrVkGpu24onRegenerateMipMapLevelsEP9GrTexture(%class.GrVkGpu*, %class.GrTexture* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %struct.VkImageBlit, align 4
  %4 = alloca %struct.VkImageMemoryBarrier, align 8
  %5 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 13
  %6 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %5, align 8
  %7 = icmp eq %class.GrVkPrimaryCommandBuffer* %6, null
  br i1 %7, label %138, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.GrTexture, %class.GrTexture* %1, i64 0, i32 5
  %10 = bitcast %class.GrSurface* %9 to %class.GrVkAttachment**
  %11 = load %class.GrVkAttachment*, %class.GrVkAttachment** %10, align 8
  %12 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %11, i64 0, i32 1
  %13 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %11, i64 0, i32 1, i32 1, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %17

16:                                               ; preds = %8
  tail call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 1397, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.7, i64 0, i64 0)) #14
  br label %138

17:                                               ; preds = %8
  %18 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 3, i32 0
  %19 = load %class.GrVkCaps*, %class.GrVkCaps** %18, align 8
  %20 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %11, i64 0, i32 1, i32 1, i32 4
  %21 = load i32, i32* %20, align 8
  %22 = tail call dereferenceable(40) %"struct.GrVkCaps::FormatInfo"* @_ZNK8GrVkCaps13getFormatInfoE8VkFormat(%class.GrVkCaps* %19, i32 %21) #14
  %23 = getelementptr inbounds %"struct.GrVkCaps::FormatInfo", %"struct.GrVkCaps::FormatInfo"* %22, i64 0, i32 0
  %24 = load i16, i16* %23, align 2
  %25 = and i16 %24, 8
  %26 = icmp eq i16 %25, 0
  br i1 %26, label %138, label %27

27:                                               ; preds = %17
  %28 = load i32, i32* %20, align 8
  %29 = tail call dereferenceable(40) %"struct.GrVkCaps::FormatInfo"* @_ZNK8GrVkCaps13getFormatInfoE8VkFormat(%class.GrVkCaps* %19, i32 %28) #14
  %30 = getelementptr inbounds %"struct.GrVkCaps::FormatInfo", %"struct.GrVkCaps::FormatInfo"* %29, i64 0, i32 0
  %31 = load i16, i16* %30, align 2
  %32 = and i16 %31, 4
  %33 = icmp eq i16 %32, 0
  br i1 %33, label %138, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %class.GrVkCaps, %class.GrVkCaps* %19, i64 0, i32 0, i32 3
  %36 = bitcast i48* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %37, 2
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %138, label %40

40:                                               ; preds = %34
  %41 = bitcast %class.GrTexture* %1 to i8**
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr i8, i8* %42, i64 -24
  %44 = bitcast i8* %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %class.GrTexture* %1 to i8*
  %47 = getelementptr inbounds i8, i8* %46, i64 %45
  %48 = getelementptr inbounds i8, i8* %47, i64 152
  %49 = bitcast i8* %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds i8, i8* %47, i64 156
  %52 = bitcast i8* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = bitcast %struct.VkImageBlit* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %54) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %54, i8 0, i64 80, i1 false)
  %55 = load i64, i64* %44, align 8
  %56 = getelementptr inbounds i8, i8* %46, i64 %55
  %57 = getelementptr inbounds i8, i8* %56, i64 152
  %58 = bitcast i8* %57 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 156
  %61 = bitcast i8* %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = tail call i32 @_ZN8SkMipmap17ComputeLevelCountEii(i32 %59, i32 %62) #14
  %64 = add i32 %63, 1
  tail call void @_ZN9GrVkImage27setImageLayoutAndQueueIndexEPK7GrVkGpu13VkImageLayoutjjbj(%class.GrVkImage* %12, %class.GrVkGpu* %0, i32 7, i32 4096, i32 4096, i1 zeroext false, i32 -1) #14
  %65 = bitcast %struct.VkImageMemoryBarrier* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %65) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 72, i1 false)
  %66 = getelementptr inbounds %struct.VkImageMemoryBarrier, %struct.VkImageMemoryBarrier* %4, i64 0, i32 0
  store i32 45, i32* %66, align 8
  %67 = getelementptr inbounds %struct.VkImageMemoryBarrier, %struct.VkImageMemoryBarrier* %4, i64 0, i32 1
  store i8* null, i8** %67, align 8
  %68 = getelementptr inbounds %struct.VkImageMemoryBarrier, %struct.VkImageMemoryBarrier* %4, i64 0, i32 2
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 4096, i32 2048, i32 7, i32 6>, <4 x i32>* %69, align 8
  %70 = getelementptr inbounds %struct.VkImageMemoryBarrier, %struct.VkImageMemoryBarrier* %4, i64 0, i32 6
  store i32 -1, i32* %70, align 8
  %71 = getelementptr inbounds %struct.VkImageMemoryBarrier, %struct.VkImageMemoryBarrier* %4, i64 0, i32 7
  store i32 -1, i32* %71, align 4
  %72 = getelementptr inbounds %struct.VkImageMemoryBarrier, %struct.VkImageMemoryBarrier* %4, i64 0, i32 8
  %73 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %11, i64 0, i32 1, i32 1, i32 0
  %74 = bitcast %struct.VkImage_T** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %struct.VkImage_T** %72 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %struct.VkImageMemoryBarrier, %struct.VkImageMemoryBarrier* %4, i64 0, i32 9, i32 0
  %78 = getelementptr inbounds %struct.VkImageMemoryBarrier, %struct.VkImageMemoryBarrier* %4, i64 0, i32 9, i32 1
  %79 = bitcast i32* %77 to <4 x i32>*
  store <4 x i32> <i32 1, i32 0, i32 1, i32 0>, <4 x i32>* %79, align 8
  %80 = getelementptr inbounds %struct.VkImageMemoryBarrier, %struct.VkImageMemoryBarrier* %4, i64 0, i32 9, i32 4
  store i32 1, i32* %80, align 8
  %81 = icmp ugt i32 %64, 1
  br i1 %81, label %82, label %137

82:                                               ; preds = %40
  %83 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %11, i64 0, i32 1, i32 5
  %84 = bitcast %"class.GrVkImage::Resource"** %83 to %class.GrManagedResource**
  %85 = getelementptr inbounds %struct.VkImageBlit, %struct.VkImageBlit* %3, i64 0, i32 0, i32 0
  %86 = getelementptr inbounds %struct.VkImageBlit, %struct.VkImageBlit* %3, i64 0, i32 0, i32 1
  %87 = getelementptr inbounds %struct.VkImageBlit, %struct.VkImageBlit* %3, i64 0, i32 0, i32 2
  %88 = getelementptr inbounds %struct.VkImageBlit, %struct.VkImageBlit* %3, i64 0, i32 1, i64 0, i32 2
  %89 = getelementptr inbounds %struct.VkImageBlit, %struct.VkImageBlit* %3, i64 0, i32 1, i64 1, i32 0
  %90 = getelementptr inbounds %struct.VkImageBlit, %struct.VkImageBlit* %3, i64 0, i32 1, i64 1, i32 1
  %91 = getelementptr inbounds %struct.VkImageBlit, %struct.VkImageBlit* %3, i64 0, i32 1, i64 1, i32 2
  %92 = getelementptr inbounds %struct.VkImageBlit, %struct.VkImageBlit* %3, i64 0, i32 2, i32 0
  %93 = getelementptr inbounds %struct.VkImageBlit, %struct.VkImageBlit* %3, i64 0, i32 2, i32 1
  %94 = getelementptr inbounds %struct.VkImageBlit, %struct.VkImageBlit* %3, i64 0, i32 2, i32 2
  %95 = getelementptr inbounds %struct.VkImageBlit, %struct.VkImageBlit* %3, i64 0, i32 3, i64 0, i32 2
  %96 = getelementptr inbounds %struct.VkImageBlit, %struct.VkImageBlit* %3, i64 0, i32 3, i64 1, i32 0
  %97 = getelementptr inbounds %struct.VkImageBlit, %struct.VkImageBlit* %3, i64 0, i32 3, i64 1, i32 1
  %98 = getelementptr inbounds %struct.VkImageBlit, %struct.VkImageBlit* %3, i64 0, i32 3, i64 1, i32 2
  %99 = bitcast i32* %87 to <4 x i32>*
  %100 = bitcast i32* %94 to <4 x i32>*
  br label %101

101:                                              ; preds = %118, %82
  %102 = phi i32 [ %50, %82 ], [ %107, %118 ]
  %103 = phi i32 [ %53, %82 ], [ %110, %118 ]
  %104 = phi i32 [ 1, %82 ], [ %122, %118 ]
  %105 = sdiv i32 %102, 2
  %106 = icmp sgt i32 %105, 1
  %107 = select i1 %106, i32 %105, i32 1
  %108 = sdiv i32 %103, 2
  %109 = icmp sgt i32 %108, 1
  %110 = select i1 %109, i32 %108, i32 1
  %111 = add i32 %104, -1
  store i32 %111, i32* %78, align 4
  %112 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %5, align 8
  %113 = icmp eq %class.GrVkPrimaryCommandBuffer* %112, null
  br i1 %113, label %118, label %114

114:                                              ; preds = %101
  %115 = load %class.GrManagedResource*, %class.GrManagedResource** %84, align 8
  %116 = bitcast %class.GrVkPrimaryCommandBuffer* %112 to %class.GrVkCommandBuffer*
  call void @_ZN17GrVkCommandBuffer15pipelineBarrierEPK7GrVkGpuPK17GrManagedResourcejjbNS_11BarrierTypeEPv(%class.GrVkCommandBuffer* nonnull %116, %class.GrVkGpu* %0, %class.GrManagedResource* %115, i32 4096, i32 4096, i1 zeroext false, i32 1, i8* nonnull %65) #14
  %117 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %5, align 8
  br label %118

118:                                              ; preds = %101, %114
  %119 = phi %class.GrVkPrimaryCommandBuffer* [ null, %101 ], [ %117, %114 ]
  store i32 1, i32* %85, align 4
  store i32 %111, i32* %86, align 4
  store <4 x i32> <i32 0, i32 1, i32 0, i32 0>, <4 x i32>* %99, align 4
  store i32 0, i32* %88, align 4
  store i32 %102, i32* %89, align 4
  store i32 %103, i32* %90, align 4
  store i32 1, i32* %91, align 4
  store i32 1, i32* %92, align 4
  store i32 %104, i32* %93, align 4
  store <4 x i32> <i32 0, i32 1, i32 0, i32 0>, <4 x i32>* %100, align 4
  store i32 0, i32* %95, align 4
  store i32 %107, i32* %96, align 4
  store i32 %110, i32* %97, align 4
  store i32 1, i32* %98, align 4
  %120 = load %class.GrManagedResource*, %class.GrManagedResource** %84, align 8
  %121 = load %struct.VkImage_T*, %struct.VkImage_T** %73, align 8
  call void @_ZN24GrVkPrimaryCommandBuffer9blitImageEPK7GrVkGpuPK17GrManagedResourceP9VkImage_T13VkImageLayoutS5_S7_S8_jPK11VkImageBlit8VkFilter(%class.GrVkPrimaryCommandBuffer* %119, %class.GrVkGpu* %0, %class.GrManagedResource* %120, %struct.VkImage_T* %121, i32 6, %class.GrManagedResource* %120, %struct.VkImage_T* %121, i32 7, i32 1, %struct.VkImageBlit* nonnull %3, i32 1) #14
  %122 = add nuw i32 %104, 1
  %123 = icmp eq i32 %122, %64
  br i1 %123, label %124, label %101

124:                                              ; preds = %118
  br i1 %81, label %125, label %137

125:                                              ; preds = %124
  store i32 %63, i32* %78, align 4
  %126 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %5, align 8
  %127 = icmp eq %class.GrVkPrimaryCommandBuffer* %126, null
  br i1 %127, label %133, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %11, i64 0, i32 1, i32 5
  %130 = bitcast %"class.GrVkImage::Resource"** %129 to %class.GrManagedResource**
  %131 = load %class.GrManagedResource*, %class.GrManagedResource** %130, align 8
  %132 = bitcast %class.GrVkPrimaryCommandBuffer* %126 to %class.GrVkCommandBuffer*
  call void @_ZN17GrVkCommandBuffer15pipelineBarrierEPK7GrVkGpuPK17GrManagedResourcejjbNS_11BarrierTypeEPv(%class.GrVkCommandBuffer* nonnull %132, %class.GrVkGpu* %0, %class.GrManagedResource* %131, i32 4096, i32 4096, i1 zeroext false, i32 1, i8* nonnull %65) #14
  br label %133

133:                                              ; preds = %125, %128
  %134 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %11, i64 0, i32 1, i32 3, i32 0
  %135 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %134, align 8
  %136 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %135, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 6, i32* %136 seq_cst, align 4
  br label %137

137:                                              ; preds = %40, %133, %124
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %65) #14
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %54) #14
  br label %138

138:                                              ; preds = %34, %27, %17, %16, %137, %2
  %139 = phi i1 [ false, %2 ], [ false, %16 ], [ true, %137 ], [ false, %34 ], [ false, %27 ], [ false, %17 ]
  ret i1 %139
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7GrVkGpu21addImageMemoryBarrierEPK17GrManagedResourcejjbP20VkImageMemoryBarrier(%class.GrVkGpu*, %class.GrManagedResource*, i32, i32, i1 zeroext, %struct.VkImageMemoryBarrier*) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 13
  %8 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %7, align 8
  %9 = icmp eq %class.GrVkPrimaryCommandBuffer* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %6
  %11 = bitcast %class.GrVkPrimaryCommandBuffer* %8 to %class.GrVkCommandBuffer*
  %12 = bitcast %struct.VkImageMemoryBarrier* %5 to i8*
  tail call void @_ZN17GrVkCommandBuffer15pipelineBarrierEPK7GrVkGpuPK17GrManagedResourcejjbNS_11BarrierTypeEPv(%class.GrVkCommandBuffer* nonnull %11, %class.GrVkGpu* %0, %class.GrManagedResource* %1, i32 %2, i32 %3, i1 zeroext %4, i32 1, i8* %12) #14
  br label %13

13:                                               ; preds = %6, %10
  ret void
}

declare void @_ZN24GrVkPrimaryCommandBuffer9blitImageEPK7GrVkGpuPK17GrManagedResourceP9VkImage_T13VkImageLayoutS5_S7_S8_jPK11VkImageBlit8VkFilter(%class.GrVkPrimaryCommandBuffer*, %class.GrVkGpu*, %class.GrManagedResource*, %struct.VkImage_T*, i32, %class.GrManagedResource*, %struct.VkImage_T*, i32, i32, %struct.VkImageBlit*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpu21makeStencilAttachmentERK15GrBackendFormat7SkISizei(%class.sk_sp.618* noalias nocapture sret, %class.GrVkGpu*, %class.GrBackendFormat* nocapture readnone dereferenceable(72), i64, i32) unnamed_addr #0 align 2 {
  %6 = alloca %class.sk_sp.620, align 8
  %7 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 3, i32 0
  %8 = load %class.GrVkCaps*, %class.GrVkCaps** %7, align 8
  %9 = getelementptr inbounds %class.GrVkCaps, %class.GrVkCaps* %8, i64 0, i32 4
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %class.sk_sp.620* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #14
  call void @_ZN14GrVkAttachment11MakeStencilEP7GrVkGpu7SkISizei8VkFormat(%class.sk_sp.620* nonnull sret %6, %class.GrVkGpu* %1, i64 %3, i32 %4, i32 %10) #14
  %12 = bitcast %class.sk_sp.620* %6 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %class.sk_sp.618* %0 to i64*
  store i64 %13, i64* %14, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #14
  ret void
}

declare void @_ZN14GrVkAttachment11MakeStencilEP7GrVkGpu7SkISizei8VkFormat(%class.sk_sp.620* sret, %class.GrVkGpu*, i64, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpu18makeMSAAAttachmentE7SkISizeRK15GrBackendFormati11GrProtected(%class.sk_sp.618* noalias nocapture sret, %class.GrVkGpu*, i64, %class.GrBackendFormat* dereferenceable(72), i32, i1 zeroext) unnamed_addr #0 align 2 {
  %7 = alloca i32, align 4
  %8 = alloca %class.sk_sp.620, align 8
  %9 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #14
  store i32 -1431655766, i32* %7, align 4
  %10 = call zeroext i1 @_ZNK15GrBackendFormat10asVkFormatEP8VkFormat(%class.GrBackendFormat* %3, i32* nonnull %7) #14
  %11 = bitcast %class.sk_sp.620* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #14
  %12 = load i32, i32* %7, align 4
  call void @_ZN14GrVkAttachment8MakeMSAAEP7GrVkGpu7SkISizei8VkFormat11GrProtected(%class.sk_sp.620* nonnull sret %8, %class.GrVkGpu* %1, i64 %2, i32 %4, i32 %12, i1 zeroext %5) #14
  %13 = bitcast %class.sk_sp.620* %8 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %class.sk_sp.618* %0 to i64*
  store i64 %14, i64* %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #14
  ret void
}

declare void @_ZN14GrVkAttachment8MakeMSAAEP7GrVkGpu7SkISizei8VkFormat11GrProtected(%class.sk_sp.620* sret, %class.GrVkGpu*, i64, i32, i32, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z13copy_src_dataPc8VkFormatRK8SkTArrayImLb0EEPK8GrPixmapi(i8* nocapture, i32, %class.SkTArray.697* nocapture readonly dereferenceable(16), %class.GrPixmap* nocapture readonly, i32) local_unnamed_addr #0 {
  %6 = tail call fastcc i64 @_ZL23GrVkFormatBytesPerBlock8VkFormat(i32 %1)
  %7 = icmp sgt i32 %4, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %5
  %9 = getelementptr inbounds %class.SkTArray.697, %class.SkTArray.697* %2, i64 0, i32 0
  %10 = zext i32 %4 to i64
  br label %12

11:                                               ; preds = %66, %5
  ret i1 true

12:                                               ; preds = %66, %8
  %13 = phi i64 [ 0, %8 ], [ %67, %66 ]
  %14 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %3, i64 %13, i32 0, i32 2, i32 1, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = sext i32 %15 to i64
  %17 = mul i64 %6, %16
  %18 = load i64*, i64** %9, align 8
  %19 = getelementptr inbounds i64, i64* %18, i64 %13
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds i8, i8* %0, i64 %20
  %22 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %3, i64 %13, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %3, i64 %13, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %class.GrPixmap, %class.GrPixmap* %3, i64 %13, i32 0, i32 2, i32 1, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i64 %17, %25
  br i1 %28, label %37, label %29

29:                                               ; preds = %12
  %30 = icmp sgt i32 %27, 0
  br i1 %30, label %31, label %66

31:                                               ; preds = %29
  %32 = add i32 %27, -1
  %33 = and i32 %27, 3
  %34 = icmp ult i32 %32, 3
  br i1 %34, label %54, label %35

35:                                               ; preds = %31
  %36 = sub i32 %27, %33
  br label %40

37:                                               ; preds = %12
  %38 = sext i32 %27 to i64
  %39 = mul i64 %17, %38
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %21, i8* align 1 %23, i64 %39, i1 false) #14
  br label %66

40:                                               ; preds = %40, %35
  %41 = phi i8* [ %21, %35 ], [ %50, %40 ]
  %42 = phi i8* [ %23, %35 ], [ %51, %40 ]
  %43 = phi i32 [ %36, %35 ], [ %52, %40 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %41, i8* align 1 %42, i64 %17, i1 false) #14
  %44 = getelementptr inbounds i8, i8* %41, i64 %17
  %45 = getelementptr inbounds i8, i8* %42, i64 %25
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %45, i64 %17, i1 false) #14
  %46 = getelementptr inbounds i8, i8* %44, i64 %17
  %47 = getelementptr inbounds i8, i8* %45, i64 %25
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %46, i8* align 1 %47, i64 %17, i1 false) #14
  %48 = getelementptr inbounds i8, i8* %46, i64 %17
  %49 = getelementptr inbounds i8, i8* %47, i64 %25
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %48, i8* align 1 %49, i64 %17, i1 false) #14
  %50 = getelementptr inbounds i8, i8* %48, i64 %17
  %51 = getelementptr inbounds i8, i8* %49, i64 %25
  %52 = add i32 %43, -4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %40

54:                                               ; preds = %40, %31
  %55 = phi i8* [ %21, %31 ], [ %50, %40 ]
  %56 = phi i8* [ %23, %31 ], [ %51, %40 ]
  %57 = icmp eq i32 %33, 0
  br i1 %57, label %66, label %58

58:                                               ; preds = %54, %58
  %59 = phi i8* [ %62, %58 ], [ %55, %54 ]
  %60 = phi i8* [ %63, %58 ], [ %56, %54 ]
  %61 = phi i32 [ %64, %58 ], [ %33, %54 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %60, i64 %17, i1 false) #14
  %62 = getelementptr inbounds i8, i8* %59, i64 %17
  %63 = getelementptr inbounds i8, i8* %60, i64 %25
  %64 = add i32 %61, -1
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %58, !llvm.loop !21

66:                                               ; preds = %54, %58, %29, %37
  %67 = add nuw nsw i64 %13, 1
  %68 = icmp eq i64 %67, %10
  br i1 %68, label %11, label %12
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal fastcc i64 @_ZL23GrVkFormatBytesPerBlock8VkFormat(i32) unnamed_addr #8 {
  switch i32 %0, label %19 [
    i32 37, label %20
    i32 9, label %2
    i32 44, label %20
    i32 4, label %3
    i32 97, label %4
    i32 76, label %5
    i32 23, label %6
    i32 16, label %7
    i32 64, label %20
    i32 58, label %20
    i32 3, label %8
    i32 2, label %9
    i32 43, label %20
    i32 147, label %10
    i32 131, label %11
    i32 133, label %12
    i32 70, label %13
    i32 77, label %20
    i32 91, label %14
    i32 83, label %20
    i32 1000156002, label %15
    i32 1000156003, label %16
    i32 127, label %17
    i32 129, label %20
    i32 130, label %18
  ]

2:                                                ; preds = %1
  br label %20

3:                                                ; preds = %1
  br label %20

4:                                                ; preds = %1
  br label %20

5:                                                ; preds = %1
  br label %20

6:                                                ; preds = %1
  br label %20

7:                                                ; preds = %1
  br label %20

8:                                                ; preds = %1
  br label %20

9:                                                ; preds = %1
  br label %20

10:                                               ; preds = %1
  br label %20

11:                                               ; preds = %1
  br label %20

12:                                               ; preds = %1
  br label %20

13:                                               ; preds = %1
  br label %20

14:                                               ; preds = %1
  br label %20

15:                                               ; preds = %1
  br label %20

16:                                               ; preds = %1
  br label %20

17:                                               ; preds = %1
  br label %20

18:                                               ; preds = %1
  br label %20

19:                                               ; preds = %1
  br label %20

20:                                               ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5, %4, %3, %2
  %21 = phi i64 [ 0, %19 ], [ 8, %18 ], [ 1, %17 ], [ 3, %16 ], [ 3, %15 ], [ 8, %14 ], [ 2, %13 ], [ 8, %12 ], [ 8, %11 ], [ 8, %10 ], [ 2, %9 ], [ 2, %8 ], [ 2, %7 ], [ 3, %6 ], [ 2, %5 ], [ 8, %4 ], [ 2, %3 ], [ 1, %2 ], [ 4, %1 ], [ 4, %1 ], [ 4, %1 ], [ 4, %1 ], [ 4, %1 ], [ 4, %1 ], [ 4, %1 ], [ 4, %1 ]
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7GrVkGpu30createVkImageForBackendSurfaceE8VkFormat7SkISizei12GrTexturable12GrRenderable11GrMipmappedP13GrVkImageInfo11GrProtected(%class.GrVkGpu*, i32, i64, i32, i1 zeroext, i1 zeroext, i1 zeroext, %struct.GrVkImageInfo*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %10 = alloca %"struct.GrVkImage::ImageDesc", align 4
  %11 = trunc i64 %2 to i32
  %12 = lshr i64 %2, 32
  %13 = trunc i64 %12 to i32
  %14 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 20
  %15 = load i8, i8* %14, align 1, !range !2
  %16 = icmp ne i8 %15, 0
  %17 = xor i1 %16, %8
  br i1 %17, label %60, label %18

18:                                               ; preds = %9
  br i1 %4, label %19, label %23

19:                                               ; preds = %18
  %20 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 3, i32 0
  %21 = load %class.GrVkCaps*, %class.GrVkCaps** %20, align 8
  %22 = tail call zeroext i1 @_ZNK8GrVkCaps20isVkFormatTexturableE8VkFormat(%class.GrVkCaps* %21, i32 %1) #14
  br i1 %22, label %23, label %60

23:                                               ; preds = %19, %18
  %24 = icmp sgt i32 %3, 1
  %25 = xor i1 %5, true
  %26 = or i1 %25, %4
  %27 = and i1 %24, %26
  br i1 %27, label %60, label %28

28:                                               ; preds = %23
  br i1 %5, label %29, label %34

29:                                               ; preds = %28
  %30 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 3, i32 0
  %31 = load %class.GrVkCaps*, %class.GrVkCaps** %30, align 8
  %32 = tail call i32 @_ZNK8GrVkCaps26getRenderTargetSampleCountEi8VkFormat(%class.GrVkCaps* %31, i32 %3, i32 %1) #14
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %60, label %34

34:                                               ; preds = %29, %28
  %35 = phi i32 [ %32, %29 ], [ %3, %28 ]
  br i1 %6, label %36, label %39

36:                                               ; preds = %34
  %37 = tail call i32 @_ZN8SkMipmap17ComputeLevelCountEii(i32 %11, i32 %13) #14
  %38 = add nsw i32 %37, 1
  br label %39

39:                                               ; preds = %36, %34
  %40 = phi i32 [ %38, %36 ], [ 1, %34 ]
  %41 = select i1 %4, i32 7, i32 3
  %42 = or i32 %41, 144
  %43 = select i1 %5, i32 %42, i32 %41
  %44 = bitcast %"struct.GrVkImage::ImageDesc"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %44) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %44, i8 -86, i64 40, i1 false)
  %45 = getelementptr inbounds %"struct.GrVkImage::ImageDesc", %"struct.GrVkImage::ImageDesc"* %10, i64 0, i32 0
  %46 = getelementptr inbounds %"struct.GrVkImage::ImageDesc", %"struct.GrVkImage::ImageDesc"* %10, i64 0, i32 1
  %47 = getelementptr inbounds %"struct.GrVkImage::ImageDesc", %"struct.GrVkImage::ImageDesc"* %10, i64 0, i32 2
  %48 = getelementptr inbounds %"struct.GrVkImage::ImageDesc", %"struct.GrVkImage::ImageDesc"* %10, i64 0, i32 3
  %49 = getelementptr inbounds %"struct.GrVkImage::ImageDesc", %"struct.GrVkImage::ImageDesc"* %10, i64 0, i32 4
  %50 = getelementptr inbounds %"struct.GrVkImage::ImageDesc", %"struct.GrVkImage::ImageDesc"* %10, i64 0, i32 5
  %51 = getelementptr inbounds %"struct.GrVkImage::ImageDesc", %"struct.GrVkImage::ImageDesc"* %10, i64 0, i32 6
  %52 = getelementptr inbounds %"struct.GrVkImage::ImageDesc", %"struct.GrVkImage::ImageDesc"* %10, i64 0, i32 7
  %53 = getelementptr inbounds %"struct.GrVkImage::ImageDesc", %"struct.GrVkImage::ImageDesc"* %10, i64 0, i32 8
  %54 = getelementptr inbounds %"struct.GrVkImage::ImageDesc", %"struct.GrVkImage::ImageDesc"* %10, i64 0, i32 9
  store i32 1, i32* %45, align 4
  store i32 %1, i32* %46, align 4
  store i32 %11, i32* %47, align 4
  store i32 %13, i32* %48, align 4
  store i32 %40, i32* %49, align 4
  store i32 %35, i32* %50, align 4
  store i32 0, i32* %51, align 4
  store i32 %43, i32* %52, align 4
  store i32 1, i32* %53, align 4
  %55 = load i8, i8* %14, align 1, !range !2
  store i8 %55, i8* %54, align 4
  %56 = call zeroext i1 @_ZN9GrVkImage13InitImageInfoEP7GrVkGpuRKNS_9ImageDescEP13GrVkImageInfo(%class.GrVkGpu* %0, %"struct.GrVkImage::ImageDesc"* nonnull dereferenceable(40) %10, %struct.GrVkImageInfo* %7) #14
  br i1 %56, label %58, label %57

57:                                               ; preds = %39
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 1588, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0)) #14
  br label %58

58:                                               ; preds = %39, %57
  %59 = phi i1 [ false, %57 ], [ true, %39 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %44) #14
  br label %60

60:                                               ; preds = %23, %29, %19, %9, %58
  %61 = phi i1 [ %59, %58 ], [ false, %9 ], [ false, %19 ], [ false, %29 ], [ false, %23 ]
  ret i1 %61
}

declare zeroext i1 @_ZNK8GrVkCaps20isVkFormatTexturableE8VkFormat(%class.GrVkCaps*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN9GrVkImage13InitImageInfoEP7GrVkGpuRKNS_9ImageDescEP13GrVkImageInfo(%class.GrVkGpu*, %"struct.GrVkImage::ImageDesc"* dereferenceable(40), %struct.GrVkImageInfo*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7GrVkGpu21onClearBackendTextureERK16GrBackendTexture5sk_spI18GrRefCntedCallbackENSt3__15arrayIfLm4EEE(%class.GrVkGpu*, %class.GrBackendTexture* dereferenceable(176), %class.sk_sp.142* nocapture, <2 x float>, <2 x float>) unnamed_addr #9 align 2 {
  %6 = alloca %class.sk_sp.142, align 8
  %7 = alloca %struct.GrVkImageInfo, align 8
  %8 = alloca %class.sk_sp.621, align 8
  %9 = alloca %class.sk_sp.700, align 8
  %10 = alloca %class.sk_sp.621, align 8
  %11 = alloca %union.VkClearColorValue, align 4
  %12 = alloca %struct.VkImageSubresourceRange, align 4
  %13 = bitcast %struct.GrVkImageInfo* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %13) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 144, i1 false)
  %14 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 1, i32 5
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 1, i32 6
  store i8 0, i8* %15, align 8
  %16 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 2
  %17 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 36, i1 false) #14
  %18 = bitcast i32* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #14
  store i32 1, i32* %17, align 8
  %19 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 7
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 8
  store i32 -1, i32* %20, align 8
  %21 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 9
  store i8 0, i8* %21, align 4
  %22 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 11, i32 0
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 11, i32 2
  %24 = bitcast i64* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 36, i1 false) #14
  %25 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 12
  store i32 0, i32* %25, align 8
  %26 = call zeroext i1 @_ZNK16GrBackendTexture14getVkImageInfoEP13GrVkImageInfo(%class.GrBackendTexture* %1, %struct.GrVkImageInfo* nonnull %7) #14
  %27 = bitcast %class.sk_sp.621* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #14
  %28 = getelementptr inbounds %class.sk_sp.621, %class.sk_sp.621* %8, i64 0, i32 0
  store %class.GrBackendSurfaceMutableStateImpl* inttoptr (i64 -6148914691236517206 to %class.GrBackendSurfaceMutableStateImpl*), %class.GrBackendSurfaceMutableStateImpl** %28, align 8
  call void @_ZNK16GrBackendTexture15getMutableStateEv(%class.sk_sp.621* nonnull sret %8, %class.GrBackendTexture* %1) #14
  %29 = bitcast %class.sk_sp.700* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #14
  %30 = getelementptr inbounds %class.sk_sp.700, %class.sk_sp.700* %9, i64 0, i32 0
  store %class.GrVkTexture* inttoptr (i64 -6148914691236517206 to %class.GrVkTexture*), %class.GrVkTexture** %30, align 8
  %31 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 2
  %34 = load i32, i32* %33, align 8
  %35 = zext i32 %34 to i64
  %36 = shl nuw i64 %35, 32
  %37 = zext i32 %32 to i64
  %38 = or i64 %36, %37
  %39 = bitcast %class.sk_sp.621* %8 to i64*
  %40 = load i64, i64* %39, align 8
  store %class.GrBackendSurfaceMutableStateImpl* null, %class.GrBackendSurfaceMutableStateImpl** %28, align 8
  %41 = bitcast %class.sk_sp.621* %10 to i64*
  store i64 %40, i64* %41, align 8
  call void @_ZN11GrVkTexture18MakeWrappedTextureEP7GrVkGpu7SkISize15GrWrapOwnership15GrWrapCacheable8GrIOTypeRK13GrVkImageInfo5sk_spI32GrBackendSurfaceMutableStateImplE(%class.sk_sp.700* nonnull sret %9, %class.GrVkGpu* %0, i64 %38, i32 0, i1 zeroext false, i32 2, %struct.GrVkImageInfo* nonnull dereferenceable(144) %7, %class.sk_sp.621* nonnull %10) #14
  %42 = getelementptr inbounds %class.sk_sp.621, %class.sk_sp.621* %10, i64 0, i32 0
  %43 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %42, align 8
  %44 = icmp eq %class.GrBackendSurfaceMutableStateImpl* %43, null
  br i1 %44, label %55, label %45

45:                                               ; preds = %5
  %46 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %43, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw add i32* %46, i32 -1 acq_rel
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %55

49:                                               ; preds = %45
  %50 = bitcast %class.GrBackendSurfaceMutableStateImpl* %43 to %class.SkRefCntBase*
  %51 = bitcast %class.GrBackendSurfaceMutableStateImpl* %43 to void (%class.SkRefCntBase*)***
  %52 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %51, align 8
  %53 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %52, i64 2
  %54 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, align 8
  call void %54(%class.SkRefCntBase* nonnull %50) #14
  br label %55

55:                                               ; preds = %5, %45, %49
  %56 = load %class.GrVkTexture*, %class.GrVkTexture** %30, align 8
  %57 = icmp eq %class.GrVkTexture* %56, null
  br i1 %57, label %134, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %class.GrVkTexture, %class.GrVkTexture* %56, i64 0, i32 1, i32 0
  %60 = load %class.GrVkAttachment*, %class.GrVkAttachment** %59, align 8
  %61 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 13
  %62 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %61, align 8
  %63 = icmp eq %class.GrVkPrimaryCommandBuffer* %62, null
  br i1 %63, label %117, label %64

64:                                               ; preds = %58
  %65 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %60, i64 0, i32 1
  call void @_ZN9GrVkImage27setImageLayoutAndQueueIndexEPK7GrVkGpu13VkImageLayoutjjbj(%class.GrVkImage* %65, %class.GrVkGpu* %0, i32 7, i32 4096, i32 4096, i1 zeroext false, i32 -1) #14
  %66 = bitcast %union.VkClearColorValue* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #14
  %67 = getelementptr inbounds %union.VkClearColorValue, %union.VkClearColorValue* %11, i64 0, i32 0, i64 1
  %68 = getelementptr inbounds %union.VkClearColorValue, %union.VkClearColorValue* %11, i64 0, i32 0, i64 2
  %69 = getelementptr inbounds %union.VkClearColorValue, %union.VkClearColorValue* %11, i64 0, i32 0, i64 3
  %70 = bitcast <2 x float> %3 to <2 x i32>
  %71 = extractelement <2 x i32> %70, i32 0
  %72 = bitcast %union.VkClearColorValue* %11 to i32*
  store i32 %71, i32* %72, align 4
  %73 = extractelement <2 x i32> %70, i32 1
  %74 = bitcast float* %67 to i32*
  store i32 %73, i32* %74, align 4
  %75 = bitcast <2 x float> %4 to <2 x i32>
  %76 = extractelement <2 x i32> %75, i32 0
  %77 = bitcast float* %68 to i32*
  store i32 %76, i32* %77, align 4
  %78 = extractelement <2 x i32> %75, i32 1
  %79 = bitcast float* %69 to i32*
  store i32 %78, i32* %79, align 4
  %80 = bitcast %struct.VkImageSubresourceRange* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %80) #14
  %81 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %12, i64 0, i32 0
  %82 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %12, i64 0, i32 1
  %83 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %12, i64 0, i32 2
  %84 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %12, i64 0, i32 3
  %85 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %12, i64 0, i32 4
  store i32 1, i32* %81, align 4
  store i32 0, i32* %84, align 4
  store i32 0, i32* %82, align 4
  store i32 1, i32* %85, align 4
  %86 = load i32, i32* %19, align 4
  store i32 %86, i32* %83, align 4
  %87 = icmp eq %class.GrVkAttachment* %60, null
  %88 = select i1 %87, %class.GrVkImage* null, %class.GrVkImage* %65
  call void @_ZN24GrVkPrimaryCommandBuffer15clearColorImageEPK7GrVkGpuP9GrVkImagePK17VkClearColorValuejPK23VkImageSubresourceRange(%class.GrVkPrimaryCommandBuffer* nonnull %62, %class.GrVkGpu* %0, %class.GrVkImage* %88, %union.VkClearColorValue* nonnull %11, i32 1, %struct.VkImageSubresourceRange* nonnull %12) #14
  call void @_ZN9GrVkImage27setImageLayoutAndQueueIndexEPK7GrVkGpu13VkImageLayoutjjbj(%class.GrVkImage* %65, %class.GrVkGpu* %0, i32 5, i32 32, i32 128, i1 zeroext false, i32 -1) #14
  %89 = getelementptr inbounds %class.sk_sp.142, %class.sk_sp.142* %2, i64 0, i32 0
  %90 = load %class.GrRefCntedCallback*, %class.GrRefCntedCallback** %89, align 8
  %91 = icmp eq %class.GrRefCntedCallback* %90, null
  br i1 %91, label %114, label %92

92:                                               ; preds = %64
  %93 = ptrtoint %class.GrRefCntedCallback* %90 to i64
  store %class.GrRefCntedCallback* null, %class.GrRefCntedCallback** %89, align 8
  %94 = bitcast %class.sk_sp.142* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94)
  %95 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 9
  %96 = bitcast %class.sk_sp.142* %6 to i64*
  store i64 %93, i64* %96, align 8
  call void @_ZN20GrVkResourceProvider37addFinishedProcToActiveCommandBuffersE5sk_spI18GrRefCntedCallbackE(%class.GrVkResourceProvider* %95, %class.sk_sp.142* nonnull %6) #14
  %97 = getelementptr inbounds %class.sk_sp.142, %class.sk_sp.142* %6, i64 0, i32 0
  %98 = load %class.GrRefCntedCallback*, %class.GrRefCntedCallback** %97, align 8
  %99 = icmp eq %class.GrRefCntedCallback* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %92
  %101 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %98, i64 0, i32 0
  %102 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %98, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = atomicrmw add i32* %102, i32 -1 acq_rel
  %104 = icmp eq i32 %103, 1
  br i1 %104, label %105, label %113

105:                                              ; preds = %100
  %106 = getelementptr inbounds %class.SkNVRefCnt.143, %class.SkNVRefCnt.143* %101, i64 2
  %107 = bitcast %class.SkNVRefCnt.143* %106 to void (i8*)**
  %108 = load void (i8*)*, void (i8*)** %107, align 8
  %109 = getelementptr inbounds %class.SkNVRefCnt.143, %class.SkNVRefCnt.143* %101, i64 4
  %110 = bitcast %class.SkNVRefCnt.143* %109 to i8**
  %111 = load i8*, i8** %110, align 8
  call void %108(i8* %111) #14
  %112 = bitcast %class.GrRefCntedCallback* %98 to i8*
  call void @_ZdlPv(i8* %112) #15
  br label %113

113:                                              ; preds = %105, %100, %92
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94)
  br label %114

114:                                              ; preds = %113, %64
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %80) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #14
  %115 = load %class.GrVkTexture*, %class.GrVkTexture** %30, align 8
  %116 = icmp eq %class.GrVkTexture* %115, null
  br i1 %116, label %134, label %117

117:                                              ; preds = %58, %114
  %118 = phi i1 [ true, %114 ], [ false, %58 ]
  %119 = phi %class.GrVkTexture* [ %115, %114 ], [ %56, %58 ]
  %120 = bitcast %class.GrVkTexture* %119 to i8**
  %121 = load i8*, i8** %120, align 8
  %122 = getelementptr i8, i8* %121, i64 -24
  %123 = bitcast i8* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = add i64 %124, 8
  %126 = bitcast %class.GrVkTexture* %119 to i8*
  %127 = getelementptr inbounds i8, i8* %126, i64 %125
  %128 = bitcast i8* %127 to i32*
  %129 = atomicrmw add i32* %128, i32 -1 acq_rel
  %130 = icmp eq i32 %129, 1
  br i1 %130, label %131, label %134

131:                                              ; preds = %117
  %132 = getelementptr inbounds i8, i8* %126, i64 %124
  %133 = bitcast i8* %132 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %133, i32 0) #14
  br label %134

134:                                              ; preds = %55, %114, %117, %131
  %135 = phi i1 [ true, %114 ], [ %118, %117 ], [ %118, %131 ], [ false, %55 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #14
  %136 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %28, align 8
  %137 = icmp eq %class.GrBackendSurfaceMutableStateImpl* %136, null
  br i1 %137, label %148, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %136, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = atomicrmw add i32* %139, i32 -1 acq_rel
  %141 = icmp eq i32 %140, 1
  br i1 %141, label %142, label %148

142:                                              ; preds = %138
  %143 = bitcast %class.GrBackendSurfaceMutableStateImpl* %136 to %class.SkRefCntBase*
  %144 = bitcast %class.GrBackendSurfaceMutableStateImpl* %136 to void (%class.SkRefCntBase*)***
  %145 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %144, align 8
  %146 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %145, i64 2
  %147 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %146, align 8
  call void %147(%class.SkRefCntBase* nonnull %143) #14
  br label %148

148:                                              ; preds = %134, %138, %142
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #14
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %13) #14
  ret i1 %135
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpu19addFinishedCallbackE5sk_spI18GrRefCntedCallbackE(%class.GrVkGpu*, %class.sk_sp.142* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.142, align 8
  %4 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 9
  %5 = getelementptr inbounds %class.sk_sp.142, %class.sk_sp.142* %1, i64 0, i32 0
  %6 = bitcast %class.sk_sp.142* %1 to i64*
  %7 = load i64, i64* %6, align 8
  store %class.GrRefCntedCallback* null, %class.GrRefCntedCallback** %5, align 8
  %8 = bitcast %class.sk_sp.142* %3 to i64*
  store i64 %7, i64* %8, align 8
  call void @_ZN20GrVkResourceProvider37addFinishedProcToActiveCommandBuffersE5sk_spI18GrRefCntedCallbackE(%class.GrVkResourceProvider* %4, %class.sk_sp.142* nonnull %3) #14
  %9 = getelementptr inbounds %class.sk_sp.142, %class.sk_sp.142* %3, i64 0, i32 0
  %10 = load %class.GrRefCntedCallback*, %class.GrRefCntedCallback** %9, align 8
  %11 = icmp eq %class.GrRefCntedCallback* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %10, i64 0, i32 0
  %14 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 -1 acq_rel
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %25

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.SkNVRefCnt.143, %class.SkNVRefCnt.143* %13, i64 2
  %19 = bitcast %class.SkNVRefCnt.143* %18 to void (i8*)**
  %20 = load void (i8*)*, void (i8*)** %19, align 8
  %21 = getelementptr inbounds %class.SkNVRefCnt.143, %class.SkNVRefCnt.143* %13, i64 4
  %22 = bitcast %class.SkNVRefCnt.143* %21 to i8**
  %23 = load i8*, i8** %22, align 8
  call void %20(i8* %23) #14
  %24 = bitcast %class.GrRefCntedCallback* %10 to i8*
  call void @_ZdlPv(i8* %24) #15
  br label %25

25:                                               ; preds = %2, %12, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpu22onCreateBackendTextureE7SkISizeRK15GrBackendFormat12GrRenderable11GrMipmapped11GrProtected(%class.GrBackendTexture* noalias sret, %class.GrVkGpu*, i64, %class.GrBackendFormat* dereferenceable(72), i1 zeroext, i1 zeroext, i1 zeroext) unnamed_addr #0 align 2 {
  %8 = alloca i32, align 4
  %9 = alloca %struct.GrVkImageInfo, align 8
  %10 = trunc i64 %2 to i32
  %11 = lshr i64 %2, 32
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 3, i32 0
  %14 = load %class.GrVkCaps*, %class.GrVkCaps** %13, align 8
  %15 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 20
  %16 = load i8, i8* %15, align 1, !range !2
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %17, %6
  br i1 %18, label %19, label %20

19:                                               ; preds = %7
  tail call void @_ZN16GrBackendTextureC1Ev(%class.GrBackendTexture* %0) #14
  br label %52

20:                                               ; preds = %7
  %21 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #14
  store i32 -1431655766, i32* %8, align 4
  %22 = call zeroext i1 @_ZNK15GrBackendFormat10asVkFormatEP8VkFormat(%class.GrBackendFormat* %3, i32* nonnull %8) #14
  br i1 %22, label %24, label %23

23:                                               ; preds = %20
  call void @_ZN16GrBackendTextureC1Ev(%class.GrBackendTexture* %0) #14
  br label %51

24:                                               ; preds = %20
  %25 = load i32, i32* %8, align 4
  %26 = call zeroext i1 @_ZNK8GrVkCaps20isVkFormatTexturableE8VkFormat(%class.GrVkCaps* %14, i32 %25) #14
  br i1 %26, label %28, label %27

27:                                               ; preds = %24
  call void @_ZN16GrBackendTextureC1Ev(%class.GrBackendTexture* %0) #14
  br label %51

28:                                               ; preds = %24
  %29 = load i32, i32* %8, align 4
  %30 = call zeroext i1 @_Z27GrVkFormatNeedsYcbcrSampler8VkFormat(i32 %29) #14
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZN16GrBackendTextureC1Ev(%class.GrBackendTexture* %0) #14
  br label %51

32:                                               ; preds = %28
  %33 = bitcast %struct.GrVkImageInfo* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %33) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 144, i1 false)
  %34 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %9, i64 0, i32 1, i32 5
  store i64 0, i64* %34, align 8
  %35 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %9, i64 0, i32 1, i32 6
  store i8 0, i8* %35, align 8
  %36 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %9, i64 0, i32 2
  %37 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %9, i64 0, i32 6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 36, i1 false) #14
  %38 = bitcast i32* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 16, i1 false) #14
  store i32 1, i32* %37, align 8
  %39 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %9, i64 0, i32 7
  store i32 0, i32* %39, align 4
  %40 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %9, i64 0, i32 8
  store i32 -1, i32* %40, align 8
  %41 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %9, i64 0, i32 9
  store i8 0, i8* %41, align 4
  %42 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %9, i64 0, i32 11, i32 0
  store i32 0, i32* %42, align 8
  %43 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %9, i64 0, i32 11, i32 2
  %44 = bitcast i64* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 36, i1 false) #14
  %45 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %9, i64 0, i32 12
  store i32 0, i32* %45, align 8
  %46 = load i32, i32* %8, align 4
  %47 = call zeroext i1 @_ZN7GrVkGpu30createVkImageForBackendSurfaceE8VkFormat7SkISizei12GrTexturable12GrRenderable11GrMipmappedP13GrVkImageInfo11GrProtected(%class.GrVkGpu* %1, i32 %46, i64 %2, i32 1, i1 zeroext true, i1 zeroext %4, i1 zeroext %5, %struct.GrVkImageInfo* nonnull %9, i1 zeroext %6)
  br i1 %47, label %49, label %48

48:                                               ; preds = %32
  call void @_ZN16GrBackendTextureC1Ev(%class.GrBackendTexture* %0) #14
  br label %50

49:                                               ; preds = %32
  call void @_ZN16GrBackendTextureC1EiiRK13GrVkImageInfo(%class.GrBackendTexture* %0, i32 %10, i32 %12, %struct.GrVkImageInfo* nonnull dereferenceable(144) %9) #14
  br label %50

50:                                               ; preds = %49, %48
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %33) #14
  br label %51

51:                                               ; preds = %50, %31, %27, %23
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #14
  br label %52

52:                                               ; preds = %51, %19
  ret void
}

declare void @_ZN16GrBackendTextureC1Ev(%class.GrBackendTexture*) unnamed_addr #2

declare zeroext i1 @_Z27GrVkFormatNeedsYcbcrSampler8VkFormat(i32) local_unnamed_addr #2

declare void @_ZN16GrBackendTextureC1EiiRK13GrVkImageInfo(%class.GrBackendTexture*, i32, i32, %struct.GrVkImageInfo* dereferenceable(144)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpu32onCreateCompressedBackendTextureE7SkISizeRK15GrBackendFormat11GrMipmapped11GrProtected(%class.GrBackendTexture* noalias sret, %class.GrVkGpu*, i64, %class.GrBackendFormat* dereferenceable(72), i1 zeroext, i1 zeroext) unnamed_addr #0 align 2 {
  %7 = bitcast %class.GrVkGpu* %1 to void (%class.GrBackendTexture*, %class.GrVkGpu*, i64, %class.GrBackendFormat*, i1, i1, i1)***
  %8 = load void (%class.GrBackendTexture*, %class.GrVkGpu*, i64, %class.GrBackendFormat*, i1, i1, i1)**, void (%class.GrBackendTexture*, %class.GrVkGpu*, i64, %class.GrBackendFormat*, i1, i1, i1)*** %7, align 8
  %9 = getelementptr inbounds void (%class.GrBackendTexture*, %class.GrVkGpu*, i64, %class.GrBackendFormat*, i1, i1, i1)*, void (%class.GrBackendTexture*, %class.GrVkGpu*, i64, %class.GrBackendFormat*, i1, i1, i1)** %8, i64 34
  %10 = load void (%class.GrBackendTexture*, %class.GrVkGpu*, i64, %class.GrBackendFormat*, i1, i1, i1)*, void (%class.GrBackendTexture*, %class.GrVkGpu*, i64, %class.GrBackendFormat*, i1, i1, i1)** %9, align 8
  tail call void %10(%class.GrBackendTexture* sret %0, %class.GrVkGpu* %1, i64 %2, %class.GrBackendFormat* dereferenceable(72) %3, i1 zeroext false, i1 zeroext %4, i1 zeroext %5) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7GrVkGpu32onUpdateCompressedBackendTextureERK16GrBackendTexture5sk_spI18GrRefCntedCallbackEPKvm(%class.GrVkGpu*, %class.GrBackendTexture* dereferenceable(176), %class.sk_sp.142* nocapture, i8* nocapture readonly, i64) unnamed_addr #0 align 2 {
  %6 = alloca %class.sk_sp.142, align 8
  %7 = alloca %struct.GrVkImageInfo, align 8
  %8 = alloca %class.sk_sp.621, align 8
  %9 = alloca %class.sk_sp.700, align 8
  %10 = alloca %class.sk_sp.621, align 8
  %11 = alloca %class.GrBackendFormat, align 8
  %12 = alloca %class.SkTArray.698, align 8
  %13 = alloca %class.SkTArray.697, align 8
  %14 = alloca %"struct.GrStagingBufferManager::Slice", align 8
  %15 = bitcast %struct.GrVkImageInfo* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %15) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 144, i1 false)
  %16 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 1, i32 5
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 1, i32 6
  store i8 0, i8* %17, align 8
  %18 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 2
  %19 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 36, i1 false) #14
  %20 = bitcast i32* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #14
  store i32 1, i32* %19, align 8
  %21 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 7
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 8
  store i32 -1, i32* %22, align 8
  %23 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 9
  store i8 0, i8* %23, align 4
  %24 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 11, i32 0
  store i32 0, i32* %24, align 8
  %25 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 11, i32 2
  %26 = bitcast i64* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 36, i1 false) #14
  %27 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 12
  store i32 0, i32* %27, align 8
  %28 = call zeroext i1 @_ZNK16GrBackendTexture14getVkImageInfoEP13GrVkImageInfo(%class.GrBackendTexture* %1, %struct.GrVkImageInfo* nonnull %7) #14
  %29 = bitcast %class.sk_sp.621* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #14
  %30 = getelementptr inbounds %class.sk_sp.621, %class.sk_sp.621* %8, i64 0, i32 0
  store %class.GrBackendSurfaceMutableStateImpl* inttoptr (i64 -6148914691236517206 to %class.GrBackendSurfaceMutableStateImpl*), %class.GrBackendSurfaceMutableStateImpl** %30, align 8
  call void @_ZNK16GrBackendTexture15getMutableStateEv(%class.sk_sp.621* nonnull sret %8, %class.GrBackendTexture* %1) #14
  %31 = bitcast %class.sk_sp.700* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #14
  %32 = getelementptr inbounds %class.sk_sp.700, %class.sk_sp.700* %9, i64 0, i32 0
  store %class.GrVkTexture* inttoptr (i64 -6148914691236517206 to %class.GrVkTexture*), %class.GrVkTexture** %32, align 8
  %33 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 2
  %36 = load i32, i32* %35, align 8
  %37 = zext i32 %36 to i64
  %38 = shl nuw i64 %37, 32
  %39 = zext i32 %34 to i64
  %40 = or i64 %38, %39
  %41 = bitcast %class.sk_sp.621* %8 to i64*
  %42 = load i64, i64* %41, align 8
  store %class.GrBackendSurfaceMutableStateImpl* null, %class.GrBackendSurfaceMutableStateImpl** %30, align 8
  %43 = bitcast %class.sk_sp.621* %10 to i64*
  store i64 %42, i64* %43, align 8
  call void @_ZN11GrVkTexture18MakeWrappedTextureEP7GrVkGpu7SkISize15GrWrapOwnership15GrWrapCacheable8GrIOTypeRK13GrVkImageInfo5sk_spI32GrBackendSurfaceMutableStateImplE(%class.sk_sp.700* nonnull sret %9, %class.GrVkGpu* %0, i64 %40, i32 0, i1 zeroext false, i32 2, %struct.GrVkImageInfo* nonnull dereferenceable(144) %7, %class.sk_sp.621* nonnull %10) #14
  %44 = getelementptr inbounds %class.sk_sp.621, %class.sk_sp.621* %10, i64 0, i32 0
  %45 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %44, align 8
  %46 = icmp eq %class.GrBackendSurfaceMutableStateImpl* %45, null
  br i1 %46, label %57, label %47

47:                                               ; preds = %5
  %48 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %45, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw add i32* %48, i32 -1 acq_rel
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %51, label %57

51:                                               ; preds = %47
  %52 = bitcast %class.GrBackendSurfaceMutableStateImpl* %45 to %class.SkRefCntBase*
  %53 = bitcast %class.GrBackendSurfaceMutableStateImpl* %45 to void (%class.SkRefCntBase*)***
  %54 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %53, align 8
  %55 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %54, i64 2
  %56 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %55, align 8
  call void %56(%class.SkRefCntBase* nonnull %52) #14
  br label %57

57:                                               ; preds = %5, %47, %51
  %58 = load %class.GrVkTexture*, %class.GrVkTexture** %32, align 8
  %59 = icmp eq %class.GrVkTexture* %58, null
  br i1 %59, label %226, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 13
  %62 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %61, align 8
  %63 = icmp eq %class.GrVkPrimaryCommandBuffer* %62, null
  br i1 %63, label %209, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %class.GrVkTexture, %class.GrVkTexture* %58, i64 0, i32 1, i32 0
  %66 = load %class.GrVkAttachment*, %class.GrVkAttachment** %65, align 8
  %67 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %66, i64 0, i32 1
  call void @_ZN9GrVkImage27setImageLayoutAndQueueIndexEPK7GrVkGpu13VkImageLayoutjjbj(%class.GrVkImage* %67, %class.GrVkGpu* %0, i32 7, i32 4096, i32 4096, i1 zeroext false, i32 -1) #14
  %68 = bitcast %class.GrBackendFormat* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %68) #14
  call void @_ZNK16GrBackendTexture16getBackendFormatEv(%class.GrBackendFormat* nonnull sret %11, %class.GrBackendTexture* %1) #14
  %69 = call i32 @_Z32GrBackendFormatToCompressionTypeRK15GrBackendFormat(%class.GrBackendFormat* nonnull dereferenceable(72) %11) #14
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %68) #14
  %70 = bitcast %class.SkTArray.698* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #14
  %71 = getelementptr inbounds %class.SkTArray.698, %class.SkTArray.698* %12, i64 0, i32 0
  %72 = getelementptr inbounds %class.SkTArray.698, %class.SkTArray.698* %12, i64 0, i32 1
  store %struct.VkBufferImageCopy* null, %struct.VkBufferImageCopy** %71, align 8
  store i64 1, i64* %72, align 8
  %73 = bitcast %class.SkTArray.697* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %73) #14
  %74 = getelementptr inbounds %class.SkTArray.697, %class.SkTArray.697* %13, i64 0, i32 0
  %75 = getelementptr inbounds %class.SkTArray.697, %class.SkTArray.697* %13, i64 0, i32 1
  store i64* null, i64** %74, align 8
  store i64 1, i64* %75, align 8
  %76 = bitcast %"struct.GrStagingBufferManager::Slice"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #14
  %77 = getelementptr inbounds %"struct.GrStagingBufferManager::Slice", %"struct.GrStagingBufferManager::Slice"* %14, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 0, i64 24, i1 false) #14
  %78 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 10
  %79 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %7, i64 0, i32 4
  %80 = load i32, i32* %79, align 8
  %81 = load i32, i32* %33, align 4
  %82 = load i32, i32* %35, align 8
  %83 = zext i32 %82 to i64
  %84 = shl nuw i64 %83, 32
  %85 = zext i32 %81 to i64
  %86 = or i64 %84, %85
  %87 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 3
  %88 = load i8, i8* %87, align 4, !range !2
  %89 = icmp ne i8 %88, 0
  call fastcc void @_ZL26fill_in_compressed_regionsP22GrStagingBufferManagerP8SkTArrayI17VkBufferImageCopyLb0EEPS1_ImLb0EEPNS_5SliceEN7SkImage15CompressionTypeE8VkFormat7SkISize11GrMipmapped(%class.GrStagingBufferManager* %78, %class.SkTArray.698* nonnull %12, %class.SkTArray.697* nonnull %13, %"struct.GrStagingBufferManager::Slice"* nonnull %14, i32 %69, i32 %80, i64 %86, i1 zeroext %89)
  %90 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %77, align 8
  %91 = icmp eq %class.GrGpuBuffer* %90, null
  br i1 %91, label %191, label %92

92:                                               ; preds = %64
  %93 = getelementptr inbounds %"struct.GrStagingBufferManager::Slice", %"struct.GrStagingBufferManager::Slice"* %14, i64 0, i32 2
  %94 = load i8*, i8** %93, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %94, i8* align 1 %3, i64 %4, i1 false)
  %95 = load %class.GrVkTexture*, %class.GrVkTexture** %32, align 8
  %96 = icmp eq %class.GrVkTexture* %95, null
  br i1 %96, label %97, label %100

97:                                               ; preds = %92
  %98 = getelementptr inbounds %class.GrVkPrimaryCommandBuffer, %class.GrVkPrimaryCommandBuffer* %62, i64 0, i32 0, i32 4, i32 1
  %99 = bitcast %class.SkTArray.534* %98 to i8*
  br label %124

100:                                              ; preds = %92
  %101 = bitcast %class.GrVkTexture* %95 to i8**
  %102 = load i8*, i8** %101, align 8
  %103 = getelementptr i8, i8* %102, i64 -24
  %104 = bitcast i8* %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = add i64 %105, 8
  %107 = bitcast %class.GrVkTexture* %95 to i8*
  %108 = getelementptr inbounds i8, i8* %107, i64 %106
  %109 = bitcast i8* %108 to i32*
  %110 = atomicrmw add i32* %109, i32 1 monotonic
  %111 = load i8*, i8** %101, align 8
  %112 = getelementptr i8, i8* %111, i64 -24
  %113 = bitcast i8* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = getelementptr inbounds i8, i8* %107, i64 %114
  %116 = getelementptr inbounds %class.GrVkPrimaryCommandBuffer, %class.GrVkPrimaryCommandBuffer* %62, i64 0, i32 0, i32 4, i32 1
  %117 = bitcast %class.SkTArray.534* %116 to i8*
  %118 = icmp eq i8* %115, null
  br i1 %118, label %124, label %119

119:                                              ; preds = %100
  %120 = bitcast i8* %115 to %class.GrSurface*
  %121 = getelementptr inbounds i8, i8* %115, i64 12
  %122 = bitcast i8* %121 to i32*
  %123 = atomicrmw add i32* %122, i32 1 monotonic
  br label %124

124:                                              ; preds = %97, %100, %119
  %125 = phi i1 [ true, %97 ], [ true, %100 ], [ false, %119 ]
  %126 = phi %class.SkTArray.534* [ %98, %97 ], [ %116, %100 ], [ %116, %119 ]
  %127 = phi i8* [ %99, %97 ], [ %117, %100 ], [ %117, %119 ]
  %128 = phi %class.GrSurface* [ null, %97 ], [ null, %100 ], [ %120, %119 ]
  %129 = ptrtoint %class.GrSurface* %128 to i64
  call void @_ZN8SkTArrayI5gr_spIK9GrSurfaceXadL_ZNK7GrIORefI13GrGpuResourceE21addCommandBufferUsageEvEEXadL_ZNKS5_24removeCommandBufferUsageEvEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.534* %126, i32 1, i32 1) #14
  %130 = bitcast i8* %127 to %class.gr_sp.535**
  %131 = load %class.gr_sp.535*, %class.gr_sp.535** %130, align 8
  %132 = getelementptr inbounds %class.GrVkPrimaryCommandBuffer, %class.GrVkPrimaryCommandBuffer* %62, i64 0, i32 0, i32 4, i32 1, i32 1
  %133 = load i64, i64* %132, align 8
  %134 = lshr i64 %133, 1
  %135 = and i64 %134, 2147483647
  %136 = getelementptr inbounds %class.gr_sp.535, %class.gr_sp.535* %131, i64 %135
  %137 = add i64 %133, 2
  %138 = and i64 %137, 4294967294
  %139 = and i64 %133, -4294967295
  %140 = or i64 %138, %139
  store i64 %140, i64* %132, align 8
  %141 = bitcast %class.gr_sp.535* %136 to i64*
  store i64 %129, i64* %141, align 8
  br i1 %125, label %150, label %142

142:                                              ; preds = %124
  %143 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %128, i64 0, i32 0, i32 1
  %144 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %143, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = atomicrmw add i32* %144, i32 -1 acq_rel
  %146 = icmp eq i32 %145, 1
  br i1 %146, label %147, label %150

147:                                              ; preds = %142
  %148 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %143, i64 -1
  %149 = bitcast %class.GrIORef* %148 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %149, i32 0) #14
  br label %150

150:                                              ; preds = %124, %142, %147
  %151 = bitcast %"struct.GrStagingBufferManager::Slice"* %14 to %class.GrVkBuffer**
  %152 = load %class.GrVkBuffer*, %class.GrVkBuffer** %151, align 8
  %153 = getelementptr inbounds %class.GrVkBuffer, %class.GrVkBuffer* %152, i64 0, i32 1
  %154 = load %struct.VkBuffer_T*, %struct.VkBuffer_T** %153, align 8
  %155 = icmp eq %class.GrVkAttachment* %66, null
  %156 = select i1 %155, %class.GrVkImage* null, %class.GrVkImage* %67
  %157 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %66, i64 0, i32 1, i32 3, i32 0
  %158 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %157, align 8
  %159 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %158, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 seq_cst, align 4
  %161 = load i64, i64* %72, align 8
  %162 = lshr i64 %161, 1
  %163 = trunc i64 %162 to i32
  %164 = and i32 %163, 2147483647
  %165 = load %struct.VkBufferImageCopy*, %struct.VkBufferImageCopy** %71, align 8
  call void @_ZN24GrVkPrimaryCommandBuffer17copyBufferToImageEPK7GrVkGpuP10VkBuffer_TP9GrVkImage13VkImageLayoutjPK17VkBufferImageCopy(%class.GrVkPrimaryCommandBuffer* nonnull %62, %class.GrVkGpu* %0, %struct.VkBuffer_T* %154, %class.GrVkImage* %156, i32 %160, i32 %164, %struct.VkBufferImageCopy* %165) #14
  call void @_ZN9GrVkImage27setImageLayoutAndQueueIndexEPK7GrVkGpu13VkImageLayoutjjbj(%class.GrVkImage* %67, %class.GrVkGpu* %0, i32 5, i32 32, i32 128, i1 zeroext false, i32 -1) #14
  %166 = getelementptr inbounds %class.sk_sp.142, %class.sk_sp.142* %2, i64 0, i32 0
  %167 = load %class.GrRefCntedCallback*, %class.GrRefCntedCallback** %166, align 8
  %168 = icmp eq %class.GrRefCntedCallback* %167, null
  br i1 %168, label %191, label %169

169:                                              ; preds = %150
  %170 = ptrtoint %class.GrRefCntedCallback* %167 to i64
  store %class.GrRefCntedCallback* null, %class.GrRefCntedCallback** %166, align 8
  %171 = bitcast %class.sk_sp.142* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %171)
  %172 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 9
  %173 = bitcast %class.sk_sp.142* %6 to i64*
  store i64 %170, i64* %173, align 8
  call void @_ZN20GrVkResourceProvider37addFinishedProcToActiveCommandBuffersE5sk_spI18GrRefCntedCallbackE(%class.GrVkResourceProvider* %172, %class.sk_sp.142* nonnull %6) #14
  %174 = getelementptr inbounds %class.sk_sp.142, %class.sk_sp.142* %6, i64 0, i32 0
  %175 = load %class.GrRefCntedCallback*, %class.GrRefCntedCallback** %174, align 8
  %176 = icmp eq %class.GrRefCntedCallback* %175, null
  br i1 %176, label %190, label %177

177:                                              ; preds = %169
  %178 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %175, i64 0, i32 0
  %179 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %175, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = atomicrmw add i32* %179, i32 -1 acq_rel
  %181 = icmp eq i32 %180, 1
  br i1 %181, label %182, label %190

182:                                              ; preds = %177
  %183 = getelementptr inbounds %class.SkNVRefCnt.143, %class.SkNVRefCnt.143* %178, i64 2
  %184 = bitcast %class.SkNVRefCnt.143* %183 to void (i8*)**
  %185 = load void (i8*)*, void (i8*)** %184, align 8
  %186 = getelementptr inbounds %class.SkNVRefCnt.143, %class.SkNVRefCnt.143* %178, i64 4
  %187 = bitcast %class.SkNVRefCnt.143* %186 to i8**
  %188 = load i8*, i8** %187, align 8
  call void %185(i8* %188) #14
  %189 = bitcast %class.GrRefCntedCallback* %175 to i8*
  call void @_ZdlPv(i8* %189) #15
  br label %190

190:                                              ; preds = %182, %177, %169
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %171)
  br label %191

191:                                              ; preds = %150, %190, %64
  %192 = phi i1 [ false, %64 ], [ true, %190 ], [ true, %150 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #14
  %193 = load i64, i64* %75, align 8
  %194 = and i64 %193, 1
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %199, label %196

196:                                              ; preds = %191
  %197 = bitcast %class.SkTArray.697* %13 to i8**
  %198 = load i8*, i8** %197, align 8
  call void @_Z7sk_freePv(i8* %198) #14
  br label %199

199:                                              ; preds = %191, %196
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #14
  %200 = load i64, i64* %72, align 8
  %201 = and i64 %200, 1
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %206, label %203

203:                                              ; preds = %199
  %204 = bitcast %class.SkTArray.698* %12 to i8**
  %205 = load i8*, i8** %204, align 8
  call void @_Z7sk_freePv(i8* %205) #14
  br label %206

206:                                              ; preds = %203, %199
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #14
  %207 = load %class.GrVkTexture*, %class.GrVkTexture** %32, align 8
  %208 = icmp eq %class.GrVkTexture* %207, null
  br i1 %208, label %226, label %209

209:                                              ; preds = %60, %206
  %210 = phi i1 [ %192, %206 ], [ false, %60 ]
  %211 = phi %class.GrVkTexture* [ %207, %206 ], [ %58, %60 ]
  %212 = bitcast %class.GrVkTexture* %211 to i8**
  %213 = load i8*, i8** %212, align 8
  %214 = getelementptr i8, i8* %213, i64 -24
  %215 = bitcast i8* %214 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = add i64 %216, 8
  %218 = bitcast %class.GrVkTexture* %211 to i8*
  %219 = getelementptr inbounds i8, i8* %218, i64 %217
  %220 = bitcast i8* %219 to i32*
  %221 = atomicrmw add i32* %220, i32 -1 acq_rel
  %222 = icmp eq i32 %221, 1
  br i1 %222, label %223, label %226

223:                                              ; preds = %209
  %224 = getelementptr inbounds i8, i8* %218, i64 %216
  %225 = bitcast i8* %224 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %225, i32 0) #14
  br label %226

226:                                              ; preds = %57, %206, %209, %223
  %227 = phi i1 [ %192, %206 ], [ %210, %209 ], [ %210, %223 ], [ false, %57 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #14
  %228 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %30, align 8
  %229 = icmp eq %class.GrBackendSurfaceMutableStateImpl* %228, null
  br i1 %229, label %240, label %230

230:                                              ; preds = %226
  %231 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %228, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %232 = atomicrmw add i32* %231, i32 -1 acq_rel
  %233 = icmp eq i32 %232, 1
  br i1 %233, label %234, label %240

234:                                              ; preds = %230
  %235 = bitcast %class.GrBackendSurfaceMutableStateImpl* %228 to %class.SkRefCntBase*
  %236 = bitcast %class.GrBackendSurfaceMutableStateImpl* %228 to void (%class.SkRefCntBase*)***
  %237 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %236, align 8
  %238 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %237, i64 2
  %239 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %238, align 8
  call void %239(%class.SkRefCntBase* nonnull %235) #14
  br label %240

240:                                              ; preds = %226, %230, %234
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #14
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %15) #14
  ret i1 %227
}

declare void @_ZNK16GrBackendTexture16getBackendFormatEv(%class.GrBackendFormat* sret, %class.GrBackendTexture*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z39set_layout_and_queue_from_mutable_stateP7GrVkGpuP9GrVkImageRK19GrVkSharedImageInfo(%class.GrVkGpu*, %class.GrVkImage*, %class.GrVkSharedImageInfo* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %class.GrVkSharedImageInfo, %class.GrVkSharedImageInfo* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load atomic i32, i32* %4 seq_cst, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %12

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.GrVkImage, %class.GrVkImage* %1, i64 0, i32 3, i32 0
  %9 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %8, align 8
  %10 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 seq_cst, align 4
  br label %12

12:                                               ; preds = %7, %3
  %13 = phi i32 [ %11, %7 ], [ %5, %3 ]
  %14 = tail call i32 @_ZN9GrVkImage29LayoutToPipelineSrcStageFlagsE13VkImageLayout(i32 %13) #14
  %15 = tail call i32 @_ZN9GrVkImage21LayoutToSrcAccessMaskE13VkImageLayout(i32 %13) #14
  %16 = getelementptr inbounds %class.GrVkImage, %class.GrVkImage* %1, i64 0, i32 3, i32 0
  %17 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %16, align 8
  %18 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %17, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 seq_cst, align 4
  %20 = getelementptr inbounds %class.GrVkSharedImageInfo, %class.GrVkSharedImageInfo* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 seq_cst, align 4
  %22 = add i32 %19, 3
  %23 = add i32 %21, 3
  %24 = or i32 %23, %22
  %25 = icmp ult i32 %24, 2
  br i1 %25, label %27, label %26

26:                                               ; preds = %12
  tail call void @_ZN9GrVkImage27setImageLayoutAndQueueIndexEPK7GrVkGpu13VkImageLayoutjjbj(%class.GrVkImage* %1, %class.GrVkGpu* %0, i32 %13, i32 %15, i32 %14, i1 zeroext false, i32 %21) #14
  br label %27

27:                                               ; preds = %12, %26
  ret void
}

declare i32 @_ZN9GrVkImage29LayoutToPipelineSrcStageFlagsE13VkImageLayout(i32) local_unnamed_addr #2

declare i32 @_ZN9GrVkImage21LayoutToSrcAccessMaskE13VkImageLayout(i32) local_unnamed_addr #2

declare void @_ZN9GrVkImage27setImageLayoutAndQueueIndexEPK7GrVkGpu13VkImageLayoutjjbj(%class.GrVkImage*, %class.GrVkGpu*, i32, i32, i32, i1 zeroext, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7GrVkGpu22setBackendSurfaceStateE13GrVkImageInfo5sk_spI32GrBackendSurfaceMutableStateImplE7SkISizeRK19GrVkSharedImageInfoP28GrBackendSurfaceMutableState(%class.GrVkGpu*, %struct.GrVkImageInfo* byval(%struct.GrVkImageInfo) align 8, %class.sk_sp.621* nocapture, i64, %class.GrVkSharedImageInfo* nocapture readonly dereferenceable(8), %class.GrBackendSurfaceMutableState*) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.sk_sp.620, align 8
  %8 = alloca %class.sk_sp.621, align 8
  %9 = bitcast %class.sk_sp.620* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #14
  %10 = getelementptr inbounds %class.sk_sp.620, %class.sk_sp.620* %7, i64 0, i32 0
  store %class.GrVkAttachment* inttoptr (i64 -6148914691236517206 to %class.GrVkAttachment*), %class.GrVkAttachment** %10, align 8
  %11 = getelementptr inbounds %class.sk_sp.621, %class.sk_sp.621* %2, i64 0, i32 0
  %12 = bitcast %class.sk_sp.621* %2 to i64*
  %13 = load i64, i64* %12, align 8
  store %class.GrBackendSurfaceMutableStateImpl* null, %class.GrBackendSurfaceMutableStateImpl** %11, align 8
  %14 = bitcast %class.sk_sp.621* %8 to i64*
  store i64 %13, i64* %14, align 8
  call void @_ZN14GrVkAttachment11MakeWrappedEP7GrVkGpu7SkISizeRK13GrVkImageInfo5sk_spI32GrBackendSurfaceMutableStateImplEN12GrAttachment10UsageFlagsE15GrWrapOwnership15GrWrapCacheableb(%class.sk_sp.620* nonnull sret %7, %class.GrVkGpu* %0, i64 %3, %struct.GrVkImageInfo* nonnull dereferenceable(144) %1, %class.sk_sp.621* nonnull %8, i8 zeroext 2, i32 0, i1 zeroext false, i1 zeroext false) #14
  %15 = getelementptr inbounds %class.sk_sp.621, %class.sk_sp.621* %8, i64 0, i32 0
  %16 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %15, align 8
  %17 = icmp eq %class.GrBackendSurfaceMutableStateImpl* %16, null
  br i1 %17, label %28, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %16, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 -1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %28

22:                                               ; preds = %18
  %23 = bitcast %class.GrBackendSurfaceMutableStateImpl* %16 to %class.SkRefCntBase*
  %24 = bitcast %class.GrBackendSurfaceMutableStateImpl* %16 to void (%class.SkRefCntBase*)***
  %25 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %24, align 8
  %26 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, i64 2
  %27 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %26, align 8
  call void %27(%class.SkRefCntBase* nonnull %23) #14
  br label %28

28:                                               ; preds = %6, %18, %22
  %29 = load %class.GrVkAttachment*, %class.GrVkAttachment** %10, align 8
  %30 = icmp eq %class.GrVkAttachment* %29, null
  br i1 %30, label %87, label %31

31:                                               ; preds = %28
  %32 = icmp eq %class.GrBackendSurfaceMutableState* %5, null
  br i1 %32, label %48, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %29, i64 0, i32 1, i32 3, i32 0
  %35 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %34, align 8
  %36 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %35, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 seq_cst, align 4
  %38 = load %class.GrVkAttachment*, %class.GrVkAttachment** %10, align 8
  %39 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %38, i64 0, i32 1, i32 3, i32 0
  %40 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %39, align 8
  %41 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %40, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 seq_cst, align 4
  %43 = getelementptr inbounds %class.GrBackendSurfaceMutableState, %class.GrBackendSurfaceMutableState* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 %37, i32* %43 seq_cst, align 4
  %44 = getelementptr inbounds %class.GrBackendSurfaceMutableState, %class.GrBackendSurfaceMutableState* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i32 %42, i32* %44 seq_cst, align 4
  %45 = getelementptr inbounds %class.GrBackendSurfaceMutableState, %class.GrBackendSurfaceMutableState* %5, i64 0, i32 1
  store i32 1, i32* %45, align 4
  %46 = getelementptr inbounds %class.GrBackendSurfaceMutableState, %class.GrBackendSurfaceMutableState* %5, i64 0, i32 2
  store i8 1, i8* %46, align 4
  %47 = load %class.GrVkAttachment*, %class.GrVkAttachment** %10, align 8
  br label %48

48:                                               ; preds = %31, %33
  %49 = phi %class.GrVkAttachment* [ %29, %31 ], [ %47, %33 ]
  %50 = icmp eq %class.GrVkAttachment* %49, null
  %51 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %49, i64 0, i32 1
  %52 = select i1 %50, %class.GrVkImage* null, %class.GrVkImage* %51
  %53 = getelementptr inbounds %class.GrVkSharedImageInfo, %class.GrVkSharedImageInfo* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 seq_cst, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %61

56:                                               ; preds = %48
  %57 = getelementptr inbounds %class.GrVkImage, %class.GrVkImage* %52, i64 0, i32 3, i32 0
  %58 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %57, align 8
  %59 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %58, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 seq_cst, align 4
  br label %61

61:                                               ; preds = %56, %48
  %62 = phi i32 [ %60, %56 ], [ %54, %48 ]
  %63 = call i32 @_ZN9GrVkImage29LayoutToPipelineSrcStageFlagsE13VkImageLayout(i32 %62) #14
  %64 = call i32 @_ZN9GrVkImage21LayoutToSrcAccessMaskE13VkImageLayout(i32 %62) #14
  %65 = getelementptr inbounds %class.GrVkImage, %class.GrVkImage* %52, i64 0, i32 3, i32 0
  %66 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %65, align 8
  %67 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %66, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 seq_cst, align 4
  %69 = getelementptr inbounds %class.GrVkSharedImageInfo, %class.GrVkSharedImageInfo* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 seq_cst, align 4
  %71 = add i32 %68, 3
  %72 = add i32 %70, 3
  %73 = or i32 %72, %71
  %74 = icmp ult i32 %73, 2
  br i1 %74, label %76, label %75

75:                                               ; preds = %61
  call void @_ZN9GrVkImage27setImageLayoutAndQueueIndexEPK7GrVkGpu13VkImageLayoutjjbj(%class.GrVkImage* %52, %class.GrVkGpu* %0, i32 %62, i32 %64, i32 %63, i1 zeroext false, i32 %70) #14
  br label %76

76:                                               ; preds = %75, %61
  %77 = load %class.GrVkAttachment*, %class.GrVkAttachment** %10, align 8
  %78 = icmp eq %class.GrVkAttachment* %77, null
  br i1 %78, label %87, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %77, i64 0, i32 0, i32 0, i32 0, i32 1
  %81 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = atomicrmw add i32* %81, i32 -1 acq_rel
  %83 = icmp eq i32 %82, 1
  br i1 %83, label %84, label %87

84:                                               ; preds = %79
  %85 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %80, i64 -1
  %86 = bitcast %class.GrIORef* %85 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %86, i32 0) #14
  br label %87

87:                                               ; preds = %28, %76, %79, %84
  %88 = phi i1 [ true, %76 ], [ true, %79 ], [ true, %84 ], [ false, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #14
  ret i1 %88
}

declare void @_ZN14GrVkAttachment11MakeWrappedEP7GrVkGpu7SkISizeRK13GrVkImageInfo5sk_spI32GrBackendSurfaceMutableStateImplEN12GrAttachment10UsageFlagsE15GrWrapOwnership15GrWrapCacheableb(%class.sk_sp.620* sret, %class.GrVkGpu*, i64, %struct.GrVkImageInfo* dereferenceable(144), %class.sk_sp.621*, i8 zeroext, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7GrVkGpu22setBackendTextureStateERK16GrBackendTextureRK28GrBackendSurfaceMutableStatePS3_5sk_spI18GrRefCntedCallbackE(%class.GrVkGpu*, %class.GrBackendTexture* dereferenceable(176), %class.GrBackendSurfaceMutableState* nocapture readonly dereferenceable(16), %class.GrBackendSurfaceMutableState*, %class.sk_sp.142* nocapture readnone) unnamed_addr #0 align 2 {
  %6 = alloca %struct.GrVkImageInfo, align 8
  %7 = alloca %class.sk_sp.621, align 8
  %8 = alloca %class.sk_sp.621, align 8
  %9 = bitcast %struct.GrVkImageInfo* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %9) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 144, i1 false)
  %10 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %6, i64 0, i32 1, i32 5
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %6, i64 0, i32 1, i32 6
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %6, i64 0, i32 2
  %13 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %6, i64 0, i32 6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 36, i1 false) #14
  %14 = bitcast i32* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #14
  store i32 1, i32* %13, align 8
  %15 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %6, i64 0, i32 7
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %6, i64 0, i32 8
  store i32 -1, i32* %16, align 8
  %17 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %6, i64 0, i32 9
  store i8 0, i8* %17, align 4
  %18 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %6, i64 0, i32 11, i32 0
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %6, i64 0, i32 11, i32 2
  %20 = bitcast i64* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 36, i1 false) #14
  %21 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %6, i64 0, i32 12
  store i32 0, i32* %21, align 8
  %22 = call zeroext i1 @_ZNK16GrBackendTexture14getVkImageInfoEP13GrVkImageInfo(%class.GrBackendTexture* %1, %struct.GrVkImageInfo* nonnull %6) #14
  %23 = bitcast %class.sk_sp.621* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #14
  %24 = getelementptr inbounds %class.sk_sp.621, %class.sk_sp.621* %7, i64 0, i32 0
  store %class.GrBackendSurfaceMutableStateImpl* inttoptr (i64 -6148914691236517206 to %class.GrBackendSurfaceMutableStateImpl*), %class.GrBackendSurfaceMutableStateImpl** %24, align 8
  call void @_ZNK16GrBackendTexture15getMutableStateEv(%class.sk_sp.621* nonnull sret %7, %class.GrBackendTexture* %1) #14
  %25 = bitcast %class.sk_sp.621* %7 to i64*
  %26 = load i64, i64* %25, align 8
  store %class.GrBackendSurfaceMutableStateImpl* null, %class.GrBackendSurfaceMutableStateImpl** %24, align 8
  %27 = bitcast %class.sk_sp.621* %8 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %1, i64 0, i32 2
  %31 = load i32, i32* %30, align 8
  %32 = zext i32 %31 to i64
  %33 = shl nuw i64 %32, 32
  %34 = zext i32 %29 to i64
  %35 = or i64 %33, %34
  %36 = getelementptr inbounds %class.GrBackendSurfaceMutableState, %class.GrBackendSurfaceMutableState* %2, i64 0, i32 0, i32 0
  %37 = call zeroext i1 @_ZN7GrVkGpu22setBackendSurfaceStateE13GrVkImageInfo5sk_spI32GrBackendSurfaceMutableStateImplE7SkISizeRK19GrVkSharedImageInfoP28GrBackendSurfaceMutableState(%class.GrVkGpu* %0, %struct.GrVkImageInfo* nonnull byval(%struct.GrVkImageInfo) align 8 %6, %class.sk_sp.621* nonnull %8, i64 %35, %class.GrVkSharedImageInfo* dereferenceable(8) %36, %class.GrBackendSurfaceMutableState* %3)
  %38 = getelementptr inbounds %class.sk_sp.621, %class.sk_sp.621* %8, i64 0, i32 0
  %39 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %38, align 8
  %40 = icmp eq %class.GrBackendSurfaceMutableStateImpl* %39, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %5
  %42 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %39, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw add i32* %42, i32 -1 acq_rel
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %51

45:                                               ; preds = %41
  %46 = bitcast %class.GrBackendSurfaceMutableStateImpl* %39 to %class.SkRefCntBase*
  %47 = bitcast %class.GrBackendSurfaceMutableStateImpl* %39 to void (%class.SkRefCntBase*)***
  %48 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %47, align 8
  %49 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %48, i64 2
  %50 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %49, align 8
  call void %50(%class.SkRefCntBase* nonnull %46) #14
  br label %51

51:                                               ; preds = %5, %41, %45
  %52 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %24, align 8
  %53 = icmp eq %class.GrBackendSurfaceMutableStateImpl* %52, null
  br i1 %53, label %64, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %52, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw add i32* %55, i32 -1 acq_rel
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %64

58:                                               ; preds = %54
  %59 = bitcast %class.GrBackendSurfaceMutableStateImpl* %52 to %class.SkRefCntBase*
  %60 = bitcast %class.GrBackendSurfaceMutableStateImpl* %52 to void (%class.SkRefCntBase*)***
  %61 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %60, align 8
  %62 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %61, i64 2
  %63 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %62, align 8
  call void %63(%class.SkRefCntBase* nonnull %59) #14
  br label %64

64:                                               ; preds = %51, %54, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #14
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %9) #14
  ret i1 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7GrVkGpu27setBackendRenderTargetStateERK21GrBackendRenderTargetRK28GrBackendSurfaceMutableStatePS3_5sk_spI18GrRefCntedCallbackE(%class.GrVkGpu*, %class.GrBackendRenderTarget* dereferenceable(176), %class.GrBackendSurfaceMutableState* nocapture readonly dereferenceable(16), %class.GrBackendSurfaceMutableState*, %class.sk_sp.142* nocapture readnone) unnamed_addr #0 align 2 {
  %6 = alloca %struct.GrVkImageInfo, align 8
  %7 = alloca %class.sk_sp.621, align 8
  %8 = alloca %class.sk_sp.621, align 8
  %9 = bitcast %struct.GrVkImageInfo* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %9) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 144, i1 false)
  %10 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %6, i64 0, i32 1, i32 5
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %6, i64 0, i32 1, i32 6
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %6, i64 0, i32 2
  %13 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %6, i64 0, i32 6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 36, i1 false) #14
  %14 = bitcast i32* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #14
  store i32 1, i32* %13, align 8
  %15 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %6, i64 0, i32 7
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %6, i64 0, i32 8
  store i32 -1, i32* %16, align 8
  %17 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %6, i64 0, i32 9
  store i8 0, i8* %17, align 4
  %18 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %6, i64 0, i32 11, i32 0
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %6, i64 0, i32 11, i32 2
  %20 = bitcast i64* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 36, i1 false) #14
  %21 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %6, i64 0, i32 12
  store i32 0, i32* %21, align 8
  %22 = call zeroext i1 @_ZNK21GrBackendRenderTarget14getVkImageInfoEP13GrVkImageInfo(%class.GrBackendRenderTarget* %1, %struct.GrVkImageInfo* nonnull %6) #14
  %23 = bitcast %class.sk_sp.621* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #14
  %24 = getelementptr inbounds %class.sk_sp.621, %class.sk_sp.621* %7, i64 0, i32 0
  store %class.GrBackendSurfaceMutableStateImpl* inttoptr (i64 -6148914691236517206 to %class.GrBackendSurfaceMutableStateImpl*), %class.GrBackendSurfaceMutableStateImpl** %24, align 8
  call void @_ZNK21GrBackendRenderTarget15getMutableStateEv(%class.sk_sp.621* nonnull sret %7, %class.GrBackendRenderTarget* %1) #14
  %25 = bitcast %class.sk_sp.621* %7 to i64*
  %26 = load i64, i64* %25, align 8
  store %class.GrBackendSurfaceMutableStateImpl* null, %class.GrBackendSurfaceMutableStateImpl** %24, align 8
  %27 = bitcast %class.sk_sp.621* %8 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %1, i64 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %class.GrBackendRenderTarget, %class.GrBackendRenderTarget* %1, i64 0, i32 3
  %31 = load i32, i32* %30, align 8
  %32 = zext i32 %31 to i64
  %33 = shl nuw i64 %32, 32
  %34 = zext i32 %29 to i64
  %35 = or i64 %33, %34
  %36 = getelementptr inbounds %class.GrBackendSurfaceMutableState, %class.GrBackendSurfaceMutableState* %2, i64 0, i32 0, i32 0
  %37 = call zeroext i1 @_ZN7GrVkGpu22setBackendSurfaceStateE13GrVkImageInfo5sk_spI32GrBackendSurfaceMutableStateImplE7SkISizeRK19GrVkSharedImageInfoP28GrBackendSurfaceMutableState(%class.GrVkGpu* %0, %struct.GrVkImageInfo* nonnull byval(%struct.GrVkImageInfo) align 8 %6, %class.sk_sp.621* nonnull %8, i64 %35, %class.GrVkSharedImageInfo* dereferenceable(8) %36, %class.GrBackendSurfaceMutableState* %3)
  %38 = getelementptr inbounds %class.sk_sp.621, %class.sk_sp.621* %8, i64 0, i32 0
  %39 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %38, align 8
  %40 = icmp eq %class.GrBackendSurfaceMutableStateImpl* %39, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %5
  %42 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %39, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw add i32* %42, i32 -1 acq_rel
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %51

45:                                               ; preds = %41
  %46 = bitcast %class.GrBackendSurfaceMutableStateImpl* %39 to %class.SkRefCntBase*
  %47 = bitcast %class.GrBackendSurfaceMutableStateImpl* %39 to void (%class.SkRefCntBase*)***
  %48 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %47, align 8
  %49 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %48, i64 2
  %50 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %49, align 8
  call void %50(%class.SkRefCntBase* nonnull %46) #14
  br label %51

51:                                               ; preds = %5, %41, %45
  %52 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %24, align 8
  %53 = icmp eq %class.GrBackendSurfaceMutableStateImpl* %52, null
  br i1 %53, label %64, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %52, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw add i32* %55, i32 -1 acq_rel
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %64

58:                                               ; preds = %54
  %59 = bitcast %class.GrBackendSurfaceMutableStateImpl* %52 to %class.SkRefCntBase*
  %60 = bitcast %class.GrBackendSurfaceMutableStateImpl* %52 to void (%class.SkRefCntBase*)***
  %61 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %60, align 8
  %62 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %61, i64 2
  %63 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %62, align 8
  call void %63(%class.SkRefCntBase* nonnull %59) #14
  br label %64

64:                                               ; preds = %51, %54, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #14
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %9) #14
  ret i1 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpu11xferBarrierEP14GrRenderTarget17GrXferBarrierType(%class.GrVkGpu*, %class.GrRenderTarget* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %4 = alloca %struct.VkImageMemoryBarrier, align 8
  %5 = icmp eq i32 %2, 2
  %6 = select i1 %5, i32 524288, i32 16
  %7 = getelementptr inbounds %class.GrRenderTarget, %class.GrRenderTarget* %1, i64 0, i32 5
  %8 = bitcast %class.GrSurface* %7 to %class.GrVkAttachment**
  %9 = load %class.GrVkAttachment*, %class.GrVkAttachment** %8, align 8
  %10 = bitcast %struct.VkImageMemoryBarrier* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %10) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 72, i1 false)
  %11 = getelementptr inbounds %struct.VkImageMemoryBarrier, %struct.VkImageMemoryBarrier* %4, i64 0, i32 0
  store i32 45, i32* %11, align 8
  %12 = getelementptr inbounds %struct.VkImageMemoryBarrier, %struct.VkImageMemoryBarrier* %4, i64 0, i32 1
  store i8* null, i8** %12, align 8
  %13 = getelementptr inbounds %struct.VkImageMemoryBarrier, %struct.VkImageMemoryBarrier* %4, i64 0, i32 2
  store i32 256, i32* %13, align 8
  %14 = getelementptr inbounds %struct.VkImageMemoryBarrier, %struct.VkImageMemoryBarrier* %4, i64 0, i32 3
  store i32 %6, i32* %14, align 4
  %15 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %9, i64 0, i32 1, i32 3, i32 0
  %16 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %15, align 8
  %17 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 seq_cst, align 4
  %19 = getelementptr inbounds %struct.VkImageMemoryBarrier, %struct.VkImageMemoryBarrier* %4, i64 0, i32 4
  store i32 %18, i32* %19, align 8
  %20 = getelementptr inbounds %struct.VkImageMemoryBarrier, %struct.VkImageMemoryBarrier* %4, i64 0, i32 5
  store i32 %18, i32* %20, align 4
  %21 = getelementptr inbounds %struct.VkImageMemoryBarrier, %struct.VkImageMemoryBarrier* %4, i64 0, i32 6
  store i32 -1, i32* %21, align 8
  %22 = getelementptr inbounds %struct.VkImageMemoryBarrier, %struct.VkImageMemoryBarrier* %4, i64 0, i32 7
  store i32 -1, i32* %22, align 4
  %23 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %9, i64 0, i32 1, i32 1, i32 0
  %24 = bitcast %struct.VkImage_T** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %struct.VkImageMemoryBarrier, %struct.VkImageMemoryBarrier* %4, i64 0, i32 8
  %27 = bitcast %struct.VkImage_T** %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %9, i64 0, i32 1, i32 1, i32 7
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %struct.VkImageMemoryBarrier, %struct.VkImageMemoryBarrier* %4, i64 0, i32 9, i32 0
  store i32 1, i32* %30, align 8
  %31 = getelementptr inbounds %struct.VkImageMemoryBarrier, %struct.VkImageMemoryBarrier* %4, i64 0, i32 9, i32 1
  store i32 0, i32* %31, align 4
  %32 = getelementptr inbounds %struct.VkImageMemoryBarrier, %struct.VkImageMemoryBarrier* %4, i64 0, i32 9, i32 2
  store i32 %29, i32* %32, align 8
  %33 = getelementptr inbounds %struct.VkImageMemoryBarrier, %struct.VkImageMemoryBarrier* %4, i64 0, i32 9, i32 3
  store i32 0, i32* %33, align 4
  %34 = getelementptr inbounds %struct.VkImageMemoryBarrier, %struct.VkImageMemoryBarrier* %4, i64 0, i32 9, i32 4
  store i32 1, i32* %34, align 8
  %35 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 13
  %36 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %35, align 8
  %37 = icmp eq %class.GrVkPrimaryCommandBuffer* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %3
  %39 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %9, i64 0, i32 1, i32 5
  %40 = bitcast %"class.GrVkImage::Resource"** %39 to %class.GrManagedResource**
  %41 = load %class.GrManagedResource*, %class.GrManagedResource** %40, align 8
  %42 = select i1 %5, i32 1024, i32 128
  %43 = bitcast %class.GrVkPrimaryCommandBuffer* %36 to %class.GrVkCommandBuffer*
  call void @_ZN17GrVkCommandBuffer15pipelineBarrierEPK7GrVkGpuPK17GrManagedResourcejjbNS_11BarrierTypeEPv(%class.GrVkCommandBuffer* nonnull %43, %class.GrVkGpu* %0, %class.GrManagedResource* %41, i32 1024, i32 %42, i1 zeroext true, i32 1, i8* nonnull %10) #14
  br label %44

44:                                               ; preds = %3, %38
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %10) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpu20deleteBackendTextureERK16GrBackendTexture(%class.GrVkGpu*, %class.GrBackendTexture* dereferenceable(176)) unnamed_addr #0 align 2 {
  %3 = alloca %struct.GrVkImageInfo, align 8
  %4 = bitcast %struct.GrVkImageInfo* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %4) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 144, i1 false)
  %5 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 1, i32 5
  store i64 0, i64* %5, align 8
  %6 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 1, i32 6
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 2
  %8 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 36, i1 false) #14
  %9 = bitcast i32* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #14
  store i32 1, i32* %8, align 8
  %10 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 7
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 8
  store i32 -1, i32* %11, align 8
  %12 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 9
  store i8 0, i8* %12, align 4
  %13 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 11, i32 0
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 11, i32 2
  %15 = bitcast i64* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 36, i1 false) #14
  %16 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %3, i64 0, i32 12
  store i32 0, i32* %16, align 8
  %17 = call zeroext i1 @_ZNK16GrBackendTexture14getVkImageInfoEP13GrVkImageInfo(%class.GrBackendTexture* %1, %struct.GrVkImageInfo* nonnull %3) #14
  br i1 %17, label %18, label %19

18:                                               ; preds = %2
  call void @_ZN9GrVkImage16DestroyImageInfoEPK7GrVkGpuP13GrVkImageInfo(%class.GrVkGpu* %0, %struct.GrVkImageInfo* nonnull %3) #14
  br label %19

19:                                               ; preds = %18, %2
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %4) #14
  ret void
}

declare void @_ZN9GrVkImage16DestroyImageInfoEPK7GrVkGpuP13GrVkImageInfo(%class.GrVkGpu*, %struct.GrVkImageInfo*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7GrVkGpu7compileERK13GrProgramDescRK13GrProgramInfo(%class.GrVkGpu*, %class.GrProgramDesc* dereferenceable(160), %class.GrProgramInfo* dereferenceable(128)) unnamed_addr #0 align 2 {
  %4 = alloca %"struct.GrVkRenderPass::AttachmentsDescriptor", align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = bitcast %"struct.GrVkRenderPass::AttachmentsDescriptor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"struct.GrVkRenderPass::AttachmentsDescriptor", %"struct.GrVkRenderPass::AttachmentsDescriptor"* %4, i64 0, i32 3
  store i32 -1431655766, i32* %8, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %7, i8 0, i64 48, i1 false) #14
  %9 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #14
  store i32 -1431655766, i32* %5, align 4
  %10 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 3, i32 0
  %11 = load %class.GrVkCaps*, %class.GrVkCaps** %10, align 8
  call void @_ZN16GrVkRenderTarget32ReconstructAttachmentsDescriptorERK8GrVkCapsRK13GrProgramInfoPN14GrVkRenderPass21AttachmentsDescriptorEPNS6_15AttachmentFlagsE(%class.GrVkCaps* dereferenceable(1344) %11, %class.GrProgramInfo* dereferenceable(128) %2, %"struct.GrVkRenderPass::AttachmentsDescriptor"* nonnull %4, i32* nonnull %5) #14
  %12 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %2, i64 0, i32 11
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 3
  %15 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %2, i64 0, i32 4
  %16 = load i8, i8* %15, align 4, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %2, i64 0, i32 12
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %18
  %23 = load %class.GrVkCaps*, %class.GrVkCaps** %10, align 8
  %24 = getelementptr inbounds %class.GrVkCaps, %class.GrVkCaps* %23, i64 0, i32 28
  %25 = load i8, i8* %24, align 4, !range !2
  %26 = zext i8 %25 to i32
  br label %27

27:                                               ; preds = %3, %22, %18
  %28 = phi i32 [ 0, %18 ], [ 0, %3 ], [ %26, %22 ]
  %29 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 9
  %30 = load i32, i32* %5, align 4
  %31 = call %class.GrVkRenderPass* @_ZN20GrVkResourceProvider24findCompatibleRenderPassEPN14GrVkRenderPass21AttachmentsDescriptorENS0_15AttachmentFlagsENS0_19SelfDependencyFlagsENS0_15LoadFromResolveEP16GrResourceHandleINS_22CompatibleRPHandleKindEE(%class.GrVkResourceProvider* %29, %"struct.GrVkRenderPass::AttachmentsDescriptor"* nonnull %4, i32 %30, i32 %14, i32 %28, %class.GrResourceHandle.635* null) #14
  %32 = icmp eq %class.GrVkRenderPass* %31, null
  br i1 %32, label %54, label %33

33:                                               ; preds = %27
  %34 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #14
  store i32 -1431655766, i32* %6, align 4
  %35 = getelementptr inbounds %class.GrVkRenderPass, %class.GrVkRenderPass* %31, i64 0, i32 1
  %36 = load %struct.VkRenderPass_T*, %struct.VkRenderPass_T** %35, align 8
  %37 = call %class.GrVkPipelineState* @_ZN20GrVkResourceProvider35findOrCreateCompatiblePipelineStateERK13GrProgramDescRK13GrProgramInfoP14VkRenderPass_TPN27GrThreadSafePipelineBuilder5Stats18ProgramCacheResultE(%class.GrVkResourceProvider* %29, %class.GrProgramDesc* dereferenceable(160) %1, %class.GrProgramInfo* dereferenceable(128) %2, %struct.VkRenderPass_T* %36, i32* nonnull %6) #14
  %38 = icmp ne %class.GrVkPipelineState* %37, null
  %39 = load i32, i32* %6, align 4
  %40 = icmp ne i32 %39, 0
  %41 = and i1 %38, %40
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #14
  %42 = bitcast %class.GrVkRenderPass* %31 to %class.GrManagedResource*
  %43 = getelementptr inbounds %class.GrVkRenderPass, %class.GrVkRenderPass* %31, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw add i32* %43, i32 -1 acq_rel
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %54

46:                                               ; preds = %33
  %47 = bitcast %class.GrVkRenderPass* %31 to void (%class.GrManagedResource*)***
  %48 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %47, align 8
  %49 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %48, i64 4
  %50 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %49, align 8
  call void %50(%class.GrManagedResource* nonnull %42) #14
  %51 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %47, align 8
  %52 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %51, i64 1
  %53 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %52, align 8
  call void %53(%class.GrManagedResource* nonnull %42) #14
  br label %54

54:                                               ; preds = %27, %33, %46
  %55 = phi i1 [ %41, %33 ], [ %41, %46 ], [ false, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %7) #14
  ret i1 %55
}

declare void @_ZN16GrVkRenderTarget32ReconstructAttachmentsDescriptorERK8GrVkCapsRK13GrProgramInfoPN14GrVkRenderPass21AttachmentsDescriptorEPNS6_15AttachmentFlagsE(%class.GrVkCaps* dereferenceable(1344), %class.GrProgramInfo* dereferenceable(128), %"struct.GrVkRenderPass::AttachmentsDescriptor"*, i32*) local_unnamed_addr #2

declare %class.GrVkRenderPass* @_ZN20GrVkResourceProvider24findCompatibleRenderPassEPN14GrVkRenderPass21AttachmentsDescriptorENS0_15AttachmentFlagsENS0_19SelfDependencyFlagsENS0_15LoadFromResolveEP16GrResourceHandleINS_22CompatibleRPHandleKindEE(%class.GrVkResourceProvider*, %"struct.GrVkRenderPass::AttachmentsDescriptor"*, i32, i32, i32, %class.GrResourceHandle.635*) local_unnamed_addr #2

declare %class.GrVkPipelineState* @_ZN20GrVkResourceProvider35findOrCreateCompatiblePipelineStateERK13GrProgramDescRK13GrProgramInfoP14VkRenderPass_TPN27GrThreadSafePipelineBuilder5Stats18ProgramCacheResultE(%class.GrVkResourceProvider*, %class.GrProgramDesc* dereferenceable(160), %class.GrProgramInfo* dereferenceable(128), %struct.VkRenderPass_T*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7GrVkGpu22addBufferMemoryBarrierEPK17GrManagedResourcejjbP21VkBufferMemoryBarrier(%class.GrVkGpu*, %class.GrManagedResource*, i32, i32, i1 zeroext, %struct.VkBufferMemoryBarrier*) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 13
  %8 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %7, align 8
  %9 = icmp eq %class.GrVkPrimaryCommandBuffer* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %6
  %11 = bitcast %class.GrVkPrimaryCommandBuffer* %8 to %class.GrVkCommandBuffer*
  %12 = bitcast %struct.VkBufferMemoryBarrier* %5 to i8*
  tail call void @_ZN17GrVkCommandBuffer15pipelineBarrierEPK7GrVkGpuPK17GrManagedResourcejjbNS_11BarrierTypeEPv(%class.GrVkCommandBuffer* nonnull %11, %class.GrVkGpu* %0, %class.GrManagedResource* %1, i32 %2, i32 %3, i1 zeroext %4, i32 0, i8* %12) #14
  br label %13

13:                                               ; preds = %6, %10
  ret void
}

declare void @_ZN17GrVkCommandBuffer15pipelineBarrierEPK7GrVkGpuPK17GrManagedResourcejjbNS_11BarrierTypeEPv(%class.GrVkCommandBuffer*, %class.GrVkGpu*, %class.GrManagedResource*, i32, i32, i1 zeroext, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7GrVkGpu22addBufferMemoryBarrierEjjbP21VkBufferMemoryBarrier(%class.GrVkGpu*, i32, i32, i1 zeroext, %struct.VkBufferMemoryBarrier*) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 13
  %7 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %6, align 8
  %8 = icmp eq %class.GrVkPrimaryCommandBuffer* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %5
  %10 = bitcast %class.GrVkPrimaryCommandBuffer* %7 to %class.GrVkCommandBuffer*
  %11 = bitcast %struct.VkBufferMemoryBarrier* %4 to i8*
  tail call void @_ZN17GrVkCommandBuffer15pipelineBarrierEPK7GrVkGpuPK17GrManagedResourcejjbNS_11BarrierTypeEPv(%class.GrVkCommandBuffer* nonnull %10, %class.GrVkGpu* %0, %class.GrManagedResource* null, i32 %1, i32 %2, i1 zeroext %3, i32 0, i8* %11) #14
  br label %12

12:                                               ; preds = %5, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpu46prepareSurfacesForBackendAccessAndStateUpdatesE6SkSpanIP14GrSurfaceProxyEN9SkSurface20BackendSurfaceAccessEPK28GrBackendSurfaceMutableState(%class.GrVkGpu*, %class.GrSurfaceProxy**, i64, i32, %class.GrBackendSurfaceMutableState* readonly) unnamed_addr #0 align 2 {
  %6 = icmp eq i64 %2, 0
  br i1 %6, label %82, label %7

7:                                                ; preds = %5
  %8 = icmp eq i32 %3, 1
  %9 = icmp ne %class.GrBackendSurfaceMutableState* %4, null
  %10 = or i1 %8, %9
  br i1 %10, label %11, label %82

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %1, i64 %2
  %13 = getelementptr inbounds %class.GrBackendSurfaceMutableState, %class.GrBackendSurfaceMutableState* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %class.GrBackendSurfaceMutableState, %class.GrBackendSurfaceMutableState* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %15

15:                                               ; preds = %11, %79
  %16 = phi %class.GrSurfaceProxy** [ %1, %11 ], [ %80, %79 ]
  %17 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %16, align 8
  %18 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %17, i64 0, i32 2, i32 0
  %19 = load %class.GrSurface*, %class.GrSurface** %18, align 8
  %20 = icmp eq %class.GrSurface* %19, null
  br i1 %20, label %39, label %21

21:                                               ; preds = %15
  %22 = bitcast %class.GrSurface* %19 to %class.GrTexture* (%class.GrSurface*)***
  %23 = load %class.GrTexture* (%class.GrSurface*)**, %class.GrTexture* (%class.GrSurface*)*** %22, align 8
  %24 = getelementptr inbounds %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %23, i64 10
  %25 = load %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %24, align 8
  %26 = tail call %class.GrTexture* %25(%class.GrSurface* nonnull %19) #14
  %27 = icmp eq %class.GrTexture* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %class.GrTexture, %class.GrTexture* %26, i64 0, i32 5
  br label %47

30:                                               ; preds = %21
  %31 = load %class.GrSurface*, %class.GrSurface** %18, align 8
  %32 = icmp eq %class.GrSurface* %31, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %30
  %34 = bitcast %class.GrSurface* %31 to %class.GrRenderTarget* (%class.GrSurface*)***
  %35 = load %class.GrRenderTarget* (%class.GrSurface*)**, %class.GrRenderTarget* (%class.GrSurface*)*** %34, align 8
  %36 = getelementptr inbounds %class.GrRenderTarget* (%class.GrSurface*)*, %class.GrRenderTarget* (%class.GrSurface*)** %35, i64 12
  %37 = load %class.GrRenderTarget* (%class.GrSurface*)*, %class.GrRenderTarget* (%class.GrSurface*)** %36, align 8
  %38 = tail call %class.GrRenderTarget* %37(%class.GrSurface* nonnull %31) #14
  br label %39

39:                                               ; preds = %15, %30, %33
  %40 = phi %class.GrRenderTarget* [ %38, %33 ], [ null, %30 ], [ null, %15 ]
  %41 = getelementptr inbounds %class.GrRenderTarget, %class.GrRenderTarget* %40, i64 0, i32 5, i32 0, i32 1
  %42 = bitcast %class.GrIORef* %41 to %class.GrVkAttachment**
  %43 = load %class.GrVkAttachment*, %class.GrVkAttachment** %42, align 8
  %44 = icmp eq %class.GrVkAttachment* %43, null
  br i1 %44, label %45, label %51

45:                                               ; preds = %39
  %46 = getelementptr inbounds %class.GrRenderTarget, %class.GrRenderTarget* %40, i64 0, i32 5
  br label %47

47:                                               ; preds = %28, %45
  %48 = phi %class.GrSurface* [ %46, %45 ], [ %29, %28 ]
  %49 = bitcast %class.GrSurface* %48 to %class.GrVkAttachment**
  %50 = load %class.GrVkAttachment*, %class.GrVkAttachment** %49, align 8
  br label %51

51:                                               ; preds = %47, %39
  %52 = phi %class.GrVkAttachment* [ %43, %39 ], [ %50, %47 ]
  %53 = icmp eq %class.GrVkAttachment* %52, null
  %54 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %52, i64 0, i32 1
  %55 = select i1 %53, %class.GrVkImage* null, %class.GrVkImage* %54
  br i1 %9, label %56, label %78

56:                                               ; preds = %51
  %57 = load atomic i32, i32* %13 seq_cst, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %64

59:                                               ; preds = %56
  %60 = getelementptr inbounds %class.GrVkImage, %class.GrVkImage* %55, i64 0, i32 3, i32 0
  %61 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %60, align 8
  %62 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %61, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 seq_cst, align 4
  br label %64

64:                                               ; preds = %59, %56
  %65 = phi i32 [ %63, %59 ], [ %57, %56 ]
  %66 = tail call i32 @_ZN9GrVkImage29LayoutToPipelineSrcStageFlagsE13VkImageLayout(i32 %65) #14
  %67 = tail call i32 @_ZN9GrVkImage21LayoutToSrcAccessMaskE13VkImageLayout(i32 %65) #14
  %68 = getelementptr inbounds %class.GrVkImage, %class.GrVkImage* %55, i64 0, i32 3, i32 0
  %69 = load %class.GrBackendSurfaceMutableStateImpl*, %class.GrBackendSurfaceMutableStateImpl** %68, align 8
  %70 = getelementptr inbounds %class.GrBackendSurfaceMutableStateImpl, %class.GrBackendSurfaceMutableStateImpl* %69, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 seq_cst, align 4
  %72 = load atomic i32, i32* %14 seq_cst, align 4
  %73 = add i32 %71, 3
  %74 = add i32 %72, 3
  %75 = or i32 %74, %73
  %76 = icmp ult i32 %75, 2
  br i1 %76, label %79, label %77

77:                                               ; preds = %64
  tail call void @_ZN9GrVkImage27setImageLayoutAndQueueIndexEPK7GrVkGpu13VkImageLayoutjjbj(%class.GrVkImage* %55, %class.GrVkGpu* %0, i32 %65, i32 %67, i32 %66, i1 zeroext false, i32 %72) #14
  br label %79

78:                                               ; preds = %51
  tail call void @_ZN9GrVkImage17prepareForPresentEP7GrVkGpu(%class.GrVkImage* %55, %class.GrVkGpu* %0) #14
  br label %79

79:                                               ; preds = %77, %64, %78
  %80 = getelementptr inbounds %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %16, i64 1
  %81 = icmp eq %class.GrSurfaceProxy** %80, %12
  br i1 %81, label %82, label %15

82:                                               ; preds = %79, %7, %5
  ret void
}

declare void @_ZN9GrVkImage17prepareForPresentEP7GrVkGpu(%class.GrVkImage*, %class.GrVkGpu*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpu15addFinishedProcEPFvPvES0_(%class.GrVkGpu*, void (i8*)*, i8*) unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.142, align 8
  %5 = icmp eq void (i8*)* %1, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 24) #15, !noalias !22
  %8 = bitcast i8* %7 to i32*
  store i32 1, i32* %8, align 4, !noalias !22
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  %10 = bitcast i8* %9 to void (i8*)**
  store void (i8*)* %1, void (i8*)** %10, align 8, !noalias !22
  %11 = getelementptr inbounds i8, i8* %7, i64 16
  %12 = bitcast i8* %11 to i8**
  store i8* %2, i8** %12, align 8, !noalias !22
  %13 = ptrtoint i8* %7 to i64
  br label %14

14:                                               ; preds = %3, %6
  %15 = phi i64 [ %13, %6 ], [ 0, %3 ]
  %16 = bitcast %class.sk_sp.142* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16)
  %17 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 9
  %18 = bitcast %class.sk_sp.142* %4 to i64*
  store i64 %15, i64* %18, align 8
  call void @_ZN20GrVkResourceProvider37addFinishedProcToActiveCommandBuffersE5sk_spI18GrRefCntedCallbackE(%class.GrVkResourceProvider* %17, %class.sk_sp.142* nonnull %4) #14
  %19 = getelementptr inbounds %class.sk_sp.142, %class.sk_sp.142* %4, i64 0, i32 0
  %20 = load %class.GrRefCntedCallback*, %class.GrRefCntedCallback** %19, align 8
  %21 = icmp eq %class.GrRefCntedCallback* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %14
  %23 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %20, i64 0, i32 0
  %24 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 -1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %35

27:                                               ; preds = %22
  %28 = getelementptr inbounds %class.SkNVRefCnt.143, %class.SkNVRefCnt.143* %23, i64 2
  %29 = bitcast %class.SkNVRefCnt.143* %28 to void (i8*)**
  %30 = load void (i8*)*, void (i8*)** %29, align 8
  %31 = getelementptr inbounds %class.SkNVRefCnt.143, %class.SkNVRefCnt.143* %23, i64 4
  %32 = bitcast %class.SkNVRefCnt.143* %31 to i8**
  %33 = load i8*, i8** %32, align 8
  call void %30(i8* %33) #14
  %34 = bitcast %class.GrRefCntedCallback* %20 to i8*
  call void @_ZdlPv(i8* %34) #15
  br label %35

35:                                               ; preds = %27, %22, %14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  ret void
}

declare void @_ZN20GrVkResourceProvider37addFinishedProcToActiveCommandBuffersE5sk_spI18GrRefCntedCallbackE(%class.GrVkResourceProvider*, %class.sk_sp.142*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpu21takeOwnershipOfBufferE5sk_spI11GrGpuBufferE(%class.GrVkGpu* nocapture readonly, %class.sk_sp.295* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 13
  %4 = bitcast %class.GrVkPrimaryCommandBuffer** %3 to %class.GrVkCommandBuffer**
  %5 = load %class.GrVkCommandBuffer*, %class.GrVkCommandBuffer** %4, align 8
  %6 = getelementptr inbounds %class.sk_sp.295, %class.sk_sp.295* %1, i64 0, i32 0
  %7 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %6, align 8
  store %class.GrGpuBuffer* null, %class.GrGpuBuffer** %6, align 8
  %8 = icmp eq %class.GrGpuBuffer* %7, null
  %9 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %7, i64 0, i32 1
  %10 = ptrtoint %class.GrBuffer* %9 to i64
  %11 = select i1 %8, i64 0, i64 %10
  %12 = getelementptr inbounds %class.GrVkCommandBuffer, %class.GrVkCommandBuffer* %5, i64 0, i32 3, i32 0, i32 0, i64 128
  %13 = bitcast i8* %12 to %class.SkTArray.530*
  tail call void @_ZN8SkTArrayI5sk_spIK8GrBufferELb0EE12checkReallocEiNS4_11ReallocTypeE(%class.SkTArray.530* %13, i32 1, i32 1) #14
  %14 = bitcast i8* %12 to %class.sk_sp.531**
  %15 = load %class.sk_sp.531*, %class.sk_sp.531** %14, align 8
  %16 = getelementptr inbounds %class.GrVkCommandBuffer, %class.GrVkCommandBuffer* %5, i64 0, i32 3, i32 0, i32 0, i64 136
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = lshr i64 %18, 1
  %20 = and i64 %19, 2147483647
  %21 = getelementptr inbounds %class.sk_sp.531, %class.sk_sp.531* %15, i64 %20
  %22 = add i64 %18, 2
  %23 = and i64 %22, 4294967294
  %24 = and i64 %18, -4294967295
  %25 = or i64 %23, %24
  store i64 %25, i64* %17, align 8
  %26 = bitcast %class.sk_sp.531* %21 to i64*
  store i64 %11, i64* %26, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7GrVkGpu13onSubmitToGpuEb(%class.GrVkGpu*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = xor i1 %1, true
  %4 = zext i1 %3 to i32
  %5 = tail call zeroext i1 @_ZN7GrVkGpu19submitCommandBufferENS_9SyncQueueE(%class.GrVkGpu* %0, i32 %4)
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpu24finishOutstandingGpuWorkEv(%class.GrVkGpu*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 1, i32 0
  %3 = load %struct.GrVkInterface*, %struct.GrVkInterface** %2, align 8
  %4 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %3, i64 0, i32 1, i32 17, i32 0
  %5 = load i32 (%struct.VkQueue_T*)*, i32 (%struct.VkQueue_T*)** %4, align 8
  %6 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 7
  %7 = load %struct.VkQueue_T*, %struct.VkQueue_T** %6, align 8
  %8 = tail call i32 %5(%struct.VkQueue_T* %7) #14
  %9 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 3, i32 0
  %10 = load %class.GrVkCaps*, %class.GrVkCaps** %9, align 8
  %11 = getelementptr inbounds %class.GrVkCaps, %class.GrVkCaps* %10, i64 0, i32 6
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 9
  tail call void @_ZN20GrVkResourceProvider26forceSyncAllCommandBuffersEv(%class.GrVkResourceProvider* %15) #14
  br label %16

16:                                               ; preds = %1, %14
  ret void
}

declare void @_ZN20GrVkResourceProvider26forceSyncAllCommandBuffersEv(%class.GrVkResourceProvider*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpu24onReportSubmitHistogramsEv(%class.GrVkGpu* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 2, i32 0
  %3 = load %class.GrVkMemoryAllocator*, %class.GrVkMemoryAllocator** %2, align 8
  %4 = bitcast %class.GrVkMemoryAllocator* %3 to i64 (%class.GrVkMemoryAllocator*)***
  %5 = load i64 (%class.GrVkMemoryAllocator*)**, i64 (%class.GrVkMemoryAllocator*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%class.GrVkMemoryAllocator*)*, i64 (%class.GrVkMemoryAllocator*)** %5, i64 17
  %7 = load i64 (%class.GrVkMemoryAllocator*)*, i64 (%class.GrVkMemoryAllocator*)** %6, align 8
  %8 = tail call i64 %7(%class.GrVkMemoryAllocator* %3) #14
  %9 = load %class.GrVkMemoryAllocator*, %class.GrVkMemoryAllocator** %2, align 8
  %10 = bitcast %class.GrVkMemoryAllocator* %9 to i64 (%class.GrVkMemoryAllocator*)***
  %11 = load i64 (%class.GrVkMemoryAllocator*)**, i64 (%class.GrVkMemoryAllocator*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%class.GrVkMemoryAllocator*)*, i64 (%class.GrVkMemoryAllocator*)** %11, i64 16
  %13 = load i64 (%class.GrVkMemoryAllocator*)*, i64 (%class.GrVkMemoryAllocator*)** %12, align 8
  %14 = tail call i64 %13(%class.GrVkMemoryAllocator* %9) #14
  %15 = icmp eq i64 %8, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %1
  %17 = mul i64 %14, 100
  %18 = udiv i64 %17, %8
  %19 = trunc i64 %18 to i32
  tail call void @_ZN4skia20HistogramExactLinearEPNSt3__16atomicImEEPKcii(%"struct.std::__1::atomic.187"* nonnull @_ZZN7GrVkGpu24onReportSubmitHistogramsEvE24atomic_histogram_pointer, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.9, i64 0, i64 0), i32 %19, i32 101) #14
  br label %20

20:                                               ; preds = %1, %16
  %21 = lshr i64 %8, 10
  %22 = trunc i64 %21 to i32
  tail call void @_ZN4skia17HistogramMemoryKBEPNSt3__16atomicImEEPKci(%"struct.std::__1::atomic.187"* nonnull @_ZZN7GrVkGpu24onReportSubmitHistogramsEvE24atomic_histogram_pointer_0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10, i64 0, i64 0), i32 %22) #14
  ret void
}

declare void @_ZN4skia20HistogramExactLinearEPNSt3__16atomicImEEPKcii(%"struct.std::__1::atomic.187"*, i8*, i32, i32) local_unnamed_addr #2

declare void @_ZN4skia17HistogramMemoryKBEPNSt3__16atomicImEEPKci(%"struct.std::__1::atomic.187"*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpu22copySurfaceAsCopyImageEP9GrSurfaceS1_P9GrVkImageS3_RK7SkIRectRK8SkIPoint(%class.GrVkGpu*, %class.GrSurface*, %class.GrSurface*, %class.GrVkImage*, %class.GrVkImage*, %struct.SkIRect* nocapture readonly dereferenceable(16), %struct.SkIPoint* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %8 = alloca %struct.VkImageCopy, align 16
  %9 = alloca { i64, i64 }, align 8
  %10 = bitcast { i64, i64 }* %9 to %struct.SkIRect*
  %11 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 13
  %12 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %11, align 8
  %13 = icmp eq %class.GrVkPrimaryCommandBuffer* %12, null
  br i1 %13, label %152, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %2, i64 0, i32 3
  %16 = load i8, i8* %15, align 4, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %1, i64 0, i32 3
  %20 = load i8, i8* %19, align 4, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %18
  tail call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 2141, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.11, i64 0, i64 0)) #14
  br label %152

23:                                               ; preds = %18, %14
  tail call void @_ZN9GrVkImage27setImageLayoutAndQueueIndexEPK7GrVkGpu13VkImageLayoutjjbj(%class.GrVkImage* %3, %class.GrVkGpu* %0, i32 7, i32 4096, i32 4096, i1 zeroext false, i32 -1) #14
  tail call void @_ZN9GrVkImage27setImageLayoutAndQueueIndexEPK7GrVkGpu13VkImageLayoutjjbj(%class.GrVkImage* %4, %class.GrVkGpu* %0, i32 6, i32 2048, i32 4096, i1 zeroext false, i32 -1) #14
  %24 = bitcast %struct.VkImageCopy* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %24) #14
  %25 = bitcast %struct.VkImageCopy* %8 to <4 x i32>*
  store <4 x i32> <i32 1, i32 0, i32 0, i32 1>, <4 x i32>* %25, align 16
  %26 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %struct.VkImageCopy, %struct.VkImageCopy* %8, i64 0, i32 1, i32 0
  store i32 %27, i32* %30, align 16
  %31 = getelementptr inbounds %struct.VkImageCopy, %struct.VkImageCopy* %8, i64 0, i32 1, i32 1
  store i32 %29, i32* %31, align 4
  %32 = getelementptr inbounds %struct.VkImageCopy, %struct.VkImageCopy* %8, i64 0, i32 1, i32 2
  %33 = bitcast i32* %32 to <4 x i32>*
  store <4 x i32> <i32 0, i32 1, i32 0, i32 0>, <4 x i32>* %33, align 8
  %34 = getelementptr inbounds %struct.VkImageCopy, %struct.VkImageCopy* %8, i64 0, i32 2, i32 3
  store i32 1, i32* %34, align 4
  %35 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %6, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %6, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %struct.VkImageCopy, %struct.VkImageCopy* %8, i64 0, i32 3, i32 0
  store i32 %36, i32* %39, align 4
  %40 = getelementptr inbounds %struct.VkImageCopy, %struct.VkImageCopy* %8, i64 0, i32 3, i32 1
  store i32 %38, i32* %40, align 4
  %41 = getelementptr inbounds %struct.VkImageCopy, %struct.VkImageCopy* %8, i64 0, i32 3, i32 2
  store i32 0, i32* %41, align 4
  %42 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = sub i32 %43, %27
  %45 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 3
  %46 = load i32, i32* %45, align 4
  %47 = sub i32 %46, %29
  %48 = getelementptr inbounds %struct.VkImageCopy, %struct.VkImageCopy* %8, i64 0, i32 4, i32 0
  store i32 %44, i32* %48, align 8
  %49 = getelementptr inbounds %struct.VkImageCopy, %struct.VkImageCopy* %8, i64 0, i32 4, i32 1
  store i32 %47, i32* %49, align 4
  %50 = getelementptr inbounds %struct.VkImageCopy, %struct.VkImageCopy* %8, i64 0, i32 4, i32 2
  store i32 1, i32* %50, align 8
  %51 = bitcast %class.GrVkPrimaryCommandBuffer** %11 to %class.GrVkCommandBuffer**
  %52 = load %class.GrVkCommandBuffer*, %class.GrVkCommandBuffer** %51, align 8
  %53 = icmp eq %class.GrSurface* %2, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %23
  %55 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw add i32* %55, i32 1 monotonic, !noalias !25
  %57 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %2, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = atomicrmw add i32* %57, i32 1 monotonic
  br label %59

59:                                               ; preds = %23, %54
  %60 = getelementptr inbounds %class.GrVkCommandBuffer, %class.GrVkCommandBuffer* %52, i64 0, i32 4, i32 0, i32 0, i64 128
  %61 = bitcast i8* %60 to %class.SkTArray.534*
  %62 = ptrtoint %class.GrSurface* %2 to i64
  tail call void @_ZN8SkTArrayI5gr_spIK9GrSurfaceXadL_ZNK7GrIORefI13GrGpuResourceE21addCommandBufferUsageEvEEXadL_ZNKS5_24removeCommandBufferUsageEvEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.534* %61, i32 1, i32 1) #14
  %63 = bitcast i8* %60 to %class.gr_sp.535**
  %64 = load %class.gr_sp.535*, %class.gr_sp.535** %63, align 8
  %65 = getelementptr inbounds %class.GrVkCommandBuffer, %class.GrVkCommandBuffer* %52, i64 0, i32 4, i32 0, i32 0, i64 136
  %66 = bitcast i8* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = lshr i64 %67, 1
  %69 = and i64 %68, 2147483647
  %70 = getelementptr inbounds %class.gr_sp.535, %class.gr_sp.535* %64, i64 %69
  %71 = add i64 %67, 2
  %72 = and i64 %71, 4294967294
  %73 = and i64 %67, -4294967295
  %74 = or i64 %72, %73
  store i64 %74, i64* %66, align 8
  %75 = bitcast %class.gr_sp.535* %70 to i64*
  store i64 %62, i64* %75, align 8
  br i1 %53, label %84, label %76

76:                                               ; preds = %59
  %77 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %2, i64 0, i32 0, i32 1
  %78 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = atomicrmw add i32* %78, i32 -1 acq_rel
  %80 = icmp eq i32 %79, 1
  br i1 %80, label %81, label %84

81:                                               ; preds = %76
  %82 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %77, i64 -1
  %83 = bitcast %class.GrIORef* %82 to %class.GrGpuResource*
  tail call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %83, i32 0) #14
  br label %84

84:                                               ; preds = %59, %76, %81
  %85 = load %class.GrVkCommandBuffer*, %class.GrVkCommandBuffer** %51, align 8
  %86 = icmp eq %class.GrSurface* %1, null
  br i1 %86, label %92, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = atomicrmw add i32* %88, i32 1 monotonic, !noalias !28
  %90 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %1, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = atomicrmw add i32* %90, i32 1 monotonic
  br label %92

92:                                               ; preds = %84, %87
  %93 = getelementptr inbounds %class.GrVkCommandBuffer, %class.GrVkCommandBuffer* %85, i64 0, i32 4, i32 0, i32 0, i64 128
  %94 = bitcast i8* %93 to %class.SkTArray.534*
  %95 = ptrtoint %class.GrSurface* %1 to i64
  tail call void @_ZN8SkTArrayI5gr_spIK9GrSurfaceXadL_ZNK7GrIORefI13GrGpuResourceE21addCommandBufferUsageEvEEXadL_ZNKS5_24removeCommandBufferUsageEvEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.534* %94, i32 1, i32 1) #14
  %96 = bitcast i8* %93 to %class.gr_sp.535**
  %97 = load %class.gr_sp.535*, %class.gr_sp.535** %96, align 8
  %98 = getelementptr inbounds %class.GrVkCommandBuffer, %class.GrVkCommandBuffer* %85, i64 0, i32 4, i32 0, i32 0, i64 136
  %99 = bitcast i8* %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = lshr i64 %100, 1
  %102 = and i64 %101, 2147483647
  %103 = getelementptr inbounds %class.gr_sp.535, %class.gr_sp.535* %97, i64 %102
  %104 = add i64 %100, 2
  %105 = and i64 %104, 4294967294
  %106 = and i64 %100, -4294967295
  %107 = or i64 %105, %106
  store i64 %107, i64* %99, align 8
  %108 = bitcast %class.gr_sp.535* %103 to i64*
  store i64 %95, i64* %108, align 8
  br i1 %86, label %117, label %109

109:                                              ; preds = %92
  %110 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %1, i64 0, i32 0, i32 1
  %111 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %110, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = atomicrmw add i32* %111, i32 -1 acq_rel
  %113 = icmp eq i32 %112, 1
  br i1 %113, label %114, label %117

114:                                              ; preds = %109
  %115 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %110, i64 -1
  %116 = bitcast %class.GrIORef* %115 to %class.GrGpuResource*
  tail call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %116, i32 0) #14
  br label %117

117:                                              ; preds = %92, %109, %114
  %118 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %11, align 8
  call void @_ZN24GrVkPrimaryCommandBuffer9copyImageEPK7GrVkGpuP9GrVkImage13VkImageLayoutS4_S5_jPK11VkImageCopy(%class.GrVkPrimaryCommandBuffer* %118, %class.GrVkGpu* %0, %class.GrVkImage* %4, i32 6, %class.GrVkImage* %3, i32 7, i32 1, %struct.VkImageCopy* nonnull %8) #14
  %119 = bitcast { i64, i64 }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %119) #14
  %120 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %121 = load i32, i32* %35, align 4
  %122 = load i32, i32* %37, align 4
  %123 = load i32, i32* %42, align 4
  %124 = load i32, i32* %26, align 4
  %125 = sub i32 %123, %124
  %126 = load i32, i32* %45, align 4
  %127 = load i32, i32* %28, align 4
  %128 = sub i32 %126, %127
  %129 = sext i32 %121 to i64
  %130 = sext i32 %125 to i64
  %131 = add nsw i64 %130, %129
  %132 = icmp slt i64 %131, 2147483647
  %133 = select i1 %132, i64 %131, i64 2147483647
  %134 = icmp sgt i64 %133, -2147483647
  %135 = select i1 %134, i64 %133, i64 -2147483647
  %136 = sext i32 %122 to i64
  %137 = sext i32 %128 to i64
  %138 = add nsw i64 %137, %136
  %139 = icmp slt i64 %138, 2147483647
  %140 = select i1 %139, i64 %138, i64 2147483647
  %141 = icmp sgt i64 %140, -2147483647
  %142 = select i1 %141, i64 %140, i64 -2147483647
  %143 = zext i32 %122 to i64
  %144 = shl nuw i64 %143, 32
  %145 = zext i32 %121 to i64
  %146 = or i64 %144, %145
  %147 = shl nsw i64 %142, 32
  %148 = and i64 %135, 4294967295
  %149 = or i64 %147, %148
  %150 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  store i64 %146, i64* %150, align 8
  store i64 %149, i64* %120, align 8
  %151 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 0
  call void @_ZNK5GrGpu17didWriteToSurfaceEP9GrSurface15GrSurfaceOriginPK7SkIRectj(%class.GrGpu* %151, %class.GrSurface* %1, i32 0, %struct.SkIRect* nonnull %10, i32 1) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %119) #14
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %24) #14
  br label %152

152:                                              ; preds = %7, %117, %22
  ret void
}

declare void @_ZN24GrVkPrimaryCommandBuffer9copyImageEPK7GrVkGpuP9GrVkImage13VkImageLayoutS4_S5_jPK11VkImageCopy(%class.GrVkPrimaryCommandBuffer*, %class.GrVkGpu*, %class.GrVkImage*, i32, %class.GrVkImage*, i32, i32, %struct.VkImageCopy*) local_unnamed_addr #2

declare void @_ZNK5GrGpu17didWriteToSurfaceEP9GrSurface15GrSurfaceOriginPK7SkIRectj(%class.GrGpu*, %class.GrSurface*, i32, %struct.SkIRect*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpu17copySurfaceAsBlitEP9GrSurfaceS1_P9GrVkImageS3_RK7SkIRectRK8SkIPoint(%class.GrVkGpu*, %class.GrSurface*, %class.GrSurface*, %class.GrVkImage*, %class.GrVkImage*, %struct.SkIRect* nocapture readonly dereferenceable(16), %struct.SkIPoint* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %8 = alloca { i64, i64 }, align 8
  %9 = bitcast { i64, i64 }* %8 to %struct.SkIRect*
  %10 = alloca %struct.VkImageBlit, align 16
  %11 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 13
  %12 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %11, align 8
  %13 = icmp eq %class.GrVkPrimaryCommandBuffer* %12, null
  br i1 %13, label %149, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %2, i64 0, i32 3
  %16 = load i8, i8* %15, align 4, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %1, i64 0, i32 3
  %20 = load i8, i8* %19, align 4, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %18
  tail call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 2204, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.11, i64 0, i64 0)) #14
  br label %149

23:                                               ; preds = %18, %14
  tail call void @_ZN9GrVkImage27setImageLayoutAndQueueIndexEPK7GrVkGpu13VkImageLayoutjjbj(%class.GrVkImage* %3, %class.GrVkGpu* %0, i32 7, i32 4096, i32 4096, i1 zeroext false, i32 -1) #14
  tail call void @_ZN9GrVkImage27setImageLayoutAndQueueIndexEPK7GrVkGpu13VkImageLayoutjjbj(%class.GrVkImage* %4, %class.GrVkGpu* %0, i32 6, i32 2048, i32 4096, i1 zeroext false, i32 -1) #14
  %24 = bitcast { i64, i64 }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #14
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  %26 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %6, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %6, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = sub i32 %31, %33
  %35 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 3
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = sub i32 %36, %38
  %40 = sext i32 %27 to i64
  %41 = sext i32 %34 to i64
  %42 = add nsw i64 %41, %40
  %43 = icmp slt i64 %42, 2147483647
  %44 = select i1 %43, i64 %42, i64 2147483647
  %45 = icmp sgt i64 %44, -2147483647
  %46 = select i1 %45, i64 %44, i64 -2147483647
  %47 = sext i32 %29 to i64
  %48 = sext i32 %39 to i64
  %49 = add nsw i64 %48, %47
  %50 = icmp slt i64 %49, 2147483647
  %51 = select i1 %50, i64 %49, i64 2147483647
  %52 = icmp sgt i64 %51, -2147483647
  %53 = select i1 %52, i64 %51, i64 -2147483647
  %54 = zext i32 %29 to i64
  %55 = shl nuw i64 %54, 32
  %56 = zext i32 %27 to i64
  %57 = or i64 %55, %56
  %58 = shl nsw i64 %53, 32
  %59 = and i64 %46, 4294967295
  %60 = or i64 %58, %59
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 0
  store i64 %57, i64* %61, align 8
  store i64 %60, i64* %25, align 8
  %62 = bitcast %struct.VkImageBlit* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %62) #14
  %63 = bitcast %struct.VkImageBlit* %10 to <4 x i32>*
  store <4 x i32> <i32 1, i32 0, i32 0, i32 1>, <4 x i32>* %63, align 16
  %64 = getelementptr inbounds %struct.VkImageBlit, %struct.VkImageBlit* %10, i64 0, i32 1, i64 0, i32 0
  store i32 %33, i32* %64, align 16
  %65 = getelementptr inbounds %struct.VkImageBlit, %struct.VkImageBlit* %10, i64 0, i32 1, i64 0, i32 1
  store i32 %38, i32* %65, align 4
  %66 = getelementptr inbounds %struct.VkImageBlit, %struct.VkImageBlit* %10, i64 0, i32 1, i64 0, i32 2
  store i32 0, i32* %66, align 8
  %67 = getelementptr inbounds %struct.VkImageBlit, %struct.VkImageBlit* %10, i64 0, i32 1, i64 1, i32 0
  store i32 %31, i32* %67, align 4
  %68 = getelementptr inbounds %struct.VkImageBlit, %struct.VkImageBlit* %10, i64 0, i32 1, i64 1, i32 1
  store i32 %36, i32* %68, align 4
  %69 = getelementptr inbounds %struct.VkImageBlit, %struct.VkImageBlit* %10, i64 0, i32 1, i64 1, i32 2
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %70, align 4
  %71 = getelementptr inbounds %struct.VkImageBlit, %struct.VkImageBlit* %10, i64 0, i32 2, i32 3
  store i32 1, i32* %71, align 4
  %72 = getelementptr inbounds %struct.VkImageBlit, %struct.VkImageBlit* %10, i64 0, i32 3, i64 0, i32 0
  store i32 %27, i32* %72, align 8
  %73 = getelementptr inbounds %struct.VkImageBlit, %struct.VkImageBlit* %10, i64 0, i32 3, i64 0, i32 1
  store i32 %29, i32* %73, align 4
  %74 = getelementptr inbounds %struct.VkImageBlit, %struct.VkImageBlit* %10, i64 0, i32 3, i64 0, i32 2
  store i32 0, i32* %74, align 8
  %75 = trunc i64 %46 to i32
  %76 = trunc i64 %53 to i32
  %77 = getelementptr inbounds %struct.VkImageBlit, %struct.VkImageBlit* %10, i64 0, i32 3, i64 1, i32 0
  store i32 %75, i32* %77, align 4
  %78 = getelementptr inbounds %struct.VkImageBlit, %struct.VkImageBlit* %10, i64 0, i32 3, i64 1, i32 1
  store i32 %76, i32* %78, align 4
  %79 = getelementptr inbounds %struct.VkImageBlit, %struct.VkImageBlit* %10, i64 0, i32 3, i64 1, i32 2
  store i32 1, i32* %79, align 4
  %80 = bitcast %class.GrVkPrimaryCommandBuffer** %11 to %class.GrVkCommandBuffer**
  %81 = load %class.GrVkCommandBuffer*, %class.GrVkCommandBuffer** %80, align 8
  %82 = icmp eq %class.GrSurface* %2, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %23
  %84 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = atomicrmw add i32* %84, i32 1 monotonic, !noalias !31
  %86 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %2, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw add i32* %86, i32 1 monotonic
  br label %88

88:                                               ; preds = %23, %83
  %89 = getelementptr inbounds %class.GrVkCommandBuffer, %class.GrVkCommandBuffer* %81, i64 0, i32 4, i32 0, i32 0, i64 128
  %90 = bitcast i8* %89 to %class.SkTArray.534*
  %91 = ptrtoint %class.GrSurface* %2 to i64
  tail call void @_ZN8SkTArrayI5gr_spIK9GrSurfaceXadL_ZNK7GrIORefI13GrGpuResourceE21addCommandBufferUsageEvEEXadL_ZNKS5_24removeCommandBufferUsageEvEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.534* %90, i32 1, i32 1) #14
  %92 = bitcast i8* %89 to %class.gr_sp.535**
  %93 = load %class.gr_sp.535*, %class.gr_sp.535** %92, align 8
  %94 = getelementptr inbounds %class.GrVkCommandBuffer, %class.GrVkCommandBuffer* %81, i64 0, i32 4, i32 0, i32 0, i64 136
  %95 = bitcast i8* %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = lshr i64 %96, 1
  %98 = and i64 %97, 2147483647
  %99 = getelementptr inbounds %class.gr_sp.535, %class.gr_sp.535* %93, i64 %98
  %100 = add i64 %96, 2
  %101 = and i64 %100, 4294967294
  %102 = and i64 %96, -4294967295
  %103 = or i64 %101, %102
  store i64 %103, i64* %95, align 8
  %104 = bitcast %class.gr_sp.535* %99 to i64*
  store i64 %91, i64* %104, align 8
  br i1 %82, label %113, label %105

105:                                              ; preds = %88
  %106 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %2, i64 0, i32 0, i32 1
  %107 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %106, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = atomicrmw add i32* %107, i32 -1 acq_rel
  %109 = icmp eq i32 %108, 1
  br i1 %109, label %110, label %113

110:                                              ; preds = %105
  %111 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %106, i64 -1
  %112 = bitcast %class.GrIORef* %111 to %class.GrGpuResource*
  tail call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %112, i32 0) #14
  br label %113

113:                                              ; preds = %88, %105, %110
  %114 = load %class.GrVkCommandBuffer*, %class.GrVkCommandBuffer** %80, align 8
  %115 = icmp eq %class.GrSurface* %1, null
  br i1 %115, label %121, label %116

116:                                              ; preds = %113
  %117 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = atomicrmw add i32* %117, i32 1 monotonic, !noalias !34
  %119 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %1, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = atomicrmw add i32* %119, i32 1 monotonic
  br label %121

121:                                              ; preds = %113, %116
  %122 = getelementptr inbounds %class.GrVkCommandBuffer, %class.GrVkCommandBuffer* %114, i64 0, i32 4, i32 0, i32 0, i64 128
  %123 = bitcast i8* %122 to %class.SkTArray.534*
  %124 = ptrtoint %class.GrSurface* %1 to i64
  tail call void @_ZN8SkTArrayI5gr_spIK9GrSurfaceXadL_ZNK7GrIORefI13GrGpuResourceE21addCommandBufferUsageEvEEXadL_ZNKS5_24removeCommandBufferUsageEvEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.534* %123, i32 1, i32 1) #14
  %125 = bitcast i8* %122 to %class.gr_sp.535**
  %126 = load %class.gr_sp.535*, %class.gr_sp.535** %125, align 8
  %127 = getelementptr inbounds %class.GrVkCommandBuffer, %class.GrVkCommandBuffer* %114, i64 0, i32 4, i32 0, i32 0, i64 136
  %128 = bitcast i8* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = lshr i64 %129, 1
  %131 = and i64 %130, 2147483647
  %132 = getelementptr inbounds %class.gr_sp.535, %class.gr_sp.535* %126, i64 %131
  %133 = add i64 %129, 2
  %134 = and i64 %133, 4294967294
  %135 = and i64 %129, -4294967295
  %136 = or i64 %134, %135
  store i64 %136, i64* %128, align 8
  %137 = bitcast %class.gr_sp.535* %132 to i64*
  store i64 %124, i64* %137, align 8
  br i1 %115, label %146, label %138

138:                                              ; preds = %121
  %139 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %1, i64 0, i32 0, i32 1
  %140 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %139, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = atomicrmw add i32* %140, i32 -1 acq_rel
  %142 = icmp eq i32 %141, 1
  br i1 %142, label %143, label %146

143:                                              ; preds = %138
  %144 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %139, i64 -1
  %145 = bitcast %class.GrIORef* %144 to %class.GrGpuResource*
  tail call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %145, i32 0) #14
  br label %146

146:                                              ; preds = %121, %138, %143
  %147 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %11, align 8
  call void @_ZN24GrVkPrimaryCommandBuffer9blitImageEPK7GrVkGpuRK9GrVkImageS5_jPK11VkImageBlit8VkFilter(%class.GrVkPrimaryCommandBuffer* %147, %class.GrVkGpu* %0, %class.GrVkImage* dereferenceable(184) %4, %class.GrVkImage* dereferenceable(184) %3, i32 1, %struct.VkImageBlit* nonnull %10, i32 0) #14
  %148 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 0
  call void @_ZNK5GrGpu17didWriteToSurfaceEP9GrSurface15GrSurfaceOriginPK7SkIRectj(%class.GrGpu* %148, %class.GrSurface* %1, i32 0, %struct.SkIRect* nonnull %9, i32 1) #14
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %62) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #14
  br label %149

149:                                              ; preds = %7, %146, %22
  ret void
}

declare void @_ZN24GrVkPrimaryCommandBuffer9blitImageEPK7GrVkGpuRK9GrVkImageS5_jPK11VkImageBlit8VkFilter(%class.GrVkPrimaryCommandBuffer*, %class.GrVkGpu*, %class.GrVkImage* dereferenceable(184), %class.GrVkImage* dereferenceable(184), i32, %struct.VkImageBlit*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpu20copySurfaceAsResolveEP9GrSurfaceS1_RK7SkIRectRK8SkIPoint(%class.GrVkGpu*, %class.GrSurface*, %class.GrSurface*, %struct.SkIRect* nocapture readonly dereferenceable(16), %struct.SkIPoint* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %struct.SkIRect*
  %8 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %2, i64 0, i32 3
  %9 = load i8, i8* %8, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %1, i64 0, i32 3
  %13 = load i8, i8* %12, align 4, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %11
  tail call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 2249, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.11, i64 0, i64 0)) #14
  br label %62

16:                                               ; preds = %11, %5
  %17 = bitcast %class.GrSurface* %2 to %class.GrRenderTarget* (%class.GrSurface*)***
  %18 = load %class.GrRenderTarget* (%class.GrSurface*)**, %class.GrRenderTarget* (%class.GrSurface*)*** %17, align 8
  %19 = getelementptr inbounds %class.GrRenderTarget* (%class.GrSurface*)*, %class.GrRenderTarget* (%class.GrSurface*)** %18, i64 12
  %20 = load %class.GrRenderTarget* (%class.GrSurface*)*, %class.GrRenderTarget* (%class.GrSurface*)** %19, align 8
  %21 = tail call %class.GrRenderTarget* %20(%class.GrSurface* %2) #14
  %22 = bitcast %class.GrRenderTarget* %21 to %class.GrVkRenderTarget*
  tail call void @_ZN7GrVkGpu12resolveImageEP9GrSurfaceP16GrVkRenderTargetRK7SkIRectRK8SkIPoint(%class.GrVkGpu* %0, %class.GrSurface* %1, %class.GrVkRenderTarget* %22, %struct.SkIRect* dereferenceable(16) %3, %struct.SkIPoint* dereferenceable(8) %4)
  %23 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #14
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %25 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %4, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %4, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = sub i32 %30, %32
  %34 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 3
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = sub i32 %35, %37
  %39 = sext i32 %26 to i64
  %40 = sext i32 %33 to i64
  %41 = add nsw i64 %40, %39
  %42 = icmp slt i64 %41, 2147483647
  %43 = select i1 %42, i64 %41, i64 2147483647
  %44 = icmp sgt i64 %43, -2147483647
  %45 = select i1 %44, i64 %43, i64 -2147483647
  %46 = sext i32 %28 to i64
  %47 = sext i32 %38 to i64
  %48 = add nsw i64 %47, %46
  %49 = icmp slt i64 %48, 2147483647
  %50 = select i1 %49, i64 %48, i64 2147483647
  %51 = icmp sgt i64 %50, -2147483647
  %52 = select i1 %51, i64 %50, i64 -2147483647
  %53 = zext i32 %28 to i64
  %54 = shl nuw i64 %53, 32
  %55 = zext i32 %26 to i64
  %56 = or i64 %54, %55
  %57 = shl nsw i64 %52, 32
  %58 = and i64 %45, 4294967295
  %59 = or i64 %57, %58
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 %56, i64* %60, align 8
  store i64 %59, i64* %24, align 8
  %61 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 0
  call void @_ZNK5GrGpu17didWriteToSurfaceEP9GrSurface15GrSurfaceOriginPK7SkIRectj(%class.GrGpu* %61, %class.GrSurface* %1, i32 0, %struct.SkIRect* nonnull %7, i32 1) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #14
  br label %62

62:                                               ; preds = %16, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7GrVkGpu13onCopySurfaceEP9GrSurfaceS1_RK7SkIRectRK8SkIPoint(%class.GrVkGpu*, %class.GrSurface*, %class.GrSurface*, %struct.SkIRect* nocapture readonly dereferenceable(16), %struct.SkIPoint* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %2, i64 0, i32 3
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %1, i64 0, i32 3
  %11 = load i8, i8* %10, align 4, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %9
  tail call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 2271, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.11, i64 0, i64 0)) #14
  br label %156

14:                                               ; preds = %9, %5
  %15 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 3, i32 0
  %16 = load %class.GrVkCaps*, %class.GrVkCaps** %15, align 8
  %17 = getelementptr inbounds %class.GrVkCaps, %class.GrVkCaps* %16, i64 0, i32 28
  %18 = load i8, i8* %17, align 4, !range !2
  %19 = icmp ne i8 %18, 0
  %20 = bitcast %class.GrSurface* %1 to %class.GrRenderTarget* (%class.GrSurface*)***
  %21 = load %class.GrRenderTarget* (%class.GrSurface*)**, %class.GrRenderTarget* (%class.GrSurface*)*** %20, align 8
  %22 = getelementptr inbounds %class.GrRenderTarget* (%class.GrSurface*)*, %class.GrRenderTarget* (%class.GrSurface*)** %21, i64 12
  %23 = load %class.GrRenderTarget* (%class.GrSurface*)*, %class.GrRenderTarget* (%class.GrSurface*)** %22, align 8
  %24 = tail call %class.GrRenderTarget* %23(%class.GrSurface* %1) #14
  %25 = icmp eq %class.GrRenderTarget* %24, null
  br i1 %25, label %50, label %26

26:                                               ; preds = %14
  %27 = getelementptr inbounds %class.GrRenderTarget, %class.GrRenderTarget* %24, i64 1, i32 5, i32 0, i32 6, i32 0, i32 0, i32 1
  %28 = bitcast %union.anon* %27 to %class.GrVkFramebuffer**
  %29 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %28, align 8
  %30 = icmp eq %class.GrVkFramebuffer* %29, null
  br i1 %30, label %31, label %156

31:                                               ; preds = %26
  br i1 %19, label %32, label %43

32:                                               ; preds = %31
  %33 = getelementptr inbounds %class.GrRenderTarget, %class.GrRenderTarget* %24, i64 0, i32 5, i32 0, i32 1
  %34 = bitcast %class.GrIORef* %33 to %class.GrVkAttachment**
  %35 = load %class.GrVkAttachment*, %class.GrVkAttachment** %34, align 8
  %36 = icmp eq %class.GrVkAttachment* %35, null
  br i1 %36, label %43, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %35, i64 0, i32 1
  %39 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %35, i64 0, i32 1, i32 1, i32 5
  %40 = load i32, i32* %39, align 4
  %41 = trunc i32 %40 to i8
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %73, label %43

43:                                               ; preds = %32, %37, %31
  %44 = getelementptr inbounds %class.GrRenderTarget, %class.GrRenderTarget* %24, i64 0, i32 5
  %45 = bitcast %class.GrSurface* %44 to %class.GrVkAttachment**
  %46 = load %class.GrVkAttachment*, %class.GrVkAttachment** %45, align 8
  %47 = icmp eq %class.GrVkAttachment* %46, null
  %48 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %46, i64 0, i32 1
  %49 = select i1 %47, %class.GrVkImage* null, %class.GrVkImage* %48
  br label %73

50:                                               ; preds = %14
  %51 = bitcast %class.GrSurface* %1 to %class.GrTexture* (%class.GrSurface*)***
  %52 = load %class.GrTexture* (%class.GrSurface*)**, %class.GrTexture* (%class.GrSurface*)*** %51, align 8
  %53 = getelementptr inbounds %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %52, i64 10
  %54 = load %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %53, align 8
  %55 = tail call %class.GrTexture* %54(%class.GrSurface* %1) #14
  %56 = icmp eq %class.GrTexture* %55, null
  br i1 %56, label %68, label %57

57:                                               ; preds = %50
  %58 = load %class.GrTexture* (%class.GrSurface*)**, %class.GrTexture* (%class.GrSurface*)*** %51, align 8
  %59 = getelementptr inbounds %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %58, i64 10
  %60 = load %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %59, align 8
  %61 = tail call %class.GrTexture* %60(%class.GrSurface* %1) #14
  %62 = getelementptr inbounds %class.GrTexture, %class.GrTexture* %61, i64 0, i32 5
  %63 = bitcast %class.GrSurface* %62 to %class.GrVkAttachment**
  %64 = load %class.GrVkAttachment*, %class.GrVkAttachment** %63, align 8
  %65 = icmp eq %class.GrVkAttachment* %64, null
  %66 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %64, i64 0, i32 1
  %67 = select i1 %65, %class.GrVkImage* null, %class.GrVkImage* %66
  br label %73

68:                                               ; preds = %50
  %69 = icmp eq %class.GrSurface* %1, null
  %70 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %1, i64 1, i32 0, i32 2
  %71 = bitcast i32* %70 to %class.GrVkImage*
  %72 = select i1 %69, %class.GrVkImage* null, %class.GrVkImage* %71
  br label %73

73:                                               ; preds = %37, %43, %57, %68
  %74 = phi %class.GrVkImage* [ %67, %57 ], [ %72, %68 ], [ %38, %37 ], [ %49, %43 ]
  %75 = bitcast %class.GrSurface* %2 to %class.GrRenderTarget* (%class.GrSurface*)***
  %76 = load %class.GrRenderTarget* (%class.GrSurface*)**, %class.GrRenderTarget* (%class.GrSurface*)*** %75, align 8
  %77 = getelementptr inbounds %class.GrRenderTarget* (%class.GrSurface*)*, %class.GrRenderTarget* (%class.GrSurface*)** %76, i64 12
  %78 = load %class.GrRenderTarget* (%class.GrSurface*)*, %class.GrRenderTarget* (%class.GrSurface*)** %77, align 8
  %79 = tail call %class.GrRenderTarget* %78(%class.GrSurface* %2) #14
  %80 = icmp eq %class.GrRenderTarget* %79, null
  br i1 %80, label %100, label %81

81:                                               ; preds = %73
  br i1 %19, label %82, label %93

82:                                               ; preds = %81
  %83 = getelementptr inbounds %class.GrRenderTarget, %class.GrRenderTarget* %79, i64 0, i32 5, i32 0, i32 1
  %84 = bitcast %class.GrIORef* %83 to %class.GrVkAttachment**
  %85 = load %class.GrVkAttachment*, %class.GrVkAttachment** %84, align 8
  %86 = icmp eq %class.GrVkAttachment* %85, null
  br i1 %86, label %93, label %87

87:                                               ; preds = %82
  %88 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %85, i64 0, i32 1
  %89 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %85, i64 0, i32 1, i32 1, i32 5
  %90 = load i32, i32* %89, align 4
  %91 = trunc i32 %90 to i8
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %123, label %93

93:                                               ; preds = %82, %87, %81
  %94 = getelementptr inbounds %class.GrRenderTarget, %class.GrRenderTarget* %79, i64 0, i32 5
  %95 = bitcast %class.GrSurface* %94 to %class.GrVkAttachment**
  %96 = load %class.GrVkAttachment*, %class.GrVkAttachment** %95, align 8
  %97 = icmp eq %class.GrVkAttachment* %96, null
  %98 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %96, i64 0, i32 1
  %99 = select i1 %97, %class.GrVkImage* null, %class.GrVkImage* %98
  br label %123

100:                                              ; preds = %73
  %101 = bitcast %class.GrSurface* %2 to %class.GrTexture* (%class.GrSurface*)***
  %102 = load %class.GrTexture* (%class.GrSurface*)**, %class.GrTexture* (%class.GrSurface*)*** %101, align 8
  %103 = getelementptr inbounds %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %102, i64 10
  %104 = load %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %103, align 8
  %105 = tail call %class.GrTexture* %104(%class.GrSurface* %2) #14
  %106 = icmp eq %class.GrTexture* %105, null
  br i1 %106, label %118, label %107

107:                                              ; preds = %100
  %108 = load %class.GrTexture* (%class.GrSurface*)**, %class.GrTexture* (%class.GrSurface*)*** %101, align 8
  %109 = getelementptr inbounds %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %108, i64 10
  %110 = load %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %109, align 8
  %111 = tail call %class.GrTexture* %110(%class.GrSurface* %2) #14
  %112 = getelementptr inbounds %class.GrTexture, %class.GrTexture* %111, i64 0, i32 5
  %113 = bitcast %class.GrSurface* %112 to %class.GrVkAttachment**
  %114 = load %class.GrVkAttachment*, %class.GrVkAttachment** %113, align 8
  %115 = icmp eq %class.GrVkAttachment* %114, null
  %116 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %114, i64 0, i32 1
  %117 = select i1 %115, %class.GrVkImage* null, %class.GrVkImage* %116
  br label %123

118:                                              ; preds = %100
  %119 = icmp eq %class.GrSurface* %2, null
  %120 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %2, i64 1, i32 0, i32 2
  %121 = bitcast i32* %120 to %class.GrVkImage*
  %122 = select i1 %119, %class.GrVkImage* null, %class.GrVkImage* %121
  br label %123

123:                                              ; preds = %87, %93, %107, %118
  %124 = phi %class.GrVkImage* [ %117, %107 ], [ %122, %118 ], [ %99, %93 ], [ %88, %87 ]
  %125 = getelementptr inbounds %class.GrVkImage, %class.GrVkImage* %74, i64 0, i32 1, i32 4
  %126 = load i32, i32* %125, align 8
  %127 = getelementptr inbounds %class.GrVkImage, %class.GrVkImage* %124, i64 0, i32 1, i32 4
  %128 = load i32, i32* %127, align 8
  %129 = getelementptr inbounds %class.GrVkImage, %class.GrVkImage* %74, i64 0, i32 1, i32 6
  %130 = load i32, i32* %129, align 8
  %131 = getelementptr inbounds %class.GrVkImage, %class.GrVkImage* %124, i64 0, i32 1, i32 6
  %132 = load i32, i32* %131, align 8
  %133 = getelementptr inbounds %class.GrVkImage, %class.GrVkImage* %74, i64 0, i32 1, i32 11, i32 3
  %134 = load i32, i32* %133, align 8
  %135 = icmp ne i32 %134, 0
  %136 = getelementptr inbounds %class.GrVkImage, %class.GrVkImage* %124, i64 0, i32 1, i32 11, i32 3
  %137 = load i32, i32* %136, align 8
  %138 = icmp ne i32 %137, 0
  %139 = load %class.GrVkCaps*, %class.GrVkCaps** %15, align 8
  %140 = tail call zeroext i1 @_ZNK8GrVkCaps16canCopyAsResolveE8VkFormatibS0_ib(%class.GrVkCaps* %139, i32 %126, i32 %130, i1 zeroext %135, i32 %128, i32 %132, i1 zeroext %138) #14
  br i1 %140, label %141, label %142

141:                                              ; preds = %123
  tail call void @_ZN7GrVkGpu20copySurfaceAsResolveEP9GrSurfaceS1_RK7SkIRectRK8SkIPoint(%class.GrVkGpu* %0, %class.GrSurface* %1, %class.GrSurface* %2, %struct.SkIRect* dereferenceable(16) %3, %struct.SkIPoint* dereferenceable(8) %4)
  br label %156

142:                                              ; preds = %123
  %143 = load %class.GrVkCaps*, %class.GrVkCaps** %15, align 8
  %144 = tail call zeroext i1 @_ZNK8GrVkCaps12canCopyImageE8VkFormatibS0_ib(%class.GrVkCaps* %143, i32 %126, i32 %130, i1 zeroext %135, i32 %128, i32 %132, i1 zeroext %138) #14
  br i1 %144, label %145, label %146

145:                                              ; preds = %142
  tail call void @_ZN7GrVkGpu22copySurfaceAsCopyImageEP9GrSurfaceS1_P9GrVkImageS3_RK7SkIRectRK8SkIPoint(%class.GrVkGpu* %0, %class.GrSurface* %1, %class.GrSurface* %2, %class.GrVkImage* %74, %class.GrVkImage* %124, %struct.SkIRect* dereferenceable(16) %3, %struct.SkIPoint* dereferenceable(8) %4)
  br label %156

146:                                              ; preds = %142
  %147 = load %class.GrVkCaps*, %class.GrVkCaps** %15, align 8
  %148 = getelementptr inbounds %class.GrVkImage, %class.GrVkImage* %74, i64 0, i32 1, i32 2
  %149 = load i32, i32* %148, align 8
  %150 = icmp eq i32 %149, 1
  %151 = getelementptr inbounds %class.GrVkImage, %class.GrVkImage* %124, i64 0, i32 1, i32 2
  %152 = load i32, i32* %151, align 8
  %153 = icmp eq i32 %152, 1
  %154 = tail call zeroext i1 @_ZNK8GrVkCaps13canCopyAsBlitE8VkFormatibbS0_ibb(%class.GrVkCaps* %147, i32 %126, i32 %130, i1 zeroext %150, i1 zeroext %135, i32 %128, i32 %132, i1 zeroext %153, i1 zeroext %138) #14
  br i1 %154, label %155, label %156

155:                                              ; preds = %146
  tail call void @_ZN7GrVkGpu17copySurfaceAsBlitEP9GrSurfaceS1_P9GrVkImageS3_RK7SkIRectRK8SkIPoint(%class.GrVkGpu* %0, %class.GrSurface* %1, %class.GrSurface* %2, %class.GrVkImage* %74, %class.GrVkImage* %124, %struct.SkIRect* dereferenceable(16) %3, %struct.SkIPoint* dereferenceable(8) %4)
  br label %156

156:                                              ; preds = %26, %146, %155, %145, %141, %13
  %157 = phi i1 [ false, %13 ], [ true, %141 ], [ true, %145 ], [ true, %155 ], [ false, %146 ], [ false, %26 ]
  ret i1 %157
}

declare zeroext i1 @_ZNK8GrVkCaps16canCopyAsResolveE8VkFormatibS0_ib(%class.GrVkCaps*, i32, i32, i1 zeroext, i32, i32, i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZNK8GrVkCaps12canCopyImageE8VkFormatibS0_ib(%class.GrVkCaps*, i32, i32, i1 zeroext, i32, i32, i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZNK8GrVkCaps13canCopyAsBlitE8VkFormatibbS0_ibb(%class.GrVkCaps*, i32, i32, i1 zeroext, i1 zeroext, i32, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7GrVkGpu12onReadPixelsEP9GrSurface7SkIRect11GrColorTypeS3_Pvm(%class.GrVkGpu*, %class.GrSurface*, i64, i64, i32, i32, i8* nocapture, i64) unnamed_addr #0 align 2 {
  %9 = alloca %struct.VkBufferImageCopy, align 8
  %10 = alloca %class.sk_sp.295, align 8
  %11 = alloca %class.sk_sp.295, align 8
  %12 = trunc i64 %2 to i32
  %13 = lshr i64 %2, 32
  %14 = trunc i64 %13 to i32
  %15 = trunc i64 %3 to i32
  %16 = lshr i64 %3, 32
  %17 = trunc i64 %16 to i32
  %18 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %1, i64 0, i32 3
  %19 = load i8, i8* %18, align 4, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %180

21:                                               ; preds = %8
  %22 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 13
  %23 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %22, align 8
  %24 = icmp eq %class.GrVkPrimaryCommandBuffer* %23, null
  br i1 %24, label %180, label %25

25:                                               ; preds = %21
  %26 = bitcast %class.GrSurface* %1 to %class.GrRenderTarget* (%class.GrSurface*)***
  %27 = load %class.GrRenderTarget* (%class.GrSurface*)**, %class.GrRenderTarget* (%class.GrSurface*)*** %26, align 8
  %28 = getelementptr inbounds %class.GrRenderTarget* (%class.GrSurface*)*, %class.GrRenderTarget* (%class.GrSurface*)** %27, i64 12
  %29 = load %class.GrRenderTarget* (%class.GrSurface*)*, %class.GrRenderTarget* (%class.GrSurface*)** %28, align 8
  %30 = tail call %class.GrRenderTarget* %29(%class.GrSurface* %1) #14
  %31 = bitcast %class.GrRenderTarget* %30 to %class.GrVkRenderTarget*
  %32 = icmp eq %class.GrRenderTarget* %30, null
  br i1 %32, label %40, label %33

33:                                               ; preds = %25
  %34 = getelementptr inbounds %class.GrRenderTarget, %class.GrRenderTarget* %30, i64 1, i32 5, i32 0, i32 6, i32 0, i32 0, i32 1
  %35 = bitcast %union.anon* %34 to %class.GrVkFramebuffer**
  %36 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %35, align 8
  %37 = icmp eq %class.GrVkFramebuffer* %36, null
  br i1 %37, label %38, label %180

38:                                               ; preds = %33
  %39 = tail call %class.GrVkAttachment* @_ZNK16GrVkRenderTarget17nonMSAAAttachmentEv(%class.GrVkRenderTarget* nonnull %31) #14
  br label %49

40:                                               ; preds = %25
  %41 = bitcast %class.GrSurface* %1 to %class.GrTexture* (%class.GrSurface*)***
  %42 = load %class.GrTexture* (%class.GrSurface*)**, %class.GrTexture* (%class.GrSurface*)*** %41, align 8
  %43 = getelementptr inbounds %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %42, i64 10
  %44 = load %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %43, align 8
  %45 = tail call %class.GrTexture* %44(%class.GrSurface* %1) #14
  %46 = getelementptr inbounds %class.GrTexture, %class.GrTexture* %45, i64 0, i32 5
  %47 = bitcast %class.GrSurface* %46 to %class.GrVkAttachment**
  %48 = load %class.GrVkAttachment*, %class.GrVkAttachment** %47, align 8
  br label %49

49:                                               ; preds = %40, %38
  %50 = phi %class.GrVkAttachment* [ %48, %40 ], [ %39, %38 ]
  %51 = icmp eq %class.GrVkAttachment* %50, null
  %52 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %50, i64 0, i32 1
  %53 = select i1 %51, %class.GrVkImage* null, %class.GrVkImage* %52
  %54 = icmp eq %class.GrVkImage* %53, null
  %55 = icmp eq i32 %5, 0
  %56 = or i1 %55, %54
  br i1 %56, label %180, label %57

57:                                               ; preds = %49
  %58 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 3, i32 0
  %59 = load %class.GrVkCaps*, %class.GrVkCaps** %58, align 8
  %60 = getelementptr inbounds %class.GrVkImage, %class.GrVkImage* %53, i64 0, i32 1, i32 4
  %61 = load i32, i32* %60, align 8
  %62 = tail call i32 @_ZNK8GrVkCaps17transferColorTypeE8VkFormat11GrColorType(%class.GrVkCaps* %59, i32 %61, i32 %4) #14
  %63 = icmp eq i32 %62, %5
  br i1 %63, label %64, label %180

64:                                               ; preds = %57
  tail call void @_ZN9GrVkImage27setImageLayoutAndQueueIndexEPK7GrVkGpu13VkImageLayoutjjbj(%class.GrVkImage* nonnull %53, %class.GrVkGpu* %0, i32 6, i32 2048, i32 4096, i1 zeroext false, i32 -1) #14
  %65 = add i32 %5, -1
  %66 = icmp ult i32 %65, 30
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  tail call void @llvm.trap() #14
  unreachable

68:                                               ; preds = %64
  %69 = sext i32 %65 to i64
  %70 = getelementptr inbounds [30 x i64], [30 x i64]* @switch.table._ZN7GrVkGpu12onReadPixelsEP9GrSurface7SkIRect11GrColorTypeS3_Pvm, i64 0, i64 %69
  %71 = load i64, i64* %70, align 8
  %72 = load i32, i32* %60, align 8
  %73 = tail call fastcc i64 @_ZL23GrVkFormatBytesPerBlock8VkFormat(i32 %72)
  %74 = icmp eq i64 %73, %71
  br i1 %74, label %75, label %180

75:                                               ; preds = %68
  %76 = sub i32 %15, %12
  %77 = sext i32 %76 to i64
  %78 = mul nsw i64 %71, %77
  %79 = bitcast %struct.VkBufferImageCopy* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %79) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 32, i1 false)
  %80 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %9, i64 0, i32 4, i32 0
  store i32 %12, i32* %80, align 8
  %81 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %9, i64 0, i32 4, i32 1
  store i32 %14, i32* %81, align 4
  %82 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %9, i64 0, i32 4, i32 2
  store i32 0, i32* %82, align 8
  %83 = sub i32 %17, %14
  %84 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %9, i64 0, i32 5, i32 0
  store i32 %76, i32* %84, align 4
  %85 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %9, i64 0, i32 5, i32 1
  store i32 %83, i32* %85, align 4
  %86 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %9, i64 0, i32 5, i32 2
  store i32 1, i32* %86, align 4
  %87 = zext i32 %76 to i64
  %88 = mul nuw nsw i64 %71, %87
  %89 = zext i32 %83 to i64
  %90 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 0, i32 5
  %91 = load %class.GrDirectContext*, %class.GrDirectContext** %90, align 8
  %92 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %91, i64 0, i32 6, i32 0, i32 0, i32 0
  %93 = load %class.GrResourceProvider*, %class.GrResourceProvider** %92, align 8
  %94 = bitcast %class.sk_sp.295* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #14
  %95 = getelementptr inbounds %class.sk_sp.295, %class.sk_sp.295* %10, i64 0, i32 0
  store %class.GrGpuBuffer* inttoptr (i64 -6148914691236517206 to %class.GrGpuBuffer*), %class.GrGpuBuffer** %95, align 8
  %96 = mul i64 %88, %89
  call void @_ZN18GrResourceProvider12createBufferEm15GrGpuBufferType15GrAccessPatternPKv(%class.sk_sp.295* nonnull sret %10, %class.GrResourceProvider* %93, i64 %96, i32 4, i32 0, i8* null) #14
  %97 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %95, align 8
  %98 = icmp eq %class.GrGpuBuffer* %97, null
  br i1 %98, label %178, label %99

99:                                               ; preds = %75
  %100 = bitcast %class.GrGpuBuffer* %97 to %class.GrVkBuffer*
  %101 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %9, i64 0, i32 3, i32 0
  %102 = bitcast %struct.VkBufferImageCopy* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %102, i8 0, i64 16, i1 false)
  %103 = bitcast i32* %101 to <4 x i32>*
  store <4 x i32> <i32 1, i32 0, i32 0, i32 1>, <4 x i32>* %103, align 8
  %104 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %22, align 8
  %105 = getelementptr inbounds %class.sk_sp.295, %class.sk_sp.295* %11, i64 0, i32 0
  %106 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %97, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = atomicrmw add i32* %106, i32 1 monotonic
  store %class.GrGpuBuffer* %97, %class.GrGpuBuffer** %105, align 8
  call void @_ZN24GrVkPrimaryCommandBuffer17copyImageToBufferEPK7GrVkGpuP9GrVkImage13VkImageLayout5sk_spI11GrGpuBufferEjPK17VkBufferImageCopy(%class.GrVkPrimaryCommandBuffer* %104, %class.GrVkGpu* %0, %class.GrVkImage* nonnull %53, i32 6, %class.sk_sp.295* nonnull %11, i32 1, %struct.VkBufferImageCopy* nonnull %9) #14
  %108 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %105, align 8
  %109 = icmp eq %class.GrGpuBuffer* %108, null
  br i1 %109, label %118, label %110

110:                                              ; preds = %99
  %111 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %108, i64 0, i32 0, i32 1
  %112 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %111, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = atomicrmw add i32* %112, i32 -1 acq_rel
  %114 = icmp eq i32 %113, 1
  br i1 %114, label %115, label %118

115:                                              ; preds = %110
  %116 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %111, i64 -1
  %117 = bitcast %class.GrIORef* %116 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %117, i32 0) #14
  br label %118

118:                                              ; preds = %99, %110, %115
  call void @_ZNK10GrVkBuffer16addMemoryBarrierEjjjjb(%class.GrVkBuffer* nonnull %100, i32 4096, i32 8192, i32 4096, i32 16384, i1 zeroext false) #14
  %119 = call zeroext i1 @_ZN7GrVkGpu19submitCommandBufferENS_9SyncQueueE(%class.GrVkGpu* %0, i32 0)
  br i1 %119, label %120, label %166

120:                                              ; preds = %118
  %121 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %95, align 8
  %122 = call i8* @_ZN11GrGpuBuffer3mapEv(%class.GrGpuBuffer* %121) #14
  %123 = icmp eq i64 %78, %7
  %124 = icmp eq i64 %78, %88
  %125 = and i1 %123, %124
  br i1 %125, label %135, label %126

126:                                              ; preds = %120
  %127 = icmp sgt i32 %83, 0
  br i1 %127, label %128, label %164

128:                                              ; preds = %126
  %129 = xor i32 %14, -1
  %130 = add i32 %129, %17
  %131 = and i32 %83, 3
  %132 = icmp ult i32 %130, 3
  br i1 %132, label %152, label %133

133:                                              ; preds = %128
  %134 = sub i32 %83, %131
  br label %138

135:                                              ; preds = %120
  %136 = sext i32 %83 to i64
  %137 = mul i64 %136, %7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %122, i64 %137, i1 false) #14
  br label %164

138:                                              ; preds = %138, %133
  %139 = phi i8* [ %6, %133 ], [ %148, %138 ]
  %140 = phi i8* [ %122, %133 ], [ %149, %138 ]
  %141 = phi i32 [ %134, %133 ], [ %150, %138 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %139, i8* align 1 %140, i64 %78, i1 false) #14
  %142 = getelementptr inbounds i8, i8* %139, i64 %7
  %143 = getelementptr inbounds i8, i8* %140, i64 %88
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %142, i8* align 1 %143, i64 %78, i1 false) #14
  %144 = getelementptr inbounds i8, i8* %142, i64 %7
  %145 = getelementptr inbounds i8, i8* %143, i64 %88
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %144, i8* align 1 %145, i64 %78, i1 false) #14
  %146 = getelementptr inbounds i8, i8* %144, i64 %7
  %147 = getelementptr inbounds i8, i8* %145, i64 %88
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %146, i8* align 1 %147, i64 %78, i1 false) #14
  %148 = getelementptr inbounds i8, i8* %146, i64 %7
  %149 = getelementptr inbounds i8, i8* %147, i64 %88
  %150 = add i32 %141, -4
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %138

152:                                              ; preds = %138, %128
  %153 = phi i8* [ %6, %128 ], [ %148, %138 ]
  %154 = phi i8* [ %122, %128 ], [ %149, %138 ]
  %155 = icmp eq i32 %131, 0
  br i1 %155, label %164, label %156

156:                                              ; preds = %152, %156
  %157 = phi i8* [ %160, %156 ], [ %153, %152 ]
  %158 = phi i8* [ %161, %156 ], [ %154, %152 ]
  %159 = phi i32 [ %162, %156 ], [ %131, %152 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %157, i8* align 1 %158, i64 %78, i1 false) #14
  %160 = getelementptr inbounds i8, i8* %157, i64 %7
  %161 = getelementptr inbounds i8, i8* %158, i64 %88
  %162 = add i32 %159, -1
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %156, !llvm.loop !37

164:                                              ; preds = %152, %156, %126, %135
  %165 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %95, align 8
  call void @_ZN11GrGpuBuffer5unmapEv(%class.GrGpuBuffer* %165) #14
  br label %166

166:                                              ; preds = %164, %118
  %167 = phi i1 [ false, %118 ], [ true, %164 ]
  %168 = load %class.GrGpuBuffer*, %class.GrGpuBuffer** %95, align 8
  %169 = icmp eq %class.GrGpuBuffer* %168, null
  br i1 %169, label %178, label %170

170:                                              ; preds = %166
  %171 = getelementptr inbounds %class.GrGpuBuffer, %class.GrGpuBuffer* %168, i64 0, i32 0, i32 1
  %172 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %171, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = atomicrmw add i32* %172, i32 -1 acq_rel
  %174 = icmp eq i32 %173, 1
  br i1 %174, label %175, label %178

175:                                              ; preds = %170
  %176 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %171, i64 -1
  %177 = bitcast %class.GrIORef* %176 to %class.GrGpuResource*
  call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %177, i32 0) #14
  br label %178

178:                                              ; preds = %75, %166, %170, %175
  %179 = phi i1 [ %167, %166 ], [ %167, %170 ], [ %167, %175 ], [ false, %75 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #14
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %79) #14
  br label %180

180:                                              ; preds = %33, %8, %49, %57, %68, %178, %21
  %181 = phi i1 [ false, %8 ], [ false, %21 ], [ false, %33 ], [ false, %49 ], [ false, %57 ], [ %179, %178 ], [ false, %68 ]
  ret i1 %181
}

declare void @_ZN18GrResourceProvider12createBufferEm15GrGpuBufferType15GrAccessPatternPKv(%class.sk_sp.295* sret, %class.GrResourceProvider*, i64, i32, i32, i8*) local_unnamed_addr #2

declare i8* @_ZN11GrGpuBuffer3mapEv(%class.GrGpuBuffer*) local_unnamed_addr #2

declare void @_ZN11GrGpuBuffer5unmapEv(%class.GrGpuBuffer*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7GrVkGpu15beginRenderPassEPK14GrVkRenderPass5sk_spIK15GrVkFramebufferEPK12VkClearValuePK9GrSurfaceRK7SkIRectb(%class.GrVkGpu*, %class.GrVkRenderPass*, %class.sk_sp.672* nocapture, %union.VkClearValue* nocapture readonly, %class.GrSurface*, %struct.SkIRect* dereferenceable(16), i1 zeroext) local_unnamed_addr #0 align 2 {
  %8 = alloca [3 x %union.VkClearValue], align 16
  %9 = alloca %class.sk_sp.672, align 8
  %10 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 13
  %11 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %10, align 8
  %12 = icmp eq %class.GrVkPrimaryCommandBuffer* %11, null
  br i1 %12, label %47, label %13

13:                                               ; preds = %7
  %14 = bitcast [3 x %union.VkClearValue]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 -1, i64 48, i1 false)
  %15 = getelementptr inbounds %class.GrVkRenderPass, %class.GrVkRenderPass* %1, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 4
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds [3 x %union.VkClearValue], [3 x %union.VkClearValue]* %8, i64 0, i64 0
  %20 = bitcast %union.VkClearValue* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %14, i8* align 4 %20, i64 16, i1 false)
  %21 = select i1 %18, i64 1, i64 2
  %22 = getelementptr inbounds [3 x %union.VkClearValue], [3 x %union.VkClearValue]* %8, i64 0, i64 %21, i32 0, i32 0, i64 0
  store float 0.000000e+00, float* %22, align 16
  %23 = getelementptr inbounds [3 x %union.VkClearValue], [3 x %union.VkClearValue]* %8, i64 0, i64 %21, i32 0, i32 0, i64 1
  %24 = bitcast float* %23 to i32*
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds %class.sk_sp.672, %class.sk_sp.672* %2, i64 0, i32 0
  %26 = bitcast %class.sk_sp.672* %2 to i64*
  %27 = load i64, i64* %26, align 8
  store %class.GrVkFramebuffer* null, %class.GrVkFramebuffer** %25, align 8
  %28 = bitcast %class.sk_sp.672* %9 to i64*
  store i64 %27, i64* %28, align 8
  %29 = call zeroext i1 @_ZN24GrVkPrimaryCommandBuffer15beginRenderPassEP7GrVkGpuPK14GrVkRenderPass5sk_spIK15GrVkFramebufferEPK12VkClearValuePK9GrSurfaceRK7SkIRectb(%class.GrVkPrimaryCommandBuffer* nonnull %11, %class.GrVkGpu* %0, %class.GrVkRenderPass* %1, %class.sk_sp.672* nonnull %9, %union.VkClearValue* nonnull %19, %class.GrSurface* %4, %struct.SkIRect* dereferenceable(16) %5, i1 zeroext %6) #14
  %30 = getelementptr inbounds %class.sk_sp.672, %class.sk_sp.672* %9, i64 0, i32 0
  %31 = load %class.GrVkFramebuffer*, %class.GrVkFramebuffer** %30, align 8
  %32 = icmp eq %class.GrVkFramebuffer* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %13
  %34 = bitcast %class.GrVkFramebuffer* %31 to %class.GrManagedResource*
  %35 = getelementptr inbounds %class.GrVkFramebuffer, %class.GrVkFramebuffer* %31, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %46

38:                                               ; preds = %33
  %39 = bitcast %class.GrVkFramebuffer* %31 to void (%class.GrManagedResource*)***
  %40 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %39, align 8
  %41 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %40, i64 4
  %42 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %41, align 8
  call void %42(%class.GrManagedResource* nonnull %34) #14
  %43 = load void (%class.GrManagedResource*)**, void (%class.GrManagedResource*)*** %39, align 8
  %44 = getelementptr inbounds void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %43, i64 1
  %45 = load void (%class.GrManagedResource*)*, void (%class.GrManagedResource*)** %44, align 8
  call void %45(%class.GrManagedResource* nonnull %34) #14
  br label %46

46:                                               ; preds = %13, %33, %38
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #14
  br label %47

47:                                               ; preds = %7, %46
  %48 = phi i1 [ %29, %46 ], [ false, %7 ]
  ret i1 %48
}

declare zeroext i1 @_ZN24GrVkPrimaryCommandBuffer15beginRenderPassEP7GrVkGpuPK14GrVkRenderPass5sk_spIK15GrVkFramebufferEPK12VkClearValuePK9GrSurfaceRK7SkIRectb(%class.GrVkPrimaryCommandBuffer*, %class.GrVkGpu*, %class.GrVkRenderPass*, %class.sk_sp.672*, %union.VkClearValue*, %class.GrSurface*, %struct.SkIRect* dereferenceable(16), i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpu13endRenderPassEP14GrRenderTarget15GrSurfaceOriginRK7SkIRect(%class.GrVkGpu*, %class.GrRenderTarget*, i32, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 13
  %6 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %5, align 8
  tail call void @_ZN24GrVkPrimaryCommandBuffer13endRenderPassEPK7GrVkGpu(%class.GrVkPrimaryCommandBuffer* %6, %class.GrVkGpu* %0) #14
  %7 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 0
  %8 = icmp eq %class.GrRenderTarget* %1, null
  br i1 %8, label %18, label %9

9:                                                ; preds = %4
  %10 = bitcast %class.GrRenderTarget* %1 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %class.GrRenderTarget* %1 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = bitcast i8* %16 to %class.GrSurface*
  br label %18

18:                                               ; preds = %9, %4
  %19 = phi %class.GrSurface* [ %17, %9 ], [ null, %4 ]
  tail call void @_ZNK5GrGpu17didWriteToSurfaceEP9GrSurface15GrSurfaceOriginPK7SkIRectj(%class.GrGpu* %7, %class.GrSurface* %19, i32 %2, %struct.SkIRect* %3, i32 1) #14
  ret void
}

declare void @_ZN24GrVkPrimaryCommandBuffer13endRenderPassEPK7GrVkGpu(%class.GrVkPrimaryCommandBuffer*, %class.GrVkGpu*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN7GrVkGpu13checkVkResultE8VkResult(%class.GrVkGpu* nocapture, i32) local_unnamed_addr #10 align 2 {
  switch i32 %1, label %7 [
    i32 0, label %8
    i32 -4, label %3
    i32 -2, label %5
    i32 -1, label %5
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 4
  store i8 1, i8* %4, align 8
  br label %8

5:                                                ; preds = %2, %2
  %6 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 0, i32 7
  store i8 1, i8* %6, align 8
  br label %8

7:                                                ; preds = %2
  br label %8

8:                                                ; preds = %2, %7, %5, %3
  %9 = phi i1 [ false, %7 ], [ false, %5 ], [ false, %3 ], [ true, %2 ]
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpu28submitSecondaryCommandBufferENSt3__110unique_ptrI26GrVkSecondaryCommandBufferNS0_14default_deleteIS2_EEEE(%class.GrVkGpu*, %class.GrVkSecondaryCommandBuffer*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 13
  %4 = load %class.GrVkPrimaryCommandBuffer*, %class.GrVkPrimaryCommandBuffer** %3, align 8
  %5 = icmp eq %class.GrVkPrimaryCommandBuffer* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZN24GrVkPrimaryCommandBuffer15executeCommandsEPK7GrVkGpuNSt3__110unique_ptrI26GrVkSecondaryCommandBufferNS3_14default_deleteIS5_EEEE(%class.GrVkPrimaryCommandBuffer* nonnull %4, %class.GrVkGpu* %0, %class.GrVkSecondaryCommandBuffer* %1) #14
  br label %14

7:                                                ; preds = %2
  %8 = icmp eq %class.GrVkSecondaryCommandBuffer* %1, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %7
  %10 = bitcast %class.GrVkSecondaryCommandBuffer* %1 to void (%class.GrVkSecondaryCommandBuffer*)***
  %11 = load void (%class.GrVkSecondaryCommandBuffer*)**, void (%class.GrVkSecondaryCommandBuffer*)*** %10, align 8
  %12 = getelementptr inbounds void (%class.GrVkSecondaryCommandBuffer*)*, void (%class.GrVkSecondaryCommandBuffer*)** %11, i64 1
  %13 = load void (%class.GrVkSecondaryCommandBuffer*)*, void (%class.GrVkSecondaryCommandBuffer*)** %12, align 8
  tail call void %13(%class.GrVkSecondaryCommandBuffer* nonnull %1) #14
  br label %14

14:                                               ; preds = %6, %7, %9
  ret void
}

declare void @_ZN24GrVkPrimaryCommandBuffer15executeCommandsEPK7GrVkGpuNSt3__110unique_ptrI26GrVkSecondaryCommandBufferNS3_14default_deleteIS5_EEEE(%class.GrVkPrimaryCommandBuffer*, %class.GrVkGpu*, %class.GrVkSecondaryCommandBuffer*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpu6submitEP15GrOpsRenderPass(%class.GrVkGpu* nocapture readonly, %class.GrOpsRenderPass* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %4 = load %class.GrVkOpsRenderPass*, %class.GrVkOpsRenderPass** %3, align 8
  tail call void @_ZN17GrVkOpsRenderPass6submitEv(%class.GrVkOpsRenderPass* %4) #14
  %5 = load %class.GrVkOpsRenderPass*, %class.GrVkOpsRenderPass** %3, align 8
  tail call void @_ZN17GrVkOpsRenderPass5resetEv(%class.GrVkOpsRenderPass* %5) #14
  ret void
}

declare void @_ZN17GrVkOpsRenderPass6submitEv(%class.GrVkOpsRenderPass*) local_unnamed_addr #2

declare void @_ZN17GrVkOpsRenderPass5resetEv(%class.GrVkOpsRenderPass*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN7GrVkGpu11insertFenceEv(%class.GrVkGpu*) unnamed_addr #0 align 2 {
  %2 = alloca %struct.VkFenceCreateInfo, align 8
  %3 = alloca %struct.VkFence_T*, align 8
  %4 = bitcast %struct.VkFenceCreateInfo* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false)
  %5 = getelementptr inbounds %struct.VkFenceCreateInfo, %struct.VkFenceCreateInfo* %2, i64 0, i32 0
  store i32 8, i32* %5, align 8
  %6 = getelementptr inbounds %struct.VkFenceCreateInfo, %struct.VkFenceCreateInfo* %2, i64 0, i32 1
  store i8* null, i8** %6, align 8
  %7 = getelementptr inbounds %struct.VkFenceCreateInfo, %struct.VkFenceCreateInfo* %2, i64 0, i32 2
  store i32 0, i32* %7, align 8
  %8 = bitcast %struct.VkFence_T** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #14
  store %struct.VkFence_T* null, %struct.VkFence_T** %3, align 8
  %9 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 1, i32 0
  %10 = load %struct.GrVkInterface*, %struct.GrVkInterface** %9, align 8
  %11 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %10, i64 0, i32 1, i32 33, i32 0
  %12 = load i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)*, i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)** %11, align 8
  %13 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 6
  %14 = load %struct.VkDevice_T*, %struct.VkDevice_T** %13, align 8
  %15 = call i32 %12(%struct.VkDevice_T* %14, %struct.VkFenceCreateInfo* nonnull %2, %struct.VkAllocationCallbacks* null, %struct.VkFence_T** nonnull %3) #14
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %29, label %17

17:                                               ; preds = %1
  %18 = bitcast %class.GrVkGpu* %0 to i1 (%class.GrVkGpu*)***
  %19 = load i1 (%class.GrVkGpu*)**, i1 (%class.GrVkGpu*)*** %18, align 8
  %20 = getelementptr inbounds i1 (%class.GrVkGpu*)*, i1 (%class.GrVkGpu*)** %19, i64 8
  %21 = load i1 (%class.GrVkGpu*)*, i1 (%class.GrVkGpu*)** %20, align 8
  %22 = call zeroext i1 %21(%class.GrVkGpu* %0) #14
  br i1 %22, label %24, label %23

23:                                               ; preds = %17
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 2524, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.12, i64 0, i64 0), i32 %15) #14
  br label %24

24:                                               ; preds = %23, %17
  switch i32 %15, label %61 [
    i32 -1, label %27
    i32 -4, label %25
    i32 -2, label %27
  ]

25:                                               ; preds = %24
  %26 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 4
  store i8 1, i8* %26, align 8
  br label %61

27:                                               ; preds = %24, %24
  %28 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 0, i32 7
  store i8 1, i8* %28, align 8
  br label %61

29:                                               ; preds = %1
  %30 = load %struct.GrVkInterface*, %struct.GrVkInterface** %9, align 8
  %31 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %30, i64 0, i32 1, i32 16, i32 0
  %32 = load i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)*, i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)** %31, align 8
  %33 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 7
  %34 = load %struct.VkQueue_T*, %struct.VkQueue_T** %33, align 8
  %35 = load %struct.VkFence_T*, %struct.VkFence_T** %3, align 8
  %36 = call i32 %32(%struct.VkQueue_T* %34, i32 0, %struct.VkSubmitInfo* null, %struct.VkFence_T* %35) #14
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %58, label %38

38:                                               ; preds = %29
  %39 = bitcast %class.GrVkGpu* %0 to i1 (%class.GrVkGpu*)***
  %40 = load i1 (%class.GrVkGpu*)**, i1 (%class.GrVkGpu*)*** %39, align 8
  %41 = getelementptr inbounds i1 (%class.GrVkGpu*)*, i1 (%class.GrVkGpu*)** %40, i64 8
  %42 = load i1 (%class.GrVkGpu*)*, i1 (%class.GrVkGpu*)** %41, align 8
  %43 = call zeroext i1 %42(%class.GrVkGpu* %0) #14
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 2528, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.13, i64 0, i64 0), i32 %36) #14
  br label %45

45:                                               ; preds = %44, %38
  switch i32 %36, label %52 [
    i32 -1, label %48
    i32 -4, label %46
    i32 -2, label %48
  ]

46:                                               ; preds = %45
  %47 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 4
  br label %50

48:                                               ; preds = %45, %45
  %49 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 0, i32 7
  br label %50

50:                                               ; preds = %46, %48
  %51 = phi i8* [ %49, %48 ], [ %47, %46 ]
  store i8 1, i8* %51, align 8
  br label %52

52:                                               ; preds = %50, %45
  %53 = load %struct.GrVkInterface*, %struct.GrVkInterface** %9, align 8
  %54 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %53, i64 0, i32 1, i32 34, i32 0
  %55 = load void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)** %54, align 8
  %56 = load %struct.VkDevice_T*, %struct.VkDevice_T** %13, align 8
  %57 = load %struct.VkFence_T*, %struct.VkFence_T** %3, align 8
  call void %55(%struct.VkDevice_T* %56, %struct.VkFence_T* %57, %struct.VkAllocationCallbacks* null) #14
  br label %61

58:                                               ; preds = %29
  %59 = bitcast %struct.VkFence_T** %3 to i64*
  %60 = load i64, i64* %59, align 8
  br label %61

61:                                               ; preds = %27, %25, %24, %58, %52
  %62 = phi i64 [ 0, %52 ], [ %60, %58 ], [ 0, %24 ], [ 0, %25 ], [ 0, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #14
  ret i64 %62
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7GrVkGpu9waitFenceEm(%class.GrVkGpu*, i64) unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 1, i32 0
  %5 = load %struct.GrVkInterface*, %struct.GrVkInterface** %4, align 8
  %6 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %5, i64 0, i32 1, i32 37, i32 0
  %7 = load i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)*, i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)** %6, align 8
  %8 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 6
  %9 = load %struct.VkDevice_T*, %struct.VkDevice_T** %8, align 8
  %10 = bitcast i64* %3 to %struct.VkFence_T**
  %11 = call i32 %7(%struct.VkDevice_T* %9, i32 1, %struct.VkFence_T** nonnull %10, i32 1, i64 0) #14
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %25, label %13

13:                                               ; preds = %2
  %14 = bitcast %class.GrVkGpu* %0 to i1 (%class.GrVkGpu*)***
  %15 = load i1 (%class.GrVkGpu*)**, i1 (%class.GrVkGpu*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%class.GrVkGpu*)*, i1 (%class.GrVkGpu*)** %15, i64 8
  %17 = load i1 (%class.GrVkGpu*)*, i1 (%class.GrVkGpu*)** %16, align 8
  %18 = call zeroext i1 %17(%class.GrVkGpu* %0) #14
  br i1 %18, label %20, label %19

19:                                               ; preds = %13
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i32 2542, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.14, i64 0, i64 0), i32 %11) #14
  br label %20

20:                                               ; preds = %19, %13
  switch i32 %11, label %25 [
    i32 -1, label %23
    i32 -4, label %21
    i32 -2, label %23
  ]

21:                                               ; preds = %20
  %22 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 4
  store i8 1, i8* %22, align 8
  br label %25

23:                                               ; preds = %20, %20
  %24 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 0, i32 7
  store i8 1, i8* %24, align 8
  br label %25

25:                                               ; preds = %2, %20, %21, %23
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7GrVkGpu11deleteFenceEm(%class.GrVkGpu* nocapture readonly, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 1, i32 0
  %4 = load %struct.GrVkInterface*, %struct.GrVkInterface** %3, align 8
  %5 = getelementptr inbounds %struct.GrVkInterface, %struct.GrVkInterface* %4, i64 0, i32 1, i32 34, i32 0
  %6 = load void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)** %5, align 8
  %7 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 6
  %8 = load %struct.VkDevice_T*, %struct.VkDevice_T** %7, align 8
  %9 = inttoptr i64 %1 to %struct.VkFence_T*
  tail call void %6(%struct.VkDevice_T* %8, %struct.VkFence_T* %9, %struct.VkAllocationCallbacks* null) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrSemaphore* @_ZN7GrVkGpu13makeSemaphoreEb(%class.GrVkGpu*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = tail call %class.GrVkSemaphore* @_ZN13GrVkSemaphore4MakeEP7GrVkGpub(%class.GrVkGpu* %0, i1 zeroext %1) #14
  %4 = getelementptr inbounds %class.GrVkSemaphore, %class.GrVkSemaphore* %3, i64 0, i32 0
  ret %class.GrSemaphore* %4
}

declare %class.GrVkSemaphore* @_ZN13GrVkSemaphore4MakeEP7GrVkGpub(%class.GrVkGpu*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrSemaphore* @_ZN7GrVkGpu20wrapBackendSemaphoreERK18GrBackendSemaphoreN18GrResourceProvider17SemaphoreWrapTypeE15GrWrapOwnership(%class.GrVkGpu*, %class.GrBackendSemaphore* nocapture readonly dereferenceable(32), i32, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.GrBackendSemaphore, %class.GrBackendSemaphore* %1, i64 0, i32 4
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %16, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.GrBackendSemaphore, %class.GrBackendSemaphore* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %16

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.GrBackendSemaphore, %class.GrBackendSemaphore* %1, i64 0, i32 2
  %14 = bitcast %union.anon.736* %13 to %struct.VkSemaphore_T**
  %15 = load %struct.VkSemaphore_T*, %struct.VkSemaphore_T** %14, align 8
  br label %16

16:                                               ; preds = %12, %8, %4
  %17 = phi %struct.VkSemaphore_T* [ %15, %12 ], [ null, %8 ], [ null, %4 ]
  %18 = tail call %class.GrVkSemaphore* @_ZN13GrVkSemaphore11MakeWrappedEP7GrVkGpuP13VkSemaphore_TN18GrResourceProvider17SemaphoreWrapTypeE15GrWrapOwnership(%class.GrVkGpu* %0, %struct.VkSemaphore_T* %17, i32 %2, i32 %3) #14
  %19 = getelementptr inbounds %class.GrVkSemaphore, %class.GrVkSemaphore* %18, i64 0, i32 0
  ret %class.GrSemaphore* %19
}

declare %class.GrVkSemaphore* @_ZN13GrVkSemaphore11MakeWrappedEP7GrVkGpuP13VkSemaphore_TN18GrResourceProvider17SemaphoreWrapTypeE15GrWrapOwnership(%class.GrVkGpu*, %struct.VkSemaphore_T*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpu15insertSemaphoreEP11GrSemaphore(%class.GrVkGpu*, %class.GrSemaphore* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrSemaphore, %class.GrSemaphore* %1, i64 1
  %4 = bitcast %class.GrSemaphore* %3 to %"class.GrVkSemaphore::Resource"**
  %5 = load %"class.GrVkSemaphore::Resource"*, %"class.GrVkSemaphore::Resource"** %4, align 8
  %6 = getelementptr inbounds %"class.GrVkSemaphore::Resource", %"class.GrVkSemaphore::Resource"* %5, i64 0, i32 2
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %28

9:                                                ; preds = %2
  %10 = ptrtoint %"class.GrVkSemaphore::Resource"* %5 to i64
  %11 = getelementptr inbounds %"class.GrVkSemaphore::Resource", %"class.GrVkSemaphore::Resource"* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 monotonic
  %13 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 15, i32 0, i32 0, i64 8
  %14 = bitcast i8* %13 to %class.SkTArray.607*
  tail call void @_ZN8SkTArrayIPN13GrVkSemaphore8ResourceELb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.607* %14, i32 1, i32 1) #14
  %15 = bitcast i8* %13 to %"class.GrVkSemaphore::Resource"***
  %16 = load %"class.GrVkSemaphore::Resource"**, %"class.GrVkSemaphore::Resource"*** %15, align 8
  %17 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 15, i32 0, i32 0, i64 16
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = lshr i64 %19, 1
  %21 = and i64 %20, 2147483647
  %22 = getelementptr inbounds %"class.GrVkSemaphore::Resource"*, %"class.GrVkSemaphore::Resource"** %16, i64 %21
  %23 = add i64 %19, 2
  %24 = and i64 %23, 4294967294
  %25 = and i64 %19, -4294967295
  %26 = or i64 %24, %25
  store i64 %26, i64* %18, align 8
  %27 = bitcast %"class.GrVkSemaphore::Resource"** %22 to i64*
  store i64 %10, i64* %27, align 8
  br label %28

28:                                               ; preds = %9, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpu13waitSemaphoreEP11GrSemaphore(%class.GrVkGpu*, %class.GrSemaphore* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrSemaphore, %class.GrSemaphore* %1, i64 1
  %4 = bitcast %class.GrSemaphore* %3 to %"class.GrVkSemaphore::Resource"**
  %5 = load %"class.GrVkSemaphore::Resource"*, %"class.GrVkSemaphore::Resource"** %4, align 8
  %6 = getelementptr inbounds %"class.GrVkSemaphore::Resource", %"class.GrVkSemaphore::Resource"* %5, i64 0, i32 3
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %28

9:                                                ; preds = %2
  %10 = ptrtoint %"class.GrVkSemaphore::Resource"* %5 to i64
  %11 = getelementptr inbounds %"class.GrVkSemaphore::Resource", %"class.GrVkSemaphore::Resource"* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 monotonic
  %13 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 14, i32 0, i32 0, i64 8
  %14 = bitcast i8* %13 to %class.SkTArray.607*
  tail call void @_ZN8SkTArrayIPN13GrVkSemaphore8ResourceELb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.607* %14, i32 1, i32 1) #14
  %15 = bitcast i8* %13 to %"class.GrVkSemaphore::Resource"***
  %16 = load %"class.GrVkSemaphore::Resource"**, %"class.GrVkSemaphore::Resource"*** %15, align 8
  %17 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 14, i32 0, i32 0, i64 16
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = lshr i64 %19, 1
  %21 = and i64 %20, 2147483647
  %22 = getelementptr inbounds %"class.GrVkSemaphore::Resource"*, %"class.GrVkSemaphore::Resource"** %16, i64 %21
  %23 = add i64 %19, 2
  %24 = and i64 %23, 4294967294
  %25 = and i64 %19, -4294967295
  %26 = or i64 %24, %25
  store i64 %26, i64* %18, align 8
  %27 = bitcast %"class.GrVkSemaphore::Resource"** %22 to i64*
  store i64 %10, i64* %27, align 8
  br label %28

28:                                               ; preds = %9, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrSemaphore* @_ZN7GrVkGpu34prepareTextureForCrossContextUsageEP9GrTexture(%class.GrVkGpu*, %class.GrTexture* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrTexture, %class.GrTexture* %1, i64 0, i32 5
  %4 = bitcast %class.GrSurface* %3 to %class.GrVkAttachment**
  %5 = load %class.GrVkAttachment*, %class.GrVkAttachment** %4, align 8
  %6 = getelementptr inbounds %class.GrVkAttachment, %class.GrVkAttachment* %5, i64 0, i32 1
  tail call void @_ZN9GrVkImage27setImageLayoutAndQueueIndexEPK7GrVkGpu13VkImageLayoutjjbj(%class.GrVkImage* %6, %class.GrVkGpu* %0, i32 5, i32 32, i32 128, i1 zeroext false, i32 -1) #14
  %7 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 0
  %8 = tail call zeroext i1 @_ZN5GrGpu11submitToGpuEb(%class.GrGpu* %7, i1 zeroext false) #14
  ret %class.GrSemaphore* null
}

declare zeroext i1 @_ZN5GrGpu11submitToGpuEb(%class.GrGpu*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpu11addDrawableENSt3__110unique_ptrIN10SkDrawable14GpuDrawHandlerENS0_14default_deleteIS3_EEEE(%class.GrVkGpu*, %"class.SkDrawable::GpuDrawHandler"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.SkDrawable::GpuDrawHandler"* %1 to i64
  %4 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 16
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrIN10SkDrawable14GpuDrawHandlerENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.608* %4, i32 1, i32 1) #14
  %5 = getelementptr inbounds %class.SkTArray.608, %class.SkTArray.608* %4, i64 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.609"*, %"class.std::__1::unique_ptr.609"** %5, align 8
  %7 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 16, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = lshr i64 %8, 1
  %10 = and i64 %9, 2147483647
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.609", %"class.std::__1::unique_ptr.609"* %6, i64 %10
  %12 = add i64 %8, 2
  %13 = and i64 %12, 4294967294
  %14 = and i64 %8, -4294967295
  %15 = or i64 %13, %14
  store i64 %15, i64* %7, align 8
  %16 = bitcast %"class.std::__1::unique_ptr.609"* %11 to i64*
  store i64 %3, i64* %16, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7GrVkGpu24storeVkPipelineCacheDataEv(%class.GrVkGpu*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 0, i32 5
  %3 = load %class.GrDirectContext*, %class.GrDirectContext** %2, align 8
  %4 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %3, i64 0, i32 9
  %5 = load %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::PersistentCache"** %4, align 8
  %6 = icmp eq %"class.GrContextOptions::PersistentCache"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 9
  tail call void @_ZN20GrVkResourceProvider22storePipelineCacheDataEv(%class.GrVkResourceProvider* %8) #14
  br label %9

9:                                                ; preds = %1, %7
  ret void
}

declare void @_ZN20GrVkResourceProvider22storePipelineCacheDataEv(%class.GrVkResourceProvider*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #14
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrStagingBufferManager* @_ZN7GrVkGpu20stagingBufferManagerEv(%class.GrVkGpu*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 10
  ret %class.GrStagingBufferManager* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrRingBuffer* @_ZN5GrGpu18uniformsRingBufferEv(%class.GrGpu*) unnamed_addr #0 comdat align 2 {
  ret %class.GrRingBuffer* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7GrVkGpu12isDeviceLostEv(%class.GrVkGpu*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7GrVkGpu16checkFinishProcsEv(%class.GrVkGpu*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 9
  tail call void @_ZN20GrVkResourceProvider19checkCommandBuffersEv(%class.GrVkResourceProvider* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7GrVkGpu29releaseUnlockedBackendObjectsEv(%class.GrVkGpu*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %0, i64 0, i32 9
  tail call void @_ZN20GrVkResourceProvider29releaseUnlockedBackendObjectsEv(%class.GrVkResourceProvider* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5GrGpu16precompileShaderERK6SkDataS2_(%class.GrGpu*, %class.SkData* dereferenceable(40), %class.SkData* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7GrVkGpu25getPreferredStencilFormatERK15GrBackendFormat(%class.GrBackendFormat* noalias sret, %class.GrVkGpu*, %class.GrBackendFormat* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %struct.GrVkYcbcrConversionInfo, align 8
  %5 = getelementptr inbounds %class.GrVkGpu, %class.GrVkGpu* %1, i64 0, i32 3, i32 0
  %6 = load %class.GrVkCaps*, %class.GrVkCaps** %5, align 8
  %7 = getelementptr inbounds %class.GrVkCaps, %class.GrVkCaps* %6, i64 0, i32 4
  %8 = load i32, i32* %7, align 4
  %9 = bitcast %struct.GrVkYcbcrConversionInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #14, !noalias !38
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 48, i1 false) #14, !noalias !38
  call void @_ZN15GrBackendFormatC1E8VkFormatRK23GrVkYcbcrConversionInfo(%class.GrBackendFormat* %0, i32 %8, %struct.GrVkYcbcrConversionInfo* nonnull dereferenceable(48) %4) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #14, !noalias !38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5GrGpu30insertManualFramebufferBarrierEv(%class.GrGpu*) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.15, i64 0, i64 0), i32 641, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.16, i64 0, i64 0)) #16
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5GrGpu14onResetContextEj(%class.GrGpu*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5GrGpu22onResetTextureBindingsEv(%class.GrGpu*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI5sk_spI18GrRefCntedCallbackELb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.549*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.549, %class.SkTArray.549* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %95

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %95, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #14
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %83, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.549, %class.SkTArray.549* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %77, %48
  %51 = phi i64 [ 0, %48 ], [ %78, %77 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %class.sk_sp.142*, %class.sk_sp.142** %49, align 8
  %55 = getelementptr inbounds %class.sk_sp.142, %class.sk_sp.142* %54, i64 %51
  %56 = getelementptr inbounds %class.sk_sp.142, %class.sk_sp.142* %55, i64 0, i32 0
  %57 = bitcast %class.sk_sp.142* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %class.GrRefCntedCallback* null, %class.GrRefCntedCallback** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %class.sk_sp.142*, %class.sk_sp.142** %49, align 8
  %61 = getelementptr inbounds %class.sk_sp.142, %class.sk_sp.142* %60, i64 %51, i32 0
  %62 = load %class.GrRefCntedCallback*, %class.GrRefCntedCallback** %61, align 8
  %63 = icmp eq %class.GrRefCntedCallback* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %50
  %65 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %62, i64 0, i32 0
  %66 = getelementptr inbounds %class.GrRefCntedCallback, %class.GrRefCntedCallback* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw add i32* %66, i32 -1 acq_rel
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %77

69:                                               ; preds = %64
  %70 = getelementptr inbounds %class.SkNVRefCnt.143, %class.SkNVRefCnt.143* %65, i64 2
  %71 = bitcast %class.SkNVRefCnt.143* %70 to void (i8*)**
  %72 = load void (i8*)*, void (i8*)** %71, align 8
  %73 = getelementptr inbounds %class.SkNVRefCnt.143, %class.SkNVRefCnt.143* %65, i64 4
  %74 = bitcast %class.SkNVRefCnt.143* %73 to i8**
  %75 = load i8*, i8** %74, align 8
  tail call void %72(i8* %75) #14
  %76 = bitcast %class.GrRefCntedCallback* %62 to i8*
  tail call void @_ZdlPv(i8* %76) #15
  br label %77

77:                                               ; preds = %69, %64, %50
  %78 = add nuw nsw i64 %51, 1
  %79 = load i64, i64* %4, align 8
  %80 = lshr i64 %79, 1
  %81 = and i64 %80, 2147483647
  %82 = icmp ult i64 %78, %81
  br i1 %82, label %50, label %83

83:                                               ; preds = %77, %35
  %84 = phi i64 [ %45, %35 ], [ %79, %77 ]
  %85 = and i64 %84, 1
  %86 = icmp eq i64 %85, 0
  %87 = bitcast %class.SkTArray.549* %0 to i8**
  br i1 %86, label %91, label %88

88:                                               ; preds = %83
  %89 = load i8*, i8** %87, align 8
  tail call void @_Z7sk_freePv(i8* %89) #14
  %90 = load i64, i64* %4, align 8
  br label %91

91:                                               ; preds = %83, %88
  %92 = phi i64 [ %90, %88 ], [ %84, %83 ]
  store i8* %44, i8** %87, align 8
  %93 = and i64 %92, -4294967298
  %94 = or i64 %93, 1
  store i64 %94, i64* %4, align 8
  br label %95

95:                                               ; preds = %91, %32, %21
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI5sk_spIK8GrBufferELb0EE12checkReallocEiNS4_11ReallocTypeE(%class.SkTArray.530*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.530, %class.SkTArray.530* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %87

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %87, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #14
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %75, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.530, %class.SkTArray.530* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %69, %48
  %51 = phi i64 [ 0, %48 ], [ %70, %69 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %class.sk_sp.531*, %class.sk_sp.531** %49, align 8
  %55 = getelementptr inbounds %class.sk_sp.531, %class.sk_sp.531* %54, i64 %51
  %56 = getelementptr inbounds %class.sk_sp.531, %class.sk_sp.531* %55, i64 0, i32 0
  %57 = bitcast %class.sk_sp.531* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %class.GrBuffer* null, %class.GrBuffer** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %class.sk_sp.531*, %class.sk_sp.531** %49, align 8
  %61 = getelementptr inbounds %class.sk_sp.531, %class.sk_sp.531* %60, i64 %51, i32 0
  %62 = load %class.GrBuffer*, %class.GrBuffer** %61, align 8
  %63 = icmp eq %class.GrBuffer* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %50
  %65 = bitcast %class.GrBuffer* %62 to void (%class.GrBuffer*)***
  %66 = load void (%class.GrBuffer*)**, void (%class.GrBuffer*)*** %65, align 8
  %67 = getelementptr inbounds void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %66, i64 3
  %68 = load void (%class.GrBuffer*)*, void (%class.GrBuffer*)** %67, align 8
  tail call void %68(%class.GrBuffer* nonnull %62) #14
  br label %69

69:                                               ; preds = %64, %50
  %70 = add nuw nsw i64 %51, 1
  %71 = load i64, i64* %4, align 8
  %72 = lshr i64 %71, 1
  %73 = and i64 %72, 2147483647
  %74 = icmp ult i64 %70, %73
  br i1 %74, label %50, label %75

75:                                               ; preds = %69, %35
  %76 = phi i64 [ %45, %35 ], [ %71, %69 ]
  %77 = and i64 %76, 1
  %78 = icmp eq i64 %77, 0
  %79 = bitcast %class.SkTArray.530* %0 to i8**
  br i1 %78, label %83, label %80

80:                                               ; preds = %75
  %81 = load i8*, i8** %79, align 8
  tail call void @_Z7sk_freePv(i8* %81) #14
  %82 = load i64, i64* %4, align 8
  br label %83

83:                                               ; preds = %75, %80
  %84 = phi i64 [ %82, %80 ], [ %76, %75 ]
  store i8* %44, i8** %79, align 8
  %85 = and i64 %84, -4294967298
  %86 = or i64 %85, 1
  store i64 %86, i64* %4, align 8
  br label %87

87:                                               ; preds = %83, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI5gr_spIK9GrSurfaceXadL_ZNK7GrIORefI13GrGpuResourceE21addCommandBufferUsageEvEEXadL_ZNKS5_24removeCommandBufferUsageEvEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.534*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.534, %class.SkTArray.534* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %90

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %90, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #14
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %78, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.534, %class.SkTArray.534* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %72, %48
  %51 = phi i64 [ 0, %48 ], [ %73, %72 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %class.gr_sp.535*, %class.gr_sp.535** %49, align 8
  %55 = getelementptr inbounds %class.gr_sp.535, %class.gr_sp.535* %54, i64 %51
  %56 = getelementptr inbounds %class.gr_sp.535, %class.gr_sp.535* %55, i64 0, i32 0
  %57 = bitcast %class.gr_sp.535* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %class.GrSurface* null, %class.GrSurface** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %class.gr_sp.535*, %class.gr_sp.535** %49, align 8
  %61 = getelementptr inbounds %class.gr_sp.535, %class.gr_sp.535* %60, i64 %51, i32 0
  %62 = load %class.GrSurface*, %class.GrSurface** %61, align 8
  %63 = icmp eq %class.GrSurface* %62, null
  br i1 %63, label %72, label %64

64:                                               ; preds = %50
  %65 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %62, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 -1 acq_rel
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %72

68:                                               ; preds = %64
  %69 = getelementptr inbounds %class.GrSurface, %class.GrSurface* %62, i64 0, i32 0, i32 1
  %70 = getelementptr inbounds %class.GrIORef, %class.GrIORef* %69, i64 -1
  %71 = bitcast %class.GrIORef* %70 to %class.GrGpuResource*
  tail call void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource* %71, i32 1) #14
  br label %72

72:                                               ; preds = %68, %64, %50
  %73 = add nuw nsw i64 %51, 1
  %74 = load i64, i64* %4, align 8
  %75 = lshr i64 %74, 1
  %76 = and i64 %75, 2147483647
  %77 = icmp ult i64 %73, %76
  br i1 %77, label %50, label %78

78:                                               ; preds = %72, %35
  %79 = phi i64 [ %45, %35 ], [ %74, %72 ]
  %80 = and i64 %79, 1
  %81 = icmp eq i64 %80, 0
  %82 = bitcast %class.SkTArray.534* %0 to i8**
  br i1 %81, label %86, label %83

83:                                               ; preds = %78
  %84 = load i8*, i8** %82, align 8
  tail call void @_Z7sk_freePv(i8* %84) #14
  %85 = load i64, i64* %4, align 8
  br label %86

86:                                               ; preds = %78, %83
  %87 = phi i64 [ %85, %83 ], [ %79, %78 ]
  store i8* %44, i8** %82, align 8
  %88 = and i64 %87, -4294967298
  %89 = or i64 %88, 1
  store i64 %89, i64* %4, align 8
  br label %90

90:                                               ; preds = %86, %32, %21
  ret void
}

declare void @_ZNK13GrGpuResource19notifyARefCntIsZeroEN7GrIORefIS_E14LastRemovedRefE(%class.GrGpuResource*, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #4

declare i64 @_Z20SkCompressedDataSizeN7SkImage15CompressionTypeE7SkISizeP8SkTArrayImLb0EEb(i32, i64, %class.SkTArray.697*, i1 zeroext) local_unnamed_addr #2

declare i64 @_Z22GrCompressedDimensionsN7SkImage15CompressionTypeE7SkISize(i32, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI17VkBufferImageCopyLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.698*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.698, %class.SkTArray.698* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %74

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %74, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 56) #14
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %62, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.698, %class.SkTArray.698* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %57, %50 ]
  %52 = mul nuw nsw i64 %51, 56
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %struct.VkBufferImageCopy*, %struct.VkBufferImageCopy** %49, align 8
  %55 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %54, i64 %51
  %56 = bitcast %struct.VkBufferImageCopy* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %56, i64 56, i1 false) #14
  %57 = add nuw nsw i64 %51, 1
  %58 = load i64, i64* %4, align 8
  %59 = lshr i64 %58, 1
  %60 = and i64 %59, 2147483647
  %61 = icmp ult i64 %57, %60
  br i1 %61, label %50, label %62

62:                                               ; preds = %50, %35
  %63 = phi i64 [ %45, %35 ], [ %58, %50 ]
  %64 = and i64 %63, 1
  %65 = icmp eq i64 %64, 0
  %66 = bitcast %class.SkTArray.698* %0 to i8**
  br i1 %65, label %70, label %67

67:                                               ; preds = %62
  %68 = load i8*, i8** %66, align 8
  tail call void @_Z7sk_freePv(i8* %68) #14
  %69 = load i64, i64* %4, align 8
  br label %70

70:                                               ; preds = %62, %67
  %71 = phi i64 [ %69, %67 ], [ %63, %62 ]
  store i8* %44, i8** %66, align 8
  %72 = and i64 %71, -4294967298
  %73 = or i64 %72, 1
  store i64 %73, i64* %4, align 8
  br label %74

74:                                               ; preds = %70, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayImLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray.697*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.697, %class.SkTArray.697* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %75

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %75, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #14
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %63, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.697, %class.SkTArray.697* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %58, %50 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = bitcast i8* %53 to i64*
  %55 = load i64*, i64** %49, align 8
  %56 = getelementptr inbounds i64, i64* %55, i64 %51
  %57 = load i64, i64* %56, align 8
  store i64 %57, i64* %54, align 8
  %58 = add nuw nsw i64 %51, 1
  %59 = load i64, i64* %4, align 8
  %60 = lshr i64 %59, 1
  %61 = and i64 %60, 2147483647
  %62 = icmp ult i64 %58, %61
  br i1 %62, label %50, label %63

63:                                               ; preds = %50, %35
  %64 = phi i64 [ %45, %35 ], [ %59, %50 ]
  %65 = and i64 %64, 1
  %66 = icmp eq i64 %65, 0
  %67 = bitcast %class.SkTArray.697* %0 to i8**
  br i1 %66, label %71, label %68

68:                                               ; preds = %63
  %69 = load i8*, i8** %67, align 8
  tail call void @_Z7sk_freePv(i8* %69) #14
  %70 = load i64, i64* %4, align 8
  br label %71

71:                                               ; preds = %63, %68
  %72 = phi i64 [ %70, %68 ], [ %64, %63 ]
  store i8* %44, i8** %67, align 8
  %73 = and i64 %72, -4294967298
  %74 = or i64 %73, 1
  store i64 %74, i64* %4, align 8
  br label %75

75:                                               ; preds = %71, %32, %21
  ret void
}

declare dereferenceable(40) %"struct.GrVkCaps::FormatInfo"* @_ZNK8GrVkCaps13getFormatInfoE8VkFormat(%class.GrVkCaps*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK8GrVkCaps18isFormatRenderableE8VkFormati(%class.GrVkCaps*, i32, i32) local_unnamed_addr #2

declare void @_ZN15GrBackendFormatC1E8VkFormatRK23GrVkYcbcrConversionInfo(%class.GrBackendFormat*, i32, %struct.GrVkYcbcrConversionInfo* dereferenceable(48)) unnamed_addr #2

declare void @_ZN20GrVkResourceProvider29releaseUnlockedBackendObjectsEv(%class.GrVkResourceProvider*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIPN13GrVkSemaphore8ResourceELb0EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray.607*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.607, %class.SkTArray.607* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %76

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %76, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #14
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.607, %class.SkTArray.607* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %59, %50 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %"class.GrVkSemaphore::Resource"**, %"class.GrVkSemaphore::Resource"*** %49, align 8
  %55 = getelementptr inbounds %"class.GrVkSemaphore::Resource"*, %"class.GrVkSemaphore::Resource"** %54, i64 %51
  %56 = bitcast %"class.GrVkSemaphore::Resource"** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast i8* %53 to i64*
  store i64 %57, i64* %58, align 8
  %59 = add nuw nsw i64 %51, 1
  %60 = load i64, i64* %4, align 8
  %61 = lshr i64 %60, 1
  %62 = and i64 %61, 2147483647
  %63 = icmp ult i64 %59, %62
  br i1 %63, label %50, label %64

64:                                               ; preds = %50, %35
  %65 = phi i64 [ %45, %35 ], [ %60, %50 ]
  %66 = and i64 %65, 1
  %67 = icmp eq i64 %66, 0
  %68 = bitcast %class.SkTArray.607* %0 to i8**
  br i1 %67, label %72, label %69

69:                                               ; preds = %64
  %70 = load i8*, i8** %68, align 8
  tail call void @_Z7sk_freePv(i8* %70) #14
  %71 = load i64, i64* %4, align 8
  br label %72

72:                                               ; preds = %64, %69
  %73 = phi i64 [ %71, %69 ], [ %65, %64 ]
  store i8* %44, i8** %68, align 8
  %74 = and i64 %73, -4294967298
  %75 = or i64 %74, 1
  store i64 %75, i64* %4, align 8
  br label %76

76:                                               ; preds = %72, %32, %21
  ret void
}

declare void @_ZN17GrVkOpsRenderPassC1EP7GrVkGpu(%class.GrVkOpsRenderPass*, %class.GrVkGpu*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayINSt3__110unique_ptrIN10SkDrawable14GpuDrawHandlerENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.608*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.608, %class.SkTArray.608* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %87

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %87, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #14
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %75, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.608, %class.SkTArray.608* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %69, %48
  %51 = phi i64 [ 0, %48 ], [ %70, %69 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %"class.std::__1::unique_ptr.609"*, %"class.std::__1::unique_ptr.609"** %49, align 8
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.609", %"class.std::__1::unique_ptr.609"* %54, i64 %51
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.609", %"class.std::__1::unique_ptr.609"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.std::__1::unique_ptr.609"* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %"class.SkDrawable::GpuDrawHandler"* null, %"class.SkDrawable::GpuDrawHandler"** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %"class.std::__1::unique_ptr.609"*, %"class.std::__1::unique_ptr.609"** %49, align 8
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.609", %"class.std::__1::unique_ptr.609"* %60, i64 %51, i32 0, i32 0, i32 0
  %62 = load %"class.SkDrawable::GpuDrawHandler"*, %"class.SkDrawable::GpuDrawHandler"** %61, align 8
  store %"class.SkDrawable::GpuDrawHandler"* null, %"class.SkDrawable::GpuDrawHandler"** %61, align 8
  %63 = icmp eq %"class.SkDrawable::GpuDrawHandler"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %50
  %65 = bitcast %"class.SkDrawable::GpuDrawHandler"* %62 to void (%"class.SkDrawable::GpuDrawHandler"*)***
  %66 = load void (%"class.SkDrawable::GpuDrawHandler"*)**, void (%"class.SkDrawable::GpuDrawHandler"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.SkDrawable::GpuDrawHandler"*)*, void (%"class.SkDrawable::GpuDrawHandler"*)** %66, i64 1
  %68 = load void (%"class.SkDrawable::GpuDrawHandler"*)*, void (%"class.SkDrawable::GpuDrawHandler"*)** %67, align 8
  tail call void %68(%"class.SkDrawable::GpuDrawHandler"* nonnull %62) #14
  br label %69

69:                                               ; preds = %64, %50
  %70 = add nuw nsw i64 %51, 1
  %71 = load i64, i64* %4, align 8
  %72 = lshr i64 %71, 1
  %73 = and i64 %72, 2147483647
  %74 = icmp ult i64 %70, %73
  br i1 %74, label %50, label %75

75:                                               ; preds = %69, %35
  %76 = phi i64 [ %45, %35 ], [ %71, %69 ]
  %77 = and i64 %76, 1
  %78 = icmp eq i64 %77, 0
  %79 = bitcast %class.SkTArray.608* %0 to i8**
  br i1 %78, label %83, label %80

80:                                               ; preds = %75
  %81 = load i8*, i8** %79, align 8
  tail call void @_Z7sk_freePv(i8* %81) #14
  %82 = load i64, i64* %4, align 8
  br label %83

83:                                               ; preds = %75, %80
  %84 = phi i64 [ %82, %80 ], [ %76, %75 ]
  store i8* %44, i8** %79, align 8
  %85 = and i64 %84, -4294967298
  %86 = or i64 %85, 1
  store i64 %86, i64* %4, align 8
  br label %87

87:                                               ; preds = %83, %32, %21
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #13

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #13

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI23VkImageSubresourceRangeLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.704*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.704, %class.SkTArray.704* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %74

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %74, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 20) #14
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %62, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.704, %class.SkTArray.704* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %57, %50 ]
  %52 = mul nuw nsw i64 %51, 20
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %struct.VkImageSubresourceRange*, %struct.VkImageSubresourceRange** %49, align 8
  %55 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %54, i64 %51
  %56 = bitcast %struct.VkImageSubresourceRange* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %53, i8* align 4 %56, i64 20, i1 false) #14
  %57 = add nuw nsw i64 %51, 1
  %58 = load i64, i64* %4, align 8
  %59 = lshr i64 %58, 1
  %60 = and i64 %59, 2147483647
  %61 = icmp ult i64 %57, %60
  br i1 %61, label %50, label %62

62:                                               ; preds = %50, %35
  %63 = phi i64 [ %45, %35 ], [ %58, %50 ]
  %64 = and i64 %63, 1
  %65 = icmp eq i64 %64, 0
  %66 = bitcast %class.SkTArray.704* %0 to i8**
  br i1 %65, label %70, label %67

67:                                               ; preds = %62
  %68 = load i8*, i8** %66, align 8
  tail call void @_Z7sk_freePv(i8* %68) #14
  %69 = load i64, i64* %4, align 8
  br label %70

70:                                               ; preds = %62, %67
  %71 = phi i64 [ %69, %67 ], [ %63, %62 ]
  store i8* %44, i8** %66, align 8
  %72 = and i64 %71, -4294967298
  %73 = or i64 %72, 1
  store i64 %73, i64* %4, align 8
  br label %74

74:                                               ; preds = %70, %32, %21
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readnone speculatable }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN20GrVkResourceProvider21refPipelineStateCacheEv: argument 0"}
!5 = distinct !{!5, !"_ZN20GrVkResourceProvider21refPipelineStateCacheEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_Z9sk_ref_spI15GrVkFramebufferE5sk_spIT_EPKS2_: argument 0"}
!8 = distinct !{!8, !"_Z9sk_ref_spI15GrVkFramebufferE5sk_spIT_EPKS2_"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_Z9sk_ref_spIK9GrSurfaceE5sk_spIT_EPKS3_: argument 0"}
!14 = distinct !{!14, !"_Z9sk_ref_spIK9GrSurfaceE5sk_spIT_EPKS3_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_Z9sk_ref_spIK9GrSurfaceE5sk_spIT_EPKS3_: argument 0"}
!17 = distinct !{!17, !"_Z9sk_ref_spIK9GrSurfaceE5sk_spIT_EPKS3_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN15GrBackendFormat6MakeVkE8VkFormat: argument 0"}
!20 = distinct !{!20, !"_ZN15GrBackendFormat6MakeVkE8VkFormat"}
!21 = distinct !{!21, !10}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN18GrRefCntedCallback4MakeEPFvPvES0_: argument 0"}
!24 = distinct !{!24, !"_ZN18GrRefCntedCallback4MakeEPFvPvES0_"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_Z9sk_ref_spIK9GrSurfaceE5sk_spIT_EPKS3_: argument 0"}
!27 = distinct !{!27, !"_Z9sk_ref_spIK9GrSurfaceE5sk_spIT_EPKS3_"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_Z9sk_ref_spIK9GrSurfaceE5sk_spIT_EPKS3_: argument 0"}
!30 = distinct !{!30, !"_Z9sk_ref_spIK9GrSurfaceE5sk_spIT_EPKS3_"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_Z9sk_ref_spIK9GrSurfaceE5sk_spIT_EPKS3_: argument 0"}
!33 = distinct !{!33, !"_Z9sk_ref_spIK9GrSurfaceE5sk_spIT_EPKS3_"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_Z9sk_ref_spIK9GrSurfaceE5sk_spIT_EPKS3_: argument 0"}
!36 = distinct !{!36, !"_Z9sk_ref_spIK9GrSurfaceE5sk_spIT_EPKS3_"}
!37 = distinct !{!37, !10}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN15GrBackendFormat6MakeVkE8VkFormat: argument 0"}
!40 = distinct !{!40, !"_ZN15GrBackendFormat6MakeVkE8VkFormat"}
