; ModuleID = '../../ui/base/layout.cc'
source_filename = "../../ui/base/layout.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%union.anon = type { i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%union.anon.13 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.ui::test::ScopedSetSupportedScaleFactors" = type { %"class.std::__1::vector"* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { float*, float*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { float* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.aura::Window" = type opaque
%"class.display::Display" = type { i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, %"class.absl::optional", i32, i32, %"class.gfx::Size", %"class.gfx::DisplayColorSpaces", i32, i32, i8, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.9" }
%"class.absl::optional.9" = type { %"class.absl::optional_internal::optional_data.10" }
%"class.absl::optional_internal::optional_data.10" = type { %"class.absl::optional_internal::optional_data_base.11" }
%"class.absl::optional_internal::optional_data_base.11" = type { %"class.absl::optional_internal::optional_data_dtor_base.12" }
%"class.absl::optional_internal::optional_data_dtor_base.12" = type { i8, %union.anon.13 }
%"class.display::Screen" = type { i32 (...)**, i64, i64 }

@_ZN2ui12_GLOBAL__N_125g_supported_scale_factorsE = internal unnamed_addr global %"class.std::__1::vector"* null, align 8
@__const._ZN2ui27GetScaleFactorForNativeViewEPN4aura6WindowE.display = private unnamed_addr constant { i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, { { { { i8, [3 x i8], %union.anon } } } }, i32, i32, %"class.gfx::Size", { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, [4 x i8], { { { { i8, [7 x i8], %union.anon.13 } } } } }, i32, i32, i8, [3 x i8], i32 } { i64 -6148914691236517206, %"class.gfx::Rect" { %"class.gfx::Point" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 } }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Rect" { %"class.gfx::Point" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 } }, float 0xFFFFFFFFE0000000, i32 -1431655766, { { { { i8, [3 x i8], %union.anon } } } } { { { { i8, [3 x i8], %union.anon } } } { { { i8, [3 x i8], %union.anon } } { { i8, [3 x i8], %union.anon } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon { i32 -1431655766 } } } } }, i32 -1431655766, i32 -1431655766, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 }, { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, [4 x i8], { { { { i8, [7 x i8], %union.anon.13 } } } } } { [6 x %"class.gfx::ColorSpace"] [%"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }], [6 x i32] [i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766], float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.13 } } } } { { { { i8, [7 x i8], %union.anon.13 } } } { { { i8, [7 x i8], %union.anon.13 } } { { i8, [7 x i8], %union.anon.13 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.13 { %"struct.gfx::HDRStaticMetadata" { double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF } } } } } } }, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766 }, align 8

@_ZN2ui4test30ScopedSetSupportedScaleFactorsC1ERKNSt3__16vectorINS_11ScaleFactorENS2_9allocatorIS4_EEEE = hidden unnamed_addr alias void (%"class.ui::test::ScopedSetSupportedScaleFactors"*, %"class.std::__1::vector"*), void (%"class.ui::test::ScopedSetSupportedScaleFactors"*, %"class.std::__1::vector"*)* @_ZN2ui4test30ScopedSetSupportedScaleFactorsC2ERKNSt3__16vectorINS_11ScaleFactorENS2_9allocatorIS4_EEEE
@_ZN2ui4test30ScopedSetSupportedScaleFactorsD1Ev = hidden unnamed_addr alias void (%"class.ui::test::ScopedSetSupportedScaleFactors"*), void (%"class.ui::test::ScopedSetSupportedScaleFactors"*)* @_ZN2ui4test30ScopedSetSupportedScaleFactorsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui24SetSupportedScaleFactorsERKNSt3__16vectorINS_11ScaleFactorENS0_9allocatorIS2_EEEE(%"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %2 = alloca %"class.std::__1::vector.1", align 8
  %3 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** @_ZN2ui12_GLOBAL__N_125g_supported_scale_factorsE, align 8
  %4 = icmp eq %"class.std::__1::vector"* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp eq i32* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = ptrtoint i32* %7 to i64
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %12 = bitcast i32** %11 to i64*
  store i64 %10, i64* %12, align 8
  %13 = bitcast i32* %7 to i8*
  tail call void @_ZdlPv(i8* %13) #10
  br label %14

14:                                               ; preds = %5, %9
  %15 = bitcast %"class.std::__1::vector"* %3 to i8*
  tail call void @_ZdlPv(i8* %15) #10
  br label %16

16:                                               ; preds = %1, %14
  %17 = tail call i8* @_Znwm(i64 24) #10
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 24, i1 false) #11
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::vector"* %0 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %20, %22
  %24 = ashr exact i64 %23, 2
  %25 = icmp eq i64 %23, 0
  br i1 %25, label %50, label %26

26:                                               ; preds = %16
  %27 = icmp ugt i64 %24, 4611686018427387903
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = bitcast i8* %17 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %29) #12
  unreachable

30:                                               ; preds = %26
  %31 = tail call i8* @_Znwm(i64 %23) #10
  %32 = bitcast i8* %31 to i32*
  %33 = getelementptr inbounds i8, i8* %17, i64 8
  %34 = bitcast i8* %33 to i8**
  store i8* %31, i8** %34, align 8
  %35 = bitcast i8* %17 to i8**
  store i8* %31, i8** %35, align 8
  %36 = getelementptr inbounds i32, i32* %32, i64 %24
  %37 = getelementptr inbounds i8, i8* %17, i64 16
  %38 = bitcast i8* %37 to i32**
  store i32* %36, i32** %38, align 8
  %39 = bitcast i8* %33 to i64*
  %40 = ptrtoint i8* %31 to i64
  %41 = icmp sgt i64 %23, 0
  br i1 %41, label %42, label %47

42:                                               ; preds = %30
  %43 = lshr exact i64 %23, 2
  %44 = inttoptr i64 %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %31, i8* align 4 %44, i64 %23, i1 false) #11
  %45 = getelementptr inbounds i32, i32* %32, i64 %43
  %46 = ptrtoint i32* %45 to i64
  br label %47

47:                                               ; preds = %42, %30
  %48 = phi i64 [ %46, %42 ], [ %40, %30 ]
  store i64 %48, i64* %39, align 8
  %49 = inttoptr i64 %48 to i32*
  br label %50

50:                                               ; preds = %16, %47
  %51 = phi i32* [ null, %16 ], [ %49, %47 ]
  %52 = phi i32* [ null, %16 ], [ %32, %47 ]
  store i8* %17, i8** bitcast (%"class.std::__1::vector"** @_ZN2ui12_GLOBAL__N_125g_supported_scale_factorsE to i8**), align 8
  tail call fastcc void @"_ZNSt3__16__sortIRZN2ui24SetSupportedScaleFactorsERKNS_6vectorINS1_11ScaleFactorENS_9allocatorIS3_EEEEE3$_0PS3_EEvT0_SC_T_"(i32* %52, i32* %51) #11
  %53 = bitcast %"class.std::__1::vector.1"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #11
  %54 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %2, i64 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %2, i64 0, i32 0, i32 1
  %56 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 24, i1 false) #11
  %57 = load i32**, i32*** bitcast (%"class.std::__1::vector"** @_ZN2ui12_GLOBAL__N_125g_supported_scale_factorsE to i32***), align 8
  %58 = load i32*, i32** %57, align 8
  %59 = getelementptr inbounds i32*, i32** %57, i64 1
  %60 = load i32*, i32** %59, align 8
  %61 = icmp eq i32* %58, %60
  br i1 %61, label %66, label %62

62:                                               ; preds = %50
  %63 = bitcast float** %55 to i64*
  %64 = bitcast %"class.std::__1::vector.1"* %2 to i64*
  %65 = bitcast float** %56 to i64*
  br label %74

66:                                               ; preds = %133, %50
  call void @_ZN3gfx9ImageSkia18SetSupportedScalesERKNSt3__16vectorIfNS1_9allocatorIfEEEE(%"class.std::__1::vector.1"* nonnull dereferenceable(24) %2) #11
  %67 = load float*, float** %54, align 8
  %68 = icmp eq float* %67, null
  br i1 %68, label %73, label %69

69:                                               ; preds = %66
  %70 = ptrtoint float* %67 to i64
  %71 = bitcast float** %55 to i64*
  store i64 %70, i64* %71, align 8
  %72 = bitcast float* %67 to i8*
  call void @_ZdlPv(i8* %72) #10
  br label %73

73:                                               ; preds = %66, %69
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #11
  ret void

74:                                               ; preds = %141, %62
  %75 = phi i64 [ 0, %62 ], [ %134, %141 ]
  %76 = phi float* [ null, %62 ], [ %142, %141 ]
  %77 = phi float* [ null, %62 ], [ %135, %141 ]
  %78 = phi i32* [ %58, %62 ], [ %136, %141 ]
  %79 = load i32, i32* %78, align 4
  %80 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %79) #11
  %81 = icmp ult float* %77, %76
  %82 = ptrtoint float* %76 to i64
  br i1 %81, label %83, label %86

83:                                               ; preds = %74
  store float %80, float* %77, align 4
  %84 = getelementptr inbounds float, float* %77, i64 1
  %85 = ptrtoint float* %84 to i64
  store i64 %85, i64* %63, align 8
  br label %133

86:                                               ; preds = %74
  %87 = ptrtoint float* %77 to i64
  %88 = load i64, i64* %64, align 8
  %89 = sub i64 %87, %88
  %90 = ashr exact i64 %89, 2
  %91 = add nsw i64 %90, 1
  %92 = icmp ugt i64 %91, 4611686018427387903
  br i1 %92, label %93, label %95

93:                                               ; preds = %86
  %94 = bitcast %"class.std::__1::vector.1"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %94) #12
  unreachable

95:                                               ; preds = %86
  %96 = sub i64 %82, %88
  %97 = ashr exact i64 %96, 2
  %98 = icmp ult i64 %97, 2305843009213693951
  br i1 %98, label %99, label %107

99:                                               ; preds = %95
  %100 = ashr exact i64 %96, 1
  %101 = icmp ult i64 %100, %91
  %102 = select i1 %101, i64 %91, i64 %100
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %112, label %104

104:                                              ; preds = %99
  %105 = icmp ugt i64 %102, 4611686018427387903
  br i1 %105, label %106, label %107

106:                                              ; preds = %104
  tail call void @abort() #12
  unreachable

107:                                              ; preds = %104, %95
  %108 = phi i64 [ %102, %104 ], [ 4611686018427387903, %95 ]
  %109 = shl i64 %108, 2
  %110 = tail call i8* @_Znwm(i64 %109) #10
  %111 = bitcast i8* %110 to float*
  br label %112

112:                                              ; preds = %107, %99
  %113 = phi i64 [ %108, %107 ], [ 0, %99 ]
  %114 = phi float* [ %111, %107 ], [ null, %99 ]
  %115 = getelementptr inbounds float, float* %114, i64 %90
  %116 = getelementptr inbounds float, float* %114, i64 %113
  %117 = ptrtoint float* %116 to i64
  store float %80, float* %115, align 4
  %118 = getelementptr inbounds float, float* %115, i64 1
  %119 = ptrtoint float* %118 to i64
  %120 = sub i64 %75, %88
  %121 = ashr exact i64 %120, 2
  %122 = sub nsw i64 0, %121
  %123 = getelementptr inbounds float, float* %115, i64 %122
  %124 = ptrtoint float* %123 to i64
  %125 = icmp sgt i64 %120, 0
  br i1 %125, label %126, label %129

126:                                              ; preds = %112
  %127 = bitcast float* %123 to i8*
  %128 = inttoptr i64 %88 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %127, i8* align 4 %128, i64 %120, i1 false) #11
  br label %129

129:                                              ; preds = %126, %112
  store i64 %124, i64* %64, align 8
  store i64 %119, i64* %63, align 8
  store i64 %117, i64* %65, align 8
  %130 = icmp eq i64 %88, 0
  br i1 %130, label %133, label %131

131:                                              ; preds = %129
  %132 = inttoptr i64 %88 to i8*
  tail call void @_ZdlPv(i8* %132) #10
  br label %133

133:                                              ; preds = %83, %129, %131
  %134 = phi i64 [ %85, %83 ], [ %119, %129 ], [ %119, %131 ]
  %135 = phi float* [ %84, %83 ], [ %118, %129 ], [ %118, %131 ]
  %136 = getelementptr inbounds i32, i32* %78, i64 1
  %137 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** @_ZN2ui12_GLOBAL__N_125g_supported_scale_factorsE, align 8
  %138 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %137, i64 0, i32 0, i32 1
  %139 = load i32*, i32** %138, align 8
  %140 = icmp eq i32* %136, %139
  br i1 %140, label %66, label %141

141:                                              ; preds = %133
  %142 = load float*, float** %56, align 8
  br label %74
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32) local_unnamed_addr #4

declare void @_ZN3gfx9ImageSkia18SetSupportedScalesERKNSt3__16vectorIfNS1_9allocatorIfEEEE(%"class.std::__1::vector.1"* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector"* @_ZN2ui24GetSupportedScaleFactorsEv() local_unnamed_addr #5 {
  %1 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** @_ZN2ui12_GLOBAL__N_125g_supported_scale_factorsE, align 8
  ret %"class.std::__1::vector"* %1
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2ui23GetSupportedScaleFactorEf(float) local_unnamed_addr #0 {
  %2 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** @_ZN2ui12_GLOBAL__N_125g_supported_scale_factorsE, align 8
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %9, label %11

9:                                                ; preds = %11, %1
  %10 = phi i32 [ 1, %1 ], [ %24, %11 ]
  ret i32 %10

11:                                               ; preds = %1, %11
  %12 = phi %"class.std::__1::vector"* [ %27, %11 ], [ %2, %1 ]
  %13 = phi i64 [ %26, %11 ], [ 0, %1 ]
  %14 = phi float [ %25, %11 ], [ 0x47EFFFFFE0000000, %1 ]
  %15 = phi i32 [ %24, %11 ], [ 1, %1 ]
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = getelementptr inbounds i32, i32* %17, i64 %13
  %19 = load i32, i32* %18, align 4
  %20 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %19) #11
  %21 = fsub float %20, %0
  %22 = tail call float @llvm.fabs.f32(float %21) #11
  %23 = fcmp olt float %22, %14
  %24 = select i1 %23, i32 %19, i32 %15
  %25 = select i1 %23, float %22, float %14
  %26 = add nuw i64 %13, 1
  %27 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** @_ZN2ui12_GLOBAL__N_125g_supported_scale_factorsE, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %27, i64 0, i32 0, i32 1
  %29 = bitcast i32** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.std::__1::vector"* %27 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %30, %32
  %34 = ashr exact i64 %33, 2
  %35 = icmp ult i64 %26, %34
  br i1 %35, label %11, label %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui16IsSupportedScaleEf(float) local_unnamed_addr #0 {
  %2 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** @_ZN2ui12_GLOBAL__N_125g_supported_scale_factorsE, align 8
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %4, %6
  br i1 %7, label %16, label %10

8:                                                ; preds = %10
  %9 = icmp eq i32* %15, %6
  br i1 %9, label %16, label %10

10:                                               ; preds = %1, %8
  %11 = phi i32* [ %15, %8 ], [ %4, %1 ]
  %12 = load i32, i32* %11, align 4
  %13 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %12) #11
  %14 = fcmp une float %13, %0
  %15 = getelementptr inbounds i32, i32* %11, i64 1
  br i1 %14, label %8, label %16

16:                                               ; preds = %10, %8, %1
  %17 = phi i1 [ false, %1 ], [ false, %8 ], [ true, %10 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui4test30ScopedSetSupportedScaleFactorsC2ERKNSt3__16vectorINS_11ScaleFactorENS2_9allocatorIS4_EEEE(%"class.ui::test::ScopedSetSupportedScaleFactors"* nocapture, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** @_ZN2ui12_GLOBAL__N_125g_supported_scale_factorsE, align 8
  %4 = icmp eq %"class.std::__1::vector"* %3, null
  br i1 %4, label %45, label %5

5:                                                ; preds = %2
  %6 = tail call i8* @_Znwm(i64 24) #10
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #11
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %8 = bitcast i32** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %3 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = ashr exact i64 %12, 2
  %14 = icmp eq i64 %12, 0
  br i1 %14, label %43, label %15

15:                                               ; preds = %5
  %16 = icmp ugt i64 %13, 4611686018427387903
  br i1 %16, label %17, label %19

17:                                               ; preds = %15
  %18 = bitcast i8* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %18) #12
  unreachable

19:                                               ; preds = %15
  %20 = tail call i8* @_Znwm(i64 %12) #10
  %21 = bitcast i8* %20 to i32*
  %22 = getelementptr inbounds i8, i8* %6, i64 8
  %23 = bitcast i8* %22 to i8**
  store i8* %20, i8** %23, align 8
  %24 = bitcast i8* %6 to i8**
  store i8* %20, i8** %24, align 8
  %25 = getelementptr inbounds i32, i32* %21, i64 %13
  %26 = getelementptr inbounds i8, i8* %6, i64 16
  %27 = bitcast i8* %26 to i32**
  store i32* %25, i32** %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = load i64, i64* %8, align 8
  %31 = bitcast i8* %22 to i64*
  %32 = ptrtoint i8* %20 to i64
  %33 = ptrtoint i32* %29 to i64
  %34 = sub i64 %30, %33
  %35 = icmp sgt i64 %34, 0
  br i1 %35, label %36, label %41

36:                                               ; preds = %19
  %37 = lshr exact i64 %34, 2
  %38 = bitcast i32* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %20, i8* align 4 %38, i64 %34, i1 false) #11
  %39 = getelementptr inbounds i32, i32* %21, i64 %37
  %40 = ptrtoint i32* %39 to i64
  br label %41

41:                                               ; preds = %36, %19
  %42 = phi i64 [ %40, %36 ], [ %32, %19 ]
  store i64 %42, i64* %31, align 8
  br label %43

43:                                               ; preds = %5, %41
  %44 = bitcast %"class.ui::test::ScopedSetSupportedScaleFactors"* %0 to i8**
  store i8* %6, i8** %44, align 8
  br label %47

45:                                               ; preds = %2
  %46 = getelementptr inbounds %"class.ui::test::ScopedSetSupportedScaleFactors", %"class.ui::test::ScopedSetSupportedScaleFactors"* %0, i64 0, i32 0
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** %46, align 8
  br label %47

47:                                               ; preds = %45, %43
  tail call void @_ZN2ui24SetSupportedScaleFactorsERKNSt3__16vectorINS_11ScaleFactorENS0_9allocatorIS2_EEEE(%"class.std::__1::vector"* dereferenceable(24) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui4test30ScopedSetSupportedScaleFactorsD2Ev(%"class.ui::test::ScopedSetSupportedScaleFactors"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::test::ScopedSetSupportedScaleFactors", %"class.ui::test::ScopedSetSupportedScaleFactors"* %0, i64 0, i32 0
  %3 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %2, align 8
  %4 = icmp eq %"class.std::__1::vector"* %3, null
  br i1 %4, label %19, label %5

5:                                                ; preds = %1
  tail call void @_ZN2ui24SetSupportedScaleFactorsERKNSt3__16vectorINS_11ScaleFactorENS0_9allocatorIS2_EEEE(%"class.std::__1::vector"* nonnull dereferenceable(24) %3)
  %6 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %2, align 8
  %7 = icmp eq %"class.std::__1::vector"* %6, null
  br i1 %7, label %34, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = icmp eq i32* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = ptrtoint i32* %10 to i64
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %15 = bitcast i32** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = bitcast i32* %10 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %8, %12
  %18 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @_ZdlPv(i8* %18) #10
  br label %34

19:                                               ; preds = %1
  %20 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** @_ZN2ui12_GLOBAL__N_125g_supported_scale_factorsE, align 8
  %21 = icmp eq %"class.std::__1::vector"* %20, null
  br i1 %21, label %33, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = icmp eq i32* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %22
  %27 = ptrtoint i32* %24 to i64
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 0, i32 0, i32 1
  %29 = bitcast i32** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = bitcast i32* %24 to i8*
  tail call void @_ZdlPv(i8* %30) #10
  br label %31

31:                                               ; preds = %22, %26
  %32 = bitcast %"class.std::__1::vector"* %20 to i8*
  tail call void @_ZdlPv(i8* %32) #10
  br label %33

33:                                               ; preds = %31, %19
  store %"class.std::__1::vector"* null, %"class.std::__1::vector"** @_ZN2ui12_GLOBAL__N_125g_supported_scale_factorsE, align 8
  br label %34

34:                                               ; preds = %5, %17, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN2ui27GetScaleFactorForNativeViewEPN4aura6WindowE(%"class.aura::Window"*) local_unnamed_addr #0 {
  %2 = alloca %"class.display::Display", align 8
  %3 = tail call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #11
  %4 = icmp eq %"class.display::Screen"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.display::Display"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 568, i8* nonnull %6) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 bitcast ({ i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, { { { { i8, [3 x i8], %union.anon } } } }, i32, i32, %"class.gfx::Size", { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, [4 x i8], { { { { i8, [7 x i8], %union.anon.13 } } } } }, i32, i32, i8, [3 x i8], i32 }* @__const._ZN2ui27GetScaleFactorForNativeViewEPN4aura6WindowE.display to i8*), i64 568, i1 false)
  %7 = tail call %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() #11
  %8 = bitcast %"class.display::Screen"* %7 to void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)***
  %9 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)**, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)** %9, i64 9
  %11 = load void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)*, void (%"class.display::Display"*, %"class.display::Screen"*, %"class.aura::Window"*)** %10, align 8
  call void %11(%"class.display::Display"* nonnull sret %2, %"class.display::Screen"* %7, %"class.aura::Window"* %0) #11
  %12 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %2, i64 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, -1
  %15 = getelementptr inbounds %"class.display::Display", %"class.display::Display"* %2, i64 0, i32 4
  %16 = load float, float* %15, align 8
  %17 = select i1 %14, float 1.000000e+00, float %16
  call void @_ZN7display7DisplayD1Ev(%"class.display::Display"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 568, i8* nonnull %6) #11
  br label %18

18:                                               ; preds = %1, %5
  %19 = phi float [ %17, %5 ], [ 1.000000e+00, %1 ]
  ret float %19
}

declare %"class.display::Screen"* @_ZN7display6Screen9GetScreenEv() local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind
declare void @_ZN7display7DisplayD1Ev(%"class.display::Display"*) unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #7

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRZN2ui24SetSupportedScaleFactorsERKNS_6vectorINS1_11ScaleFactorENS_9allocatorIS3_EEEEE3$_0PS3_EEvT0_SC_T_"(i32*, i32*) unnamed_addr #0 {
  br label %3

3:                                                ; preds = %215, %2
  %4 = phi i32* [ %1, %2 ], [ %195, %215 ]
  %5 = phi i32* [ %0, %2 ], [ %12, %215 ]
  %6 = ptrtoint i32* %4 to i64
  %7 = getelementptr inbounds i32, i32* %4, i64 -1
  %8 = ptrtoint i32* %4 to i64
  br label %9

9:                                                ; preds = %224, %3
  %10 = phi i32* [ %5, %3 ], [ %225, %224 ]
  br label %11

11:                                               ; preds = %142, %9
  %12 = phi i32* [ %10, %9 ], [ %127, %142 ]
  %13 = ptrtoint i32* %12 to i64
  %14 = sub i64 %6, %13
  %15 = ashr exact i64 %14, 2
  switch i64 %15, label %41 [
    i64 0, label %228
    i64 1, label %228
    i64 2, label %16
    i64 3, label %26
    i64 4, label %30
    i64 5, label %35
  ]

16:                                               ; preds = %11
  %17 = getelementptr inbounds i32, i32* %4, i64 -1
  %18 = load i32, i32* %17, align 4
  %19 = load i32, i32* %12, align 4
  %20 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %18) #11
  %21 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %19) #11
  %22 = fcmp olt float %20, %21
  br i1 %22, label %23, label %228

23:                                               ; preds = %16
  %24 = load i32, i32* %12, align 4
  %25 = load i32, i32* %17, align 4
  store i32 %25, i32* %12, align 4
  store i32 %24, i32* %17, align 4
  br label %228

26:                                               ; preds = %11
  %27 = getelementptr inbounds i32, i32* %12, i64 1
  %28 = getelementptr inbounds i32, i32* %4, i64 -1
  %29 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN2ui24SetSupportedScaleFactorsERKNS_6vectorINS1_11ScaleFactorENS_9allocatorIS3_EEEEE3$_0PS3_EEjT0_SC_SC_T_"(i32* %12, i32* %27, i32* %28)
  br label %228

30:                                               ; preds = %11
  %31 = getelementptr inbounds i32, i32* %12, i64 1
  %32 = getelementptr inbounds i32, i32* %12, i64 2
  %33 = getelementptr inbounds i32, i32* %4, i64 -1
  %34 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN2ui24SetSupportedScaleFactorsERKNS_6vectorINS1_11ScaleFactorENS_9allocatorIS3_EEEEE3$_0PS3_EEjT0_SC_SC_SC_T_"(i32* %12, i32* %31, i32* %32, i32* %33)
  br label %228

35:                                               ; preds = %11
  %36 = getelementptr inbounds i32, i32* %12, i64 1
  %37 = getelementptr inbounds i32, i32* %12, i64 2
  %38 = getelementptr inbounds i32, i32* %12, i64 3
  %39 = getelementptr inbounds i32, i32* %4, i64 -1
  %40 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN2ui24SetSupportedScaleFactorsERKNS_6vectorINS1_11ScaleFactorENS_9allocatorIS3_EEEEE3$_0PS3_EEjT0_SC_SC_SC_SC_T_"(i32* %12, i32* %36, i32* %37, i32* %38, i32* %39)
  br label %228

41:                                               ; preds = %11
  %42 = icmp slt i64 %14, 124
  br i1 %42, label %43, label %75

43:                                               ; preds = %41
  %44 = getelementptr inbounds i32, i32* %12, i64 2
  %45 = getelementptr inbounds i32, i32* %12, i64 1
  %46 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN2ui24SetSupportedScaleFactorsERKNS_6vectorINS1_11ScaleFactorENS_9allocatorIS3_EEEEE3$_0PS3_EEjT0_SC_SC_T_"(i32* %12, i32* %45, i32* %44) #11
  %47 = getelementptr inbounds i32, i32* %12, i64 3
  %48 = icmp eq i32* %47, %4
  br i1 %48, label %228, label %49

49:                                               ; preds = %43, %72
  %50 = phi i32* [ %73, %72 ], [ %47, %43 ]
  %51 = phi i32* [ %50, %72 ], [ %44, %43 ]
  %52 = load i32, i32* %50, align 4
  %53 = load i32, i32* %51, align 4
  %54 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %52) #11
  %55 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %53) #11
  %56 = fcmp olt float %54, %55
  br i1 %56, label %57, label %72

57:                                               ; preds = %49
  %58 = load i32, i32* %50, align 4
  br label %59

59:                                               ; preds = %64, %57
  %60 = phi i32* [ %50, %57 ], [ %61, %64 ]
  %61 = phi i32* [ %51, %57 ], [ %65, %64 ]
  %62 = load i32, i32* %61, align 4
  store i32 %62, i32* %60, align 4
  %63 = icmp eq i32* %61, %12
  br i1 %63, label %70, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds i32, i32* %61, i64 -1
  %66 = load i32, i32* %65, align 4
  %67 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %58) #11
  %68 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %66) #11
  %69 = fcmp olt float %67, %68
  br i1 %69, label %59, label %70

70:                                               ; preds = %64, %59
  %71 = phi i32* [ %12, %59 ], [ %61, %64 ]
  store i32 %58, i32* %71, align 4
  br label %72

72:                                               ; preds = %70, %49
  %73 = getelementptr inbounds i32, i32* %50, i64 1
  %74 = icmp eq i32* %73, %4
  br i1 %74, label %228, label %49

75:                                               ; preds = %41
  %76 = icmp sgt i64 %14, 3996
  %77 = sdiv i64 %15, 2
  %78 = getelementptr inbounds i32, i32* %12, i64 %77
  br i1 %76, label %79, label %84

79:                                               ; preds = %75
  %80 = sdiv i64 %15, 4
  %81 = getelementptr inbounds i32, i32* %12, i64 %80
  %82 = getelementptr inbounds i32, i32* %78, i64 %80
  %83 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN2ui24SetSupportedScaleFactorsERKNS_6vectorINS1_11ScaleFactorENS_9allocatorIS3_EEEEE3$_0PS3_EEjT0_SC_SC_SC_SC_T_"(i32* %12, i32* %81, i32* %78, i32* %82, i32* %7)
  br label %86

84:                                               ; preds = %75
  %85 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN2ui24SetSupportedScaleFactorsERKNS_6vectorINS1_11ScaleFactorENS_9allocatorIS3_EEEEE3$_0PS3_EEjT0_SC_SC_T_"(i32* %12, i32* %78, i32* %7)
  br label %86

86:                                               ; preds = %84, %79
  %87 = phi i32 [ %83, %79 ], [ %85, %84 ]
  %88 = load i32, i32* %12, align 4
  %89 = load i32, i32* %78, align 4
  %90 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %88) #11
  %91 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %89) #11
  %92 = fcmp olt float %90, %91
  br i1 %92, label %157, label %93

93:                                               ; preds = %86, %147
  %94 = phi i32* [ %95, %147 ], [ %7, %86 ]
  %95 = getelementptr inbounds i32, i32* %94, i64 -1
  %96 = icmp eq i32* %12, %95
  br i1 %96, label %97, label %147

97:                                               ; preds = %93
  %98 = getelementptr inbounds i32, i32* %12, i64 1
  %99 = load i32, i32* %12, align 4
  %100 = load i32, i32* %7, align 4
  %101 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %99) #11
  %102 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %100) #11
  %103 = fcmp olt float %101, %102
  br i1 %103, label %120, label %104

104:                                              ; preds = %97
  %105 = icmp eq i32* %98, %7
  br i1 %105, label %228, label %106

106:                                              ; preds = %104, %117
  %107 = phi i32* [ %118, %117 ], [ %98, %104 ]
  %108 = load i32, i32* %12, align 4
  %109 = load i32, i32* %107, align 4
  %110 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %108) #11
  %111 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %109) #11
  %112 = fcmp olt float %110, %111
  br i1 %112, label %113, label %117

113:                                              ; preds = %106
  %114 = load i32, i32* %107, align 4
  %115 = load i32, i32* %7, align 4
  store i32 %115, i32* %107, align 4
  store i32 %114, i32* %7, align 4
  %116 = getelementptr inbounds i32, i32* %107, i64 1
  br label %120

117:                                              ; preds = %106
  %118 = getelementptr inbounds i32, i32* %107, i64 1
  %119 = icmp eq i32* %118, %7
  br i1 %119, label %228, label %106

120:                                              ; preds = %113, %97
  %121 = phi i32* [ %98, %97 ], [ %116, %113 ]
  %122 = icmp eq i32* %121, %7
  br i1 %122, label %228, label %123

123:                                              ; preds = %120, %144
  %124 = phi i32* [ %133, %144 ], [ %121, %120 ]
  %125 = phi i32* [ %137, %144 ], [ %7, %120 ]
  br label %126

126:                                              ; preds = %126, %123
  %127 = phi i32* [ %124, %123 ], [ %133, %126 ]
  %128 = load i32, i32* %12, align 4
  %129 = load i32, i32* %127, align 4
  %130 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %128) #11
  %131 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %129) #11
  %132 = fcmp olt float %130, %131
  %133 = getelementptr inbounds i32, i32* %127, i64 1
  br i1 %132, label %134, label %126

134:                                              ; preds = %126, %134
  %135 = phi i32* [ %137, %134 ], [ %125, %126 ]
  %136 = load i32, i32* %12, align 4
  %137 = getelementptr inbounds i32, i32* %135, i64 -1
  %138 = load i32, i32* %137, align 4
  %139 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %136) #11
  %140 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %138) #11
  %141 = fcmp olt float %139, %140
  br i1 %141, label %134, label %142

142:                                              ; preds = %134
  %143 = icmp ult i32* %127, %137
  br i1 %143, label %144, label %11

144:                                              ; preds = %142
  %145 = load i32, i32* %127, align 4
  %146 = load i32, i32* %137, align 4
  store i32 %146, i32* %127, align 4
  store i32 %145, i32* %137, align 4
  br label %123

147:                                              ; preds = %93
  %148 = load i32, i32* %95, align 4
  %149 = load i32, i32* %78, align 4
  %150 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %148) #11
  %151 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %149) #11
  %152 = fcmp olt float %150, %151
  br i1 %152, label %153, label %93

153:                                              ; preds = %147
  %154 = load i32, i32* %12, align 4
  %155 = load i32, i32* %95, align 4
  store i32 %155, i32* %12, align 4
  store i32 %154, i32* %95, align 4
  %156 = add i32 %87, 1
  br label %157

157:                                              ; preds = %86, %153
  %158 = phi i32 [ %156, %153 ], [ %87, %86 ]
  %159 = phi i32* [ %95, %153 ], [ %7, %86 ]
  %160 = ptrtoint i32* %12 to i64
  %161 = getelementptr inbounds i32, i32* %12, i64 1
  %162 = icmp ult i32* %161, %159
  br i1 %162, label %163, label %192

163:                                              ; preds = %157, %186
  %164 = phi i32* [ %191, %186 ], [ %78, %157 ]
  %165 = phi i32 [ %189, %186 ], [ %158, %157 ]
  %166 = phi i32* [ %175, %186 ], [ %161, %157 ]
  %167 = phi i32* [ %178, %186 ], [ %159, %157 ]
  br label %168

168:                                              ; preds = %168, %163
  %169 = phi i32* [ %166, %163 ], [ %175, %168 ]
  %170 = load i32, i32* %169, align 4
  %171 = load i32, i32* %164, align 4
  %172 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %170) #11
  %173 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %171) #11
  %174 = fcmp olt float %172, %173
  %175 = getelementptr inbounds i32, i32* %169, i64 1
  br i1 %174, label %168, label %176

176:                                              ; preds = %168, %176
  %177 = phi i32* [ %178, %176 ], [ %167, %168 ]
  %178 = getelementptr inbounds i32, i32* %177, i64 -1
  %179 = load i32, i32* %178, align 4
  %180 = load i32, i32* %164, align 4
  %181 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %179) #11
  %182 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %180) #11
  %183 = fcmp olt float %181, %182
  br i1 %183, label %184, label %176

184:                                              ; preds = %176
  %185 = icmp ugt i32* %169, %178
  br i1 %185, label %192, label %186

186:                                              ; preds = %184
  %187 = load i32, i32* %169, align 4
  %188 = load i32, i32* %178, align 4
  store i32 %188, i32* %169, align 4
  store i32 %187, i32* %178, align 4
  %189 = add i32 %165, 1
  %190 = icmp eq i32* %164, %169
  %191 = select i1 %190, i32* %178, i32* %164
  br label %163

192:                                              ; preds = %184, %157
  %193 = phi i32* [ %78, %157 ], [ %164, %184 ]
  %194 = phi i32 [ %158, %157 ], [ %165, %184 ]
  %195 = phi i32* [ %161, %157 ], [ %169, %184 ]
  %196 = icmp eq i32* %195, %193
  br i1 %196, label %207, label %197

197:                                              ; preds = %192
  %198 = load i32, i32* %193, align 4
  %199 = load i32, i32* %195, align 4
  %200 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %198) #11
  %201 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %199) #11
  %202 = fcmp olt float %200, %201
  br i1 %202, label %203, label %207

203:                                              ; preds = %197
  %204 = load i32, i32* %195, align 4
  %205 = load i32, i32* %193, align 4
  store i32 %205, i32* %195, align 4
  store i32 %204, i32* %193, align 4
  %206 = add i32 %194, 1
  br label %207

207:                                              ; preds = %192, %203, %197
  %208 = phi i32 [ %206, %203 ], [ %194, %197 ], [ %194, %192 ]
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %217

210:                                              ; preds = %207
  %211 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN2ui24SetSupportedScaleFactorsERKNS_6vectorINS1_11ScaleFactorENS_9allocatorIS3_EEEEE3$_0PS3_EEbT0_SC_T_"(i32* %12, i32* %195)
  %212 = getelementptr inbounds i32, i32* %195, i64 1
  %213 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN2ui24SetSupportedScaleFactorsERKNS_6vectorINS1_11ScaleFactorENS_9allocatorIS3_EEEEE3$_0PS3_EEbT0_SC_T_"(i32* %212, i32* %4)
  br i1 %213, label %214, label %216

214:                                              ; preds = %210
  br i1 %211, label %228, label %215

215:                                              ; preds = %214, %226
  br label %3

216:                                              ; preds = %210
  br i1 %211, label %224, label %217

217:                                              ; preds = %216, %207
  %218 = ptrtoint i32* %195 to i64
  %219 = sub i64 %218, %160
  %220 = sub i64 %8, %218
  %221 = icmp slt i64 %219, %220
  br i1 %221, label %222, label %226

222:                                              ; preds = %217
  tail call fastcc void @"_ZNSt3__16__sortIRZN2ui24SetSupportedScaleFactorsERKNS_6vectorINS1_11ScaleFactorENS_9allocatorIS3_EEEEE3$_0PS3_EEvT0_SC_T_"(i32* %12, i32* %195)
  %223 = getelementptr inbounds i32, i32* %195, i64 1
  br label %224

224:                                              ; preds = %222, %216
  %225 = phi i32* [ %212, %216 ], [ %223, %222 ]
  br label %9

226:                                              ; preds = %217
  %227 = getelementptr inbounds i32, i32* %195, i64 1
  tail call fastcc void @"_ZNSt3__16__sortIRZN2ui24SetSupportedScaleFactorsERKNS_6vectorINS1_11ScaleFactorENS_9allocatorIS3_EEEEE3$_0PS3_EEvT0_SC_T_"(i32* %227, i32* %4)
  br label %215

228:                                              ; preds = %214, %120, %11, %11, %104, %117, %72, %43, %16, %23, %26, %30, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort3IRZN2ui24SetSupportedScaleFactorsERKNS_6vectorINS1_11ScaleFactorENS_9allocatorIS3_EEEEE3$_0PS3_EEjT0_SC_SC_T_"(i32* nocapture, i32* nocapture, i32* nocapture) unnamed_addr #0 {
  %4 = load i32, i32* %1, align 4
  %5 = load i32, i32* %0, align 4
  %6 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %4) #11
  %7 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %5) #11
  %8 = fcmp olt float %6, %7
  %9 = load i32, i32* %2, align 4
  %10 = load i32, i32* %1, align 4
  %11 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %9) #11
  %12 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %10) #11
  %13 = fcmp olt float %11, %12
  br i1 %8, label %26, label %14

14:                                               ; preds = %3
  br i1 %13, label %15, label %39

15:                                               ; preds = %14
  %16 = load i32, i32* %1, align 4
  %17 = load i32, i32* %2, align 4
  store i32 %17, i32* %1, align 4
  store i32 %16, i32* %2, align 4
  %18 = load i32, i32* %1, align 4
  %19 = load i32, i32* %0, align 4
  %20 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %18) #11
  %21 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %19) #11
  %22 = fcmp olt float %20, %21
  br i1 %22, label %23, label %39

23:                                               ; preds = %15
  %24 = load i32, i32* %0, align 4
  %25 = load i32, i32* %1, align 4
  store i32 %25, i32* %0, align 4
  store i32 %24, i32* %1, align 4
  br label %39

26:                                               ; preds = %3
  %27 = load i32, i32* %0, align 4
  br i1 %13, label %28, label %30

28:                                               ; preds = %26
  %29 = load i32, i32* %2, align 4
  store i32 %29, i32* %0, align 4
  store i32 %27, i32* %2, align 4
  br label %39

30:                                               ; preds = %26
  %31 = load i32, i32* %1, align 4
  store i32 %31, i32* %0, align 4
  store i32 %27, i32* %1, align 4
  %32 = load i32, i32* %2, align 4
  %33 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %32) #11
  %34 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %27) #11
  %35 = fcmp olt float %33, %34
  br i1 %35, label %36, label %39

36:                                               ; preds = %30
  %37 = load i32, i32* %1, align 4
  %38 = load i32, i32* %2, align 4
  store i32 %38, i32* %1, align 4
  store i32 %37, i32* %2, align 4
  br label %39

39:                                               ; preds = %30, %36, %15, %23, %14, %28
  %40 = phi i32 [ 1, %28 ], [ 0, %14 ], [ 2, %23 ], [ 1, %15 ], [ 2, %36 ], [ 1, %30 ]
  ret i32 %40
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort4IRZN2ui24SetSupportedScaleFactorsERKNS_6vectorINS1_11ScaleFactorENS_9allocatorIS3_EEEEE3$_0PS3_EEjT0_SC_SC_SC_T_"(i32* nocapture, i32* nocapture, i32* nocapture, i32* nocapture) unnamed_addr #0 {
  %5 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN2ui24SetSupportedScaleFactorsERKNS_6vectorINS1_11ScaleFactorENS_9allocatorIS3_EEEEE3$_0PS3_EEjT0_SC_SC_T_"(i32* %0, i32* %1, i32* %2)
  %6 = load i32, i32* %3, align 4
  %7 = load i32, i32* %2, align 4
  %8 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %6) #11
  %9 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %7) #11
  %10 = fcmp olt float %8, %9
  br i1 %10, label %11, label %33

11:                                               ; preds = %4
  %12 = load i32, i32* %2, align 4
  %13 = load i32, i32* %3, align 4
  store i32 %13, i32* %2, align 4
  store i32 %12, i32* %3, align 4
  %14 = add i32 %5, 1
  %15 = load i32, i32* %2, align 4
  %16 = load i32, i32* %1, align 4
  %17 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %15) #11
  %18 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %16) #11
  %19 = fcmp olt float %17, %18
  br i1 %19, label %20, label %33

20:                                               ; preds = %11
  %21 = load i32, i32* %1, align 4
  %22 = load i32, i32* %2, align 4
  store i32 %22, i32* %1, align 4
  store i32 %21, i32* %2, align 4
  %23 = add i32 %5, 2
  %24 = load i32, i32* %1, align 4
  %25 = load i32, i32* %0, align 4
  %26 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %24) #11
  %27 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %25) #11
  %28 = fcmp olt float %26, %27
  br i1 %28, label %29, label %33

29:                                               ; preds = %20
  %30 = load i32, i32* %0, align 4
  %31 = load i32, i32* %1, align 4
  store i32 %31, i32* %0, align 4
  store i32 %30, i32* %1, align 4
  %32 = add i32 %5, 3
  br label %33

33:                                               ; preds = %11, %29, %20, %4
  %34 = phi i32 [ %32, %29 ], [ %23, %20 ], [ %14, %11 ], [ %5, %4 ]
  ret i32 %34
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort5IRZN2ui24SetSupportedScaleFactorsERKNS_6vectorINS1_11ScaleFactorENS_9allocatorIS3_EEEEE3$_0PS3_EEjT0_SC_SC_SC_SC_T_"(i32* nocapture, i32* nocapture, i32* nocapture, i32* nocapture, i32* nocapture) unnamed_addr #0 {
  %6 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN2ui24SetSupportedScaleFactorsERKNS_6vectorINS1_11ScaleFactorENS_9allocatorIS3_EEEEE3$_0PS3_EEjT0_SC_SC_SC_T_"(i32* %0, i32* %1, i32* %2, i32* %3)
  %7 = load i32, i32* %4, align 4
  %8 = load i32, i32* %3, align 4
  %9 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %7) #11
  %10 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %8) #11
  %11 = fcmp olt float %9, %10
  br i1 %11, label %12, label %43

12:                                               ; preds = %5
  %13 = load i32, i32* %3, align 4
  %14 = load i32, i32* %4, align 4
  store i32 %14, i32* %3, align 4
  store i32 %13, i32* %4, align 4
  %15 = add i32 %6, 1
  %16 = load i32, i32* %3, align 4
  %17 = load i32, i32* %2, align 4
  %18 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %16) #11
  %19 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %17) #11
  %20 = fcmp olt float %18, %19
  br i1 %20, label %21, label %43

21:                                               ; preds = %12
  %22 = load i32, i32* %2, align 4
  %23 = load i32, i32* %3, align 4
  store i32 %23, i32* %2, align 4
  store i32 %22, i32* %3, align 4
  %24 = add i32 %6, 2
  %25 = load i32, i32* %2, align 4
  %26 = load i32, i32* %1, align 4
  %27 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %25) #11
  %28 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %26) #11
  %29 = fcmp olt float %27, %28
  br i1 %29, label %30, label %43

30:                                               ; preds = %21
  %31 = load i32, i32* %1, align 4
  %32 = load i32, i32* %2, align 4
  store i32 %32, i32* %1, align 4
  store i32 %31, i32* %2, align 4
  %33 = add i32 %6, 3
  %34 = load i32, i32* %1, align 4
  %35 = load i32, i32* %0, align 4
  %36 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %34) #11
  %37 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %35) #11
  %38 = fcmp olt float %36, %37
  br i1 %38, label %39, label %43

39:                                               ; preds = %30
  %40 = load i32, i32* %0, align 4
  %41 = load i32, i32* %1, align 4
  store i32 %41, i32* %0, align 4
  store i32 %40, i32* %1, align 4
  %42 = add i32 %6, 4
  br label %43

43:                                               ; preds = %12, %30, %39, %21, %5
  %44 = phi i32 [ %42, %39 ], [ %33, %30 ], [ %24, %21 ], [ %15, %12 ], [ %6, %5 ]
  ret i32 %44
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZN2ui24SetSupportedScaleFactorsERKNS_6vectorINS1_11ScaleFactorENS_9allocatorIS3_EEEEE3$_0PS3_EEbT0_SC_T_"(i32*, i32*) unnamed_addr #0 {
  %3 = ptrtoint i32* %1 to i64
  %4 = ptrtoint i32* %0 to i64
  %5 = sub i64 %3, %4
  %6 = ashr exact i64 %5, 2
  switch i64 %6, label %32 [
    i64 0, label %71
    i64 1, label %71
    i64 2, label %7
    i64 3, label %17
    i64 4, label %21
    i64 5, label %26
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds i32, i32* %1, i64 -1
  %9 = load i32, i32* %8, align 4
  %10 = load i32, i32* %0, align 4
  %11 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %9) #11
  %12 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %10) #11
  %13 = fcmp olt float %11, %12
  br i1 %13, label %14, label %71

14:                                               ; preds = %7
  %15 = load i32, i32* %0, align 4
  %16 = load i32, i32* %8, align 4
  store i32 %16, i32* %0, align 4
  store i32 %15, i32* %8, align 4
  br label %71

17:                                               ; preds = %2
  %18 = getelementptr inbounds i32, i32* %0, i64 1
  %19 = getelementptr inbounds i32, i32* %1, i64 -1
  %20 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN2ui24SetSupportedScaleFactorsERKNS_6vectorINS1_11ScaleFactorENS_9allocatorIS3_EEEEE3$_0PS3_EEjT0_SC_SC_T_"(i32* %0, i32* %18, i32* %19)
  br label %71

21:                                               ; preds = %2
  %22 = getelementptr inbounds i32, i32* %0, i64 1
  %23 = getelementptr inbounds i32, i32* %0, i64 2
  %24 = getelementptr inbounds i32, i32* %1, i64 -1
  %25 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZN2ui24SetSupportedScaleFactorsERKNS_6vectorINS1_11ScaleFactorENS_9allocatorIS3_EEEEE3$_0PS3_EEjT0_SC_SC_SC_T_"(i32* %0, i32* %22, i32* %23, i32* %24)
  br label %71

26:                                               ; preds = %2
  %27 = getelementptr inbounds i32, i32* %0, i64 1
  %28 = getelementptr inbounds i32, i32* %0, i64 2
  %29 = getelementptr inbounds i32, i32* %0, i64 3
  %30 = getelementptr inbounds i32, i32* %1, i64 -1
  %31 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZN2ui24SetSupportedScaleFactorsERKNS_6vectorINS1_11ScaleFactorENS_9allocatorIS3_EEEEE3$_0PS3_EEjT0_SC_SC_SC_SC_T_"(i32* %0, i32* %27, i32* %28, i32* %29, i32* %30)
  br label %71

32:                                               ; preds = %2
  %33 = getelementptr inbounds i32, i32* %0, i64 2
  %34 = getelementptr inbounds i32, i32* %0, i64 1
  %35 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZN2ui24SetSupportedScaleFactorsERKNS_6vectorINS1_11ScaleFactorENS_9allocatorIS3_EEEEE3$_0PS3_EEjT0_SC_SC_T_"(i32* %0, i32* %34, i32* %33)
  %36 = getelementptr inbounds i32, i32* %0, i64 3
  %37 = icmp eq i32* %36, %1
  br i1 %37, label %71, label %38

38:                                               ; preds = %32, %64
  %39 = phi i32* [ %66, %64 ], [ %36, %32 ]
  %40 = phi i32 [ %65, %64 ], [ 0, %32 ]
  %41 = phi i32* [ %39, %64 ], [ %33, %32 ]
  %42 = load i32, i32* %39, align 4
  %43 = load i32, i32* %41, align 4
  %44 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %42) #11
  %45 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %43) #11
  %46 = fcmp olt float %44, %45
  br i1 %46, label %47, label %64

47:                                               ; preds = %38
  %48 = load i32, i32* %39, align 4
  br label %49

49:                                               ; preds = %54, %47
  %50 = phi i32* [ %39, %47 ], [ %51, %54 ]
  %51 = phi i32* [ %41, %47 ], [ %55, %54 ]
  %52 = load i32, i32* %51, align 4
  store i32 %52, i32* %50, align 4
  %53 = icmp eq i32* %51, %0
  br i1 %53, label %60, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds i32, i32* %51, i64 -1
  %56 = load i32, i32* %55, align 4
  %57 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %48) #11
  %58 = tail call float @_ZN2ui22GetScaleForScaleFactorENS_11ScaleFactorE(i32 %56) #11
  %59 = fcmp olt float %57, %58
  br i1 %59, label %49, label %60

60:                                               ; preds = %49, %54
  %61 = phi i32* [ %0, %49 ], [ %51, %54 ]
  store i32 %48, i32* %61, align 4
  %62 = add i32 %40, 1
  %63 = icmp eq i32 %62, 8
  br i1 %63, label %68, label %64

64:                                               ; preds = %60, %38
  %65 = phi i32 [ %62, %60 ], [ %40, %38 ]
  %66 = getelementptr inbounds i32, i32* %39, i64 1
  %67 = icmp eq i32* %66, %1
  br i1 %67, label %71, label %38

68:                                               ; preds = %60
  %69 = getelementptr inbounds i32, i32* %39, i64 1
  %70 = icmp eq i32* %69, %1
  br label %71

71:                                               ; preds = %64, %68, %32, %7, %14, %2, %2, %26, %21, %17
  %72 = phi i1 [ true, %26 ], [ true, %21 ], [ true, %17 ], [ true, %2 ], [ true, %2 ], [ true, %14 ], [ true, %7 ], [ true, %32 ], [ %70, %68 ], [ true, %64 ]
  ret i1 %72
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
