; ModuleID = '../../third_party/libaom/source/libaom/av1/arg_defs.c'
source_filename = "../../third_party/libaom/source/libaom/av1/arg_defs.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.arg_enum_list = type { i8*, i32 }
%struct.av1_codec_arg_definitions = type { %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def, %struct.arg_def }
%struct.arg_def = type { i8*, i8*, i32, i8*, %struct.arg_enum_list* }

@.str = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.1 = private unnamed_addr constant [28 x i8] c"Show usage options and exit\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"D\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@.str.4 = private unnamed_addr constant [40 x i8] c"Debug mode (makes output deterministic)\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"o\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"output\00", align 1
@.str.7 = private unnamed_addr constant [16 x i8] c"Output filename\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"yv12\00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c"Input file is YV12\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"i420\00", align 1
@.str.11 = private unnamed_addr constant [29 x i8] c"Input file is I420 (default)\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"i422\00", align 1
@.str.13 = private unnamed_addr constant [19 x i8] c"Input file is I422\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"i444\00", align 1
@.str.15 = private unnamed_addr constant [19 x i8] c"Input file is I444\00", align 1
@.str.16 = private unnamed_addr constant [6 x i8] c"codec\00", align 1
@.str.17 = private unnamed_addr constant [13 x i8] c"Codec to use\00", align 1
@.str.18 = private unnamed_addr constant [2 x i8] c"p\00", align 1
@.str.19 = private unnamed_addr constant [7 x i8] c"passes\00", align 1
@.str.20 = private unnamed_addr constant [23 x i8] c"Number of passes (1/2)\00", align 1
@.str.21 = private unnamed_addr constant [5 x i8] c"pass\00", align 1
@.str.22 = private unnamed_addr constant [22 x i8] c"Pass to execute (1/2)\00", align 1
@.str.23 = private unnamed_addr constant [4 x i8] c"fpf\00", align 1
@.str.24 = private unnamed_addr constant [32 x i8] c"First pass statistics file name\00", align 1
@.str.25 = private unnamed_addr constant [6 x i8] c"limit\00", align 1
@.str.26 = private unnamed_addr constant [35 x i8] c"Stop encoding after n input frames\00", align 1
@.str.27 = private unnamed_addr constant [5 x i8] c"skip\00", align 1
@.str.28 = private unnamed_addr constant [30 x i8] c"Skip the first n input frames\00", align 1
@.str.29 = private unnamed_addr constant [5 x i8] c"good\00", align 1
@.str.30 = private unnamed_addr constant [26 x i8] c"Use Good Quality Deadline\00", align 1
@.str.31 = private unnamed_addr constant [3 x i8] c"rt\00", align 1
@.str.32 = private unnamed_addr constant [30 x i8] c"Use Realtime Quality Deadline\00", align 1
@.str.33 = private unnamed_addr constant [9 x i8] c"allintra\00", align 1
@.str.34 = private unnamed_addr constant [19 x i8] c"Use all intra mode\00", align 1
@.str.35 = private unnamed_addr constant [2 x i8] c"q\00", align 1
@.str.36 = private unnamed_addr constant [6 x i8] c"quiet\00", align 1
@.str.37 = private unnamed_addr constant [29 x i8] c"Do not print encode progress\00", align 1
@.str.38 = private unnamed_addr constant [2 x i8] c"v\00", align 1
@.str.39 = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@.str.40 = private unnamed_addr constant [24 x i8] c"Show encoder parameters\00", align 1
@.str.41 = private unnamed_addr constant [5 x i8] c"psnr\00", align 1
@.str.42 = private unnamed_addr constant [212 x i8] c"Show PSNR in status line(0: Disable PSNR status line display, 1: PSNR calculated using input bit-depth (default), 2: PSNR calculated using stream bit-depth), takes default option when arguments are not specified\00", align 1
@.str.43 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.44 = private unnamed_addr constant [4 x i8] c"cfg\00", align 1
@.str.45 = private unnamed_addr constant [19 x i8] c"Config file to use\00", align 1
@.str.46 = private unnamed_addr constant [12 x i8] c"test-decode\00", align 1
@.str.47 = private unnamed_addr constant [28 x i8] c"Test encode/decode mismatch\00", align 1
@test_decode_enum = internal constant [4 x %struct.arg_enum_list] [%struct.arg_enum_list { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.370, i32 0, i32 0), i32 0 }, %struct.arg_enum_list { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.371, i32 0, i32 0), i32 1 }, %struct.arg_enum_list { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.372, i32 0, i32 0), i32 2 }, %struct.arg_enum_list zeroinitializer], align 16
@.str.48 = private unnamed_addr constant [4 x i8] c"fps\00", align 1
@.str.49 = private unnamed_addr constant [31 x i8] c"Stream frame rate (rate/scale)\00", align 1
@.str.50 = private unnamed_addr constant [5 x i8] c"webm\00", align 1
@.str.51 = private unnamed_addr constant [46 x i8] c"Output WebM (default when WebM IO is enabled)\00", align 1
@.str.52 = private unnamed_addr constant [4 x i8] c"ivf\00", align 1
@.str.53 = private unnamed_addr constant [11 x i8] c"Output IVF\00", align 1
@.str.54 = private unnamed_addr constant [4 x i8] c"obu\00", align 1
@.str.55 = private unnamed_addr constant [11 x i8] c"Output OBU\00", align 1
@.str.56 = private unnamed_addr constant [7 x i8] c"q-hist\00", align 1
@.str.57 = private unnamed_addr constant [37 x i8] c"Show quantizer histogram (n-buckets)\00", align 1
@.str.58 = private unnamed_addr constant [10 x i8] c"rate-hist\00", align 1
@.str.59 = private unnamed_addr constant [32 x i8] c"Show rate histogram (n-buckets)\00", align 1
@.str.60 = private unnamed_addr constant [17 x i8] c"disable-warnings\00", align 1
@.str.61 = private unnamed_addr constant [62 x i8] c"Disable warnings about potentially incorrect encode settings.\00", align 1
@.str.62 = private unnamed_addr constant [2 x i8] c"y\00", align 1
@.str.63 = private unnamed_addr constant [23 x i8] c"disable-warning-prompt\00", align 1
@.str.64 = private unnamed_addr constant [54 x i8] c"Display warnings, but do not prompt user to continue.\00", align 1
@.str.65 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@.str.66 = private unnamed_addr constant [10 x i8] c"bit-depth\00", align 1
@.str.67 = private unnamed_addr constant [64 x i8] c"Bit depth for codec (8 for version <=1, 10 or 12 for version 2)\00", align 1
@bitdepth_enum = internal constant [4 x %struct.arg_enum_list] [%struct.arg_enum_list { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.373, i32 0, i32 0), i32 8 }, %struct.arg_enum_list { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.374, i32 0, i32 0), i32 10 }, %struct.arg_enum_list { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.375, i32 0, i32 0), i32 12 }, %struct.arg_enum_list zeroinitializer], align 16
@.str.68 = private unnamed_addr constant [16 x i8] c"input-bit-depth\00", align 1
@.str.69 = private unnamed_addr constant [19 x i8] c"Bit depth of input\00", align 1
@.str.70 = private unnamed_addr constant [27 x i8] c"input-chroma-subsampling-x\00", align 1
@.str.71 = private unnamed_addr constant [28 x i8] c"chroma subsampling x value.\00", align 1
@.str.72 = private unnamed_addr constant [27 x i8] c"input-chroma-subsampling-y\00", align 1
@.str.73 = private unnamed_addr constant [28 x i8] c"chroma subsampling y value.\00", align 1
@.str.74 = private unnamed_addr constant [2 x i8] c"u\00", align 1
@.str.75 = private unnamed_addr constant [6 x i8] c"usage\00", align 1
@.str.76 = private unnamed_addr constant [58 x i8] c"Usage profile number to use (0: good, 1: rt, 2: allintra)\00", align 1
@.str.77 = private unnamed_addr constant [2 x i8] c"t\00", align 1
@.str.78 = private unnamed_addr constant [8 x i8] c"threads\00", align 1
@.str.79 = private unnamed_addr constant [29 x i8] c"Max number of threads to use\00", align 1
@.str.80 = private unnamed_addr constant [8 x i8] c"profile\00", align 1
@.str.81 = private unnamed_addr constant [32 x i8] c"Bitstream profile number to use\00", align 1
@.str.82 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.83 = private unnamed_addr constant [6 x i8] c"width\00", align 1
@.str.84 = private unnamed_addr constant [12 x i8] c"Frame width\00", align 1
@.str.85 = private unnamed_addr constant [2 x i8] c"h\00", align 1
@.str.86 = private unnamed_addr constant [7 x i8] c"height\00", align 1
@.str.87 = private unnamed_addr constant [13 x i8] c"Frame height\00", align 1
@.str.88 = private unnamed_addr constant [23 x i8] c"forced_max_frame_width\00", align 1
@.str.89 = private unnamed_addr constant [35 x i8] c"Maximum frame width value to force\00", align 1
@.str.90 = private unnamed_addr constant [24 x i8] c"forced_max_frame_height\00", align 1
@.str.91 = private unnamed_addr constant [36 x i8] c"Maximum frame height value to force\00", align 1
@.str.92 = private unnamed_addr constant [12 x i8] c"stereo-mode\00", align 1
@.str.93 = private unnamed_addr constant [23 x i8] c"Stereo 3D video format\00", align 1
@stereo_mode_enum = internal constant [6 x %struct.arg_enum_list] [%struct.arg_enum_list { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.376, i32 0, i32 0), i32 0 }, %struct.arg_enum_list { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.377, i32 0, i32 0), i32 1 }, %struct.arg_enum_list { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.378, i32 0, i32 0), i32 2 }, %struct.arg_enum_list { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.379, i32 0, i32 0), i32 3 }, %struct.arg_enum_list { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.380, i32 0, i32 0), i32 11 }, %struct.arg_enum_list zeroinitializer], align 16
@.str.94 = private unnamed_addr constant [9 x i8] c"timebase\00", align 1
@.str.95 = private unnamed_addr constant [48 x i8] c"Output timestamp precision (fractional seconds)\00", align 1
@.str.96 = private unnamed_addr constant [23 x i8] c"global-error-resilient\00", align 1
@.str.97 = private unnamed_addr constant [40 x i8] c"Enable global error resiliency features\00", align 1
@.str.98 = private unnamed_addr constant [14 x i8] c"lag-in-frames\00", align 1
@.str.99 = private unnamed_addr constant [28 x i8] c"Max number of frames to lag\00", align 1
@.str.100 = private unnamed_addr constant [17 x i8] c"large-scale-tile\00", align 1
@.str.101 = private unnamed_addr constant [68 x i8] c"Large scale tile coding (0: off (default), 1: on (ivf output only))\00", align 1
@.str.102 = private unnamed_addr constant [11 x i8] c"monochrome\00", align 1
@.str.103 = private unnamed_addr constant [36 x i8] c"Monochrome video (no chroma planes)\00", align 1
@.str.104 = private unnamed_addr constant [23 x i8] c"full-still-picture-hdr\00", align 1
@.str.105 = private unnamed_addr constant [34 x i8] c"Use full header for still picture\00", align 1
@.str.106 = private unnamed_addr constant [19 x i8] c"use-16bit-internal\00", align 1
@.str.107 = private unnamed_addr constant [29 x i8] c"Force use of 16-bit pipeline\00", align 1
@.str.108 = private unnamed_addr constant [11 x i8] c"drop-frame\00", align 1
@.str.109 = private unnamed_addr constant [38 x i8] c"Temporal resampling threshold (buf %)\00", align 1
@.str.110 = private unnamed_addr constant [12 x i8] c"resize-mode\00", align 1
@.str.111 = private unnamed_addr constant [18 x i8] c"Frame resize mode\00", align 1
@.str.112 = private unnamed_addr constant [19 x i8] c"resize-denominator\00", align 1
@.str.113 = private unnamed_addr constant [25 x i8] c"Frame resize denominator\00", align 1
@.str.114 = private unnamed_addr constant [22 x i8] c"resize-kf-denominator\00", align 1
@.str.115 = private unnamed_addr constant [34 x i8] c"Frame resize keyframe denominator\00", align 1
@.str.116 = private unnamed_addr constant [14 x i8] c"superres-mode\00", align 1
@.str.117 = private unnamed_addr constant [28 x i8] c"Frame super-resolution mode\00", align 1
@.str.118 = private unnamed_addr constant [21 x i8] c"superres-denominator\00", align 1
@.str.119 = private unnamed_addr constant [35 x i8] c"Frame super-resolution denominator\00", align 1
@.str.120 = private unnamed_addr constant [24 x i8] c"superres-kf-denominator\00", align 1
@.str.121 = private unnamed_addr constant [44 x i8] c"Frame super-resolution keyframe denominator\00", align 1
@.str.122 = private unnamed_addr constant [17 x i8] c"superres-qthresh\00", align 1
@.str.123 = private unnamed_addr constant [40 x i8] c"Frame super-resolution qindex threshold\00", align 1
@.str.124 = private unnamed_addr constant [20 x i8] c"superres-kf-qthresh\00", align 1
@.str.125 = private unnamed_addr constant [49 x i8] c"Frame super-resolution keyframe qindex threshold\00", align 1
@.str.126 = private unnamed_addr constant [10 x i8] c"end-usage\00", align 1
@.str.127 = private unnamed_addr constant [18 x i8] c"Rate control mode\00", align 1
@end_usage_enum = internal constant [5 x %struct.arg_enum_list] [%struct.arg_enum_list { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.381, i32 0, i32 0), i32 0 }, %struct.arg_enum_list { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.382, i32 0, i32 0), i32 1 }, %struct.arg_enum_list { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.383, i32 0, i32 0), i32 2 }, %struct.arg_enum_list { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i32 0, i32 0), i32 3 }, %struct.arg_enum_list zeroinitializer], align 16
@.str.128 = private unnamed_addr constant [15 x i8] c"target-bitrate\00", align 1
@.str.129 = private unnamed_addr constant [15 x i8] c"Bitrate (kbps)\00", align 1
@.str.130 = private unnamed_addr constant [6 x i8] c"min-q\00", align 1
@.str.131 = private unnamed_addr constant [25 x i8] c"Minimum (best) quantizer\00", align 1
@.str.132 = private unnamed_addr constant [6 x i8] c"max-q\00", align 1
@.str.133 = private unnamed_addr constant [26 x i8] c"Maximum (worst) quantizer\00", align 1
@.str.134 = private unnamed_addr constant [15 x i8] c"undershoot-pct\00", align 1
@.str.135 = private unnamed_addr constant [37 x i8] c"Datarate undershoot (min) target (%)\00", align 1
@.str.136 = private unnamed_addr constant [14 x i8] c"overshoot-pct\00", align 1
@.str.137 = private unnamed_addr constant [36 x i8] c"Datarate overshoot (max) target (%)\00", align 1
@.str.138 = private unnamed_addr constant [7 x i8] c"buf-sz\00", align 1
@.str.139 = private unnamed_addr constant [24 x i8] c"Client buffer size (ms)\00", align 1
@.str.140 = private unnamed_addr constant [15 x i8] c"buf-initial-sz\00", align 1
@.str.141 = private unnamed_addr constant [32 x i8] c"Client initial buffer size (ms)\00", align 1
@.str.142 = private unnamed_addr constant [15 x i8] c"buf-optimal-sz\00", align 1
@.str.143 = private unnamed_addr constant [32 x i8] c"Client optimal buffer size (ms)\00", align 1
@.str.144 = private unnamed_addr constant [9 x i8] c"bias-pct\00", align 1
@.str.145 = private unnamed_addr constant [30 x i8] c"CBR/VBR bias (0=CBR, 100=VBR)\00", align 1
@.str.146 = private unnamed_addr constant [15 x i8] c"minsection-pct\00", align 1
@.str.147 = private unnamed_addr constant [30 x i8] c"GOP min bitrate (% of target)\00", align 1
@.str.148 = private unnamed_addr constant [15 x i8] c"maxsection-pct\00", align 1
@.str.149 = private unnamed_addr constant [30 x i8] c"GOP max bitrate (% of target)\00", align 1
@.str.150 = private unnamed_addr constant [14 x i8] c"enable-fwd-kf\00", align 1
@.str.151 = private unnamed_addr constant [35 x i8] c"Enable forward reference keyframes\00", align 1
@.str.152 = private unnamed_addr constant [12 x i8] c"kf-min-dist\00", align 1
@.str.153 = private unnamed_addr constant [35 x i8] c"Minimum keyframe interval (frames)\00", align 1
@.str.154 = private unnamed_addr constant [12 x i8] c"kf-max-dist\00", align 1
@.str.155 = private unnamed_addr constant [35 x i8] c"Maximum keyframe interval (frames)\00", align 1
@.str.156 = private unnamed_addr constant [11 x i8] c"disable-kf\00", align 1
@.str.157 = private unnamed_addr constant [27 x i8] c"Disable keyframe placement\00", align 1
@.str.158 = private unnamed_addr constant [12 x i8] c"sframe-dist\00", align 1
@.str.159 = private unnamed_addr constant [26 x i8] c"S-Frame interval (frames)\00", align 1
@.str.160 = private unnamed_addr constant [12 x i8] c"sframe-mode\00", align 1
@.str.161 = private unnamed_addr constant [30 x i8] c"S-Frame insertion mode (1..2)\00", align 1
@.str.162 = private unnamed_addr constant [7 x i8] c"annexb\00", align 1
@.str.163 = private unnamed_addr constant [16 x i8] c"Save as Annex-B\00", align 1
@.str.164 = private unnamed_addr constant [18 x i8] c"noise-sensitivity\00", align 1
@.str.165 = private unnamed_addr constant [35 x i8] c"Noise sensitivity (frames to blur)\00", align 1
@.str.166 = private unnamed_addr constant [10 x i8] c"sharpness\00", align 1
@.str.167 = private unnamed_addr constant [72 x i8] c"Bias towards block sharpness in transform coeff RD (0..7), default is 0\00", align 1
@.str.168 = private unnamed_addr constant [14 x i8] c"static-thresh\00", align 1
@.str.169 = private unnamed_addr constant [27 x i8] c"Motion detection threshold\00", align 1
@.str.170 = private unnamed_addr constant [13 x i8] c"auto-alt-ref\00", align 1
@.str.171 = private unnamed_addr constant [38 x i8] c"Enable automatic alt reference frames\00", align 1
@.str.172 = private unnamed_addr constant [15 x i8] c"arnr-maxframes\00", align 1
@.str.173 = private unnamed_addr constant [26 x i8] c"AltRef max frames (0..15)\00", align 1
@.str.174 = private unnamed_addr constant [14 x i8] c"arnr-strength\00", align 1
@.str.175 = private unnamed_addr constant [30 x i8] c"AltRef filter strength (0..6)\00", align 1
@.str.176 = private unnamed_addr constant [5 x i8] c"tune\00", align 1
@.str.177 = private unnamed_addr constant [29 x i8] c"Distortion metric tuned with\00", align 1
@tuning_enum = internal constant [8 x %struct.arg_enum_list] [%struct.arg_enum_list { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i32 0, i32 0), i32 0 }, %struct.arg_enum_list { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.384, i32 0, i32 0), i32 1 }, %struct.arg_enum_list { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.385, i32 0, i32 0), i32 4 }, %struct.arg_enum_list { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.386, i32 0, i32 0), i32 5 }, %struct.arg_enum_list { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.387, i32 0, i32 0), i32 6 }, %struct.arg_enum_list { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.388, i32 0, i32 0), i32 7 }, %struct.arg_enum_list { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.389, i32 0, i32 0), i32 8 }, %struct.arg_enum_list zeroinitializer], align 16
@.str.178 = private unnamed_addr constant [9 x i8] c"cq-level\00", align 1
@.str.179 = private unnamed_addr constant [35 x i8] c"Constant/Constrained Quality level\00", align 1
@.str.180 = private unnamed_addr constant [15 x i8] c"max-intra-rate\00", align 1
@.str.181 = private unnamed_addr constant [26 x i8] c"Max I-frame bitrate (pct)\00", align 1
@.str.182 = private unnamed_addr constant [9 x i8] c"cpu-used\00", align 1
@.str.183 = private unnamed_addr constant [57 x i8] c"Speed setting (0..6 in good mode, 6..9 in realtime mode)\00", align 1
@.str.184 = private unnamed_addr constant [7 x i8] c"row-mt\00", align 1
@.str.185 = private unnamed_addr constant [59 x i8] c"Enable row based multi-threading (0: off, 1: on (default))\00", align 1
@.str.186 = private unnamed_addr constant [13 x i8] c"tile-columns\00", align 1
@.str.187 = private unnamed_addr constant [36 x i8] c"Number of tile columns to use, log2\00", align 1
@.str.188 = private unnamed_addr constant [10 x i8] c"tile-rows\00", align 1
@.str.189 = private unnamed_addr constant [33 x i8] c"Number of tile rows to use, log2\00", align 1
@.str.190 = private unnamed_addr constant [17 x i8] c"enable-tpl-model\00", align 1
@.str.191 = private unnamed_addr constant [109 x i8] c"RDO based on frame temporal dependency (0: off, 1: backward source based). This is required for deltaq mode.\00", align 1
@.str.192 = private unnamed_addr constant [26 x i8] c"enable-keyframe-filtering\00", align 1
@.str.193 = private unnamed_addr constant [165 x i8] c"Apply temporal filtering on key frame(0: no filter, 1: filter without overlay (default), 2: filter with overlay - experimental, may break random access in players.)\00", align 1
@.str.194 = private unnamed_addr constant [11 x i8] c"tile-width\00", align 1
@.str.195 = private unnamed_addr constant [30 x i8] c"Tile widths (comma separated)\00", align 1
@.str.196 = private unnamed_addr constant [12 x i8] c"tile-height\00", align 1
@.str.197 = private unnamed_addr constant [33 x i8] c"Tile heights (command separated)\00", align 1
@.str.198 = private unnamed_addr constant [9 x i8] c"lossless\00", align 1
@.str.199 = private unnamed_addr constant [44 x i8] c"Lossless mode (0: false (default), 1: true)\00", align 1
@.str.200 = private unnamed_addr constant [12 x i8] c"enable-cdef\00", align 1
@.str.201 = private unnamed_addr constant [84 x i8] c"Enable the constrained directional enhancement filter (0: false, 1: true (default))\00", align 1
@.str.202 = private unnamed_addr constant [19 x i8] c"enable-restoration\00", align 1
@.str.203 = private unnamed_addr constant [113 x i8] c"Enable the loop restoration filter (0: false (default in Realtime mode), 1: true (default in Non-realtime mode))\00", align 1
@.str.204 = private unnamed_addr constant [23 x i8] c"enable-rect-partitions\00", align 1
@.str.205 = private unnamed_addr constant [60 x i8] c"Enable rectangular partitions (0: false, 1: true (default))\00", align 1
@.str.206 = private unnamed_addr constant [21 x i8] c"enable-ab-partitions\00", align 1
@.str.207 = private unnamed_addr constant [51 x i8] c"Enable ab partitions (0: false, 1: true (default))\00", align 1
@.str.208 = private unnamed_addr constant [23 x i8] c"enable-1to4-partitions\00", align 1
@.str.209 = private unnamed_addr constant [60 x i8] c"Enable 1:4 and 4:1 partitions (0: false, 1: true (default))\00", align 1
@.str.210 = private unnamed_addr constant [19 x i8] c"min-partition-size\00", align 1
@.str.211 = private unnamed_addr constant [187 x i8] c"Set min partition size (4:4x4, 8:8x8, 16:16x16, 32:32x32, 64:64x64, 128:128x128). On frame with 4k+ resolutions or higher speed settings, the min partition size will have a minimum of 8.\00", align 1
@.str.212 = private unnamed_addr constant [19 x i8] c"max-partition-size\00", align 1
@.str.213 = private unnamed_addr constant [81 x i8] c"Set max partition size (4:4x4, 8:8x8, 16:16x16, 32:32x32, 64:64x64, 128:128x128)\00", align 1
@.str.214 = private unnamed_addr constant [19 x i8] c"enable-dual-filter\00", align 1
@.str.215 = private unnamed_addr constant [49 x i8] c"Enable dual filter (0: false, 1: true (default))\00", align 1
@.str.216 = private unnamed_addr constant [21 x i8] c"enable-chroma-deltaq\00", align 1
@.str.217 = private unnamed_addr constant [56 x i8] c"Enable chroma delta quant (0: false (default), 1: true)\00", align 1
@.str.218 = private unnamed_addr constant [25 x i8] c"enable-intra-edge-filter\00", align 1
@.str.219 = private unnamed_addr constant [58 x i8] c"Enable intra edge filtering (0: false, 1: true (default))\00", align 1
@.str.220 = private unnamed_addr constant [18 x i8] c"enable-order-hint\00", align 1
@.str.221 = private unnamed_addr constant [48 x i8] c"Enable order hint (0: false, 1: true (default))\00", align 1
@.str.222 = private unnamed_addr constant [12 x i8] c"enable-tx64\00", align 1
@.str.223 = private unnamed_addr constant [53 x i8] c"Enable 64-pt transform (0: false, 1: true (default))\00", align 1
@.str.224 = private unnamed_addr constant [17 x i8] c"enable-flip-idtx\00", align 1
@.str.225 = private unnamed_addr constant [207 x i8] c"Enable extended transform type (0: false, 1: true (default)) including FLIPADST_DCT, DCT_FLIPADST, FLIPADST_FLIPADST, ADST_FLIPADST, FLIPADST_ADST, IDTX, V_DCT, H_DCT, V_ADST, H_ADST, V_FLIPADST, H_FLIPADST\00", align 1
@.str.226 = private unnamed_addr constant [15 x i8] c"enable-rect-tx\00", align 1
@.str.227 = private unnamed_addr constant [59 x i8] c"Enable rectangular transform (0: false, 1: true (default))\00", align 1
@.str.228 = private unnamed_addr constant [21 x i8] c"enable-dist-wtd-comp\00", align 1
@.str.229 = private unnamed_addr constant [64 x i8] c"Enable distance-weighted compound (0: false, 1: true (default))\00", align 1
@.str.230 = private unnamed_addr constant [19 x i8] c"enable-masked-comp\00", align 1
@.str.231 = private unnamed_addr constant [70 x i8] c"Enable masked (wedge/diff-wtd) compound (0: false, 1: true (default))\00", align 1
@.str.232 = private unnamed_addr constant [21 x i8] c"enable-onesided-comp\00", align 1
@.str.233 = private unnamed_addr constant [56 x i8] c"Enable one sided compound (0: false, 1: true (default))\00", align 1
@.str.234 = private unnamed_addr constant [23 x i8] c"enable-interintra-comp\00", align 1
@.str.235 = private unnamed_addr constant [57 x i8] c"Enable interintra compound (0: false, 1: true (default))\00", align 1
@.str.236 = private unnamed_addr constant [25 x i8] c"enable-smooth-interintra\00", align 1
@.str.237 = private unnamed_addr constant [60 x i8] c"Enable smooth interintra mode (0: false, 1: true (default))\00", align 1
@.str.238 = private unnamed_addr constant [21 x i8] c"enable-diff-wtd-comp\00", align 1
@.str.239 = private unnamed_addr constant [66 x i8] c"Enable difference-weighted compound (0: false, 1: true (default))\00", align 1
@.str.240 = private unnamed_addr constant [24 x i8] c"enable-interinter-wedge\00", align 1
@.str.241 = private unnamed_addr constant [63 x i8] c"Enable interinter wedge compound (0: false, 1: true (default))\00", align 1
@.str.242 = private unnamed_addr constant [24 x i8] c"enable-interintra-wedge\00", align 1
@.str.243 = private unnamed_addr constant [63 x i8] c"Enable interintra wedge compound (0: false, 1: true (default))\00", align 1
@.str.244 = private unnamed_addr constant [21 x i8] c"enable-global-motion\00", align 1
@.str.245 = private unnamed_addr constant [51 x i8] c"Enable global motion (0: false, 1: true (default))\00", align 1
@.str.246 = private unnamed_addr constant [21 x i8] c"enable-warped-motion\00", align 1
@.str.247 = private unnamed_addr constant [57 x i8] c"Enable local warped motion (0: false, 1: true (default))\00", align 1
@.str.248 = private unnamed_addr constant [20 x i8] c"enable-filter-intra\00", align 1
@.str.249 = private unnamed_addr constant [66 x i8] c"Enable filter intra prediction mode (0: false, 1: true (default))\00", align 1
@.str.250 = private unnamed_addr constant [20 x i8] c"enable-smooth-intra\00", align 1
@.str.251 = private unnamed_addr constant [67 x i8] c"Enable smooth intra prediction modes (0: false, 1: true (default))\00", align 1
@.str.252 = private unnamed_addr constant [19 x i8] c"enable-paeth-intra\00", align 1
@.str.253 = private unnamed_addr constant [65 x i8] c"Enable Paeth intra prediction mode (0: false, 1: true (default))\00", align 1
@.str.254 = private unnamed_addr constant [17 x i8] c"enable-cfl-intra\00", align 1
@.str.255 = private unnamed_addr constant [76 x i8] c"Enable chroma from luma intra prediction mode (0: false, 1: true (default))\00", align 1
@.str.256 = private unnamed_addr constant [22 x i8] c"enable-diagonal-intra\00", align 1
@.str.257 = private unnamed_addr constant [83 x i8] c"Enable diagonal (D45 to D203) intra prediction modes (0: false, 1: true (default))\00", align 1
@.str.258 = private unnamed_addr constant [17 x i8] c"force-video-mode\00", align 1
@.str.259 = private unnamed_addr constant [47 x i8] c"Force video mode (0: false, 1: true (default))\00", align 1
@.str.260 = private unnamed_addr constant [12 x i8] c"enable-obmc\00", align 1
@.str.261 = private unnamed_addr constant [42 x i8] c"Enable OBMC (0: false, 1: true (default))\00", align 1
@.str.262 = private unnamed_addr constant [15 x i8] c"enable-overlay\00", align 1
@.str.263 = private unnamed_addr constant [59 x i8] c"Enable coding overlay frames (0: false, 1: true (default))\00", align 1
@.str.264 = private unnamed_addr constant [15 x i8] c"enable-palette\00", align 1
@.str.265 = private unnamed_addr constant [61 x i8] c"Enable palette prediction mode (0: false, 1: true (default))\00", align 1
@.str.266 = private unnamed_addr constant [15 x i8] c"enable-intrabc\00", align 1
@.str.267 = private unnamed_addr constant [70 x i8] c"Enable intra block copy prediction mode (0: false, 1: true (default))\00", align 1
@.str.268 = private unnamed_addr constant [19 x i8] c"enable-angle-delta\00", align 1
@.str.269 = private unnamed_addr constant [55 x i8] c"Enable intra angle delta (0: false, 1: true (default))\00", align 1
@.str.270 = private unnamed_addr constant [22 x i8] c"disable-trellis-quant\00", align 1
@.str.271 = private unnamed_addr constant [138 x i8] c"Disable trellis optimization of quantized coefficients (0: false 1: true  2: true for rd search 3: true for estimate yrd serch (default))\00", align 1
@.str.272 = private unnamed_addr constant [10 x i8] c"enable-qm\00", align 1
@.str.273 = private unnamed_addr constant [59 x i8] c"Enable quantisation matrices (0: false (default), 1: true)\00", align 1
@.str.274 = private unnamed_addr constant [7 x i8] c"qm-min\00", align 1
@.str.275 = private unnamed_addr constant [48 x i8] c"Min quant matrix flatness (0..15), default is 8\00", align 1
@.str.276 = private unnamed_addr constant [7 x i8] c"qm-max\00", align 1
@.str.277 = private unnamed_addr constant [49 x i8] c"Max quant matrix flatness (0..15), default is 15\00", align 1
@.str.278 = private unnamed_addr constant [20 x i8] c"reduced-tx-type-set\00", align 1
@.str.279 = private unnamed_addr constant [35 x i8] c"Use reduced set of transform types\00", align 1
@.str.280 = private unnamed_addr constant [19 x i8] c"use-intra-dct-only\00", align 1
@.str.281 = private unnamed_addr constant [29 x i8] c"Use DCT only for INTRA modes\00", align 1
@.str.282 = private unnamed_addr constant [19 x i8] c"use-inter-dct-only\00", align 1
@.str.283 = private unnamed_addr constant [29 x i8] c"Use DCT only for INTER modes\00", align 1
@.str.284 = private unnamed_addr constant [26 x i8] c"use-intra-default-tx-only\00", align 1
@.str.285 = private unnamed_addr constant [43 x i8] c"Use Default-transform only for INTRA modes\00", align 1
@.str.286 = private unnamed_addr constant [14 x i8] c"quant-b-adapt\00", align 1
@.str.287 = private unnamed_addr constant [24 x i8] c"Use adaptive quantize_b\00", align 1
@.str.288 = private unnamed_addr constant [20 x i8] c"coeff-cost-upd-freq\00", align 1
@.str.289 = private unnamed_addr constant [72 x i8] c"Update freq for coeff costs. 0: SB, 1: SB Row per Tile, 2: Tile, 3: Off\00", align 1
@.str.290 = private unnamed_addr constant [19 x i8] c"mode-cost-upd-freq\00", align 1
@.str.291 = private unnamed_addr constant [71 x i8] c"Update freq for mode costs. 0: SB, 1: SB Row per Tile, 2: Tile, 3: Off\00", align 1
@.str.292 = private unnamed_addr constant [17 x i8] c"mv-cost-upd-freq\00", align 1
@.str.293 = private unnamed_addr constant [69 x i8] c"Update freq for mv costs. 0: SB, 1: SB Row per Tile, 2: Tile, 3: Off\00", align 1
@.str.294 = private unnamed_addr constant [17 x i8] c"dv-cost-upd-freq\00", align 1
@.str.295 = private unnamed_addr constant [69 x i8] c"Update freq for dv costs. 0: SB, 1: SB Row per Tile, 2: Tile, 3: Off\00", align 1
@.str.296 = private unnamed_addr constant [16 x i8] c"num-tile-groups\00", align 1
@.str.297 = private unnamed_addr constant [44 x i8] c"Maximum number of tile groups, default is 1\00", align 1
@.str.298 = private unnamed_addr constant [9 x i8] c"mtu-size\00", align 1
@.str.299 = private unnamed_addr constant [100 x i8] c"MTU size for a tile group, default is 0 (no MTU targeting), overrides maximum number of tile groups\00", align 1
@.str.300 = private unnamed_addr constant [12 x i8] c"timing-info\00", align 1
@.str.301 = private unnamed_addr constant [95 x i8] c"Signal timing info in the bitstream (model unly works for no hidden frames, no super-res yet):\00", align 1
@timing_info_enum = internal constant [4 x %struct.arg_enum_list] [%struct.arg_enum_list { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.390, i32 0, i32 0), i32 0 }, %struct.arg_enum_list { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.391, i32 0, i32 0), i32 1 }, %struct.arg_enum_list { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.392, i32 0, i32 0), i32 2 }, %struct.arg_enum_list zeroinitializer], align 16
@.str.302 = private unnamed_addr constant [20 x i8] c"partition-info-path\00", align 1
@.str.303 = private unnamed_addr constant [42 x i8] c"Partition information read and write path\00", align 1
@.str.304 = private unnamed_addr constant [16 x i8] c"film-grain-test\00", align 1
@.str.305 = private unnamed_addr constant [83 x i8] c"Film grain test vectors (0: none (default), 1: test-1  2: test-2, ... 16: test-16)\00", align 1
@.str.306 = private unnamed_addr constant [17 x i8] c"film-grain-table\00", align 1
@.str.307 = private unnamed_addr constant [46 x i8] c"Path to file containing film grain parameters\00", align 1
@.str.308 = private unnamed_addr constant [20 x i8] c"denoise-noise-level\00", align 1
@.str.309 = private unnamed_addr constant [48 x i8] c"Amount of noise (from 0 = don't denoise, to 50)\00", align 1
@.str.310 = private unnamed_addr constant [19 x i8] c"denoise-block-size\00", align 1
@.str.311 = private unnamed_addr constant [34 x i8] c"Denoise block size (default = 32)\00", align 1
@.str.312 = private unnamed_addr constant [21 x i8] c"enable-dnl-denoising\00", align 1
@.str.313 = private unnamed_addr constant [109 x i8] c"Apply denoising to the frame being encoded when denoise-noise-level is enabled (0: false, 1: true (default))\00", align 1
@.str.314 = private unnamed_addr constant [21 x i8] c"enable-ref-frame-mvs\00", align 1
@.str.315 = private unnamed_addr constant [45 x i8] c"Enable temporal mv prediction (default is 1)\00", align 1
@.str.316 = private unnamed_addr constant [15 x i8] c"frame-parallel\00", align 1
@.str.317 = private unnamed_addr constant [74 x i8] c"Enable frame parallel decodability features (0: false (default), 1: true)\00", align 1
@.str.318 = private unnamed_addr constant [16 x i8] c"error-resilient\00", align 1
@.str.319 = private unnamed_addr constant [62 x i8] c"Enable error resilient features (0: false (default), 1: true)\00", align 1
@.str.320 = private unnamed_addr constant [8 x i8] c"aq-mode\00", align 1
@.str.321 = private unnamed_addr constant [92 x i8] c"Adaptive quantization mode (0: off (default), 1: variance 2: complexity, 3: cyclic refresh)\00", align 1
@.str.322 = private unnamed_addr constant [12 x i8] c"deltaq-mode\00", align 1
@.str.323 = private unnamed_addr constant [141 x i8] c"Delta qindex mode (0: off, 1: deltaq objective (default), 2: deltaq perceptual). Currently this requires enable-tpl-model as a prerequisite.\00", align 1
@.str.324 = private unnamed_addr constant [14 x i8] c"delta-lf-mode\00", align 1
@.str.325 = private unnamed_addr constant [47 x i8] c"Enable delta-lf-mode (0: off (default), 1: on)\00", align 1
@.str.326 = private unnamed_addr constant [12 x i8] c"frame-boost\00", align 1
@.str.327 = private unnamed_addr constant [54 x i8] c"Enable frame periodic boost (0: off (default), 1: on)\00", align 1
@.str.328 = private unnamed_addr constant [13 x i8] c"gf-cbr-boost\00", align 1
@.str.329 = private unnamed_addr constant [41 x i8] c"Boost for Golden Frame in CBR mode (pct)\00", align 1
@.str.330 = private unnamed_addr constant [15 x i8] c"max-inter-rate\00", align 1
@.str.331 = private unnamed_addr constant [26 x i8] c"Max P-frame bitrate (pct)\00", align 1
@.str.332 = private unnamed_addr constant [16 x i8] c"min-gf-interval\00", align 1
@.str.333 = private unnamed_addr constant [68 x i8] c"min gf/arf frame interval (default 0, indicating in-built behavior)\00", align 1
@.str.334 = private unnamed_addr constant [16 x i8] c"max-gf-interval\00", align 1
@.str.335 = private unnamed_addr constant [68 x i8] c"max gf/arf frame interval (default 0, indicating in-built behavior)\00", align 1
@.str.336 = private unnamed_addr constant [18 x i8] c"gf-min-pyr-height\00", align 1
@.str.337 = private unnamed_addr constant [61 x i8] c"Min height for GF group pyramid structure (0 (default) to 5)\00", align 1
@.str.338 = private unnamed_addr constant [18 x i8] c"gf-max-pyr-height\00", align 1
@.str.339 = private unnamed_addr constant [65 x i8] c"maximum height for GF group pyramid structure (0 to 5 (default))\00", align 1
@.str.340 = private unnamed_addr constant [21 x i8] c"max-reference-frames\00", align 1
@.str.341 = private unnamed_addr constant [72 x i8] c"maximum number of reference frames allowed per frame (3 to 7 (default))\00", align 1
@.str.342 = private unnamed_addr constant [22 x i8] c"reduced-reference-set\00", align 1
@.str.343 = private unnamed_addr constant [76 x i8] c"Use reduced set of single and compound references (0: off (default), 1: on)\00", align 1
@.str.344 = private unnamed_addr constant [21 x i8] c"target-seq-level-idx\00", align 1
@.str.345 = private unnamed_addr constant [283 x i8] c"Target sequence level index. Possible values are in the form of \22ABxy\22(pad leading zeros if less than 4 digits). AB: Operating point(OP) index, xy: Target level index for the OP. E.g. \220\22 means target level index 0 for the 0th OP, \221021\22 means target level index 21 for the 10th OP.\00", align 1
@.str.346 = private unnamed_addr constant [7 x i8] c"min-cr\00", align 1
@.str.347 = private unnamed_addr constant [190 x i8] c"Set minimum compression ratio. Take integer values. Default is 0. If non-zero, encoder will try to keep the compression ratio of each frame to be higher than the given value divided by 100.\00", align 1
@.str.348 = private unnamed_addr constant [16 x i8] c"color-primaries\00", align 1
@.str.349 = private unnamed_addr constant [41 x i8] c"Color primaries (CICP) of input content:\00", align 1
@color_primaries_enum = internal constant [13 x %struct.arg_enum_list] [%struct.arg_enum_list { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.393, i32 0, i32 0), i32 1 }, %struct.arg_enum_list { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.390, i32 0, i32 0), i32 2 }, %struct.arg_enum_list { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.394, i32 0, i32 0), i32 6 }, %struct.arg_enum_list { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.395, i32 0, i32 0), i32 4 }, %struct.arg_enum_list { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.396, i32 0, i32 0), i32 5 }, %struct.arg_enum_list { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.397, i32 0, i32 0), i32 7 }, %struct.arg_enum_list { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.398, i32 0, i32 0), i32 8 }, %struct.arg_enum_list { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.399, i32 0, i32 0), i32 9 }, %struct.arg_enum_list { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.400, i32 0, i32 0), i32 10 }, %struct.arg_enum_list { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.401, i32 0, i32 0), i32 11 }, %struct.arg_enum_list { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.402, i32 0, i32 0), i32 12 }, %struct.arg_enum_list { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.403, i32 0, i32 0), i32 22 }, %struct.arg_enum_list zeroinitializer], align 16
@.str.350 = private unnamed_addr constant [25 x i8] c"transfer-characteristics\00", align 1
@.str.351 = private unnamed_addr constant [50 x i8] c"Transfer characteristics (CICP) of input content:\00", align 1
@transfer_characteristics_enum = internal constant [18 x %struct.arg_enum_list] [%struct.arg_enum_list { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.390, i32 0, i32 0), i32 2 }, %struct.arg_enum_list { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.393, i32 0, i32 0), i32 1 }, %struct.arg_enum_list { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.395, i32 0, i32 0), i32 4 }, %struct.arg_enum_list { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.396, i32 0, i32 0), i32 5 }, %struct.arg_enum_list { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.394, i32 0, i32 0), i32 6 }, %struct.arg_enum_list { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.397, i32 0, i32 0), i32 7 }, %struct.arg_enum_list { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.404, i32 0, i32 0), i32 8 }, %struct.arg_enum_list { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.405, i32 0, i32 0), i32 9 }, %struct.arg_enum_list { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.406, i32 0, i32 0), i32 10 }, %struct.arg_enum_list { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.407, i32 0, i32 0), i32 11 }, %struct.arg_enum_list { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.408, i32 0, i32 0), i32 12 }, %struct.arg_enum_list { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.409, i32 0, i32 0), i32 13 }, %struct.arg_enum_list { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.410, i32 0, i32 0), i32 14 }, %struct.arg_enum_list { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.411, i32 0, i32 0), i32 15 }, %struct.arg_enum_list { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.412, i32 0, i32 0), i32 16 }, %struct.arg_enum_list { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.413, i32 0, i32 0), i32 18 }, %struct.arg_enum_list { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.414, i32 0, i32 0), i32 17 }, %struct.arg_enum_list zeroinitializer], align 16
@.str.352 = private unnamed_addr constant [20 x i8] c"matrix-coefficients\00", align 1
@.str.353 = private unnamed_addr constant [45 x i8] c"Matrix coefficients (CICP) of input content:\00", align 1
@matrix_coefficients_enum = internal constant [15 x %struct.arg_enum_list] [%struct.arg_enum_list { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.415, i32 0, i32 0), i32 0 }, %struct.arg_enum_list { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.393, i32 0, i32 0), i32 1 }, %struct.arg_enum_list { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.390, i32 0, i32 0), i32 2 }, %struct.arg_enum_list { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.416, i32 0, i32 0), i32 4 }, %struct.arg_enum_list { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.396, i32 0, i32 0), i32 5 }, %struct.arg_enum_list { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.394, i32 0, i32 0), i32 6 }, %struct.arg_enum_list { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.397, i32 0, i32 0), i32 7 }, %struct.arg_enum_list { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.417, i32 0, i32 0), i32 8 }, %struct.arg_enum_list { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.418, i32 0, i32 0), i32 9 }, %struct.arg_enum_list { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.419, i32 0, i32 0), i32 10 }, %struct.arg_enum_list { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.420, i32 0, i32 0), i32 11 }, %struct.arg_enum_list { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.421, i32 0, i32 0), i32 12 }, %struct.arg_enum_list { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.422, i32 0, i32 0), i32 13 }, %struct.arg_enum_list { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.423, i32 0, i32 0), i32 14 }, %struct.arg_enum_list zeroinitializer], align 16
@.str.354 = private unnamed_addr constant [23 x i8] c"chroma-sample-position\00", align 1
@.str.355 = private unnamed_addr constant [58 x i8] c"The chroma sample position when chroma 4:2:0 is signaled:\00", align 1
@chroma_sample_position_enum = internal constant [4 x %struct.arg_enum_list] [%struct.arg_enum_list { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.424, i32 0, i32 0), i32 0 }, %struct.arg_enum_list { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.425, i32 0, i32 0), i32 1 }, %struct.arg_enum_list { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.426, i32 0, i32 0), i32 2 }, %struct.arg_enum_list zeroinitializer], align 16
@.str.356 = private unnamed_addr constant [13 x i8] c"tune-content\00", align 1
@.str.357 = private unnamed_addr constant [18 x i8] c"Tune content type\00", align 1
@tune_content_enum = internal constant [4 x %struct.arg_enum_list] [%struct.arg_enum_list { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.427, i32 0, i32 0), i32 0 }, %struct.arg_enum_list { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.428, i32 0, i32 0), i32 1 }, %struct.arg_enum_list { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.398, i32 0, i32 0), i32 2 }, %struct.arg_enum_list zeroinitializer], align 16
@.str.358 = private unnamed_addr constant [16 x i8] c"cdf-update-mode\00", align 1
@.str.359 = private unnamed_addr constant [134 x i8] c"CDF update mode for entropy coding (0: no CDF update, 1: update CDF on all frames(default), 2: selectively update CDF on some frames)\00", align 1
@.str.360 = private unnamed_addr constant [8 x i8] c"sb-size\00", align 1
@.str.361 = private unnamed_addr constant [23 x i8] c"Superblock size to use\00", align 1
@superblock_size_enum = internal constant [4 x %struct.arg_enum_list] [%struct.arg_enum_list { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.429, i32 0, i32 0), i32 2 }, %struct.arg_enum_list { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.430, i32 0, i32 0), i32 0 }, %struct.arg_enum_list { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.431, i32 0, i32 0), i32 1 }, %struct.arg_enum_list zeroinitializer], align 16
@.str.362 = private unnamed_addr constant [14 x i8] c"set-tier-mask\00", align 1
@.str.363 = private unnamed_addr constant [136 x i8] c"Set bit mask to specify which tier each of the 32 possible operating points conforms to. Bit value 0(defualt): Main Tier, 1: High Tier.\00", align 1
@.str.364 = private unnamed_addr constant [21 x i8] c"use-fixed-qp-offsets\00", align 1
@.str.365 = private unnamed_addr constant [238 x i8] c"Enable fixed QP offsets for frames at different levels of the pyramid. Selected automatically from --cq-level if --fixed-qp-offsets is not provided. If this option is not specified (default), offsets are adaptively chosen by the encoder.\00", align 1
@.str.366 = private unnamed_addr constant [17 x i8] c"fixed-qp-offsets\00", align 1
@.str.367 = private unnamed_addr constant [248 x i8] c"Set fixed QP offsets for frames at different levels of the pyramid. Comma-separated list of 5 offsets for keyframe, ALTREF, and 3 levels of internal alt-refs. If this option is not specified (default), offsets are adaptively chosen by the encoder.\00", align 1
@.str.368 = private unnamed_addr constant [26 x i8] c"vbr-corpus-complexity-lap\00", align 1
@.str.369 = private unnamed_addr constant [93 x i8] c"Set average corpus complexity per mb for single pass VBR using lap. (0..10000), default is 0\00", align 1
@g_av1_codec_arg_defs = hidden local_unnamed_addr constant %struct.av1_codec_arg_definitions { %struct.arg_def { i8* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.15, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.22, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.24, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.26, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.28, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.29, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.30, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.32, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.34, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.37, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.40, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([212 x i8], [212 x i8]* @.str.42, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.45, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.46, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.47, i32 0, i32 0), %struct.arg_enum_list* getelementptr inbounds ([4 x %struct.arg_enum_list], [4 x %struct.arg_enum_list]* @test_decode_enum, i32 0, i32 0) }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.49, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.51, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.52, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.53, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.55, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.56, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.57, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.58, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.59, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.60, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.61, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.63, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.64, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.66, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.67, i32 0, i32 0), %struct.arg_enum_list* getelementptr inbounds ([4 x %struct.arg_enum_list], [4 x %struct.arg_enum_list]* @bitdepth_enum, i32 0, i32 0) }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.68, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.69, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.70, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.71, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.72, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.73, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.76, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.78, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.79, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.80, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.81, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.83, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.84, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.86, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.87, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.88, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.89, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.90, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.91, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.92, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.93, i32 0, i32 0), %struct.arg_enum_list* getelementptr inbounds ([6 x %struct.arg_enum_list], [6 x %struct.arg_enum_list]* @stereo_mode_enum, i32 0, i32 0) }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.94, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.95, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.96, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.97, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.98, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.99, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.100, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.101, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.102, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.103, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.104, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.105, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.106, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.107, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.108, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.109, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.110, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.111, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.112, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.113, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.114, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.115, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.116, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.117, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.118, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.119, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.120, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.121, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.122, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.123, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.124, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.125, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.126, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.127, i32 0, i32 0), %struct.arg_enum_list* getelementptr inbounds ([5 x %struct.arg_enum_list], [5 x %struct.arg_enum_list]* @end_usage_enum, i32 0, i32 0) }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.128, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.129, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.130, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.131, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.132, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.133, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.134, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.135, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.136, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.137, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.138, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.139, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.140, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.141, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.142, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.143, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.144, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.145, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.146, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.147, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.148, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.149, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.150, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.151, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.152, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.153, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.154, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.155, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.156, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.157, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.158, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.159, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.160, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.161, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.162, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.163, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.164, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.165, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.166, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.167, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.168, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.169, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.170, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.171, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.172, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.173, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.174, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.175, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.176, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.177, i32 0, i32 0), %struct.arg_enum_list* getelementptr inbounds ([8 x %struct.arg_enum_list], [8 x %struct.arg_enum_list]* @tuning_enum, i32 0, i32 0) }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.178, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.179, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.180, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.181, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.182, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.183, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.184, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.185, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.186, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.187, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.188, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.189, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.190, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @.str.191, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.192, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([165 x i8], [165 x i8]* @.str.193, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.194, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.195, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.196, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.197, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.198, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.199, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.200, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.201, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.202, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([113 x i8], [113 x i8]* @.str.203, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.204, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.205, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.206, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.207, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.208, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.209, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.210, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([187 x i8], [187 x i8]* @.str.211, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.212, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.213, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.214, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.215, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.216, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.217, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.218, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.219, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.220, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.221, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.222, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.223, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.224, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([207 x i8], [207 x i8]* @.str.225, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.226, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.227, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.228, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.229, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.230, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.231, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.232, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.233, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.234, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.235, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.236, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.237, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.238, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.239, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.240, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.241, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.242, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.243, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.244, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.245, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.246, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.247, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.248, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.249, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.250, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.251, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.252, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.253, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.254, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.255, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.256, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.257, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.258, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.259, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.260, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.261, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.262, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.263, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.264, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.265, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.266, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.267, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.268, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.269, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.270, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([138 x i8], [138 x i8]* @.str.271, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.272, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.273, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.274, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.275, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.276, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.277, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.278, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.279, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.280, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.281, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.282, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.283, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.284, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.285, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.286, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.287, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.288, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.289, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.290, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.291, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.292, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.293, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.294, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.295, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.296, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.297, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.298, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @.str.299, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.300, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.301, i32 0, i32 0), %struct.arg_enum_list* getelementptr inbounds ([4 x %struct.arg_enum_list], [4 x %struct.arg_enum_list]* @timing_info_enum, i32 0, i32 0) }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.302, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.303, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.304, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.305, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.306, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.307, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.308, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.309, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.310, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.311, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.312, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @.str.313, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.314, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.315, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.316, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.317, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.318, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.319, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.320, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.321, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.322, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([141 x i8], [141 x i8]* @.str.323, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.324, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.325, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.326, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.327, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.328, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.329, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.330, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.331, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.332, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.333, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.334, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.335, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.336, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.337, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.338, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.339, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.340, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.341, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.342, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.343, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.344, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([283 x i8], [283 x i8]* @.str.345, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.346, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([190 x i8], [190 x i8]* @.str.347, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.348, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.349, i32 0, i32 0), %struct.arg_enum_list* getelementptr inbounds ([13 x %struct.arg_enum_list], [13 x %struct.arg_enum_list]* @color_primaries_enum, i32 0, i32 0) }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.350, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.351, i32 0, i32 0), %struct.arg_enum_list* getelementptr inbounds ([18 x %struct.arg_enum_list], [18 x %struct.arg_enum_list]* @transfer_characteristics_enum, i32 0, i32 0) }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.352, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.353, i32 0, i32 0), %struct.arg_enum_list* getelementptr inbounds ([15 x %struct.arg_enum_list], [15 x %struct.arg_enum_list]* @matrix_coefficients_enum, i32 0, i32 0) }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.354, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.355, i32 0, i32 0), %struct.arg_enum_list* getelementptr inbounds ([4 x %struct.arg_enum_list], [4 x %struct.arg_enum_list]* @chroma_sample_position_enum, i32 0, i32 0) }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.356, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.357, i32 0, i32 0), %struct.arg_enum_list* getelementptr inbounds ([4 x %struct.arg_enum_list], [4 x %struct.arg_enum_list]* @tune_content_enum, i32 0, i32 0) }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.358, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([134 x i8], [134 x i8]* @.str.359, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.360, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.361, i32 0, i32 0), %struct.arg_enum_list* getelementptr inbounds ([4 x %struct.arg_enum_list], [4 x %struct.arg_enum_list]* @superblock_size_enum, i32 0, i32 0) }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.362, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([136 x i8], [136 x i8]* @.str.363, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.364, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([238 x i8], [238 x i8]* @.str.365, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.366, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([248 x i8], [248 x i8]* @.str.367, i32 0, i32 0), %struct.arg_enum_list* null }, %struct.arg_def { i8* null, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.368, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.369, i32 0, i32 0), %struct.arg_enum_list* null } }, align 8
@.str.370 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@.str.371 = private unnamed_addr constant [6 x i8] c"fatal\00", align 1
@.str.372 = private unnamed_addr constant [5 x i8] c"warn\00", align 1
@.str.373 = private unnamed_addr constant [2 x i8] c"8\00", align 1
@.str.374 = private unnamed_addr constant [3 x i8] c"10\00", align 1
@.str.375 = private unnamed_addr constant [3 x i8] c"12\00", align 1
@.str.376 = private unnamed_addr constant [5 x i8] c"mono\00", align 1
@.str.377 = private unnamed_addr constant [11 x i8] c"left-right\00", align 1
@.str.378 = private unnamed_addr constant [11 x i8] c"bottom-top\00", align 1
@.str.379 = private unnamed_addr constant [11 x i8] c"top-bottom\00", align 1
@.str.380 = private unnamed_addr constant [11 x i8] c"right-left\00", align 1
@.str.381 = private unnamed_addr constant [4 x i8] c"vbr\00", align 1
@.str.382 = private unnamed_addr constant [4 x i8] c"cbr\00", align 1
@.str.383 = private unnamed_addr constant [3 x i8] c"cq\00", align 1
@.str.384 = private unnamed_addr constant [5 x i8] c"ssim\00", align 1
@.str.385 = private unnamed_addr constant [24 x i8] c"vmaf_with_preprocessing\00", align 1
@.str.386 = private unnamed_addr constant [27 x i8] c"vmaf_without_preprocessing\00", align 1
@.str.387 = private unnamed_addr constant [5 x i8] c"vmaf\00", align 1
@.str.388 = private unnamed_addr constant [9 x i8] c"vmaf_neg\00", align 1
@.str.389 = private unnamed_addr constant [12 x i8] c"butteraugli\00", align 1
@.str.390 = private unnamed_addr constant [12 x i8] c"unspecified\00", align 1
@.str.391 = private unnamed_addr constant [9 x i8] c"constant\00", align 1
@.str.392 = private unnamed_addr constant [6 x i8] c"model\00", align 1
@.str.393 = private unnamed_addr constant [6 x i8] c"bt709\00", align 1
@.str.394 = private unnamed_addr constant [6 x i8] c"bt601\00", align 1
@.str.395 = private unnamed_addr constant [7 x i8] c"bt470m\00", align 1
@.str.396 = private unnamed_addr constant [8 x i8] c"bt470bg\00", align 1
@.str.397 = private unnamed_addr constant [9 x i8] c"smpte240\00", align 1
@.str.398 = private unnamed_addr constant [5 x i8] c"film\00", align 1
@.str.399 = private unnamed_addr constant [7 x i8] c"bt2020\00", align 1
@.str.400 = private unnamed_addr constant [4 x i8] c"xyz\00", align 1
@.str.401 = private unnamed_addr constant [9 x i8] c"smpte431\00", align 1
@.str.402 = private unnamed_addr constant [9 x i8] c"smpte432\00", align 1
@.str.403 = private unnamed_addr constant [8 x i8] c"ebu3213\00", align 1
@.str.404 = private unnamed_addr constant [4 x i8] c"lin\00", align 1
@.str.405 = private unnamed_addr constant [7 x i8] c"log100\00", align 1
@.str.406 = private unnamed_addr constant [11 x i8] c"log100sq10\00", align 1
@.str.407 = private unnamed_addr constant [9 x i8] c"iec61966\00", align 1
@.str.408 = private unnamed_addr constant [7 x i8] c"bt1361\00", align 1
@.str.409 = private unnamed_addr constant [5 x i8] c"srgb\00", align 1
@.str.410 = private unnamed_addr constant [13 x i8] c"bt2020-10bit\00", align 1
@.str.411 = private unnamed_addr constant [13 x i8] c"bt2020-12bit\00", align 1
@.str.412 = private unnamed_addr constant [10 x i8] c"smpte2084\00", align 1
@.str.413 = private unnamed_addr constant [4 x i8] c"hlg\00", align 1
@.str.414 = private unnamed_addr constant [9 x i8] c"smpte428\00", align 1
@.str.415 = private unnamed_addr constant [9 x i8] c"identity\00", align 1
@.str.416 = private unnamed_addr constant [6 x i8] c"fcc73\00", align 1
@.str.417 = private unnamed_addr constant [6 x i8] c"ycgco\00", align 1
@.str.418 = private unnamed_addr constant [10 x i8] c"bt2020ncl\00", align 1
@.str.419 = private unnamed_addr constant [9 x i8] c"bt2020cl\00", align 1
@.str.420 = private unnamed_addr constant [10 x i8] c"smpte2085\00", align 1
@.str.421 = private unnamed_addr constant [9 x i8] c"chromncl\00", align 1
@.str.422 = private unnamed_addr constant [8 x i8] c"chromcl\00", align 1
@.str.423 = private unnamed_addr constant [6 x i8] c"ictcp\00", align 1
@.str.424 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.425 = private unnamed_addr constant [9 x i8] c"vertical\00", align 1
@.str.426 = private unnamed_addr constant [10 x i8] c"colocated\00", align 1
@.str.427 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.428 = private unnamed_addr constant [7 x i8] c"screen\00", align 1
@.str.429 = private unnamed_addr constant [8 x i8] c"dynamic\00", align 1
@.str.430 = private unnamed_addr constant [3 x i8] c"64\00", align 1
@.str.431 = private unnamed_addr constant [4 x i8] c"128\00", align 1

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
