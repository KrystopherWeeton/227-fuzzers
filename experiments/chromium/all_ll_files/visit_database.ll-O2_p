; ModuleID = '../../components/history/core/browser/visit_database.cc'
source_filename = "../../components/history/core/browser/visit_database.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.history::VisitDatabase" = type { i32 (...)** }
%"class.sql::Database" = type { %struct.sqlite3*, %"struct.sql::DatabaseOptions", %"class.base::flat_map", %"class.std::__1::set", i32, i8, i8, i8, i8, i8, i8, i32, %"class.base::RepeatingCallback", %"class.std::__1::basic_string", %"class.base::HistogramBase"*, %"class.std::__1::unique_ptr" }
%struct.sqlite3 = type opaque
%"struct.sql::DatabaseOptions" = type { i8, i8, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::HistogramBase" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.sql::DatabaseMemoryDumpProvider"* }
%"class.sql::DatabaseMemoryDumpProvider" = type opaque
%"class.sql::Statement" = type <{ %class.scoped_refptr.18, i8, i8, [6 x i8] }>
%class.scoped_refptr.18 = type { %"class.sql::Database::StatementRef"* }
%"class.sql::Database::StatementRef" = type <{ %"class.base::RefCounted", [4 x i8], %"class.sql::Database"*, %struct.sqlite3_stmt*, i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%struct.sqlite3_stmt = type opaque
%"class.history::VisitRow" = type <{ i64, i64, %"class.base::Time", i64, i32, [4 x i8], i64, %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { %"class.history::VisitRow"*, %"class.history::VisitRow"*, %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.history::VisitRow"* }
%"struct.history::QueryOptions" = type <{ %"class.base::Time", %"class.base::Time", i32, i32, i32, [4 x i8] }>
%"class.std::__1::set.26" = type { %"class.std::__1::__tree.27" }
%"class.std::__1::__tree.27" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.28", %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i64 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"class.base::Time"*, %"class.base::Time"*, %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.base::Time"* }
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { i64*, i64*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { i64* }
%"class.std::__1::__vector_base_common" = type { i8 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.51" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %class.GURL* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::allocator.13" = type { i8 }
%"class.std::__1::set.57" = type { %"class.std::__1::__tree.58" }
%"class.std::__1::__tree.58" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.59", %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__tree_node.103" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::pair.104" }
%"struct.std::__1::pair.104" = type { %"class.base::Time", %"class.std::__1::basic_string" }
%"struct.std::__1::pair.70" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"struct.std::__1::__less" = type { i8 }
%"class.std::__1::map" = type { %"class.std::__1::__tree.72" }
%"class.std::__1::__tree.72" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.73", %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__tree_node.117" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type" }
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.118" }
%"struct.std::__1::pair.118" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::vector.83" = type { %"class.std::__1::__vector_base.84" }
%"class.std::__1::__vector_base.84" = type { %"class.history::DomainVisit"*, %"class.history::DomainVisit"*, %"class.std::__1::__compressed_pair.85" }
%"class.history::DomainVisit" = type { %"class.std::__1::basic_string", %"class.base::Time" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.history::DomainVisit"* }
%"class.sql::Transaction" = type <{ %"class.sql::Database"*, i8, [7 x i8] }>

$_ZNSt3__16vectorIN7history8VisitRowENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZNSt3__16__treeIlNS_4lessIlEENS_9allocatorIlEEE7destroyEPNS_11__tree_nodeIlPvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_4pairIN4base4TimeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_4lessISA_EENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE = comdat any

$_ZNSt3__16__treeINS_4pairIN4base4TimeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_4lessISA_EENS7_ISA_EEE21__emplace_unique_implIJS3_S9_EEENS1_INS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEEDpOT_ = comdat any

$_ZNSt3__16__treeINS_4pairIN4base4TimeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_4lessISA_EENS7_ISA_EEE12__find_equalISA_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISJ_EERKT_ = comdat any

$_ZNSt3__16__sortIRNS_6__lessIN4base4TimeES3_EEPS3_EEvT0_S7_T_ = comdat any

$_ZNSt3__17__sort5IRNS_6__lessIN4base4TimeES3_EEPS3_EEjT0_S7_S7_S7_S7_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN4base4TimeES3_EEPS3_EEbT0_S7_T_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIlN7history11VisitSourceEEENS_19__map_value_compareIlS4_NS_4lessIlEELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE = comdat any

$_ZNSt3__16vectorIN7history11DomainVisitENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJNS_12basic_stringIcNS_11char_traitsIcEENS3_IcEEEEN4base4TimeEEEEvDpOT_ = comdat any

@_ZTVN7history13VisitDatabaseE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.history::VisitDatabase"*)* @_ZN7history13VisitDatabaseD2Ev to i8*), i8* bitcast (void (%"class.history::VisitDatabase"*)* @_ZN7history13VisitDatabaseD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str = private unnamed_addr constant [7 x i8] c"visits\00", align 1
@.str.1 = private unnamed_addr constant [323 x i8] c"CREATE TABLE visits(id INTEGER PRIMARY KEY,url INTEGER NOT NULL,visit_time INTEGER NOT NULL,from_visit INTEGER,transition INTEGER DEFAULT 0 NOT NULL,segment_id INTEGER,visit_duration INTEGER DEFAULT 0 NOT NULL,incremented_omnibox_typed_score BOOLEAN DEFAULT FALSE NOT NULL,publicly_routable BOOLEAN DEFAULT FALSE NOT NULL)\00", align 1
@.str.2 = private unnamed_addr constant [13 x i8] c"visit_source\00", align 1
@.str.3 = private unnamed_addr constant [74 x i8] c"CREATE TABLE visit_source(id INTEGER PRIMARY KEY,source INTEGER NOT NULL)\00", align 1
@.str.4 = private unnamed_addr constant [60 x i8] c"CREATE INDEX IF NOT EXISTS visits_url_index ON visits (url)\00", align 1
@.str.5 = private unnamed_addr constant [68 x i8] c"CREATE INDEX IF NOT EXISTS visits_from_index ON visits (from_visit)\00", align 1
@.str.6 = private unnamed_addr constant [68 x i8] c"CREATE INDEX IF NOT EXISTS visits_time_index ON visits (visit_time)\00", align 1
@.str.7 = private unnamed_addr constant [34 x i8] c"DROP TABLE IF EXISTS visit_source\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"DROP TABLE visits\00", align 1
@.str.9 = private unnamed_addr constant [56 x i8] c"../../components/history/core/browser/visit_database.cc\00", align 1
@.str.10 = private unnamed_addr constant [145 x i8] c"INSERT INTO visits (url, visit_time, from_visit, transition, segment_id, visit_duration, incremented_omnibox_typed_score) VALUES (?,?,?,?,?,?,?)\00", align 1
@.str.11 = private unnamed_addr constant [51 x i8] c"INSERT INTO visit_source (id, source) VALUES (?,?)\00", align 1
@.str.12 = private unnamed_addr constant [50 x i8] c"UPDATE visits SET from_visit=? WHERE from_visit=?\00", align 1
@.str.13 = private unnamed_addr constant [30 x i8] c"DELETE FROM visits WHERE id=?\00", align 1
@.str.14 = private unnamed_addr constant [36 x i8] c"DELETE FROM visit_source WHERE id=?\00", align 1
@.str.15 = private unnamed_addr constant [146 x i8] c"SELECT id,url,visit_time,from_visit,transition,segment_id,visit_duration,incremented_omnibox_typed_score,publicly_routable FROM visits WHERE id=?\00", align 1
@.str.16 = private unnamed_addr constant [138 x i8] c"UPDATE visits SET url=?,visit_time=?,from_visit=?,transition=?,segment_id=?,visit_duration=?,incremented_omnibox_typed_score=? WHERE id=?\00", align 1
@.str.17 = private unnamed_addr constant [171 x i8] c"SELECT id,url,visit_time,from_visit,transition,segment_id,visit_duration,incremented_omnibox_typed_score,publicly_routable FROM visits WHERE url=? ORDER BY visit_time ASC\00", align 1
@.str.18 = private unnamed_addr constant [211 x i8] c"SELECT id,url,visit_time,from_visit,transition,segment_id,visit_duration,incremented_omnibox_typed_score,publicly_routable FROM visits WHERE url=? AND visit_time >= ? AND visit_time < ? ORDER BY visit_time DESC\00", align 1
@.str.19 = private unnamed_addr constant [157 x i8] c"SELECT id,url,visit_time,from_visit,transition,segment_id,visit_duration,incremented_omnibox_typed_score,publicly_routable FROM visits WHERE visit_time == ?\00", align 1
@.str.20 = private unnamed_addr constant [203 x i8] c"SELECT id,url,visit_time,from_visit,transition,segment_id,visit_duration,incremented_omnibox_typed_score,publicly_routable FROM visits WHERE visit_time >= ? AND visit_time < ?ORDER BY visit_time LIMIT ?\00", align 1
@.str.21 = private unnamed_addr constant [229 x i8] c"SELECT id,url,visit_time,from_visit,transition,segment_id,visit_duration,incremented_omnibox_typed_score,publicly_routable FROM visits WHERE visit_time >= ? AND visit_time < ? AND (transition & ?) == ?ORDER BY visit_time LIMIT ?\00", align 1
@.str.22 = private unnamed_addr constant [60 x i8] c"SELECT DISTINCT url FROM visits WHERE (transition & ?) == ?\00", align 1
@.str.23 = private unnamed_addr constant [210 x i8] c"SELECT id,url,visit_time,from_visit,transition,segment_id,visit_duration,incremented_omnibox_typed_score,publicly_routable FROM visits WHERE visit_time >= ? AND visit_time < ? ORDER BY visit_time DESC, id DESC\00", align 1
@.str.24 = private unnamed_addr constant [189 x i8] c"SELECT id,url,visit_time,from_visit,transition,segment_id,visit_duration,incremented_omnibox_typed_score,publicly_routable FROM visits WHERE url=? ORDER BY visit_time DESC, id DESC LIMIT 1\00", align 1
@.str.25 = private unnamed_addr constant [189 x i8] c"SELECT id,url,visit_time,from_visit,transition,segment_id,visit_duration,incremented_omnibox_typed_score,publicly_routable FROM visits WHERE url=? ORDER BY visit_time DESC, id DESC LIMIT ?\00", align 1
@.str.26 = private unnamed_addr constant [111 x i8] c"SELECT v.id,u.url FROM visits v JOIN urls u ON v.url = u.id WHERE v.from_visit = ? AND (v.transition & ?) != 0\00", align 1
@.str.27 = private unnamed_addr constant [98 x i8] c"SELECT u.url FROM visits v JOIN urls u ON v.url = u.id WHERE v.id = ? AND (v.transition & ?) != 0\00", align 1
@_ZN3url11kHttpSchemeE = external constant [0 x i8], align 1
@_ZN3url12kHttpsSchemeE = external constant [0 x i8], align 1
@.str.28 = private unnamed_addr constant [110 x i8] c"SELECT v.visit_time,transition FROM visits v INNER JOIN urls u ON v.url = u.id WHERE u.url >= ? AND u.url < ?\00", align 1
@.str.29 = private unnamed_addr constant [86 x i8] c"SELECT url,visit_time,transition FROM visits WHERE visit_time >= ? AND visit_time < ?\00", align 1
@.str.30 = private unnamed_addr constant [187 x i8] c"SELECT   v.visit_time FROM visits v INNER JOIN urls u ON v.url = u.id WHERE   u.url >= ? AND   u.url < ? AND   v.visit_time >= ? AND   v.visit_time < ? ORDER BY v.visit_time DESC LIMIT 1\00", align 1
@.str.31 = private unnamed_addr constant [146 x i8] c"SELECT   v.visit_time FROM visits v INNER JOIN urls u ON v.url = u.id WHERE   u.url = ? AND   v.visit_time < ? ORDER BY v.visit_time DESC LIMIT 1\00", align 1
@.str.32 = private unnamed_addr constant [141 x i8] c"SELECT visit_time,transition FROM visits v INNER JOIN urls u ON v.url=u.id WHERE u.url>=? AND u.url<? AND v.visit_time>=? AND v.visit_time<?\00", align 1
@.str.33 = private unnamed_addr constant [57 x i8] c"SELECT MIN(visit_time) FROM visits WHERE visit_time != 0\00", align 1
@.str.34 = private unnamed_addr constant [36 x i8] c"SELECT id,source FROM visit_source \00", align 1
@.str.35 = private unnamed_addr constant [14 x i8] c"WHERE id IN (\00", align 1
@.str.36 = private unnamed_addr constant [14 x i8] c") ORDER BY id\00", align 1
@.str.37 = private unnamed_addr constant [326 x i8] c"SELECT   visit_time,   u.url FROM    urls u JOIN visits v ON u.id = v.url WHERE   (u.url LIKE \22https://www.google.__/search%\22 OR    u.url LIKE \22https://www.google.___/search%\22 OR    u.url LIKE \22https://www.google.__.__/search%\22 OR    u.url LIKE \22https://www.google.___.__/search%\22) AND   visit_time >= ? AND   visit_time < ? \00", align 1
@.str.38 = private unnamed_addr constant [15 x i8] c"visit_duration\00", align 1
@.str.39 = private unnamed_addr constant [72 x i8] c"ALTER TABLE visits ADD COLUMN visit_duration INTEGER DEFAULT 0 NOT NULL\00", align 1
@.str.40 = private unnamed_addr constant [32 x i8] c"incremented_omnibox_typed_score\00", align 1
@.str.41 = private unnamed_addr constant [93 x i8] c"ALTER TABLE visits ADD COLUMN incremented_omnibox_typed_score BOOLEAN DEFAULT FALSE NOT NULL\00", align 1
@.str.42 = private unnamed_addr constant [117 x i8] c"SELECT id,url,visit_time,from_visit,transition,segment_id,visit_duration,incremented_omnibox_typed_score FROM visits\00", align 1
@.str.43 = private unnamed_addr constant [18 x i8] c"publicly_routable\00", align 1
@.str.44 = private unnamed_addr constant [79 x i8] c"ALTER TABLE visits ADD COLUMN publicly_routable BOOLEAN DEFAULT FALSE NOT NULL\00", align 1
@.str.45 = private unnamed_addr constant [45 x i8] c"SELECT DISTINCT url FROM visits ORDER BY url\00", align 1
@_ZN7history24kHideFromApi3TransitionsE = external global %"struct.base::Feature", align 8

@_ZN7history13VisitDatabaseD1Ev = hidden unnamed_addr alias void (%"class.history::VisitDatabase"*), void (%"class.history::VisitDatabase"*)* @_ZN7history13VisitDatabaseD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7history13VisitDatabaseC2Ev(%"class.history::VisitDatabase"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.history::VisitDatabase", %"class.history::VisitDatabase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN7history13VisitDatabaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7history13VisitDatabaseD2Ev(%"class.history::VisitDatabase"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN7history13VisitDatabaseD0Ev(%"class.history::VisitDatabase"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history13VisitDatabase14InitVisitTableEv(%"class.history::VisitDatabase"*) local_unnamed_addr #4 align 2 {
  %2 = bitcast %"class.history::VisitDatabase"* %0 to %"class.sql::Database"* (%"class.history::VisitDatabase"*)***
  %3 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %3, i64 2
  %5 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %4, align 8
  %6 = tail call dereferenceable(136) %"class.sql::Database"* %5(%"class.history::VisitDatabase"* %0) #16
  %7 = tail call zeroext i1 @_ZNK3sql8Database14DoesTableExistEPKc(%"class.sql::Database"* %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0)) #16
  br i1 %7, label %14, label %8

8:                                                ; preds = %1
  %9 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %2, align 8
  %10 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %9, i64 2
  %11 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %10, align 8
  %12 = tail call dereferenceable(136) %"class.sql::Database"* %11(%"class.history::VisitDatabase"* %0) #16
  %13 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %12, i8* getelementptr inbounds ([323 x i8], [323 x i8]* @.str.1, i64 0, i64 0)) #16
  br i1 %13, label %14, label %44

14:                                               ; preds = %8, %1
  %15 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %2, align 8
  %16 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %15, i64 2
  %17 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %16, align 8
  %18 = tail call dereferenceable(136) %"class.sql::Database"* %17(%"class.history::VisitDatabase"* %0) #16
  %19 = tail call zeroext i1 @_ZNK3sql8Database14DoesTableExistEPKc(%"class.sql::Database"* %18, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0)) #16
  br i1 %19, label %26, label %20

20:                                               ; preds = %14
  %21 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %2, align 8
  %22 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %21, i64 2
  %23 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %22, align 8
  %24 = tail call dereferenceable(136) %"class.sql::Database"* %23(%"class.history::VisitDatabase"* %0) #16
  %25 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %24, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.3, i64 0, i64 0)) #16
  br i1 %25, label %26, label %44

26:                                               ; preds = %20, %14
  %27 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %2, align 8
  %28 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %27, i64 2
  %29 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %28, align 8
  %30 = tail call dereferenceable(136) %"class.sql::Database"* %29(%"class.history::VisitDatabase"* %0) #16
  %31 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %30, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.4, i64 0, i64 0)) #16
  br i1 %31, label %32, label %44

32:                                               ; preds = %26
  %33 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %2, align 8
  %34 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %33, i64 2
  %35 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %34, align 8
  %36 = tail call dereferenceable(136) %"class.sql::Database"* %35(%"class.history::VisitDatabase"* %0) #16
  %37 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %36, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.5, i64 0, i64 0)) #16
  br i1 %37, label %38, label %44

38:                                               ; preds = %32
  %39 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %2, align 8
  %40 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %39, i64 2
  %41 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %40, align 8
  %42 = tail call dereferenceable(136) %"class.sql::Database"* %41(%"class.history::VisitDatabase"* %0) #16
  %43 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %42, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.6, i64 0, i64 0)) #16
  br label %44

44:                                               ; preds = %38, %32, %26, %20, %8
  %45 = phi i1 [ false, %8 ], [ false, %20 ], [ false, %26 ], [ false, %32 ], [ %43, %38 ]
  ret i1 %45
}

declare zeroext i1 @_ZNK3sql8Database14DoesTableExistEPKc(%"class.sql::Database"*, i8*) local_unnamed_addr #5

declare zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"*, i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history13VisitDatabase14DropVisitTableEv(%"class.history::VisitDatabase"*) local_unnamed_addr #4 align 2 {
  %2 = bitcast %"class.history::VisitDatabase"* %0 to %"class.sql::Database"* (%"class.history::VisitDatabase"*)***
  %3 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %3, i64 2
  %5 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %4, align 8
  %6 = tail call dereferenceable(136) %"class.sql::Database"* %5(%"class.history::VisitDatabase"* %0) #16
  %7 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7, i64 0, i64 0)) #16
  br i1 %7, label %8, label %14

8:                                                ; preds = %1
  %9 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %2, align 8
  %10 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %9, i64 2
  %11 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %10, align 8
  %12 = tail call dereferenceable(136) %"class.sql::Database"* %11(%"class.history::VisitDatabase"* %0) #16
  %13 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %12, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0)) #16
  br label %14

14:                                               ; preds = %8, %1
  %15 = phi i1 [ false, %1 ], [ %13, %8 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history13VisitDatabase12FillVisitRowERKN3sql9StatementEPNS_8VisitRowE(%"class.sql::Statement"* dereferenceable(16), %"class.history::VisitRow"* nocapture) local_unnamed_addr #4 align 2 {
  %3 = tail call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* %0, i32 0) #16
  %4 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %1, i64 0, i32 0
  store i64 %3, i64* %4, align 8
  %5 = tail call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* %0, i32 1) #16
  %6 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %1, i64 0, i32 1
  store i64 %5, i64* %6, align 8
  %7 = tail call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* %0, i32 2) #16
  %8 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %1, i64 0, i32 2, i32 0, i32 0
  store i64 %7, i64* %8, align 8
  %9 = tail call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* %0, i32 3) #16
  %10 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %1, i64 0, i32 3
  store i64 %9, i64* %10, align 8
  %11 = tail call i32 @_ZNK3sql9Statement9ColumnIntEi(%"class.sql::Statement"* %0, i32 4) #16
  %12 = tail call i32 @_ZN2ui21PageTransitionFromIntEi(i32 %11) #16
  %13 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %1, i64 0, i32 4
  store i32 %12, i32* %13, align 8
  %14 = tail call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* %0, i32 5) #16
  %15 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %1, i64 0, i32 6
  store i64 %14, i64* %15, align 8
  %16 = tail call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* %0, i32 6) #16
  %17 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %1, i64 0, i32 7, i32 0
  store i64 %16, i64* %17, align 8
  %18 = tail call zeroext i1 @_ZNK3sql9Statement10ColumnBoolEi(%"class.sql::Statement"* %0, i32 7) #16
  %19 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %1, i64 0, i32 8
  %20 = zext i1 %18 to i8
  store i8 %20, i8* %19, align 8
  ret void
}

declare i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"*, i32) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

declare i32 @_ZN2ui21PageTransitionFromIntEi(i32) local_unnamed_addr #5

declare i32 @_ZNK3sql9Statement9ColumnIntEi(%"class.sql::Statement"*, i32) local_unnamed_addr #5

declare zeroext i1 @_ZNK3sql9Statement10ColumnBoolEi(%"class.sql::Statement"*, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history13VisitDatabase15FillVisitVectorERN3sql9StatementEPNSt3__16vectorINS_8VisitRowENS4_9allocatorIS6_EEEE(%"class.sql::Statement"* dereferenceable(16), %"class.std::__1::vector.19"*) local_unnamed_addr #4 align 2 {
  %3 = alloca %"class.history::VisitRow", align 8
  %4 = getelementptr inbounds %"class.sql::Statement", %"class.sql::Statement"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.sql::Database::StatementRef"*, %"class.sql::Database::StatementRef"** %4, align 8
  %6 = getelementptr inbounds %"class.sql::Database::StatementRef", %"class.sql::Database::StatementRef"* %5, i64 0, i32 3
  %7 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %6, align 8
  %8 = icmp eq %struct.sqlite3_stmt* %7, null
  br i1 %8, label %47, label %9

9:                                                ; preds = %2
  %10 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* %0) #16
  br i1 %10, label %11, label %45

11:                                               ; preds = %9
  %12 = bitcast %"class.history::VisitRow"* %3 to i8*
  %13 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %3, i64 0, i32 0
  %14 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %3, i64 0, i32 1
  %15 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %3, i64 0, i32 2, i32 0, i32 0
  %16 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %3, i64 0, i32 3
  %17 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %3, i64 0, i32 4
  %18 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %3, i64 0, i32 6
  %19 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %3, i64 0, i32 7, i32 0
  %20 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %3, i64 0, i32 8
  %21 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %1, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %23 = bitcast %"class.history::VisitRow"** %21 to i64*
  br label %24

24:                                               ; preds = %11, %43
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %12) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 64, i1 false)
  call void @_ZN7history8VisitRowC1Ev(%"class.history::VisitRow"* nonnull %3) #16
  %25 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* %0, i32 0) #16
  store i64 %25, i64* %13, align 8
  %26 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* %0, i32 1) #16
  store i64 %26, i64* %14, align 8
  %27 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* %0, i32 2) #16
  store i64 %27, i64* %15, align 8
  %28 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* %0, i32 3) #16
  store i64 %28, i64* %16, align 8
  %29 = call i32 @_ZNK3sql9Statement9ColumnIntEi(%"class.sql::Statement"* %0, i32 4) #16
  %30 = call i32 @_ZN2ui21PageTransitionFromIntEi(i32 %29) #16
  store i32 %30, i32* %17, align 8
  %31 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* %0, i32 5) #16
  store i64 %31, i64* %18, align 8
  %32 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* %0, i32 6) #16
  store i64 %32, i64* %19, align 8
  %33 = call zeroext i1 @_ZNK3sql9Statement10ColumnBoolEi(%"class.sql::Statement"* %0, i32 7) #16
  %34 = zext i1 %33 to i8
  store i8 %34, i8* %20, align 8
  %35 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %21, align 8
  %36 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %22, align 8
  %37 = icmp eq %"class.history::VisitRow"* %35, %36
  br i1 %37, label %42, label %38

38:                                               ; preds = %24
  %39 = bitcast %"class.history::VisitRow"* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* nonnull align 8 %12, i64 64, i1 false) #16
  %40 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %35, i64 1
  %41 = ptrtoint %"class.history::VisitRow"* %40 to i64
  store i64 %41, i64* %23, align 8
  br label %43

42:                                               ; preds = %24
  call void @_ZNSt3__16vectorIN7history8VisitRowENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.19"* %1, %"class.history::VisitRow"* nonnull dereferenceable(64) %3) #16
  br label %43

43:                                               ; preds = %38, %42
  call void @_ZN7history8VisitRowD1Ev(%"class.history::VisitRow"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %12) #16
  %44 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* %0) #16
  br i1 %44, label %24, label %45

45:                                               ; preds = %43, %9
  %46 = call zeroext i1 @_ZNK3sql9Statement9SucceededEv(%"class.sql::Statement"* %0) #16
  br label %47

47:                                               ; preds = %2, %45
  %48 = phi i1 [ %46, %45 ], [ false, %2 ]
  ret i1 %48
}

declare zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

declare void @_ZN7history8VisitRowC1Ev(%"class.history::VisitRow"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7history8VisitRowD1Ev(%"class.history::VisitRow"*) unnamed_addr #7

declare zeroext i1 @_ZNK3sql9Statement9SucceededEv(%"class.sql::Statement"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history13VisitDatabase26FillVisitVectorWithOptionsERN3sql9StatementERKNS_12QueryOptionsEPNSt3__16vectorINS_8VisitRowENS7_9allocatorIS9_EEEE(%"class.sql::Statement"* dereferenceable(16), %"struct.history::QueryOptions"* dereferenceable(32), %"class.std::__1::vector.19"*) local_unnamed_addr #4 align 2 {
  %4 = alloca %"class.std::__1::set.26", align 8
  %5 = alloca %"class.history::VisitRow", align 8
  %6 = bitcast %"class.std::__1::set.26"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.std::__1::set.26", %"class.std::__1::set.26"* %4, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::set.26", %"class.std::__1::set.26"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::set.26", %"class.std::__1::set.26"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::set.26", %"class.std::__1::set.26"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.std::__1::__tree_node_base"** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #16
  store %"class.std::__1::__tree_end_node"* %10, %"class.std::__1::__tree_end_node"** %7, align 8
  %12 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* %0) #16
  br i1 %12, label %15, label %13

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.std::__1::__tree_node"**
  br label %171

15:                                               ; preds = %3
  %16 = bitcast %"class.history::VisitRow"* %5 to i8*
  %17 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %5, i64 0, i32 0
  %18 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %5, i64 0, i32 1
  %19 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %5, i64 0, i32 2, i32 0, i32 0
  %20 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %5, i64 0, i32 3
  %21 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %5, i64 0, i32 4
  %22 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %5, i64 0, i32 6
  %23 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %5, i64 0, i32 7, i32 0
  %24 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %5, i64 0, i32 8
  %25 = getelementptr inbounds %"struct.history::QueryOptions", %"struct.history::QueryOptions"* %1, i64 0, i32 3
  %26 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %5, i64 0, i32 2
  %27 = getelementptr inbounds %"class.std::__1::set.26", %"class.std::__1::set.26"* %4, i64 0, i32 0
  %28 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.std::__1::__tree_node"**
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 0, i32 0
  %30 = bitcast %"class.std::__1::set.26"* %4 to i64*
  %31 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %2, i64 0, i32 0, i32 1
  %32 = bitcast %"class.history::VisitRow"** %31 to i64*
  %33 = bitcast %"class.std::__1::vector.19"* %2 to i64*
  %34 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  br label %35

35:                                               ; preds = %15, %168
  %36 = phi i64 [ 0, %15 ], [ %169, %168 ]
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %16) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 64, i1 false)
  call void @_ZN7history8VisitRowC1Ev(%"class.history::VisitRow"* nonnull %5) #16
  %37 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* %0, i32 0) #16
  store i64 %37, i64* %17, align 8
  %38 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* %0, i32 1) #16
  store i64 %38, i64* %18, align 8
  %39 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* %0, i32 2) #16
  store i64 %39, i64* %19, align 8
  %40 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* %0, i32 3) #16
  store i64 %40, i64* %20, align 8
  %41 = call i32 @_ZNK3sql9Statement9ColumnIntEi(%"class.sql::Statement"* %0, i32 4) #16
  %42 = call i32 @_ZN2ui21PageTransitionFromIntEi(i32 %41) #16
  store i32 %42, i32* %21, align 8
  %43 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* %0, i32 5) #16
  store i64 %43, i64* %22, align 8
  %44 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* %0, i32 6) #16
  store i64 %44, i64* %23, align 8
  %45 = call zeroext i1 @_ZNK3sql9Statement10ColumnBoolEi(%"class.sql::Statement"* %0, i32 7) #16
  %46 = zext i1 %45 to i8
  store i8 %46, i8* %24, align 8
  %47 = load i32, i32* %21, align 8
  %48 = call i32 @_ZN2ui21PageTransitionFromIntEi(i32 %47) #16
  %49 = and i32 %47, 536870912
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %168, label %51

51:                                               ; preds = %35
  %52 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN7history24kHideFromApi3TransitionsE) #16
  %53 = select i1 %52, i32 2097152, i32 0
  %54 = and i32 %53, %47
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %168

56:                                               ; preds = %51
  %57 = call zeroext i1 @_ZN2ui25PageTransitionIsMainFrameENS_14PageTransitionE(i32 %48) #16
  br i1 %57, label %58, label %168

58:                                               ; preds = %56
  %59 = call zeroext i1 @_ZN2ui24PageTransitionCoreTypeIsENS_14PageTransitionES0_(i32 %48, i32 10) #16
  br i1 %59, label %168, label %60

60:                                               ; preds = %58
  %61 = load i32, i32* %25, align 4
  switch i32 %61, label %68 [
    i32 2, label %149
    i32 1, label %62
  ]

62:                                               ; preds = %60
  %63 = call i64 @_ZNK4base4Time8MidnightEb(%"class.base::Time"* %26, i1 zeroext true) #16
  %64 = icmp eq i64 %36, %63
  br i1 %64, label %68, label %65

65:                                               ; preds = %62
  %66 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %28, align 8
  call void @_ZNSt3__16__treeIlNS_4lessIlEENS_9allocatorIlEEE7destroyEPNS_11__tree_nodeIlPvEE(%"class.std::__1::__tree.27"* nonnull %27, %"class.std::__1::__tree_node"* %66) #16
  store i64 0, i64* %9, align 8
  store %"class.std::__1::__tree_end_node"* %10, %"class.std::__1::__tree_end_node"** %7, align 8
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %29, align 8
  %67 = call i64 @_ZNK4base4Time8MidnightEb(%"class.base::Time"* %26, i1 zeroext true) #16
  br label %68

68:                                               ; preds = %62, %60, %65
  %69 = phi i64 [ %36, %60 ], [ %67, %65 ], [ %36, %62 ]
  %70 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %28, align 8
  %71 = icmp eq %"class.std::__1::__tree_node"* %70, null
  br i1 %71, label %122, label %72

72:                                               ; preds = %68
  %73 = load i64, i64* %18, align 8
  br label %74

74:                                               ; preds = %74, %72
  %75 = phi %"class.std::__1::__tree_end_node"* [ %10, %72 ], [ %85, %74 ]
  %76 = phi %"class.std::__1::__tree_node"* [ %70, %72 ], [ %86, %74 ]
  %77 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %76, i64 0, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = icmp slt i64 %78, %73
  %80 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %76, i64 0, i32 0, i32 1
  %81 = bitcast %"class.std::__1::__tree_node_base"** %80 to %"class.std::__1::__tree_node"**
  %82 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %76, i64 0, i32 0, i32 0
  %83 = bitcast %"class.std::__1::__tree_node"* %76 to %"class.std::__1::__tree_node"**
  %84 = select i1 %79, %"class.std::__1::__tree_node"** %81, %"class.std::__1::__tree_node"** %83
  %85 = select i1 %79, %"class.std::__1::__tree_end_node"* %75, %"class.std::__1::__tree_end_node"* %82
  %86 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %84, align 8
  %87 = icmp eq %"class.std::__1::__tree_node"* %86, null
  br i1 %87, label %88, label %74

88:                                               ; preds = %74
  %89 = icmp eq %"class.std::__1::__tree_end_node"* %85, %10
  br i1 %89, label %95, label %90

90:                                               ; preds = %88
  %91 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %85, i64 4
  %92 = bitcast %"class.std::__1::__tree_end_node"* %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = icmp slt i64 %73, %93
  br i1 %94, label %95, label %168

95:                                               ; preds = %88, %90
  br label %96

96:                                               ; preds = %95, %118
  %97 = phi %"class.std::__1::__tree_node"* [ %121, %118 ], [ %70, %95 ]
  %98 = phi %"class.std::__1::__tree_node_base"** [ %120, %118 ], [ %8, %95 ]
  %99 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %97, i64 0, i32 1
  %100 = load i64, i64* %99, align 8
  %101 = icmp slt i64 %73, %100
  br i1 %101, label %102, label %108

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %97, i64 0, i32 0, i32 0, i32 0
  %104 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %103, align 8
  %105 = icmp eq %"class.std::__1::__tree_node_base"* %104, null
  br i1 %105, label %106, label %118

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %97, i64 0, i32 0, i32 0
  br label %122

108:                                              ; preds = %96
  %109 = icmp slt i64 %100, %73
  br i1 %109, label %110, label %116

110:                                              ; preds = %108
  %111 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %97, i64 0, i32 0, i32 1
  %112 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %111, align 8
  %113 = icmp eq %"class.std::__1::__tree_node_base"* %112, null
  br i1 %113, label %114, label %118

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %97, i64 0, i32 0, i32 0
  br label %122

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %97, i64 0, i32 0, i32 0
  br label %122

118:                                              ; preds = %110, %102
  %119 = phi %"class.std::__1::__tree_node_base"* [ %104, %102 ], [ %112, %110 ]
  %120 = phi %"class.std::__1::__tree_node_base"** [ %103, %102 ], [ %111, %110 ]
  %121 = bitcast %"class.std::__1::__tree_node_base"* %119 to %"class.std::__1::__tree_node"*
  br label %96

122:                                              ; preds = %68, %116, %114, %106
  %123 = phi %"class.std::__1::__tree_end_node"* [ %107, %106 ], [ %115, %114 ], [ %117, %116 ], [ %10, %68 ]
  %124 = phi %"class.std::__1::__tree_node_base"** [ %103, %106 ], [ %111, %114 ], [ %98, %116 ], [ %29, %68 ]
  %125 = bitcast %"class.std::__1::__tree_node_base"** %124 to %"class.std::__1::__tree_node"**
  %126 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %125, align 8
  %127 = icmp eq %"class.std::__1::__tree_node"* %126, null
  br i1 %127, label %128, label %149

128:                                              ; preds = %122
  %129 = call i8* @_Znwm(i64 40) #17, !noalias !2
  %130 = getelementptr inbounds i8, i8* %129, i64 32
  %131 = bitcast i8* %130 to i64*
  %132 = load i64, i64* %18, align 8, !noalias !2
  store i64 %132, i64* %131, align 8, !noalias !2
  %133 = bitcast i8* %129 to %"class.std::__1::__tree_node_base"*
  %134 = getelementptr inbounds i8, i8* %129, i64 16
  %135 = bitcast i8* %134 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %129, i8 0, i64 16, i1 false) #16
  store %"class.std::__1::__tree_end_node"* %123, %"class.std::__1::__tree_end_node"** %135, align 8
  %136 = bitcast %"class.std::__1::__tree_node_base"** %124 to i8**
  store i8* %129, i8** %136, align 8
  %137 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %7, align 8
  %138 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %137, i64 0, i32 0
  %139 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %138, align 8
  %140 = icmp eq %"class.std::__1::__tree_node_base"* %139, null
  br i1 %140, label %144, label %141

141:                                              ; preds = %128
  %142 = ptrtoint %"class.std::__1::__tree_node_base"* %139 to i64
  store i64 %142, i64* %30, align 8
  %143 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %124, align 8
  br label %144

144:                                              ; preds = %141, %128
  %145 = phi %"class.std::__1::__tree_node_base"* [ %133, %128 ], [ %143, %141 ]
  %146 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %8, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %146, %"class.std::__1::__tree_node_base"* %145) #16
  %147 = load i64, i64* %9, align 8
  %148 = add i64 %147, 1
  store i64 %148, i64* %9, align 8
  br label %149

149:                                              ; preds = %144, %122, %60
  %150 = phi i64 [ %36, %60 ], [ %69, %122 ], [ %69, %144 ]
  %151 = load i64, i64* %32, align 8
  %152 = load i64, i64* %33, align 8
  %153 = sub i64 %151, %152
  %154 = lshr exact i64 %153, 6
  %155 = trunc i64 %154 to i32
  %156 = call i32 @_ZNK7history12QueryOptions17EffectiveMaxCountEv(%"struct.history::QueryOptions"* %1) #16
  %157 = icmp sgt i32 %156, %155
  br i1 %157, label %159, label %158

158:                                              ; preds = %149
  call void @_ZN7history8VisitRowD1Ev(%"class.history::VisitRow"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %16) #16
  br label %171

159:                                              ; preds = %149
  %160 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %31, align 8
  %161 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %34, align 8
  %162 = icmp eq %"class.history::VisitRow"* %160, %161
  br i1 %162, label %167, label %163

163:                                              ; preds = %159
  %164 = bitcast %"class.history::VisitRow"* %160 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %164, i8* nonnull align 8 %16, i64 64, i1 false) #16
  %165 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %160, i64 1
  %166 = ptrtoint %"class.history::VisitRow"* %165 to i64
  store i64 %166, i64* %32, align 8
  br label %168

167:                                              ; preds = %159
  call void @_ZNSt3__16vectorIN7history8VisitRowENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.19"* %2, %"class.history::VisitRow"* nonnull dereferenceable(64) %5) #16
  br label %168

168:                                              ; preds = %90, %58, %35, %51, %56, %167, %163
  %169 = phi i64 [ %36, %58 ], [ %150, %163 ], [ %150, %167 ], [ %36, %56 ], [ %36, %51 ], [ %36, %35 ], [ %69, %90 ]
  call void @_ZN7history8VisitRowD1Ev(%"class.history::VisitRow"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %16) #16
  %170 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* %0) #16
  br i1 %170, label %35, label %171

171:                                              ; preds = %168, %13, %158
  %172 = phi %"class.std::__1::__tree_node"** [ %14, %13 ], [ %28, %158 ], [ %28, %168 ]
  %173 = phi i1 [ false, %13 ], [ true, %158 ], [ false, %168 ]
  %174 = getelementptr inbounds %"class.std::__1::set.26", %"class.std::__1::set.26"* %4, i64 0, i32 0
  %175 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %172, align 8
  call void @_ZNSt3__16__treeIlNS_4lessIlEENS_9allocatorIlEEE7destroyEPNS_11__tree_nodeIlPvEE(%"class.std::__1::__tree.27"* nonnull %174, %"class.std::__1::__tree_node"* %175) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  ret i1 %173
}

declare i32 @_ZNK7history12QueryOptions17EffectiveMaxCountEv(%"struct.history::QueryOptions"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN7history13VisitDatabase8AddVisitEPNS_8VisitRowENS_11VisitSourceE(%"class.history::VisitDatabase"*, %"class.history::VisitRow"* nocapture, i32) local_unnamed_addr #4 align 2 {
  %4 = alloca %"class.sql::Statement", align 8
  %5 = alloca %"class.sql::Statement", align 8
  %6 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #16
  %7 = bitcast %"class.history::VisitDatabase"* %0 to %"class.sql::Database"* (%"class.history::VisitDatabase"*)***
  %8 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %7, align 8
  %10 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %9, i64 2
  %11 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %10, align 8
  %12 = tail call dereferenceable(136) %"class.sql::Database"* %11(%"class.history::VisitDatabase"* %0) #16
  %13 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %12, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.9, i64 0, i64 0), i64 208, i8* getelementptr inbounds ([145 x i8], [145 x i8]* @.str.10, i64 0, i64 0)) #16
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %4, %"class.sql::Database::StatementRef"* %13) #16
  %14 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %1, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %4, i32 0, i64 %15) #16
  %17 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %1, i64 0, i32 2, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %4, i32 1, i64 %18) #16
  %20 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %1, i64 0, i32 3
  %21 = load i64, i64* %20, align 8
  %22 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %4, i32 2, i64 %21) #16
  %23 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %1, i64 0, i32 4
  %24 = load i32, i32* %23, align 8
  %25 = zext i32 %24 to i64
  %26 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %4, i32 3, i64 %25) #16
  %27 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %1, i64 0, i32 6
  %28 = load i64, i64* %27, align 8
  %29 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %4, i32 4, i64 %28) #16
  %30 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %1, i64 0, i32 7, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %4, i32 5, i64 %31) #16
  %33 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %1, i64 0, i32 8
  %34 = load i8, i8* %33, align 8, !range !5
  %35 = icmp ne i8 %34, 0
  %36 = call zeroext i1 @_ZN3sql9Statement8BindBoolEib(%"class.sql::Statement"* nonnull %4, i32 6, i1 zeroext %35) #16
  %37 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %4) #16
  br i1 %37, label %38, label %61

38:                                               ; preds = %3
  %39 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %7, align 8
  %40 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %39, i64 2
  %41 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %40, align 8
  %42 = call dereferenceable(136) %"class.sql::Database"* %41(%"class.history::VisitDatabase"* %0) #16
  %43 = call i64 @_ZNK3sql8Database18GetLastInsertRowIdEv(%"class.sql::Database"* %42) #16
  %44 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %1, i64 0, i32 0
  store i64 %43, i64* %44, align 8
  %45 = icmp eq i32 %2, 1
  br i1 %45, label %61, label %46

46:                                               ; preds = %38
  %47 = bitcast %"class.sql::Statement"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #16
  %48 = bitcast %"class.sql::Statement"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 16, i1 false)
  %49 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %7, align 8
  %50 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %49, i64 2
  %51 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %50, align 8
  %52 = call dereferenceable(136) %"class.sql::Database"* %51(%"class.history::VisitDatabase"* %0) #16
  %53 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %52, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.9, i64 0, i64 0), i64 232, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.11, i64 0, i64 0)) #16
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %5, %"class.sql::Database::StatementRef"* %53) #16
  %54 = load i64, i64* %44, align 8
  %55 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %5, i32 0, i64 %54) #16
  %56 = zext i32 %2 to i64
  %57 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %5, i32 1, i64 %56) #16
  %58 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %5) #16
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #16
  br i1 %58, label %59, label %61

59:                                               ; preds = %46
  %60 = load i64, i64* %44, align 8
  br label %61

61:                                               ; preds = %38, %59, %3, %46
  %62 = phi i64 [ 0, %46 ], [ 0, %3 ], [ %60, %59 ], [ %43, %38 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #16
  ret i64 %62
}

declare %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"*, i8*, i64, i8*) local_unnamed_addr #5

declare void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"*, %"class.sql::Database::StatementRef"*) unnamed_addr #5

declare zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"*, i32, i64) local_unnamed_addr #5

declare zeroext i1 @_ZN3sql9Statement8BindBoolEib(%"class.sql::Statement"*, i32, i1 zeroext) local_unnamed_addr #5

declare zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"*) local_unnamed_addr #5

declare i64 @_ZNK3sql8Database18GetLastInsertRowIdEv(%"class.sql::Database"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history13VisitDatabase11DeleteVisitERKNS_8VisitRowE(%"class.history::VisitDatabase"*, %"class.history::VisitRow"* nocapture readonly dereferenceable(64)) local_unnamed_addr #4 align 2 {
  %3 = alloca %"class.sql::Statement", align 8
  %4 = alloca %"class.sql::Statement", align 8
  %5 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #16
  %6 = bitcast %"class.history::VisitDatabase"* %0 to %"class.sql::Database"* (%"class.history::VisitDatabase"*)***
  %7 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  %8 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %6, align 8
  %9 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %8, i64 2
  %10 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %9, align 8
  %11 = tail call dereferenceable(136) %"class.sql::Database"* %10(%"class.history::VisitDatabase"* %0) #16
  %12 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %11, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.9, i64 0, i64 0), i64 250, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.12, i64 0, i64 0)) #16
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %3, %"class.sql::Database::StatementRef"* %12) #16
  %13 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %1, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %3, i32 0, i64 %14) #16
  %16 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %1, i64 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %3, i32 1, i64 %17) #16
  %19 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %3) #16
  br i1 %19, label %20, label %41

20:                                               ; preds = %2
  %21 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #16
  %22 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false)
  %23 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %6, align 8
  %24 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %23, i64 2
  %25 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %24, align 8
  %26 = call dereferenceable(136) %"class.sql::Database"* %25(%"class.history::VisitDatabase"* %0) #16
  %27 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %26, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.9, i64 0, i64 0), i64 258, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.13, i64 0, i64 0)) #16
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %4, %"class.sql::Database::StatementRef"* %27) #16
  %28 = load i64, i64* %16, align 8
  %29 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %4, i32 0, i64 %28) #16
  %30 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %4) #16
  br i1 %30, label %31, label %40

31:                                               ; preds = %20
  %32 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %6, align 8
  %33 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %32, i64 2
  %34 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %33, align 8
  %35 = call dereferenceable(136) %"class.sql::Database"* %34(%"class.history::VisitDatabase"* %0) #16
  %36 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %35, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.9, i64 0, i64 0), i64 266, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.14, i64 0, i64 0)) #16
  call void @_ZN3sql9Statement6AssignE13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %4, %"class.sql::Database::StatementRef"* %36) #16
  %37 = load i64, i64* %16, align 8
  %38 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %4, i32 0, i64 %37) #16
  %39 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %4) #16
  br label %40

40:                                               ; preds = %20, %31
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #16
  br label %41

41:                                               ; preds = %2, %40
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #16
  ret void
}

declare void @_ZN3sql9Statement6AssignE13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"*, %"class.sql::Database::StatementRef"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history13VisitDatabase14GetRowForVisitElPNS_8VisitRowE(%"class.history::VisitDatabase"*, i64, %"class.history::VisitRow"* nocapture) local_unnamed_addr #4 align 2 {
  %4 = alloca %"class.sql::Statement", align 8
  %5 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #16
  %6 = bitcast %"class.history::VisitDatabase"* %0 to %"class.sql::Database"* (%"class.history::VisitDatabase"*)***
  %7 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  %8 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %6, align 8
  %9 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %8, i64 2
  %10 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %9, align 8
  %11 = tail call dereferenceable(136) %"class.sql::Database"* %10(%"class.history::VisitDatabase"* %0) #16
  %12 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %11, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.9, i64 0, i64 0), i64 274, i8* getelementptr inbounds ([146 x i8], [146 x i8]* @.str.15, i64 0, i64 0)) #16
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %4, %"class.sql::Database::StatementRef"* %12) #16
  %13 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %4, i32 0, i64 %1) #16
  %14 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %4) #16
  br i1 %14, label %15, label %19

15:                                               ; preds = %3
  call void @_ZN7history13VisitDatabase12FillVisitRowERKN3sql9StatementEPNS_8VisitRowE(%"class.sql::Statement"* nonnull dereferenceable(16) %4, %"class.history::VisitRow"* %2)
  %16 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %2, i64 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, %1
  br label %19

19:                                               ; preds = %15, %3
  %20 = phi i1 [ false, %3 ], [ %18, %15 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #16
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history13VisitDatabase14UpdateVisitRowERKNS_8VisitRowE(%"class.history::VisitDatabase"*, %"class.history::VisitRow"* nocapture readonly dereferenceable(64)) local_unnamed_addr #4 align 2 {
  %3 = alloca %"class.sql::Statement", align 8
  %4 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %1, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %1, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %43, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #16
  %11 = bitcast %"class.history::VisitDatabase"* %0 to %"class.sql::Database"* (%"class.history::VisitDatabase"*)***
  %12 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %11, align 8
  %14 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %13, i64 2
  %15 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %14, align 8
  %16 = tail call dereferenceable(136) %"class.sql::Database"* %15(%"class.history::VisitDatabase"* %0) #16
  %17 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %16, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.9, i64 0, i64 0), i64 298, i8* getelementptr inbounds ([138 x i8], [138 x i8]* @.str.16, i64 0, i64 0)) #16
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %3, %"class.sql::Database::StatementRef"* %17) #16
  %18 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %1, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %3, i32 0, i64 %19) #16
  %21 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %1, i64 0, i32 2, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %3, i32 1, i64 %22) #16
  %24 = load i64, i64* %6, align 8
  %25 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %3, i32 2, i64 %24) #16
  %26 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %1, i64 0, i32 4
  %27 = load i32, i32* %26, align 8
  %28 = zext i32 %27 to i64
  %29 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %3, i32 3, i64 %28) #16
  %30 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %1, i64 0, i32 6
  %31 = load i64, i64* %30, align 8
  %32 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %3, i32 4, i64 %31) #16
  %33 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %1, i64 0, i32 7, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %3, i32 5, i64 %34) #16
  %36 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %1, i64 0, i32 8
  %37 = load i8, i8* %36, align 8, !range !5
  %38 = icmp ne i8 %37, 0
  %39 = call zeroext i1 @_ZN3sql9Statement8BindBoolEib(%"class.sql::Statement"* nonnull %3, i32 6, i1 zeroext %38) #16
  %40 = load i64, i64* %4, align 8
  %41 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %3, i32 7, i64 %40) #16
  %42 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %3) #16
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #16
  br label %43

43:                                               ; preds = %2, %9
  %44 = phi i1 [ %42, %9 ], [ false, %2 ]
  ret i1 %44
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history13VisitDatabase15GetVisitsForURLElPNSt3__16vectorINS_8VisitRowENS1_9allocatorIS3_EEEE(%"class.history::VisitDatabase"*, i64, %"class.std::__1::vector.19"*) local_unnamed_addr #4 align 2 {
  %4 = alloca %"class.sql::Statement", align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %2, i64 0, i32 0, i32 0
  %6 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %2, i64 0, i32 0, i32 1
  %8 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %7, align 8
  %9 = icmp eq %"class.history::VisitRow"* %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %3, %10
  %11 = phi %"class.history::VisitRow"* [ %12, %10 ], [ %8, %3 ]
  %12 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %11, i64 -1
  tail call void @_ZN7history8VisitRowD1Ev(%"class.history::VisitRow"* %12) #16
  %13 = icmp eq %"class.history::VisitRow"* %12, %6
  br i1 %13, label %14, label %10

14:                                               ; preds = %10, %3
  store %"class.history::VisitRow"* %6, %"class.history::VisitRow"** %7, align 8
  %15 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #16
  %16 = bitcast %"class.history::VisitDatabase"* %0 to %"class.sql::Database"* (%"class.history::VisitDatabase"*)***
  %17 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 16, i1 false)
  %18 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %16, align 8
  %19 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %18, i64 2
  %20 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %19, align 8
  %21 = tail call dereferenceable(136) %"class.sql::Database"* %20(%"class.history::VisitDatabase"* %0) #16
  %22 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %21, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.9, i64 0, i64 0), i64 319, i8* getelementptr inbounds ([171 x i8], [171 x i8]* @.str.17, i64 0, i64 0)) #16
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %4, %"class.sql::Database::StatementRef"* %22) #16
  %23 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %4, i32 0, i64 %1) #16
  %24 = call zeroext i1 @_ZN7history13VisitDatabase15FillVisitVectorERN3sql9StatementEPNSt3__16vectorINS_8VisitRowENS4_9allocatorIS6_EEEE(%"class.sql::Statement"* nonnull dereferenceable(16) %4, %"class.std::__1::vector.19"* %2)
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #16
  ret i1 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history13VisitDatabase22GetVisibleVisitsForURLElRKNS_12QueryOptionsEPNSt3__16vectorINS_8VisitRowENS4_9allocatorIS6_EEEE(%"class.history::VisitDatabase"*, i64, %"struct.history::QueryOptions"* dereferenceable(32), %"class.std::__1::vector.19"*) local_unnamed_addr #4 align 2 {
  %5 = alloca %"class.sql::Statement", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %3, i64 0, i32 0, i32 1
  %9 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %8, align 8
  %10 = icmp eq %"class.history::VisitRow"* %9, %7
  br i1 %10, label %15, label %11

11:                                               ; preds = %4, %11
  %12 = phi %"class.history::VisitRow"* [ %13, %11 ], [ %9, %4 ]
  %13 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %12, i64 -1
  tail call void @_ZN7history8VisitRowD1Ev(%"class.history::VisitRow"* %13) #16
  %14 = icmp eq %"class.history::VisitRow"* %13, %7
  br i1 %14, label %15, label %11

15:                                               ; preds = %11, %4
  store %"class.history::VisitRow"* %7, %"class.history::VisitRow"** %8, align 8
  %16 = bitcast %"class.sql::Statement"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #16
  %17 = bitcast %"class.history::VisitDatabase"* %0 to %"class.sql::Database"* (%"class.history::VisitDatabase"*)***
  %18 = bitcast %"class.sql::Statement"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 16, i1 false)
  %19 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %17, align 8
  %20 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %19, i64 2
  %21 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %20, align 8
  %22 = tail call dereferenceable(136) %"class.sql::Database"* %21(%"class.history::VisitDatabase"* %0) #16
  %23 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %22, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.9, i64 0, i64 0), i64 332, i8* getelementptr inbounds ([211 x i8], [211 x i8]* @.str.18, i64 0, i64 0)) #16
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %5, %"class.sql::Database::StatementRef"* %23) #16
  %24 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %5, i32 0, i64 %1) #16
  %25 = call i64 @_ZNK7history12QueryOptions18EffectiveBeginTimeEv(%"struct.history::QueryOptions"* %2) #16
  %26 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %5, i32 1, i64 %25) #16
  %27 = call i64 @_ZNK7history12QueryOptions16EffectiveEndTimeEv(%"struct.history::QueryOptions"* %2) #16
  %28 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %5, i32 2, i64 %27) #16
  %29 = call zeroext i1 @_ZN7history13VisitDatabase26FillVisitVectorWithOptionsERN3sql9StatementERKNS_12QueryOptionsEPNSt3__16vectorINS_8VisitRowENS7_9allocatorIS9_EEEE(%"class.sql::Statement"* nonnull dereferenceable(16) %5, %"struct.history::QueryOptions"* dereferenceable(32) %2, %"class.std::__1::vector.19"* %3)
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #16
  ret i1 %29
}

declare i64 @_ZNK7history12QueryOptions18EffectiveBeginTimeEv(%"struct.history::QueryOptions"*) local_unnamed_addr #5

declare i64 @_ZNK7history12QueryOptions16EffectiveEndTimeEv(%"struct.history::QueryOptions"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history13VisitDatabase17GetVisitsForTimesERKNSt3__16vectorIN4base4TimeENS1_9allocatorIS4_EEEEPNS2_INS_8VisitRowENS5_ISA_EEEE(%"class.history::VisitDatabase"*, %"class.std::__1::vector.37"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.19"*) local_unnamed_addr #4 align 2 {
  %4 = alloca %"class.sql::Statement", align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %2, i64 0, i32 0, i32 0
  %6 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %2, i64 0, i32 0, i32 1
  %8 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %7, align 8
  %9 = icmp eq %"class.history::VisitRow"* %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %3, %10
  %11 = phi %"class.history::VisitRow"* [ %12, %10 ], [ %8, %3 ]
  %12 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %11, i64 -1
  tail call void @_ZN7history8VisitRowD1Ev(%"class.history::VisitRow"* %12) #16
  %13 = icmp eq %"class.history::VisitRow"* %12, %6
  br i1 %13, label %14, label %10

14:                                               ; preds = %10, %3
  store %"class.history::VisitRow"* %6, %"class.history::VisitRow"** %7, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %1, i64 0, i32 0, i32 0
  %16 = load %"class.base::Time"*, %"class.base::Time"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %1, i64 0, i32 0, i32 1
  %18 = load %"class.base::Time"*, %"class.base::Time"** %17, align 8
  %19 = icmp eq %"class.base::Time"* %16, %18
  br i1 %19, label %38, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.sql::Statement"* %4 to i8*
  %22 = bitcast %"class.history::VisitDatabase"* %0 to %"class.sql::Database"* (%"class.history::VisitDatabase"*)***
  %23 = bitcast %"class.sql::Statement"* %4 to i8*
  br label %26

24:                                               ; preds = %26
  %25 = icmp eq %"class.base::Time"* %37, %18
  br i1 %25, label %38, label %26

26:                                               ; preds = %20, %24
  %27 = phi %"class.base::Time"* [ %16, %20 ], [ %37, %24 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false)
  %28 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %22, align 8
  %29 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %28, i64 2
  %30 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %29, align 8
  %31 = call dereferenceable(136) %"class.sql::Database"* %30(%"class.history::VisitDatabase"* %0) #16
  %32 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.9, i64 0, i64 0), i64 350, i8* getelementptr inbounds ([157 x i8], [157 x i8]* @.str.19, i64 0, i64 0)) #16
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %4, %"class.sql::Database::StatementRef"* %32) #16
  %33 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %27, i64 0, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %4, i32 0, i64 %34) #16
  %36 = call zeroext i1 @_ZN7history13VisitDatabase15FillVisitVectorERN3sql9StatementEPNSt3__16vectorINS_8VisitRowENS4_9allocatorIS6_EEEE(%"class.sql::Statement"* nonnull dereferenceable(16) %4, %"class.std::__1::vector.19"* %2)
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #16
  %37 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %27, i64 1
  br i1 %36, label %24, label %38

38:                                               ; preds = %26, %24, %14
  %39 = phi i1 [ true, %14 ], [ true, %24 ], [ false, %26 ]
  ret i1 %39
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history13VisitDatabase19GetAllVisitsInRangeEN4base4TimeES2_iPNSt3__16vectorINS_8VisitRowENS3_9allocatorIS5_EEEE(%"class.history::VisitDatabase"*, i64, i64, i32, %"class.std::__1::vector.19"*) local_unnamed_addr #4 align 2 {
  %6 = alloca %"class.sql::Statement", align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %4, i64 0, i32 0, i32 1
  %10 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %9, align 8
  %11 = icmp eq %"class.history::VisitRow"* %10, %8
  br i1 %11, label %16, label %12

12:                                               ; preds = %5, %12
  %13 = phi %"class.history::VisitRow"* [ %14, %12 ], [ %10, %5 ]
  %14 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %13, i64 -1
  tail call void @_ZN7history8VisitRowD1Ev(%"class.history::VisitRow"* %14) #16
  %15 = icmp eq %"class.history::VisitRow"* %14, %8
  br i1 %15, label %16, label %12

16:                                               ; preds = %12, %5
  store %"class.history::VisitRow"* %8, %"class.history::VisitRow"** %9, align 8
  %17 = bitcast %"class.sql::Statement"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #16
  %18 = bitcast %"class.history::VisitDatabase"* %0 to %"class.sql::Database"* (%"class.history::VisitDatabase"*)***
  %19 = bitcast %"class.sql::Statement"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 16, i1 false)
  %20 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %18, align 8
  %21 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %20, i64 2
  %22 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %21, align 8
  %23 = tail call dereferenceable(136) %"class.sql::Database"* %22(%"class.history::VisitDatabase"* %0) #16
  %24 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %23, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.9, i64 0, i64 0), i64 368, i8* getelementptr inbounds ([203 x i8], [203 x i8]* @.str.20, i64 0, i64 0)) #16
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %6, %"class.sql::Database::StatementRef"* %24) #16
  %25 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %6, i32 0, i64 %1) #16
  %26 = icmp eq i64 %2, 0
  %27 = select i1 %26, i64 9223372036854775807, i64 %2
  %28 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %6, i32 1, i64 %27) #16
  %29 = icmp eq i32 %3, 0
  %30 = sext i32 %3 to i64
  %31 = select i1 %29, i64 9223372036854775807, i64 %30
  %32 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %6, i32 2, i64 %31) #16
  %33 = call zeroext i1 @_ZN7history13VisitDatabase15FillVisitVectorERN3sql9StatementEPNSt3__16vectorINS_8VisitRowENS4_9allocatorIS6_EEEE(%"class.sql::Statement"* nonnull dereferenceable(16) %6, %"class.std::__1::vector.19"* %4)
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #16
  ret i1 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history13VisitDatabase29GetVisitsInRangeForTransitionEN4base4TimeES2_iN2ui14PageTransitionEPNSt3__16vectorINS_8VisitRowENS5_9allocatorIS7_EEEE(%"class.history::VisitDatabase"*, i64, i64, i32, i32, %"class.std::__1::vector.19"*) local_unnamed_addr #4 align 2 {
  %7 = alloca %"class.sql::Statement", align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %5, i64 0, i32 0, i32 0
  %9 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %5, i64 0, i32 0, i32 1
  %11 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %10, align 8
  %12 = icmp eq %"class.history::VisitRow"* %11, %9
  br i1 %12, label %17, label %13

13:                                               ; preds = %6, %13
  %14 = phi %"class.history::VisitRow"* [ %15, %13 ], [ %11, %6 ]
  %15 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %14, i64 -1
  tail call void @_ZN7history8VisitRowD1Ev(%"class.history::VisitRow"* %15) #16
  %16 = icmp eq %"class.history::VisitRow"* %15, %9
  br i1 %16, label %17, label %13

17:                                               ; preds = %13, %6
  store %"class.history::VisitRow"* %9, %"class.history::VisitRow"** %10, align 8
  %18 = bitcast %"class.sql::Statement"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #16
  %19 = bitcast %"class.history::VisitDatabase"* %0 to %"class.sql::Database"* (%"class.history::VisitDatabase"*)***
  %20 = bitcast %"class.sql::Statement"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %19, align 8
  %22 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %21, i64 2
  %23 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %22, align 8
  %24 = tail call dereferenceable(136) %"class.sql::Database"* %23(%"class.history::VisitDatabase"* %0) #16
  %25 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %24, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.9, i64 0, i64 0), i64 391, i8* getelementptr inbounds ([229 x i8], [229 x i8]* @.str.21, i64 0, i64 0)) #16
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %7, %"class.sql::Database::StatementRef"* %25) #16
  %26 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %7, i32 0, i64 %1) #16
  %27 = icmp eq i64 %2, 0
  %28 = select i1 %27, i64 9223372036854775807, i64 %2
  %29 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %7, i32 1, i64 %28) #16
  %30 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %7, i32 2, i64 255) #16
  %31 = zext i32 %4 to i64
  %32 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %7, i32 3, i64 %31) #16
  %33 = icmp eq i32 %3, 0
  %34 = sext i32 %3 to i64
  %35 = select i1 %33, i64 9223372036854775807, i64 %34
  %36 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %7, i32 4, i64 %35) #16
  %37 = call zeroext i1 @_ZN7history13VisitDatabase15FillVisitVectorERN3sql9StatementEPNSt3__16vectorINS_8VisitRowENS4_9allocatorIS6_EEEE(%"class.sql::Statement"* nonnull dereferenceable(16) %7, %"class.std::__1::vector.19"* %5)
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #16
  ret i1 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history13VisitDatabase25GetAllURLIDsForTransitionEN2ui14PageTransitionEPNSt3__16vectorIlNS3_9allocatorIlEEEE(%"class.history::VisitDatabase"*, i32, %"class.std::__1::vector.44"*) local_unnamed_addr #4 align 2 {
  %4 = alloca %"class.sql::Statement", align 8
  %5 = bitcast %"class.std::__1::vector.44"* %2 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %2, i64 0, i32 0, i32 1
  %8 = bitcast i64** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #16
  %10 = bitcast %"class.history::VisitDatabase"* %0 to %"class.sql::Database"* (%"class.history::VisitDatabase"*)***
  %11 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false)
  %12 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %10, align 8
  %13 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %12, i64 2
  %14 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %13, align 8
  %15 = tail call dereferenceable(136) %"class.sql::Database"* %14(%"class.history::VisitDatabase"* %0) #16
  %16 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetUniqueStatementEPKc(%"class.sql::Database"* %15, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.22, i64 0, i64 0)) #16
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %4, %"class.sql::Database::StatementRef"* %16) #16
  %17 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %4, i32 0, i64 255) #16
  %18 = zext i32 %1 to i64
  %19 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %4, i32 1, i64 %18) #16
  %20 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %4) #16
  br i1 %20, label %21, label %88

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %23 = bitcast i64** %22 to i64*
  %24 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %2, i64 0, i32 0, i32 0
  br label %25

25:                                               ; preds = %21, %86
  %26 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %4, i32 0) #16
  %27 = load i64*, i64** %7, align 8
  %28 = load i64*, i64** %22, align 8
  %29 = icmp ult i64* %27, %28
  %30 = ptrtoint i64* %28 to i64
  br i1 %29, label %31, label %34

31:                                               ; preds = %25
  store i64 %26, i64* %27, align 8
  %32 = getelementptr inbounds i64, i64* %27, i64 1
  %33 = ptrtoint i64* %32 to i64
  store i64 %33, i64* %8, align 8
  br label %86

34:                                               ; preds = %25
  %35 = ptrtoint i64* %27 to i64
  %36 = load i64, i64* %5, align 8
  %37 = sub i64 %35, %36
  %38 = ashr exact i64 %37, 3
  %39 = add nsw i64 %38, 1
  %40 = icmp ugt i64 %39, 2305843009213693951
  br i1 %40, label %41, label %43

41:                                               ; preds = %34
  %42 = bitcast %"class.std::__1::vector.44"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %42) #15
  unreachable

43:                                               ; preds = %34
  %44 = sub i64 %30, %36
  %45 = ashr exact i64 %44, 3
  %46 = icmp ult i64 %45, 1152921504606846975
  br i1 %46, label %47, label %55

47:                                               ; preds = %43
  %48 = ashr exact i64 %44, 2
  %49 = icmp ult i64 %48, %39
  %50 = select i1 %49, i64 %39, i64 %48
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %60, label %52

52:                                               ; preds = %47
  %53 = icmp ugt i64 %50, 2305843009213693951
  br i1 %53, label %54, label %55

54:                                               ; preds = %52
  call void @abort() #15
  unreachable

55:                                               ; preds = %52, %43
  %56 = phi i64 [ %50, %52 ], [ 2305843009213693951, %43 ]
  %57 = shl i64 %56, 3
  %58 = call i8* @_Znwm(i64 %57) #17
  %59 = bitcast i8* %58 to i64*
  br label %60

60:                                               ; preds = %55, %47
  %61 = phi i64 [ %56, %55 ], [ 0, %47 ]
  %62 = phi i64* [ %59, %55 ], [ null, %47 ]
  %63 = getelementptr inbounds i64, i64* %62, i64 %38
  %64 = getelementptr inbounds i64, i64* %62, i64 %61
  %65 = ptrtoint i64* %64 to i64
  store i64 %26, i64* %63, align 8
  %66 = getelementptr inbounds i64, i64* %63, i64 1
  %67 = ptrtoint i64* %66 to i64
  %68 = load i64*, i64** %24, align 8
  %69 = load i64, i64* %8, align 8
  %70 = ptrtoint i64* %68 to i64
  %71 = sub i64 %69, %70
  %72 = ashr exact i64 %71, 3
  %73 = sub nsw i64 0, %72
  %74 = getelementptr inbounds i64, i64* %63, i64 %73
  %75 = ptrtoint i64* %74 to i64
  %76 = icmp sgt i64 %71, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %60
  %78 = bitcast i64* %74 to i8*
  %79 = bitcast i64* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 %71, i1 false) #16
  %80 = load i64*, i64** %24, align 8
  br label %81

81:                                               ; preds = %77, %60
  %82 = phi i64* [ %68, %60 ], [ %80, %77 ]
  store i64 %75, i64* %5, align 8
  store i64 %67, i64* %8, align 8
  store i64 %65, i64* %23, align 8
  %83 = icmp eq i64* %82, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %81
  %85 = bitcast i64* %82 to i8*
  call void @_ZdlPv(i8* %85) #17
  br label %86

86:                                               ; preds = %31, %81, %84
  %87 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %4) #16
  br i1 %87, label %25, label %88

88:                                               ; preds = %86, %3
  %89 = call zeroext i1 @_ZNK3sql9Statement9SucceededEv(%"class.sql::Statement"* nonnull %4) #16
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #16
  ret i1 %89
}

declare %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetUniqueStatementEPKc(%"class.sql::Database"*, i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history13VisitDatabase23GetVisibleVisitsInRangeERKNS_12QueryOptionsEPNSt3__16vectorINS_8VisitRowENS4_9allocatorIS6_EEEE(%"class.history::VisitDatabase"*, %"struct.history::QueryOptions"* dereferenceable(32), %"class.std::__1::vector.19"*) local_unnamed_addr #4 align 2 {
  %4 = alloca %"class.sql::Statement", align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %2, i64 0, i32 0, i32 0
  %6 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %2, i64 0, i32 0, i32 1
  %8 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %7, align 8
  %9 = icmp eq %"class.history::VisitRow"* %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %3, %10
  %11 = phi %"class.history::VisitRow"* [ %12, %10 ], [ %8, %3 ]
  %12 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %11, i64 -1
  tail call void @_ZN7history8VisitRowD1Ev(%"class.history::VisitRow"* %12) #16
  %13 = icmp eq %"class.history::VisitRow"* %12, %6
  br i1 %13, label %14, label %10

14:                                               ; preds = %10, %3
  store %"class.history::VisitRow"* %6, %"class.history::VisitRow"** %7, align 8
  %15 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #16
  %16 = bitcast %"class.history::VisitDatabase"* %0 to %"class.sql::Database"* (%"class.history::VisitDatabase"*)***
  %17 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 16, i1 false)
  %18 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %16, align 8
  %19 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %18, i64 2
  %20 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %19, align 8
  %21 = tail call dereferenceable(136) %"class.sql::Database"* %20(%"class.history::VisitDatabase"* %0) #16
  %22 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %21, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.9, i64 0, i64 0), i64 430, i8* getelementptr inbounds ([210 x i8], [210 x i8]* @.str.23, i64 0, i64 0)) #16
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %4, %"class.sql::Database::StatementRef"* %22) #16
  %23 = call i64 @_ZNK7history12QueryOptions18EffectiveBeginTimeEv(%"struct.history::QueryOptions"* %1) #16
  %24 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %4, i32 0, i64 %23) #16
  %25 = call i64 @_ZNK7history12QueryOptions16EffectiveEndTimeEv(%"struct.history::QueryOptions"* %1) #16
  %26 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %4, i32 1, i64 %25) #16
  %27 = call zeroext i1 @_ZN7history13VisitDatabase26FillVisitVectorWithOptionsERN3sql9StatementERKNS_12QueryOptionsEPNSt3__16vectorINS_8VisitRowENS7_9allocatorIS9_EEEE(%"class.sql::Statement"* nonnull dereferenceable(16) %4, %"struct.history::QueryOptions"* dereferenceable(32) %1, %"class.std::__1::vector.19"* %2)
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #16
  ret i1 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN7history13VisitDatabase24GetMostRecentVisitForURLElPNS_8VisitRowE(%"class.history::VisitDatabase"*, i64, %"class.history::VisitRow"*) local_unnamed_addr #4 align 2 {
  %4 = alloca %"class.sql::Statement", align 8
  %5 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #16
  %6 = bitcast %"class.history::VisitDatabase"* %0 to %"class.sql::Database"* (%"class.history::VisitDatabase"*)***
  %7 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  %8 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %6, align 8
  %9 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %8, i64 2
  %10 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %9, align 8
  %11 = tail call dereferenceable(136) %"class.sql::Database"* %10(%"class.history::VisitDatabase"* %0) #16
  %12 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %11, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.9, i64 0, i64 0), i64 447, i8* getelementptr inbounds ([189 x i8], [189 x i8]* @.str.24, i64 0, i64 0)) #16
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %4, %"class.sql::Database::StatementRef"* %12) #16
  %13 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %4, i32 0, i64 %1) #16
  %14 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %4) #16
  br i1 %14, label %15, label %22

15:                                               ; preds = %3
  %16 = icmp eq %"class.history::VisitRow"* %2, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %15
  call void @_ZN7history13VisitDatabase12FillVisitRowERKN3sql9StatementEPNS_8VisitRowE(%"class.sql::Statement"* nonnull dereferenceable(16) %4, %"class.history::VisitRow"* nonnull %2)
  %18 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %2, i64 0, i32 0
  %19 = load i64, i64* %18, align 8
  br label %22

20:                                               ; preds = %15
  %21 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %4, i32 0) #16
  br label %22

22:                                               ; preds = %3, %20, %17
  %23 = phi i64 [ %19, %17 ], [ %21, %20 ], [ 0, %3 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #16
  ret i64 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history13VisitDatabase25GetMostRecentVisitsForURLEliPNSt3__16vectorINS_8VisitRowENS1_9allocatorIS3_EEEE(%"class.history::VisitDatabase"*, i64, i32, %"class.std::__1::vector.19"*) local_unnamed_addr #4 align 2 {
  %5 = alloca %"class.sql::Statement", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %3, i64 0, i32 0, i32 1
  %9 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %8, align 8
  %10 = icmp eq %"class.history::VisitRow"* %9, %7
  br i1 %10, label %15, label %11

11:                                               ; preds = %4, %11
  %12 = phi %"class.history::VisitRow"* [ %13, %11 ], [ %9, %4 ]
  %13 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %12, i64 -1
  tail call void @_ZN7history8VisitRowD1Ev(%"class.history::VisitRow"* %13) #16
  %14 = icmp eq %"class.history::VisitRow"* %13, %7
  br i1 %14, label %15, label %11

15:                                               ; preds = %11, %4
  store %"class.history::VisitRow"* %7, %"class.history::VisitRow"** %8, align 8
  %16 = bitcast %"class.sql::Statement"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #16
  %17 = bitcast %"class.history::VisitDatabase"* %0 to %"class.sql::Database"* (%"class.history::VisitDatabase"*)***
  %18 = bitcast %"class.sql::Statement"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 16, i1 false)
  %19 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %17, align 8
  %20 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %19, i64 2
  %21 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %20, align 8
  %22 = tail call dereferenceable(136) %"class.sql::Database"* %21(%"class.history::VisitDatabase"* %0) #16
  %23 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %22, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.9, i64 0, i64 0), i64 470, i8* getelementptr inbounds ([189 x i8], [189 x i8]* @.str.25, i64 0, i64 0)) #16
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %5, %"class.sql::Database::StatementRef"* %23) #16
  %24 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %5, i32 0, i64 %1) #16
  %25 = call zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"* nonnull %5, i32 1, i32 %2) #16
  %26 = call zeroext i1 @_ZN7history13VisitDatabase15FillVisitVectorERN3sql9StatementEPNSt3__16vectorINS_8VisitRowENS4_9allocatorIS6_EEEE(%"class.sql::Statement"* nonnull dereferenceable(16) %5, %"class.std::__1::vector.19"* %3)
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #16
  ret i1 %26
}

declare zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"*, i32, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history13VisitDatabase20GetRedirectFromVisitElPlP4GURL(%"class.history::VisitDatabase"*, i64, i64*, %class.GURL*) local_unnamed_addr #4 align 2 {
  %5 = alloca %"class.sql::Statement", align 8
  %6 = alloca %class.GURL, align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.sql::Statement"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #16
  %9 = bitcast %"class.history::VisitDatabase"* %0 to %"class.sql::Database"* (%"class.history::VisitDatabase"*)***
  %10 = bitcast %"class.sql::Statement"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  %11 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %9, align 8
  %12 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %11, i64 2
  %13 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %12, align 8
  %14 = tail call dereferenceable(136) %"class.sql::Database"* %13(%"class.history::VisitDatabase"* %0) #16
  %15 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %14, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.9, i64 0, i64 0), i64 484, i8* getelementptr inbounds ([111 x i8], [111 x i8]* @.str.26, i64 0, i64 0)) #16
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %5, %"class.sql::Database::StatementRef"* %15) #16
  %16 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %5, i32 0, i64 %1) #16
  %17 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %5, i32 1, i64 3221225472) #16
  %18 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %5) #16
  br i1 %18, label %19, label %45

19:                                               ; preds = %4
  %20 = icmp eq i64* %2, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %19
  %22 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %5, i32 0) #16
  store i64 %22, i64* %2, align 8
  br label %23

23:                                               ; preds = %19, %21
  %24 = icmp eq %class.GURL* %3, null
  br i1 %24, label %45, label %25

25:                                               ; preds = %23
  %26 = bitcast %class.GURL* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %26) #16
  %27 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #16
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %7, %"class.sql::Statement"* nonnull %5, i32 1) #16
  %28 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = select i1 %31, i8* %33, i8* %27
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = zext i8 %30 to i64
  %38 = select i1 %31, i64 %36, i64 %37
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %6, i8* %34, i64 %38) #16
  %39 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* nonnull %3, %class.GURL* nonnull dereferenceable(120) %6) #16
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %6) #16
  %40 = load i8, i8* %29, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %25
  %43 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %43) #17
  br label %44

44:                                               ; preds = %25, %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #16
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %26) #16
  br label %45

45:                                               ; preds = %44, %23, %4
  %46 = phi i1 [ false, %4 ], [ true, %23 ], [ true, %44 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #16
  ret i1 %46
}

declare void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* sret, %"class.sql::Statement"*, i32) local_unnamed_addr #5

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #5

; Function Attrs: nounwind
declare dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history13VisitDatabase18GetRedirectToVisitElPlP4GURL(%"class.history::VisitDatabase"*, i64, i64*, %class.GURL*) local_unnamed_addr #4 align 2 {
  %5 = alloca %"class.history::VisitRow", align 8
  %6 = alloca %"class.sql::Statement", align 8
  %7 = alloca %class.GURL, align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = bitcast %"class.history::VisitRow"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 64, i1 false)
  call void @_ZN7history8VisitRowC1Ev(%"class.history::VisitRow"* nonnull %5) #16
  %10 = call zeroext i1 @_ZN7history13VisitDatabase14GetRowForVisitElPNS_8VisitRowE(%"class.history::VisitDatabase"* %0, i64 %1, %"class.history::VisitRow"* nonnull %5)
  br i1 %10, label %11, label %53

11:                                               ; preds = %4
  %12 = icmp eq i64* %2, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %5, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %2, align 8
  br label %16

16:                                               ; preds = %11, %13
  %17 = icmp eq %class.GURL* %3, null
  br i1 %17, label %53, label %18

18:                                               ; preds = %16
  %19 = bitcast %"class.sql::Statement"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #16
  %20 = bitcast %"class.history::VisitDatabase"* %0 to %"class.sql::Database"* (%"class.history::VisitDatabase"*)***
  %21 = bitcast %"class.sql::Statement"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 16, i1 false)
  %22 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %20, align 8
  %23 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %22, i64 2
  %24 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %23, align 8
  %25 = call dereferenceable(136) %"class.sql::Database"* %24(%"class.history::VisitDatabase"* %0) #16
  %26 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %25, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.9, i64 0, i64 0), i64 513, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @.str.27, i64 0, i64 0)) #16
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %6, %"class.sql::Database::StatementRef"* %26) #16
  %27 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %5, i64 0, i32 3
  %28 = load i64, i64* %27, align 8
  %29 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %6, i32 0, i64 %28) #16
  %30 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %6, i32 1, i64 3489660928) #16
  %31 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %6) #16
  br i1 %31, label %32, label %52

32:                                               ; preds = %18
  %33 = bitcast %class.GURL* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %33) #16
  %34 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #16
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %8, %"class.sql::Statement"* nonnull %6, i32 0) #16
  %35 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = select i1 %38, i8* %40, i8* %34
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = zext i8 %37 to i64
  %45 = select i1 %38, i64 %43, i64 %44
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %7, i8* %41, i64 %45) #16
  %46 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* nonnull %3, %class.GURL* nonnull dereferenceable(120) %7) #16
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %7) #16
  %47 = load i8, i8* %36, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %32
  %50 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %50) #17
  br label %51

51:                                               ; preds = %32, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #16
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %33) #16
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #16
  br label %53

52:                                               ; preds = %18
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #16
  br label %53

53:                                               ; preds = %16, %51, %52, %4
  %54 = phi i1 [ false, %52 ], [ false, %4 ], [ true, %51 ], [ true, %16 ]
  call void @_ZN7history8VisitRowD1Ev(%"class.history::VisitRow"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #16
  ret i1 %54
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history13VisitDatabase26GetVisibleVisitCountToHostERK4GURLPiPN4base4TimeE(%"class.history::VisitDatabase"*, %class.GURL* dereferenceable(120), i32* nocapture, %"class.base::Time"* nocapture) local_unnamed_addr #4 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %class.GURL, align 8
  %7 = alloca %"class.sql::Statement", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kHttpSchemeE, i64 0, i64 0)) #16
  %11 = tail call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kHttpSchemeE, i64 0, i64 0), i64 %10) #16
  br i1 %11, label %15, label %12

12:                                               ; preds = %4
  %13 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0)) #16
  %14 = tail call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0), i64 %13) #16
  br i1 %14, label %15, label %122

15:                                               ; preds = %12, %4
  %16 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #16
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = bitcast %class.GURL* %6 to i8*
  %20 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %19) #16
  call void @_ZNK4GURL9GetOriginEv(%class.GURL* nonnull sret %6, %class.GURL* %1) #16
  %21 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* nonnull %6) #16
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %15
  %27 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* align 8 %27, i64 24, i1 false) #16
  br label %33

28:                                               ; preds = %15
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %5, i8* %30, i64 %32) #16
  br label %33

33:                                               ; preds = %26, %28
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %19) #16
  %34 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  %38 = load i64, i64* %18, align 8
  %39 = zext i8 %36 to i64
  %40 = select i1 %37, i64 %38, i64 %39
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %115, label %42

42:                                               ; preds = %33
  %43 = bitcast %"class.sql::Statement"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #16
  %44 = bitcast %"class.history::VisitDatabase"* %0 to %"class.sql::Database"* (%"class.history::VisitDatabase"*)***
  %45 = bitcast %"class.sql::Statement"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 16, i1 false)
  %46 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %44, align 8
  %47 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %46, i64 2
  %48 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %47, align 8
  %49 = call dereferenceable(136) %"class.sql::Database"* %48(%"class.history::VisitDatabase"* %0) #16
  %50 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %49, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.9, i64 0, i64 0), i64 549, i8* getelementptr inbounds ([110 x i8], [110 x i8]* @.str.28, i64 0, i64 0)) #16
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %7, %"class.sql::Database::StatementRef"* %50) #16
  %51 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %7, i32 0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #16
  %52 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #16
  %53 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #16
  %54 = load i8, i8* %35, align 1
  %55 = icmp slt i8 %54, 0
  %56 = load i64, i64* %18, align 8
  %57 = zext i8 %54 to i64
  %58 = select i1 %55, i64 %56, i64 %57
  %59 = add i64 %58, -1
  %60 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::allocator.13"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %9, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, i64 0, i64 %59, %"class.std::__1::allocator.13"* nonnull dereferenceable(1) %60) #16
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %9, i8 signext 48) #16, !noalias !6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %52, i8* nonnull align 8 %53, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 24, i1 false) #16, !noalias !6
  %61 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %7, i32 1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #16
  %62 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %42
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %68) #17
  br label %69

69:                                               ; preds = %42, %66
  %70 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %76) #17
  br label %77

77:                                               ; preds = %69, %74
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #16
  %78 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %7) #16
  br i1 %78, label %79, label %104

79:                                               ; preds = %77, %98
  %80 = phi i64 [ %102, %98 ], [ 9223372036854775807, %77 ]
  %81 = phi i32 [ %99, %98 ], [ 0, %77 ]
  br label %82

82:                                               ; preds = %79, %96
  %83 = call i32 @_ZNK3sql9Statement9ColumnIntEi(%"class.sql::Statement"* nonnull %7, i32 1) #16
  %84 = call i32 @_ZN2ui21PageTransitionFromIntEi(i32 %83) #16
  %85 = and i32 %83, 536870912
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %96, label %87

87:                                               ; preds = %82
  %88 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN7history24kHideFromApi3TransitionsE) #16
  %89 = select i1 %88, i32 2097152, i32 0
  %90 = and i32 %89, %83
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %96

92:                                               ; preds = %87
  %93 = call zeroext i1 @_ZN2ui25PageTransitionIsMainFrameENS_14PageTransitionE(i32 %84) #16
  br i1 %93, label %94, label %96

94:                                               ; preds = %92
  %95 = call zeroext i1 @_ZN2ui24PageTransitionCoreTypeIsENS_14PageTransitionES0_(i32 %84, i32 10) #16
  br i1 %95, label %96, label %98

96:                                               ; preds = %92, %87, %82, %94
  %97 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %7) #16
  br i1 %97, label %82, label %104

98:                                               ; preds = %94
  %99 = add nuw nsw i32 %81, 1
  %100 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %7, i32 0) #16
  %101 = icmp slt i64 %80, %100
  %102 = select i1 %101, i64 %80, i64 %100
  %103 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %7) #16
  br i1 %103, label %79, label %104

104:                                              ; preds = %98, %96, %77
  %105 = phi i64 [ 9223372036854775807, %77 ], [ %80, %96 ], [ %102, %98 ]
  %106 = phi i32 [ 0, %77 ], [ %81, %96 ], [ %99, %98 ]
  %107 = call zeroext i1 @_ZNK3sql9Statement9SucceededEv(%"class.sql::Statement"* nonnull %7) #16
  br i1 %107, label %108, label %112

108:                                              ; preds = %104
  store i32 %106, i32* %2, align 4
  %109 = icmp sgt i32 %106, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %108
  %111 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %3, i64 0, i32 0, i32 0
  store i64 %105, i64* %111, align 8
  br label %112

112:                                              ; preds = %108, %110, %104
  %113 = phi i1 [ false, %104 ], [ true, %110 ], [ true, %108 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #16
  %114 = load i8, i8* %35, align 1
  br label %115

115:                                              ; preds = %33, %112
  %116 = phi i8 [ %114, %112 ], [ %36, %33 ]
  %117 = phi i1 [ %113, %112 ], [ false, %33 ]
  %118 = icmp slt i8 %116, 0
  br i1 %118, label %119, label %121

119:                                              ; preds = %115
  %120 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %120) #17
  br label %121

121:                                              ; preds = %115, %119
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #16
  br label %122

122:                                              ; preds = %12, %121
  %123 = phi i1 [ %117, %121 ], [ false, %12 ]
  ret i1 %123
}

declare zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) local_unnamed_addr #5

declare void @_ZNK4GURL9GetOriginEv(%class.GURL* sret, %class.GURL*) local_unnamed_addr #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL*) local_unnamed_addr #5

declare zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history13VisitDatabase15GetHistoryCountERKN4base4TimeES4_Pi(%"class.history::VisitDatabase"*, %"class.base::Time"* nocapture readonly dereferenceable(8), %"class.base::Time"* nocapture readonly dereferenceable(8), i32* nocapture) local_unnamed_addr #4 align 2 {
  %5 = alloca %"class.sql::Statement", align 8
  %6 = alloca %"class.std::__1::set.57", align 8
  %7 = alloca %"class.base::Time", align 8
  %8 = alloca %"class.base::Time", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = bitcast %"class.sql::Statement"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #16
  %11 = bitcast %"class.history::VisitDatabase"* %0 to %"class.sql::Database"* (%"class.history::VisitDatabase"*)***
  %12 = bitcast %"class.sql::Statement"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %11, align 8
  %14 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %13, i64 2
  %15 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %14, align 8
  %16 = tail call dereferenceable(136) %"class.sql::Database"* %15(%"class.history::VisitDatabase"* %0) #16
  %17 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %16, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.9, i64 0, i64 0), i64 582, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.29, i64 0, i64 0)) #16
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %5, %"class.sql::Database::StatementRef"* %17) #16
  %18 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %1, i64 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %5, i32 0, i64 %19) #16
  %21 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %2, i64 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %5, i32 1, i64 %22) #16
  %24 = bitcast %"class.std::__1::set.57"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #16
  %25 = getelementptr inbounds %"class.std::__1::set.57", %"class.std::__1::set.57"* %6, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::set.57", %"class.std::__1::set.57"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::set.57", %"class.std::__1::set.57"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %28 = getelementptr inbounds %"class.std::__1::set.57", %"class.std::__1::set.57"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %29 = bitcast %"class.std::__1::__tree_node_base"** %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #16
  store %"class.std::__1::__tree_end_node"* %28, %"class.std::__1::__tree_end_node"** %25, align 8
  %30 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %5) #16
  br i1 %30, label %31, label %66

31:                                               ; preds = %4
  %32 = bitcast %"class.base::Time"* %7 to i8*
  %33 = bitcast %"class.base::Time"* %8 to i8*
  %34 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %8, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %7, i64 0, i32 0, i32 0
  %36 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %37 = getelementptr inbounds %"class.std::__1::set.57", %"class.std::__1::set.57"* %6, i64 0, i32 0
  %38 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %41

41:                                               ; preds = %31, %64
  %42 = call i32 @_ZNK3sql9Statement9ColumnIntEi(%"class.sql::Statement"* nonnull %5, i32 2) #16
  %43 = call i32 @_ZN2ui21PageTransitionFromIntEi(i32 %42) #16
  %44 = and i32 %42, 536870912
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %64, label %46

46:                                               ; preds = %41
  %47 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN7history24kHideFromApi3TransitionsE) #16
  %48 = select i1 %47, i32 2097152, i32 0
  %49 = and i32 %48, %42
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %64

51:                                               ; preds = %46
  %52 = call zeroext i1 @_ZN2ui25PageTransitionIsMainFrameENS_14PageTransitionE(i32 %43) #16
  br i1 %52, label %53, label %64

53:                                               ; preds = %51
  %54 = call zeroext i1 @_ZN2ui24PageTransitionCoreTypeIsENS_14PageTransitionES0_(i32 %43, i32 10) #16
  br i1 %54, label %64, label %55

55:                                               ; preds = %53
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #16
  %56 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %5, i32 1) #16
  store i64 %56, i64* %34, align 8
  %57 = call i64 @_ZNK4base4Time8MidnightEb(%"class.base::Time"* nonnull %8, i1 zeroext true) #16
  store i64 %57, i64* %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #16
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %9, %"class.sql::Statement"* nonnull %5, i32 0) #16
  %58 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_4pairIN4base4TimeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_4lessISA_EENS7_ISA_EEE21__emplace_unique_implIJS3_S9_EEENS1_INS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEEDpOT_(%"class.std::__1::__tree.58"* nonnull %37, %"class.base::Time"* nonnull dereferenceable(8) %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9) #16
  %59 = load i8, i8* %39, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %55
  %62 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %62) #17
  br label %63

63:                                               ; preds = %55, %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #16
  br label %64

64:                                               ; preds = %51, %46, %41, %63, %53
  %65 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %5) #16
  br i1 %65, label %41, label %66

66:                                               ; preds = %64, %4
  %67 = load i64, i64* %27, align 8
  %68 = trunc i64 %67 to i32
  store i32 %68, i32* %3, align 4
  %69 = getelementptr inbounds %"class.std::__1::set.57", %"class.std::__1::set.57"* %6, i64 0, i32 0
  %70 = bitcast %"class.std::__1::__tree_end_node"* %28 to %"class.std::__1::__tree_node.103"**
  %71 = load %"class.std::__1::__tree_node.103"*, %"class.std::__1::__tree_node.103"** %70, align 8
  call void @_ZNSt3__16__treeINS_4pairIN4base4TimeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_4lessISA_EENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.58"* nonnull %69, %"class.std::__1::__tree_node.103"* %71) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #16
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #16
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history13VisitDatabase18GetLastVisitToHostERK4GURLN4base4TimeES5_PS5_(%"class.history::VisitDatabase"*, %class.GURL* dereferenceable(120), i64, i64, %"class.base::Time"* nocapture) local_unnamed_addr #4 align 2 {
  %6 = alloca %"struct.std::__1::pair.70", align 8
  %7 = alloca %"class.sql::Statement", align 8
  %8 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 1
  %9 = load i8, i8* %8, align 8, !range !5
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call zeroext i1 @_ZNK4GURL19SchemeIsHTTPOrHTTPSEv(%class.GURL* %1) #16
  br i1 %12, label %13, label %55

13:                                               ; preds = %11
  %14 = bitcast %"struct.std::__1::pair.70"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #16
  %15 = getelementptr inbounds %"struct.std::__1::pair.70", %"struct.std::__1::pair.70"* %6, i64 0, i32 0
  %16 = getelementptr inbounds %"struct.std::__1::pair.70", %"struct.std::__1::pair.70"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::__1::pair.70", %"struct.std::__1::pair.70"* %6, i64 0, i32 1
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = bitcast %"struct.std::__1::pair.70"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 48, i1 false)
  call fastcc void @_ZN7history12_GLOBAL__N_119GetHostSearchBoundsERK4GURL(%"struct.std::__1::pair.70"* nonnull sret %6, %class.GURL* dereferenceable(120) %1)
  %20 = bitcast %"class.sql::Statement"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #16
  %21 = bitcast %"class.history::VisitDatabase"* %0 to %"class.sql::Database"* (%"class.history::VisitDatabase"*)***
  %22 = bitcast %"class.sql::Statement"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false)
  %23 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %21, align 8
  %24 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %23, i64 2
  %25 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %24, align 8
  %26 = call dereferenceable(136) %"class.sql::Database"* %25(%"class.history::VisitDatabase"* %0) #16
  %27 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %26, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.9, i64 0, i64 0), i64 616, i8* getelementptr inbounds ([187 x i8], [187 x i8]* @.str.30, i64 0, i64 0)) #16
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %7, %"class.sql::Database::StatementRef"* %27) #16
  %28 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %7, i32 0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %15) #16
  %29 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %7, i32 1, %"class.std::__1::basic_string"* dereferenceable(24) %17) #16
  %30 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %7, i32 2, i64 %2) #16
  %31 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %7, i32 3, i64 %3) #16
  %32 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %7) #16
  br i1 %32, label %36, label %33

33:                                               ; preds = %13
  %34 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %4, i64 0, i32 0, i32 0
  store i64 0, i64* %34, align 8
  %35 = call zeroext i1 @_ZNK3sql9Statement9SucceededEv(%"class.sql::Statement"* nonnull %7) #16
  br label %39

36:                                               ; preds = %13
  %37 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %7, i32 0) #16
  %38 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %4, i64 0, i32 0, i32 0
  store i64 %37, i64* %38, align 8
  br label %39

39:                                               ; preds = %36, %33
  %40 = phi i1 [ true, %36 ], [ %35, %33 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #16
  %41 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %39
  %46 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %46) #17
  br label %47

47:                                               ; preds = %45, %39
  %48 = bitcast %"struct.std::__1::pair.70"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %47
  %53 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %53) #17
  br label %54

54:                                               ; preds = %47, %52
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #16
  br label %55

55:                                               ; preds = %5, %11, %54
  %56 = phi i1 [ %40, %54 ], [ false, %11 ], [ false, %5 ]
  ret i1 %56
}

declare zeroext i1 @_ZNK4GURL19SchemeIsHTTPOrHTTPSEv(%class.GURL*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN7history12_GLOBAL__N_119GetHostSearchBoundsERK4GURL(%"struct.std::__1::pair.70"* noalias sret, %class.GURL* dereferenceable(120)) unnamed_addr #4 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %class.GURL, align 8
  %5 = alloca %"class.std::__1::basic_string", align 16
  %6 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %class.GURL* %4 to i8*
  %10 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %9) #16
  call void @_ZNK4GURL9GetOriginEv(%class.GURL* nonnull sret %4, %class.GURL* %1) #16
  %11 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* nonnull %4) #16
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %2
  %17 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 %17, i64 24, i1 false) #16
  br label %23

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %3, i8* %20, i64 %22) #16
  br label %23

23:                                               ; preds = %16, %18
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %9) #16
  %24 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #16
  %25 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = load i64, i64* %8, align 8
  %30 = zext i8 %27 to i64
  %31 = select i1 %28, i64 %29, i64 %30
  %32 = add i64 %31, -1
  %33 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::allocator.13"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, i64 0, i64 %32, %"class.std::__1::allocator.13"* nonnull dereferenceable(1) %33) #16
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %5, i8 signext 48) #16, !noalias !9
  %34 = bitcast %"class.std::__1::basic_string"* %5 to <2 x i64>*
  %35 = load <2 x i64>, <2 x i64>* %34, align 16
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = load i64, i64* %36, align 16
  %38 = load i8, i8* %26, align 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #16
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %23
  %41 = bitcast %"struct.std::__1::pair.70"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* nonnull align 8 %6, i64 24, i1 false) #16
  br label %47

42:                                               ; preds = %23
  %43 = getelementptr inbounds %"struct.std::__1::pair.70", %"struct.std::__1::pair.70"* %0, i64 0, i32 0
  %44 = load i8*, i8** %7, align 8
  %45 = load i64, i64* %8, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %43, i8* %44, i64 %45) #16
  %46 = load i8, i8* %26, align 1
  br label %47

47:                                               ; preds = %42, %40
  %48 = phi i8 [ %46, %42 ], [ %38, %40 ]
  %49 = getelementptr inbounds %"struct.std::__1::pair.70", %"struct.std::__1::pair.70"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = bitcast i8** %49 to <2 x i64>*
  store <2 x i64> %35, <2 x i64>* %50, align 8
  %51 = getelementptr inbounds %"struct.std::__1::pair.70", %"struct.std::__1::pair.70"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %37, i64* %51, align 8
  %52 = icmp slt i8 %48, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %47
  %54 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %54) #17
  br label %55

55:                                               ; preds = %47, %53
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history13VisitDatabase17GetLastVisitToURLERK4GURLN4base4TimeEPS5_(%"class.history::VisitDatabase"*, %class.GURL* dereferenceable(120), i64, %"class.base::Time"* nocapture) local_unnamed_addr #4 align 2 {
  %5 = alloca %"class.sql::Statement", align 8
  %6 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !5
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %32, label %9

9:                                                ; preds = %4
  %10 = tail call zeroext i1 @_ZNK4GURL19SchemeIsHTTPOrHTTPSEv(%class.GURL* %1) #16
  br i1 %10, label %11, label %32

11:                                               ; preds = %9
  %12 = bitcast %"class.sql::Statement"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #16
  %13 = bitcast %"class.history::VisitDatabase"* %0 to %"class.sql::Database"* (%"class.history::VisitDatabase"*)***
  %14 = bitcast %"class.sql::Statement"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false)
  %15 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %13, align 8
  %16 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %15, i64 2
  %17 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %16, align 8
  %18 = tail call dereferenceable(136) %"class.sql::Database"* %17(%"class.history::VisitDatabase"* %0) #16
  %19 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %18, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.9, i64 0, i64 0), i64 651, i8* getelementptr inbounds ([146 x i8], [146 x i8]* @.str.31, i64 0, i64 0)) #16
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %5, %"class.sql::Database::StatementRef"* %19) #16
  %20 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* %1) #16
  %21 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %5, i32 0, %"class.std::__1::basic_string"* dereferenceable(24) %20) #16
  %22 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %5, i32 1, i64 %2) #16
  %23 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %5) #16
  br i1 %23, label %27, label %24

24:                                               ; preds = %11
  %25 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %3, i64 0, i32 0, i32 0
  store i64 0, i64* %25, align 8
  %26 = call zeroext i1 @_ZNK3sql9Statement9SucceededEv(%"class.sql::Statement"* nonnull %5) #16
  br label %30

27:                                               ; preds = %11
  %28 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %5, i32 0) #16
  %29 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %3, i64 0, i32 0, i32 0
  store i64 %28, i64* %29, align 8
  br label %30

30:                                               ; preds = %27, %24
  %31 = phi i1 [ true, %27 ], [ %26, %24 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #16
  br label %32

32:                                               ; preds = %4, %9, %30
  %33 = phi i1 [ %31, %30 ], [ false, %9 ], [ false, %4 ]
  ret i1 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN7history13VisitDatabase20GetDailyVisitsToHostERK4GURLN4base4TimeES5_(%"class.history::VisitDatabase"*, %class.GURL* dereferenceable(120), i64, i64) local_unnamed_addr #4 align 2 {
  %5 = alloca %"struct.std::__1::__less", align 1
  %6 = alloca %"struct.std::__1::pair.70", align 8
  %7 = alloca %"class.sql::Statement", align 8
  %8 = alloca %"class.std::__1::vector.37", align 8
  %9 = alloca %"class.base::Time", align 8
  %10 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 1
  %11 = load i8, i8* %10, align 8, !range !5
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %237, label %13

13:                                               ; preds = %4
  %14 = tail call zeroext i1 @_ZNK4GURL19SchemeIsHTTPOrHTTPSEv(%class.GURL* %1) #16
  br i1 %14, label %15, label %237

15:                                               ; preds = %13
  %16 = bitcast %"struct.std::__1::pair.70"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %16) #16
  %17 = getelementptr inbounds %"struct.std::__1::pair.70", %"struct.std::__1::pair.70"* %6, i64 0, i32 0
  %18 = getelementptr inbounds %"struct.std::__1::pair.70", %"struct.std::__1::pair.70"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::__1::pair.70", %"struct.std::__1::pair.70"* %6, i64 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"struct.std::__1::pair.70"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 48, i1 false)
  call fastcc void @_ZN7history12_GLOBAL__N_119GetHostSearchBoundsERK4GURL(%"struct.std::__1::pair.70"* nonnull sret %6, %class.GURL* dereferenceable(120) %1)
  %22 = bitcast %"class.sql::Statement"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #16
  %23 = bitcast %"class.history::VisitDatabase"* %0 to %"class.sql::Database"* (%"class.history::VisitDatabase"*)***
  %24 = bitcast %"class.sql::Statement"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 16, i1 false)
  %25 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %23, align 8
  %26 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %25, i64 2
  %27 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %26, align 8
  %28 = call dereferenceable(136) %"class.sql::Database"* %27(%"class.history::VisitDatabase"* %0) #16
  %29 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %28, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.9, i64 0, i64 0), i64 686, i8* getelementptr inbounds ([141 x i8], [141 x i8]* @.str.32, i64 0, i64 0)) #16
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %7, %"class.sql::Database::StatementRef"* %29) #16
  %30 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %7, i32 0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %17) #16
  %31 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %7, i32 1, %"class.std::__1::basic_string"* dereferenceable(24) %19) #16
  %32 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %7, i32 2, i64 %2) #16
  %33 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %7, i32 3, i64 %3) #16
  %34 = bitcast %"class.std::__1::vector.37"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #16
  %35 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %8, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %8, i64 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 24, i1 false) #16
  %38 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %7) #16
  br i1 %38, label %39, label %121

39:                                               ; preds = %15
  %40 = bitcast %"class.base::Time"* %9 to i8*
  %41 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %9, i64 0, i32 0, i32 0
  %42 = bitcast %"class.base::Time"** %36 to i64*
  %43 = bitcast %"class.std::__1::vector.37"* %8 to i64*
  %44 = bitcast %"class.base::Time"** %37 to i64*
  br label %45

45:                                               ; preds = %39, %119
  %46 = phi i32 [ 0, %39 ], [ %64, %119 ]
  br label %47

47:                                               ; preds = %45, %61
  %48 = call i32 @_ZNK3sql9Statement9ColumnIntEi(%"class.sql::Statement"* nonnull %7, i32 1) #16
  %49 = call i32 @_ZN2ui21PageTransitionFromIntEi(i32 %48) #16
  %50 = and i32 %48, 536870912
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %61, label %52

52:                                               ; preds = %47
  %53 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN7history24kHideFromApi3TransitionsE) #16
  %54 = select i1 %53, i32 2097152, i32 0
  %55 = and i32 %54, %48
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %61

57:                                               ; preds = %52
  %58 = call zeroext i1 @_ZN2ui25PageTransitionIsMainFrameENS_14PageTransitionE(i32 %49) #16
  br i1 %58, label %59, label %61

59:                                               ; preds = %57
  %60 = call zeroext i1 @_ZN2ui24PageTransitionCoreTypeIsENS_14PageTransitionES0_(i32 %49, i32 10) #16
  br i1 %60, label %61, label %63

61:                                               ; preds = %57, %52, %47, %59
  %62 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %7) #16
  br i1 %62, label %47, label %121

63:                                               ; preds = %59
  %64 = add nuw nsw i32 %46, 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #16
  %65 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %7, i32 0) #16
  store i64 %65, i64* %41, align 8
  %66 = call i64 @_ZNK4base4Time8MidnightEb(%"class.base::Time"* nonnull %9, i1 zeroext true) #16
  %67 = load %"class.base::Time"*, %"class.base::Time"** %36, align 8
  %68 = load %"class.base::Time"*, %"class.base::Time"** %37, align 8
  %69 = icmp ult %"class.base::Time"* %67, %68
  %70 = ptrtoint %"class.base::Time"* %68 to i64
  br i1 %69, label %71, label %75

71:                                               ; preds = %63
  %72 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %67, i64 0, i32 0, i32 0
  store i64 %66, i64* %72, align 8
  %73 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %67, i64 1
  %74 = ptrtoint %"class.base::Time"* %73 to i64
  store i64 %74, i64* %42, align 8
  br label %119

75:                                               ; preds = %63
  %76 = ptrtoint %"class.base::Time"* %67 to i64
  %77 = load i64, i64* %43, align 8
  %78 = sub i64 %76, %77
  %79 = ashr exact i64 %78, 3
  %80 = add nsw i64 %79, 1
  %81 = icmp ugt i64 %80, 2305843009213693951
  br i1 %81, label %82, label %84

82:                                               ; preds = %75
  %83 = bitcast %"class.std::__1::vector.37"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %83) #15
  unreachable

84:                                               ; preds = %75
  %85 = sub i64 %70, %77
  %86 = ashr exact i64 %85, 3
  %87 = icmp ult i64 %86, 1152921504606846975
  br i1 %87, label %88, label %96

88:                                               ; preds = %84
  %89 = ashr exact i64 %85, 2
  %90 = icmp ult i64 %89, %80
  %91 = select i1 %90, i64 %80, i64 %89
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %101, label %93

93:                                               ; preds = %88
  %94 = icmp ugt i64 %91, 2305843009213693951
  br i1 %94, label %95, label %96

95:                                               ; preds = %93
  call void @abort() #15
  unreachable

96:                                               ; preds = %93, %84
  %97 = phi i64 [ %91, %93 ], [ 2305843009213693951, %84 ]
  %98 = shl i64 %97, 3
  %99 = call i8* @_Znwm(i64 %98) #17
  %100 = bitcast i8* %99 to %"class.base::Time"*
  br label %101

101:                                              ; preds = %96, %88
  %102 = phi i64 [ %97, %96 ], [ 0, %88 ]
  %103 = phi i8* [ %99, %96 ], [ null, %88 ]
  %104 = phi %"class.base::Time"* [ %100, %96 ], [ null, %88 ]
  %105 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %104, i64 %79
  %106 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %104, i64 %102
  %107 = ptrtoint %"class.base::Time"* %106 to i64
  %108 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %105, i64 0, i32 0, i32 0
  store i64 %66, i64* %108, align 8
  %109 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %105, i64 1
  %110 = ptrtoint %"class.base::Time"* %109 to i64
  %111 = ptrtoint %"class.base::Time"* %104 to i64
  %112 = icmp sgt i64 %78, 0
  br i1 %112, label %113, label %115

113:                                              ; preds = %101
  %114 = inttoptr i64 %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* align 8 %114, i64 %78, i1 false) #16
  br label %115

115:                                              ; preds = %113, %101
  store i64 %111, i64* %43, align 8
  store i64 %110, i64* %42, align 8
  store i64 %107, i64* %44, align 8
  %116 = icmp eq i64 %77, 0
  br i1 %116, label %119, label %117

117:                                              ; preds = %115
  %118 = inttoptr i64 %77 to i8*
  call void @_ZdlPv(i8* %118) #17
  br label %119

119:                                              ; preds = %71, %115, %117
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #16
  %120 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %7) #16
  br i1 %120, label %45, label %121

121:                                              ; preds = %119, %61, %15
  %122 = phi i32 [ 0, %15 ], [ %46, %61 ], [ %64, %119 ]
  %123 = load %"class.base::Time"*, %"class.base::Time"** %35, align 8
  %124 = load %"class.base::Time"*, %"class.base::Time"** %36, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__less", %"struct.std::__1::__less"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %125) #16
  call void @_ZNSt3__16__sortIRNS_6__lessIN4base4TimeES3_EEPS3_EEvT0_S7_T_(%"class.base::Time"* %123, %"class.base::Time"* %124, %"struct.std::__1::__less"* nonnull dereferenceable(1) %5) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %125) #16
  %126 = load %"class.base::Time"*, %"class.base::Time"** %35, align 8
  %127 = load %"class.base::Time"*, %"class.base::Time"** %36, align 8
  %128 = icmp eq %"class.base::Time"* %126, %127
  br i1 %128, label %141, label %129

129:                                              ; preds = %121, %135
  %130 = phi %"class.base::Time"* [ %131, %135 ], [ %126, %121 ]
  %131 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %130, i64 1
  %132 = icmp eq %"class.base::Time"* %131, %127
  br i1 %132, label %133, label %135

133:                                              ; preds = %129
  %134 = ptrtoint %"class.base::Time"* %127 to i64
  br label %212

135:                                              ; preds = %129
  %136 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %131, i64 0, i32 0, i32 0
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %130, i64 0, i32 0, i32 0
  %139 = load i64, i64* %138, align 8
  %140 = icmp eq i64 %139, %137
  br i1 %140, label %141, label %129

141:                                              ; preds = %135, %121
  %142 = phi %"class.base::Time"* [ %126, %121 ], [ %130, %135 ]
  %143 = ptrtoint %"class.base::Time"* %142 to i64
  %144 = icmp eq %"class.base::Time"* %142, %127
  br i1 %144, label %212, label %145

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %142, i64 2
  %147 = icmp eq %"class.base::Time"* %146, %127
  br i1 %147, label %208, label %148

148:                                              ; preds = %145
  %149 = getelementptr %"class.base::Time", %"class.base::Time"* %127, i64 -3, i32 0, i32 0
  %150 = ptrtoint i64* %149 to i64
  %151 = sub i64 %150, %143
  %152 = lshr i64 %151, 3
  %153 = add nuw nsw i64 %152, 1
  %154 = and i64 %153, 3
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %178, label %156

156:                                              ; preds = %148, %170
  %157 = phi %"class.base::Time"* [ %173, %170 ], [ %142, %148 ]
  %158 = phi %"class.base::Time"* [ %172, %170 ], [ %146, %148 ]
  %159 = phi i64 [ %171, %170 ], [ %143, %148 ]
  %160 = phi i64 [ %174, %170 ], [ %154, %148 ]
  %161 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %158, i64 0, i32 0, i32 0
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %157, i64 0, i32 0, i32 0
  %164 = load i64, i64* %163, align 8
  %165 = icmp eq i64 %164, %162
  br i1 %165, label %170, label %166

166:                                              ; preds = %156
  %167 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %157, i64 1
  %168 = ptrtoint %"class.base::Time"* %167 to i64
  %169 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %167, i64 0, i32 0, i32 0
  store i64 %162, i64* %169, align 8
  br label %170

170:                                              ; preds = %166, %156
  %171 = phi i64 [ %159, %156 ], [ %168, %166 ]
  %172 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %158, i64 1
  %173 = inttoptr i64 %171 to %"class.base::Time"*
  %174 = add i64 %160, -1
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %176, label %156, !llvm.loop !12

176:                                              ; preds = %170
  %177 = inttoptr i64 %171 to %"class.base::Time"*
  br label %178

178:                                              ; preds = %148, %176
  %179 = phi i64 [ undef, %148 ], [ %171, %176 ]
  %180 = phi %"class.base::Time"* [ %142, %148 ], [ %177, %176 ]
  %181 = phi %"class.base::Time"* [ %146, %148 ], [ %172, %176 ]
  %182 = phi i64 [ %143, %148 ], [ %171, %176 ]
  %183 = icmp ult i64 %151, 24
  br i1 %183, label %205, label %184

184:                                              ; preds = %178, %272
  %185 = phi %"class.base::Time"* [ %276, %272 ], [ %180, %178 ]
  %186 = phi %"class.base::Time"* [ %274, %272 ], [ %181, %178 ]
  %187 = phi i64 [ %273, %272 ], [ %182, %178 ]
  %188 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %186, i64 0, i32 0, i32 0
  %189 = load i64, i64* %188, align 8
  %190 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %185, i64 0, i32 0, i32 0
  %191 = load i64, i64* %190, align 8
  %192 = icmp eq i64 %191, %189
  br i1 %192, label %197, label %193

193:                                              ; preds = %184
  %194 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %185, i64 1
  %195 = ptrtoint %"class.base::Time"* %194 to i64
  %196 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %194, i64 0, i32 0, i32 0
  store i64 %189, i64* %196, align 8
  br label %197

197:                                              ; preds = %193, %184
  %198 = phi i64 [ %187, %184 ], [ %195, %193 ]
  %199 = inttoptr i64 %198 to %"class.base::Time"*
  %200 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %186, i64 1, i32 0, i32 0
  %201 = load i64, i64* %200, align 8
  %202 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %199, i64 0, i32 0, i32 0
  %203 = load i64, i64* %202, align 8
  %204 = icmp eq i64 %203, %201
  br i1 %204, label %248, label %244

205:                                              ; preds = %272, %178
  %206 = phi i64 [ %179, %178 ], [ %273, %272 ]
  %207 = inttoptr i64 %206 to %"class.base::Time"*
  br label %208

208:                                              ; preds = %205, %145
  %209 = phi %"class.base::Time"* [ %142, %145 ], [ %207, %205 ]
  %210 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %209, i64 1
  %211 = ptrtoint %"class.base::Time"* %210 to i64
  br label %212

212:                                              ; preds = %133, %141, %208
  %213 = phi i64 [ %211, %208 ], [ %143, %141 ], [ %134, %133 ]
  %214 = ptrtoint %"class.base::Time"* %126 to i64
  %215 = sub i64 %213, %214
  %216 = icmp eq %"class.base::Time"* %126, null
  br i1 %216, label %220, label %217

217:                                              ; preds = %212
  %218 = bitcast %"class.base::Time"** %36 to i64*
  store i64 %214, i64* %218, align 8
  %219 = bitcast %"class.base::Time"* %126 to i8*
  call void @_ZdlPv(i8* %219) #17
  br label %220

220:                                              ; preds = %212, %217
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #16
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #16
  %221 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %222 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %221, i64 0, i32 1, i32 0
  %223 = load i8, i8* %222, align 1
  %224 = icmp slt i8 %223, 0
  br i1 %224, label %225, label %227

225:                                              ; preds = %220
  %226 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %226) #17
  br label %227

227:                                              ; preds = %225, %220
  %228 = bitcast %"struct.std::__1::pair.70"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %229 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %228, i64 0, i32 1, i32 0
  %230 = load i8, i8* %229, align 1
  %231 = icmp slt i8 %230, 0
  br i1 %231, label %232, label %234

232:                                              ; preds = %227
  %233 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %233) #17
  br label %234

234:                                              ; preds = %227, %232
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %16) #16
  %235 = shl i64 %215, 29
  %236 = or i64 %235, 2863311360
  br label %237

237:                                              ; preds = %4, %13, %234
  %238 = phi i32 [ %122, %234 ], [ 0, %13 ], [ 0, %4 ]
  %239 = phi i64 [ 1, %234 ], [ 0, %13 ], [ 0, %4 ]
  %240 = phi i64 [ %236, %234 ], [ 2863311360, %13 ], [ 2863311360, %4 ]
  %241 = or i64 %240, %239
  %242 = insertvalue { i64, i32 } undef, i64 %241, 0
  %243 = insertvalue { i64, i32 } %242, i32 %238, 1
  ret { i64, i32 } %243

244:                                              ; preds = %197
  %245 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %199, i64 1
  %246 = ptrtoint %"class.base::Time"* %245 to i64
  %247 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %245, i64 0, i32 0, i32 0
  store i64 %201, i64* %247, align 8
  br label %248

248:                                              ; preds = %244, %197
  %249 = phi i64 [ %198, %197 ], [ %246, %244 ]
  %250 = inttoptr i64 %249 to %"class.base::Time"*
  %251 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %186, i64 2, i32 0, i32 0
  %252 = load i64, i64* %251, align 8
  %253 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %250, i64 0, i32 0, i32 0
  %254 = load i64, i64* %253, align 8
  %255 = icmp eq i64 %254, %252
  br i1 %255, label %260, label %256

256:                                              ; preds = %248
  %257 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %250, i64 1
  %258 = ptrtoint %"class.base::Time"* %257 to i64
  %259 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %257, i64 0, i32 0, i32 0
  store i64 %252, i64* %259, align 8
  br label %260

260:                                              ; preds = %256, %248
  %261 = phi i64 [ %249, %248 ], [ %258, %256 ]
  %262 = inttoptr i64 %261 to %"class.base::Time"*
  %263 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %186, i64 3, i32 0, i32 0
  %264 = load i64, i64* %263, align 8
  %265 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %262, i64 0, i32 0, i32 0
  %266 = load i64, i64* %265, align 8
  %267 = icmp eq i64 %266, %264
  br i1 %267, label %272, label %268

268:                                              ; preds = %260
  %269 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %262, i64 1
  %270 = ptrtoint %"class.base::Time"* %269 to i64
  %271 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %269, i64 0, i32 0, i32 0
  store i64 %264, i64* %271, align 8
  br label %272

272:                                              ; preds = %268, %260
  %273 = phi i64 [ %261, %260 ], [ %270, %268 ]
  %274 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %186, i64 4
  %275 = icmp eq %"class.base::Time"* %274, %127
  %276 = inttoptr i64 %273 to %"class.base::Time"*
  br i1 %275, label %205, label %184
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history13VisitDatabase12GetStartDateEPN4base4TimeE(%"class.history::VisitDatabase"*, %"class.base::Time"* nocapture) local_unnamed_addr #4 align 2 {
  %3 = alloca %"class.sql::Statement", align 8
  %4 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #16
  %5 = bitcast %"class.history::VisitDatabase"* %0 to %"class.sql::Database"* (%"class.history::VisitDatabase"*)***
  %6 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  %7 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %5, align 8
  %8 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %7, i64 2
  %9 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %8, align 8
  %10 = tail call dereferenceable(136) %"class.sql::Database"* %9(%"class.history::VisitDatabase"* %0) #16
  %11 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %10, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.9, i64 0, i64 0), i64 722, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.33, i64 0, i64 0)) #16
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %3, %"class.sql::Database::StatementRef"* %11) #16
  %12 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %3) #16
  br i1 %12, label %13, label %16

13:                                               ; preds = %2
  %14 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %3, i32 0) #16
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %13, %2
  %17 = call i64 @_ZN4base4Time3NowEv() #16
  br label %20

18:                                               ; preds = %13
  %19 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %3, i32 0) #16
  br label %20

20:                                               ; preds = %18, %16
  %21 = phi i64 [ %19, %18 ], [ %17, %16 ]
  %22 = phi i1 [ true, %18 ], [ false, %16 ]
  %23 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %1, i64 0, i32 0, i32 0
  store i64 %21, i64* %23, align 8
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #16
  ret i1 %22
}

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history13VisitDatabase15GetVisitsSourceERKNSt3__16vectorINS_8VisitRowENS1_9allocatorIS3_EEEEPNS1_3mapIlNS_11VisitSourceENS1_4lessIlEENS4_INS1_4pairIKlSA_EEEEEE(%"class.history::VisitDatabase"*, %"class.std::__1::vector.19"* nocapture readonly dereferenceable(24), %"class.std::__1::map"*) local_unnamed_addr #4 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.sql::Statement", align 8
  %7 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node.117"**
  %10 = load %"class.std::__1::__tree_node.117"*, %"class.std::__1::__tree_node.117"** %9, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIlN7history11VisitSourceEEENS_19__map_value_compareIlS4_NS_4lessIlEELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.72"* %7, %"class.std::__1::__tree_node.117"* %10) #16
  %11 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"** %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %13, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %1, i64 0, i32 0, i32 1
  %15 = bitcast %"class.history::VisitRow"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.19"* %1 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 6
  %21 = icmp eq i64 %19, 0
  br i1 %21, label %151, label %22

22:                                               ; preds = %3
  %23 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %27 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %1, i64 0, i32 0, i32 0
  %28 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast %"class.sql::Statement"* %6 to i8*
  %33 = bitcast %"class.history::VisitDatabase"* %0 to %"class.sql::Database"* (%"class.history::VisitDatabase"*)***
  %34 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %37 = bitcast %"class.std::__1::map"* %2 to i64*
  %38 = bitcast %"class.sql::Statement"* %6 to i8*
  %39 = bitcast i64* %25 to <2 x i64>*
  br label %40

40:                                               ; preds = %22, %150
  %41 = phi i64 [ 0, %22 ], [ %42, %150 ]
  %42 = add i64 %41, 500
  %43 = icmp ult i64 %42, %20
  %44 = select i1 %43, i64 %42, i64 %20
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #16
  %45 = call i8* @_Znwm(i64 48) #17
  store i8* %45, i8** %24, align 8
  store <2 x i64> <i64 35, i64 -9223372036854775760>, <2 x i64>* %39, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %45, i8* align 1 getelementptr inbounds ([36 x i8], [36 x i8]* @.str.34, i64 0, i64 0), i64 35, i1 false) #16
  %46 = getelementptr inbounds i8, i8* %45, i64 35
  store i8 0, i8* %46, align 1
  %47 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.35, i64 0, i64 0)) #16
  %48 = icmp ult i64 %41, %44
  br i1 %48, label %61, label %49

49:                                               ; preds = %81, %40
  %50 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.36, i64 0, i64 0)) #16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 16, i1 false)
  %51 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %33, align 8
  %52 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %51, i64 2
  %53 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %52, align 8
  %54 = call dereferenceable(136) %"class.sql::Database"* %53(%"class.history::VisitDatabase"* %0) #16
  %55 = load i8, i8* %35, align 1
  %56 = icmp slt i8 %55, 0
  %57 = load i8*, i8** %24, align 8
  %58 = select i1 %56, i8* %57, i8* %23
  %59 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetUniqueStatementEPKc(%"class.sql::Database"* %54, i8* %58) #16
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %6, %"class.sql::Database::StatementRef"* %59) #16
  %60 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %6) #16
  br i1 %60, label %84, label %145

61:                                               ; preds = %40, %81
  %62 = phi i64 [ %82, %81 ], [ %41, %40 ]
  %63 = icmp eq i64 %62, %41
  br i1 %63, label %65, label %64

64:                                               ; preds = %61
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %4, i8 signext 44) #16
  br label %65

65:                                               ; preds = %61, %64
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #16
  %66 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %27, align 8
  %67 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %66, i64 %62, i32 0
  %68 = load i64, i64* %67, align 8
  call void @_ZN4base14NumberToStringEl(%"class.std::__1::basic_string"* nonnull sret %5, i64 %68) #16
  %69 = load i8, i8* %29, align 1
  %70 = icmp slt i8 %69, 0
  %71 = load i8*, i8** %30, align 8
  %72 = load i64, i64* %31, align 8
  %73 = zext i8 %69 to i64
  %74 = select i1 %70, i8* %71, i8* %26
  %75 = select i1 %70, i64 %72, i64 %73
  %76 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %74, i64 %75) #16
  %77 = load i8, i8* %29, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %81

79:                                               ; preds = %65
  %80 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %80) #17
  br label %81

81:                                               ; preds = %65, %79
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #16
  %82 = add nuw i64 %62, 1
  %83 = icmp ult i64 %82, %44
  br i1 %83, label %61, label %49

84:                                               ; preds = %49, %143
  %85 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %6, i32 0) #16
  %86 = call i32 @_ZNK3sql9Statement9ColumnIntEi(%"class.sql::Statement"* nonnull %6, i32 1) #16
  %87 = load %"class.std::__1::__tree_node.117"*, %"class.std::__1::__tree_node.117"** %9, align 8
  %88 = icmp eq %"class.std::__1::__tree_node.117"* %87, null
  br i1 %88, label %115, label %89

89:                                               ; preds = %84, %111
  %90 = phi %"class.std::__1::__tree_node.117"* [ %114, %111 ], [ %87, %84 ]
  %91 = phi %"class.std::__1::__tree_node_base"** [ %113, %111 ], [ %36, %84 ]
  %92 = getelementptr inbounds %"class.std::__1::__tree_node.117", %"class.std::__1::__tree_node.117"* %90, i64 0, i32 2, i32 0, i32 0
  %93 = load i64, i64* %92, align 8
  %94 = icmp slt i64 %85, %93
  br i1 %94, label %95, label %101

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.std::__1::__tree_node.117", %"class.std::__1::__tree_node.117"* %90, i64 0, i32 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, null
  br i1 %98, label %99, label %111

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.std::__1::__tree_node.117", %"class.std::__1::__tree_node.117"* %90, i64 0, i32 0, i32 0
  br label %115

101:                                              ; preds = %89
  %102 = icmp slt i64 %93, %85
  br i1 %102, label %103, label %109

103:                                              ; preds = %101
  %104 = getelementptr inbounds %"class.std::__1::__tree_node.117", %"class.std::__1::__tree_node.117"* %90, i64 0, i32 0, i32 1
  %105 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %104, align 8
  %106 = icmp eq %"class.std::__1::__tree_node_base"* %105, null
  br i1 %106, label %107, label %111

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.std::__1::__tree_node.117", %"class.std::__1::__tree_node.117"* %90, i64 0, i32 0, i32 0
  br label %115

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__tree_node.117", %"class.std::__1::__tree_node.117"* %90, i64 0, i32 0, i32 0
  br label %115

111:                                              ; preds = %103, %95
  %112 = phi %"class.std::__1::__tree_node_base"* [ %97, %95 ], [ %105, %103 ]
  %113 = phi %"class.std::__1::__tree_node_base"** [ %96, %95 ], [ %104, %103 ]
  %114 = bitcast %"class.std::__1::__tree_node_base"* %112 to %"class.std::__1::__tree_node.117"*
  br label %89

115:                                              ; preds = %84, %109, %107, %99
  %116 = phi %"class.std::__1::__tree_end_node"* [ %100, %99 ], [ %108, %107 ], [ %110, %109 ], [ %8, %84 ]
  %117 = phi %"class.std::__1::__tree_node_base"** [ %96, %99 ], [ %104, %107 ], [ %91, %109 ], [ %13, %84 ]
  %118 = bitcast %"class.std::__1::__tree_node_base"** %117 to %"class.std::__1::__tree_node.117"**
  %119 = load %"class.std::__1::__tree_node.117"*, %"class.std::__1::__tree_node.117"** %118, align 8
  %120 = icmp eq %"class.std::__1::__tree_node.117"* %119, null
  br i1 %120, label %121, label %143

121:                                              ; preds = %115
  %122 = call i8* @_Znwm(i64 48) #17, !noalias !14
  %123 = getelementptr inbounds i8, i8* %122, i64 32
  %124 = bitcast i8* %123 to i64*
  store i64 %85, i64* %124, align 8, !noalias !14
  %125 = getelementptr inbounds i8, i8* %122, i64 40
  %126 = bitcast i8* %125 to i32*
  store i32 %86, i32* %126, align 8, !noalias !14
  %127 = bitcast i8* %122 to %"class.std::__1::__tree_node_base"*
  %128 = getelementptr inbounds i8, i8* %122, i64 16
  %129 = bitcast i8* %128 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %122, i8 0, i64 16, i1 false) #16
  store %"class.std::__1::__tree_end_node"* %116, %"class.std::__1::__tree_end_node"** %129, align 8
  %130 = bitcast %"class.std::__1::__tree_node_base"** %117 to i8**
  store i8* %122, i8** %130, align 8
  %131 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %12, align 8
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %131, i64 0, i32 0
  %133 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %132, align 8
  %134 = icmp eq %"class.std::__1::__tree_node_base"* %133, null
  br i1 %134, label %138, label %135

135:                                              ; preds = %121
  %136 = ptrtoint %"class.std::__1::__tree_node_base"* %133 to i64
  store i64 %136, i64* %37, align 8
  %137 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %117, align 8
  br label %138

138:                                              ; preds = %135, %121
  %139 = phi %"class.std::__1::__tree_node_base"* [ %127, %121 ], [ %137, %135 ]
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %36, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %140, %"class.std::__1::__tree_node_base"* %139) #16
  %141 = load i64, i64* %11, align 8
  %142 = add i64 %141, 1
  store i64 %142, i64* %11, align 8
  br label %143

143:                                              ; preds = %115, %138
  %144 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %6) #16
  br i1 %144, label %84, label %145

145:                                              ; preds = %143, %49
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #16
  %146 = load i8, i8* %35, align 1
  %147 = icmp slt i8 %146, 0
  br i1 %147, label %148, label %150

148:                                              ; preds = %145
  %149 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %149) #17
  br label %150

150:                                              ; preds = %145, %148
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #16
  br i1 %43, label %40, label %151

151:                                              ; preds = %150, %3
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #5

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"*, i8 signext) local_unnamed_addr #5

declare void @_ZN4base14NumberToStringEl(%"class.std::__1::basic_string"* sret, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7history13VisitDatabase40GetGoogleDomainVisitsFromSearchesInRangeEN4base4TimeES2_(%"class.std::__1::vector.83"* noalias sret, %"class.history::VisitDatabase"*, i64, i64) local_unnamed_addr #4 align 2 {
  %5 = alloca %"class.std::__1::allocator.13", align 1
  %6 = alloca %"class.base::Time", align 8
  %7 = alloca %"class.base::Time", align 8
  %8 = alloca %"class.sql::Statement", align 8
  %9 = alloca %class.GURL, align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.base::Time", align 8
  %13 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %6, i64 0, i32 0, i32 0
  store i64 %2, i64* %13, align 8
  %14 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %7, i64 0, i32 0, i32 0
  store i64 %3, i64* %14, align 8
  %15 = bitcast %"class.sql::Statement"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #16
  %16 = bitcast %"class.history::VisitDatabase"* %1 to %"class.sql::Database"* (%"class.history::VisitDatabase"*)***
  %17 = bitcast %"class.sql::Statement"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 16, i1 false)
  %18 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %16, align 8
  %19 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %18, i64 2
  %20 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %19, align 8
  %21 = tail call dereferenceable(136) %"class.sql::Database"* %20(%"class.history::VisitDatabase"* %1) #16
  %22 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %21, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.9, i64 0, i64 0), i64 773, i8* getelementptr inbounds ([326 x i8], [326 x i8]* @.str.37, i64 0, i64 0)) #16
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %8, %"class.sql::Database::StatementRef"* %22) #16
  %23 = call i64 @_ZNK4base4Time24ToDeltaSinceWindowsEpochEv(%"class.base::Time"* nonnull %6) #16
  %24 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %8, i32 0, i64 %23) #16
  %25 = call i64 @_ZNK4base4Time24ToDeltaSinceWindowsEpochEv(%"class.base::Time"* nonnull %7) #16
  %26 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %8, i32 1, i64 %25) #16
  %27 = getelementptr inbounds %"class.std::__1::vector.83", %"class.std::__1::vector.83"* %0, i64 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.std::__1::vector.83", %"class.std::__1::vector.83"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %29 = bitcast %"class.std::__1::vector.83"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #16
  %30 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %8) #16
  br i1 %30, label %31, label %100

31:                                               ; preds = %4
  %32 = bitcast %class.GURL* %9 to i8*
  %33 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %34 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %39 = getelementptr inbounds %class.GURL, %class.GURL* %9, i64 0, i32 2, i32 3, i32 1
  %40 = getelementptr inbounds %class.GURL, %class.GURL* %9, i64 0, i32 0
  %41 = getelementptr inbounds %class.GURL, %class.GURL* %9, i64 0, i32 2, i32 3, i32 0
  %42 = getelementptr inbounds %"class.std::__1::allocator.13", %"class.std::__1::allocator.13"* %5, i64 0, i32 0
  %43 = bitcast %"class.base::Time"* %12 to i8*
  %44 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %12, i64 0, i32 0, i32 0
  %45 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = bitcast %"class.history::DomainVisit"** %27 to i64*
  br label %50

50:                                               ; preds = %31, %98
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %32) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 120, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #16
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %10, %"class.sql::Statement"* nonnull %8, i32 1) #16
  %51 = load i8, i8* %35, align 1
  %52 = icmp slt i8 %51, 0
  %53 = load i8*, i8** %36, align 8
  %54 = select i1 %52, i8* %53, i8* %33
  %55 = load i64, i64* %37, align 8
  %56 = zext i8 %51 to i64
  %57 = select i1 %52, i64 %55, i64 %56
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %9, i8* %54, i64 %57) #16
  %58 = load i8, i8* %35, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %50
  %61 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %61) #17
  br label %62

62:                                               ; preds = %50, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #16
  %63 = call zeroext i1 @_ZN11google_util17IsGoogleSearchUrlERK4GURL(%class.GURL* nonnull dereferenceable(120) %9) #16
  br i1 %63, label %64, label %98

64:                                               ; preds = %62
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #16
  %65 = load i32, i32* %39, align 4, !noalias !17
  %66 = icmp slt i32 %65, 1
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 24, i1 false) #16, !alias.scope !17
  br label %72

68:                                               ; preds = %64
  %69 = load i32, i32* %41, align 8, !noalias !17
  %70 = sext i32 %69 to i64
  %71 = sext i32 %65 to i64
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %42) #16, !noalias !17
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %11, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %40, i64 %70, i64 %71, %"class.std::__1::allocator.13"* nonnull dereferenceable(1) %5) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %42) #16, !noalias !17
  br label %72

72:                                               ; preds = %67, %68
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #16
  %73 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %8, i32 0) #16
  %74 = call i64 @_ZN4base4Time26FromDeltaSinceWindowsEpochENS_9TimeDeltaE(i64 %73) #16
  store i64 %74, i64* %44, align 8
  %75 = load %"class.history::DomainVisit"*, %"class.history::DomainVisit"** %27, align 8
  %76 = load %"class.history::DomainVisit"*, %"class.history::DomainVisit"** %28, align 8
  %77 = icmp ult %"class.history::DomainVisit"* %75, %76
  br i1 %77, label %78, label %91

78:                                               ; preds = %72
  %79 = load i8, i8* %46, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %83, label %81

81:                                               ; preds = %78
  %82 = bitcast %"class.history::DomainVisit"* %75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* nonnull align 8 %38, i64 24, i1 false) #16
  br label %87

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.history::DomainVisit", %"class.history::DomainVisit"* %75, i64 0, i32 0
  %85 = load i8*, i8** %47, align 8
  %86 = load i64, i64* %48, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %84, i8* %85, i64 %86) #16
  br label %87

87:                                               ; preds = %83, %81
  %88 = getelementptr inbounds %"class.history::DomainVisit", %"class.history::DomainVisit"* %75, i64 0, i32 1, i32 0, i32 0
  store i64 %74, i64* %88, align 8
  %89 = getelementptr inbounds %"class.history::DomainVisit", %"class.history::DomainVisit"* %75, i64 1
  %90 = ptrtoint %"class.history::DomainVisit"* %89 to i64
  store i64 %90, i64* %49, align 8
  br label %92

91:                                               ; preds = %72
  call void @_ZNSt3__16vectorIN7history11DomainVisitENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJNS_12basic_stringIcNS_11char_traitsIcEENS3_IcEEEEN4base4TimeEEEEvDpOT_(%"class.std::__1::vector.83"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %11, %"class.base::Time"* nonnull dereferenceable(8) %12) #16
  br label %92

92:                                               ; preds = %87, %91
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #16
  %93 = load i8, i8* %46, align 1
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %95, label %97

95:                                               ; preds = %92
  %96 = load i8*, i8** %47, align 8
  call void @_ZdlPv(i8* %96) #17
  br label %97

97:                                               ; preds = %92, %95
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #16
  br label %98

98:                                               ; preds = %97, %62
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %32) #16
  %99 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %8) #16
  br i1 %99, label %50, label %100

100:                                              ; preds = %98, %4
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #16
  ret void
}

declare i64 @_ZNK4base4Time24ToDeltaSinceWindowsEpochEv(%"class.base::Time"*) local_unnamed_addr #5

declare zeroext i1 @_ZN11google_util17IsGoogleSearchUrlERK4GURL(%class.GURL* dereferenceable(120)) local_unnamed_addr #5

declare i64 @_ZN4base4Time26FromDeltaSinceWindowsEpochENS_9TimeDeltaE(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history13VisitDatabase28MigrateVisitsWithoutDurationEv(%"class.history::VisitDatabase"*) local_unnamed_addr #4 align 2 {
  %2 = bitcast %"class.history::VisitDatabase"* %0 to %"class.sql::Database"* (%"class.history::VisitDatabase"*)***
  %3 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %3, i64 2
  %5 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %4, align 8
  %6 = tail call dereferenceable(136) %"class.sql::Database"* %5(%"class.history::VisitDatabase"* %0) #16
  %7 = tail call zeroext i1 @_ZNK3sql8Database14DoesTableExistEPKc(%"class.sql::Database"* %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0)) #16
  br i1 %7, label %8, label %21

8:                                                ; preds = %1
  %9 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %2, align 8
  %10 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %9, i64 2
  %11 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %10, align 8
  %12 = tail call dereferenceable(136) %"class.sql::Database"* %11(%"class.history::VisitDatabase"* %0) #16
  %13 = tail call zeroext i1 @_ZNK3sql8Database15DoesColumnExistEPKcS2_(%"class.sql::Database"* %12, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.38, i64 0, i64 0)) #16
  br i1 %13, label %20, label %14

14:                                               ; preds = %8
  %15 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %2, align 8
  %16 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %15, i64 2
  %17 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %16, align 8
  %18 = tail call dereferenceable(136) %"class.sql::Database"* %17(%"class.history::VisitDatabase"* %0) #16
  %19 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %18, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.39, i64 0, i64 0)) #16
  br i1 %19, label %20, label %21

20:                                               ; preds = %14, %8
  br label %21

21:                                               ; preds = %14, %1, %20
  %22 = phi i1 [ true, %20 ], [ false, %1 ], [ false, %14 ]
  ret i1 %22
}

declare zeroext i1 @_ZNK3sql8Database15DoesColumnExistEPKcS2_(%"class.sql::Database"*, i8*, i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history13VisitDatabase48MigrateVisitsWithoutIncrementedOmniboxTypedScoreEv(%"class.history::VisitDatabase"*) local_unnamed_addr #4 align 2 {
  %2 = alloca %"class.sql::Transaction", align 8
  %3 = alloca %"class.sql::Statement", align 8
  %4 = alloca %"class.history::VisitRow", align 8
  %5 = alloca %"class.sql::Statement", align 8
  %6 = bitcast %"class.history::VisitDatabase"* %0 to %"class.sql::Database"* (%"class.history::VisitDatabase"*)***
  %7 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %7, i64 2
  %9 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %8, align 8
  %10 = tail call dereferenceable(136) %"class.sql::Database"* %9(%"class.history::VisitDatabase"* %0) #16
  %11 = tail call zeroext i1 @_ZNK3sql8Database14DoesTableExistEPKc(%"class.sql::Database"* %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0)) #16
  br i1 %11, label %12, label %119

12:                                               ; preds = %1
  %13 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %6, align 8
  %14 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %13, i64 2
  %15 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %14, align 8
  %16 = tail call dereferenceable(136) %"class.sql::Database"* %15(%"class.history::VisitDatabase"* %0) #16
  %17 = tail call zeroext i1 @_ZNK3sql8Database15DoesColumnExistEPKcS2_(%"class.sql::Database"* %16, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.40, i64 0, i64 0)) #16
  br i1 %17, label %118, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.sql::Transaction"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #16
  %20 = bitcast %"class.sql::Transaction"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %6, align 8
  %22 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %21, i64 2
  %23 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %22, align 8
  %24 = tail call dereferenceable(136) %"class.sql::Database"* %23(%"class.history::VisitDatabase"* %0) #16
  call void @_ZN3sql11TransactionC1EPNS_8DatabaseE(%"class.sql::Transaction"* nonnull %2, %"class.sql::Database"* %24) #16
  %25 = call zeroext i1 @_ZN3sql11Transaction5BeginEv(%"class.sql::Transaction"* nonnull %2) #16
  br i1 %25, label %26, label %115

26:                                               ; preds = %18
  %27 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %6, align 8
  %28 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %27, i64 2
  %29 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %28, align 8
  %30 = call dereferenceable(136) %"class.sql::Database"* %29(%"class.history::VisitDatabase"* %0) #16
  %31 = call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %30, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.41, i64 0, i64 0)) #16
  br i1 %31, label %32, label %115

32:                                               ; preds = %26
  %33 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #16
  %34 = getelementptr inbounds %"class.sql::Statement", %"class.sql::Statement"* %3, i64 0, i32 0, i32 0
  %35 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 16, i1 false)
  %36 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %6, align 8
  %37 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %36, i64 2
  %38 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %37, align 8
  %39 = call dereferenceable(136) %"class.sql::Database"* %38(%"class.history::VisitDatabase"* %0) #16
  %40 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetUniqueStatementEPKc(%"class.sql::Database"* %39, i8* getelementptr inbounds ([117 x i8], [117 x i8]* @.str.42, i64 0, i64 0)) #16
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %3, %"class.sql::Database::StatementRef"* %40) #16
  %41 = load %"class.sql::Database::StatementRef"*, %"class.sql::Database::StatementRef"** %34, align 8
  %42 = getelementptr inbounds %"class.sql::Database::StatementRef", %"class.sql::Database::StatementRef"* %41, i64 0, i32 3
  %43 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %42, align 8
  %44 = icmp eq %struct.sqlite3_stmt* %43, null
  br i1 %44, label %107, label %45

45:                                               ; preds = %32
  %46 = bitcast %"class.history::VisitRow"* %4 to i8*
  %47 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %4, i64 0, i32 0
  %48 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %4, i64 0, i32 1
  %49 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %4, i64 0, i32 2, i32 0, i32 0
  %50 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %4, i64 0, i32 3
  %51 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %4, i64 0, i32 4
  %52 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %4, i64 0, i32 6
  %53 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %4, i64 0, i32 7, i32 0
  %54 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %4, i64 0, i32 8
  %55 = bitcast %"class.sql::Statement"* %5 to i8*
  %56 = bitcast %"class.sql::Statement"* %5 to i8*
  br label %57

57:                                               ; preds = %45, %102
  %58 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %3) #16
  br i1 %58, label %59, label %107

59:                                               ; preds = %57
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %46) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 64, i1 false)
  call void @_ZN7history8VisitRowC1Ev(%"class.history::VisitRow"* nonnull %4) #16
  %60 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %3, i32 0) #16
  store i64 %60, i64* %47, align 8
  %61 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %3, i32 1) #16
  store i64 %61, i64* %48, align 8
  %62 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %3, i32 2) #16
  store i64 %62, i64* %49, align 8
  %63 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %3, i32 3) #16
  store i64 %63, i64* %50, align 8
  %64 = call i32 @_ZNK3sql9Statement9ColumnIntEi(%"class.sql::Statement"* nonnull %3, i32 4) #16
  %65 = call i32 @_ZN2ui21PageTransitionFromIntEi(i32 %64) #16
  store i32 %65, i32* %51, align 8
  %66 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %3, i32 5) #16
  store i64 %66, i64* %52, align 8
  %67 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %3, i32 6) #16
  store i64 %67, i64* %53, align 8
  %68 = call zeroext i1 @_ZNK3sql9Statement10ColumnBoolEi(%"class.sql::Statement"* nonnull %3, i32 7) #16
  %69 = zext i1 %68 to i8
  store i8 %69, i8* %54, align 8
  %70 = load i64, i64* %47, align 8
  %71 = load i64, i64* %50, align 8
  %72 = icmp eq i64 %70, %71
  br i1 %72, label %102, label %73

73:                                               ; preds = %59
  %74 = load i32, i32* %51, align 8
  %75 = call zeroext i1 @_ZN7history14HistoryBackend16IsTypedIncrementEN2ui14PageTransitionE(i32 %74) #16
  %76 = zext i1 %75 to i8
  store i8 %76, i8* %54, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 16, i1 false)
  %77 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %6, align 8
  %78 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %77, i64 2
  %79 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %78, align 8
  %80 = call dereferenceable(136) %"class.sql::Database"* %79(%"class.history::VisitDatabase"* %0) #16
  %81 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %80, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.9, i64 0, i64 0), i64 865, i8* getelementptr inbounds ([138 x i8], [138 x i8]* @.str.16, i64 0, i64 0)) #16
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %5, %"class.sql::Database::StatementRef"* %81) #16
  %82 = load i64, i64* %48, align 8
  %83 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %5, i32 0, i64 %82) #16
  %84 = load i64, i64* %49, align 8
  %85 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %5, i32 1, i64 %84) #16
  %86 = load i64, i64* %50, align 8
  %87 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %5, i32 2, i64 %86) #16
  %88 = load i32, i32* %51, align 8
  %89 = zext i32 %88 to i64
  %90 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %5, i32 3, i64 %89) #16
  %91 = load i64, i64* %52, align 8
  %92 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %5, i32 4, i64 %91) #16
  %93 = load i64, i64* %53, align 8
  %94 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %5, i32 5, i64 %93) #16
  %95 = load i8, i8* %54, align 8, !range !5
  %96 = icmp ne i8 %95, 0
  %97 = call zeroext i1 @_ZN3sql9Statement8BindBoolEib(%"class.sql::Statement"* nonnull %5, i32 6, i1 zeroext %96) #16
  %98 = load i64, i64* %47, align 8
  %99 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %5, i32 7, i64 %98) #16
  %100 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %5) #16
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #16
  br i1 %100, label %102, label %101

101:                                              ; preds = %73
  call void @_ZN7history8VisitRowD1Ev(%"class.history::VisitRow"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %46) #16
  br label %113

102:                                              ; preds = %73, %59
  call void @_ZN7history8VisitRowD1Ev(%"class.history::VisitRow"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %46) #16
  %103 = load %"class.sql::Database::StatementRef"*, %"class.sql::Database::StatementRef"** %34, align 8
  %104 = getelementptr inbounds %"class.sql::Database::StatementRef", %"class.sql::Database::StatementRef"* %103, i64 0, i32 3
  %105 = load %struct.sqlite3_stmt*, %struct.sqlite3_stmt** %104, align 8
  %106 = icmp eq %struct.sqlite3_stmt* %105, null
  br i1 %106, label %107, label %57

107:                                              ; preds = %57, %102, %32
  %108 = call zeroext i1 @_ZNK3sql9Statement9SucceededEv(%"class.sql::Statement"* nonnull %3) #16
  br i1 %108, label %109, label %113

109:                                              ; preds = %107
  %110 = call zeroext i1 @_ZN3sql11Transaction6CommitEv(%"class.sql::Transaction"* nonnull %2) #16
  %111 = xor i1 %110, true
  %112 = zext i1 %111 to i32
  br label %113

113:                                              ; preds = %101, %109, %107
  %114 = phi i32 [ 1, %107 ], [ %112, %109 ], [ 1, %101 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #16
  br label %115

115:                                              ; preds = %26, %18, %113
  %116 = phi i32 [ %114, %113 ], [ 1, %18 ], [ 1, %26 ]
  call void @_ZN3sql11TransactionD1Ev(%"class.sql::Transaction"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #16
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115, %12
  br label %119

119:                                              ; preds = %1, %115, %118
  %120 = phi i1 [ true, %118 ], [ false, %115 ], [ false, %1 ]
  ret i1 %120
}

declare void @_ZN3sql11TransactionC1EPNS_8DatabaseE(%"class.sql::Transaction"*, %"class.sql::Database"*) unnamed_addr #5

declare zeroext i1 @_ZN3sql11Transaction5BeginEv(%"class.sql::Transaction"*) local_unnamed_addr #5

declare zeroext i1 @_ZN7history14HistoryBackend16IsTypedIncrementEN2ui14PageTransitionE(i32) local_unnamed_addr #5

declare zeroext i1 @_ZN3sql11Transaction6CommitEv(%"class.sql::Transaction"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN3sql11TransactionD1Ev(%"class.sql::Transaction"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history13VisitDatabase42MigrateVisitsWithoutPubliclyRoutableColumnEv(%"class.history::VisitDatabase"*) local_unnamed_addr #4 align 2 {
  %2 = bitcast %"class.history::VisitDatabase"* %0 to %"class.sql::Database"* (%"class.history::VisitDatabase"*)***
  %3 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %3, i64 2
  %5 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %4, align 8
  %6 = tail call dereferenceable(136) %"class.sql::Database"* %5(%"class.history::VisitDatabase"* %0) #16
  %7 = tail call zeroext i1 @_ZNK3sql8Database14DoesTableExistEPKc(%"class.sql::Database"* %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0)) #16
  br i1 %7, label %8, label %20

8:                                                ; preds = %1
  %9 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %2, align 8
  %10 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %9, i64 2
  %11 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %10, align 8
  %12 = tail call dereferenceable(136) %"class.sql::Database"* %11(%"class.history::VisitDatabase"* %0) #16
  %13 = tail call zeroext i1 @_ZNK3sql8Database15DoesColumnExistEPKcS2_(%"class.sql::Database"* %12, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.43, i64 0, i64 0)) #16
  br i1 %13, label %20, label %14

14:                                               ; preds = %8
  %15 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %2, align 8
  %16 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %15, i64 2
  %17 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %16, align 8
  %18 = tail call dereferenceable(136) %"class.sql::Database"* %17(%"class.history::VisitDatabase"* %0) #16
  %19 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %18, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.44, i64 0, i64 0)) #16
  br label %20

20:                                               ; preds = %8, %1, %14
  %21 = phi i1 [ %19, %14 ], [ false, %1 ], [ true, %8 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history13VisitDatabase21CanMigrateFlocAllowedEv(%"class.history::VisitDatabase"*) local_unnamed_addr #4 align 2 {
  %2 = bitcast %"class.history::VisitDatabase"* %0 to %"class.sql::Database"* (%"class.history::VisitDatabase"*)***
  %3 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %3, i64 2
  %5 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %4, align 8
  %6 = tail call dereferenceable(136) %"class.sql::Database"* %5(%"class.history::VisitDatabase"* %0) #16
  %7 = tail call zeroext i1 @_ZNK3sql8Database14DoesTableExistEPKc(%"class.sql::Database"* %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0)) #16
  br i1 %7, label %8, label %14

8:                                                ; preds = %1
  %9 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %2, align 8
  %10 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %9, i64 2
  %11 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %10, align 8
  %12 = tail call dereferenceable(136) %"class.sql::Database"* %11(%"class.history::VisitDatabase"* %0) #16
  %13 = tail call zeroext i1 @_ZNK3sql8Database15DoesColumnExistEPKcS2_(%"class.sql::Database"* %12, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.43, i64 0, i64 0)) #16
  br label %14

14:                                               ; preds = %8, %1
  %15 = phi i1 [ false, %1 ], [ %13, %8 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7history13VisitDatabase45GetAllVisitedURLRowidsForMigrationToVersion40EPNSt3__16vectorIlNS1_9allocatorIlEEEE(%"class.history::VisitDatabase"*, %"class.std::__1::vector.44"*) local_unnamed_addr #4 align 2 {
  %3 = alloca %"class.sql::Statement", align 8
  %4 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #16
  %5 = bitcast %"class.history::VisitDatabase"* %0 to %"class.sql::Database"* (%"class.history::VisitDatabase"*)***
  %6 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  %7 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)**, %"class.sql::Database"* (%"class.history::VisitDatabase"*)*** %5, align 8
  %8 = getelementptr inbounds %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %7, i64 2
  %9 = load %"class.sql::Database"* (%"class.history::VisitDatabase"*)*, %"class.sql::Database"* (%"class.history::VisitDatabase"*)** %8, align 8
  %10 = tail call dereferenceable(136) %"class.sql::Database"* %9(%"class.history::VisitDatabase"* %0) #16
  %11 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetUniqueStatementEPKc(%"class.sql::Database"* %10, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.45, i64 0, i64 0)) #16
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %3, %"class.sql::Database::StatementRef"* %11) #16
  %12 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %3) #16
  br i1 %12, label %13, label %83

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %1, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast i64** %14 to i64*
  %17 = bitcast %"class.std::__1::vector.44"* %1 to i64*
  %18 = bitcast i64** %15 to i64*
  %19 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %1, i64 0, i32 0, i32 0
  br label %20

20:                                               ; preds = %13, %81
  %21 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %3, i32 0) #16
  %22 = load i64*, i64** %14, align 8
  %23 = load i64*, i64** %15, align 8
  %24 = icmp ult i64* %22, %23
  %25 = ptrtoint i64* %23 to i64
  br i1 %24, label %26, label %29

26:                                               ; preds = %20
  store i64 %21, i64* %22, align 8
  %27 = getelementptr inbounds i64, i64* %22, i64 1
  %28 = ptrtoint i64* %27 to i64
  store i64 %28, i64* %16, align 8
  br label %81

29:                                               ; preds = %20
  %30 = ptrtoint i64* %22 to i64
  %31 = load i64, i64* %17, align 8
  %32 = sub i64 %30, %31
  %33 = ashr exact i64 %32, 3
  %34 = add nsw i64 %33, 1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.44"* %1 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #15
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %25, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  call void @abort() #15
  unreachable

50:                                               ; preds = %47, %38
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = call i8* @_Znwm(i64 %52) #17
  %54 = bitcast i8* %53 to i64*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i64* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i64, i64* %57, i64 %33
  %59 = getelementptr inbounds i64, i64* %57, i64 %56
  %60 = ptrtoint i64* %59 to i64
  store i64 %21, i64* %58, align 8
  %61 = getelementptr inbounds i64, i64* %58, i64 1
  %62 = ptrtoint i64* %61 to i64
  %63 = load i64*, i64** %19, align 8
  %64 = load i64, i64* %16, align 8
  %65 = ptrtoint i64* %63 to i64
  %66 = sub i64 %64, %65
  %67 = ashr exact i64 %66, 3
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds i64, i64* %58, i64 %68
  %70 = ptrtoint i64* %69 to i64
  %71 = icmp sgt i64 %66, 0
  br i1 %71, label %72, label %76

72:                                               ; preds = %55
  %73 = bitcast i64* %69 to i8*
  %74 = bitcast i64* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 %66, i1 false) #16
  %75 = load i64*, i64** %19, align 8
  br label %76

76:                                               ; preds = %72, %55
  %77 = phi i64* [ %63, %55 ], [ %75, %72 ]
  store i64 %70, i64* %17, align 8
  store i64 %62, i64* %16, align 8
  store i64 %60, i64* %18, align 8
  %78 = icmp eq i64* %77, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %76
  %80 = bitcast i64* %77 to i8*
  call void @_ZdlPv(i8* %80) #17
  br label %81

81:                                               ; preds = %26, %76, %79
  %82 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %3) #16
  br i1 %82, label %20, label %83

83:                                               ; preds = %81, %2
  %84 = call zeroext i1 @_ZNK3sql9Statement9SucceededEv(%"class.sql::Statement"* nonnull %3) #16
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #16
  ret i1 %84
}

declare void @__cxa_pure_virtual() unnamed_addr

declare zeroext i1 @_ZN2ui25PageTransitionIsMainFrameENS_14PageTransitionE(i32) local_unnamed_addr #5

declare zeroext i1 @_ZN2ui24PageTransitionCoreTypeIsENS_14PageTransitionES0_(i32, i32) local_unnamed_addr #5

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #5

declare i64 @_ZNK4base4Time8MidnightEb(%"class.base::Time"*, i1 zeroext) local_unnamed_addr #5

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator.13"* dereferenceable(1)) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN7history8VisitRowENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.19"*, %"class.history::VisitRow"* dereferenceable(64)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.history::VisitRow"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.19"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 6
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 288230376151711743
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.19"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.history::VisitRow"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 6
  %20 = icmp ult i64 %19, 144115188075855871
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 5
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 288230376151711743
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 288230376151711743, %14 ]
  %31 = shl i64 %30, 6
  %32 = tail call i8* @_Znwm(i64 %31) #17
  %33 = bitcast i8* %32 to %"class.history::VisitRow"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.history::VisitRow"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %36, i64 %9
  %38 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %36, i64 %35
  %39 = ptrtoint %"class.history::VisitRow"* %38 to i64
  %40 = bitcast %"class.history::VisitRow"* %37 to i8*
  %41 = bitcast %"class.history::VisitRow"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 64, i1 false) #16
  %42 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %37, i64 1
  %43 = ptrtoint %"class.history::VisitRow"* %42 to i64
  %44 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 0
  %45 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %44, align 8
  %46 = ptrtoint %"class.history::VisitRow"* %45 to i64
  %47 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %3, align 8
  %48 = icmp eq %"class.history::VisitRow"* %47, %45
  br i1 %48, label %96, label %49

49:                                               ; preds = %34
  %50 = getelementptr %"class.history::VisitRow", %"class.history::VisitRow"* %47, i64 -1, i32 0
  %51 = ptrtoint i64* %50 to i64
  %52 = sub i64 %51, %46
  %53 = lshr i64 %52, 6
  %54 = add nuw nsw i64 %53, 1
  %55 = and i64 %54, 3
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %67, label %57

57:                                               ; preds = %49, %57
  %58 = phi %"class.history::VisitRow"* [ %61, %57 ], [ %37, %49 ]
  %59 = phi %"class.history::VisitRow"* [ %62, %57 ], [ %47, %49 ]
  %60 = phi i64 [ %65, %57 ], [ %55, %49 ]
  %61 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %58, i64 -1
  %62 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %59, i64 -1
  %63 = bitcast %"class.history::VisitRow"* %61 to i8*
  %64 = bitcast %"class.history::VisitRow"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 64, i1 false) #16
  %65 = add i64 %60, -1
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %57, !llvm.loop !22

67:                                               ; preds = %57, %49
  %68 = phi %"class.history::VisitRow"* [ undef, %49 ], [ %61, %57 ]
  %69 = phi %"class.history::VisitRow"* [ %37, %49 ], [ %61, %57 ]
  %70 = phi %"class.history::VisitRow"* [ %47, %49 ], [ %62, %57 ]
  %71 = icmp ult i64 %52, 192
  br i1 %71, label %92, label %72

72:                                               ; preds = %67, %72
  %73 = phi %"class.history::VisitRow"* [ %87, %72 ], [ %69, %67 ]
  %74 = phi %"class.history::VisitRow"* [ %88, %72 ], [ %70, %67 ]
  %75 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %73, i64 -1
  %76 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %74, i64 -1
  %77 = bitcast %"class.history::VisitRow"* %75 to i8*
  %78 = bitcast %"class.history::VisitRow"* %76 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 64, i1 false) #16
  %79 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %73, i64 -2
  %80 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %74, i64 -2
  %81 = bitcast %"class.history::VisitRow"* %79 to i8*
  %82 = bitcast %"class.history::VisitRow"* %80 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 64, i1 false) #16
  %83 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %73, i64 -3
  %84 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %74, i64 -3
  %85 = bitcast %"class.history::VisitRow"* %83 to i8*
  %86 = bitcast %"class.history::VisitRow"* %84 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 64, i1 false) #16
  %87 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %73, i64 -4
  %88 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %74, i64 -4
  %89 = bitcast %"class.history::VisitRow"* %87 to i8*
  %90 = bitcast %"class.history::VisitRow"* %88 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 64, i1 false) #16
  %91 = icmp eq %"class.history::VisitRow"* %88, %45
  br i1 %91, label %92, label %72

92:                                               ; preds = %72, %67
  %93 = phi %"class.history::VisitRow"* [ %68, %67 ], [ %87, %72 ]
  %94 = load i64, i64* %6, align 8
  %95 = load %"class.history::VisitRow"*, %"class.history::VisitRow"** %3, align 8
  br label %96

96:                                               ; preds = %34, %92
  %97 = phi %"class.history::VisitRow"* [ %95, %92 ], [ %45, %34 ]
  %98 = phi %"class.history::VisitRow"* [ %93, %92 ], [ %37, %34 ]
  %99 = phi i64 [ %94, %92 ], [ %46, %34 ]
  %100 = ptrtoint %"class.history::VisitRow"* %98 to i64
  store i64 %100, i64* %6, align 8
  store i64 %43, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %101 = inttoptr i64 %99 to %"class.history::VisitRow"*
  %102 = icmp eq %"class.history::VisitRow"* %97, %101
  br i1 %102, label %107, label %103

103:                                              ; preds = %96, %103
  %104 = phi %"class.history::VisitRow"* [ %105, %103 ], [ %97, %96 ]
  %105 = getelementptr inbounds %"class.history::VisitRow", %"class.history::VisitRow"* %104, i64 -1
  tail call void @_ZN7history8VisitRowD1Ev(%"class.history::VisitRow"* %105) #16
  %106 = icmp eq %"class.history::VisitRow"* %105, %101
  br i1 %106, label %107, label %103

107:                                              ; preds = %103, %96
  %108 = icmp eq i64 %99, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = inttoptr i64 %99 to i8*
  tail call void @_ZdlPv(i8* %110) #17
  br label %111

111:                                              ; preds = %107, %109
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIlNS_4lessIlEENS_9allocatorIlEEE7destroyEPNS_11__tree_nodeIlPvEE(%"class.std::__1::__tree.27"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #4 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIlNS_4lessIlEENS_9allocatorIlEEE7destroyEPNS_11__tree_nodeIlPvEE(%"class.std::__1::__tree.27"* %0, %"class.std::__1::__tree_node"* %6) #16
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIlNS_4lessIlEENS_9allocatorIlEEE7destroyEPNS_11__tree_nodeIlPvEE(%"class.std::__1::__tree.27"* %0, %"class.std::__1::__tree_node"* %9) #16
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #17
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #4 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !5
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_4pairIN4base4TimeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_4lessISA_EENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.58"*, %"class.std::__1::__tree_node.103"*) local_unnamed_addr #4 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.103"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.103"* %1 to %"class.std::__1::__tree_node.103"**
  %6 = load %"class.std::__1::__tree_node.103"*, %"class.std::__1::__tree_node.103"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIN4base4TimeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_4lessISA_EENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.58"* %0, %"class.std::__1::__tree_node.103"* %6) #16
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.103", %"class.std::__1::__tree_node.103"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.103"**
  %9 = load %"class.std::__1::__tree_node.103"*, %"class.std::__1::__tree_node.103"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIN4base4TimeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_4lessISA_EENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.58"* %0, %"class.std::__1::__tree_node.103"* %9) #16
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.103", %"class.std::__1::__tree_node.103"* %1, i64 0, i32 1, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #17
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node.103"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #17
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_4pairIN4base4TimeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_4lessISA_EENS7_ISA_EEE21__emplace_unique_implIJS3_S9_EEENS1_INS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEEDpOT_(%"class.std::__1::__tree.58"*, %"class.base::Time"* dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #4 comdat align 2 {
  %4 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %5 = tail call i8* @_Znwm(i64 64) #17, !noalias !23
  %6 = getelementptr inbounds i8, i8* %5, i64 32
  %7 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %1, i64 0, i32 0, i32 0
  %8 = bitcast i8* %6 to i64*
  %9 = load i64, i64* %7, align 8, !noalias !23
  store i64 %9, i64* %8, align 8, !noalias !23
  %10 = getelementptr inbounds i8, i8* %5, i64 40
  %11 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false) #16, !noalias !23
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #16, !noalias !23
  %12 = bitcast %"class.std::__1::__tree_end_node"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #16
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %4, align 8
  %13 = bitcast i8* %6 to %"struct.std::__1::pair.104"*
  %14 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_4pairIN4base4TimeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_4lessISA_EENS7_ISA_EEE12__find_equalISA_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISJ_EERKT_(%"class.std::__1::__tree.58"* %0, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %4, %"struct.std::__1::pair.104"* dereferenceable(32) %13)
  %15 = bitcast %"class.std::__1::__tree_node_base"** %14 to %"class.std::__1::__tree_node.103"**
  %16 = load %"class.std::__1::__tree_node.103"*, %"class.std::__1::__tree_node.103"** %15, align 8
  %17 = icmp eq %"class.std::__1::__tree_node.103"* %16, null
  br i1 %17, label %18, label %42

18:                                               ; preds = %3
  %19 = bitcast %"class.std::__1::__tree_end_node"** %4 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast i8* %5 to %"class.std::__1::__tree_node_base"*
  %22 = getelementptr inbounds i8, i8* %5, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #16
  %23 = bitcast i8* %22 to i64*
  store i64 %20, i64* %23, align 8
  %24 = bitcast %"class.std::__1::__tree_node_base"** %14 to i8**
  store i8* %5, i8** %24, align 8
  %25 = getelementptr inbounds %"class.std::__1::__tree.58", %"class.std::__1::__tree.58"* %0, i64 0, i32 0
  %26 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 0, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %18
  %31 = ptrtoint %"class.std::__1::__tree_node_base"* %28 to i64
  %32 = bitcast %"class.std::__1::__tree.58"* %0 to i64*
  store i64 %31, i64* %32, align 8
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %14, align 8
  br label %34

34:                                               ; preds = %30, %18
  %35 = phi %"class.std::__1::__tree_node_base"* [ %21, %18 ], [ %33, %30 ]
  %36 = getelementptr inbounds %"class.std::__1::__tree.58", %"class.std::__1::__tree.58"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %36, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %37, %"class.std::__1::__tree_node_base"* %35) #16
  %38 = getelementptr inbounds %"class.std::__1::__tree.58", %"class.std::__1::__tree.58"* %0, i64 0, i32 2, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = bitcast i8* %5 to %"class.std::__1::__tree_end_node"*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #16
  br label %51

42:                                               ; preds = %3
  %43 = getelementptr inbounds %"class.std::__1::__tree_node.103", %"class.std::__1::__tree_node.103"* %16, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #16
  %44 = getelementptr inbounds i8, i8* %5, i64 63
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %42
  %48 = bitcast i8* %10 to i8**
  %49 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %49) #17
  br label %50

50:                                               ; preds = %47, %42
  call void @_ZdlPv(i8* nonnull %5) #17
  br label %51

51:                                               ; preds = %34, %50
  %52 = phi %"class.std::__1::__tree_end_node"* [ %41, %34 ], [ %43, %50 ]
  %53 = phi i8 [ 1, %34 ], [ 0, %50 ]
  %54 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %52, 0
  %55 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %54, i8 %53, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %55
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_4pairIN4base4TimeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_4lessISA_EENS7_ISA_EEE12__find_equalISA_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISJ_EERKT_(%"class.std::__1::__tree.58"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"struct.std::__1::pair.104"* dereferenceable(32)) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.58", %"class.std::__1::__tree.58"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.103"**
  %6 = load %"class.std::__1::__tree_node.103"*, %"class.std::__1::__tree_node.103"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node.103"* %6, null
  br i1 %7, label %99, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.58", %"class.std::__1::__tree.58"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %2, i64 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"struct.std::__1::pair.104", %"struct.std::__1::pair.104"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %15 to i64
  %20 = select i1 %16, i64 %18, i64 %19
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %24 = select i1 %16, i8* %22, i8* %23
  br label %25

25:                                               ; preds = %8, %95
  %26 = phi %"class.std::__1::__tree_node.103"* [ %98, %95 ], [ %6, %8 ]
  %27 = phi %"class.std::__1::__tree_node_base"** [ %97, %95 ], [ %9, %8 ]
  %28 = getelementptr inbounds %"class.std::__1::__tree_node.103", %"class.std::__1::__tree_node.103"* %26, i64 0, i32 1, i32 0, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = icmp slt i64 %11, %29
  br i1 %30, label %57, label %31

31:                                               ; preds = %25
  %32 = icmp slt i64 %29, %11
  br i1 %32, label %87, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.std::__1::__tree_node.103", %"class.std::__1::__tree_node.103"* %26, i64 0, i32 1, i32 1
  %35 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  %39 = getelementptr inbounds %"class.std::__1::__tree_node.103", %"class.std::__1::__tree_node.103"* %26, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = zext i8 %37 to i64
  %42 = select i1 %38, i64 %40, i64 %41
  %43 = icmp ult i64 %42, %20
  %44 = select i1 %43, i64 %42, i64 %20
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %53, label %46

46:                                               ; preds = %33
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %50 = select i1 %38, i8* %48, i8* %49
  %51 = tail call i32 @memcmp(i8* %24, i8* %50, i64 %44) #16
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %46, %33
  %54 = icmp ult i64 %20, %42
  br i1 %54, label %57, label %63

55:                                               ; preds = %46
  %56 = icmp slt i32 %51, 0
  br i1 %56, label %57, label %63

57:                                               ; preds = %53, %25, %55
  %58 = getelementptr inbounds %"class.std::__1::__tree_node.103", %"class.std::__1::__tree_node.103"* %26, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %58, align 8
  %60 = icmp eq %"class.std::__1::__tree_node_base"* %59, null
  br i1 %60, label %61, label %95

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.std::__1::__tree_node.103", %"class.std::__1::__tree_node.103"* %26, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %62, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %101

63:                                               ; preds = %53, %55
  %64 = getelementptr inbounds %"class.std::__1::__tree_node.103", %"class.std::__1::__tree_node.103"* %26, i64 0, i32 1, i32 1
  %65 = bitcast %"class.std::__1::basic_string"* %64 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  %69 = getelementptr inbounds %"class.std::__1::__tree_node.103", %"class.std::__1::__tree_node.103"* %26, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = zext i8 %67 to i64
  %72 = select i1 %68, i64 %70, i64 %71
  %73 = icmp ult i64 %20, %72
  %74 = select i1 %73, i64 %20, i64 %72
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %83, label %76

76:                                               ; preds = %63
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = bitcast %"class.std::__1::basic_string"* %64 to i8*
  %80 = select i1 %68, i8* %78, i8* %79
  %81 = tail call i32 @memcmp(i8* %80, i8* %24, i64 %74) #16
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %85

83:                                               ; preds = %76, %63
  %84 = icmp ult i64 %72, %20
  br i1 %84, label %87, label %93

85:                                               ; preds = %76
  %86 = icmp slt i32 %81, 0
  br i1 %86, label %87, label %93

87:                                               ; preds = %31, %83, %85
  %88 = getelementptr inbounds %"class.std::__1::__tree_node.103", %"class.std::__1::__tree_node.103"* %26, i64 0, i32 0, i32 1
  %89 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %88, align 8
  %90 = icmp eq %"class.std::__1::__tree_node_base"* %89, null
  br i1 %90, label %91, label %95

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.std::__1::__tree_node.103", %"class.std::__1::__tree_node.103"* %26, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %92, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %101

93:                                               ; preds = %83, %85
  %94 = getelementptr inbounds %"class.std::__1::__tree_node.103", %"class.std::__1::__tree_node.103"* %26, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %94, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %101

95:                                               ; preds = %87, %57
  %96 = phi %"class.std::__1::__tree_node_base"* [ %59, %57 ], [ %89, %87 ]
  %97 = phi %"class.std::__1::__tree_node_base"** [ %58, %57 ], [ %88, %87 ]
  %98 = bitcast %"class.std::__1::__tree_node_base"* %96 to %"class.std::__1::__tree_node.103"*
  br label %25

99:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %100 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %101

101:                                              ; preds = %99, %93, %91, %61
  %102 = phi %"class.std::__1::__tree_node_base"** [ %58, %61 ], [ %88, %91 ], [ %27, %93 ], [ %100, %99 ]
  ret %"class.std::__1::__tree_node_base"** %102
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRNS_6__lessIN4base4TimeES3_EEPS3_EEvT0_S7_T_(%"class.base::Time"*, %"class.base::Time"*, %"struct.std::__1::__less"* dereferenceable(1)) local_unnamed_addr #4 comdat {
  br label %4

4:                                                ; preds = %279, %3
  %5 = phi %"class.base::Time"* [ %1, %3 ], [ %261, %279 ]
  %6 = phi %"class.base::Time"* [ %0, %3 ], [ %15, %279 ]
  %7 = ptrtoint %"class.base::Time"* %5 to i64
  %8 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %5, i64 -1
  %9 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %8, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %8, i64 0, i32 0, i32 0
  %11 = ptrtoint %"class.base::Time"* %5 to i64
  br label %12

12:                                               ; preds = %288, %4
  %13 = phi %"class.base::Time"* [ %6, %4 ], [ %289, %288 ]
  br label %14

14:                                               ; preds = %213, %12
  %15 = phi %"class.base::Time"* [ %13, %12 ], [ %200, %213 ]
  %16 = ptrtoint %"class.base::Time"* %15 to i64
  %17 = sub i64 %7, %16
  %18 = ashr exact i64 %17, 3
  switch i64 %18, label %84 [
    i64 0, label %292
    i64 1, label %292
    i64 2, label %19
    i64 3, label %26
    i64 4, label %47
    i64 5, label %78
  ]

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %15, i64 0, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %5, i64 -1, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp slt i64 %23, %21
  br i1 %24, label %25, label %292

25:                                               ; preds = %19
  store i64 %23, i64* %20, align 8
  store i64 %21, i64* %22, align 8
  br label %292

26:                                               ; preds = %14
  %27 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %15, i64 0, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %15, i64 1, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = icmp slt i64 %30, %28
  %32 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %5, i64 -1, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = icmp slt i64 %33, %30
  br i1 %31, label %41, label %35

35:                                               ; preds = %26
  br i1 %34, label %36, label %292

36:                                               ; preds = %35
  store i64 %33, i64* %29, align 8
  store i64 %30, i64* %32, align 8
  %37 = load i64, i64* %27, align 8
  %38 = load i64, i64* %29, align 8
  %39 = icmp slt i64 %38, %37
  br i1 %39, label %40, label %292

40:                                               ; preds = %36
  store i64 %38, i64* %27, align 8
  store i64 %37, i64* %29, align 8
  br label %292

41:                                               ; preds = %26
  br i1 %34, label %42, label %43

42:                                               ; preds = %41
  store i64 %33, i64* %27, align 8
  store i64 %28, i64* %32, align 8
  br label %292

43:                                               ; preds = %41
  store i64 %30, i64* %27, align 8
  store i64 %28, i64* %29, align 8
  %44 = load i64, i64* %32, align 8
  %45 = icmp slt i64 %44, %28
  br i1 %45, label %46, label %292

46:                                               ; preds = %43
  store i64 %44, i64* %29, align 8
  store i64 %28, i64* %32, align 8
  br label %292

47:                                               ; preds = %14
  %48 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %15, i64 0, i32 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %15, i64 1, i32 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = icmp slt i64 %51, %49
  %53 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %15, i64 2, i32 0, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = icmp slt i64 %54, %51
  br i1 %52, label %60, label %56

56:                                               ; preds = %47
  br i1 %55, label %57, label %65

57:                                               ; preds = %56
  store i64 %54, i64* %50, align 8
  store i64 %51, i64* %53, align 8
  %58 = icmp slt i64 %54, %49
  br i1 %58, label %59, label %65

59:                                               ; preds = %57
  store i64 %54, i64* %48, align 8
  store i64 %49, i64* %50, align 8
  br label %65

60:                                               ; preds = %47
  br i1 %55, label %61, label %62

61:                                               ; preds = %60
  store i64 %54, i64* %48, align 8
  store i64 %49, i64* %53, align 8
  br label %65

62:                                               ; preds = %60
  store i64 %51, i64* %48, align 8
  store i64 %49, i64* %50, align 8
  %63 = icmp slt i64 %54, %49
  br i1 %63, label %64, label %65

64:                                               ; preds = %62
  store i64 %54, i64* %50, align 8
  store i64 %49, i64* %53, align 8
  br label %65

65:                                               ; preds = %64, %62, %61, %59, %57, %56
  %66 = phi i64 [ %49, %61 ], [ %54, %56 ], [ %51, %59 ], [ %51, %57 ], [ %49, %64 ], [ %54, %62 ]
  %67 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %5, i64 -1, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = icmp slt i64 %68, %66
  br i1 %69, label %70, label %292

70:                                               ; preds = %65
  store i64 %68, i64* %53, align 8
  store i64 %66, i64* %67, align 8
  %71 = load i64, i64* %50, align 8
  %72 = load i64, i64* %53, align 8
  %73 = icmp slt i64 %72, %71
  br i1 %73, label %74, label %292

74:                                               ; preds = %70
  store i64 %72, i64* %50, align 8
  store i64 %71, i64* %53, align 8
  %75 = load i64, i64* %48, align 8
  %76 = icmp slt i64 %72, %75
  br i1 %76, label %77, label %292

77:                                               ; preds = %74
  store i64 %72, i64* %48, align 8
  store i64 %75, i64* %50, align 8
  br label %292

78:                                               ; preds = %14
  %79 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %15, i64 1
  %80 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %15, i64 2
  %81 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %15, i64 3
  %82 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %5, i64 -1
  %83 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessIN4base4TimeES3_EEPS3_EEjT0_S7_S7_S7_S7_T_(%"class.base::Time"* %15, %"class.base::Time"* %79, %"class.base::Time"* %80, %"class.base::Time"* %81, %"class.base::Time"* %82, %"struct.std::__1::__less"* dereferenceable(1) %2)
  br label %292

84:                                               ; preds = %14
  %85 = icmp slt i64 %17, 248
  br i1 %85, label %86, label %135

86:                                               ; preds = %84
  %87 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %15, i64 2
  %88 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %15, i64 0, i32 0, i32 0
  %89 = load i64, i64* %88, align 8
  %90 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %15, i64 1, i32 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = icmp slt i64 %91, %89
  %93 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %87, i64 0, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = icmp slt i64 %94, %91
  br i1 %92, label %100, label %96

96:                                               ; preds = %86
  br i1 %95, label %97, label %105

97:                                               ; preds = %96
  store i64 %94, i64* %90, align 8
  store i64 %91, i64* %93, align 8
  %98 = icmp slt i64 %94, %89
  br i1 %98, label %99, label %105

99:                                               ; preds = %97
  store i64 %94, i64* %88, align 8
  store i64 %89, i64* %90, align 8
  br label %105

100:                                              ; preds = %86
  br i1 %95, label %101, label %102

101:                                              ; preds = %100
  store i64 %94, i64* %88, align 8
  store i64 %89, i64* %93, align 8
  br label %105

102:                                              ; preds = %100
  store i64 %91, i64* %88, align 8
  store i64 %89, i64* %90, align 8
  %103 = icmp slt i64 %94, %89
  br i1 %103, label %104, label %105

104:                                              ; preds = %102
  store i64 %94, i64* %90, align 8
  store i64 %89, i64* %93, align 8
  br label %105

105:                                              ; preds = %104, %102, %101, %99, %97, %96
  %106 = phi i64 [ %94, %96 ], [ %91, %97 ], [ %91, %99 ], [ %89, %101 ], [ %94, %102 ], [ %89, %104 ]
  %107 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %15, i64 3
  %108 = icmp eq %"class.base::Time"* %107, %5
  br i1 %108, label %292, label %109

109:                                              ; preds = %105, %133
  %110 = phi i64 [ %134, %133 ], [ %106, %105 ]
  %111 = phi %"class.base::Time"* [ %131, %133 ], [ %107, %105 ]
  %112 = phi %"class.base::Time"* [ %111, %133 ], [ %87, %105 ]
  %113 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %111, i64 0, i32 0, i32 0
  %114 = load i64, i64* %113, align 8
  %115 = icmp slt i64 %114, %110
  br i1 %115, label %116, label %130

116:                                              ; preds = %109, %122
  %117 = phi i64 [ %125, %122 ], [ %110, %109 ]
  %118 = phi %"class.base::Time"* [ %119, %122 ], [ %111, %109 ]
  %119 = phi %"class.base::Time"* [ %123, %122 ], [ %112, %109 ]
  %120 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %118, i64 0, i32 0, i32 0
  store i64 %117, i64* %120, align 8
  %121 = icmp eq %"class.base::Time"* %119, %15
  br i1 %121, label %127, label %122

122:                                              ; preds = %116
  %123 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %119, i64 -1
  %124 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %123, i64 0, i32 0, i32 0
  %125 = load i64, i64* %124, align 8
  %126 = icmp slt i64 %114, %125
  br i1 %126, label %116, label %127

127:                                              ; preds = %122, %116
  %128 = phi %"class.base::Time"* [ %15, %116 ], [ %119, %122 ]
  %129 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %128, i64 0, i32 0, i32 0
  store i64 %114, i64* %129, align 8
  br label %130

130:                                              ; preds = %127, %109
  %131 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %111, i64 1
  %132 = icmp eq %"class.base::Time"* %131, %5
  br i1 %132, label %292, label %133

133:                                              ; preds = %130
  %134 = load i64, i64* %113, align 8
  br label %109

135:                                              ; preds = %84
  %136 = icmp sgt i64 %17, 7992
  %137 = sdiv i64 %18, 2
  %138 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %15, i64 %137
  br i1 %136, label %139, label %144

139:                                              ; preds = %135
  %140 = sdiv i64 %18, 4
  %141 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %15, i64 %140
  %142 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %138, i64 %140
  %143 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessIN4base4TimeES3_EEPS3_EEjT0_S7_S7_S7_S7_T_(%"class.base::Time"* %15, %"class.base::Time"* %141, %"class.base::Time"* %138, %"class.base::Time"* %142, %"class.base::Time"* %8, %"struct.std::__1::__less"* dereferenceable(1) %2)
  br label %164

144:                                              ; preds = %135
  %145 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %15, i64 0, i32 0, i32 0
  %146 = load i64, i64* %145, align 8
  %147 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %138, i64 0, i32 0, i32 0
  %148 = load i64, i64* %147, align 8
  %149 = icmp slt i64 %148, %146
  %150 = load i64, i64* %9, align 8
  %151 = icmp slt i64 %150, %148
  br i1 %149, label %158, label %152

152:                                              ; preds = %144
  br i1 %151, label %153, label %164

153:                                              ; preds = %152
  store i64 %150, i64* %147, align 8
  store i64 %148, i64* %9, align 8
  %154 = load i64, i64* %145, align 8
  %155 = load i64, i64* %147, align 8
  %156 = icmp slt i64 %155, %154
  br i1 %156, label %157, label %164

157:                                              ; preds = %153
  store i64 %155, i64* %145, align 8
  store i64 %154, i64* %147, align 8
  br label %164

158:                                              ; preds = %144
  br i1 %151, label %159, label %160

159:                                              ; preds = %158
  store i64 %150, i64* %145, align 8
  store i64 %146, i64* %9, align 8
  br label %164

160:                                              ; preds = %158
  store i64 %148, i64* %145, align 8
  store i64 %146, i64* %147, align 8
  %161 = load i64, i64* %9, align 8
  %162 = icmp slt i64 %161, %146
  br i1 %162, label %163, label %164

163:                                              ; preds = %160
  store i64 %161, i64* %147, align 8
  store i64 %146, i64* %9, align 8
  br label %164

164:                                              ; preds = %163, %160, %159, %157, %153, %152, %139
  %165 = phi i32 [ %143, %139 ], [ 1, %159 ], [ 0, %152 ], [ 2, %157 ], [ 1, %153 ], [ 2, %163 ], [ 1, %160 ]
  %166 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %138, i64 0, i32 0, i32 0
  %167 = load i64, i64* %166, align 8
  %168 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %15, i64 0, i32 0, i32 0
  %169 = load i64, i64* %168, align 8
  %170 = icmp slt i64 %169, %167
  br i1 %170, label %224, label %171

171:                                              ; preds = %164, %217
  %172 = phi %"class.base::Time"* [ %173, %217 ], [ %8, %164 ]
  %173 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %172, i64 -1
  %174 = icmp eq %"class.base::Time"* %15, %173
  br i1 %174, label %175, label %217

175:                                              ; preds = %171
  %176 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %15, i64 1
  %177 = load i64, i64* %10, align 8
  %178 = icmp slt i64 %169, %177
  br i1 %178, label %192, label %179

179:                                              ; preds = %175
  %180 = icmp eq %"class.base::Time"* %176, %8
  br i1 %180, label %292, label %181

181:                                              ; preds = %179, %189
  %182 = phi %"class.base::Time"* [ %190, %189 ], [ %176, %179 ]
  %183 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %182, i64 0, i32 0, i32 0
  %184 = load i64, i64* %183, align 8
  %185 = icmp slt i64 %169, %184
  br i1 %185, label %186, label %189

186:                                              ; preds = %181
  %187 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %182, i64 0, i32 0, i32 0
  store i64 %177, i64* %187, align 8
  store i64 %184, i64* %10, align 8
  %188 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %182, i64 1
  br label %192

189:                                              ; preds = %181
  %190 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %182, i64 1
  %191 = icmp eq %"class.base::Time"* %190, %8
  br i1 %191, label %292, label %181

192:                                              ; preds = %186, %175
  %193 = phi %"class.base::Time"* [ %176, %175 ], [ %188, %186 ]
  %194 = icmp eq %"class.base::Time"* %193, %8
  br i1 %194, label %292, label %195

195:                                              ; preds = %192, %215
  %196 = phi %"class.base::Time"* [ %204, %215 ], [ %193, %192 ]
  %197 = phi %"class.base::Time"* [ %209, %215 ], [ %8, %192 ]
  %198 = load i64, i64* %168, align 8
  br label %199

199:                                              ; preds = %199, %195
  %200 = phi %"class.base::Time"* [ %196, %195 ], [ %204, %199 ]
  %201 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %200, i64 0, i32 0, i32 0
  %202 = load i64, i64* %201, align 8
  %203 = icmp slt i64 %198, %202
  %204 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %200, i64 1
  br i1 %203, label %205, label %199

205:                                              ; preds = %199
  %206 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %200, i64 0, i32 0, i32 0
  br label %207

207:                                              ; preds = %205, %207
  %208 = phi %"class.base::Time"* [ %209, %207 ], [ %197, %205 ]
  %209 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %208, i64 -1
  %210 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %209, i64 0, i32 0, i32 0
  %211 = load i64, i64* %210, align 8
  %212 = icmp slt i64 %198, %211
  br i1 %212, label %207, label %213

213:                                              ; preds = %207
  %214 = icmp ult %"class.base::Time"* %200, %209
  br i1 %214, label %215, label %14

215:                                              ; preds = %213
  %216 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %209, i64 0, i32 0, i32 0
  store i64 %211, i64* %206, align 8
  store i64 %202, i64* %216, align 8
  br label %195

217:                                              ; preds = %171
  %218 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %173, i64 0, i32 0, i32 0
  %219 = load i64, i64* %218, align 8
  %220 = icmp slt i64 %219, %167
  br i1 %220, label %221, label %171

221:                                              ; preds = %217
  %222 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %173, i64 0, i32 0, i32 0
  store i64 %219, i64* %168, align 8
  store i64 %169, i64* %222, align 8
  %223 = add i32 %165, 1
  br label %224

224:                                              ; preds = %164, %221
  %225 = phi i32 [ %223, %221 ], [ %165, %164 ]
  %226 = phi %"class.base::Time"* [ %173, %221 ], [ %8, %164 ]
  %227 = ptrtoint %"class.base::Time"* %15 to i64
  %228 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %15, i64 1
  %229 = icmp ult %"class.base::Time"* %228, %226
  br i1 %229, label %230, label %258

230:                                              ; preds = %224, %253
  %231 = phi %"class.base::Time"* [ %257, %253 ], [ %138, %224 ]
  %232 = phi i32 [ %255, %253 ], [ %225, %224 ]
  %233 = phi %"class.base::Time"* [ %242, %253 ], [ %228, %224 ]
  %234 = phi %"class.base::Time"* [ %247, %253 ], [ %226, %224 ]
  %235 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %231, i64 0, i32 0, i32 0
  %236 = load i64, i64* %235, align 8
  br label %237

237:                                              ; preds = %237, %230
  %238 = phi %"class.base::Time"* [ %233, %230 ], [ %242, %237 ]
  %239 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %238, i64 0, i32 0, i32 0
  %240 = load i64, i64* %239, align 8
  %241 = icmp slt i64 %240, %236
  %242 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %238, i64 1
  br i1 %241, label %237, label %243

243:                                              ; preds = %237
  %244 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %238, i64 0, i32 0, i32 0
  br label %245

245:                                              ; preds = %243, %245
  %246 = phi %"class.base::Time"* [ %247, %245 ], [ %234, %243 ]
  %247 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %246, i64 -1
  %248 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %247, i64 0, i32 0, i32 0
  %249 = load i64, i64* %248, align 8
  %250 = icmp slt i64 %249, %236
  br i1 %250, label %251, label %245

251:                                              ; preds = %245
  %252 = icmp ugt %"class.base::Time"* %238, %247
  br i1 %252, label %258, label %253

253:                                              ; preds = %251
  %254 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %247, i64 0, i32 0, i32 0
  store i64 %249, i64* %244, align 8
  store i64 %240, i64* %254, align 8
  %255 = add i32 %232, 1
  %256 = icmp eq %"class.base::Time"* %231, %238
  %257 = select i1 %256, %"class.base::Time"* %247, %"class.base::Time"* %231
  br label %230

258:                                              ; preds = %251, %224
  %259 = phi %"class.base::Time"* [ %138, %224 ], [ %231, %251 ]
  %260 = phi i32 [ %225, %224 ], [ %232, %251 ]
  %261 = phi %"class.base::Time"* [ %228, %224 ], [ %238, %251 ]
  %262 = icmp eq %"class.base::Time"* %261, %259
  br i1 %262, label %271, label %263

263:                                              ; preds = %258
  %264 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %261, i64 0, i32 0, i32 0
  %265 = load i64, i64* %264, align 8
  %266 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %259, i64 0, i32 0, i32 0
  %267 = load i64, i64* %266, align 8
  %268 = icmp slt i64 %267, %265
  br i1 %268, label %269, label %271

269:                                              ; preds = %263
  store i64 %267, i64* %264, align 8
  store i64 %265, i64* %266, align 8
  %270 = add i32 %260, 1
  br label %271

271:                                              ; preds = %258, %269, %263
  %272 = phi i32 [ %270, %269 ], [ %260, %263 ], [ %260, %258 ]
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %281

274:                                              ; preds = %271
  %275 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN4base4TimeES3_EEPS3_EEbT0_S7_T_(%"class.base::Time"* %15, %"class.base::Time"* %261, %"struct.std::__1::__less"* dereferenceable(1) %2)
  %276 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %261, i64 1
  %277 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN4base4TimeES3_EEPS3_EEbT0_S7_T_(%"class.base::Time"* %276, %"class.base::Time"* %5, %"struct.std::__1::__less"* dereferenceable(1) %2)
  br i1 %277, label %278, label %280

278:                                              ; preds = %274
  br i1 %275, label %292, label %279

279:                                              ; preds = %278, %290
  br label %4

280:                                              ; preds = %274
  br i1 %275, label %288, label %281

281:                                              ; preds = %280, %271
  %282 = ptrtoint %"class.base::Time"* %261 to i64
  %283 = sub i64 %282, %227
  %284 = sub i64 %11, %282
  %285 = icmp slt i64 %283, %284
  br i1 %285, label %286, label %290

286:                                              ; preds = %281
  tail call void @_ZNSt3__16__sortIRNS_6__lessIN4base4TimeES3_EEPS3_EEvT0_S7_T_(%"class.base::Time"* %15, %"class.base::Time"* %261, %"struct.std::__1::__less"* dereferenceable(1) %2)
  %287 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %261, i64 1
  br label %288

288:                                              ; preds = %286, %280
  %289 = phi %"class.base::Time"* [ %276, %280 ], [ %287, %286 ]
  br label %12

290:                                              ; preds = %281
  %291 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %261, i64 1
  tail call void @_ZNSt3__16__sortIRNS_6__lessIN4base4TimeES3_EEPS3_EEvT0_S7_T_(%"class.base::Time"* %291, %"class.base::Time"* %5, %"struct.std::__1::__less"* dereferenceable(1) %2)
  br label %279

292:                                              ; preds = %278, %192, %14, %14, %179, %189, %130, %105, %77, %74, %70, %65, %46, %43, %42, %40, %36, %35, %19, %25, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRNS_6__lessIN4base4TimeES3_EEPS3_EEjT0_S7_S7_S7_S7_T_(%"class.base::Time"*, %"class.base::Time"*, %"class.base::Time"*, %"class.base::Time"*, %"class.base::Time"*, %"struct.std::__1::__less"* dereferenceable(1)) local_unnamed_addr #4 comdat {
  %7 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %0, i64 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %1, i64 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp slt i64 %10, %8
  %12 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %2, i64 0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp slt i64 %13, %10
  br i1 %11, label %22, label %15

15:                                               ; preds = %6
  br i1 %14, label %16, label %28

16:                                               ; preds = %15
  store i64 %13, i64* %9, align 8
  store i64 %10, i64* %12, align 8
  %17 = load i64, i64* %7, align 8
  %18 = load i64, i64* %9, align 8
  %19 = icmp slt i64 %18, %17
  br i1 %19, label %20, label %28

20:                                               ; preds = %16
  store i64 %18, i64* %7, align 8
  store i64 %17, i64* %9, align 8
  %21 = load i64, i64* %12, align 8
  br label %28

22:                                               ; preds = %6
  br i1 %14, label %23, label %24

23:                                               ; preds = %22
  store i64 %13, i64* %7, align 8
  store i64 %8, i64* %12, align 8
  br label %28

24:                                               ; preds = %22
  store i64 %10, i64* %7, align 8
  store i64 %8, i64* %9, align 8
  %25 = load i64, i64* %12, align 8
  %26 = icmp slt i64 %25, %8
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  store i64 %25, i64* %9, align 8
  store i64 %8, i64* %12, align 8
  br label %28

28:                                               ; preds = %27, %24, %23, %20, %16, %15
  %29 = phi i64 [ %8, %23 ], [ %13, %15 ], [ %21, %20 ], [ %10, %16 ], [ %8, %27 ], [ %25, %24 ]
  %30 = phi i32 [ 1, %23 ], [ 0, %15 ], [ 2, %20 ], [ 1, %16 ], [ 2, %27 ], [ 1, %24 ]
  %31 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %3, i64 0, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = icmp slt i64 %32, %29
  br i1 %33, label %34, label %46

34:                                               ; preds = %28
  store i64 %32, i64* %12, align 8
  store i64 %29, i64* %31, align 8
  %35 = add nuw nsw i32 %30, 1
  %36 = load i64, i64* %9, align 8
  %37 = load i64, i64* %12, align 8
  %38 = icmp slt i64 %37, %36
  br i1 %38, label %39, label %46

39:                                               ; preds = %34
  store i64 %37, i64* %9, align 8
  store i64 %36, i64* %12, align 8
  %40 = add nuw nsw i32 %30, 2
  %41 = load i64, i64* %7, align 8
  %42 = load i64, i64* %9, align 8
  %43 = icmp slt i64 %42, %41
  br i1 %43, label %44, label %46

44:                                               ; preds = %39
  store i64 %42, i64* %7, align 8
  store i64 %41, i64* %9, align 8
  %45 = add nuw nsw i32 %30, 3
  br label %46

46:                                               ; preds = %28, %34, %39, %44
  %47 = phi i32 [ %45, %44 ], [ %40, %39 ], [ %35, %34 ], [ %30, %28 ]
  %48 = load i64, i64* %31, align 8
  %49 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %4, i64 0, i32 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp slt i64 %50, %48
  br i1 %51, label %52, label %69

52:                                               ; preds = %46
  store i64 %50, i64* %31, align 8
  store i64 %48, i64* %49, align 8
  %53 = add nuw nsw i32 %47, 1
  %54 = load i64, i64* %12, align 8
  %55 = load i64, i64* %31, align 8
  %56 = icmp slt i64 %55, %54
  br i1 %56, label %57, label %69

57:                                               ; preds = %52
  store i64 %55, i64* %12, align 8
  store i64 %54, i64* %31, align 8
  %58 = add nuw nsw i32 %47, 2
  %59 = load i64, i64* %9, align 8
  %60 = load i64, i64* %12, align 8
  %61 = icmp slt i64 %60, %59
  br i1 %61, label %62, label %69

62:                                               ; preds = %57
  store i64 %60, i64* %9, align 8
  store i64 %59, i64* %12, align 8
  %63 = add nuw nsw i32 %47, 3
  %64 = load i64, i64* %7, align 8
  %65 = load i64, i64* %9, align 8
  %66 = icmp slt i64 %65, %64
  br i1 %66, label %67, label %69

67:                                               ; preds = %62
  store i64 %65, i64* %7, align 8
  store i64 %64, i64* %9, align 8
  %68 = add nuw nsw i32 %47, 4
  br label %69

69:                                               ; preds = %52, %62, %67, %57, %46
  %70 = phi i32 [ %68, %67 ], [ %63, %62 ], [ %58, %57 ], [ %53, %52 ], [ %47, %46 ]
  ret i32 %70
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessIN4base4TimeES3_EEPS3_EEbT0_S7_T_(%"class.base::Time"*, %"class.base::Time"*, %"struct.std::__1::__less"* dereferenceable(1)) local_unnamed_addr #4 comdat {
  %4 = ptrtoint %"class.base::Time"* %1 to i64
  %5 = ptrtoint %"class.base::Time"* %0 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  switch i64 %7, label %73 [
    i64 0, label %130
    i64 1, label %130
    i64 2, label %8
    i64 3, label %15
    i64 4, label %36
    i64 5, label %67
  ]

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %0, i64 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %1, i64 -1, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp slt i64 %12, %10
  br i1 %13, label %14, label %130

14:                                               ; preds = %8
  store i64 %12, i64* %9, align 8
  store i64 %10, i64* %11, align 8
  br label %130

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %0, i64 0, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %0, i64 1, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp slt i64 %19, %17
  %21 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %1, i64 -1, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp slt i64 %22, %19
  br i1 %20, label %30, label %24

24:                                               ; preds = %15
  br i1 %23, label %25, label %130

25:                                               ; preds = %24
  store i64 %22, i64* %18, align 8
  store i64 %19, i64* %21, align 8
  %26 = load i64, i64* %16, align 8
  %27 = load i64, i64* %18, align 8
  %28 = icmp slt i64 %27, %26
  br i1 %28, label %29, label %130

29:                                               ; preds = %25
  store i64 %27, i64* %16, align 8
  store i64 %26, i64* %18, align 8
  br label %130

30:                                               ; preds = %15
  br i1 %23, label %31, label %32

31:                                               ; preds = %30
  store i64 %22, i64* %16, align 8
  store i64 %17, i64* %21, align 8
  br label %130

32:                                               ; preds = %30
  store i64 %19, i64* %16, align 8
  store i64 %17, i64* %18, align 8
  %33 = load i64, i64* %21, align 8
  %34 = icmp slt i64 %33, %17
  br i1 %34, label %35, label %130

35:                                               ; preds = %32
  store i64 %33, i64* %18, align 8
  store i64 %17, i64* %21, align 8
  br label %130

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %0, i64 0, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %0, i64 1, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp slt i64 %40, %38
  %42 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %0, i64 2, i32 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = icmp slt i64 %43, %40
  br i1 %41, label %49, label %45

45:                                               ; preds = %36
  br i1 %44, label %46, label %54

46:                                               ; preds = %45
  store i64 %43, i64* %39, align 8
  store i64 %40, i64* %42, align 8
  %47 = icmp slt i64 %43, %38
  br i1 %47, label %48, label %54

48:                                               ; preds = %46
  store i64 %43, i64* %37, align 8
  store i64 %38, i64* %39, align 8
  br label %54

49:                                               ; preds = %36
  br i1 %44, label %50, label %51

50:                                               ; preds = %49
  store i64 %43, i64* %37, align 8
  store i64 %38, i64* %42, align 8
  br label %54

51:                                               ; preds = %49
  store i64 %40, i64* %37, align 8
  store i64 %38, i64* %39, align 8
  %52 = icmp slt i64 %43, %38
  br i1 %52, label %53, label %54

53:                                               ; preds = %51
  store i64 %43, i64* %39, align 8
  store i64 %38, i64* %42, align 8
  br label %54

54:                                               ; preds = %53, %51, %50, %48, %46, %45
  %55 = phi i64 [ %38, %50 ], [ %43, %45 ], [ %40, %48 ], [ %40, %46 ], [ %38, %53 ], [ %43, %51 ]
  %56 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %1, i64 -1, i32 0, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = icmp slt i64 %57, %55
  br i1 %58, label %59, label %130

59:                                               ; preds = %54
  store i64 %57, i64* %42, align 8
  store i64 %55, i64* %56, align 8
  %60 = load i64, i64* %39, align 8
  %61 = load i64, i64* %42, align 8
  %62 = icmp slt i64 %61, %60
  br i1 %62, label %63, label %130

63:                                               ; preds = %59
  store i64 %61, i64* %39, align 8
  store i64 %60, i64* %42, align 8
  %64 = load i64, i64* %37, align 8
  %65 = icmp slt i64 %61, %64
  br i1 %65, label %66, label %130

66:                                               ; preds = %63
  store i64 %61, i64* %37, align 8
  store i64 %64, i64* %39, align 8
  br label %130

67:                                               ; preds = %3
  %68 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %0, i64 1
  %69 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %0, i64 2
  %70 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %0, i64 3
  %71 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %1, i64 -1
  %72 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessIN4base4TimeES3_EEPS3_EEjT0_S7_S7_S7_S7_T_(%"class.base::Time"* %0, %"class.base::Time"* %68, %"class.base::Time"* %69, %"class.base::Time"* %70, %"class.base::Time"* %71, %"struct.std::__1::__less"* dereferenceable(1) %2)
  br label %130

73:                                               ; preds = %3
  %74 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %0, i64 2
  %75 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %0, i64 0, i32 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %0, i64 1, i32 0, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = icmp slt i64 %78, %76
  %80 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %74, i64 0, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = icmp slt i64 %81, %78
  br i1 %79, label %87, label %83

83:                                               ; preds = %73
  br i1 %82, label %84, label %92

84:                                               ; preds = %83
  store i64 %81, i64* %77, align 8
  store i64 %78, i64* %80, align 8
  %85 = icmp slt i64 %81, %76
  br i1 %85, label %86, label %92

86:                                               ; preds = %84
  store i64 %81, i64* %75, align 8
  store i64 %76, i64* %77, align 8
  br label %92

87:                                               ; preds = %73
  br i1 %82, label %88, label %89

88:                                               ; preds = %87
  store i64 %81, i64* %75, align 8
  store i64 %76, i64* %80, align 8
  br label %92

89:                                               ; preds = %87
  store i64 %78, i64* %75, align 8
  store i64 %76, i64* %77, align 8
  %90 = icmp slt i64 %81, %76
  br i1 %90, label %91, label %92

91:                                               ; preds = %89
  store i64 %81, i64* %77, align 8
  store i64 %76, i64* %80, align 8
  br label %92

92:                                               ; preds = %83, %84, %86, %88, %89, %91
  %93 = phi i64 [ %81, %83 ], [ %78, %84 ], [ %78, %86 ], [ %76, %88 ], [ %81, %89 ], [ %76, %91 ]
  %94 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %0, i64 3
  %95 = icmp eq %"class.base::Time"* %94, %1
  br i1 %95, label %130, label %96

96:                                               ; preds = %92, %124
  %97 = phi i64 [ %126, %124 ], [ %93, %92 ]
  %98 = phi %"class.base::Time"* [ %122, %124 ], [ %94, %92 ]
  %99 = phi i32 [ %121, %124 ], [ 0, %92 ]
  %100 = phi %"class.base::Time"* [ %98, %124 ], [ %74, %92 ]
  %101 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %98, i64 0, i32 0, i32 0
  %102 = load i64, i64* %101, align 8
  %103 = icmp slt i64 %102, %97
  br i1 %103, label %104, label %120

104:                                              ; preds = %96, %110
  %105 = phi i64 [ %113, %110 ], [ %97, %96 ]
  %106 = phi %"class.base::Time"* [ %107, %110 ], [ %98, %96 ]
  %107 = phi %"class.base::Time"* [ %111, %110 ], [ %100, %96 ]
  %108 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %106, i64 0, i32 0, i32 0
  store i64 %105, i64* %108, align 8
  %109 = icmp eq %"class.base::Time"* %107, %0
  br i1 %109, label %115, label %110

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %107, i64 -1
  %112 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %111, i64 0, i32 0, i32 0
  %113 = load i64, i64* %112, align 8
  %114 = icmp slt i64 %102, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %110
  %116 = phi %"class.base::Time"* [ %0, %104 ], [ %107, %110 ]
  %117 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %116, i64 0, i32 0, i32 0
  store i64 %102, i64* %117, align 8
  %118 = add i32 %99, 1
  %119 = icmp eq i32 %118, 8
  br i1 %119, label %127, label %120

120:                                              ; preds = %115, %96
  %121 = phi i32 [ %118, %115 ], [ %99, %96 ]
  %122 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %98, i64 1
  %123 = icmp eq %"class.base::Time"* %122, %1
  br i1 %123, label %130, label %124

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %98, i64 0, i32 0, i32 0
  %126 = load i64, i64* %125, align 8
  br label %96

127:                                              ; preds = %115
  %128 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %98, i64 1
  %129 = icmp eq %"class.base::Time"* %128, %1
  br label %130

130:                                              ; preds = %120, %127, %92, %66, %63, %59, %54, %35, %32, %31, %29, %25, %24, %8, %14, %3, %3, %67
  %131 = phi i1 [ true, %67 ], [ true, %3 ], [ true, %3 ], [ true, %14 ], [ true, %8 ], [ true, %24 ], [ true, %25 ], [ true, %29 ], [ true, %31 ], [ true, %32 ], [ true, %35 ], [ true, %54 ], [ true, %59 ], [ true, %63 ], [ true, %66 ], [ true, %92 ], [ %129, %127 ], [ true, %120 ]
  ret i1 %131
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIlN7history11VisitSourceEEENS_19__map_value_compareIlS4_NS_4lessIlEELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.72"*, %"class.std::__1::__tree_node.117"*) local_unnamed_addr #4 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.117"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.117"* %1 to %"class.std::__1::__tree_node.117"**
  %6 = load %"class.std::__1::__tree_node.117"*, %"class.std::__1::__tree_node.117"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIlN7history11VisitSourceEEENS_19__map_value_compareIlS4_NS_4lessIlEELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.72"* %0, %"class.std::__1::__tree_node.117"* %6) #16
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.117", %"class.std::__1::__tree_node.117"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.117"**
  %9 = load %"class.std::__1::__tree_node.117"*, %"class.std::__1::__tree_node.117"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIlN7history11VisitSourceEEENS_19__map_value_compareIlS4_NS_4lessIlEELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree.72"* %0, %"class.std::__1::__tree_node.117"* %9) #16
  %10 = bitcast %"class.std::__1::__tree_node.117"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #17
  ret void

11:                                               ; preds = %2
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN7history11DomainVisitENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJNS_12basic_stringIcNS_11char_traitsIcEENS3_IcEEEEN4base4TimeEEEEvDpOT_(%"class.std::__1::vector.83"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::Time"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.83", %"class.std::__1::vector.83"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.history::DomainVisit"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.83"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 5
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 576460752303423487
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector.83"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #15
  unreachable

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector.83", %"class.std::__1::vector.83"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.history::DomainVisit"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = ashr exact i64 %19, 5
  %21 = icmp ult i64 %20, 288230376151711743
  br i1 %21, label %22, label %30

22:                                               ; preds = %15
  %23 = ashr exact i64 %19, 4
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %22
  %28 = icmp ugt i64 %25, 576460752303423487
  br i1 %28, label %29, label %30

29:                                               ; preds = %27
  tail call void @abort() #15
  unreachable

30:                                               ; preds = %15, %27
  %31 = phi i64 [ %25, %27 ], [ 576460752303423487, %15 ]
  %32 = shl i64 %31, 5
  %33 = tail call i8* @_Znwm(i64 %32) #17
  %34 = bitcast i8* %33 to %"class.history::DomainVisit"*
  br label %35

35:                                               ; preds = %22, %30
  %36 = phi i64 [ %31, %30 ], [ 0, %22 ]
  %37 = phi %"class.history::DomainVisit"* [ %34, %30 ], [ null, %22 ]
  %38 = getelementptr inbounds %"class.history::DomainVisit", %"class.history::DomainVisit"* %37, i64 %10
  %39 = getelementptr inbounds %"class.history::DomainVisit", %"class.history::DomainVisit"* %37, i64 %36
  %40 = ptrtoint %"class.history::DomainVisit"* %39 to i64
  %41 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %2, i64 0, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = bitcast %"class.history::DomainVisit"* %38 to i8*
  %49 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 24, i1 false) #16
  br label %56

50:                                               ; preds = %35
  %51 = getelementptr inbounds %"class.history::DomainVisit", %"class.history::DomainVisit"* %38, i64 0, i32 0
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %51, i8* %53, i64 %55) #16
  br label %56

56:                                               ; preds = %47, %50
  %57 = getelementptr inbounds %"class.history::DomainVisit", %"class.history::DomainVisit"* %37, i64 %10, i32 1, i32 0, i32 0
  store i64 %42, i64* %57, align 8
  %58 = getelementptr inbounds %"class.history::DomainVisit", %"class.history::DomainVisit"* %38, i64 1
  %59 = ptrtoint %"class.history::DomainVisit"* %58 to i64
  %60 = getelementptr inbounds %"class.std::__1::vector.83", %"class.std::__1::vector.83"* %0, i64 0, i32 0, i32 0
  %61 = load %"class.history::DomainVisit"*, %"class.history::DomainVisit"** %60, align 8
  %62 = ptrtoint %"class.history::DomainVisit"* %61 to i64
  %63 = load %"class.history::DomainVisit"*, %"class.history::DomainVisit"** %4, align 8
  %64 = icmp eq %"class.history::DomainVisit"* %63, %61
  br i1 %64, label %106, label %65

65:                                               ; preds = %56
  %66 = getelementptr %"class.history::DomainVisit", %"class.history::DomainVisit"* %63, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = ptrtoint i8** %66 to i64
  %68 = sub i64 %67, %62
  %69 = and i64 %68, 32
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %79

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.history::DomainVisit", %"class.history::DomainVisit"* %38, i64 -1
  %73 = getelementptr inbounds %"class.history::DomainVisit", %"class.history::DomainVisit"* %63, i64 -1
  %74 = bitcast %"class.history::DomainVisit"* %72 to i8*
  %75 = bitcast %"class.history::DomainVisit"* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 24, i1 false) #16
  %76 = getelementptr inbounds %"class.history::DomainVisit", %"class.history::DomainVisit"* %63, i64 -1, i32 1, i32 0, i32 0
  %77 = getelementptr inbounds %"class.history::DomainVisit", %"class.history::DomainVisit"* %38, i64 -1, i32 1, i32 0, i32 0
  %78 = load i64, i64* %76, align 8
  store i64 %78, i64* %77, align 8
  br label %79

79:                                               ; preds = %71, %65
  %80 = phi %"class.history::DomainVisit"* [ undef, %65 ], [ %72, %71 ]
  %81 = phi %"class.history::DomainVisit"* [ %38, %65 ], [ %72, %71 ]
  %82 = phi %"class.history::DomainVisit"* [ %63, %65 ], [ %73, %71 ]
  %83 = icmp ult i64 %68, 32
  br i1 %83, label %102, label %84

84:                                               ; preds = %79, %84
  %85 = phi %"class.history::DomainVisit"* [ %94, %84 ], [ %81, %79 ]
  %86 = phi %"class.history::DomainVisit"* [ %95, %84 ], [ %82, %79 ]
  %87 = getelementptr inbounds %"class.history::DomainVisit", %"class.history::DomainVisit"* %85, i64 -1
  %88 = getelementptr inbounds %"class.history::DomainVisit", %"class.history::DomainVisit"* %86, i64 -1
  %89 = bitcast %"class.history::DomainVisit"* %87 to i8*
  %90 = bitcast %"class.history::DomainVisit"* %88 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 24, i1 false) #16
  %91 = getelementptr inbounds %"class.history::DomainVisit", %"class.history::DomainVisit"* %86, i64 -1, i32 1, i32 0, i32 0
  %92 = getelementptr inbounds %"class.history::DomainVisit", %"class.history::DomainVisit"* %85, i64 -1, i32 1, i32 0, i32 0
  %93 = load i64, i64* %91, align 8
  store i64 %93, i64* %92, align 8
  %94 = getelementptr inbounds %"class.history::DomainVisit", %"class.history::DomainVisit"* %85, i64 -2
  %95 = getelementptr inbounds %"class.history::DomainVisit", %"class.history::DomainVisit"* %86, i64 -2
  %96 = bitcast %"class.history::DomainVisit"* %94 to i8*
  %97 = bitcast %"class.history::DomainVisit"* %95 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %97, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %97, i8 0, i64 24, i1 false) #16
  %98 = getelementptr inbounds %"class.history::DomainVisit", %"class.history::DomainVisit"* %86, i64 -2, i32 1, i32 0, i32 0
  %99 = getelementptr inbounds %"class.history::DomainVisit", %"class.history::DomainVisit"* %85, i64 -2, i32 1, i32 0, i32 0
  %100 = load i64, i64* %98, align 8
  store i64 %100, i64* %99, align 8
  %101 = icmp eq %"class.history::DomainVisit"* %95, %61
  br i1 %101, label %102, label %84

102:                                              ; preds = %84, %79
  %103 = phi %"class.history::DomainVisit"* [ %80, %79 ], [ %94, %84 ]
  %104 = load i64, i64* %7, align 8
  %105 = load %"class.history::DomainVisit"*, %"class.history::DomainVisit"** %4, align 8
  br label %106

106:                                              ; preds = %56, %102
  %107 = phi %"class.history::DomainVisit"* [ %105, %102 ], [ %61, %56 ]
  %108 = phi %"class.history::DomainVisit"* [ %103, %102 ], [ %38, %56 ]
  %109 = phi i64 [ %104, %102 ], [ %62, %56 ]
  %110 = ptrtoint %"class.history::DomainVisit"* %108 to i64
  store i64 %110, i64* %7, align 8
  store i64 %59, i64* %5, align 8
  store i64 %40, i64* %17, align 8
  %111 = inttoptr i64 %109 to %"class.history::DomainVisit"*
  %112 = icmp eq %"class.history::DomainVisit"* %107, %111
  br i1 %112, label %125, label %113

113:                                              ; preds = %106, %123
  %114 = phi %"class.history::DomainVisit"* [ %115, %123 ], [ %107, %106 ]
  %115 = getelementptr inbounds %"class.history::DomainVisit", %"class.history::DomainVisit"* %114, i64 -1
  %116 = bitcast %"class.history::DomainVisit"* %115 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  %118 = load i8, i8* %117, align 1
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %120, label %123

120:                                              ; preds = %113
  %121 = getelementptr inbounds %"class.history::DomainVisit", %"class.history::DomainVisit"* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load i8*, i8** %121, align 8
  tail call void @_ZdlPv(i8* %122) #17
  br label %123

123:                                              ; preds = %120, %113
  %124 = icmp eq %"class.history::DomainVisit"* %115, %111
  br i1 %124, label %125, label %113

125:                                              ; preds = %123, %106
  %126 = icmp eq i64 %109, 0
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  %128 = inttoptr i64 %109 to i8*
  tail call void @_ZdlPv(i8* %128) #17
  br label %129

129:                                              ; preds = %125, %127
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noreturn nounwind }
attributes #16 = { nounwind }
attributes #17 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__16__treeIlNS_4lessIlEENS_9allocatorIlEEE16__construct_nodeIJRKlEEENS_10unique_ptrINS_11__tree_nodeIlPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__16__treeIlNS_4lessIlEENS_9allocatorIlEEE16__construct_nodeIJRKlEEENS_10unique_ptrINS_11__tree_nodeIlPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_"}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_S6_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_S6_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_S6_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_S6_"}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.unroll.disable"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNSt3__16__treeINS_12__value_typeIlN7history11VisitSourceEEENS_19__map_value_compareIlS4_NS_4lessIlEELb1EEENS_9allocatorIS4_EEE16__construct_nodeIJRNS_4pairIlS3_EEEEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS9_ISJ_EEEEEEDpOT_: argument 0"}
!16 = distinct !{!16, !"_ZNSt3__16__treeINS_12__value_typeIlN7history11VisitSourceEEENS_19__map_value_compareIlS4_NS_4lessIlEELb1EEENS_9allocatorIS4_EEE16__construct_nodeIJRNS_4pairIlS3_EEEEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS9_ISJ_EEEEEEDpOT_"}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!19 = distinct !{!19, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!20 = distinct !{!20, !21, !"_ZNK4GURL4hostEv: argument 0"}
!21 = distinct !{!21, !"_ZNK4GURL4hostEv"}
!22 = distinct !{!22, !13}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNSt3__16__treeINS_4pairIN4base4TimeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_4lessISA_EENS7_ISA_EEE16__construct_nodeIJS3_S9_EEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS7_ISJ_EEEEEEDpOT_: argument 0"}
!25 = distinct !{!25, !"_ZNSt3__16__treeINS_4pairIN4base4TimeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_4lessISA_EENS7_ISA_EEE16__construct_nodeIJS3_S9_EEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS7_ISJ_EEEEEEDpOT_"}
