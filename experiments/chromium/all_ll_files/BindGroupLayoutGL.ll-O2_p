; ModuleID = '../../third_party/dawn/src/dawn_native/opengl/BindGroupLayoutGL.cpp'
source_filename = "../../third_party/dawn/src/dawn_native/opengl/BindGroupLayoutGL.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.dawn_native::opengl::BindGroupLayout" = type { %"class.dawn_native::BindGroupLayoutBase", %class.SlabAllocator }
%"class.dawn_native::BindGroupLayoutBase" = type { %"class.dawn_native::CachedObject.base", %"struct.dawn_native::BindingCounts", %"class.ityp::vector", %"class.std::__1::map" }
%"class.dawn_native::CachedObject.base" = type <{ %"class.dawn_native::ObjectBase", i8, [7 x i8], i64, i8 }>
%"class.dawn_native::ObjectBase" = type { %class.RefCounted, %"class.dawn_native::DeviceBase"* }
%class.RefCounted = type { i32 (...)**, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"struct.dawn_native::BindingCounts" = type { i32, i32, i32, i32, i32, %"class.dawn_native::PerStage" }
%"class.dawn_native::PerStage" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [3 x %"struct.dawn_native::PerStageBindingCounts"] }
%"struct.dawn_native::PerStageBindingCounts" = type { i32, i32, i32, i32, i32 }
%"class.ityp::vector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.dawn_native::BindingInfo"*, %"struct.dawn_native::BindingInfo"*, %"class.std::__1::__compressed_pair" }
%"struct.dawn_native::BindingInfo" = type { i32, i32, i32, %"struct.dawn_native::BufferBindingLayout", %"struct.dawn_native::SamplerBindingLayout", %"struct.dawn_native::TextureBindingLayout", %"struct.dawn_native::StorageTextureBindingLayout" }
%"struct.dawn_native::BufferBindingLayout" = type { %"struct.dawn_native::ChainedStruct"*, i32, i8, i64 }
%"struct.dawn_native::ChainedStruct" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, [4 x i8] }>
%"struct.dawn_native::SamplerBindingLayout" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, [4 x i8] }>
%"struct.dawn_native::TextureBindingLayout" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, i32, i8, [7 x i8] }>
%"struct.dawn_native::StorageTextureBindingLayout" = type <{ %"struct.dawn_native::ChainedStruct"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.dawn_native::BindingInfo"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2", %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i64 }
%class.SlabAllocator = type { %class.SlabAllocatorImpl }
%class.SlabAllocatorImpl = type { i32, i32, i32, i32, i16, i64, %"struct.SlabAllocatorImpl::SentinelSlab", %"struct.SlabAllocatorImpl::SentinelSlab", %"struct.SlabAllocatorImpl::SentinelSlab" }
%"struct.SlabAllocatorImpl::SentinelSlab" = type { %"struct.SlabAllocatorImpl::Slab.base", [6 x i8] }
%"struct.SlabAllocatorImpl::Slab.base" = type <{ i8*, %"struct.SlabAllocatorImpl::IndexLinkNode"*, %"struct.SlabAllocatorImpl::Slab"*, %"struct.SlabAllocatorImpl::Slab"*, i16 }>
%"struct.SlabAllocatorImpl::IndexLinkNode" = type { i16, i16 }
%"struct.SlabAllocatorImpl::Slab" = type <{ i8*, %"struct.SlabAllocatorImpl::IndexLinkNode"*, %"struct.SlabAllocatorImpl::Slab"*, %"struct.SlabAllocatorImpl::Slab"*, i16, [6 x i8] }>
%"class.dawn_native::DeviceBase" = type opaque
%"struct.dawn_native::BindGroupLayoutDescriptor" = type { %"struct.dawn_native::ChainedStruct"*, i8*, i32, %"struct.dawn_native::BindGroupLayoutEntry"* }
%"struct.dawn_native::BindGroupLayoutEntry" = type { %"struct.dawn_native::ChainedStruct"*, i32, i32, %"struct.dawn_native::BufferBindingLayout", %"struct.dawn_native::SamplerBindingLayout", %"struct.dawn_native::TextureBindingLayout", %"struct.dawn_native::StorageTextureBindingLayout" }
%class.Ref = type { %class.RefBase }
%class.RefBase = type { %"class.dawn_native::opengl::BindGroup"* }
%"class.dawn_native::opengl::BindGroup" = type { %"class.dawn_native::BindGroupBase" }
%"class.dawn_native::BindGroupBase" = type { %"class.dawn_native::ObjectBase", %class.Ref.10, %"struct.dawn_native::BindGroupLayoutBase::BindingDataPointers" }
%class.Ref.10 = type { %class.RefBase.11 }
%class.RefBase.11 = type { %"class.dawn_native::BindGroupLayoutBase"* }
%"struct.dawn_native::BindGroupLayoutBase::BindingDataPointers" = type { %"class.ityp::span", %"class.ityp::span.12", %"class.ityp::span.16" }
%"class.ityp::span" = type <{ %"struct.dawn_native::BindGroupLayoutBase::BufferBindingData"*, i32, [4 x i8] }>
%"struct.dawn_native::BindGroupLayoutBase::BufferBindingData" = type { i64, i64 }
%"class.ityp::span.12" = type <{ %class.Ref.13*, i32, [4 x i8] }>
%class.Ref.13 = type { %class.RefBase.14 }
%class.RefBase.14 = type { %"class.dawn_native::ObjectBase"* }
%"class.ityp::span.16" = type <{ i64*, i32, [4 x i8] }>
%"class.dawn_native::opengl::Device" = type opaque
%"struct.dawn_native::BindGroupDescriptor" = type { %"struct.dawn_native::ChainedStruct"*, i8*, %"class.dawn_native::BindGroupLayoutBase"*, i32, %"struct.dawn_native::BindGroupEntry"* }
%"struct.dawn_native::BindGroupEntry" = type { i32, %"class.dawn_native::BufferBase"*, i64, i64, %"class.dawn_native::SamplerBase"*, %"class.dawn_native::TextureViewBase"* }
%"class.dawn_native::BufferBase" = type opaque
%"class.dawn_native::SamplerBase" = type opaque
%"class.dawn_native::TextureViewBase" = type opaque

$_ZN11dawn_native6opengl15BindGroupLayoutD2Ev = comdat any

$_ZN11dawn_native6opengl15BindGroupLayoutD0Ev = comdat any

$_ZTVN11dawn_native6opengl15BindGroupLayoutE = comdat any

@_ZTVN11dawn_native6opengl15BindGroupLayoutE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.dawn_native::opengl::BindGroupLayout"*)* @_ZN11dawn_native6opengl15BindGroupLayoutD2Ev to i8*), i8* bitcast (void (%"class.dawn_native::opengl::BindGroupLayout"*)* @_ZN11dawn_native6opengl15BindGroupLayoutD0Ev to i8*), i8* bitcast (void (%class.RefCounted*)* @_ZN10RefCounted10DeleteThisEv to i8*), i8* bitcast (i64 (%"class.dawn_native::BindGroupLayoutBase"*)* @_ZN11dawn_native19BindGroupLayoutBase18ComputeContentHashEv to i8*)] }, comdat, align 8

@_ZN11dawn_native6opengl15BindGroupLayoutC1EPNS_10DeviceBaseEPKNS_25BindGroupLayoutDescriptorE = hidden unnamed_addr alias void (%"class.dawn_native::opengl::BindGroupLayout"*, %"class.dawn_native::DeviceBase"*, %"struct.dawn_native::BindGroupLayoutDescriptor"*), void (%"class.dawn_native::opengl::BindGroupLayout"*, %"class.dawn_native::DeviceBase"*, %"struct.dawn_native::BindGroupLayoutDescriptor"*)* @_ZN11dawn_native6opengl15BindGroupLayoutC2EPNS_10DeviceBaseEPKNS_25BindGroupLayoutDescriptorE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl15BindGroupLayoutC2EPNS_10DeviceBaseEPKNS_25BindGroupLayoutDescriptorE(%"class.dawn_native::opengl::BindGroupLayout"*, %"class.dawn_native::DeviceBase"*, %"struct.dawn_native::BindGroupLayoutDescriptor"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.dawn_native::opengl::BindGroupLayout", %"class.dawn_native::opengl::BindGroupLayout"* %0, i64 0, i32 0
  tail call void @_ZN11dawn_native19BindGroupLayoutBaseC2EPNS_10DeviceBaseEPKNS_25BindGroupLayoutDescriptorE(%"class.dawn_native::BindGroupLayoutBase"* %4, %"class.dawn_native::DeviceBase"* %1, %"struct.dawn_native::BindGroupLayoutDescriptor"* %2) #4
  %5 = getelementptr inbounds %"class.dawn_native::opengl::BindGroupLayout", %"class.dawn_native::opengl::BindGroupLayout"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11dawn_native6opengl15BindGroupLayoutE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = tail call i64 @_ZNK11dawn_native19BindGroupLayoutBase18GetBindingDataSizeEv(%"class.dawn_native::BindGroupLayoutBase"* %4) #4, !noalias !2
  %7 = trunc i64 %6 to i32
  %8 = add i32 %7, 80
  %9 = getelementptr inbounds %"class.dawn_native::opengl::BindGroupLayout", %"class.dawn_native::opengl::BindGroupLayout"* %0, i64 0, i32 1, i32 0
  %10 = udiv i32 4096, %8
  %11 = trunc i32 %10 to i16
  tail call void @_ZN17SlabAllocatorImplC2Etjj(%class.SlabAllocatorImpl* %9, i16 zeroext %11, i32 %8, i32 8) #4
  ret void
}

declare void @_ZN11dawn_native19BindGroupLayoutBaseC2EPNS_10DeviceBaseEPKNS_25BindGroupLayoutDescriptorE(%"class.dawn_native::BindGroupLayoutBase"*, %"class.dawn_native::DeviceBase"*, %"struct.dawn_native::BindGroupLayoutDescriptor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl15BindGroupLayout17AllocateBindGroupEPNS0_6DeviceEPKNS_19BindGroupDescriptorE(%class.Ref* noalias nocapture sret, %"class.dawn_native::opengl::BindGroupLayout"*, %"class.dawn_native::opengl::Device"*, %"struct.dawn_native::BindGroupDescriptor"*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.dawn_native::opengl::BindGroupLayout", %"class.dawn_native::opengl::BindGroupLayout"* %1, i64 0, i32 1, i32 0
  %6 = tail call i8* @_ZN17SlabAllocatorImpl8AllocateEv(%class.SlabAllocatorImpl* %5) #4
  %7 = bitcast i8* %6 to %"class.dawn_native::opengl::BindGroup"*
  tail call void @_ZN11dawn_native6opengl9BindGroupC1EPNS0_6DeviceEPKNS_19BindGroupDescriptorE(%"class.dawn_native::opengl::BindGroup"* %7, %"class.dawn_native::opengl::Device"* %2, %"struct.dawn_native::BindGroupDescriptor"* %3) #4
  %8 = bitcast %class.Ref* %0 to i8**
  store i8* %6, i8** %8, align 8, !alias.scope !5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6opengl15BindGroupLayout19DeallocateBindGroupEPNS0_9BindGroupE(%"class.dawn_native::opengl::BindGroupLayout"*, %"class.dawn_native::opengl::BindGroup"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.dawn_native::opengl::BindGroupLayout", %"class.dawn_native::opengl::BindGroupLayout"* %0, i64 0, i32 1, i32 0
  %4 = bitcast %"class.dawn_native::opengl::BindGroup"* %1 to i8*
  tail call void @_ZN17SlabAllocatorImpl10DeallocateEPv(%class.SlabAllocatorImpl* %3, i8* %4) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11dawn_native6opengl15BindGroupLayoutD2Ev(%"class.dawn_native::opengl::BindGroupLayout"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::opengl::BindGroupLayout", %"class.dawn_native::opengl::BindGroupLayout"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11dawn_native6opengl15BindGroupLayoutE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.dawn_native::opengl::BindGroupLayout", %"class.dawn_native::opengl::BindGroupLayout"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN17SlabAllocatorImplD2Ev(%class.SlabAllocatorImpl* %3) #4
  %4 = getelementptr inbounds %"class.dawn_native::opengl::BindGroupLayout", %"class.dawn_native::opengl::BindGroupLayout"* %0, i64 0, i32 0
  tail call void @_ZN11dawn_native19BindGroupLayoutBaseD2Ev(%"class.dawn_native::BindGroupLayoutBase"* %4) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11dawn_native6opengl15BindGroupLayoutD0Ev(%"class.dawn_native::opengl::BindGroupLayout"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::opengl::BindGroupLayout", %"class.dawn_native::opengl::BindGroupLayout"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN11dawn_native6opengl15BindGroupLayoutE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.dawn_native::opengl::BindGroupLayout", %"class.dawn_native::opengl::BindGroupLayout"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN17SlabAllocatorImplD2Ev(%class.SlabAllocatorImpl* %3) #4
  %4 = getelementptr inbounds %"class.dawn_native::opengl::BindGroupLayout", %"class.dawn_native::opengl::BindGroupLayout"* %0, i64 0, i32 0
  tail call void @_ZN11dawn_native19BindGroupLayoutBaseD2Ev(%"class.dawn_native::BindGroupLayoutBase"* %4) #4
  %5 = bitcast %"class.dawn_native::opengl::BindGroupLayout"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #5
  ret void
}

declare void @_ZN10RefCounted10DeleteThisEv(%class.RefCounted*) unnamed_addr #1

declare i64 @_ZN11dawn_native19BindGroupLayoutBase18ComputeContentHashEv(%"class.dawn_native::BindGroupLayoutBase"*) unnamed_addr #1

declare i64 @_ZNK11dawn_native19BindGroupLayoutBase18GetBindingDataSizeEv(%"class.dawn_native::BindGroupLayoutBase"*) local_unnamed_addr #1

declare void @_ZN17SlabAllocatorImplC2Etjj(%class.SlabAllocatorImpl*, i16 zeroext, i32, i32) unnamed_addr #1

declare i8* @_ZN17SlabAllocatorImpl8AllocateEv(%class.SlabAllocatorImpl*) local_unnamed_addr #1

declare void @_ZN11dawn_native6opengl9BindGroupC1EPNS0_6DeviceEPKNS_19BindGroupDescriptorE(%"class.dawn_native::opengl::BindGroup"*, %"class.dawn_native::opengl::Device"*, %"struct.dawn_native::BindGroupDescriptor"*) unnamed_addr #1

declare void @_ZN17SlabAllocatorImpl10DeallocateEPv(%class.SlabAllocatorImpl*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN17SlabAllocatorImplD2Ev(%class.SlabAllocatorImpl*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN11dawn_native19BindGroupLayoutBaseD2Ev(%"class.dawn_native::BindGroupLayoutBase"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN11dawn_native19BindGroupLayoutBase30MakeFrontendBindGroupAllocatorINS_6opengl9BindGroupEEE13SlabAllocatorIT_Em: argument 0"}
!4 = distinct !{!4, !"_ZN11dawn_native19BindGroupLayoutBase30MakeFrontendBindGroupAllocatorINS_6opengl9BindGroupEEE13SlabAllocatorIT_Em"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_Z10AcquireRefIN11dawn_native6opengl9BindGroupEE3RefIT_EPS4_: argument 0"}
!7 = distinct !{!7, !"_Z10AcquireRefIN11dawn_native6opengl9BindGroupEE3RefIT_EPS4_"}
