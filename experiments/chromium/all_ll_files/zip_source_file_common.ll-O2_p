; ModuleID = '../../third_party/libzip/src/lib/zip_source_file_common.c'
source_filename = "../../third_party/libzip/src/lib/zip_source_file_common.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.zip_source = type { %struct.zip_source*, %union.anon, i8*, %struct.zip_error, i64, i32, i32, i8, %struct.zip*, i32, i8, i8 }
%union.anon = type { i64 (i8*, i8*, i64, i32)* }
%struct.zip_error = type { i32, i32, i8* }
%struct.zip = type { %struct.zip_source*, i32, %struct.zip_error, i32, i32, i8*, %struct.zip_string*, %struct.zip_string*, i8, i64, i64, %struct.zip_entry*, i32, i32, %struct.zip_source**, %struct.zip_hash*, %struct.zip_progress* }
%struct.zip_string = type { i8*, i16, i32, i8*, i32 }
%struct.zip_entry = type { %struct.zip_dirent*, %struct.zip_dirent*, %struct.zip_source*, i8 }
%struct.zip_dirent = type { i32, i8, i8, i8, i16, i16, i16, i32, i64, i32, i64, i64, %struct.zip_string*, %struct.zip_extra_field*, %struct.zip_string*, i32, i16, i32, i64, i16, i16, i8* }
%struct.zip_extra_field = type { %struct.zip_extra_field*, i32, i16, i16, i8* }
%struct.zip_hash = type opaque
%struct.zip_progress = type opaque
%struct.zip_stat = type { i64, i8*, i64, i64, i64, i64, i32, i16, i16, i32 }
%struct.zip_source_file_operations = type { void (%struct.zip_source_file_context*)*, i64 (%struct.zip_source_file_context*)*, i64 (%struct.zip_source_file_context*)*, i64 (%struct.zip_source_file_context*, i64)*, i1 (%struct.zip_source_file_context*)*, i64 (%struct.zip_source_file_context*, i8*, i64)*, i64 (%struct.zip_source_file_context*)*, void (%struct.zip_source_file_context*)*, i1 (%struct.zip_source_file_context*, i8*, i64, i32)*, i1 (%struct.zip_source_file_context*, %struct.zip_source_file_stat*)*, i8* (%struct.zip_source_file_context*, i8*)*, i64 (%struct.zip_source_file_context*, i8*)*, i64 (%struct.zip_source_file_context*, i8*, i64)* }
%struct.zip_source_file_context = type { %struct.zip_error, i64, i8*, i8*, %struct.zip_stat, %struct.zip_file_attributes, %struct.zip_error, i64, i64, i64, i8*, i8*, %struct.zip_source_file_operations*, i8* }
%struct.zip_file_attributes = type { i64, i8, i8, i8, i8, i32, i16, i16 }
%struct.zip_source_file_stat = type { i64, i64, i8, i8 }

; Function Attrs: nounwind ssp uwtable
define hidden %struct.zip_source* @zip_source_file_common_new(i8*, i8*, i64, i64, %struct.zip_stat* readonly, %struct.zip_source_file_operations*, i8*, %struct.zip_error*) local_unnamed_addr #0 {
  %9 = alloca %struct.zip_source_file_stat, align 8
  %10 = bitcast %struct.zip_source_file_stat* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  %11 = icmp eq %struct.zip_source_file_operations* %5, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %8
  tail call void @zip_error_set(%struct.zip_error* %7, i32 18, i32 0) #6
  br label %220

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.zip_source_file_operations, %struct.zip_source_file_operations* %5, i64 0, i32 0
  %15 = load void (%struct.zip_source_file_context*)*, void (%struct.zip_source_file_context*)** %14, align 8
  %16 = icmp eq void (%struct.zip_source_file_context*)* %15, null
  br i1 %16, label %29, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.zip_source_file_operations, %struct.zip_source_file_operations* %5, i64 0, i32 5
  %19 = load i64 (%struct.zip_source_file_context*, i8*, i64)*, i64 (%struct.zip_source_file_context*, i8*, i64)** %18, align 8
  %20 = icmp eq i64 (%struct.zip_source_file_context*, i8*, i64)* %19, null
  br i1 %20, label %29, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.zip_source_file_operations, %struct.zip_source_file_operations* %5, i64 0, i32 8
  %23 = load i1 (%struct.zip_source_file_context*, i8*, i64, i32)*, i1 (%struct.zip_source_file_context*, i8*, i64, i32)** %22, align 8
  %24 = icmp eq i1 (%struct.zip_source_file_context*, i8*, i64, i32)* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.zip_source_file_operations, %struct.zip_source_file_operations* %5, i64 0, i32 9
  %27 = load i1 (%struct.zip_source_file_context*, %struct.zip_source_file_stat*)*, i1 (%struct.zip_source_file_context*, %struct.zip_source_file_stat*)** %26, align 8
  %28 = icmp eq i1 (%struct.zip_source_file_context*, %struct.zip_source_file_stat*)* %27, null
  br i1 %28, label %29, label %30

29:                                               ; preds = %25, %21, %17, %13
  tail call void @zip_error_set(%struct.zip_error* %7, i32 20, i32 0) #6
  br label %220

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.zip_source_file_operations, %struct.zip_source_file_operations* %5, i64 0, i32 12
  %32 = load i64 (%struct.zip_source_file_context*, i8*, i64)*, i64 (%struct.zip_source_file_context*, i8*, i64)** %31, align 8
  %33 = icmp eq i64 (%struct.zip_source_file_context*, i8*, i64)* %32, null
  br i1 %33, label %55, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.zip_source_file_operations, %struct.zip_source_file_operations* %5, i64 0, i32 1
  %36 = load i64 (%struct.zip_source_file_context*)*, i64 (%struct.zip_source_file_context*)** %35, align 8
  %37 = icmp eq i64 (%struct.zip_source_file_context*)* %36, null
  br i1 %37, label %54, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.zip_source_file_operations, %struct.zip_source_file_operations* %5, i64 0, i32 2
  %40 = load i64 (%struct.zip_source_file_context*)*, i64 (%struct.zip_source_file_context*)** %39, align 8
  %41 = icmp eq i64 (%struct.zip_source_file_context*)* %40, null
  br i1 %41, label %54, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.zip_source_file_operations, %struct.zip_source_file_operations* %5, i64 0, i32 6
  %44 = load i64 (%struct.zip_source_file_context*)*, i64 (%struct.zip_source_file_context*)** %43, align 8
  %45 = icmp eq i64 (%struct.zip_source_file_context*)* %44, null
  br i1 %45, label %54, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %struct.zip_source_file_operations, %struct.zip_source_file_operations* %5, i64 0, i32 7
  %48 = load void (%struct.zip_source_file_context*)*, void (%struct.zip_source_file_context*)** %47, align 8
  %49 = icmp eq void (%struct.zip_source_file_context*)* %48, null
  br i1 %49, label %54, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %struct.zip_source_file_operations, %struct.zip_source_file_operations* %5, i64 0, i32 11
  %52 = load i64 (%struct.zip_source_file_context*, i8*)*, i64 (%struct.zip_source_file_context*, i8*)** %51, align 8
  %53 = icmp eq i64 (%struct.zip_source_file_context*, i8*)* %52, null
  br i1 %53, label %54, label %55

54:                                               ; preds = %50, %46, %42, %38, %34
  tail call void @zip_error_set(%struct.zip_error* %7, i32 20, i32 0) #6
  br label %220

55:                                               ; preds = %30, %50
  %56 = icmp ne i8* %0, null
  br i1 %56, label %57, label %66

57:                                               ; preds = %55
  %58 = getelementptr inbounds %struct.zip_source_file_operations, %struct.zip_source_file_operations* %5, i64 0, i32 4
  %59 = load i1 (%struct.zip_source_file_context*)*, i1 (%struct.zip_source_file_context*)** %58, align 8
  %60 = icmp eq i1 (%struct.zip_source_file_context*)* %59, null
  br i1 %60, label %65, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %struct.zip_source_file_operations, %struct.zip_source_file_operations* %5, i64 0, i32 10
  %63 = load i8* (%struct.zip_source_file_context*, i8*)*, i8* (%struct.zip_source_file_context*, i8*)** %62, align 8
  %64 = icmp eq i8* (%struct.zip_source_file_context*, i8*)* %63, null
  br i1 %64, label %65, label %69

65:                                               ; preds = %61, %57
  tail call void @zip_error_set(%struct.zip_error* %7, i32 20, i32 0) #6
  br label %220

66:                                               ; preds = %55
  %67 = icmp eq i8* %1, null
  br i1 %67, label %68, label %69

68:                                               ; preds = %66
  tail call void @zip_error_set(%struct.zip_error* %7, i32 18, i32 0) #6
  br label %220

69:                                               ; preds = %66, %61
  %70 = icmp sgt i64 %3, 0
  %71 = select i1 %70, i64 %3, i64 0
  %72 = icmp slt i64 %2, 0
  %73 = xor i64 %2, -1
  %74 = icmp ugt i64 %71, %73
  %75 = or i1 %72, %74
  br i1 %75, label %76, label %77

76:                                               ; preds = %69
  tail call void @zip_error_set(%struct.zip_error* %7, i32 18, i32 0) #6
  br label %220

77:                                               ; preds = %69
  %78 = tail call noalias i8* @malloc(i64 200) #6
  %79 = bitcast i8* %78 to %struct.zip_source_file_context*
  %80 = icmp eq i8* %78, null
  br i1 %80, label %81, label %82

81:                                               ; preds = %77
  tail call void @zip_error_set(%struct.zip_error* %7, i32 14, i32 0) #6
  br label %220

82:                                               ; preds = %77
  %83 = getelementptr inbounds i8, i8* %78, i64 184
  %84 = bitcast i8* %83 to %struct.zip_source_file_operations**
  store %struct.zip_source_file_operations* %5, %struct.zip_source_file_operations** %84, align 8
  %85 = getelementptr inbounds i8, i8* %78, i64 192
  %86 = bitcast i8* %85 to i8**
  store i8* %6, i8** %86, align 8
  %87 = getelementptr inbounds i8, i8* %78, i64 24
  %88 = bitcast i8* %87 to i8**
  store i8* null, i8** %88, align 8
  br i1 %56, label %89, label %95

89:                                               ; preds = %82
  %90 = getelementptr inbounds %struct.zip_source_file_operations, %struct.zip_source_file_operations* %5, i64 0, i32 10
  %91 = load i8* (%struct.zip_source_file_context*, i8*)*, i8* (%struct.zip_source_file_context*, i8*)** %90, align 8
  %92 = tail call i8* %91(%struct.zip_source_file_context* nonnull %79, i8* nonnull %0) #6
  store i8* %92, i8** %88, align 8
  %93 = icmp eq i8* %92, null
  br i1 %93, label %94, label %95

94:                                               ; preds = %89
  tail call void @zip_error_set(%struct.zip_error* %7, i32 14, i32 0) #6
  tail call void @free(i8* nonnull %78) #6
  br label %220

95:                                               ; preds = %89, %82
  %96 = getelementptr inbounds i8, i8* %78, i64 32
  %97 = bitcast i8* %96 to i8**
  store i8* %1, i8** %97, align 8
  %98 = getelementptr inbounds i8, i8* %78, i64 144
  %99 = bitcast i8* %98 to i64*
  store i64 %2, i64* %99, align 8
  %100 = getelementptr inbounds i8, i8* %78, i64 152
  %101 = bitcast i8* %100 to i64*
  store i64 %71, i64* %101, align 8
  %102 = icmp eq %struct.zip_stat* %4, null
  %103 = getelementptr inbounds i8, i8* %78, i64 40
  br i1 %102, label %111, label %104

104:                                              ; preds = %95
  %105 = bitcast %struct.zip_stat* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* nonnull align 8 %105, i64 64, i1 false)
  %106 = getelementptr inbounds i8, i8* %78, i64 48
  %107 = bitcast i8* %106 to i8**
  store i8* null, i8** %107, align 8
  %108 = bitcast i8* %103 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = and i64 %109, 4294967294
  store i64 %110, i64* %108, align 8
  br label %114

111:                                              ; preds = %95
  %112 = bitcast i8* %103 to %struct.zip_stat*
  tail call void @zip_stat_init(%struct.zip_stat* %112) #6
  %113 = load i64, i64* %101, align 8
  br label %114

114:                                              ; preds = %111, %104
  %115 = phi i64 [ %113, %111 ], [ %71, %104 ]
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %123, label %117

117:                                              ; preds = %114
  %118 = getelementptr inbounds i8, i8* %78, i64 64
  %119 = bitcast i8* %118 to i64*
  store i64 %115, i64* %119, align 8
  %120 = bitcast i8* %103 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = or i64 %121, 4
  store i64 %122, i64* %120, align 8
  br label %123

123:                                              ; preds = %114, %117
  %124 = getelementptr inbounds i8, i8* %78, i64 128
  %125 = bitcast i8* %124 to %struct.zip_error*
  tail call void @zip_error_init(%struct.zip_error* %125) #6
  %126 = getelementptr inbounds i8, i8* %78, i64 168
  %127 = bitcast i8* %78 to %struct.zip_error*
  call void @llvm.memset.p0i8.i64(i8* align 8 %126, i8 0, i64 16, i1 false)
  tail call void @zip_error_init(%struct.zip_error* nonnull %127) #6
  %128 = getelementptr inbounds i8, i8* %78, i64 104
  %129 = bitcast i8* %128 to %struct.zip_file_attributes*
  tail call void @zip_file_attributes_init(%struct.zip_file_attributes* %129) #6
  %130 = tail call i64 (i32, ...) @zip_source_make_command_bitmap(i32 14, i32 7, i32 -1) #6
  %131 = or i64 %130, 63
  %132 = getelementptr inbounds i8, i8* %78, i64 16
  %133 = bitcast i8* %132 to i64*
  store i64 %131, i64* %133, align 8
  %134 = getelementptr inbounds %struct.zip_source_file_stat, %struct.zip_source_file_stat* %9, i64 0, i32 0
  store i64 0, i64* %134, align 8
  %135 = tail call i64 @time(i64* null) #6
  %136 = getelementptr inbounds %struct.zip_source_file_stat, %struct.zip_source_file_stat* %9, i64 0, i32 1
  store i64 %135, i64* %136, align 8
  %137 = getelementptr inbounds %struct.zip_source_file_stat, %struct.zip_source_file_stat* %9, i64 0, i32 2
  store i8 0, i8* %137, align 8
  %138 = getelementptr inbounds %struct.zip_source_file_stat, %struct.zip_source_file_stat* %9, i64 0, i32 3
  store i8 0, i8* %138, align 1
  %139 = load i1 (%struct.zip_source_file_context*, %struct.zip_source_file_stat*)*, i1 (%struct.zip_source_file_context*, %struct.zip_source_file_stat*)** %26, align 8
  %140 = call zeroext i1 %139(%struct.zip_source_file_context* nonnull %79, %struct.zip_source_file_stat* nonnull %9) #6
  br i1 %140, label %143, label %141

141:                                              ; preds = %123
  call void @_zip_error_copy(%struct.zip_error* %7, %struct.zip_error* nonnull %127) #6
  %142 = load i8*, i8** %88, align 8
  call void @free(i8* %142) #6
  call void @free(i8* nonnull %78) #6
  br label %220

143:                                              ; preds = %123
  %144 = load i8, i8* %137, align 8, !range !2
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %146, label %162

146:                                              ; preds = %143
  %147 = load i8*, i8** %88, align 8
  %148 = icmp eq i8* %147, null
  br i1 %148, label %160, label %149

149:                                              ; preds = %146
  %150 = load i64, i64* %99, align 8
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %152, label %160

152:                                              ; preds = %149
  %153 = load i64, i64* %101, align 8
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %160

155:                                              ; preds = %152
  %156 = load i64 (%struct.zip_source_file_context*, i8*, i64)*, i64 (%struct.zip_source_file_context*, i8*, i64)** %31, align 8
  %157 = icmp eq i64 (%struct.zip_source_file_context*, i8*, i64)* %156, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %155
  store i64 65535, i64* %133, align 8
  call void @zip_error_set(%struct.zip_error* %125, i32 5, i32 2) #6
  %159 = load i64, i64* %133, align 8
  br label %204

160:                                              ; preds = %155, %146, %152, %149
  call void @zip_error_set(%struct.zip_error* %125, i32 5, i32 2) #6
  %161 = load i8*, i8** %88, align 8
  call void @free(i8* %161) #6
  call void @free(i8* nonnull %78) #6
  br label %220

162:                                              ; preds = %143
  %163 = bitcast i8* %103 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = and i64 %164, 16
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %172

167:                                              ; preds = %162
  %168 = load i64, i64* %136, align 8
  %169 = getelementptr inbounds i8, i8* %78, i64 80
  %170 = bitcast i8* %169 to i64*
  store i64 %168, i64* %170, align 8
  %171 = or i64 %164, 16
  store i64 %171, i64* %163, align 8
  br label %172

172:                                              ; preds = %167, %162
  %173 = phi i64 [ %171, %167 ], [ %164, %162 ]
  %174 = load i8, i8* %138, align 1, !range !2
  %175 = icmp eq i8 %174, 0
  br i1 %175, label %176, label %179

176:                                              ; preds = %172
  %177 = load i64, i64* %133, align 8
  %178 = or i64 %177, 524288
  br label %202

179:                                              ; preds = %172
  store i64 16639, i64* %133, align 8
  %180 = load i64, i64* %99, align 8
  %181 = load i64, i64* %101, align 8
  %182 = add i64 %181, %180
  %183 = load i64, i64* %134, align 8
  %184 = icmp ugt i64 %182, %183
  br i1 %184, label %185, label %187

185:                                              ; preds = %179
  call void @zip_error_set(%struct.zip_error* %7, i32 18, i32 0) #6
  %186 = load i8*, i8** %88, align 8
  call void @free(i8* %186) #6
  call void @free(i8* nonnull %78) #6
  br label %220

187:                                              ; preds = %179
  %188 = icmp eq i64 %181, 0
  br i1 %188, label %189, label %202

189:                                              ; preds = %187
  %190 = sub i64 %183, %180
  store i64 %190, i64* %101, align 8
  %191 = getelementptr inbounds i8, i8* %78, i64 64
  %192 = bitcast i8* %191 to i64*
  store i64 %190, i64* %192, align 8
  %193 = or i64 %173, 4
  store i64 %193, i64* %163, align 8
  %194 = load i8*, i8** %88, align 8
  %195 = icmp ne i8* %194, null
  %196 = icmp eq i64 %2, 0
  %197 = and i1 %196, %195
  br i1 %197, label %198, label %202

198:                                              ; preds = %189
  %199 = load i64 (%struct.zip_source_file_context*, i8*, i64)*, i64 (%struct.zip_source_file_context*, i8*, i64)** %31, align 8
  %200 = icmp eq i64 (%struct.zip_source_file_context*, i8*, i64)* %199, null
  br i1 %200, label %202, label %201

201:                                              ; preds = %198
  store i64 65535, i64* %133, align 8
  br label %202

202:                                              ; preds = %176, %198, %187, %201, %189
  %203 = phi i64 [ %178, %176 ], [ 540927, %198 ], [ 540927, %187 ], [ 589823, %201 ], [ 540927, %189 ]
  store i64 %203, i64* %133, align 8
  br label %204

204:                                              ; preds = %202, %158
  %205 = phi i64 [ %203, %202 ], [ %159, %158 ]
  %206 = or i64 %205, 262144
  store i64 %206, i64* %133, align 8
  %207 = getelementptr inbounds %struct.zip_source_file_operations, %struct.zip_source_file_operations* %5, i64 0, i32 3
  %208 = load i64 (%struct.zip_source_file_context*, i64)*, i64 (%struct.zip_source_file_context*, i64)** %207, align 8
  %209 = icmp eq i64 (%struct.zip_source_file_context*, i64)* %208, null
  %210 = and i64 %205, 256
  %211 = icmp eq i64 %210, 0
  %212 = or i1 %211, %209
  br i1 %212, label %215, label %213

213:                                              ; preds = %204
  %214 = or i64 %205, 393216
  store i64 %214, i64* %133, align 8
  br label %215

215:                                              ; preds = %204, %213
  %216 = call %struct.zip_source* @zip_source_function_create(i64 (i8*, i8*, i64, i32)* nonnull @read_file, i8* nonnull %78, %struct.zip_error* %7) #6
  %217 = icmp eq %struct.zip_source* %216, null
  br i1 %217, label %218, label %220

218:                                              ; preds = %215
  %219 = load i8*, i8** %88, align 8
  call void @free(i8* %219) #6
  call void @free(i8* nonnull %78) #6
  br label %220

220:                                              ; preds = %215, %218, %185, %160, %141, %94, %81, %76, %68, %65, %54, %29, %12
  %221 = phi %struct.zip_source* [ null, %12 ], [ null, %29 ], [ null, %54 ], [ null, %65 ], [ null, %76 ], [ null, %81 ], [ null, %94 ], [ null, %185 ], [ null, %218 ], [ null, %160 ], [ null, %141 ], [ null, %68 ], [ %216, %215 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #6
  ret %struct.zip_source* %221
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @zip_error_set(%struct.zip_error*, i32, i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare void @zip_stat_init(%struct.zip_stat*) local_unnamed_addr #2

declare void @zip_error_init(%struct.zip_error*) local_unnamed_addr #2

declare void @zip_file_attributes_init(%struct.zip_file_attributes*) local_unnamed_addr #2

declare i64 @zip_source_make_command_bitmap(i32, ...) local_unnamed_addr #2

declare void @_zip_error_copy(%struct.zip_error*, %struct.zip_error*) local_unnamed_addr #2

declare %struct.zip_source* @zip_source_function_create(i64 (i8*, i8*, i64, i32)*, i8*, %struct.zip_error*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal i64 @read_file(i8*, i8*, i64, i32) #0 {
  %5 = bitcast i8* %0 to %struct.zip_source_file_context*
  switch i32 %3, label %257 [
    i32 18, label %259
    i32 8, label %6
    i32 17, label %20
    i32 2, label %34
    i32 9, label %47
    i32 4, label %61
    i32 5, label %64
    i32 19, label %82
    i32 0, label %88
    i32 1, label %118
    i32 15, label %148
    i32 10, label %155
    i32 6, label %166
    i32 12, label %196
    i32 3, label %219
    i32 14, label %232
    i32 7, label %236
    i32 13, label %240
    i32 11, label %250
  ]

6:                                                ; preds = %4
  %7 = getelementptr inbounds i8, i8* %0, i64 24
  %8 = bitcast i8* %7 to i8**
  %9 = load i8*, i8** %8, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  %12 = bitcast i8* %0 to %struct.zip_error*
  tail call void @zip_error_set(%struct.zip_error* %12, i32 20, i32 0) #6
  br label %259

13:                                               ; preds = %6
  %14 = getelementptr inbounds i8, i8* %0, i64 184
  %15 = bitcast i8* %14 to %struct.zip_source_file_operations**
  %16 = load %struct.zip_source_file_operations*, %struct.zip_source_file_operations** %15, align 8
  %17 = getelementptr inbounds %struct.zip_source_file_operations, %struct.zip_source_file_operations* %16, i64 0, i32 2
  %18 = load i64 (%struct.zip_source_file_context*)*, i64 (%struct.zip_source_file_context*)** %17, align 8
  %19 = tail call i64 %18(%struct.zip_source_file_context* %5) #6
  br label %259

20:                                               ; preds = %4
  %21 = getelementptr inbounds i8, i8* %0, i64 24
  %22 = bitcast i8* %21 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %20
  %26 = bitcast i8* %0 to %struct.zip_error*
  tail call void @zip_error_set(%struct.zip_error* %26, i32 20, i32 0) #6
  br label %259

27:                                               ; preds = %20
  %28 = getelementptr inbounds i8, i8* %0, i64 184
  %29 = bitcast i8* %28 to %struct.zip_source_file_operations**
  %30 = load %struct.zip_source_file_operations*, %struct.zip_source_file_operations** %29, align 8
  %31 = getelementptr inbounds %struct.zip_source_file_operations, %struct.zip_source_file_operations* %30, i64 0, i32 3
  %32 = load i64 (%struct.zip_source_file_context*, i64)*, i64 (%struct.zip_source_file_context*, i64)** %31, align 8
  %33 = tail call i64 %32(%struct.zip_source_file_context* %5, i64 %2) #6
  br label %259

34:                                               ; preds = %4
  %35 = getelementptr inbounds i8, i8* %0, i64 24
  %36 = bitcast i8* %35 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %259, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds i8, i8* %0, i64 184
  %41 = bitcast i8* %40 to %struct.zip_source_file_operations**
  %42 = load %struct.zip_source_file_operations*, %struct.zip_source_file_operations** %41, align 8
  %43 = getelementptr inbounds %struct.zip_source_file_operations, %struct.zip_source_file_operations* %42, i64 0, i32 0
  %44 = load void (%struct.zip_source_file_context*)*, void (%struct.zip_source_file_context*)** %43, align 8
  tail call void %44(%struct.zip_source_file_context* %5) #6
  %45 = getelementptr inbounds i8, i8* %0, i64 32
  %46 = bitcast i8* %45 to i8**
  store i8* null, i8** %46, align 8
  br label %259

47:                                               ; preds = %4
  %48 = getelementptr inbounds i8, i8* %0, i64 184
  %49 = bitcast i8* %48 to %struct.zip_source_file_operations**
  %50 = load %struct.zip_source_file_operations*, %struct.zip_source_file_operations** %49, align 8
  %51 = getelementptr inbounds %struct.zip_source_file_operations, %struct.zip_source_file_operations* %50, i64 0, i32 1
  %52 = load i64 (%struct.zip_source_file_context*)*, i64 (%struct.zip_source_file_context*)** %51, align 8
  %53 = tail call i64 %52(%struct.zip_source_file_context* %5) #6
  %54 = getelementptr inbounds i8, i8* %0, i64 176
  %55 = bitcast i8* %54 to i8**
  store i8* null, i8** %55, align 8
  %56 = icmp eq i64 %53, 0
  br i1 %56, label %57, label %259

57:                                               ; preds = %47
  %58 = getelementptr inbounds i8, i8* %0, i64 168
  %59 = bitcast i8* %58 to i8**
  %60 = load i8*, i8** %59, align 8
  tail call void @free(i8* %60) #6
  store i8* null, i8** %59, align 8
  br label %259

61:                                               ; preds = %4
  %62 = bitcast i8* %0 to %struct.zip_error*
  %63 = tail call i64 @zip_error_to_data(%struct.zip_error* %62, i8* %1, i64 %2) #6
  br label %259

64:                                               ; preds = %4
  %65 = getelementptr inbounds i8, i8* %0, i64 24
  %66 = bitcast i8* %65 to i8**
  %67 = load i8*, i8** %66, align 8
  tail call void @free(i8* %67) #6
  %68 = getelementptr inbounds i8, i8* %0, i64 168
  %69 = bitcast i8* %68 to i8**
  %70 = load i8*, i8** %69, align 8
  tail call void @free(i8* %70) #6
  %71 = getelementptr inbounds i8, i8* %0, i64 32
  %72 = bitcast i8* %71 to i8**
  %73 = load i8*, i8** %72, align 8
  %74 = icmp eq i8* %73, null
  br i1 %74, label %81, label %75

75:                                               ; preds = %64
  %76 = getelementptr inbounds i8, i8* %0, i64 184
  %77 = bitcast i8* %76 to %struct.zip_source_file_operations**
  %78 = load %struct.zip_source_file_operations*, %struct.zip_source_file_operations** %77, align 8
  %79 = getelementptr inbounds %struct.zip_source_file_operations, %struct.zip_source_file_operations* %78, i64 0, i32 0
  %80 = load void (%struct.zip_source_file_context*)*, void (%struct.zip_source_file_context*)** %79, align 8
  tail call void %80(%struct.zip_source_file_context* %5) #6
  br label %81

81:                                               ; preds = %64, %75
  tail call void @free(i8* %0) #6
  br label %259

82:                                               ; preds = %4
  %83 = icmp ult i64 %2, 24
  br i1 %83, label %84, label %86

84:                                               ; preds = %82
  %85 = bitcast i8* %0 to %struct.zip_error*
  tail call void @zip_error_set(%struct.zip_error* %85, i32 18, i32 0) #6
  br label %259

86:                                               ; preds = %82
  %87 = getelementptr inbounds i8, i8* %0, i64 104
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 8 %87, i64 24, i1 false)
  br label %259

88:                                               ; preds = %4
  %89 = getelementptr inbounds i8, i8* %0, i64 24
  %90 = bitcast i8* %89 to i8**
  %91 = load i8*, i8** %90, align 8
  %92 = icmp eq i8* %91, null
  br i1 %92, label %100, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds i8, i8* %0, i64 184
  %95 = bitcast i8* %94 to %struct.zip_source_file_operations**
  %96 = load %struct.zip_source_file_operations*, %struct.zip_source_file_operations** %95, align 8
  %97 = getelementptr inbounds %struct.zip_source_file_operations, %struct.zip_source_file_operations* %96, i64 0, i32 4
  %98 = load i1 (%struct.zip_source_file_context*)*, i1 (%struct.zip_source_file_context*)** %97, align 8
  %99 = tail call zeroext i1 %98(%struct.zip_source_file_context* %5) #6
  br i1 %99, label %100, label %259

100:                                              ; preds = %93, %88
  %101 = getelementptr inbounds i8, i8* %0, i64 144
  %102 = bitcast i8* %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %115, label %105

105:                                              ; preds = %100
  %106 = getelementptr inbounds i8, i8* %0, i64 184
  %107 = bitcast i8* %106 to %struct.zip_source_file_operations**
  %108 = load %struct.zip_source_file_operations*, %struct.zip_source_file_operations** %107, align 8
  %109 = getelementptr inbounds %struct.zip_source_file_operations, %struct.zip_source_file_operations* %108, i64 0, i32 8
  %110 = load i1 (%struct.zip_source_file_context*, i8*, i64, i32)*, i1 (%struct.zip_source_file_context*, i8*, i64, i32)** %109, align 8
  %111 = getelementptr inbounds i8, i8* %0, i64 32
  %112 = bitcast i8* %111 to i8**
  %113 = load i8*, i8** %112, align 8
  %114 = tail call zeroext i1 %110(%struct.zip_source_file_context* %5, i8* %113, i64 %103, i32 0) #6
  br i1 %114, label %115, label %259

115:                                              ; preds = %105, %100
  %116 = getelementptr inbounds i8, i8* %0, i64 160
  %117 = bitcast i8* %116 to i64*
  store i64 0, i64* %117, align 8
  br label %259

118:                                              ; preds = %4
  %119 = getelementptr inbounds i8, i8* %0, i64 152
  %120 = bitcast i8* %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %130, label %123

123:                                              ; preds = %118
  %124 = getelementptr inbounds i8, i8* %0, i64 160
  %125 = bitcast i8* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = sub i64 %121, %126
  %128 = icmp ult i64 %127, %2
  %129 = select i1 %128, i64 %127, i64 %2
  br label %130

130:                                              ; preds = %118, %123
  %131 = phi i64 [ %129, %123 ], [ %2, %118 ]
  %132 = getelementptr inbounds i8, i8* %0, i64 184
  %133 = bitcast i8* %132 to %struct.zip_source_file_operations**
  %134 = load %struct.zip_source_file_operations*, %struct.zip_source_file_operations** %133, align 8
  %135 = getelementptr inbounds %struct.zip_source_file_operations, %struct.zip_source_file_operations* %134, i64 0, i32 5
  %136 = load i64 (%struct.zip_source_file_context*, i8*, i64)*, i64 (%struct.zip_source_file_context*, i8*, i64)** %135, align 8
  %137 = tail call i64 %136(%struct.zip_source_file_context* %5, i8* %1, i64 %131) #6
  %138 = icmp slt i64 %137, 0
  br i1 %138, label %139, label %143

139:                                              ; preds = %130
  %140 = bitcast i8* %0 to %struct.zip_error*
  %141 = tail call i32* @__errno_location() #7
  %142 = load i32, i32* %141, align 4
  tail call void @zip_error_set(%struct.zip_error* %140, i32 5, i32 %142) #6
  br label %259

143:                                              ; preds = %130
  %144 = getelementptr inbounds i8, i8* %0, i64 160
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = add i64 %146, %137
  store i64 %147, i64* %145, align 8
  br label %259

148:                                              ; preds = %4
  %149 = getelementptr inbounds i8, i8* %0, i64 184
  %150 = bitcast i8* %149 to %struct.zip_source_file_operations**
  %151 = load %struct.zip_source_file_operations*, %struct.zip_source_file_operations** %150, align 8
  %152 = getelementptr inbounds %struct.zip_source_file_operations, %struct.zip_source_file_operations* %151, i64 0, i32 6
  %153 = load i64 (%struct.zip_source_file_context*)*, i64 (%struct.zip_source_file_context*)** %152, align 8
  %154 = tail call i64 %153(%struct.zip_source_file_context* %5) #6
  br label %259

155:                                              ; preds = %4
  %156 = getelementptr inbounds i8, i8* %0, i64 184
  %157 = bitcast i8* %156 to %struct.zip_source_file_operations**
  %158 = load %struct.zip_source_file_operations*, %struct.zip_source_file_operations** %157, align 8
  %159 = getelementptr inbounds %struct.zip_source_file_operations, %struct.zip_source_file_operations* %158, i64 0, i32 7
  %160 = load void (%struct.zip_source_file_context*)*, void (%struct.zip_source_file_context*)** %159, align 8
  tail call void %160(%struct.zip_source_file_context* %5) #6
  %161 = getelementptr inbounds i8, i8* %0, i64 176
  %162 = bitcast i8* %161 to i8**
  store i8* null, i8** %162, align 8
  %163 = getelementptr inbounds i8, i8* %0, i64 168
  %164 = bitcast i8* %163 to i8**
  %165 = load i8*, i8** %164, align 8
  tail call void @free(i8* %165) #6
  store i8* null, i8** %164, align 8
  br label %259

166:                                              ; preds = %4
  %167 = getelementptr inbounds i8, i8* %0, i64 160
  %168 = bitcast i8* %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = getelementptr inbounds i8, i8* %0, i64 152
  %171 = bitcast i8* %170 to i64*
  %172 = load i64, i64* %171, align 8
  %173 = bitcast i8* %0 to %struct.zip_error*
  %174 = tail call i64 @zip_source_seek_compute_offset(i64 %169, i64 %172, i8* %1, i64 %2, %struct.zip_error* %173) #6
  %175 = icmp slt i64 %174, 0
  br i1 %175, label %259, label %176

176:                                              ; preds = %166
  %177 = getelementptr inbounds i8, i8* %0, i64 144
  %178 = bitcast i8* %177 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = sub nsw i64 9223372036854775807, %179
  %181 = icmp sgt i64 %174, %180
  br i1 %181, label %182, label %183

182:                                              ; preds = %176
  tail call void @zip_error_set(%struct.zip_error* %173, i32 4, i32 75) #6
  br label %259

183:                                              ; preds = %176
  store i64 %174, i64* %168, align 8
  %184 = getelementptr inbounds i8, i8* %0, i64 184
  %185 = bitcast i8* %184 to %struct.zip_source_file_operations**
  %186 = load %struct.zip_source_file_operations*, %struct.zip_source_file_operations** %185, align 8
  %187 = getelementptr inbounds %struct.zip_source_file_operations, %struct.zip_source_file_operations* %186, i64 0, i32 8
  %188 = load i1 (%struct.zip_source_file_context*, i8*, i64, i32)*, i1 (%struct.zip_source_file_context*, i8*, i64, i32)** %187, align 8
  %189 = getelementptr inbounds i8, i8* %0, i64 32
  %190 = bitcast i8* %189 to i8**
  %191 = load i8*, i8** %190, align 8
  %192 = add i64 %179, %174
  %193 = tail call zeroext i1 %188(%struct.zip_source_file_context* %5, i8* %191, i64 %192, i32 0) #6
  %194 = xor i1 %193, true
  %195 = sext i1 %194 to i64
  br label %259

196:                                              ; preds = %4
  %197 = icmp ult i64 %2, 16
  br i1 %197, label %198, label %200

198:                                              ; preds = %196
  %199 = bitcast i8* %0 to %struct.zip_error*
  tail call void @zip_error_set(%struct.zip_error* %199, i32 18, i32 0) #6
  br label %259

200:                                              ; preds = %196
  %201 = icmp eq i8* %1, null
  br i1 %201, label %259, label %202

202:                                              ; preds = %200
  %203 = getelementptr inbounds i8, i8* %0, i64 184
  %204 = bitcast i8* %203 to %struct.zip_source_file_operations**
  %205 = load %struct.zip_source_file_operations*, %struct.zip_source_file_operations** %204, align 8
  %206 = getelementptr inbounds %struct.zip_source_file_operations, %struct.zip_source_file_operations* %205, i64 0, i32 8
  %207 = load i1 (%struct.zip_source_file_context*, i8*, i64, i32)*, i1 (%struct.zip_source_file_context*, i8*, i64, i32)** %206, align 8
  %208 = getelementptr inbounds i8, i8* %0, i64 176
  %209 = bitcast i8* %208 to i8**
  %210 = load i8*, i8** %209, align 8
  %211 = bitcast i8* %1 to i64*
  %212 = load i64, i64* %211, align 8
  %213 = getelementptr inbounds i8, i8* %1, i64 8
  %214 = bitcast i8* %213 to i32*
  %215 = load i32, i32* %214, align 8
  %216 = tail call zeroext i1 %207(%struct.zip_source_file_context* %5, i8* %210, i64 %212, i32 %215) #6
  %217 = xor i1 %216, true
  %218 = sext i1 %217 to i64
  br label %259

219:                                              ; preds = %4
  %220 = icmp ult i64 %2, 64
  br i1 %220, label %259, label %221

221:                                              ; preds = %219
  %222 = getelementptr inbounds i8, i8* %0, i64 128
  %223 = bitcast i8* %222 to %struct.zip_error*
  %224 = tail call i32 @zip_error_code_zip(%struct.zip_error* %223) #6
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %230, label %226

226:                                              ; preds = %221
  %227 = bitcast i8* %0 to %struct.zip_error*
  %228 = tail call i32 @zip_error_code_zip(%struct.zip_error* %223) #6
  %229 = tail call i32 @zip_error_code_system(%struct.zip_error* %223) #6
  tail call void @zip_error_set(%struct.zip_error* %227, i32 %228, i32 %229) #6
  br label %259

230:                                              ; preds = %221
  %231 = getelementptr inbounds i8, i8* %0, i64 40
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 8 %231, i64 64, i1 false)
  br label %259

232:                                              ; preds = %4
  %233 = getelementptr inbounds i8, i8* %0, i64 16
  %234 = bitcast i8* %233 to i64*
  %235 = load i64, i64* %234, align 8
  br label %259

236:                                              ; preds = %4
  %237 = getelementptr inbounds i8, i8* %0, i64 160
  %238 = bitcast i8* %237 to i64*
  %239 = load i64, i64* %238, align 8
  br label %259

240:                                              ; preds = %4
  %241 = getelementptr inbounds i8, i8* %0, i64 184
  %242 = bitcast i8* %241 to %struct.zip_source_file_operations**
  %243 = load %struct.zip_source_file_operations*, %struct.zip_source_file_operations** %242, align 8
  %244 = getelementptr inbounds %struct.zip_source_file_operations, %struct.zip_source_file_operations* %243, i64 0, i32 11
  %245 = load i64 (%struct.zip_source_file_context*, i8*)*, i64 (%struct.zip_source_file_context*, i8*)** %244, align 8
  %246 = getelementptr inbounds i8, i8* %0, i64 176
  %247 = bitcast i8* %246 to i8**
  %248 = load i8*, i8** %247, align 8
  %249 = tail call i64 %245(%struct.zip_source_file_context* %5, i8* %248) #6
  br label %259

250:                                              ; preds = %4
  %251 = getelementptr inbounds i8, i8* %0, i64 184
  %252 = bitcast i8* %251 to %struct.zip_source_file_operations**
  %253 = load %struct.zip_source_file_operations*, %struct.zip_source_file_operations** %252, align 8
  %254 = getelementptr inbounds %struct.zip_source_file_operations, %struct.zip_source_file_operations* %253, i64 0, i32 12
  %255 = load i64 (%struct.zip_source_file_context*, i8*, i64)*, i64 (%struct.zip_source_file_context*, i8*, i64)** %254, align 8
  %256 = tail call i64 %255(%struct.zip_source_file_context* %5, i8* %1, i64 %2) #6
  br label %259

257:                                              ; preds = %4
  %258 = bitcast i8* %0 to %struct.zip_error*
  tail call void @zip_error_set(%struct.zip_error* %258, i32 28, i32 0) #6
  br label %259

259:                                              ; preds = %198, %219, %200, %202, %182, %166, %183, %139, %143, %105, %93, %47, %57, %39, %34, %4, %257, %250, %240, %236, %232, %230, %226, %155, %148, %115, %86, %84, %81, %61, %27, %25, %13, %11
  %260 = phi i64 [ -1, %257 ], [ %256, %250 ], [ %249, %240 ], [ %239, %236 ], [ %235, %232 ], [ -1, %226 ], [ 64, %230 ], [ 0, %155 ], [ %154, %148 ], [ 0, %115 ], [ -1, %84 ], [ 24, %86 ], [ 0, %81 ], [ %63, %61 ], [ -1, %25 ], [ %33, %27 ], [ -1, %11 ], [ %19, %13 ], [ 0, %4 ], [ 0, %34 ], [ 0, %39 ], [ 0, %57 ], [ %53, %47 ], [ -1, %93 ], [ -1, %105 ], [ -1, %139 ], [ %137, %143 ], [ -1, %182 ], [ -1, %166 ], [ %195, %183 ], [ -1, %200 ], [ %218, %202 ], [ -1, %219 ], [ -1, %198 ]
  ret i64 %260
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare i64 @time(i64*) local_unnamed_addr #4

declare i64 @zip_error_to_data(%struct.zip_error*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #5

declare i64 @zip_source_seek_compute_offset(i64, i64, i8*, i64, %struct.zip_error*) local_unnamed_addr #2

declare i32 @zip_error_code_zip(%struct.zip_error*) local_unnamed_addr #2

declare i32 @zip_error_code_system(%struct.zip_error*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
