; ModuleID = '../../third_party/blink/renderer/core/timing/performance_observer.cc'
source_filename = "../../third_party/blink/renderer/core/timing/performance_observer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.243" }
%"struct.std::__1::atomic.243" = type { %"struct.std::__1::__atomic_base.244" }
%"struct.std::__1::__atomic_base.244" = type { %"struct.std::__1::__atomic_base.245" }
%"struct.std::__1::__atomic_base.245" = type { %"struct.std::__1::__cxx_atomic_impl.246" }
%"struct.std::__1::__cxx_atomic_impl.246" = type { %"struct.std::__1::__cxx_atomic_base_impl.247" }
%"struct.std::__1::__cxx_atomic_base_impl.247" = type { i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.14" }
%"class.WTF::HashTable.14" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember.16", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.16" = type { %"class.blink::MemberBase.17" }
%"class.blink::MemberBase.17" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.141", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.157", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.175", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.182", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.102", %"class.std::__1::unique_ptr.125", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.49" }
%"struct.std::__1::__atomic_base.49" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::Worklist.56"* }
%"class.blink::Worklist.56" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist.63"* }
%"class.blink::Worklist.63" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist.70"* }
%"class.blink::Worklist.70" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::Worklist.77"* }
%"class.blink::Worklist.77" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::Worklist.91"* }
%"class.blink::Worklist.91" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.blink::Worklist.98"* }
%"class.blink::Worklist.98" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.105", %"class.std::__1::__compressed_pair.112", %"class.std::__1::__compressed_pair.117", %"class.std::__1::__compressed_pair.119", [4 x i8] }>
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107", %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { i64 }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { float }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.128", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.149" }
%"class.WTF::VectorBuffer.149" = type { %"class.WTF::VectorBufferBase.150" }
%"class.WTF::VectorBufferBase.150" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.163" }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.56"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.63"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.70"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.77"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.84"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.303" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.181 }
%class.scoped_refptr.181 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.182" = type { %"struct.std::__1::__atomic_base.183" }
%"struct.std::__1::__atomic_base.183" = type { %"struct.std::__1::__cxx_atomic_impl.184" }
%"struct.std::__1::__cxx_atomic_impl.184" = type { %"struct.std::__1::__cxx_atomic_base_impl.185" }
%"struct.std::__1::__cxx_atomic_base_impl.185" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.289" }
%"struct.std::__1::atomic.289" = type { %"struct.std::__1::__atomic_base.290" }
%"struct.std::__1::__atomic_base.290" = type { %"struct.std::__1::__atomic_base.291" }
%"struct.std::__1::__atomic_base.291" = type { %"struct.std::__1::__cxx_atomic_impl.292" }
%"struct.std::__1::__cxx_atomic_impl.292" = type { %"struct.std::__1::__cxx_atomic_base_impl.293" }
%"struct.std::__1::__cxx_atomic_base_impl.293" = type { i32 }
%"class.blink::PerformanceObserver" = type { %"class.blink::ScriptWrappable", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleStateObserver.base", %"class.blink::Member", %"class.blink::WeakMember.233", %"class.blink::HeapVector", i32, i32, i8, double }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ExecutionContextLifecycleStateObserver.base" = type { %"class.blink::ExecutionContextLifecycleObserver.base" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember.2"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2" = type opaque
%"class.blink::Member" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::V8PerformanceObserverCallback"* }
%"class.blink::WeakMember.233" = type { %"class.blink::MemberBase.234" }
%"class.blink::MemberBase.234" = type { %"class.blink::Performance"* }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.237" }
%"class.WTF::Vector.237" = type { %"class.WTF::VectorBuffer.238" }
%"class.WTF::VectorBuffer.238" = type { %"class.WTF::VectorBufferBase.239" }
%"class.WTF::VectorBufferBase.239" = type { %"class.blink::Member.240"*, i32, i32 }
%"class.blink::Member.240" = type { %"class.blink::MemberBase.241" }
%"class.blink::MemberBase.241" = type { %"class.blink::PerformanceEntry"* }
%"class.blink::PerformanceEntry" = type <{ %"class.blink::ScriptWrappable", double, %"class.WTF::AtomicString", double, i32, [4 x i8] }>
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.553", i32, i8, [3 x i8], %"class.blink::HeapVector.555", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.564", %"class.blink::Member.566", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.575", %"class.blink::Member.634", %"class.blink::Member.636", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.490" }
%"class.blink::HeapHashMap.490" = type { %"class.WTF::HashMap.493" }
%"class.WTF::HashMap.493" = type { %"class.WTF::HashTable.494" }
%"class.WTF::HashTable.494" = type <{ %"struct.WTF::KeyValuePair.496"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.496" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.497" }
%"class.blink::Supplementable.497" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.498" }
%"class.blink::HeapHashMap.498" = type { %"class.WTF::HashMap.501" }
%"class.WTF::HashMap.501" = type { %"class.WTF::HashTable.502" }
%"class.WTF::HashTable.502" = type <{ %"struct.WTF::KeyValuePair.504"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.504" = type { i8*, %"class.blink::Member.2360" }
%"class.blink::Member.2360" = type { %"class.blink::MemberBase.2361" }
%"class.blink::MemberBase.2361" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2362" }
%"class.blink::Member.2362" = type { %"class.blink::MemberBase.2363" }
%"class.blink::MemberBase.2363" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.505, %"class.std::__1::unique_ptr.514", %"class.std::__1::unique_ptr.514", %"class.std::__1::unique_ptr.541", %"class.std::__1::unique_ptr.541", %"class.blink::Member.547", i32, [4 x i8], %"class.WTF::HashSet.549", i32, i32 }
%class.scoped_refptr.505 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.506", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.508", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.513 }
%"class.WTF::RefCounted.506" = type { %"class.base::RefCounted.507" }
%"class.base::RefCounted.507" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.508" = type { %"class.absl::optional_internal::optional_data.509" }
%"class.absl::optional_internal::optional_data.509" = type { %"class.absl::optional_internal::optional_data_base.510" }
%"class.absl::optional_internal::optional_data_base.510" = type { %"class.absl::optional_internal::optional_data_dtor_base.511" }
%"class.absl::optional_internal::optional_data_dtor_base.511" = type { i8, %union.anon.512 }
%union.anon.512 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.513 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.517", %"class.std::__1::map.528", %"class.std::__1::map.537"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.508" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map.517" = type { %"class.std::__1::__tree.518" }
%"class.std::__1::__tree.518" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.519", %"class.std::__1::__compressed_pair.523" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"class.std::__1::map.528" = type { %"class.std::__1::__tree.529" }
%"class.std::__1::__tree.529" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.530", %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"class.std::__1::map.537" = type opaque
%"class.std::__1::unique_ptr.541" = type { %"class.std::__1::__compressed_pair.542" }
%"class.std::__1::__compressed_pair.542" = type { %"struct.std::__1::__compressed_pair_elem.543" }
%"struct.std::__1::__compressed_pair_elem.543" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.547" = type { %"class.blink::MemberBase.548" }
%"class.blink::MemberBase.548" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.549" = type { %"class.WTF::HashTable.550" }
%"class.WTF::HashTable.550" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.553" = type { %"class.blink::MemberBase.554" }
%"class.blink::MemberBase.554" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.555" = type { %"class.WTF::Vector.558" }
%"class.WTF::Vector.558" = type { %"class.WTF::VectorBuffer.559" }
%"class.WTF::VectorBuffer.559" = type { %"class.WTF::VectorBufferBase.560" }
%"class.WTF::VectorBufferBase.560" = type { %"class.blink::Member.561"*, i32, i32 }
%"class.blink::Member.561" = type { %"class.blink::MemberBase.562" }
%"class.blink::MemberBase.562" = type { %"class.blink::ErrorEvent"* }
%"class.blink::ErrorEvent" = type opaque
%"class.blink::Member.564" = type { %"class.blink::MemberBase.565" }
%"class.blink::MemberBase.565" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.566" = type { %"class.blink::MemberBase.567" }
%"class.blink::MemberBase.567" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.568", i32, i32 }
%"class.blink::HeapHashMap.568" = type { %"class.WTF::HashMap.571" }
%"class.WTF::HashMap.571" = type { %"class.WTF::HashTable.572" }
%"class.WTF::HashTable.572" = type <{ %"struct.WTF::KeyValuePair.574"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.574" = type opaque
%"class.std::__1::unique_ptr.575" = type { %"class.std::__1::__compressed_pair.576" }
%"class.std::__1::__compressed_pair.576" = type { %"struct.std::__1::__compressed_pair_elem.577" }
%"struct.std::__1::__compressed_pair_elem.577" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.578" }
%"class.std::__1::unique_ptr.578" = type { %"class.std::__1::__compressed_pair.579" }
%"class.std::__1::__compressed_pair.579" = type { %"struct.std::__1::__compressed_pair_elem.580" }
%"struct.std::__1::__compressed_pair_elem.580" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.581" }
%"class.WTF::Vector.581" = type { %"class.WTF::VectorBuffer.582" }
%"class.WTF::VectorBuffer.582" = type { %"class.WTF::VectorBufferBase.583" }
%"class.WTF::VectorBufferBase.583" = type { %"class.mojo::StructPtr.584"*, i32, i32 }
%"class.mojo::StructPtr.584" = type { %"class.std::__1::unique_ptr.585" }
%"class.std::__1::unique_ptr.585" = type { %"class.std::__1::__compressed_pair.586" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.587" }
%"struct.std::__1::__compressed_pair_elem.587" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.588", %"class.WTF::HashMap.595", %"class.WTF::HashMap.600", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.605", i32, %"class.mojo::StructPtr.610", %"class.WTF::Vector.605" }
%"class.mojo::StructPtr.588" = type { %"class.std::__1::unique_ptr.589" }
%"class.std::__1::unique_ptr.589" = type { %"class.std::__1::__compressed_pair.590" }
%"class.std::__1::__compressed_pair.590" = type { %"struct.std::__1::__compressed_pair_elem.591" }
%"struct.std::__1::__compressed_pair_elem.591" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.595" = type { %"class.WTF::HashTable.596" }
%"class.WTF::HashTable.596" = type <{ %"struct.WTF::KeyValuePair.599"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.599" = type opaque
%"class.WTF::HashMap.600" = type { %"class.WTF::HashTable.601" }
%"class.WTF::HashTable.601" = type <{ %"struct.WTF::KeyValuePair.604"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.604" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.610" = type { %"class.std::__1::unique_ptr.611" }
%"class.std::__1::unique_ptr.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.613" }
%"struct.std::__1::__compressed_pair_elem.613" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.605", i8, i8, [6 x i8] }>
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.625" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.432", i32 }>
%"class.std::__1::unique_ptr.432" = type { %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.435", %"class.base::OnceCallback.436", %"class.absl::optional.437", %"class.absl::optional.442", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.449", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.457", %"class.std::__1::map.468", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.477", i8, %class.scoped_refptr.323, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.478" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback.435" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.342 }
%class.scoped_refptr.342 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.343", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.343" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.289" }
%"class.base::OnceCallback.436" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.437" = type { %"class.absl::optional_internal::optional_data.438" }
%"class.absl::optional_internal::optional_data.438" = type { %"class.absl::optional_internal::optional_data_base.439" }
%"class.absl::optional_internal::optional_data_base.439" = type { %"class.absl::optional_internal::optional_data_dtor_base.440" }
%"class.absl::optional_internal::optional_data_dtor_base.440" = type { i8, %union.anon.441 }
%union.anon.441 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.442" = type { %"class.absl::optional_internal::optional_data.443" }
%"class.absl::optional_internal::optional_data.443" = type { %"class.absl::optional_internal::optional_data_base.444" }
%"class.absl::optional_internal::optional_data_base.444" = type { %"class.absl::optional_internal::optional_data_dtor_base.445" }
%"class.absl::optional_internal::optional_data_dtor_base.445" = type { i8, %union.anon.446 }
%union.anon.446 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.323, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.447" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.447" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.294 }
%class.scoped_refptr.294 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.295", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.295" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.296" }
%"struct.std::__1::atomic.296" = type { %"struct.std::__1::__atomic_base.297" }
%"struct.std::__1::__atomic_base.297" = type { %"struct.std::__1::__atomic_base.298" }
%"struct.std::__1::__atomic_base.298" = type { %"struct.std::__1::__cxx_atomic_impl.299" }
%"struct.std::__1::__cxx_atomic_impl.299" = type { %"struct.std::__1::__cxx_atomic_base_impl.300" }
%"struct.std::__1::__cxx_atomic_base_impl.300" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.391 }
%class.scoped_refptr.391 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1964", [4 x i8], %"class.base::RepeatingCallback.435", %class.scoped_refptr.323, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.243", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.449" = type { %"class.std::__1::__compressed_pair.450" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.451" }
%"struct.std::__1::__compressed_pair_elem.451" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.452", %class.scoped_refptr.453 }
%"class.base::RepeatingCallback.452" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.453 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.322", [4 x i8] }>
%"class.base::RefCountedThreadSafe.322" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.329", %"class.std::__1::unique_ptr.335", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.341" }
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.341" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.457" = type { %"class.std::__1::__tree.458" }
%"class.std::__1::__tree.458" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.459", %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"class.std::__1::map.468" = type { %"class.std::__1::__tree.469" }
%"class.std::__1::__tree.469" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.470", %"class.std::__1::__compressed_pair.474" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.477" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.323 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.478" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.625" = type { %"class.std::__1::__compressed_pair.626" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.627" }
%"struct.std::__1::__compressed_pair_elem.627" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.634" = type { %"class.blink::MemberBase.635" }
%"class.blink::MemberBase.635" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.636" = type { %"class.blink::MemberBase.637" }
%"class.blink::MemberBase.637" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.566", i8, [7 x i8], %"class.WTF::Vector.581", %"class.blink::HeapVector.640", i8, [7 x i8], %"class.WTF::HashSet.549", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.640" = type { %"class.WTF::Vector.643" }
%"class.WTF::Vector.643" = type { %"class.WTF::VectorBuffer.644" }
%"class.WTF::VectorBuffer.644" = type { %"class.WTF::VectorBufferBase.645" }
%"class.WTF::VectorBufferBase.645" = type { %"class.blink::Member.646"*, i32, i32 }
%"class.blink::Member.646" = type opaque
%"class.blink::Performance" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::HeapVector", %"class.blink::HeapDeque", i32, i8, %"class.blink::HeapVector", i32, %"class.blink::HeapVector", i32, %"class.blink::HeapVector", %"class.blink::HeapVector", %"class.blink::HeapVector", %"class.blink::HeapVector", %"class.blink::Member.240", %"class.blink::Member.274", %"class.blink::Member.240", %"class.blink::Member.240", %"class.blink::Member.276", %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"*, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet", %class.scoped_refptr.288, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.301" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.263" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.251" }
%"class.blink::HeapVector.251" = type { %"class.WTF::Vector.254" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256", [32 x i8] }
%"class.WTF::VectorBufferBase.256" = type { %"struct.std::__1::pair.257"*, i32, i32 }
%"struct.std::__1::pair.257" = type { %"class.WTF::AtomicString", %"class.blink::Member.258" }
%"class.blink::Member.258" = type { %"class.blink::MemberBase.259" }
%"class.blink::MemberBase.259" = type { %"class.blink::HeapVector.260"* }
%"class.blink::HeapVector.260" = type opaque
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.WTF::Vector.266"* }
%"class.WTF::Vector.266" = type opaque
%"class.blink::HeapDeque" = type { %"class.WTF::Deque.272" }
%"class.WTF::Deque.272" = type { %"class.WTF::Deque<blink::Member<blink::PerformanceEntry>, 0, blink::HeapAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::Member<blink::PerformanceEntry>, 0, blink::HeapAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.238" }
%"class.blink::Member.274" = type { %"class.blink::MemberBase.275" }
%"class.blink::MemberBase.275" = type { %"class.blink::UserTiming"* }
%"class.blink::UserTiming" = type opaque
%"class.blink::Member.276" = type { %"class.blink::MemberBase.277" }
%"class.blink::MemberBase.277" = type { %"class.blink::PerformanceEventTiming"* }
%"class.blink::PerformanceEventTiming" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.280", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.280" = type { %"class.WTF::HashTable.281" }
%"class.WTF::HashTable.281" = type <{ %"struct.WTF::KeyValuePair.283"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.283" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.284", i32, i32 }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%class.scoped_refptr.288 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.233", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.288, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.301" = type { %"class.blink::MemberBase.302" }
%"class.blink::MemberBase.302" = type { %"class.blink::BackgroundTracingHelper"* }
%"class.blink::BackgroundTracingHelper" = type opaque
%"class.blink::V8PerformanceObserverCallback" = type { %"class.blink::CallbackFunctionBase" }
%"class.blink::CallbackFunctionBase" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference", %"class.blink::Member.6", %"class.blink::Member.6" }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr, %"class.blink::Member.186", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.186" = type { %"class.blink::MemberBase.187" }
%"class.blink::MemberBase.187" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type { %"class.v8::Isolate"*, %"class.blink::HeapHashMap.190", %"class.blink::HeapHashMap.199", %"class.std::__1::unique_ptr.209", %"class.blink::ScopedPersistent", %"class.blink::ScopedPersistent.221", %"class.blink::V8DOMActivityLogger"*, %"class.blink::HeapHashMap.224" }
%"class.blink::HeapHashMap.190" = type { %"class.WTF::HashMap.193" }
%"class.WTF::HashMap.193" = type { %"class.WTF::HashTable.194" }
%"class.WTF::HashTable.194" = type <{ %"struct.WTF::KeyValuePair.196"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.196" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference" }
%"class.blink::HeapHashMap.199" = type { %"class.WTF::HashMap.202" }
%"class.WTF::HashMap.202" = type { %"class.WTF::HashTable.203" }
%"class.WTF::HashTable.203" = type <{ %"struct.WTF::KeyValuePair.205"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.205" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference.206" }
%"class.blink::TraceWrapperV8Reference.206" = type { %"class.v8::TracedReference.207" }
%"class.v8::TracedReference.207" = type { %"class.v8::BasicTracedReference.208" }
%"class.v8::BasicTracedReference.208" = type { %"class.v8::TracedReferenceBase" }
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.gin::ContextHolder"* }
%"class.gin::ContextHolder" = type { %"class.v8::Isolate"*, %"class.v8::Global", %"class.std::__1::unique_ptr.212" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.gin::PerContextData"* }
%"class.gin::PerContextData" = type opaque
%"class.blink::ScopedPersistent.221" = type { %"class.v8::Persistent.222" }
%"class.v8::Persistent.222" = type { %"class.v8::PersistentBase.223" }
%"class.v8::PersistentBase.223" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.blink::V8DOMActivityLogger" = type opaque
%"class.blink::HeapHashMap.224" = type { %"class.WTF::HashMap.227" }
%"class.WTF::HashMap.227" = type { %"class.WTF::HashTable.228" }
%"class.WTF::HashTable.228" = type <{ %"struct.WTF::KeyValuePair.230"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.230" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.231" }
%"class.blink::Persistent.231" = type { %"class.blink::PersistentBase.232" }
%"class.blink::PersistentBase.232" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.v8::internal::Isolate" = type opaque
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.648", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.656", %"class.blink::Member.658", %"class.blink::Member.660", i8, %"class.blink::Member.662", %"class.blink::Member.664", %"class.blink::Member.666", %"class.blink::Member.666", %"class.blink::Member.666", %"class.blink::Member.666", %"class.blink::Member.666", %"class.blink::Member.666", %"class.blink::Member.668", %"class.blink::Member.670", %"class.blink::Member.672", %"class.blink::Member.674", %"class.blink::Member.678", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.605", %"class.blink::Member.680", %class.scoped_refptr.682, %"class.blink::HeapHashSet.744", %"class.blink::Member.751", %"class.blink::HeapHashMap.764", %"class.std::__1::unique_ptr.771", %"class.blink::Member.783", %"class.blink::Member.810", %"class.blink::Member.820", %"class.blink::Member.826", %"class.WTF::Vector.829", %"class.util::TokenType.319", %"class.WTF::HashSet.834", %"class.WTF::Deque.838" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.308", %"class.blink::Member.310", %"class.blink::Member.312", %"class.blink::Member.314", i8, %"class.WTF::Vector.316" }
%"class.blink::Member.308" = type { %"class.blink::MemberBase.309" }
%"class.blink::MemberBase.309" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.944", %"class.blink::Member.946", %"class.blink::Member.948", i8, i32, i8, i32, %"class.blink::Member.950", %"class.blink::Member.310", %"class.blink::FrameLifecycle", %"class.blink::Member.308", %"class.blink::Member.308", %"class.blink::Member.308", %"class.blink::Member.308", %"class.blink::Member.308", %"class.blink::Member.308", %"class.blink::Member.787", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.960", i8, %"class.base::UnguessableToken", %"class.absl::optional.962", %"class.absl::optional.967", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.308", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.944" = type { %"class.blink::MemberBase.945" }
%"class.blink::MemberBase.945" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.946" = type { %"class.blink::MemberBase.947" }
%"class.blink::MemberBase.947" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.948" = type { %"class.blink::MemberBase.949" }
%"class.blink::MemberBase.949" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.950" = type { %"class.blink::MemberBase.951" }
%"class.blink::MemberBase.951" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.787" = type { %"class.blink::MemberBase.788" }
%"class.blink::MemberBase.788" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.980", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.988", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.996", %"class.blink::FrameLoader", %"class.blink::Member.1023", %"class.blink::Member.860", %"class.blink::Member.1025", %"class.blink::Member.1027", %"class.blink::Member.1029", %"class.blink::Member.1031", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1033", %class.scoped_refptr.1035, %"class.blink::Member.1036", %"class.blink::Member.1047", %"class.blink::Member.1049", %"class.blink::Member.1051", %"class.blink::Member.1053", %"class.blink::Member.1055", %"class.blink::Member.1057", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.1059", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1062", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1082", %"class.std::__1::unique_ptr.1083", %"class.absl::optional.967", i32, [4 x i8], %"class.std::__1::unique_ptr.1089", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1097", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1102", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1107", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1110", %"class.blink::Member.1112", %"class.blink::Member.1114", %"class.blink::Member.1116", %"class.mojo::StructPtr.1119", %"class.blink::Member.1128", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1130", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.980" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.981" }
%"class.blink::HeapHashMap.981" = type { %"class.WTF::HashMap.984" }
%"class.WTF::HashMap.984" = type { %"class.WTF::HashTable.985" }
%"class.WTF::HashTable.985" = type <{ %"struct.WTF::KeyValuePair.987"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.987" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.988" = type { %"class.std::__1::__compressed_pair.989" }
%"class.std::__1::__compressed_pair.989" = type { %"struct.std::__1::__compressed_pair_elem.990" }
%"struct.std::__1::__compressed_pair_elem.990" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.774", %"class.base::WeakPtrFactory.779" }
%"class.WTF::HashMap.774" = type { %"class.WTF::HashTable.775" }
%"class.WTF::HashTable.775" = type <{ %"struct.WTF::KeyValuePair.778"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.778" = type opaque
%"class.base::WeakPtrFactory.779" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.994" }
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.435", %"class.base::RepeatingCallback.2372", i64, %"class.std::__1::map.2373", i8*, i64, %"class.base::WeakPtrFactory.2382" }
%"class.base::RepeatingCallback.2372" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2373" = type { %"class.std::__1::__tree.2374" }
%"class.std::__1::__tree.2374" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2375", %"class.std::__1::__compressed_pair.2379" }
%"class.std::__1::__compressed_pair.2375" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"class.std::__1::__compressed_pair.2379" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"class.base::WeakPtrFactory.2382" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.996" = type { %"class.WTF::HashSet.999" }
%"class.WTF::HashSet.999" = type { %"class.WTF::HashTable.1000" }
%"class.WTF::HashTable.1000" = type <{ %"class.blink::WeakMember.1002"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1002" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.787", %"class.blink::Member.1003", %"class.blink::Member.1005", %"class.std::__1::unique_ptr.1007", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1019" }
%"class.blink::Member.1003" = type { %"class.blink::MemberBase.1004" }
%"class.blink::MemberBase.1004" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1005" = type { %"class.blink::MemberBase.1006" }
%"class.blink::MemberBase.1006" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.1007" = type { %"class.std::__1::__compressed_pair.1008" }
%"class.std::__1::__compressed_pair.1008" = type { %"struct.std::__1::__compressed_pair_elem.1009" }
%"struct.std::__1::__compressed_pair_elem.1009" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1010" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.1010" = type { %"class.std::__1::__compressed_pair.1011" }
%"class.std::__1::__compressed_pair.1011" = type { %"struct.std::__1::__compressed_pair_elem.1012" }
%"struct.std::__1::__compressed_pair_elem.1012" = type { %"class.blink::KURL"* }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.242 }
%"class.WTF::HashSet.1019" = type { %"class.WTF::HashTable.1020" }
%"class.WTF::HashTable.1020" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1137", %"class.blink::Member.787", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1142", i8, i32, %"class.blink::Color", %"class.absl::optional.1144", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1149", %"class.blink::Member.1151", %"class.blink::Member.1151", %"class.std::__1::unique_ptr.1154", i32, [4 x i8], %"class.WTF::HashSet.1157", %"class.blink::Member.1164", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1166", %"class.blink::HeapHashSet.1173", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1181", i8, %"class.blink::Member.1187", i8, i8, i32, %"class.blink::HeapLinkedHashSet.1189", %"class.blink::HeapLinkedHashSet.1203", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1217", i8, %"class.std::__1::unique_ptr.1223", %"class.std::__1::unique_ptr.1340", %"class.WTF::Vector.1346", i32, %class.scoped_refptr.1351, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1352", %"class.blink::Member.1354", %"class.blink::Member.1356", %"class.blink::HeapHashSet.1358", %"class.blink::HeapHashSet.1365", %"class.std::__1::unique_ptr.1372", %"class.std::__1::unique_ptr.1379", %"class.WTF::Vector.1390" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1137" = type { %"class.WTF::HashTable.1138" }
%"class.WTF::HashTable.1138" = type <{ %class.scoped_refptr.1141*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1141 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1142" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1143", { i64, i64 } }
%"class.blink::WeakMember.1143" = type { %"class.blink::MemberBase.1024" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1144" = type { %"class.absl::optional_internal::optional_data.1145" }
%"class.absl::optional_internal::optional_data.1145" = type { %"class.absl::optional_internal::optional_data_base.1146" }
%"class.absl::optional_internal::optional_data_base.1146" = type { %"class.absl::optional_internal::optional_data_dtor_base.1147" }
%"class.absl::optional_internal::optional_data_dtor_base.1147" = type { i8, %union.anon.1148 }
%union.anon.1148 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1149" = type { %"class.blink::MemberBase.1150" }
%"class.blink::MemberBase.1150" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1151" = type { %"class.blink::MemberBase.1152" }
%"class.blink::MemberBase.1152" = type { %"class.blink::HeapHashSet.1153"* }
%"class.blink::HeapHashSet.1153" = type opaque
%"class.std::__1::unique_ptr.1154" = type { %"class.std::__1::__compressed_pair.1155" }
%"class.std::__1::__compressed_pair.1155" = type { %"struct.std::__1::__compressed_pair_elem.1156" }
%"struct.std::__1::__compressed_pair_elem.1156" = type { %"class.WTF::HashSet.1157"* }
%"class.WTF::HashSet.1157" = type { %"class.WTF::HashTable.1158" }
%"class.WTF::HashTable.1158" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.1165" }
%"class.blink::MemberBase.1165" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1166" = type { %"class.WTF::HashSet.1169" }
%"class.WTF::HashSet.1169" = type { %"class.WTF::HashTable.1170" }
%"class.WTF::HashTable.1170" = type <{ %"class.blink::Member.1172"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1172" = type opaque
%"class.blink::HeapHashSet.1173" = type { %"class.WTF::HashSet.1176" }
%"class.WTF::HashSet.1176" = type { %"class.WTF::HashTable.1177" }
%"class.WTF::HashTable.1177" = type <{ %"class.blink::Member.1179"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1179" = type { %"class.blink::MemberBase.1180" }
%"class.blink::MemberBase.1180" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1418", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1429", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.860" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1418" = type { %"class.blink::MemberBase.1419" }
%"class.blink::MemberBase.1419" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1420", %"class.blink::Member.1421", %"class.blink::Member.1423", %"class.blink::Member.1425", %"class.blink::Member.1427", %"class.WTF::Vector.1390", i16, %class.scoped_refptr.288 }
%"class.blink::ThreadState::PrefinalizerRegistration.1420" = type { i8 }
%"class.blink::Member.1421" = type { %"class.blink::MemberBase.1422" }
%"class.blink::MemberBase.1422" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1423" = type { %"class.blink::MemberBase.1424" }
%"class.blink::MemberBase.1424" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1425" = type { %"class.blink::MemberBase.1426" }
%"class.blink::MemberBase.1426" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1427" = type { %"class.blink::MemberBase.1428" }
%"class.blink::MemberBase.1428" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1429" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1430", { i64, i64 } }
%"class.blink::WeakMember.1430" = type { %"class.blink::MemberBase.1180" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1181" = type { %"class.std::__1::__compressed_pair.1182" }
%"class.std::__1::__compressed_pair.1182" = type { %"struct.std::__1::__compressed_pair_elem.1183" }
%"struct.std::__1::__compressed_pair_elem.1183" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1187" = type { %"class.blink::MemberBase.1188" }
%"class.blink::MemberBase.1188" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet.1189" = type { %"class.WTF::LinkedHashSet.1192" }
%"class.WTF::LinkedHashSet.1192" = type { %"class.WTF::HashMap.1193", %"class.WTF::VectorBackedLinkedList.1197" }
%"class.WTF::HashMap.1193" = type { %"class.WTF::HashTable.1194" }
%"class.WTF::HashTable.1194" = type <{ %"struct.WTF::KeyValuePair.1196"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1196" = type opaque
%"class.WTF::VectorBackedLinkedList.1197" = type { %"class.WTF::Vector.1198", i32, i32 }
%"class.WTF::Vector.1198" = type { %"class.WTF::VectorBuffer.1199" }
%"class.WTF::VectorBuffer.1199" = type { %"class.WTF::VectorBufferBase.1200" }
%"class.WTF::VectorBufferBase.1200" = type { %"class.WTF::VectorBackedLinkedListNode.1201"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1201" = type opaque
%"class.blink::HeapLinkedHashSet.1203" = type { %"class.WTF::LinkedHashSet.1206" }
%"class.WTF::LinkedHashSet.1206" = type { %"class.WTF::HashMap.1207", %"class.WTF::VectorBackedLinkedList.1211" }
%"class.WTF::HashMap.1207" = type { %"class.WTF::HashTable.1208" }
%"class.WTF::HashTable.1208" = type <{ %"struct.WTF::KeyValuePair.1210"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1210" = type opaque
%"class.WTF::VectorBackedLinkedList.1211" = type { %"class.WTF::Vector.1212", i32, i32 }
%"class.WTF::Vector.1212" = type { %"class.WTF::VectorBuffer.1213" }
%"class.WTF::VectorBuffer.1213" = type { %"class.WTF::VectorBufferBase.1214" }
%"class.WTF::VectorBufferBase.1214" = type { %"class.WTF::VectorBackedLinkedListNode.1215"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1215" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1217" = type { %"class.std::__1::__compressed_pair.1218" }
%"class.std::__1::__compressed_pair.1218" = type { %"struct.std::__1::__compressed_pair_elem.1219" }
%"struct.std::__1::__compressed_pair_elem.1219" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1223" = type { %"class.std::__1::__compressed_pair.1224" }
%"class.std::__1::__compressed_pair.1224" = type { %"struct.std::__1::__compressed_pair_elem.1225" }
%"struct.std::__1::__compressed_pair_elem.1225" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1226, %class.scoped_refptr.1226, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1317", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1322", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1226 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1227", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1234" }
%"class.WTF::RefCounted.1227" = type { %"class.base::RefCounted.1228" }
%"class.base::RefCounted.1228" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1229", i32, [4 x i8] }>
%"class.WTF::Vector.1229" = type { %"class.WTF::VectorBuffer.1230" }
%"class.WTF::VectorBuffer.1230" = type { %"class.WTF::VectorBufferBase.1231" }
%"class.WTF::VectorBufferBase.1231" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1234" = type { %"class.WTF::VectorBuffer.1235" }
%"class.WTF::VectorBuffer.1235" = type { %"class.WTF::VectorBufferBase.1236" }
%"class.WTF::VectorBufferBase.1236" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1240", %"class.std::__1::unique_ptr.1289", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1237, %class.scoped_refptr.1238, %class.scoped_refptr.1239 }
%class.scoped_refptr.1237 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1253", i8, i8, %class.scoped_refptr.1237, i32, i32 }
%"class.WTF::RefCounted.1253" = type { %"class.base::RefCounted.1254" }
%"class.base::RefCounted.1254" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1238 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1413" }
%"class.blink::PaintPropertyNode.1413" = type { %"class.WTF::RefCounted.1414", i8, i8, %class.scoped_refptr.1238, i32, i32 }
%"class.WTF::RefCounted.1414" = type { %"class.base::RefCounted.1415" }
%"class.base::RefCounted.1415" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1239 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1410" }
%"class.blink::PaintPropertyNode.1410" = type { %"class.WTF::RefCounted.1411", i8, i8, %class.scoped_refptr.1239, i32, i32 }
%"class.WTF::RefCounted.1411" = type { %"class.base::RefCounted.1412" }
%"class.base::RefCounted.1412" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1240" = type { %"class.std::__1::__compressed_pair.1241" }
%"class.std::__1::__compressed_pair.1241" = type { %"struct.std::__1::__compressed_pair_elem.1242" }
%"struct.std::__1::__compressed_pair_elem.1242" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1243", %"class.WTF::Vector.1248", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1243" = type { %"class.WTF::VectorBuffer.1244" }
%"class.WTF::VectorBuffer.1244" = type { %"class.WTF::VectorBufferBase.1245" }
%"class.WTF::VectorBufferBase.1245" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1248" = type { %"class.WTF::VectorBuffer.1249" }
%"class.WTF::VectorBuffer.1249" = type { %"class.WTF::VectorBufferBase.1250" }
%"class.WTF::VectorBufferBase.1250" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1268" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1261, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1262", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1255" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1255" = type { %"class.std::__1::__compressed_pair.1256" }
%"class.std::__1::__compressed_pair.1256" = type { %"struct.std::__1::__compressed_pair_elem.1257" }
%"struct.std::__1::__compressed_pair_elem.1257" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1261 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1395", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1395" = type { %"class.WTF::RefCounted.1396", i8, i8, %class.scoped_refptr.1261, i32, i32 }
%"class.WTF::RefCounted.1396" = type { %"class.base::RefCounted.1397" }
%"class.base::RefCounted.1397" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1398" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1398" = type { %"class.absl::optional_internal::optional_data.1399" }
%"class.absl::optional_internal::optional_data.1399" = type { %"class.absl::optional_internal::optional_data_base.1400" }
%"class.absl::optional_internal::optional_data_base.1400" = type { %"class.absl::optional_internal::optional_data_dtor_base.1401" }
%"class.absl::optional_internal::optional_data_dtor_base.1401" = type { i8, %union.anon.1402 }
%union.anon.1402 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1403", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1403" = type { %"class.std::__1::__vector_base.1404" }
%"class.std::__1::__vector_base.1404" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1405" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1405" = type { %"struct.std::__1::__compressed_pair_elem.1406" }
%"struct.std::__1::__compressed_pair_elem.1406" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1262" = type { %"class.std::__1::__compressed_pair.1263" }
%"class.std::__1::__compressed_pair.1263" = type { %"struct.std::__1::__compressed_pair_elem.1264" }
%"struct.std::__1::__compressed_pair_elem.1264" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1268" = type { %"class.std::__1::__compressed_pair.1269" }
%"class.std::__1::__compressed_pair.1269" = type { %"struct.std::__1::__compressed_pair_elem.1270" }
%"struct.std::__1::__compressed_pair_elem.1270" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1271", %"class.std::__1::unique_ptr.1277", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1271" = type { %"class.std::__1::__compressed_pair.1272" }
%"class.std::__1::__compressed_pair.1272" = type { %"struct.std::__1::__compressed_pair_elem.1273" }
%"struct.std::__1::__compressed_pair_elem.1273" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1277" = type { %"class.std::__1::__compressed_pair.1278" }
%"class.std::__1::__compressed_pair.1278" = type { %"struct.std::__1::__compressed_pair_elem.1279" }
%"struct.std::__1::__compressed_pair_elem.1279" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1289" = type { %"class.std::__1::__compressed_pair.1290" }
%"class.std::__1::__compressed_pair.1290" = type { %"struct.std::__1::__compressed_pair_elem.1291" }
%"struct.std::__1::__compressed_pair_elem.1291" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1292", %"class.absl::optional.1292" }
%"class.absl::optional.1292" = type { %"class.absl::optional_internal::optional_data.1293" }
%"class.absl::optional_internal::optional_data.1293" = type { %"class.absl::optional_internal::optional_data_base.1294" }
%"class.absl::optional_internal::optional_data_base.1294" = type { %"class.absl::optional_internal::optional_data_dtor_base.1295" }
%"class.absl::optional_internal::optional_data_dtor_base.1295" = type { i8, [3 x i8], %union.anon.1296 }
%union.anon.1296 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1234"*, %"class.absl::optional.1302", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1302" = type { %"class.absl::optional_internal::optional_data.1303" }
%"class.absl::optional_internal::optional_data.1303" = type { %"class.absl::optional_internal::optional_data_base.1304" }
%"class.absl::optional_internal::optional_data_base.1304" = type { %"class.absl::optional_internal::optional_data_dtor_base.1305" }
%"class.absl::optional_internal::optional_data_dtor_base.1305" = type { i8, %union.anon.1306 }
%union.anon.1306 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1307", %"class.WTF::Vector.1312" }
%"class.WTF::Vector.1307" = type { %"class.WTF::VectorBuffer.1308" }
%"class.WTF::VectorBuffer.1308" = type { %"class.WTF::VectorBufferBase.1309", [128 x i8] }
%"class.WTF::VectorBufferBase.1309" = type { i32*, i32, i32 }
%"class.WTF::Vector.1312" = type { %"class.WTF::VectorBuffer.1313" }
%"class.WTF::VectorBuffer.1313" = type { %"class.WTF::VectorBufferBase.1314", [128 x i8] }
%"class.WTF::VectorBufferBase.1314" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1317" = type { %"class.WTF::VectorBuffer.1318" }
%"class.WTF::VectorBuffer.1318" = type { %"class.WTF::VectorBufferBase.1319" }
%"class.WTF::VectorBufferBase.1319" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1322" = type { %"class.WTF::HashTable.1323" }
%"class.WTF::HashTable.1323" = type <{ %"struct.WTF::KeyValuePair.1326"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1326" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1327", %"class.WTF::Vector.1332" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1331"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1331" = type opaque
%"class.WTF::Vector.1332" = type { %"class.WTF::VectorBuffer.1333" }
%"class.WTF::VectorBuffer.1333" = type { %"class.WTF::VectorBufferBase.1334" }
%"class.WTF::VectorBufferBase.1334" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1340" = type { %"class.std::__1::__compressed_pair.1341" }
%"class.std::__1::__compressed_pair.1341" = type { %"struct.std::__1::__compressed_pair_elem.1342" }
%"struct.std::__1::__compressed_pair_elem.1342" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1346" = type { %"class.WTF::VectorBuffer.1347" }
%"class.WTF::VectorBuffer.1347" = type { %"class.WTF::VectorBufferBase.1348" }
%"class.WTF::VectorBufferBase.1348" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1351 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1352" = type { %"class.blink::MemberBase.1353" }
%"class.blink::MemberBase.1353" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1354" = type { %"class.blink::MemberBase.1355" }
%"class.blink::MemberBase.1355" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1356" = type { %"class.blink::MemberBase.1357" }
%"class.blink::MemberBase.1357" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1358" = type { %"class.WTF::HashSet.1361" }
%"class.WTF::HashSet.1361" = type { %"class.WTF::HashTable.1362" }
%"class.WTF::HashTable.1362" = type <{ %"class.blink::WeakMember.1364"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1364" = type opaque
%"class.blink::HeapHashSet.1365" = type { %"class.WTF::HashSet.1368" }
%"class.WTF::HashSet.1368" = type { %"class.WTF::HashTable.1369" }
%"class.WTF::HashTable.1369" = type <{ %"class.blink::WeakMember.1371"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1371" = type opaque
%"class.std::__1::unique_ptr.1372" = type { %"class.std::__1::__compressed_pair.1373" }
%"class.std::__1::__compressed_pair.1373" = type { %"struct.std::__1::__compressed_pair_elem.1374" }
%"struct.std::__1::__compressed_pair_elem.1374" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1375" }
%"class.base::time_internal::TimeBase.1375" = type { i64 }
%"class.std::__1::unique_ptr.1379" = type { %"class.std::__1::__compressed_pair.1380" }
%"class.std::__1::__compressed_pair.1380" = type { %"struct.std::__1::__compressed_pair_elem.1381" }
%"struct.std::__1::__compressed_pair_elem.1381" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1382", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1382" = type { %"class.absl::optional_internal::optional_data.1383" }
%"class.absl::optional_internal::optional_data.1383" = type { %"class.absl::optional_internal::optional_data_base.1384" }
%"class.absl::optional_internal::optional_data_base.1384" = type { %"class.absl::optional_internal::optional_data_dtor_base.1385" }
%"class.absl::optional_internal::optional_data_dtor_base.1385" = type { i8, %union.anon.1386 }
%union.anon.1386 = type { %"class.base::Time" }
%"class.WTF::Vector.1390" = type { %"class.WTF::VectorBuffer.1391" }
%"class.WTF::VectorBuffer.1391" = type { %"class.WTF::VectorBufferBase.1392" }
%"class.WTF::VectorBufferBase.1392" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.blink::Member.860" = type { %"class.blink::MemberBase.861" }
%"class.blink::MemberBase.861" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.865" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.791", %"class.blink::Member.791" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.791", %"class.blink::Member.793", %"class.blink::Member.791", %"class.blink::Member.791", %"class.blink::Member.795" }
%"class.blink::Member.793" = type { %"class.blink::MemberBase.794" }
%"class.blink::MemberBase.794" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.843", %"class.blink::Member.658", %"class.blink::Member.793", %"class.blink::Member.845", %"class.blink::Member.845", %"class.blink::Member.888", %"class.blink::Member.890", %"class.blink::Member.892", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.897", %"class.blink::HeapVector.899" }
%"class.blink::Member.843" = type { %"class.blink::MemberBase.844" }
%"class.blink::MemberBase.844" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.845" = type { %"class.blink::MemberBase.846" }
%"class.blink::MemberBase.846" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.849" }
%"class.blink::HeapHashMap.849" = type { %"class.WTF::HashMap.852" }
%"class.WTF::HashMap.852" = type { %"class.WTF::HashTable.853" }
%"class.WTF::HashTable.853" = type <{ %"struct.WTF::KeyValuePair.855"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.855" = type { %"class.WTF::AtomicString", %"class.blink::Member.856" }
%"class.blink::Member.856" = type { %"class.blink::MemberBase.857" }
%"class.blink::MemberBase.857" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.860", i32, %"class.blink::HeapVector.881" }
%"class.blink::HeapVector.881" = type { %"class.WTF::Vector.884" }
%"class.WTF::Vector.884" = type { %"class.WTF::VectorBuffer.885" }
%"class.WTF::VectorBuffer.885" = type { %"class.WTF::VectorBufferBase.886" }
%"class.WTF::VectorBufferBase.886" = type { %"class.blink::Member.860"*, i32, i32 }
%"class.blink::Member.888" = type { %"class.blink::MemberBase.889" }
%"class.blink::MemberBase.889" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.890" = type { %"class.blink::MemberBase.891" }
%"class.blink::MemberBase.891" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.892" = type { %"class.blink::MemberBase.893" }
%"class.blink::MemberBase.893" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.894" }
%"class.blink::Member.894" = type { %"class.blink::MemberBase.895" }
%"class.blink::MemberBase.895" = type { %"class.blink::HeapHashMap.896"* }
%"class.blink::HeapHashMap.896" = type opaque
%"class.blink::Member.897" = type { %"class.blink::MemberBase.898" }
%"class.blink::MemberBase.898" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.899" = type { %"class.WTF::Vector.902" }
%"class.WTF::Vector.902" = type { %"class.WTF::VectorBuffer.903" }
%"class.WTF::VectorBuffer.903" = type { %"class.WTF::VectorBufferBase.904" }
%"class.WTF::VectorBufferBase.904" = type { %"class.blink::Member.905"*, i32, i32 }
%"class.blink::Member.905" = type { %"class.blink::MemberBase.906" }
%"class.blink::MemberBase.906" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.907", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.909, %"class.WTF::Vector.910", %"class.WTF::Vector.910", %"class.blink::Member.791", %"class.blink::Member.915", %"class.blink::HeapHashSet.919", %"class.blink::Member.658", %"class.WTF::HashSet.926", %"class.WTF::TextPosition", %"class.blink::Member.930", %"class.blink::HeapVector.932", %"class.blink::Member.939" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.907" = type { %"class.blink::MemberBase.908" }
%"class.blink::MemberBase.908" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.909 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.910" = type { %"class.WTF::VectorBuffer.911" }
%"class.WTF::VectorBuffer.911" = type { %"class.WTF::VectorBufferBase.912" }
%"class.WTF::VectorBufferBase.912" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.917" }
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.919" = type { %"class.WTF::HashSet.922" }
%"class.WTF::HashSet.922" = type { %"class.WTF::HashTable.923" }
%"class.WTF::HashTable.923" = type <{ %"class.blink::WeakMember.925"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.925" = type { %"class.blink::MemberBase.794" }
%"class.WTF::HashSet.926" = type { %"class.WTF::HashTable.927" }
%"class.WTF::HashTable.927" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.930" = type { %"class.blink::MemberBase.931" }
%"class.blink::MemberBase.931" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.932" = type { %"class.WTF::Vector.935" }
%"class.WTF::Vector.935" = type { %"class.WTF::VectorBuffer.936" }
%"class.WTF::VectorBuffer.936" = type { %"class.WTF::VectorBufferBase.937" }
%"class.WTF::VectorBufferBase.937" = type { %"class.blink::Member.915"*, i32, i32 }
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::Member.795" = type { %"class.blink::MemberBase.796" }
%"class.blink::MemberBase.796" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.791" = type { %"class.blink::MemberBase.792" }
%"class.blink::MemberBase.792" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.862 }
%class.scoped_refptr.862 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.863", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.863" = type { %"class.base::RefCounted.864" }
%"class.base::RefCounted.864" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.865" = type { %"class.blink::MemberBase.866" }
%"class.blink::MemberBase.866" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.869", %"class.blink::Member.871", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.869" = type { %"class.WTF::SingleThreadedBitField.870" }
%"class.WTF::SingleThreadedBitField.870" = type { i32 }
%"class.blink::Member.871" = type { %"class.blink::MemberBase.872" }
%"class.blink::MemberBase.872" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.873 }
%class.scoped_refptr.873 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.874", %"class.WTF::AtomicString", %"class.WTF::Vector.876" }
%"class.WTF::RefCounted.874" = type { %"class.base::RefCounted.875" }
%"class.base::RefCounted.875" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.876" = type { %"class.WTF::VectorBuffer.877" }
%"class.WTF::VectorBuffer.877" = type { %"class.WTF::VectorBufferBase.878", [32 x i8] }
%"class.WTF::VectorBufferBase.878" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1027" = type { %"class.blink::MemberBase.1028" }
%"class.blink::MemberBase.1028" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1029" = type { %"class.blink::MemberBase.1030" }
%"class.blink::MemberBase.1030" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1031" = type { %"class.blink::MemberBase.1032" }
%"class.blink::MemberBase.1032" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1033" = type { %"class.blink::MemberBase.1034" }
%"class.blink::MemberBase.1034" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.1035 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1036" = type { %"class.blink::MemberBase.1037" }
%"class.blink::MemberBase.1037" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type { %"class.base::sequence_manager::TaskTimeObserver", i8, %"class.base::TimeDelta", i32, i32, i32, i8*, [7 x %"class.base::TimeDelta"], %"class.blink::Member.787", %"class.blink::Member.547", %"class.v8::Isolate"*, i8, i8, [6 x i8], %"class.blink::HeapHashMap.1040" }
%"class.base::sequence_manager::TaskTimeObserver" = type { i32 (...)** }
%"class.blink::HeapHashMap.1040" = type { %"class.WTF::HashMap.1043" }
%"class.WTF::HashMap.1043" = type { %"class.WTF::HashTable.1044" }
%"class.WTF::HashTable.1044" = type <{ %"struct.WTF::KeyValuePair.1046"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1046" = type opaque
%"class.blink::Member.1047" = type { %"class.blink::MemberBase.1048" }
%"class.blink::MemberBase.1048" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.1049" = type { %"class.blink::MemberBase.1050" }
%"class.blink::MemberBase.1050" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1051" = type { %"class.blink::MemberBase.1052" }
%"class.blink::MemberBase.1052" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1053" = type { %"class.blink::MemberBase.1054" }
%"class.blink::MemberBase.1054" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.1055" = type { %"class.blink::MemberBase.1056" }
%"class.blink::MemberBase.1056" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1057" = type { %"class.blink::MemberBase.1058" }
%"class.blink::MemberBase.1058" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.1059" = type { %"class.blink::Member.1060" }
%"class.blink::Member.1060" = type { %"class.blink::MemberBase.1061" }
%"class.blink::MemberBase.1061" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2385" }
%"class.mojo::Remote.2385" = type { %"class.mojo::internal::InterfacePtrState.2386" }
%"class.mojo::internal::InterfacePtrState.2386" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2387" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.321, %"class.std::__1::unique_ptr.432", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.323, i32 }>
%class.scoped_refptr.321 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.323, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.394", %"class.absl::optional.399", %"class.absl::optional.355", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.423", i8, [7 x i8], %class.scoped_refptr.323, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.322" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.323, %"class.std::__1::unique_ptr.344", %"class.absl::optional", %"struct.std::__1::atomic.182", i8, i8, i8, i8, i32, i32, %"class.absl::optional.355", %"class.std::__1::unique_ptr.360", i8, i64, %class.scoped_refptr.390, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.393" }
%"class.std::__1::unique_ptr.344" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.323, i8, %"class.mojo::ScopedHandleBase.347", %class.scoped_refptr.348, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.349" }
%"class.mojo::ScopedHandleBase.347" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.348 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.349" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.353 }
%union.anon.353 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.354", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.354" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.363", i8, i64, %class.scoped_refptr.364, %class.scoped_refptr.386 }
%"class.base::RepeatingCallback.363" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.364 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.365", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.375", i8, [7 x i8] }>
%"class.base::RefCounted.365" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.366 }
%class.scoped_refptr.366 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.367", %"class.std::__1::__compressed_pair.372" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"class.std::__1::map.375" = type { %"class.std::__1::__tree.376" }
%"class.std::__1::__tree.376" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.377", %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%class.scoped_refptr.386 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.390 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.392 }
%class.scoped_refptr.392 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.393" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.394" = type { %"class.absl::optional_internal::optional_data.395" }
%"class.absl::optional_internal::optional_data.395" = type { %"class.absl::optional_internal::optional_data_base.396" }
%"class.absl::optional_internal::optional_data_base.396" = type { %"class.absl::optional_internal::optional_data_dtor_base.397" }
%"class.absl::optional_internal::optional_data_dtor_base.397" = type { i8, %union.anon.398 }
%union.anon.398 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.399" = type { %"class.absl::optional_internal::optional_data.400" }
%"class.absl::optional_internal::optional_data.400" = type { %"class.absl::optional_internal::optional_data_base.401" }
%"class.absl::optional_internal::optional_data_base.401" = type { %"class.absl::optional_internal::optional_data_dtor_base.402" }
%"class.absl::optional_internal::optional_data_dtor_base.402" = type { i8, [7 x i8], %union.anon.403 }
%union.anon.403 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.355" = type { %"class.absl::optional_internal::optional_data.356" }
%"class.absl::optional_internal::optional_data.356" = type { %"class.absl::optional_internal::optional_data_base.357" }
%"class.absl::optional_internal::optional_data_base.357" = type { %"class.absl::optional_internal::optional_data_dtor_base.358" }
%"class.absl::optional_internal::optional_data_dtor_base.358" = type { i8, %union.anon.359 }
%union.anon.359 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.408 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.408 = type { %"class.std::__1::map.411" }
%"class.std::__1::map.411" = type { %"class.std::__1::__tree.412" }
%"class.std::__1::__tree.412" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.413", %"class.std::__1::__compressed_pair.417" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.422"*, i64 }
%"class.std::__1::unique_ptr.422" = type opaque
%"class.std::__1::map.423" = type { %"class.std::__1::__tree.424" }
%"class.std::__1::__tree.424" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.425", %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2387" = type { %"class.std::__1::__compressed_pair.2388" }
%"class.std::__1::__compressed_pair.2388" = type { %"struct.std::__1::__compressed_pair_elem.2389" }
%"struct.std::__1::__compressed_pair_elem.2389" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1062" = type { %"class.std::__1::__compressed_pair.1063" }
%"class.std::__1::__compressed_pair.1063" = type { %"struct.std::__1::__compressed_pair_elem.1064" }
%"struct.std::__1::__compressed_pair_elem.1064" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.1065, %"class.blink::WebVector", %"class.base::WaitableEvent"* }
%class.scoped_refptr.1065 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type opaque
%"class.blink::WebVector" = type { %"class.std::__1::vector.1066" }
%"class.std::__1::vector.1066" = type { %"class.std::__1::__vector_base.1067" }
%"class.std::__1::__vector_base.1067" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.1068" }
%"class.std::__1::__compressed_pair.1068" = type { %"struct.std::__1::__compressed_pair_elem.1069" }
%"struct.std::__1::__compressed_pair_elem.1069" = type { %"class.blink::WebString"* }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.1073, i8, [7 x i8] }>
%class.scoped_refptr.1073 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.1074", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.1074" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.1075" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1082" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1083" = type { %"class.std::__1::__compressed_pair.1084" }
%"class.std::__1::__compressed_pair.1084" = type { %"struct.std::__1::__compressed_pair_elem.1085" }
%"struct.std::__1::__compressed_pair_elem.1085" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.1089" = type { %"class.std::__1::__compressed_pair.1090" }
%"class.std::__1::__compressed_pair.1090" = type { %"struct.std::__1::__compressed_pair_elem.1091" }
%"struct.std::__1::__compressed_pair_elem.1091" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1095" }
%"class.blink::Member.1095" = type { %"class.blink::MemberBase.1096" }
%"class.blink::MemberBase.1096" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2395" }
%"class.mojo::AssociatedRemote.2395" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2396" }
%"class.mojo::internal::AssociatedInterfacePtrState.2396" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2397" }
%"class.std::__1::unique_ptr.2397" = type { %"class.std::__1::__compressed_pair.2398" }
%"class.std::__1::__compressed_pair.2398" = type { %"struct.std::__1::__compressed_pair_elem.2399" }
%"struct.std::__1::__compressed_pair_elem.2399" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1097" = type { %"class.blink::Member.1098" }
%"class.blink::Member.1098" = type { %"class.blink::MemberBase.1099" }
%"class.blink::MemberBase.1099" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2405" }
%"class.mojo::AssociatedRemote.2405" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2406" }
%"class.mojo::internal::AssociatedInterfacePtrState.2406" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2407" }
%"class.std::__1::unique_ptr.2407" = type { %"class.std::__1::__compressed_pair.2408" }
%"class.std::__1::__compressed_pair.2408" = type { %"struct.std::__1::__compressed_pair_elem.2409" }
%"struct.std::__1::__compressed_pair_elem.2409" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1100" }
%"class.blink::Member.1100" = type { %"class.blink::MemberBase.1101" }
%"class.blink::MemberBase.1101" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2415", %"class.blink::Member.787", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2415" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2416" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.432" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2416" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1102" = type { %"class.blink::Member.1103" }
%"class.blink::Member.1103" = type { %"class.blink::MemberBase.1104" }
%"class.blink::MemberBase.1104" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2419", %"class.blink::Member.787", %"class.mojo::AssociatedReceiver.2420" }
%"class.blink::ThreadState::PrefinalizerRegistration.2419" = type { i8 }
%"class.mojo::AssociatedReceiver.2420" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2421" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2421" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1105" }
%"class.blink::Member.1105" = type { %"class.blink::MemberBase.1106" }
%"class.blink::MemberBase.1106" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2424", %"class.blink::Member.787", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2424" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.321, %"class.std::__1::unique_ptr.432", %"class.base::WeakPtrFactory.2425" }
%"class.base::WeakPtrFactory.2425" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1107" = type { %"class.blink::Member.1108" }
%"class.blink::Member.1108" = type { %"class.blink::MemberBase.1109" }
%"class.blink::MemberBase.1109" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2428", %"class.blink::Member.787", %"class.mojo::AssociatedReceiver.2429" }
%"class.blink::ThreadState::PrefinalizerRegistration.2428" = type { i8 }
%"class.mojo::AssociatedReceiver.2429" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2430" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2430" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1110" = type { %"class.blink::MemberBase.1111" }
%"class.blink::MemberBase.1111" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1112" = type { %"class.blink::MemberBase.1113" }
%"class.blink::MemberBase.1113" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1114" = type { %"class.blink::MemberBase.1115" }
%"class.blink::MemberBase.1115" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1116" = type { %"class.blink::MemberBase.1117" }
%"class.blink::MemberBase.1117" = type { %"class.blink::HeapHashMap.1118"* }
%"class.blink::HeapHashMap.1118" = type opaque
%"class.mojo::StructPtr.1119" = type { %"class.std::__1::unique_ptr.1120" }
%"class.std::__1::unique_ptr.1120" = type { %"class.std::__1::__compressed_pair.1121" }
%"class.std::__1::__compressed_pair.1121" = type { %"struct.std::__1::__compressed_pair_elem.1122" }
%"struct.std::__1::__compressed_pair_elem.1122" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1123", %"class.mojo::InlinedStructPtr.1124" }
%"class.mojo::InlinedStructPtr.1123" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1124" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1130" = type { %"class.absl::optional_internal::optional_data.1131" }
%"class.absl::optional_internal::optional_data.1131" = type { %"class.absl::optional_internal::optional_data_base.1132" }
%"class.absl::optional_internal::optional_data_base.1132" = type { %"class.absl::optional_internal::optional_data_dtor_base.1133" }
%"class.absl::optional_internal::optional_data_dtor_base.1133" = type { i8, %union.anon.1134 }
%union.anon.1134 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.308", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.952" }
%"class.std::__1::vector.952" = type { %"class.std::__1::__vector_base.953" }
%"class.std::__1::__vector_base.953" = type { %"struct.std::__1::pair.954"*, %"struct.std::__1::pair.954"*, %"class.std::__1::__compressed_pair.955" }
%"struct.std::__1::pair.954" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.955" = type { %"struct.std::__1::__compressed_pair_elem.956" }
%"struct.std::__1::__compressed_pair_elem.956" = type { %"struct.std::__1::pair.954"* }
%"class.blink::Member.960" = type { %"class.blink::MemberBase.961" }
%"class.blink::MemberBase.961" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.962" = type { %"class.absl::optional_internal::optional_data.963" }
%"class.absl::optional_internal::optional_data.963" = type { %"class.absl::optional_internal::optional_data_base.964" }
%"class.absl::optional_internal::optional_data_base.964" = type { %"class.absl::optional_internal::optional_data_dtor_base.965" }
%"class.absl::optional_internal::optional_data_dtor_base.965" = type { i8, %union.anon.966 }
%union.anon.966 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.967" = type { %"class.absl::optional_internal::optional_data.968" }
%"class.absl::optional_internal::optional_data.968" = type { %"class.absl::optional_internal::optional_data_base.969" }
%"class.absl::optional_internal::optional_data_base.969" = type { %"class.absl::optional_internal::optional_data_dtor_base.970" }
%"class.absl::optional_internal::optional_data_dtor_base.970" = type { i8, %union.anon.971 }
%union.anon.971 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.972 }
%class.scoped_refptr.972 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.973" }
%"class.blink::HeapHashSet.973" = type { %"class.WTF::HashSet.976" }
%"class.WTF::HashSet.976" = type { %"class.WTF::HashTable.977" }
%"class.WTF::HashTable.977" = type <{ %"class.blink::WeakMember.979"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.979" = type opaque
%"class.blink::Member.310" = type { %"class.blink::MemberBase.311" }
%"class.blink::MemberBase.311" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.316" = type { %"class.WTF::VectorBuffer.317" }
%"class.WTF::VectorBuffer.317" = type { %"class.WTF::VectorBufferBase.318" }
%"class.WTF::VectorBufferBase.318" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType.319", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.482" }
%"class.std::__1::unique_ptr.482" = type { %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.553", i32, i8, [3 x i8], %"class.blink::HeapVector.555", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.564", %"class.blink::Member.566", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.575", %"class.blink::Member.634", %"class.blink::Member.636", i8 }>
%"class.blink::Supplementable.648" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.649" }
%"class.blink::HeapHashMap.649" = type { %"class.WTF::HashMap.652" }
%"class.WTF::HashMap.652" = type { %"class.WTF::HashTable.653" }
%"class.WTF::HashTable.653" = type <{ %"struct.WTF::KeyValuePair.655"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.655" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.656" = type { %"class.blink::MemberBase.657" }
%"class.blink::MemberBase.657" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.658" = type { %"class.blink::MemberBase.659" }
%"class.blink::MemberBase.659" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.1431", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.1390", %"class.WTF::Vector.1390", i8, i32, %"class.blink::Member.814", %"class.blink::Member.547", %"class.blink::Member.1439", %"class.blink::Member.1441", %"class.blink::Member.1443", %"class.blink::Member.1445", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1447", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1453", %"class.blink::Member.1455", %"class.blink::Member.905", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1457", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1463", %"class.blink::HeapVector.881", %"class.blink::Member.860", %"class.blink::Member.806", %"class.blink::Member.860", %"class.blink::Member.860", %"class.blink::Member.860", %"class.blink::UserActionElementSet", %"class.blink::Member.1472", double, double, i64, i64, %"class.blink::HeapHashSet.1474", %"class.blink::HeapHashSet.1481", i16, i8, %"class.blink::Member.1488", %"class.blink::Member.1490", %"class.blink::Member.1492", %"class.blink::Member.1494", %"class.blink::TextLinkColors", %"class.blink::Member.1496", i8, [7 x i8], %"class.blink::HeapHashMap.1498", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.860", %"class.WTF::Vector.1505", %"class.blink::Member.1510", %"class.blink::Member.1512", i8, %"class.blink::Member.860", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1514", %"class.blink::HeapVector.1516", %"class.std::__1::unique_ptr.1524", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1530", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1543", %"class.WTF::Vector.1545", i8, i8, %"class.std::__1::unique_ptr.1550", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.881", %"class.blink::HeapVector.1556", i32, i8, %"class.blink::HeapTaskRunnerTimer.1463", %"class.blink::HeapTaskRunnerTimer.1463", %"class.blink::DocumentTiming", %"class.blink::Member.1564", i8, i32, %"class.blink::Member.1566", %"class.blink::Member.1568", %"class.blink::Member.1570", %"class.blink::HeapTaskRunnerTimer.1463", %"class.blink::Member.1572", %"class.WTF::HashMap.1574", %"class.blink::Member.1579", %"class.blink::Member.1581", %"class.blink::Member.1583", %"class.blink::Member.1585", %"class.blink::Member.658", %"class.blink::Member.658", %"class.blink::HeapTaskRunnerTimer.1463", %"class.blink::HeapHashSet.1587", i8, i32, %"class.blink::Member.1594", %"class.blink::Member.1596", i32, %"class.blink::Member.1598", %"class.blink::Member.1600", %"class.blink::Member.1602", %"class.std::__1::unique_ptr.1604", i64, %"class.std::__1::unique_ptr.1610", i32, i32, %"class.blink::Member.1616", %"class.blink::Member.1618", %"class.blink::Member.1620", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1622", %"class.WTF::Vector.829", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1624", %"class.blink::Member.1631", %"class.std::__1::unique_ptr.1633", %"class.blink::Member.1639", i8, i8, %"class.WTF::String", %"class.blink::Member.1641", i8, [7 x i8], %"class.blink::HeapHashMap.1643", %"class.blink::HeapObserverSet.1650", %"class.blink::Member.1658", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1660", i32, i8, i8, %"class.blink::WeakMember.1662", %"class.blink::Member.1663" }
%"class.blink::Supplementable.1431" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1432" }
%"class.blink::HeapHashMap.1432" = type { %"class.WTF::HashMap.1435" }
%"class.WTF::HashMap.1435" = type { %"class.WTF::HashTable.1436" }
%"class.WTF::HashTable.1436" = type <{ %"struct.WTF::KeyValuePair.1438"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1438" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.814" = type { %"class.blink::MemberBase.815" }
%"class.blink::MemberBase.815" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::Member.1439" = type { %"class.blink::MemberBase.1440" }
%"class.blink::MemberBase.1440" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration.1678", %"class.blink::Member.1679", %"class.blink::Member.1681", %"class.blink::Member.1685", %class.scoped_refptr.288, %class.scoped_refptr.288, %"class.blink::Member.1687", %"class.blink::Member.1689", %"class.blink::Member.1695", %"class.blink::Member.1699", %"class.blink::Member.1750", %"class.blink::HeapHashMap.1752", %"class.blink::HeapHashSet.1759", %"class.blink::HeapHashSet.1759", %"class.blink::HeapHashMap.1914", %"class.blink::HeapVector.1921", %"class.blink::Member.1929", %"class.blink::HeapTaskRunnerTimer.1931", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.1933", %"class.WTF::Vector.1940", %"class.blink::HeapHashSet.1946", %"class.blink::HeapHashSet.1946", %"class.std::__1::unique_ptr.1952", %"class.base::WeakPtr.1744", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote.1958", %"class.blink::Member.1961", i8, i8, %"class.base::WeakPtrFactory.1963" }
%"class.blink::ThreadState::PrefinalizerRegistration.1678" = type { i8 }
%"class.blink::Member.1679" = type { %"class.blink::MemberBase.1680" }
%"class.blink::MemberBase.1680" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.1681" = type { %"class.blink::MemberBase.1682" }
%"class.blink::MemberBase.1682" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type { i32 (...)** }
%"class.blink::Member.1685" = type { %"class.blink::MemberBase.1686" }
%"class.blink::MemberBase.1686" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%"class.blink::Member.1687" = type { %"class.blink::MemberBase.1688" }
%"class.blink::MemberBase.1688" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.1689" = type { %"class.blink::MemberBase.1690" }
%"class.blink::MemberBase.1690" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.1693" }
%"class.blink::Member.1693" = type { %"class.blink::MemberBase.1694" }
%"class.blink::MemberBase.1694" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.1695" = type { %"class.blink::MemberBase.1696" }
%"class.blink::MemberBase.1696" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.1699" = type { %"class.blink::MemberBase.1700" }
%"class.blink::MemberBase.1700" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.1703", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.1705", %"class.WTF::HashSet.1710", i8, [3 x i8], i32, %"class.blink::HeapHashMap.1714", %"class.std::__1::map.1721", %"class.std::__1::map.1732", %"class.std::__1::unique_ptr.1741", %"class.blink::Member.1689", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.1748", %"class.mojo::InlinedStructPtr.1124", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.1703" = type { %"class.blink::MemberBase.1704" }
%"class.blink::MemberBase.1704" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.1705" = type { %"class.WTF::HashTable.1706" }
%"class.WTF::HashTable.1706" = type <{ %"struct.WTF::KeyValuePair.1709"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1709" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.1710" = type { %"class.WTF::HashTable.1711" }
%"class.WTF::HashTable.1711" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.1714" = type { %"class.WTF::HashMap.1717" }
%"class.WTF::HashMap.1717" = type { %"class.WTF::HashTable.1718" }
%"class.WTF::HashTable.1718" = type <{ %"struct.WTF::KeyValuePair.1720"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1720" = type opaque
%"class.std::__1::map.1721" = type { %"class.std::__1::__tree.1722" }
%"class.std::__1::__tree.1722" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1723", %"class.std::__1::__compressed_pair.1727" }
%"class.std::__1::__compressed_pair.1723" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"class.std::__1::__compressed_pair.1727" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"class.std::__1::map.1732" = type { %"class.std::__1::__tree.1733" }
%"class.std::__1::__tree.1733" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1734", %"class.std::__1::__compressed_pair.1738" }
%"class.std::__1::__compressed_pair.1734" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"class.std::__1::__compressed_pair.1738" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"class.std::__1::unique_ptr.1741" = type { %"class.std::__1::__compressed_pair.1742" }
%"class.std::__1::__compressed_pair.1742" = type { %"struct.std::__1::__compressed_pair_elem.1743" }
%"struct.std::__1::__compressed_pair_elem.1743" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr.1744", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.1748" = type { %"class.blink::MemberBase.1749" }
%"class.blink::MemberBase.1749" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.blink::Member.1750" = type { %"class.blink::MemberBase.1751" }
%"class.blink::MemberBase.1751" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.1752" = type { %"class.WTF::HashMap.1755" }
%"class.WTF::HashMap.1755" = type { %"class.WTF::HashTable.1756" }
%"class.WTF::HashTable.1756" = type <{ %"struct.WTF::KeyValuePair.1758"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1758" = type opaque
%"class.blink::HeapHashSet.1759" = type { %"class.WTF::HashSet.1762" }
%"class.WTF::HashSet.1762" = type { %"class.WTF::HashTable.1763" }
%"class.WTF::HashTable.1763" = type <{ %"class.blink::WeakMember.1765"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1765" = type { %"class.blink::MemberBase.1766" }
%"class.blink::MemberBase.1766" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.1769", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.1789", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.1872", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.1889", %"class.blink::ResourceResponse", %class.scoped_refptr.1891, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.1769" = type { %"class.absl::optional_internal::optional_data.1770" }
%"class.absl::optional_internal::optional_data.1770" = type { %"class.absl::optional_internal::optional_data_base.1771" }
%"class.absl::optional_internal::optional_data_base.1771" = type { %"class.absl::optional_internal::optional_data_dtor_base.1772" }
%"class.absl::optional_internal::optional_data_dtor_base.1772" = type { i8, %union.anon.1773 }
%union.anon.1773 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.1774", i8, %"class.absl::optional.1779", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.1774" = type { %"class.absl::optional_internal::optional_data.1775" }
%"class.absl::optional_internal::optional_data.1775" = type { %"class.absl::optional_internal::optional_data_base.1776" }
%"class.absl::optional_internal::optional_data_base.1776" = type { %"class.absl::optional_internal::optional_data_dtor_base.1777" }
%"class.absl::optional_internal::optional_data_dtor_base.1777" = type { i8, [7 x i8], %union.anon.1778 }
%union.anon.1778 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.1779" = type { %"class.absl::optional_internal::optional_data.1780" }
%"class.absl::optional_internal::optional_data.1780" = type { %"class.absl::optional_internal::optional_data_base.1781" }
%"class.absl::optional_internal::optional_data_base.1781" = type { %"class.absl::optional_internal::optional_data_dtor_base.1782" }
%"class.absl::optional_internal::optional_data_dtor_base.1782" = type { i8, %union.anon.1783 }
%union.anon.1783 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.1784", %"class.WTF::Vector.605" }
%"class.WTF::Vector.1784" = type { %"class.WTF::VectorBuffer.1785" }
%"class.WTF::VectorBuffer.1785" = type { %"class.WTF::VectorBufferBase.1786" }
%"class.WTF::VectorBufferBase.1786" = type { i32*, i32, i32 }
%"class.WTF::Vector.1789" = type { %"class.WTF::VectorBuffer.1790" }
%"class.WTF::VectorBuffer.1790" = type { %"class.WTF::VectorBufferBase.1791" }
%"class.WTF::VectorBufferBase.1791" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.1868" }
%"class.WTF::HashMap.1868" = type { %"class.WTF::HashTable.1869" }
%"class.WTF::HashTable.1869" = type <{ %"struct.WTF::KeyValuePair.1871"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1871" = type <{ %"class.blink::WeakMember.2445", i32, [4 x i8] }>
%"class.blink::WeakMember.2445" = type { %"class.blink::MemberBase.2446" }
%"class.blink::MemberBase.2446" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2447", [7 x i8], %"class.blink::Member.1927", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.2447" = type { i8 }
%"class.blink::Member.1927" = type { %"class.blink::MemberBase.1766" }
%"class.blink::HeapHashSet.1872" = type { %"class.WTF::HashSet.1875" }
%"class.WTF::HashSet.1875" = type { %"class.WTF::HashTable.1876" }
%"class.WTF::HashTable.1876" = type <{ %"class.blink::WeakMember.1878"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1878" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias.1879", %"class.WTF::String", %"class.WTF::HashSet.1880", i8, i8, %class.scoped_refptr.1460, %class.scoped_refptr.1885, %class.scoped_refptr.1887 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.base::StrongAlias.1879" = type { i8 }
%"class.WTF::HashSet.1880" = type { %"class.WTF::HashTable.1881" }
%"class.WTF::HashTable.1881" = type <{ %"struct.std::__1::pair.1884"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.1884" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.1460 = type { %"class.blink::DOMWrapperWorld"* }
%class.scoped_refptr.1885 = type { %"class.base::RefCountedData.1886"* }
%"class.base::RefCountedData.1886" = type opaque
%class.scoped_refptr.1887 = type { %"class.base::RefCountedData.1888"* }
%"class.base::RefCountedData.1888" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.513, %class.scoped_refptr.513, %class.scoped_refptr.513, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.1797, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.1810", %"class.absl::optional.1815", %"class.absl::optional.1825", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.967", %"class.absl::optional.1825", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.1825", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.967", %"class.absl::optional.1830", i8, %class.scoped_refptr.1836 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.1792" }
%"class.WTF::HashMap.1792" = type { %"class.WTF::HashTable.1793" }
%"class.WTF::HashTable.1793" = type <{ %"struct.WTF::KeyValuePair.1796"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1796" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.1797 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.1798", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector.1799", %class.scoped_refptr.1808, i8, %"class.url::Origin" }
%"class.base::RefCounted.1798" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector.1799" = type { %"class.std::__1::vector.1800" }
%"class.std::__1::vector.1800" = type { %"class.std::__1::__vector_base.1801" }
%"class.std::__1::__vector_base.1801" = type { %"class.std::__1::unique_ptr.1802"*, %"class.std::__1::unique_ptr.1802"*, %"class.std::__1::__compressed_pair.1803" }
%"class.std::__1::unique_ptr.1802" = type { %"class.std::__1::__compressed_pair.2431" }
%"class.std::__1::__compressed_pair.2431" = type { %"struct.std::__1::__compressed_pair_elem.2432" }
%"struct.std::__1::__compressed_pair_elem.2432" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1803" = type { %"struct.std::__1::__compressed_pair_elem.1804" }
%"struct.std::__1::__compressed_pair_elem.1804" = type { %"class.std::__1::unique_ptr.1802"* }
%class.scoped_refptr.1808 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1809", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1809" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.1810" = type { %"class.absl::optional_internal::optional_data.1811" }
%"class.absl::optional_internal::optional_data.1811" = type { %"class.absl::optional_internal::optional_data_base.1812" }
%"class.absl::optional_internal::optional_data_base.1812" = type { %"class.absl::optional_internal::optional_data_dtor_base.1813" }
%"class.absl::optional_internal::optional_data_dtor_base.1813" = type { i8, %union.anon.1814 }
%union.anon.1814 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.1815" = type { %"class.absl::optional_internal::optional_data.1816" }
%"class.absl::optional_internal::optional_data.1816" = type { %"class.absl::optional_internal::optional_data_base.1817" }
%"class.absl::optional_internal::optional_data_base.1817" = type { %"class.absl::optional_internal::optional_data_dtor_base.1818" }
%"class.absl::optional_internal::optional_data_dtor_base.1818" = type { i8, %union.anon.1819 }
%union.anon.1819 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.1820", %"class.WTF::Vector.605", %"class.WTF::String" }
%"class.WTF::Vector.1820" = type { %"class.WTF::VectorBuffer.1821" }
%"class.WTF::VectorBuffer.1821" = type { %"class.WTF::VectorBufferBase.1822" }
%"class.WTF::VectorBufferBase.1822" = type { %class.scoped_refptr.513*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.437", %"class.absl::optional.437" }
%"class.absl::optional.1825" = type { %"class.absl::optional_internal::optional_data.1826" }
%"class.absl::optional_internal::optional_data.1826" = type { %"class.absl::optional_internal::optional_data_base.1827" }
%"class.absl::optional_internal::optional_data_base.1827" = type { %"class.absl::optional_internal::optional_data_dtor_base.1828" }
%"class.absl::optional_internal::optional_data_dtor_base.1828" = type { i8, %union.anon.1829 }
%union.anon.1829 = type { %"class.WTF::String" }
%"class.absl::optional.1830" = type { %"class.absl::optional_internal::optional_data.1831" }
%"class.absl::optional_internal::optional_data.1831" = type { %"class.absl::optional_internal::optional_data_base.1832" }
%"class.absl::optional_internal::optional_data_base.1832" = type { %"class.absl::optional_internal::optional_data_dtor_base.1833" }
%"class.absl::optional_internal::optional_data_dtor_base.1833" = type { i8, %union.anon.1834 }
%union.anon.1834 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1835" }
%"class.mojo::PendingRemote.1835" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%class.scoped_refptr.1836 = type { %"class.base::RefCountedData.1837"* }
%"class.base::RefCountedData.1837" = type { %"class.base::RefCountedThreadSafe.2436", %"class.base::internal::flat_tree.2437" }
%"class.base::RefCountedThreadSafe.2436" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.2437" = type { %"class.std::__1::vector.2438" }
%"class.std::__1::vector.2438" = type { %"class.std::__1::__vector_base.2439" }
%"class.std::__1::__vector_base.2439" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2440" }
%"class.std::__1::__compressed_pair.2440" = type { %"struct.std::__1::__compressed_pair_elem.2441" }
%"struct.std::__1::__compressed_pair_elem.2441" = type { i32* }
%"class.blink::Member.1889" = type { %"class.blink::MemberBase.1890" }
%"class.blink::MemberBase.1890" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.1838", %class.scoped_refptr.1852, %class.scoped_refptr.1853, %"struct.blink::CacheControlHeader", %"class.absl::optional.437", %"class.absl::optional.1382", %"class.absl::optional.1382", %"class.absl::optional.1382", i64, %"class.blink::KURL", %"class.WTF::Vector.1854", %"class.WTF::String", %"class.WTF::Vector.605", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.967", %"class.WTF::Vector.605", %"class.blink::KURL", %"class.absl::optional.1859" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.1838" = type { %"class.absl::optional_internal::optional_data.1839" }
%"class.absl::optional_internal::optional_data.1839" = type { %"class.absl::optional_internal::optional_data_base.1840" }
%"class.absl::optional_internal::optional_data_base.1840" = type { %"class.absl::optional_internal::optional_data_dtor_base.1841" }
%"class.absl::optional_internal::optional_data_dtor_base.1841" = type { i8, %union.anon.1842 }
%union.anon.1842 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.605", %"class.WTF::String", i64, i64, %"class.WTF::Vector.1843", %"class.WTF::Vector.1847" }
%"class.WTF::Vector.1843" = type { %"class.WTF::VectorBuffer.1844" }
%"class.WTF::VectorBuffer.1844" = type { %"class.WTF::VectorBufferBase.878" }
%"class.WTF::Vector.1847" = type { %"class.WTF::VectorBuffer.1848" }
%"class.WTF::VectorBuffer.1848" = type { %"class.WTF::VectorBufferBase.1849" }
%"class.WTF::VectorBufferBase.1849" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1852 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.1853 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.WTF::Vector.1854" = type { %"class.WTF::VectorBuffer.1855" }
%"class.WTF::VectorBuffer.1855" = type { %"class.WTF::VectorBufferBase.1856" }
%"class.WTF::VectorBufferBase.1856" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.1859" = type { %"class.absl::optional_internal::optional_data.1860" }
%"class.absl::optional_internal::optional_data.1860" = type { %"class.absl::optional_internal::optional_data_base.1861" }
%"class.absl::optional_internal::optional_data_base.1861" = type { %"class.absl::optional_internal::optional_data_dtor_base.1862" }
%"class.absl::optional_internal::optional_data_dtor_base.1862" = type { i8, %union.anon.1863 }
%union.anon.1863 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.1891 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1892", i64, %"class.WTF::Vector.1894", %"class.WTF::Vector.1899" }
%"class.WTF::RefCounted.1892" = type { %"class.base::RefCounted.1893" }
%"class.base::RefCounted.1893" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1894" = type { %"class.WTF::VectorBuffer.1895" }
%"class.WTF::VectorBuffer.1895" = type { %"class.WTF::VectorBufferBase.1896" }
%"class.WTF::VectorBufferBase.1896" = type { i8*, i32, i32 }
%"class.WTF::Vector.1899" = type { %"class.WTF::VectorBuffer.1900" }
%"class.WTF::VectorBuffer.1900" = type { %"class.WTF::VectorBufferBase.1901" }
%"class.WTF::VectorBufferBase.1901" = type { %"class.std::__1::unique_ptr.1902"*, i32, i32 }
%"class.std::__1::unique_ptr.1902" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.1905" }
%"class.std::__1::__tree.1905" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1906", %"class.std::__1::__compressed_pair.1910" }
%"class.std::__1::__compressed_pair.1906" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"class.std::__1::__compressed_pair.1910" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"class.blink::HeapHashMap.1914" = type { %"class.WTF::HashMap.1917" }
%"class.WTF::HashMap.1917" = type { %"class.WTF::HashTable.1918" }
%"class.WTF::HashTable.1918" = type <{ %"struct.WTF::KeyValuePair.1920"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1920" = type opaque
%"class.blink::HeapVector.1921" = type { %"class.WTF::Vector.1924" }
%"class.WTF::Vector.1924" = type { %"class.WTF::VectorBuffer.1925" }
%"class.WTF::VectorBuffer.1925" = type { %"class.WTF::VectorBufferBase.1926" }
%"class.WTF::VectorBufferBase.1926" = type { %"class.blink::Member.1927"*, i32, i32 }
%"class.blink::Member.1929" = type { %"class.blink::MemberBase.1930" }
%"class.blink::MemberBase.1930" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer.1931" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1932", { i64, i64 } }
%"class.blink::WeakMember.1932" = type { %"class.blink::MemberBase.1440" }
%"class.blink::HeapHashMap.1933" = type { %"class.WTF::HashMap.1936" }
%"class.WTF::HashMap.1936" = type { %"class.WTF::HashTable.1937" }
%"class.WTF::HashTable.1937" = type <{ %"struct.WTF::KeyValuePair.1939"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1939" = type opaque
%"class.WTF::Vector.1940" = type { %"class.WTF::VectorBuffer.1941" }
%"class.WTF::VectorBuffer.1941" = type { %"class.WTF::VectorBufferBase.1942" }
%"class.WTF::VectorBufferBase.1942" = type { %class.scoped_refptr.1943*, i32, i32 }
%class.scoped_refptr.1943 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.1946" = type { %"class.WTF::HashSet.1949" }
%"class.WTF::HashSet.1949" = type { %"class.WTF::HashTable.1950" }
%"class.WTF::HashTable.1950" = type <{ %"class.blink::Member.1889"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1952" = type { %"class.std::__1::__compressed_pair.1953" }
%"class.std::__1::__compressed_pair.1953" = type { %"struct.std::__1::__compressed_pair_elem.1954" }
%"struct.std::__1::__compressed_pair_elem.1954" = type { %"class.WTF::HashSet.1019"* }
%"class.base::WeakPtr.1744" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::HeapMojoRemote.1958" = type { %"class.blink::Member.1959" }
%"class.blink::Member.1959" = type { %"class.blink::MemberBase.1960" }
%"class.blink::MemberBase.1960" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1961" = type { %"class.blink::MemberBase.1962" }
%"class.blink::MemberBase.1962" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.1963" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1441" = type { %"class.blink::MemberBase.1442" }
%"class.blink::MemberBase.1442" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1443" = type { %"class.blink::MemberBase.1444" }
%"class.blink::MemberBase.1444" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1445" = type { %"class.blink::MemberBase.1446" }
%"class.blink::MemberBase.1446" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1447" = type { %"class.std::__1::__compressed_pair.1448" }
%"class.std::__1::__compressed_pair.1448" = type { %"struct.std::__1::__compressed_pair_elem.1449" }
%"struct.std::__1::__compressed_pair_elem.1449" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1455" = type { %"class.blink::MemberBase.1456" }
%"class.blink::MemberBase.1456" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.WTF::Vector.1457" = type { %"class.WTF::VectorBuffer.1458" }
%"class.WTF::VectorBuffer.1458" = type { %"class.WTF::VectorBufferBase.1459" }
%"class.WTF::VectorBufferBase.1459" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1460 }
%"class.blink::Member.806" = type { %"class.blink::MemberBase.807" }
%"class.blink::MemberBase.807" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.658", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.791", %"class.blink::Member.791", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1465" }
%"class.blink::HeapHashMap.1465" = type { %"class.WTF::HashMap.1468" }
%"class.WTF::HashMap.1468" = type { %"class.WTF::HashTable.1469" }
%"class.WTF::HashTable.1469" = type <{ %"struct.WTF::KeyValuePair.1471"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1471" = type opaque
%"class.blink::Member.1472" = type { %"class.blink::MemberBase.1473" }
%"class.blink::MemberBase.1473" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1474" = type { %"class.WTF::HashSet.1477" }
%"class.WTF::HashSet.1477" = type { %"class.WTF::HashTable.1478" }
%"class.WTF::HashTable.1478" = type <{ %"class.blink::WeakMember.1480"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1480" = type opaque
%"class.blink::HeapHashSet.1481" = type { %"class.WTF::HashSet.1484" }
%"class.WTF::HashSet.1484" = type { %"class.WTF::HashTable.1485" }
%"class.WTF::HashTable.1485" = type <{ %"class.blink::WeakMember.1487"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1487" = type opaque
%"class.blink::Member.1488" = type { %"class.blink::MemberBase.1489" }
%"class.blink::MemberBase.1489" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1490" = type { %"class.blink::MemberBase.1491" }
%"class.blink::MemberBase.1491" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1492" = type { %"class.blink::MemberBase.1493" }
%"class.blink::MemberBase.1493" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.793", %"class.blink::HeapVector.899" }
%"class.blink::Member.1494" = type { %"class.blink::MemberBase.1495" }
%"class.blink::MemberBase.1495" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1496" = type { %"class.blink::MemberBase.1497" }
%"class.blink::MemberBase.1497" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1498" = type { %"class.WTF::HashMap.1501" }
%"class.WTF::HashMap.1501" = type { %"class.WTF::HashTable.1502" }
%"class.WTF::HashTable.1502" = type <{ %"struct.WTF::KeyValuePair.1504"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1504" = type opaque
%"class.WTF::Vector.1505" = type { %"class.WTF::VectorBuffer.1506" }
%"class.WTF::VectorBuffer.1506" = type { %"class.WTF::VectorBufferBase.1507" }
%"class.WTF::VectorBufferBase.1507" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1510" = type { %"class.blink::MemberBase.1511" }
%"class.blink::MemberBase.1511" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1512" = type { %"class.blink::MemberBase.1513" }
%"class.blink::MemberBase.1513" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1514" = type { %"class.blink::MemberBase.1515" }
%"class.blink::MemberBase.1515" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1516" = type { %"class.WTF::Vector.1519" }
%"class.WTF::Vector.1519" = type { %"class.WTF::VectorBuffer.1520" }
%"class.WTF::VectorBuffer.1520" = type { %"class.WTF::VectorBufferBase.1521" }
%"class.WTF::VectorBufferBase.1521" = type { %"class.blink::Member.1522"*, i32, i32 }
%"class.blink::Member.1522" = type opaque
%"class.std::__1::unique_ptr.1524" = type { %"class.std::__1::__compressed_pair.1525" }
%"class.std::__1::__compressed_pair.1525" = type { %"struct.std::__1::__compressed_pair_elem.1526" }
%"struct.std::__1::__compressed_pair_elem.1526" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1530" = type { %"class.WTF::HashSet.1533" }
%"class.WTF::HashSet.1533" = type { %"class.WTF::HashTable.1534" }
%"class.WTF::HashTable.1534" = type <{ %"class.blink::WeakMember.1536"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1536" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1537", i32, [4 x i8] }>
%"class.WTF::Vector.1537" = type { %"class.WTF::VectorBuffer.1538" }
%"class.WTF::VectorBuffer.1538" = type { %"class.WTF::VectorBufferBase.1539" }
%"class.WTF::VectorBufferBase.1539" = type { %"struct.std::__1::pair.1540"*, i32, i32 }
%"struct.std::__1::pair.1540" = type opaque
%"class.blink::Member.1543" = type { %"class.blink::MemberBase.1544" }
%"class.blink::MemberBase.1544" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1545" = type { %"class.WTF::VectorBuffer.1546" }
%"class.WTF::VectorBuffer.1546" = type { %"class.WTF::VectorBufferBase.1547" }
%"class.WTF::VectorBufferBase.1547" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1550" = type { %"class.std::__1::__compressed_pair.1551" }
%"class.std::__1::__compressed_pair.1551" = type { %"struct.std::__1::__compressed_pair_elem.1552" }
%"struct.std::__1::__compressed_pair_elem.1552" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1556" = type { %"class.WTF::Vector.1559" }
%"class.WTF::Vector.1559" = type { %"class.WTF::VectorBuffer.1560" }
%"class.WTF::VectorBuffer.1560" = type { %"class.WTF::VectorBufferBase.1561" }
%"class.WTF::VectorBufferBase.1561" = type { %"class.blink::Member.1562"*, i32, i32 }
%"class.blink::Member.1562" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.658" }
%"class.blink::Member.1564" = type { %"class.blink::MemberBase.1565" }
%"class.blink::MemberBase.1565" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1566" = type { %"class.blink::MemberBase.1567" }
%"class.blink::MemberBase.1567" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1568" = type { %"class.blink::MemberBase.1569" }
%"class.blink::MemberBase.1569" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1570" = type { %"class.blink::MemberBase.1571" }
%"class.blink::MemberBase.1571" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1572" = type { %"class.blink::MemberBase.1573" }
%"class.blink::MemberBase.1573" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1574" = type { %"class.WTF::HashTable.1575" }
%"class.WTF::HashTable.1575" = type <{ %"struct.WTF::KeyValuePair.1578"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1578" = type opaque
%"class.blink::Member.1579" = type { %"class.blink::MemberBase.1580" }
%"class.blink::MemberBase.1580" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1581" = type { %"class.blink::MemberBase.1582" }
%"class.blink::MemberBase.1582" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1583" = type { %"class.blink::MemberBase.1584" }
%"class.blink::MemberBase.1584" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1585" = type { %"class.blink::MemberBase.1586" }
%"class.blink::MemberBase.1586" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.1463" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1464", { i64, i64 } }
%"class.blink::WeakMember.1464" = type { %"class.blink::MemberBase.659" }
%"class.blink::HeapHashSet.1587" = type { %"class.WTF::HashSet.1590" }
%"class.WTF::HashSet.1590" = type { %"class.WTF::HashTable.1591" }
%"class.WTF::HashTable.1591" = type <{ %"class.blink::Member.1593"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1593" = type opaque
%"class.blink::Member.1594" = type { %"class.blink::MemberBase.1595" }
%"class.blink::MemberBase.1595" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1596" = type { %"class.blink::MemberBase.1597" }
%"class.blink::MemberBase.1597" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1598" = type { %"class.blink::MemberBase.1599" }
%"class.blink::MemberBase.1599" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1600" = type { %"class.blink::MemberBase.1601" }
%"class.blink::MemberBase.1601" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1602" = type { %"class.blink::MemberBase.1603" }
%"class.blink::MemberBase.1603" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1604" = type { %"class.std::__1::__compressed_pair.1605" }
%"class.std::__1::__compressed_pair.1605" = type { %"struct.std::__1::__compressed_pair_elem.1606" }
%"struct.std::__1::__compressed_pair_elem.1606" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1610" = type { %"class.std::__1::__compressed_pair.1611" }
%"class.std::__1::__compressed_pair.1611" = type { %"struct.std::__1::__compressed_pair_elem.1612" }
%"struct.std::__1::__compressed_pair_elem.1612" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1616" = type { %"class.blink::MemberBase.1617" }
%"class.blink::MemberBase.1617" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1618" = type { %"class.blink::MemberBase.1619" }
%"class.blink::MemberBase.1619" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1620" = type { %"class.blink::MemberBase.1621" }
%"class.blink::MemberBase.1621" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1622" = type { %"class.blink::MemberBase.1623" }
%"class.blink::MemberBase.1623" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.blink::HeapHashMap.1624" = type { %"class.WTF::HashMap.1627" }
%"class.WTF::HashMap.1627" = type { %"class.WTF::HashTable.1628" }
%"class.WTF::HashTable.1628" = type <{ %"struct.WTF::KeyValuePair.1630"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1630" = type opaque
%"class.blink::Member.1631" = type { %"class.blink::MemberBase.1632" }
%"class.blink::MemberBase.1632" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1633" = type { %"class.std::__1::__compressed_pair.1634" }
%"class.std::__1::__compressed_pair.1634" = type { %"struct.std::__1::__compressed_pair_elem.1635" }
%"struct.std::__1::__compressed_pair_elem.1635" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1639" = type { %"class.blink::MemberBase.1640" }
%"class.blink::MemberBase.1640" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1641" = type { %"class.blink::MemberBase.1642" }
%"class.blink::MemberBase.1642" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1643" = type { %"class.WTF::HashMap.1646" }
%"class.WTF::HashMap.1646" = type { %"class.WTF::HashTable.1647" }
%"class.WTF::HashTable.1647" = type <{ %"struct.WTF::KeyValuePair.1649"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1649" = type opaque
%"class.blink::HeapObserverSet.1650" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1651" }
%"class.blink::HeapHashSet.1651" = type { %"class.WTF::HashSet.1654" }
%"class.WTF::HashSet.1654" = type { %"class.WTF::HashTable.1655" }
%"class.WTF::HashTable.1655" = type <{ %"class.blink::WeakMember.1657"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1657" = type opaque
%"class.blink::Member.1658" = type { %"class.blink::MemberBase.1659" }
%"class.blink::MemberBase.1659" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1660" = type { %"class.blink::MemberBase.1661" }
%"class.blink::MemberBase.1661" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.658", %"class.blink::HeapHashSet.1667", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1674", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1667" = type { %"class.WTF::HashSet.1670" }
%"class.WTF::HashSet.1670" = type { %"class.WTF::HashTable.1671" }
%"class.WTF::HashTable.1671" = type <{ %"class.blink::Member.1673"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1673" = type opaque
%"class.blink::HeapTaskRunnerTimer.1674" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1675", { i64, i64 } }
%"class.blink::WeakMember.1675" = type { %"class.blink::MemberBase.1661" }
%"class.blink::WeakMember.1662" = type { %"class.blink::MemberBase.792" }
%"class.blink::Member.1663" = type { %"class.blink::MemberBase.1664" }
%"class.blink::MemberBase.1664" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.660" = type { %"class.blink::MemberBase.661" }
%"class.blink::MemberBase.661" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.662" = type { %"class.blink::MemberBase.663" }
%"class.blink::MemberBase.663" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.664" = type { %"class.blink::MemberBase.665" }
%"class.blink::MemberBase.665" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.666" = type { %"class.blink::MemberBase.667" }
%"class.blink::MemberBase.667" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.668" = type { %"class.blink::MemberBase.669" }
%"class.blink::MemberBase.669" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.670" = type { %"class.blink::MemberBase.671" }
%"class.blink::MemberBase.671" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.672" = type { %"class.blink::MemberBase.673" }
%"class.blink::MemberBase.673" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.674" = type { %"class.blink::MemberBase.675" }
%"class.blink::MemberBase.675" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type { %"class.blink::V8PerContextData::Data", %"class.blink::NameClient" }
%"class.blink::V8PerContextData::Data" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.678" = type { %"class.blink::MemberBase.679" }
%"class.blink::MemberBase.679" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.blink::Member.680" = type { %"class.blink::MemberBase.681" }
%"class.blink::MemberBase.681" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.682 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.684", i64, %"class.WTF::Vector.688", %"class.WTF::Vector.693", %"class.WTF::Vector.699", %"class.WTF::Vector.717", %class.scoped_refptr.505, %"class.WTF::HashMap.723", %"class.WTF::Vector.728", %"class.WTF::Vector.688", %"class.WTF::Vector.734", %"class.WTF::HashMap.739", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.683" }
%"class.base::RefCountedThreadSafe.683" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.684" = type { %"class.std::__1::__compressed_pair.685" }
%"class.std::__1::__compressed_pair.685" = type { %"struct.std::__1::__compressed_pair_elem.686" }
%"struct.std::__1::__compressed_pair_elem.686" = type { i8* }
%"class.WTF::Vector.693" = type { %"class.WTF::VectorBuffer.694" }
%"class.WTF::VectorBuffer.694" = type { %"class.WTF::VectorBufferBase.695", [8 x i8] }
%"class.WTF::VectorBufferBase.695" = type { %class.scoped_refptr.696*, i32, i32 }
%class.scoped_refptr.696 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.699" = type { %"class.WTF::VectorBuffer.700" }
%"class.WTF::VectorBuffer.700" = type { %"class.WTF::VectorBufferBase.701" }
%"class.WTF::VectorBufferBase.701" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.703", %"class.std::__1::unique_ptr.709" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.702 }
%class.scoped_refptr.702 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.703" = type { %"class.std::__1::__compressed_pair.704" }
%"class.std::__1::__compressed_pair.704" = type { %"struct.std::__1::__compressed_pair_elem.705" }
%"struct.std::__1::__compressed_pair_elem.705" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.709" = type { %"class.std::__1::__compressed_pair.710" }
%"class.std::__1::__compressed_pair.710" = type { %"struct.std::__1::__compressed_pair_elem.711" }
%"struct.std::__1::__compressed_pair_elem.711" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.717" = type { %"class.WTF::VectorBuffer.718" }
%"class.WTF::VectorBuffer.718" = type { %"class.WTF::VectorBufferBase.719" }
%"class.WTF::VectorBufferBase.719" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.720", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.720" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.723" = type { %"class.WTF::HashTable.724" }
%"class.WTF::HashTable.724" = type <{ %"struct.WTF::KeyValuePair.727"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.727" = type opaque
%"class.WTF::Vector.728" = type { %"class.WTF::VectorBuffer.729" }
%"class.WTF::VectorBuffer.729" = type { %"class.WTF::VectorBufferBase.730" }
%"class.WTF::VectorBufferBase.730" = type { %"class.mojo::ScopedHandleBase.731"*, i32, i32 }
%"class.mojo::ScopedHandleBase.731" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.688" = type { %"class.WTF::VectorBuffer.689" }
%"class.WTF::VectorBuffer.689" = type { %"class.WTF::VectorBufferBase.690", [16 x i8] }
%"class.WTF::VectorBufferBase.690" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.734" = type { %"class.WTF::VectorBuffer.735" }
%"class.WTF::VectorBuffer.735" = type { %"class.WTF::VectorBufferBase.736" }
%"class.WTF::VectorBufferBase.736" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::HashMap.739" = type { %"class.WTF::HashTable.740" }
%"class.WTF::HashTable.740" = type <{ %"struct.WTF::KeyValuePair.743"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.743" = type { i8**, %"class.std::__1::unique_ptr.2364" }
%"class.std::__1::unique_ptr.2364" = type { %"class.std::__1::__compressed_pair.2365" }
%"class.std::__1::__compressed_pair.2365" = type { %"struct.std::__1::__compressed_pair_elem.2366" }
%"struct.std::__1::__compressed_pair_elem.2366" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.744" = type { %"class.WTF::HashSet.747" }
%"class.WTF::HashSet.747" = type { %"class.WTF::HashTable.748" }
%"class.WTF::HashTable.748" = type <{ %"class.blink::WeakMember.750"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.750" = type opaque
%"class.blink::Member.751" = type { %"class.blink::MemberBase.752" }
%"class.blink::MemberBase.752" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.758", %"class.blink::Member.758", %"class.blink::Member.760", %"class.blink::Member.762", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.753" }
%"class.absl::optional.753" = type { %"class.absl::optional_internal::optional_data.754" }
%"class.absl::optional_internal::optional_data.754" = type { %"class.absl::optional_internal::optional_data_base.755" }
%"class.absl::optional_internal::optional_data_base.755" = type { %"class.absl::optional_internal::optional_data_dtor_base.756" }
%"class.absl::optional_internal::optional_data_dtor_base.756" = type { i8, %union.anon.757 }
%union.anon.757 = type { i64 }
%"class.blink::Member.758" = type { %"class.blink::MemberBase.759" }
%"class.blink::MemberBase.759" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.760" = type { %"class.blink::MemberBase.761" }
%"class.blink::MemberBase.761" = type { %"class.blink::Event"* }
%"class.blink::Member.762" = type { %"class.blink::MemberBase.763" }
%"class.blink::MemberBase.763" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.764" = type { %"class.WTF::HashMap.767" }
%"class.WTF::HashMap.767" = type { %"class.WTF::HashTable.768" }
%"class.WTF::HashTable.768" = type <{ %"struct.WTF::KeyValuePair.770"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.770" = type opaque
%"class.std::__1::unique_ptr.771" = type { %"class.std::__1::__compressed_pair.772" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.783" = type { %"class.blink::MemberBase.784" }
%"class.blink::MemberBase.784" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.787", %"class.blink::CachedTextInputInfo", %"class.blink::Member.806", %"class.blink::Member.808", i8, i32 }
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.789", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.799", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.789" = type { %"class.blink::MemberBase.790" }
%"class.blink::MemberBase.790" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.799" = type { %"class.WTF::HashMap.802" }
%"class.WTF::HashMap.802" = type { %"class.WTF::HashTable.803" }
%"class.WTF::HashTable.803" = type <{ %"struct.WTF::KeyValuePair.805"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.805" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.791", i32, i32 }
%"class.blink::Member.808" = type { %"class.blink::MemberBase.809" }
%"class.blink::MemberBase.809" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.810" = type { %"class.blink::MemberBase.811" }
%"class.blink::MemberBase.811" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.814", %"class.blink::Member.816", %"class.blink::Member.818" }
%"class.blink::Member.816" = type { %"class.blink::MemberBase.817" }
%"class.blink::MemberBase.817" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.818" = type { %"class.blink::MemberBase.819" }
%"class.blink::MemberBase.819" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.820" = type { %"class.blink::MemberBase.821" }
%"class.blink::MemberBase.821" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.814", %"class.blink::HeapMojoRemote" }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.824" }
%"class.blink::Member.824" = type { %"class.blink::MemberBase.825" }
%"class.blink::MemberBase.825" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.826" = type { %"class.blink::MemberBase.827" }
%"class.blink::MemberBase.827" = type { %"class.blink::HeapHashMap.828"* }
%"class.blink::HeapHashMap.828" = type opaque
%"class.WTF::Vector.829" = type { %"class.WTF::VectorBuffer.830" }
%"class.WTF::VectorBuffer.830" = type { %"class.WTF::VectorBufferBase.831" }
%"class.WTF::VectorBufferBase.831" = type { i8*, i32, i32 }
%"class.util::TokenType.319" = type { %"class.base::StrongAlias.320" }
%"class.base::StrongAlias.320" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.834" = type { %"class.WTF::HashTable.835" }
%"class.WTF::HashTable.835" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque.838" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.841" }
%"class.WTF::VectorBuffer.841" = type { %"class.WTF::VectorBufferBase.842" }
%"class.WTF::VectorBufferBase.842" = type { i64*, i32, i32 }
%"class.blink::WindowPerformance" = type { %"class.blink::Performance", %"class.blink::PerformanceMonitor::Client", %"class.blink::ExecutionContextClient", %"class.blink::PageVisibilityObserver", i64, i64, i16, %"class.blink::HeapDeque.1967", %"class.WTF::Deque.1974", %"class.blink::Member.276", %"class.blink::Member.1979", %"class.blink::Member.1986", %"class.blink::Member.1988", %"class.absl::optional.437", %"class.absl::optional.437", %"class.absl::optional.437" }
%"class.blink::PerformanceMonitor::Client" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1965" }
%"class.blink::WeakMember.1965" = type { %"class.blink::MemberBase.548" }
%"class.blink::PageVisibilityObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1966" }
%"class.blink::WeakMember.1966" = type { %"class.blink::MemberBase.945" }
%"class.blink::HeapDeque.1967" = type { %"class.WTF::Deque.1970" }
%"class.WTF::Deque.1970" = type { %"class.WTF::Deque<blink::Member<blink::PerformanceEventTiming>, 0, blink::HeapAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::Member<blink::PerformanceEventTiming>, 0, blink::HeapAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1972" }
%"class.WTF::VectorBuffer.1972" = type { %"class.WTF::VectorBufferBase.1973" }
%"class.WTF::VectorBufferBase.1973" = type { %"class.blink::Member.276"*, i32, i32 }
%"class.WTF::Deque.1974" = type { %"class.WTF::Deque<unsigned long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<unsigned long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1977" }
%"class.WTF::VectorBuffer.1977" = type { %"class.WTF::VectorBufferBase.1978" }
%"class.WTF::VectorBufferBase.1978" = type { i64*, i32, i32 }
%"class.blink::Member.1979" = type { %"class.blink::MemberBase.1980" }
%"class.blink::MemberBase.1980" = type { %"class.blink::EventCounts"* }
%"class.blink::EventCounts" = type { %"class.blink::ScriptWrappable", %"class.blink::Maplike", %"class.WTF::HashMap.1981" }
%"class.blink::Maplike" = type { %"class.blink::PairIterable" }
%"class.blink::PairIterable" = type { %"class.blink::Iterable" }
%"class.blink::Iterable" = type { i32 (...)** }
%"class.WTF::HashMap.1981" = type { %"class.WTF::HashTable.1982" }
%"class.WTF::HashTable.1982" = type <{ %"struct.WTF::KeyValuePair.1985"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1985" = type opaque
%"class.blink::Member.1986" = type { %"class.blink::MemberBase.1987" }
%"class.blink::MemberBase.1987" = type { %"class.blink::PerformanceNavigation"* }
%"class.blink::PerformanceNavigation" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::Member.1988" = type { %"class.blink::MemberBase.1989" }
%"class.blink::MemberBase.1989" = type { %"class.blink::PerformanceTiming"* }
%"class.blink::PerformanceTiming" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient", i8, [7 x i8] }>
%"class.blink::ExecutionContextLifecycleStateObserver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8] }
%"class.blink::WorkerGlobalScope" = type { %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::ActiveScriptWrappable.2025", %"class.blink::Supplementable.2026", %"class.blink::KURL", i32, %"class.WTF::String", %"struct.blink::UserAgentMetadata", %"class.std::__1::unique_ptr.2041", %"class.blink::Member.2059", %"class.blink::Member.2061", %"class.blink::Member.2071", %"class.blink::WorkerThread"*, i8, %"class.base::TimeTicks", %"class.blink::HeapHashMap.2073", i32, %"class.blink::Member.2080", %"class.std::__1::unique_ptr.1610", %"class.blink::BrowserInterfaceBrokerProxy", i32, %"class.blink::Member.2101", %"class.absl::optional.2105", i32, %"class.std::__1::unique_ptr.1604", %"class.std::__1::unique_ptr.2111", i64 }
%"class.blink::WorkerOrWorkletGlobalScope" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ExecutionContext.base", i8, %"class.WTF::String", %"class.base::UnguessableToken", %"class.blink::CrossThreadPersistent", %"class.std::__1::unique_ptr.2005", %"class.blink::Member.1439", %"class.blink::HeapHashSet.2011", %class.scoped_refptr.2017, %"class.blink::Member.2019", %"class.blink::Member.2021", i32, %"class.WTF::Vector.581", %"class.blink::WorkerReportingProxy"*, %"class.std::__1::bitset", %"class.blink::Deprecation", %"class.blink::Member.674" }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase.1990" }
%"class.blink::PersistentBase.1990" = type { %"class.blink::WorkerClients"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerClients" = type { %"class.blink::Supplementable.1993" }
%"class.blink::Supplementable.1993" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1994" }
%"class.blink::HeapHashMap.1994" = type { %"class.WTF::HashMap.1997" }
%"class.WTF::HashMap.1997" = type { %"class.WTF::HashTable.1998" }
%"class.WTF::HashTable.1998" = type <{ %"struct.WTF::KeyValuePair.2000"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2000" = type { i8*, %"class.blink::Member.2448" }
%"class.blink::Member.2448" = type { %"class.blink::MemberBase.2449" }
%"class.blink::MemberBase.2449" = type { %"class.blink::Supplement.2450"* }
%"class.blink::Supplement.2450" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2451" }
%"class.blink::Member.2451" = type { %"class.blink::MemberBase.2452" }
%"class.blink::MemberBase.2452" = type { %"class.blink::WorkerClients"* }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.2001" }
%"struct.std::__1::atomic.2001" = type { %"struct.std::__1::__atomic_base.2002" }
%"struct.std::__1::__atomic_base.2002" = type { %"struct.std::__1::__cxx_atomic_impl.2003" }
%"struct.std::__1::__cxx_atomic_impl.2003" = type { %"struct.std::__1::__cxx_atomic_base_impl.2004" }
%"struct.std::__1::__cxx_atomic_base_impl.2004" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.2005" = type { %"class.std::__1::__compressed_pair.2006" }
%"class.std::__1::__compressed_pair.2006" = type { %"struct.std::__1::__compressed_pair_elem.2007" }
%"struct.std::__1::__compressed_pair_elem.2007" = type { %"class.blink::WebContentSettingsClient"* }
%"class.blink::WebContentSettingsClient" = type { i32 (...)** }
%"class.blink::HeapHashSet.2011" = type { %"class.WTF::HashSet.2014" }
%"class.WTF::HashSet.2014" = type { %"class.WTF::HashTable.2015" }
%"class.WTF::HashTable.2015" = type <{ %"class.blink::WeakMember.1932"*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2017 = type { %"class.blink::WebWorkerFetchContext"* }
%"class.blink::WebWorkerFetchContext" = type <{ i32 (...)**, %"class.base::RefCounted.2018", [4 x i8] }>
%"class.base::RefCounted.2018" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.2019" = type { %"class.blink::MemberBase.2020" }
%"class.blink::MemberBase.2020" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"class.blink::Member.2021" = type { %"class.blink::MemberBase.2022" }
%"class.blink::MemberBase.2022" = type { %"class.blink::WorkerOrWorkletScriptController"* }
%"class.blink::WorkerOrWorkletScriptController" = type opaque
%"class.blink::WorkerReportingProxy" = type opaque
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.2023", i32, [4 x i8] }>
%"class.std::__1::bitset.2023" = type { %"class.std::__1::__bitset.2024" }
%"class.std::__1::__bitset.2024" = type { [25 x i64] }
%"class.blink::ActiveScriptWrappable.2025" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::Supplementable.2026" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2027" }
%"class.blink::HeapHashMap.2027" = type { %"class.WTF::HashMap.2030" }
%"class.WTF::HashMap.2030" = type { %"class.WTF::HashTable.2031" }
%"class.WTF::HashTable.2031" = type <{ %"struct.WTF::KeyValuePair.2033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2033" = type opaque
%"struct.blink::UserAgentMetadata" = type <{ %"class.std::__1::vector.2034", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::vector.2034" = type { %"class.std::__1::__vector_base.2035" }
%"class.std::__1::__vector_base.2035" = type { %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"*, %"class.std::__1::__compressed_pair.2036" }
%"struct.blink::UserAgentBrandVersion" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.2036" = type { %"struct.std::__1::__compressed_pair_elem.2037" }
%"struct.std::__1::__compressed_pair_elem.2037" = type { %"struct.blink::UserAgentBrandVersion"* }
%"class.std::__1::unique_ptr.2041" = type { %"class.std::__1::__compressed_pair.2042" }
%"class.std::__1::__compressed_pair.2042" = type { %"struct.std::__1::__compressed_pair_elem.2043" }
%"struct.std::__1::__compressed_pair_elem.2043" = type { %"class.blink::WorkerSettings"* }
%"class.blink::WorkerSettings" = type { i8, i8, i8, i8, %"class.blink::GenericFontFamilySettings" }
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.2044", %"class.WTF::HashMap.2044", %"class.WTF::HashMap.2044", %"class.WTF::HashMap.2044", %"class.WTF::HashMap.2044", %"class.WTF::HashMap.2044", %"class.WTF::HashMap.2044", %"class.std::__1::unique_ptr.2049" }
%"class.WTF::HashMap.2044" = type { %"class.WTF::HashTable.2045" }
%"class.WTF::HashTable.2045" = type <{ %"struct.WTF::KeyValuePair.2048"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2048" = type opaque
%"class.std::__1::unique_ptr.2049" = type { %"class.std::__1::__compressed_pair.2050" }
%"class.std::__1::__compressed_pair.2050" = type { %"struct.std::__1::__compressed_pair_elem.2051" }
%"struct.std::__1::__compressed_pair_elem.2051" = type { %"class.WTF::Vector.2052"* }
%"class.WTF::Vector.2052" = type opaque
%"class.blink::Member.2059" = type { %"class.blink::MemberBase.2060" }
%"class.blink::MemberBase.2060" = type { %"class.blink::WorkerLocation"* }
%"class.blink::WorkerLocation" = type opaque
%"class.blink::Member.2061" = type { %"class.blink::MemberBase.2062" }
%"class.blink::MemberBase.2062" = type { %"class.blink::WorkerNavigator"* }
%"class.blink::WorkerNavigator" = type { %"class.blink::NavigatorBase", %"class.blink::AcceptLanguagesWatcher" }
%"class.blink::NavigatorBase" = type { %"class.blink::ScriptWrappable", %"class.blink::NavigatorID", %"class.blink::NavigatorLanguage.base", %"class.blink::NavigatorUA", %"class.blink::ExecutionContextClient", %"class.blink::Supplementable.2063" }
%"class.blink::NavigatorID" = type { i32 (...)** }
%"class.blink::NavigatorLanguage.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1965", %"class.WTF::Vector.605", i8 }>
%"class.blink::NavigatorUA" = type { i32 (...)** }
%"class.blink::Supplementable.2063" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2064" }
%"class.blink::HeapHashMap.2064" = type { %"class.WTF::HashMap.2067" }
%"class.WTF::HashMap.2067" = type { %"class.WTF::HashTable.2068" }
%"class.WTF::HashTable.2068" = type <{ %"struct.WTF::KeyValuePair.2070"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2070" = type { i8*, %"class.blink::Member.2454" }
%"class.blink::Member.2454" = type { %"class.blink::MemberBase.2455" }
%"class.blink::MemberBase.2455" = type { %"class.blink::Supplement.2456"* }
%"class.blink::Supplement.2456" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2457" }
%"class.blink::Member.2457" = type { %"class.blink::MemberBase.2458" }
%"class.blink::MemberBase.2458" = type { %"class.blink::NavigatorBase"* }
%"class.blink::AcceptLanguagesWatcher" = type { i32 (...)** }
%"class.blink::Member.2071" = type { %"class.blink::MemberBase.2072" }
%"class.blink::MemberBase.2072" = type { %"class.blink::TrustedTypePolicyFactory"* }
%"class.blink::TrustedTypePolicyFactory" = type opaque
%"class.blink::WorkerThread" = type opaque
%"class.blink::HeapHashMap.2073" = type { %"class.WTF::HashMap.2076" }
%"class.WTF::HashMap.2076" = type { %"class.WTF::HashTable.2077" }
%"class.WTF::HashTable.2077" = type <{ %"struct.WTF::KeyValuePair.2079"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2079" = type opaque
%"class.blink::Member.2080" = type { %"class.blink::MemberBase.2081" }
%"class.blink::MemberBase.2081" = type { %"class.blink::OffscreenFontSelector"* }
%"class.blink::OffscreenFontSelector" = type opaque
%"class.blink::BrowserInterfaceBrokerProxy" = type { %"class.mojo::Remote.2082", %"class.std::__1::map.2090" }
%"class.mojo::Remote.2082" = type { %"class.mojo::internal::InterfacePtrState.2083" }
%"class.mojo::internal::InterfacePtrState.2083" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2084" }
%"class.std::__1::unique_ptr.2084" = type { %"class.std::__1::__compressed_pair.2085" }
%"class.std::__1::__compressed_pair.2085" = type { %"struct.std::__1::__compressed_pair_elem.2086" }
%"struct.std::__1::__compressed_pair_elem.2086" = type { %"class.blink::mojom::BrowserInterfaceBrokerProxy"* }
%"class.blink::mojom::BrowserInterfaceBrokerProxy" = type { %"class.blink::mojom::BrowserInterfaceBroker", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::BrowserInterfaceBroker" = type { i32 (...)** }
%"class.std::__1::map.2090" = type { %"class.std::__1::__tree.2091" }
%"class.std::__1::__tree.2091" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2092", %"class.std::__1::__compressed_pair.2096" }
%"class.std::__1::__compressed_pair.2092" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"class.std::__1::__compressed_pair.2096" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"class.blink::Member.2101" = type { %"class.blink::MemberBase.2102" }
%"class.blink::MemberBase.2102" = type { %"class.blink::Script"* }
%"class.blink::Script" = type { i32 (...)**, %"class.blink::ScriptFetchOptions", %"class.blink::KURL" }
%"class.blink::ScriptFetchOptions" = type <{ %"class.WTF::String", %"class.WTF::HashSet.1880", %"class.WTF::String", i8, [3 x i8], i32, i32, i32, i8, %"class.base::StrongAlias.1879", [6 x i8] }>
%"class.absl::optional.2105" = type { %"class.absl::optional_internal::optional_data.2106" }
%"class.absl::optional_internal::optional_data.2106" = type { %"class.absl::optional_internal::optional_data_base.2107" }
%"class.absl::optional_internal::optional_data_base.2107" = type { %"class.absl::optional_internal::optional_data_dtor_base.2108" }
%"class.absl::optional_internal::optional_data_dtor_base.2108" = type { i8, [7 x i8], %union.anon.2109 }
%union.anon.2109 = type { %"struct.v8_inspector::V8StackTraceId" }
%"struct.v8_inspector::V8StackTraceId" = type <{ i64, %"struct.std::__1::pair.2110", i8, [7 x i8] }>
%"struct.std::__1::pair.2110" = type { i64, i64 }
%"class.std::__1::unique_ptr.2111" = type { %"class.std::__1::__compressed_pair.2112" }
%"class.std::__1::__compressed_pair.2112" = type { %"struct.std::__1::__compressed_pair_elem.2113" }
%"struct.std::__1::__compressed_pair_elem.2113" = type { %"struct.blink::WorkerMainScriptLoadParameters"* }
%"struct.blink::WorkerMainScriptLoadParameters" = type { i32, %"class.mojo::StructPtr.2114", %"class.mojo::ScopedHandleBase.2308", %"class.mojo::StructPtr.2309", %"class.std::__1::vector.2317", %"class.std::__1::vector.2324" }
%"class.mojo::StructPtr.2114" = type { %"class.std::__1::unique_ptr.2115" }
%"class.std::__1::unique_ptr.2115" = type { %"class.std::__1::__compressed_pair.2116" }
%"class.std::__1::__compressed_pair.2116" = type { %"struct.std::__1::__compressed_pair_elem.2117" }
%"struct.std::__1::__compressed_pair_elem.2117" = type { %"class.network::mojom::URLResponseHead"* }
%"class.network::mojom::URLResponseHead" = type <{ %"class.base::Time", %"class.base::Time", %class.scoped_refptr.2118, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], i64, i64, i64, i8, [7 x i8], i64, %class.GURL, %"struct.net::LoadTimingInfo", %"class.mojo::StructPtr.2133", i8, i8, i8, i8, i32, %"class.std::__1::basic_string", %"class.net::IPEndPoint", i8, i8, [2 x i8], %"class.net::ProxyServer", i8, [3 x i8], i32, %"class.std::__1::vector.2149", i32, [4 x i8], i64, %"class.std::__1::basic_string", i32, [4 x i8], %"class.absl::optional.2155", %"class.std::__1::vector.2162", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8], %"class.absl::optional.1859", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.mojo::StructPtr.2197", %"class.absl::optional.2294", %"class.absl::optional.967", %"class.std::__1::vector.2162", %class.GURL, i8, [7 x i8] }>
%class.scoped_refptr.2118 = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe.2119", %"class.std::__1::vector.2120", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe.2119" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.2120" = type { %"class.std::__1::__vector_base.2121" }
%"class.std::__1::__vector_base.2121" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.2122" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.2122" = type { %"struct.std::__1::__compressed_pair_elem.2123" }
%"struct.std::__1::__compressed_pair_elem.2123" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"struct.net::LoadTimingInfo" = type { i8, i32, %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.net::LoadTimingInfo::ConnectTiming", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"struct.net::LoadTimingInfo::ConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.mojo::StructPtr.2133" = type { %"class.std::__1::unique_ptr.2134" }
%"class.std::__1::unique_ptr.2134" = type { %"class.std::__1::__compressed_pair.2135" }
%"class.std::__1::__compressed_pair.2135" = type { %"struct.std::__1::__compressed_pair_elem.2136" }
%"struct.std::__1::__compressed_pair_elem.2136" = type { %"class.network::mojom::HttpRawRequestResponseInfo"* }
%"class.network::mojom::HttpRawRequestResponseInfo" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector.2137", %"class.std::__1::vector.2137", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::vector.2137" = type { %"class.std::__1::__vector_base.2138" }
%"class.std::__1::__vector_base.2138" = type { %"class.mojo::InlinedStructPtr.2139"*, %"class.mojo::InlinedStructPtr.2139"*, %"class.std::__1::__compressed_pair.2141" }
%"class.mojo::InlinedStructPtr.2139" = type <{ %"class.network::mojom::HttpRawHeaderPair", i32, [4 x i8] }>
%"class.network::mojom::HttpRawHeaderPair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.2141" = type { %"struct.std::__1::__compressed_pair_elem.2142" }
%"struct.std::__1::__compressed_pair_elem.2142" = type { %"class.mojo::InlinedStructPtr.2139"* }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::vector.2149" = type { %"class.std::__1::__vector_base.2150" }
%"class.std::__1::__vector_base.2150" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.2151" }
%"class.std::__1::__compressed_pair.2151" = type { %"struct.std::__1::__compressed_pair_elem.2129" }
%"struct.std::__1::__compressed_pair_elem.2129" = type { %class.GURL* }
%"class.absl::optional.2155" = type { %"class.absl::optional_internal::optional_data.2156" }
%"class.absl::optional_internal::optional_data.2156" = type { %"class.absl::optional_internal::optional_data_base.2157" }
%"class.absl::optional_internal::optional_data_base.2157" = type { %"class.absl::optional_internal::optional_data_dtor_base.2158" }
%"class.absl::optional_internal::optional_data_dtor_base.2158" = type { i8, [7 x i8], %union.anon.2159 }
%union.anon.2159 = type { %"class.net::SSLInfo" }
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.2160, %class.scoped_refptr.2160, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.2180", %"class.std::__1::basic_string", %"class.std::__1::vector.2188", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%class.scoped_refptr.2160 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.2161", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.2169", %"class.std::__1::vector.2173" }
%"class.base::RefCountedThreadSafe.2161" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.2162", %"class.std::__1::vector.2162", %"class.std::__1::vector.2162", %"class.std::__1::vector.2162" }
%"class.std::__1::unique_ptr.2169" = type { %"class.std::__1::__compressed_pair.2170" }
%"class.std::__1::__compressed_pair.2170" = type { %"struct.std::__1::__compressed_pair_elem.2171" }
%"struct.std::__1::__compressed_pair_elem.2171" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.2173" = type { %"class.std::__1::__vector_base.2174" }
%"class.std::__1::__vector_base.2174" = type { %"class.std::__1::unique_ptr.2169"*, %"class.std::__1::unique_ptr.2169"*, %"class.std::__1::__compressed_pair.2175" }
%"class.std::__1::__compressed_pair.2175" = type { %"struct.std::__1::__compressed_pair_elem.2176" }
%"struct.std::__1::__compressed_pair_elem.2176" = type { %"class.std::__1::unique_ptr.2169"* }
%"class.std::__1::vector.2180" = type { %"class.std::__1::__vector_base.2181" }
%"class.std::__1::__vector_base.2181" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.2183" }
%"class.net::HashValue" = type { i32, %union.anon.2182 }
%union.anon.2182 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.2183" = type { %"struct.std::__1::__compressed_pair_elem.2184" }
%"struct.std::__1::__compressed_pair_elem.2184" = type { %"class.net::HashValue"* }
%"class.std::__1::vector.2188" = type { %"class.std::__1::__vector_base.2189" }
%"class.std::__1::__vector_base.2189" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.2192" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.2190, i32, [4 x i8] }>
%class.scoped_refptr.2190 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.2191", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.2191" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.2192" = type { %"struct.std::__1::__compressed_pair_elem.2193" }
%"struct.std::__1::__compressed_pair_elem.2193" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%"class.mojo::StructPtr.2197" = type { %"class.std::__1::unique_ptr.2198" }
%"class.std::__1::unique_ptr.2198" = type { %"class.std::__1::__compressed_pair.2199" }
%"class.std::__1::__compressed_pair.2199" = type { %"struct.std::__1::__compressed_pair_elem.2200" }
%"struct.std::__1::__compressed_pair_elem.2200" = type { %"class.network::mojom::ParsedHeaders"* }
%"class.network::mojom::ParsedHeaders" = type <{ %"class.std::__1::vector.2201", %"class.mojo::StructPtr.2251", %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginOpenerPolicy", i8, [7 x i8], %"class.absl::optional.2258", %"class.base::TimeDelta", %"class.absl::optional.2258", i32, [4 x i8], %"class.std::__1::vector.2270", %"class.mojo::StructPtr.2284", i8, [7 x i8] }>
%"class.std::__1::vector.2201" = type { %"class.std::__1::__vector_base.2202" }
%"class.std::__1::__vector_base.2202" = type { %"class.mojo::StructPtr.2203"*, %"class.mojo::StructPtr.2203"*, %"class.std::__1::__compressed_pair.2246" }
%"class.mojo::StructPtr.2203" = type { %"class.std::__1::unique_ptr.2204" }
%"class.std::__1::unique_ptr.2204" = type { %"class.std::__1::__compressed_pair.2205" }
%"class.std::__1::__compressed_pair.2205" = type { %"struct.std::__1::__compressed_pair_elem.2206" }
%"struct.std::__1::__compressed_pair_elem.2206" = type { %"class.network::mojom::ContentSecurityPolicy"* }
%"class.network::mojom::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.2207", %"class.base::flat_map.2214", %"class.base::flat_map.2224", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.2234", i8, %"class.std::__1::vector.2162", i32, %"class.mojo::StructPtr.2236", %"class.std::__1::vector.2162" }
%"class.mojo::StructPtr.2207" = type { %"class.std::__1::unique_ptr.2208" }
%"class.std::__1::unique_ptr.2208" = type { %"class.std::__1::__compressed_pair.2209" }
%"class.std::__1::__compressed_pair.2209" = type { %"struct.std::__1::__compressed_pair_elem.2210" }
%"struct.std::__1::__compressed_pair_elem.2210" = type { %"class.network::mojom::CSPSource"* }
%"class.network::mojom::CSPSource" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8] }>
%"class.base::flat_map.2214" = type { %"class.base::internal::flat_tree.2215" }
%"class.base::internal::flat_tree.2215" = type { %"class.std::__1::vector.2216" }
%"class.std::__1::vector.2216" = type { %"class.std::__1::__vector_base.2217" }
%"class.std::__1::__vector_base.2217" = type { %"struct.std::__1::pair.2218"*, %"struct.std::__1::pair.2218"*, %"class.std::__1::__compressed_pair.2219" }
%"struct.std::__1::pair.2218" = type opaque
%"class.std::__1::__compressed_pair.2219" = type { %"struct.std::__1::__compressed_pair_elem.2220" }
%"struct.std::__1::__compressed_pair_elem.2220" = type { %"struct.std::__1::pair.2218"* }
%"class.base::flat_map.2224" = type { %"class.base::internal::flat_tree.2225" }
%"class.base::internal::flat_tree.2225" = type { %"class.std::__1::vector.2226" }
%"class.std::__1::vector.2226" = type { %"class.std::__1::__vector_base.2227" }
%"class.std::__1::__vector_base.2227" = type { %"struct.std::__1::pair.2228"*, %"struct.std::__1::pair.2228"*, %"class.std::__1::__compressed_pair.2229" }
%"struct.std::__1::pair.2228" = type opaque
%"class.std::__1::__compressed_pair.2229" = type { %"struct.std::__1::__compressed_pair_elem.2230" }
%"struct.std::__1::__compressed_pair_elem.2230" = type { %"struct.std::__1::pair.2228"* }
%"class.mojo::InlinedStructPtr.2234" = type <{ %"class.network::mojom::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::ContentSecurityPolicyHeader" = type { %"class.std::__1::basic_string", i32, i32 }
%"class.mojo::StructPtr.2236" = type { %"class.std::__1::unique_ptr.2237" }
%"class.std::__1::unique_ptr.2237" = type { %"class.std::__1::__compressed_pair.2238" }
%"class.std::__1::__compressed_pair.2238" = type { %"struct.std::__1::__compressed_pair_elem.2239" }
%"struct.std::__1::__compressed_pair_elem.2239" = type { %"class.network::mojom::CSPTrustedTypes"* }
%"class.network::mojom::CSPTrustedTypes" = type <{ %"class.std::__1::vector.2162", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.2246" = type { %"struct.std::__1::__compressed_pair_elem.2247" }
%"struct.std::__1::__compressed_pair_elem.2247" = type { %"class.mojo::StructPtr.2203"* }
%"class.mojo::StructPtr.2251" = type { %"class.std::__1::unique_ptr.2252" }
%"class.std::__1::unique_ptr.2252" = type { %"class.std::__1::__compressed_pair.2253" }
%"class.std::__1::__compressed_pair.2253" = type { %"struct.std::__1::__compressed_pair_elem.2254" }
%"struct.std::__1::__compressed_pair_elem.2254" = type { %"class.network::mojom::AllowCSPFromHeaderValue"* }
%"class.network::mojom::AllowCSPFromHeaderValue" = type { i32, %"union.network::mojom::AllowCSPFromHeaderValue::Union_" }
%"union.network::mojom::AllowCSPFromHeaderValue::Union_" = type { %"class.url::Origin"* }
%"struct.network::CrossOriginEmbedderPolicy" = type { i32, %"class.absl::optional.962", i32, %"class.absl::optional.962" }
%"struct.network::CrossOriginOpenerPolicy" = type { i32, %"class.absl::optional.962", i32, %"class.absl::optional.962" }
%"class.absl::optional.2258" = type { %"class.absl::optional_internal::optional_data.2259" }
%"class.absl::optional_internal::optional_data.2259" = type { %"class.absl::optional_internal::optional_data_base.2260" }
%"class.absl::optional_internal::optional_data_base.2260" = type { %"class.absl::optional_internal::optional_data_dtor_base.2261" }
%"class.absl::optional_internal::optional_data_dtor_base.2261" = type { i8, %union.anon.2262 }
%union.anon.2262 = type { %"class.std::__1::vector.2263" }
%"class.std::__1::vector.2263" = type { %"class.std::__1::__vector_base.2264" }
%"class.std::__1::__vector_base.2264" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2265" }
%"class.std::__1::__compressed_pair.2265" = type { %"struct.std::__1::__compressed_pair_elem.2266" }
%"struct.std::__1::__compressed_pair_elem.2266" = type { i32* }
%"class.std::__1::vector.2270" = type { %"class.std::__1::__vector_base.2271" }
%"class.std::__1::__vector_base.2271" = type { %"class.mojo::StructPtr.2272"*, %"class.mojo::StructPtr.2272"*, %"class.std::__1::__compressed_pair.2279" }
%"class.mojo::StructPtr.2272" = type { %"class.std::__1::unique_ptr.2273" }
%"class.std::__1::unique_ptr.2273" = type { %"class.std::__1::__compressed_pair.2274" }
%"class.std::__1::__compressed_pair.2274" = type { %"struct.std::__1::__compressed_pair_elem.2275" }
%"struct.std::__1::__compressed_pair_elem.2275" = type { %"class.network::mojom::LinkHeader"* }
%"class.network::mojom::LinkHeader" = type { %class.GURL, i32, i32, i32, %"class.absl::optional.962" }
%"class.std::__1::__compressed_pair.2279" = type { %"struct.std::__1::__compressed_pair_elem.2280" }
%"struct.std::__1::__compressed_pair_elem.2280" = type { %"class.mojo::StructPtr.2272"* }
%"class.mojo::StructPtr.2284" = type { %"class.std::__1::unique_ptr.2285" }
%"class.std::__1::unique_ptr.2285" = type { %"class.std::__1::__compressed_pair.2286" }
%"class.std::__1::__compressed_pair.2286" = type { %"struct.std::__1::__compressed_pair_elem.2287" }
%"struct.std::__1::__compressed_pair_elem.2287" = type { %"class.network::mojom::TimingAllowOrigin"* }
%"class.network::mojom::TimingAllowOrigin" = type { i32, %"union.network::mojom::TimingAllowOrigin::Union_" }
%"union.network::mojom::TimingAllowOrigin::Union_" = type { %"class.std::__1::vector.2162"* }
%"class.absl::optional.2294" = type { %"class.absl::optional_internal::optional_data.2295" }
%"class.absl::optional_internal::optional_data.2295" = type { %"class.absl::optional_internal::optional_data_base.2296" }
%"class.absl::optional_internal::optional_data_base.2296" = type { %"class.absl::optional_internal::optional_data_dtor_base.2297" }
%"class.absl::optional_internal::optional_data_dtor_base.2297" = type { i8, %union.anon.2298 }
%union.anon.2298 = type { %"struct.network::OriginPolicy" }
%"struct.network::OriginPolicy" = type { i32, %class.GURL, %"class.std::__1::unique_ptr.2299" }
%"class.std::__1::unique_ptr.2299" = type { %"class.std::__1::__compressed_pair.2300" }
%"class.std::__1::__compressed_pair.2300" = type { %"struct.std::__1::__compressed_pair_elem.2301" }
%"struct.std::__1::__compressed_pair_elem.2301" = type { %"struct.network::OriginPolicyContents"* }
%"struct.network::OriginPolicyContents" = type { %"class.std::__1::vector.2162", %"class.absl::optional.962", %"class.std::__1::vector.2162", %"class.std::__1::vector.2162" }
%"class.std::__1::vector.2162" = type { %"class.std::__1::__vector_base.2163" }
%"class.std::__1::__vector_base.2163" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.2164" }
%"class.std::__1::__compressed_pair.2164" = type { %"struct.std::__1::__compressed_pair_elem.2165" }
%"struct.std::__1::__compressed_pair_elem.2165" = type { %"class.std::__1::basic_string"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.2127" }
%"class.std::__1::unique_ptr.2127" = type { %"class.std::__1::__compressed_pair.2128" }
%"class.std::__1::__compressed_pair.2128" = type { %"struct.std::__1::__compressed_pair_elem.2129" }
%"class.mojo::ScopedHandleBase.2308" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.mojo::StructPtr.2309" = type { %"class.std::__1::unique_ptr.2310" }
%"class.std::__1::unique_ptr.2310" = type { %"class.std::__1::__compressed_pair.2311" }
%"class.std::__1::__compressed_pair.2311" = type { %"struct.std::__1::__compressed_pair_elem.2312" }
%"struct.std::__1::__compressed_pair_elem.2312" = type { %"class.network::mojom::URLLoaderClientEndpoints"* }
%"class.network::mojom::URLLoaderClientEndpoints" = type { %"class.mojo::PendingRemote.2313", %"class.mojo::PendingReceiver" }
%"class.mojo::PendingRemote.2313" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.std::__1::vector.2317" = type { %"class.std::__1::__vector_base.2318" }
%"class.std::__1::__vector_base.2318" = type { %"struct.net::RedirectInfo"*, %"struct.net::RedirectInfo"*, %"class.std::__1::__compressed_pair.2319" }
%"struct.net::RedirectInfo" = type { i32, %"class.std::__1::basic_string", %class.GURL, %"class.net::SiteForCookies", %"class.std::__1::basic_string", i8, i8, i32 }
%"class.std::__1::__compressed_pair.2319" = type { %"struct.std::__1::__compressed_pair_elem.2320" }
%"struct.std::__1::__compressed_pair_elem.2320" = type { %"struct.net::RedirectInfo"* }
%"class.std::__1::vector.2324" = type { %"class.std::__1::__vector_base.2325" }
%"class.std::__1::__vector_base.2325" = type { %"class.mojo::StructPtr.2114"*, %"class.mojo::StructPtr.2114"*, %"class.std::__1::__compressed_pair.2326" }
%"class.std::__1::__compressed_pair.2326" = type { %"struct.std::__1::__compressed_pair_elem.2327" }
%"struct.std::__1::__compressed_pair_elem.2327" = type { %"class.mojo::StructPtr.2114"* }
%"class.blink::WorkerPerformance" = type { %"class.blink::Performance", %"class.blink::Member.547" }
%"class.blink::PerformanceObserverInit" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, double, %"class.WTF::Vector.605", %"class.WTF::String" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.2336" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.2336" = type { %"class.v8::TracedReference.2337" }
%"class.v8::TracedReference.2337" = type { %"class.v8::BasicTracedReference.2338" }
%"class.v8::BasicTracedReference.2338" = type { %"class.v8::TracedReferenceBase" }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.2339", i8* }
%"class.WTF::StringAppend.2339" = type { i8*, %"class.WTF::String" }
%"class.blink::ExecutionContextLifecycleObserver" = type <{ %"class.blink::ContextLifecycleObserver", i32, [4 x i8] }>
%"class.blink::ConsoleMessage" = type { i32, i32, %"class.WTF::String", %"class.std::__1::unique_ptr.2342", %"class.WTF::String", double, %"class.WTF::String", %"class.blink::WeakMember.2354", %"class.WTF::Vector.2355" }
%"class.std::__1::unique_ptr.2342" = type { %"class.std::__1::__compressed_pair.2343" }
%"class.std::__1::__compressed_pair.2343" = type { %"struct.std::__1::__compressed_pair_elem.2344" }
%"struct.std::__1::__compressed_pair_elem.2344" = type { %"class.blink::SourceLocation"* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.2345", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2345" = type { %"class.std::__1::__compressed_pair.2346" }
%"class.std::__1::__compressed_pair.2346" = type { %"struct.std::__1::__compressed_pair_elem.2347" }
%"struct.std::__1::__compressed_pair_elem.2347" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::WeakMember.2354" = type { %"class.blink::MemberBase.788" }
%"class.WTF::Vector.2355" = type { %"class.WTF::VectorBuffer.2356" }
%"class.WTF::VectorBuffer.2356" = type { %"class.WTF::VectorBufferBase.1309" }
%"class.WTF::StringTypeAdapter.2481" = type <{ i8*, i32, [4 x i8] }>
%"class.blink::PerformanceObserverEntryList" = type { %"class.blink::ScriptWrappable", %"class.blink::HeapVector" }
%"class.v8::Value" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::StringTypeAdapter.2482" = type { %"class.WTF::StringTypeAdapter.2483" }
%"class.WTF::StringTypeAdapter.2483" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZN5blink16PerformanceEntry24StartTimeCompareLessThanEPS0_S1_ = comdat any

$_ZN5blink19PerformanceObserverD2Ev = comdat any

$_ZN5blink19PerformanceObserverD0Ev = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink19PerformanceObserver18GetWrapperTypeInfoEv = comdat any

$_ZN5blink19PerformanceObserver16ContextDestroyedEv = comdat any

$_ZThn16_N5blink19PerformanceObserverD1Ev = comdat any

$_ZThn16_N5blink19PerformanceObserverD0Ev = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_19PerformanceObserverEE18IsContextDestroyedEv = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_19PerformanceObserverEE26DispatchHasPendingActivityEv = comdat any

$_ZThn24_N5blink19PerformanceObserverD1Ev = comdat any

$_ZThn24_N5blink19PerformanceObserverD0Ev = comdat any

$_ZNK5blink33ExecutionContextLifecycleObserver35IsExecutionContextLifecycleObserverEv = comdat any

$_ZThn24_N5blink19PerformanceObserver16ContextDestroyedEv = comdat any

$_ZNK5blink21GarbageCollectedMixin5TraceEPNS_7VisitorE = comdat any

$_ZN5blink21ActiveScriptWrappableINS_19PerformanceObserverEED0Ev = comdat any

$_ZN5blink25ActiveScriptWrappableBaseD2Ev = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_12AtomicStringEEEmm = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE6AppendIS4_EEvPKT_j = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_16PerformanceEntryEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_16PerformanceEntryEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNSt3__16__sortIRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEvT0_SA_T_ = comdat any

$_ZNSt3__17__sort3IRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_T_ = comdat any

$_ZNSt3__17__sort4IRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_SA_T_ = comdat any

$_ZNSt3__17__sort5IRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_SA_SA_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEbT0_SA_T_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN5blink10TraceTraitINS_29V8PerformanceObserverCallbackEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink7Visitor14HandleWeakCellINS_11PerformanceEEEvRKNS_14LivenessBrokerEPKv = comdat any

$_ZN5blink10TraceTraitINS_11PerformanceEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZTVN5blink21ActiveScriptWrappableINS_19PerformanceObserverEEE = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [20 x i8] c"PerformanceObserver\00", align 1
@.str.1 = private unnamed_addr constant [44 x i8] c"No 'worker' or 'window' in current context.\00", align 1
@_ZN5blink23performance_entry_names8kElementE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink23performance_entry_names6kEventE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink23performance_entry_names11kFirstInputE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink23performance_entry_names23kLargestContentfulPaintE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink23performance_entry_names12kLayoutShiftE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink23performance_entry_names9kLongtaskE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink23performance_entry_names5kMarkE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink23performance_entry_names8kMeasureE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink23performance_entry_names11kNavigationE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink23performance_entry_names6kPaintE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink23performance_entry_names9kResourceE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink23performance_entry_names16kVisibilityStateE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZTVN5blink19PerformanceObserverE = hidden unnamed_addr constant { [13 x i8*], [7 x i8*], [9 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::PerformanceObserver"*)* @_ZN5blink19PerformanceObserverD2Ev to i8*), i8* bitcast (void (%"class.blink::PerformanceObserver"*)* @_ZN5blink19PerformanceObserverD0Ev to i8*), i8* bitcast (i1 (%"class.blink::PerformanceObserver"*)* @_ZNK5blink19PerformanceObserver18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::PerformanceObserver"*, %"class.blink::Visitor"*)* @_ZNK5blink19PerformanceObserver5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::PerformanceObserver"*)* @_ZNK5blink19PerformanceObserver18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (void (%"class.blink::PerformanceObserver"*, i32)* @_ZN5blink19PerformanceObserver28ContextLifecycleStateChangedENS_5mojom19FrameLifecycleStateE to i8*), i8* bitcast (void (%"class.blink::PerformanceObserver"*)* @_ZN5blink19PerformanceObserver16ContextDestroyedEv to i8*)], [7 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.blink::PerformanceObserver"*, %"class.blink::Visitor"*)* @_ZThn16_NK5blink19PerformanceObserver5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::PerformanceObserver"*)* @_ZThn16_N5blink19PerformanceObserverD1Ev to i8*), i8* bitcast (void (%"class.blink::PerformanceObserver"*)* @_ZThn16_N5blink19PerformanceObserverD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_19PerformanceObserverEE18IsContextDestroyedEv to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_19PerformanceObserverEE26DispatchHasPendingActivityEv to i8*)], [9 x i8*] [i8* inttoptr (i64 -24 to i8*), i8* null, i8* bitcast (void (%"class.blink::PerformanceObserver"*, %"class.blink::Visitor"*)* @_ZThn24_NK5blink19PerformanceObserver5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::PerformanceObserver"*)* @_ZThn24_N5blink19PerformanceObserverD1Ev to i8*), i8* bitcast (void (%"class.blink::PerformanceObserver"*)* @_ZThn24_N5blink19PerformanceObserverD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContextLifecycleObserver"*)* @_ZNK5blink33ExecutionContextLifecycleObserver35IsExecutionContextLifecycleObserverEv to i8*), i8* bitcast (void (%"class.blink::PerformanceObserver"*)* @_ZThn24_N5blink19PerformanceObserver16ContextDestroyedEv to i8*), i8* bitcast (void (%"class.blink::ExecutionContextLifecycleStateObserver"*, %"class.blink::ExecutionContext"*)* @_ZN5blink38ExecutionContextLifecycleStateObserver19SetExecutionContextEPNS_16ExecutionContextE to i8*), i8* bitcast (void (%"class.blink::PerformanceObserver"*, i32)* @_ZThn24_N5blink19PerformanceObserver28ContextLifecycleStateChangedENS_5mojom19FrameLifecycleStateE to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [63 x i8] c"Window/worker may be destroyed? Performance target is invalid.\00", align 1
@.str.3 = private unnamed_addr constant [71 x i8] c"An observe() call must not include both entryTypes and type arguments.\00", align 1
@.str.4 = private unnamed_addr constant [113 x i8] c"This PerformanceObserver has performed observe({type:...}, therefore it cannot perform observe({entryTypes:...})\00", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"The entry type '\00", align 1
@.str.6 = private unnamed_addr constant [37 x i8] c"' does not exist or isn't supported.\00", align 1
@.str.7 = private unnamed_addr constant [85 x i8] c"The PerformanceObserver does not support buffered flag with the entryTypes argument.\00", align 1
@.str.8 = private unnamed_addr constant [68 x i8] c"An observe() call must include either entryTypes or type arguments.\00", align 1
@.str.9 = private unnamed_addr constant [102 x i8] c"This observer has performed observe({entryTypes:...}, therefore it cannot perform observe({type:...})\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase24is_event_timing_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase34is_visibility_state_entry_enabled_E = external local_unnamed_addr global i8, align 1
@_ZTVN5blink15ScriptWrappableE = external unnamed_addr constant { [11 x i8*] }, align 8
@_ZTVN5blink21ActiveScriptWrappableINS_19PerformanceObserverEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::GarbageCollectedMixin"*, %"class.blink::Visitor"*)* @_ZNK5blink21GarbageCollectedMixin5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::ActiveScriptWrappableBase"*)* @_ZN5blink25ActiveScriptWrappableBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::ActiveScriptWrappable"*)* @_ZN5blink21ActiveScriptWrappableINS_19PerformanceObserverEED0Ev to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_19PerformanceObserverEE18IsContextDestroyedEv to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_19PerformanceObserverEE26DispatchHasPendingActivityEv to i8*)] }, comdat, align 8
@_ZN5blink19PerformanceObserver18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.11 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.12 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.13 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.14 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.15 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv = private unnamed_addr constant [65 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::AtomicString]\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.16 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.17 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.18 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ConsoleMessage]\00", align 1
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.19 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@.str.20 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@.str.21 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.22 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.23 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_16PerformanceEntryEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [173 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::PerformanceEntry>, WTF::VectorTraits<blink::Member<blink::PerformanceEntry> > >]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4

@_ZN5blink19PerformanceObserverC1EPNS_16ExecutionContextEPNS_11PerformanceEPNS_29V8PerformanceObserverCallbackE = hidden unnamed_addr alias void (%"class.blink::PerformanceObserver"*, %"class.blink::ExecutionContext"*, %"class.blink::Performance"*, %"class.blink::V8PerformanceObserverCallback"*), void (%"class.blink::PerformanceObserver"*, %"class.blink::ExecutionContext"*, %"class.blink::Performance"*, %"class.blink::V8PerformanceObserverCallback"*)* @_ZN5blink19PerformanceObserverC2EPNS_16ExecutionContextEPNS_11PerformanceEPNS_29V8PerformanceObserverCallbackE

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::PerformanceObserver"* @_ZN5blink19PerformanceObserver6CreateEPNS_11ScriptStateEPNS_29V8PerformanceObserverCallbackE(%"class.blink::ScriptState"*, %"class.blink::V8PerformanceObserverCallback"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = ptrtoint %"class.blink::V8PerformanceObserverCallback"* %1 to i64
  %6 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.v8::Context"*, %"class.v8::Context"** %6, align 8
  %8 = icmp eq %"class.v8::Context"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::ScriptState"* %0 to %"class.v8::internal::Isolate"**
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = bitcast %"class.v8::Context"* %7 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %11, i64 %13) #10
  %15 = bitcast i64* %14 to %"class.v8::Context"*
  br label %16

16:                                               ; preds = %2, %9
  %17 = phi %"class.v8::Context"* [ %15, %9 ], [ null, %2 ]
  %18 = tail call %"class.blink::LocalDOMWindow"* @_ZN5blink16ToLocalDOMWindowEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %17) #10
  %19 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %0) #10
  %20 = icmp eq %"class.blink::LocalDOMWindow"* %18, null
  %21 = icmp eq %"class.blink::ExecutionContext"* %19, null
  br i1 %20, label %59, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %19, i64 0, i32 3
  %24 = icmp eq %"class.blink::UseCounter"* %23, null
  %25 = or i1 %21, %24
  br i1 %25, label %31, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.blink::UseCounter"* %23 to void (%"class.blink::UseCounter"*, i32)***
  %28 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %28, i64 3
  %30 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %29, align 8
  tail call void %30(%"class.blink::UseCounter"* nonnull %23, i32 2188) #10
  br label %31

31:                                               ; preds = %22, %26
  %32 = tail call %"class.blink::WindowPerformance"* @_ZN5blink20DOMWindowPerformance11performanceERNS_14LocalDOMWindowE(%"class.blink::LocalDOMWindow"* nonnull dereferenceable(904) %18) #10
  %33 = ptrtoint %"class.blink::WindowPerformance"* %32 to i64
  %34 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #10
  %35 = bitcast i8* %34 to %"class.blink::PerformanceObserver"*
  %36 = bitcast i8* %34 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink15ScriptWrappableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %37 = getelementptr inbounds i8, i8* %34, i64 8
  %38 = bitcast i8* %37 to i64**
  store i64* null, i64** %38, align 8
  %39 = getelementptr inbounds i8, i8* %34, i64 16
  %40 = bitcast i8* %39 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink21ActiveScriptWrappableINS_19PerformanceObserverEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = getelementptr inbounds i8, i8* %34, i64 24
  %42 = bitcast i8* %41 to %"class.blink::ExecutionContextLifecycleStateObserver"*
  tail call void @_ZN5blink38ExecutionContextLifecycleStateObserverC2EPNS_16ExecutionContextE(%"class.blink::ExecutionContextLifecycleStateObserver"* %42, %"class.blink::ExecutionContext"* %19) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [7 x i8*], [9 x i8*] }, { [13 x i8*], [7 x i8*], [9 x i8*] }* @_ZTVN5blink19PerformanceObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %43 = bitcast i8* %39 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [7 x i8*], [9 x i8*] }, { [13 x i8*], [7 x i8*], [9 x i8*] }* @_ZTVN5blink19PerformanceObserverE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [7 x i8*], [9 x i8*] }, { [13 x i8*], [7 x i8*], [9 x i8*] }* @_ZTVN5blink19PerformanceObserverE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %43, align 8
  %44 = getelementptr inbounds i8, i8* %34, i64 48
  %45 = bitcast i8* %44 to i64*
  store i64 %5, i64* %45, align 8
  %46 = getelementptr inbounds i8, i8* %34, i64 56
  %47 = bitcast i8* %46 to i64*
  store i64 %33, i64* %47, align 8
  %48 = getelementptr inbounds i8, i8* %34, i64 64
  %49 = getelementptr inbounds i8, i8* %34, i64 84
  %50 = bitcast i8* %49 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 20, i1 false) #10
  store i32 2, i32* %50, align 4
  %51 = getelementptr inbounds i8, i8* %34, i64 88
  store i8 0, i8* %51, align 8
  %52 = getelementptr inbounds i8, i8* %34, i64 96
  %53 = bitcast i8* %52 to double*
  store double 1.040000e+02, double* %53, align 8
  tail call void @_ZN5blink38ExecutionContextLifecycleStateObserver19UpdateStateIfNeededEv(%"class.blink::ExecutionContextLifecycleStateObserver"* %42) #10
  %54 = getelementptr inbounds i8, i8* %34, i64 -4
  %55 = bitcast i8* %54 to i16*
  %56 = load atomic i16, i16* %55 monotonic, align 2
  %57 = or i16 %56, 1
  store atomic i16 %57, i16* %55 release, align 2
  %58 = bitcast i8* %39 to %"class.blink::ActiveScriptWrappableBase"*
  tail call void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"* %58) #10
  br label %146

59:                                               ; preds = %16
  br i1 %21, label %106, label %60

60:                                               ; preds = %59
  %61 = bitcast %"class.blink::ExecutionContext"* %19 to i1 (%"class.blink::ExecutionContext"*)***
  %62 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %61, align 8
  %63 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %62, i64 3
  %64 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %63, align 8
  %65 = tail call zeroext i1 %64(%"class.blink::ExecutionContext"* nonnull %19) #10
  br i1 %65, label %66, label %106

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %19, i64 -1, i32 22
  %68 = bitcast %"class.blink::DOMTimerCoordinator"* %67 to %"class.blink::WorkerGlobalScope"*
  %69 = icmp eq %"class.blink::DOMTimerCoordinator"* %67, null
  br i1 %69, label %106, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %19, i64 0, i32 3
  %72 = icmp eq %"class.blink::UseCounter"* %71, null
  br i1 %72, label %78, label %73

73:                                               ; preds = %70
  %74 = bitcast %"class.blink::UseCounter"* %71 to void (%"class.blink::UseCounter"*, i32)***
  %75 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %75, i64 3
  %77 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %76, align 8
  tail call void %77(%"class.blink::UseCounter"* nonnull %71, i32 2189) #10
  br label %78

78:                                               ; preds = %73, %70
  %79 = tail call %"class.blink::WorkerPerformance"* @_ZN5blink28WorkerGlobalScopePerformance11performanceERNS_17WorkerGlobalScopeE(%"class.blink::WorkerGlobalScope"* nonnull dereferenceable(2376) %68) #10
  %80 = ptrtoint %"class.blink::WorkerPerformance"* %79 to i64
  %81 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #10
  %82 = bitcast i8* %81 to %"class.blink::PerformanceObserver"*
  %83 = bitcast i8* %81 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink15ScriptWrappableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %83, align 8
  %84 = getelementptr inbounds i8, i8* %81, i64 8
  %85 = bitcast i8* %84 to i64**
  store i64* null, i64** %85, align 8
  %86 = getelementptr inbounds i8, i8* %81, i64 16
  %87 = bitcast i8* %86 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink21ActiveScriptWrappableINS_19PerformanceObserverEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %87, align 8
  %88 = getelementptr inbounds i8, i8* %81, i64 24
  %89 = bitcast i8* %88 to %"class.blink::ExecutionContextLifecycleStateObserver"*
  tail call void @_ZN5blink38ExecutionContextLifecycleStateObserverC2EPNS_16ExecutionContextE(%"class.blink::ExecutionContextLifecycleStateObserver"* %89, %"class.blink::ExecutionContext"* nonnull %19) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [7 x i8*], [9 x i8*] }, { [13 x i8*], [7 x i8*], [9 x i8*] }* @_ZTVN5blink19PerformanceObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %83, align 8
  %90 = bitcast i8* %86 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [7 x i8*], [9 x i8*] }, { [13 x i8*], [7 x i8*], [9 x i8*] }* @_ZTVN5blink19PerformanceObserverE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [7 x i8*], [9 x i8*] }, { [13 x i8*], [7 x i8*], [9 x i8*] }* @_ZTVN5blink19PerformanceObserverE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %90, align 8
  %91 = getelementptr inbounds i8, i8* %81, i64 48
  %92 = bitcast i8* %91 to i64*
  store i64 %5, i64* %92, align 8
  %93 = getelementptr inbounds i8, i8* %81, i64 56
  %94 = bitcast i8* %93 to i64*
  store i64 %80, i64* %94, align 8
  %95 = getelementptr inbounds i8, i8* %81, i64 64
  %96 = getelementptr inbounds i8, i8* %81, i64 84
  %97 = bitcast i8* %96 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 20, i1 false) #10
  store i32 2, i32* %97, align 4
  %98 = getelementptr inbounds i8, i8* %81, i64 88
  store i8 0, i8* %98, align 8
  %99 = getelementptr inbounds i8, i8* %81, i64 96
  %100 = bitcast i8* %99 to double*
  store double 1.040000e+02, double* %100, align 8
  tail call void @_ZN5blink38ExecutionContextLifecycleStateObserver19UpdateStateIfNeededEv(%"class.blink::ExecutionContextLifecycleStateObserver"* %89) #10
  %101 = getelementptr inbounds i8, i8* %81, i64 -4
  %102 = bitcast i8* %101 to i16*
  %103 = load atomic i16, i16* %102 monotonic, align 2
  %104 = or i16 %103, 1
  store atomic i16 %104, i16* %102 release, align 2
  %105 = bitcast i8* %86 to %"class.blink::ActiveScriptWrappableBase"*
  tail call void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"* %105) #10
  br label %146

106:                                              ; preds = %59, %60, %66
  %107 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 0
  %108 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %107, align 8
  %109 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %109) #10
  %110 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1, i64 0, i64 0), i64 43) #10
  %111 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17FailedToConstructEPKcRKN3WTF6StringE(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), %"class.WTF::String"* nonnull dereferenceable(8) %4) #10
  %112 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %111, %"class.WTF::StringImpl"** %112, align 8
  call void @_ZN5blink16V8ThrowException14ThrowTypeErrorEPN2v87IsolateERKN3WTF6StringE(%"class.v8::Isolate"* %108, %"class.WTF::String"* nonnull dereferenceable(8) %3) #10
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %128, label %115

115:                                              ; preds = %106
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  br i1 %119, label %122, label %124

122:                                              ; preds = %115
  %123 = add i32 %121, -1
  store i32 %123, i32* %120, align 4
  br label %124

124:                                              ; preds = %122, %115
  %125 = phi i32 [ %123, %122 ], [ %121, %115 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #10
  br label %128

128:                                              ; preds = %106, %124, %127
  %129 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %131, label %145, label %132

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load atomic i32, i32* %133 monotonic, align 4
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  br i1 %136, label %139, label %141

139:                                              ; preds = %132
  %140 = add i32 %138, -1
  store i32 %140, i32* %137, align 4
  br label %141

141:                                              ; preds = %139, %132
  %142 = phi i32 [ %140, %139 ], [ %138, %132 ]
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %145

144:                                              ; preds = %141
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %130) #10
  br label %145

145:                                              ; preds = %128, %141, %144
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #10
  br label %146

146:                                              ; preds = %78, %145, %31
  %147 = phi %"class.blink::PerformanceObserver"* [ %35, %31 ], [ null, %145 ], [ %82, %78 ]
  ret %"class.blink::PerformanceObserver"* %147
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::LocalDOMWindow"* @_ZN5blink16ToLocalDOMWindowEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"*) local_unnamed_addr #2

declare %"class.blink::WindowPerformance"* @_ZN5blink20DOMWindowPerformance11performanceERNS_14LocalDOMWindowE(%"class.blink::LocalDOMWindow"* dereferenceable(904)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::WorkerPerformance"* @_ZN5blink28WorkerGlobalScopePerformance11performanceERNS_17WorkerGlobalScopeE(%"class.blink::WorkerGlobalScope"* dereferenceable(2376)) local_unnamed_addr #2

declare void @_ZN5blink16V8ThrowException14ThrowTypeErrorEPN2v87IsolateERKN3WTF6StringE(%"class.v8::Isolate"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17FailedToConstructEPKcRKN3WTF6StringE(i8*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PerformanceObserver19supportedEntryTypesEPNS_11ScriptStateE(%"class.WTF::Vector.1843"* noalias sret, %"class.blink::ScriptState"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1843", %"class.WTF::Vector.1843"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.WTF::Vector.1843", %"class.WTF::Vector.1843"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.WTF::Vector.1843", %"class.WTF::Vector.1843"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = bitcast %"class.WTF::Vector.1843"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #10
  %7 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %1) #10
  %8 = bitcast %"class.blink::ExecutionContext"* %7 to i1 (%"class.blink::ExecutionContext"*)***
  %9 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %9, i64 1
  %11 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.blink::ExecutionContext"* %7) #10
  br i1 %12, label %13, label %217

13:                                               ; preds = %2
  %14 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink23performance_entry_names8kElementE, align 8
  %15 = load i32, i32* %5, align 4
  %16 = load i32, i32* %4, align 8
  %17 = icmp eq i32 %15, %16
  br i1 %17, label %45, label %18, !prof !2

18:                                               ; preds = %13
  %19 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %3, align 8
  %20 = zext i32 %15 to i64
  %21 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %14, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %19, i64 %20, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %23, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %24, label %42, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %42

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i33
  %34 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %33, i33 1) #10
  %35 = extractvalue { i33, i1 } %34, 1
  %36 = extractvalue { i33, i1 } %34, 0
  %37 = icmp slt i33 %36, 0
  %38 = or i1 %35, %37
  br i1 %38, label %39, label %40, !prof !2

39:                                               ; preds = %30
  tail call void @llvm.trap() #10
  unreachable

40:                                               ; preds = %30
  %41 = trunc i33 %36 to i32
  store i32 %41, i32* %31, align 4
  br label %42

42:                                               ; preds = %40, %25, %18
  %43 = load i32, i32* %5, align 4
  %44 = add i32 %43, 1
  store i32 %44, i32* %5, align 4
  br label %46

45:                                               ; preds = %13
  tail call void @_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.1843"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %14) #10
  br label %46

46:                                               ; preds = %42, %45
  %47 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase24is_event_timing_enabled_E, align 1, !range !3
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %82, label %49

49:                                               ; preds = %46
  %50 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink23performance_entry_names6kEventE, align 8
  %51 = load i32, i32* %5, align 4
  %52 = load i32, i32* %4, align 8
  %53 = icmp eq i32 %51, %52
  br i1 %53, label %81, label %54, !prof !2

54:                                               ; preds = %49
  %55 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %3, align 8
  %56 = zext i32 %51 to i64
  %57 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %50, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %55, i64 %56, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"** %59, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %60, label %78, label %61

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %78

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = zext i32 %68 to i33
  %70 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %69, i33 1) #10
  %71 = extractvalue { i33, i1 } %70, 1
  %72 = extractvalue { i33, i1 } %70, 0
  %73 = icmp slt i33 %72, 0
  %74 = or i1 %71, %73
  br i1 %74, label %75, label %76, !prof !2

75:                                               ; preds = %66
  tail call void @llvm.trap() #10
  unreachable

76:                                               ; preds = %66
  %77 = trunc i33 %72 to i32
  store i32 %77, i32* %67, align 4
  br label %78

78:                                               ; preds = %76, %61, %54
  %79 = load i32, i32* %5, align 4
  %80 = add i32 %79, 1
  store i32 %80, i32* %5, align 4
  br label %82

81:                                               ; preds = %49
  tail call void @_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.1843"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %50) #10
  br label %82

82:                                               ; preds = %46, %81, %78
  %83 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink23performance_entry_names11kFirstInputE, align 8
  %84 = load i32, i32* %5, align 4
  %85 = load i32, i32* %4, align 8
  %86 = icmp eq i32 %84, %85
  br i1 %86, label %114, label %87, !prof !2

87:                                               ; preds = %82
  %88 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %3, align 8
  %89 = zext i32 %84 to i64
  %90 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %83, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %92 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %88, i64 %89, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %91, %"class.WTF::StringImpl"** %92, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %93, label %111, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %111

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = zext i32 %101 to i33
  %103 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %102, i33 1) #10
  %104 = extractvalue { i33, i1 } %103, 1
  %105 = extractvalue { i33, i1 } %103, 0
  %106 = icmp slt i33 %105, 0
  %107 = or i1 %104, %106
  br i1 %107, label %108, label %109, !prof !2

108:                                              ; preds = %99
  tail call void @llvm.trap() #10
  unreachable

109:                                              ; preds = %99
  %110 = trunc i33 %105 to i32
  store i32 %110, i32* %100, align 4
  br label %111

111:                                              ; preds = %109, %94, %87
  %112 = load i32, i32* %5, align 4
  %113 = add i32 %112, 1
  store i32 %113, i32* %5, align 4
  br label %116

114:                                              ; preds = %82
  tail call void @_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.1843"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %83) #10
  %115 = load i32, i32* %5, align 4
  br label %116

116:                                              ; preds = %111, %114
  %117 = phi i32 [ %113, %111 ], [ %115, %114 ]
  %118 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink23performance_entry_names23kLargestContentfulPaintE, align 8
  %119 = load i32, i32* %4, align 8
  %120 = icmp eq i32 %117, %119
  br i1 %120, label %148, label %121, !prof !2

121:                                              ; preds = %116
  %122 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %3, align 8
  %123 = zext i32 %117 to i64
  %124 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %118, i64 0, i32 0, i32 0, i32 0
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %126 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %122, i64 %123, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %125, %"class.WTF::StringImpl"** %126, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %125, null
  br i1 %127, label %145, label %128

128:                                              ; preds = %121
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %145

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = zext i32 %135 to i33
  %137 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %136, i33 1) #10
  %138 = extractvalue { i33, i1 } %137, 1
  %139 = extractvalue { i33, i1 } %137, 0
  %140 = icmp slt i33 %139, 0
  %141 = or i1 %138, %140
  br i1 %141, label %142, label %143, !prof !2

142:                                              ; preds = %133
  tail call void @llvm.trap() #10
  unreachable

143:                                              ; preds = %133
  %144 = trunc i33 %139 to i32
  store i32 %144, i32* %134, align 4
  br label %145

145:                                              ; preds = %143, %128, %121
  %146 = load i32, i32* %5, align 4
  %147 = add i32 %146, 1
  store i32 %147, i32* %5, align 4
  br label %150

148:                                              ; preds = %116
  tail call void @_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.1843"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %118) #10
  %149 = load i32, i32* %5, align 4
  br label %150

150:                                              ; preds = %145, %148
  %151 = phi i32 [ %147, %145 ], [ %149, %148 ]
  %152 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink23performance_entry_names12kLayoutShiftE, align 8
  %153 = load i32, i32* %4, align 8
  %154 = icmp eq i32 %151, %153
  br i1 %154, label %182, label %155, !prof !2

155:                                              ; preds = %150
  %156 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %3, align 8
  %157 = zext i32 %151 to i64
  %158 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %152, i64 0, i32 0, i32 0, i32 0
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %158, align 8
  %160 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %156, i64 %157, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %159, %"class.WTF::StringImpl"** %160, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %159, null
  br i1 %161, label %179, label %162

162:                                              ; preds = %155
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load atomic i32, i32* %163 monotonic, align 4
  %165 = and i32 %164, 2
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %179

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  %170 = zext i32 %169 to i33
  %171 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %170, i33 1) #10
  %172 = extractvalue { i33, i1 } %171, 1
  %173 = extractvalue { i33, i1 } %171, 0
  %174 = icmp slt i33 %173, 0
  %175 = or i1 %172, %174
  br i1 %175, label %176, label %177, !prof !2

176:                                              ; preds = %167
  tail call void @llvm.trap() #10
  unreachable

177:                                              ; preds = %167
  %178 = trunc i33 %173 to i32
  store i32 %178, i32* %168, align 4
  br label %179

179:                                              ; preds = %177, %162, %155
  %180 = load i32, i32* %5, align 4
  %181 = add i32 %180, 1
  store i32 %181, i32* %5, align 4
  br label %184

182:                                              ; preds = %150
  tail call void @_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.1843"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %152) #10
  %183 = load i32, i32* %5, align 4
  br label %184

184:                                              ; preds = %179, %182
  %185 = phi i32 [ %181, %179 ], [ %183, %182 ]
  %186 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink23performance_entry_names9kLongtaskE, align 8
  %187 = load i32, i32* %4, align 8
  %188 = icmp eq i32 %185, %187
  br i1 %188, label %216, label %189, !prof !2

189:                                              ; preds = %184
  %190 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %3, align 8
  %191 = zext i32 %185 to i64
  %192 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %186, i64 0, i32 0, i32 0, i32 0
  %193 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %192, align 8
  %194 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %190, i64 %191, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %193, %"class.WTF::StringImpl"** %194, align 8
  %195 = icmp eq %"class.WTF::StringImpl"* %193, null
  br i1 %195, label %213, label %196

196:                                              ; preds = %189
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = load atomic i32, i32* %197 monotonic, align 4
  %199 = and i32 %198, 2
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %213

201:                                              ; preds = %196
  %202 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 0
  %203 = load i32, i32* %202, align 4
  %204 = zext i32 %203 to i33
  %205 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %204, i33 1) #10
  %206 = extractvalue { i33, i1 } %205, 1
  %207 = extractvalue { i33, i1 } %205, 0
  %208 = icmp slt i33 %207, 0
  %209 = or i1 %206, %208
  br i1 %209, label %210, label %211, !prof !2

210:                                              ; preds = %201
  tail call void @llvm.trap() #10
  unreachable

211:                                              ; preds = %201
  %212 = trunc i33 %207 to i32
  store i32 %212, i32* %202, align 4
  br label %213

213:                                              ; preds = %211, %196, %189
  %214 = load i32, i32* %5, align 4
  %215 = add i32 %214, 1
  store i32 %215, i32* %5, align 4
  br label %217

216:                                              ; preds = %184
  tail call void @_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.1843"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %186) #10
  br label %217

217:                                              ; preds = %216, %213, %2
  %218 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink23performance_entry_names5kMarkE, align 8
  %219 = load i32, i32* %5, align 4
  %220 = load i32, i32* %4, align 8
  %221 = icmp eq i32 %219, %220
  br i1 %221, label %249, label %222, !prof !2

222:                                              ; preds = %217
  %223 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %3, align 8
  %224 = zext i32 %219 to i64
  %225 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %218, i64 0, i32 0, i32 0, i32 0
  %226 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %225, align 8
  %227 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %223, i64 %224, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %226, %"class.WTF::StringImpl"** %227, align 8
  %228 = icmp eq %"class.WTF::StringImpl"* %226, null
  br i1 %228, label %246, label %229

229:                                              ; preds = %222
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %246

234:                                              ; preds = %229
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 0
  %236 = load i32, i32* %235, align 4
  %237 = zext i32 %236 to i33
  %238 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %237, i33 1) #10
  %239 = extractvalue { i33, i1 } %238, 1
  %240 = extractvalue { i33, i1 } %238, 0
  %241 = icmp slt i33 %240, 0
  %242 = or i1 %239, %241
  br i1 %242, label %243, label %244, !prof !2

243:                                              ; preds = %234
  tail call void @llvm.trap() #10
  unreachable

244:                                              ; preds = %234
  %245 = trunc i33 %240 to i32
  store i32 %245, i32* %235, align 4
  br label %246

246:                                              ; preds = %244, %229, %222
  %247 = load i32, i32* %5, align 4
  %248 = add i32 %247, 1
  store i32 %248, i32* %5, align 4
  br label %251

249:                                              ; preds = %217
  tail call void @_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.1843"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %218) #10
  %250 = load i32, i32* %5, align 4
  br label %251

251:                                              ; preds = %246, %249
  %252 = phi i32 [ %248, %246 ], [ %250, %249 ]
  %253 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink23performance_entry_names8kMeasureE, align 8
  %254 = load i32, i32* %4, align 8
  %255 = icmp eq i32 %252, %254
  br i1 %255, label %283, label %256, !prof !2

256:                                              ; preds = %251
  %257 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %3, align 8
  %258 = zext i32 %252 to i64
  %259 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %253, i64 0, i32 0, i32 0, i32 0
  %260 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %259, align 8
  %261 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %257, i64 %258, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %260, %"class.WTF::StringImpl"** %261, align 8
  %262 = icmp eq %"class.WTF::StringImpl"* %260, null
  br i1 %262, label %280, label %263

263:                                              ; preds = %256
  %264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %260, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %265 = load atomic i32, i32* %264 monotonic, align 4
  %266 = and i32 %265, 2
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %268, label %280

268:                                              ; preds = %263
  %269 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %260, i64 0, i32 0
  %270 = load i32, i32* %269, align 4
  %271 = zext i32 %270 to i33
  %272 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %271, i33 1) #10
  %273 = extractvalue { i33, i1 } %272, 1
  %274 = extractvalue { i33, i1 } %272, 0
  %275 = icmp slt i33 %274, 0
  %276 = or i1 %273, %275
  br i1 %276, label %277, label %278, !prof !2

277:                                              ; preds = %268
  tail call void @llvm.trap() #10
  unreachable

278:                                              ; preds = %268
  %279 = trunc i33 %274 to i32
  store i32 %279, i32* %269, align 4
  br label %280

280:                                              ; preds = %278, %263, %256
  %281 = load i32, i32* %5, align 4
  %282 = add i32 %281, 1
  store i32 %282, i32* %5, align 4
  br label %284

283:                                              ; preds = %251
  tail call void @_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.1843"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %253) #10
  br label %284

284:                                              ; preds = %280, %283
  %285 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %8, align 8
  %286 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %285, i64 1
  %287 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %286, align 8
  %288 = tail call zeroext i1 %287(%"class.blink::ExecutionContext"* %7) #10
  br i1 %288, label %289, label %356

289:                                              ; preds = %284
  %290 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink23performance_entry_names11kNavigationE, align 8
  %291 = load i32, i32* %5, align 4
  %292 = load i32, i32* %4, align 8
  %293 = icmp eq i32 %291, %292
  br i1 %293, label %321, label %294, !prof !2

294:                                              ; preds = %289
  %295 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %3, align 8
  %296 = zext i32 %291 to i64
  %297 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %290, i64 0, i32 0, i32 0, i32 0
  %298 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %297, align 8
  %299 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %295, i64 %296, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %298, %"class.WTF::StringImpl"** %299, align 8
  %300 = icmp eq %"class.WTF::StringImpl"* %298, null
  br i1 %300, label %318, label %301

301:                                              ; preds = %294
  %302 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %298, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %303 = load atomic i32, i32* %302 monotonic, align 4
  %304 = and i32 %303, 2
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %306, label %318

306:                                              ; preds = %301
  %307 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %298, i64 0, i32 0
  %308 = load i32, i32* %307, align 4
  %309 = zext i32 %308 to i33
  %310 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %309, i33 1) #10
  %311 = extractvalue { i33, i1 } %310, 1
  %312 = extractvalue { i33, i1 } %310, 0
  %313 = icmp slt i33 %312, 0
  %314 = or i1 %311, %313
  br i1 %314, label %315, label %316, !prof !2

315:                                              ; preds = %306
  tail call void @llvm.trap() #10
  unreachable

316:                                              ; preds = %306
  %317 = trunc i33 %312 to i32
  store i32 %317, i32* %307, align 4
  br label %318

318:                                              ; preds = %316, %301, %294
  %319 = load i32, i32* %5, align 4
  %320 = add i32 %319, 1
  store i32 %320, i32* %5, align 4
  br label %323

321:                                              ; preds = %289
  tail call void @_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.1843"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %290) #10
  %322 = load i32, i32* %5, align 4
  br label %323

323:                                              ; preds = %318, %321
  %324 = phi i32 [ %320, %318 ], [ %322, %321 ]
  %325 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink23performance_entry_names6kPaintE, align 8
  %326 = load i32, i32* %4, align 8
  %327 = icmp eq i32 %324, %326
  br i1 %327, label %355, label %328, !prof !2

328:                                              ; preds = %323
  %329 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %3, align 8
  %330 = zext i32 %324 to i64
  %331 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %325, i64 0, i32 0, i32 0, i32 0
  %332 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %331, align 8
  %333 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %329, i64 %330, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %332, %"class.WTF::StringImpl"** %333, align 8
  %334 = icmp eq %"class.WTF::StringImpl"* %332, null
  br i1 %334, label %352, label %335

335:                                              ; preds = %328
  %336 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %332, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %337 = load atomic i32, i32* %336 monotonic, align 4
  %338 = and i32 %337, 2
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %340, label %352

340:                                              ; preds = %335
  %341 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %332, i64 0, i32 0
  %342 = load i32, i32* %341, align 4
  %343 = zext i32 %342 to i33
  %344 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %343, i33 1) #10
  %345 = extractvalue { i33, i1 } %344, 1
  %346 = extractvalue { i33, i1 } %344, 0
  %347 = icmp slt i33 %346, 0
  %348 = or i1 %345, %347
  br i1 %348, label %349, label %350, !prof !2

349:                                              ; preds = %340
  tail call void @llvm.trap() #10
  unreachable

350:                                              ; preds = %340
  %351 = trunc i33 %346 to i32
  store i32 %351, i32* %341, align 4
  br label %352

352:                                              ; preds = %350, %335, %328
  %353 = load i32, i32* %5, align 4
  %354 = add i32 %353, 1
  store i32 %354, i32* %5, align 4
  br label %356

355:                                              ; preds = %323
  tail call void @_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.1843"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %325) #10
  br label %356

356:                                              ; preds = %355, %352, %284
  %357 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink23performance_entry_names9kResourceE, align 8
  %358 = load i32, i32* %5, align 4
  %359 = load i32, i32* %4, align 8
  %360 = icmp eq i32 %358, %359
  br i1 %360, label %388, label %361, !prof !2

361:                                              ; preds = %356
  %362 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %3, align 8
  %363 = zext i32 %358 to i64
  %364 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %357, i64 0, i32 0, i32 0, i32 0
  %365 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %364, align 8
  %366 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %362, i64 %363, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %365, %"class.WTF::StringImpl"** %366, align 8
  %367 = icmp eq %"class.WTF::StringImpl"* %365, null
  br i1 %367, label %385, label %368

368:                                              ; preds = %361
  %369 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %365, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %370 = load atomic i32, i32* %369 monotonic, align 4
  %371 = and i32 %370, 2
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %373, label %385

373:                                              ; preds = %368
  %374 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %365, i64 0, i32 0
  %375 = load i32, i32* %374, align 4
  %376 = zext i32 %375 to i33
  %377 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %376, i33 1) #10
  %378 = extractvalue { i33, i1 } %377, 1
  %379 = extractvalue { i33, i1 } %377, 0
  %380 = icmp slt i33 %379, 0
  %381 = or i1 %378, %380
  br i1 %381, label %382, label %383, !prof !2

382:                                              ; preds = %373
  tail call void @llvm.trap() #10
  unreachable

383:                                              ; preds = %373
  %384 = trunc i33 %379 to i32
  store i32 %384, i32* %374, align 4
  br label %385

385:                                              ; preds = %383, %368, %361
  %386 = load i32, i32* %5, align 4
  %387 = add i32 %386, 1
  store i32 %387, i32* %5, align 4
  br label %389

388:                                              ; preds = %356
  tail call void @_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.1843"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %357) #10
  br label %389

389:                                              ; preds = %385, %388
  %390 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_visibility_state_entry_enabled_E, align 1, !range !3
  %391 = icmp eq i8 %390, 0
  br i1 %391, label %430, label %392

392:                                              ; preds = %389
  %393 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %8, align 8
  %394 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %393, i64 1
  %395 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %394, align 8
  %396 = tail call zeroext i1 %395(%"class.blink::ExecutionContext"* %7) #10
  br i1 %396, label %397, label %430

397:                                              ; preds = %392
  %398 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink23performance_entry_names16kVisibilityStateE, align 8
  %399 = load i32, i32* %5, align 4
  %400 = load i32, i32* %4, align 8
  %401 = icmp eq i32 %399, %400
  br i1 %401, label %429, label %402, !prof !2

402:                                              ; preds = %397
  %403 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %3, align 8
  %404 = zext i32 %399 to i64
  %405 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %398, i64 0, i32 0, i32 0, i32 0
  %406 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %405, align 8
  %407 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %403, i64 %404, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %406, %"class.WTF::StringImpl"** %407, align 8
  %408 = icmp eq %"class.WTF::StringImpl"* %406, null
  br i1 %408, label %426, label %409

409:                                              ; preds = %402
  %410 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %406, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %411 = load atomic i32, i32* %410 monotonic, align 4
  %412 = and i32 %411, 2
  %413 = icmp eq i32 %412, 0
  br i1 %413, label %414, label %426

414:                                              ; preds = %409
  %415 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %406, i64 0, i32 0
  %416 = load i32, i32* %415, align 4
  %417 = zext i32 %416 to i33
  %418 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %417, i33 1) #10
  %419 = extractvalue { i33, i1 } %418, 1
  %420 = extractvalue { i33, i1 } %418, 0
  %421 = icmp slt i33 %420, 0
  %422 = or i1 %419, %421
  br i1 %422, label %423, label %424, !prof !2

423:                                              ; preds = %414
  tail call void @llvm.trap() #10
  unreachable

424:                                              ; preds = %414
  %425 = trunc i33 %420 to i32
  store i32 %425, i32* %415, align 4
  br label %426

426:                                              ; preds = %424, %409, %402
  %427 = load i32, i32* %5, align 4
  %428 = add i32 %427, 1
  store i32 %428, i32* %5, align 4
  br label %430

429:                                              ; preds = %397
  tail call void @_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.1843"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %398) #10
  br label %430

430:                                              ; preds = %389, %429, %426, %392
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PerformanceObserverC2EPNS_16ExecutionContextEPNS_11PerformanceEPNS_29V8PerformanceObserverCallbackE(%"class.blink::PerformanceObserver"*, %"class.blink::ExecutionContext"*, %"class.blink::Performance"*, %"class.blink::V8PerformanceObserverCallback"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink15ScriptWrappableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %6, align 8
  %7 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink21ActiveScriptWrappableINS_19PerformanceObserverEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 2
  %9 = bitcast %"class.blink::ExecutionContextLifecycleStateObserver.base"* %8 to %"class.blink::ExecutionContextLifecycleStateObserver"*
  tail call void @_ZN5blink38ExecutionContextLifecycleStateObserverC2EPNS_16ExecutionContextE(%"class.blink::ExecutionContextLifecycleStateObserver"* %9, %"class.blink::ExecutionContext"* %1) #10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [7 x i8*], [9 x i8*] }, { [13 x i8*], [7 x i8*], [9 x i8*] }* @_ZTVN5blink19PerformanceObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %10 = bitcast i32 (...)*** %7 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [7 x i8*], [9 x i8*] }, { [13 x i8*], [7 x i8*], [9 x i8*] }* @_ZTVN5blink19PerformanceObserverE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [7 x i8*], [9 x i8*] }, { [13 x i8*], [7 x i8*], [9 x i8*] }* @_ZTVN5blink19PerformanceObserverE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %10, align 8
  %11 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::V8PerformanceObserverCallback"* %3, %"class.blink::V8PerformanceObserverCallback"** %11, align 8
  %12 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 4, i32 0, i32 0
  store %"class.blink::Performance"* %2, %"class.blink::Performance"** %12, align 8
  %13 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 5
  %14 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 7
  %15 = bitcast %"class.blink::HeapVector"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 20, i1 false)
  store i32 2, i32* %14, align 4
  %16 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 8
  store i8 0, i8* %16, align 8
  %17 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 9
  store double 1.040000e+02, double* %17, align 8
  tail call void @_ZN5blink38ExecutionContextLifecycleStateObserver19UpdateStateIfNeededEv(%"class.blink::ExecutionContextLifecycleStateObserver"* %9) #10
  ret void
}

declare void @_ZN5blink38ExecutionContextLifecycleStateObserverC2EPNS_16ExecutionContextE(%"class.blink::ExecutionContextLifecycleStateObserver"*, %"class.blink::ExecutionContext"*) unnamed_addr #2

declare void @_ZN5blink38ExecutionContextLifecycleStateObserver19UpdateStateIfNeededEv(%"class.blink::ExecutionContextLifecycleStateObserver"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PerformanceObserver7observeEPKNS_23PerformanceObserverInitERNS_14ExceptionStateE(%"class.blink::PerformanceObserver"*, %"class.blink::PerformanceObserverInit"* nocapture readonly, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::StringAppend", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::AtomicString", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::StringAppend", align 8
  %12 = alloca %"class.blink::HeapVector", align 8
  %13 = alloca %"class.WTF::AtomicString", align 8
  %14 = alloca double, align 8
  %15 = alloca double, align 8
  %16 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 4, i32 0, i32 0
  %17 = load %"class.blink::Performance"*, %"class.blink::Performance"** %16, align 8
  %18 = icmp eq %"class.blink::Performance"* %17, null
  br i1 %18, label %19, label %20

19:                                               ; preds = %3
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.2, i64 0, i64 0)) #10
  br label %753

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.blink::PerformanceObserverInit", %"class.blink::PerformanceObserverInit"* %1, i64 0, i32 3
  %22 = load i8, i8* %21, align 2, !range !3
  %23 = icmp eq i8 %22, 0
  %24 = getelementptr inbounds %"class.blink::PerformanceObserverInit", %"class.blink::PerformanceObserverInit"* %1, i64 0, i32 7, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp ne %"class.WTF::StringImpl"* %25, null
  br i1 %23, label %325, label %27

27:                                               ; preds = %20
  br i1 %26, label %28, label %42

28:                                               ; preds = %27
  %29 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 2
  %30 = bitcast %"class.blink::ExecutionContextLifecycleStateObserver.base"* %29 to %"class.blink::ExecutionContextLifecycleObserver"*
  %31 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %30) #10
  %32 = icmp eq %"class.blink::ExecutionContext"* %31, null
  %33 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %31, i64 0, i32 3
  %34 = icmp eq %"class.blink::UseCounter"* %33, null
  %35 = or i1 %32, %34
  br i1 %35, label %41, label %36

36:                                               ; preds = %28
  %37 = bitcast %"class.blink::UseCounter"* %33 to void (%"class.blink::UseCounter"*, i32)***
  %38 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %38, i64 3
  %40 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %39, align 8
  tail call void %40(%"class.blink::UseCounter"* nonnull %33, i32 3232) #10
  br label %41

41:                                               ; preds = %28, %36
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.3, i64 0, i64 0)) #10
  br label %753

42:                                               ; preds = %27
  %43 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 7
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %47

46:                                               ; preds = %42
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 13, i8* getelementptr inbounds ([113 x i8], [113 x i8]* @.str.4, i64 0, i64 0)) #10
  br label %753

47:                                               ; preds = %42
  store i32 0, i32* %43, align 4
  %48 = getelementptr inbounds %"class.blink::PerformanceObserverInit", %"class.blink::PerformanceObserverInit"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::PerformanceObserverInit", %"class.blink::PerformanceObserverInit"* %1, i64 0, i32 6, i32 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 %52
  %54 = icmp eq i32 %51, 0
  br i1 %54, label %753, label %55

55:                                               ; preds = %47
  %56 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  %57 = bitcast %"class.WTF::AtomicString"* %5 to i64*
  %58 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %59 = bitcast %"class.WTF::String"* %6 to i8*
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %61 = bitcast %"class.WTF::StringAppend"* %7 to i8*
  %62 = bitcast %"class.WTF::StringAppend"* %7 to i64*
  %63 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %64 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 1
  %65 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 2
  %66 = bitcast %"class.blink::ExecutionContextLifecycleStateObserver.base"* %65 to %"class.blink::ExecutionContextLifecycleObserver"*
  br label %69

67:                                               ; preds = %267
  %68 = icmp eq i32 %268, 0
  br i1 %68, label %753, label %271

69:                                               ; preds = %55, %267
  %70 = phi %"class.WTF::String"* [ %49, %55 ], [ %269, %267 ]
  %71 = phi i32 [ 0, %55 ], [ %268, %267 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  %72 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %70, i64 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %98, label %75

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 acquire, align 4
  %78 = and i32 %77, 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %96, label %80

80:                                               ; preds = %75
  %81 = load atomic i32, i32* %76 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %98

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = zext i32 %86 to i33
  %88 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %87, i33 1) #10
  %89 = extractvalue { i33, i1 } %88, 1
  %90 = extractvalue { i33, i1 } %88, 0
  %91 = icmp slt i33 %90, 0
  %92 = or i1 %89, %91
  br i1 %92, label %93, label %94, !prof !2

93:                                               ; preds = %84
  call void @llvm.trap() #10
  unreachable

94:                                               ; preds = %84
  %95 = trunc i33 %90 to i32
  store i32 %95, i32* %85, align 4
  br label %98

96:                                               ; preds = %75
  %97 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %73) #10
  br label %98

98:                                               ; preds = %69, %80, %94, %96
  %99 = phi %"class.WTF::StringImpl"* [ %97, %96 ], [ %73, %80 ], [ %73, %94 ], [ null, %69 ]
  %100 = ptrtoint %"class.WTF::StringImpl"* %99 to i64
  store i64 %100, i64* %57, align 8
  %101 = call i32 @_ZN5blink16PerformanceEntry15ToEntryTypeEnumERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* nonnull dereferenceable(8) %5) #10
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %117, label %104

104:                                              ; preds = %98
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %104
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %104
  %114 = phi i32 [ %112, %111 ], [ %110, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #10
  br label %117

117:                                              ; preds = %98, %113, %116
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  %118 = icmp eq i32 %101, 0
  br i1 %118, label %119, label %267

119:                                              ; preds = %117
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #10
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %60, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #10
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %121 = icmp eq %"class.WTF::StringImpl"* %120, null
  br i1 %121, label %195, label %122

122:                                              ; preds = %119
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = and i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  br i1 %126, label %129, label %139

129:                                              ; preds = %122
  %130 = zext i32 %128 to i33
  %131 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %130, i33 1) #10
  %132 = extractvalue { i33, i1 } %131, 1
  %133 = extractvalue { i33, i1 } %131, 0
  %134 = icmp slt i33 %133, 0
  %135 = or i1 %132, %134
  br i1 %135, label %136, label %137, !prof !2

136:                                              ; preds = %129
  call void @llvm.trap() #10
  unreachable

137:                                              ; preds = %129
  %138 = trunc i33 %133 to i32
  store i32 %138, i32* %127, align 4
  br label %139

139:                                              ; preds = %137, %122
  %140 = phi i32 [ %138, %137 ], [ %128, %122 ]
  %141 = load atomic i32, i32* %123 monotonic, align 4
  %142 = and i32 %141, 2
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %154

144:                                              ; preds = %139
  %145 = zext i32 %140 to i33
  %146 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %145, i33 1) #10
  %147 = extractvalue { i33, i1 } %146, 1
  %148 = extractvalue { i33, i1 } %146, 0
  %149 = icmp slt i33 %148, 0
  %150 = or i1 %147, %149
  br i1 %150, label %151, label %152, !prof !2

151:                                              ; preds = %144
  call void @llvm.trap() #10
  unreachable

152:                                              ; preds = %144
  %153 = trunc i33 %148 to i32
  store i32 %153, i32* %127, align 4
  br label %154

154:                                              ; preds = %152, %139
  %155 = phi i32 [ %153, %152 ], [ %140, %139 ]
  %156 = load atomic i32, i32* %123 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %161

159:                                              ; preds = %154
  %160 = add i32 %155, -1
  store i32 %160, i32* %127, align 4
  br label %161

161:                                              ; preds = %159, %154
  %162 = phi i32 [ %160, %159 ], [ %155, %154 ]
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %165

164:                                              ; preds = %161
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %120) #10
  br label %165

165:                                              ; preds = %161, %164
  %166 = load atomic i32, i32* %123 monotonic, align 4, !noalias !4
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = load i32, i32* %127, align 4
  br i1 %168, label %170, label %180

170:                                              ; preds = %165
  %171 = zext i32 %169 to i33
  %172 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %171, i33 1) #10
  %173 = extractvalue { i33, i1 } %172, 1
  %174 = extractvalue { i33, i1 } %172, 0
  %175 = icmp slt i33 %174, 0
  %176 = or i1 %173, %175
  br i1 %176, label %177, label %178, !prof !2

177:                                              ; preds = %170
  call void @llvm.trap() #10, !noalias !4
  unreachable

178:                                              ; preds = %170
  %179 = trunc i33 %174 to i32
  store i32 %179, i32* %127, align 4, !noalias !4
  br label %180

180:                                              ; preds = %165, %178
  %181 = phi i32 [ %179, %178 ], [ %169, %165 ]
  store i64 ptrtoint ([17 x i8]* @.str.5 to i64), i64* %62, align 8, !alias.scope !4
  store %"class.WTF::StringImpl"* %120, %"class.WTF::StringImpl"** %63, align 8, !alias.scope !4
  %182 = load atomic i32, i32* %123 monotonic, align 4, !noalias !4
  %183 = and i32 %182, 2
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %196

185:                                              ; preds = %180
  %186 = zext i32 %181 to i33
  %187 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %186, i33 1) #10
  %188 = extractvalue { i33, i1 } %187, 1
  %189 = extractvalue { i33, i1 } %187, 0
  %190 = icmp slt i33 %189, 0
  %191 = or i1 %188, %190
  br i1 %191, label %192, label %193, !prof !2

192:                                              ; preds = %185
  call void @llvm.trap() #10, !noalias !4
  unreachable

193:                                              ; preds = %185
  %194 = trunc i33 %189 to i32
  store i32 %194, i32* %127, align 4, !noalias !4
  br label %196

195:                                              ; preds = %119
  store i64 ptrtoint ([17 x i8]* @.str.5 to i64), i64* %62, align 8, !alias.scope !4
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %63, align 8, !alias.scope !4
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.6, i64 0, i64 0), i8** %64, align 8, !alias.scope !4
  br label %207

196:                                              ; preds = %193, %180
  %197 = phi i32 [ %194, %193 ], [ %181, %180 ]
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.6, i64 0, i64 0), i8** %64, align 8, !alias.scope !4
  %198 = load atomic i32, i32* %123 monotonic, align 4, !noalias !4
  %199 = and i32 %198, 2
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %203

201:                                              ; preds = %196
  %202 = add i32 %197, -1
  store i32 %202, i32* %127, align 4, !noalias !4
  br label %203

203:                                              ; preds = %201, %196
  %204 = phi i32 [ %202, %201 ], [ %197, %196 ]
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %203
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %120) #10, !noalias !4
  br label %207

207:                                              ; preds = %195, %203, %206
  %208 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %7)
  store %"class.WTF::StringImpl"* %208, %"class.WTF::StringImpl"** %60, align 8
  %209 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %210 = icmp eq %"class.WTF::StringImpl"* %209, null
  br i1 %210, label %224, label %211

211:                                              ; preds = %207
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = load atomic i32, i32* %212 monotonic, align 4
  %214 = and i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 0
  %217 = load i32, i32* %216, align 4
  br i1 %215, label %218, label %220

218:                                              ; preds = %211
  %219 = add i32 %217, -1
  store i32 %219, i32* %216, align 4
  br label %220

220:                                              ; preds = %218, %211
  %221 = phi i32 [ %219, %218 ], [ %217, %211 ]
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %224

223:                                              ; preds = %220
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %209) #10
  br label %224

224:                                              ; preds = %207, %220, %223
  br i1 %121, label %238, label %225

225:                                              ; preds = %224
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %227 = load atomic i32, i32* %226 monotonic, align 4
  %228 = and i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 0
  %231 = load i32, i32* %230, align 4
  br i1 %229, label %232, label %234

232:                                              ; preds = %225
  %233 = add i32 %231, -1
  store i32 %233, i32* %230, align 4
  br label %234

234:                                              ; preds = %232, %225
  %235 = phi i32 [ %233, %232 ], [ %231, %225 ]
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %237, label %238

237:                                              ; preds = %234
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %120) #10
  br label %238

238:                                              ; preds = %224, %234, %237
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #10
  %239 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %66) #10
  %240 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #10
  %241 = bitcast i8* %240 to %"class.blink::ConsoleMessage"*
  %242 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #10
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %241, i32 1, i32 2, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.blink::SourceLocation"* %242) #10
  %243 = getelementptr inbounds i8, i8* %240, i64 -4
  %244 = bitcast i8* %243 to i16*
  %245 = load atomic i16, i16* %244 monotonic, align 2
  %246 = or i16 %245, 1
  store atomic i16 %246, i16* %244 release, align 2
  %247 = bitcast %"class.blink::ExecutionContext"* %239 to void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)***
  %248 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)**, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*** %247, align 8
  %249 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %248, i64 52
  %250 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %249, align 8
  call void %250(%"class.blink::ExecutionContext"* %239, %"class.blink::ConsoleMessage"* %241, i1 zeroext false) #10
  %251 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %252 = icmp eq %"class.WTF::StringImpl"* %251, null
  br i1 %252, label %266, label %253

253:                                              ; preds = %238
  %254 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %251, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %255 = load atomic i32, i32* %254 monotonic, align 4
  %256 = and i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %251, i64 0, i32 0
  %259 = load i32, i32* %258, align 4
  br i1 %257, label %260, label %262

260:                                              ; preds = %253
  %261 = add i32 %259, -1
  store i32 %261, i32* %258, align 4
  br label %262

262:                                              ; preds = %260, %253
  %263 = phi i32 [ %261, %260 ], [ %259, %253 ]
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %265, label %266

265:                                              ; preds = %262
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %251) #10
  br label %266

266:                                              ; preds = %238, %262, %265
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #10
  br label %267

267:                                              ; preds = %266, %117
  %268 = or i32 %101, %71
  %269 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %70, i64 1
  %270 = icmp eq %"class.WTF::String"* %269, %53
  br i1 %270, label %67, label %69

271:                                              ; preds = %67
  %272 = getelementptr inbounds %"class.blink::PerformanceObserverInit", %"class.blink::PerformanceObserverInit"* %1, i64 0, i32 4
  %273 = load i8, i8* %272, align 1, !range !3
  %274 = icmp eq i8 %273, 0
  br i1 %274, label %275, label %279

275:                                              ; preds = %271
  %276 = getelementptr inbounds %"class.blink::PerformanceObserverInit", %"class.blink::PerformanceObserverInit"* %1, i64 0, i32 2
  %277 = load i8, i8* %276, align 1, !range !3
  %278 = icmp eq i8 %277, 0
  br i1 %278, label %323, label %279

279:                                              ; preds = %275, %271
  %280 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 2
  %281 = bitcast %"class.blink::ExecutionContextLifecycleStateObserver.base"* %280 to %"class.blink::ExecutionContextLifecycleObserver"*
  %282 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %281) #10
  %283 = icmp eq %"class.blink::ExecutionContext"* %282, null
  %284 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %282, i64 0, i32 3
  %285 = icmp eq %"class.blink::UseCounter"* %284, null
  %286 = or i1 %283, %285
  br i1 %286, label %292, label %287

287:                                              ; preds = %279
  %288 = bitcast %"class.blink::UseCounter"* %284 to void (%"class.blink::UseCounter"*, i32)***
  %289 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %288, align 8
  %290 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %289, i64 3
  %291 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %290, align 8
  call void %291(%"class.blink::UseCounter"* nonnull %284, i32 3231) #10
  br label %292

292:                                              ; preds = %279, %287
  %293 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %293) #10
  %294 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %294, align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.7, i64 0, i64 0), i64 84) #10
  %295 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %281) #10
  %296 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #10
  %297 = bitcast i8* %296 to %"class.blink::ConsoleMessage"*
  %298 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #10
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %297, i32 1, i32 2, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.blink::SourceLocation"* %298) #10
  %299 = getelementptr inbounds i8, i8* %296, i64 -4
  %300 = bitcast i8* %299 to i16*
  %301 = load atomic i16, i16* %300 monotonic, align 2
  %302 = or i16 %301, 1
  store atomic i16 %302, i16* %300 release, align 2
  %303 = bitcast %"class.blink::ExecutionContext"* %295 to void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)***
  %304 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)**, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*** %303, align 8
  %305 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %304, i64 52
  %306 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %305, align 8
  call void %306(%"class.blink::ExecutionContext"* %295, %"class.blink::ConsoleMessage"* %297, i1 zeroext false) #10
  %307 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %294, align 8
  %308 = icmp eq %"class.WTF::StringImpl"* %307, null
  br i1 %308, label %322, label %309

309:                                              ; preds = %292
  %310 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %307, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %311 = load atomic i32, i32* %310 monotonic, align 4
  %312 = and i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %307, i64 0, i32 0
  %315 = load i32, i32* %314, align 4
  br i1 %313, label %316, label %318

316:                                              ; preds = %309
  %317 = add i32 %315, -1
  store i32 %317, i32* %314, align 4
  br label %318

318:                                              ; preds = %316, %309
  %319 = phi i32 [ %317, %316 ], [ %315, %309 ]
  %320 = icmp eq i32 %319, 0
  br i1 %320, label %321, label %322

321:                                              ; preds = %318
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %307) #10
  br label %322

322:                                              ; preds = %292, %318, %321
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %293) #10
  br label %323

323:                                              ; preds = %275, %322
  %324 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 6
  store i32 %268, i32* %324, align 8
  br label %643

325:                                              ; preds = %20
  br i1 %26, label %340, label %326

326:                                              ; preds = %325
  %327 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 2
  %328 = bitcast %"class.blink::ExecutionContextLifecycleStateObserver.base"* %327 to %"class.blink::ExecutionContextLifecycleObserver"*
  %329 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %328) #10
  %330 = icmp eq %"class.blink::ExecutionContext"* %329, null
  %331 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %329, i64 0, i32 3
  %332 = icmp eq %"class.blink::UseCounter"* %331, null
  %333 = or i1 %330, %332
  br i1 %333, label %339, label %334

334:                                              ; preds = %326
  %335 = bitcast %"class.blink::UseCounter"* %331 to void (%"class.blink::UseCounter"*, i32)***
  %336 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %335, align 8
  %337 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %336, i64 3
  %338 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %337, align 8
  tail call void %338(%"class.blink::UseCounter"* nonnull %331, i32 3232) #10
  br label %339

339:                                              ; preds = %326, %334
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.8, i64 0, i64 0)) #10
  br label %753

340:                                              ; preds = %325
  %341 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 7
  %342 = load i32, i32* %341, align 4
  %343 = icmp eq i32 %342, 0
  br i1 %343, label %344, label %345

344:                                              ; preds = %340
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 13, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.9, i64 0, i64 0)) #10
  br label %753

345:                                              ; preds = %340
  store i32 1, i32* %341, align 4
  %346 = bitcast %"class.WTF::AtomicString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %346) #10
  %347 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %348 = icmp eq %"class.WTF::StringImpl"* %347, null
  br i1 %348, label %372, label %349

349:                                              ; preds = %345
  %350 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %347, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %351 = load atomic i32, i32* %350 acquire, align 4
  %352 = and i32 %351, 4
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %370, label %354

354:                                              ; preds = %349
  %355 = load atomic i32, i32* %350 monotonic, align 4
  %356 = and i32 %355, 2
  %357 = icmp eq i32 %356, 0
  br i1 %357, label %358, label %372

358:                                              ; preds = %354
  %359 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %347, i64 0, i32 0
  %360 = load i32, i32* %359, align 4
  %361 = zext i32 %360 to i33
  %362 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %361, i33 1) #10
  %363 = extractvalue { i33, i1 } %362, 1
  %364 = extractvalue { i33, i1 } %362, 0
  %365 = icmp slt i33 %364, 0
  %366 = or i1 %363, %365
  br i1 %366, label %367, label %368, !prof !2

367:                                              ; preds = %358
  tail call void @llvm.trap() #10
  unreachable

368:                                              ; preds = %358
  %369 = trunc i33 %364 to i32
  store i32 %369, i32* %359, align 4
  br label %372

370:                                              ; preds = %349
  %371 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %347) #10
  br label %372

372:                                              ; preds = %345, %354, %368, %370
  %373 = phi %"class.WTF::StringImpl"* [ %371, %370 ], [ %347, %354 ], [ %347, %368 ], [ null, %345 ]
  %374 = ptrtoint %"class.WTF::StringImpl"* %373 to i64
  %375 = bitcast %"class.WTF::AtomicString"* %9 to i64*
  store i64 %374, i64* %375, align 8
  %376 = call i32 @_ZN5blink16PerformanceEntry15ToEntryTypeEnumERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* nonnull dereferenceable(8) %9) #10
  %377 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %378 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %377, align 8
  %379 = icmp eq %"class.WTF::StringImpl"* %378, null
  br i1 %379, label %393, label %380

380:                                              ; preds = %372
  %381 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %378, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %382 = load atomic i32, i32* %381 monotonic, align 4
  %383 = and i32 %382, 2
  %384 = icmp eq i32 %383, 0
  %385 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %378, i64 0, i32 0
  %386 = load i32, i32* %385, align 4
  br i1 %384, label %387, label %389

387:                                              ; preds = %380
  %388 = add i32 %386, -1
  store i32 %388, i32* %385, align 4
  br label %389

389:                                              ; preds = %387, %380
  %390 = phi i32 [ %388, %387 ], [ %386, %380 ]
  %391 = icmp eq i32 %390, 0
  br i1 %391, label %392, label %393

392:                                              ; preds = %389
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %378) #10
  br label %393

393:                                              ; preds = %372, %389, %392
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %346) #10
  %394 = icmp eq i32 %376, 0
  br i1 %394, label %395, label %554

395:                                              ; preds = %393
  %396 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %396) #10
  %397 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %397, align 8
  %398 = bitcast %"class.WTF::StringAppend"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %398) #10
  %399 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %400 = icmp eq %"class.WTF::StringImpl"* %399, null
  br i1 %400, label %476, label %401

401:                                              ; preds = %395
  %402 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %399, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %403 = load atomic i32, i32* %402 monotonic, align 4
  %404 = and i32 %403, 2
  %405 = icmp eq i32 %404, 0
  %406 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %399, i64 0, i32 0
  %407 = load i32, i32* %406, align 4
  br i1 %405, label %408, label %418

408:                                              ; preds = %401
  %409 = zext i32 %407 to i33
  %410 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %409, i33 1) #10
  %411 = extractvalue { i33, i1 } %410, 1
  %412 = extractvalue { i33, i1 } %410, 0
  %413 = icmp slt i33 %412, 0
  %414 = or i1 %411, %413
  br i1 %414, label %415, label %416, !prof !2

415:                                              ; preds = %408
  call void @llvm.trap() #10
  unreachable

416:                                              ; preds = %408
  %417 = trunc i33 %412 to i32
  store i32 %417, i32* %406, align 4
  br label %418

418:                                              ; preds = %416, %401
  %419 = phi i32 [ %417, %416 ], [ %407, %401 ]
  %420 = load atomic i32, i32* %402 monotonic, align 4
  %421 = and i32 %420, 2
  %422 = icmp eq i32 %421, 0
  br i1 %422, label %423, label %433

423:                                              ; preds = %418
  %424 = zext i32 %419 to i33
  %425 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %424, i33 1) #10
  %426 = extractvalue { i33, i1 } %425, 1
  %427 = extractvalue { i33, i1 } %425, 0
  %428 = icmp slt i33 %427, 0
  %429 = or i1 %426, %428
  br i1 %429, label %430, label %431, !prof !2

430:                                              ; preds = %423
  call void @llvm.trap() #10
  unreachable

431:                                              ; preds = %423
  %432 = trunc i33 %427 to i32
  store i32 %432, i32* %406, align 4
  br label %433

433:                                              ; preds = %431, %418
  %434 = phi i32 [ %432, %431 ], [ %419, %418 ]
  %435 = load atomic i32, i32* %402 monotonic, align 4
  %436 = and i32 %435, 2
  %437 = icmp eq i32 %436, 0
  br i1 %437, label %438, label %440

438:                                              ; preds = %433
  %439 = add i32 %434, -1
  store i32 %439, i32* %406, align 4
  br label %440

440:                                              ; preds = %438, %433
  %441 = phi i32 [ %439, %438 ], [ %434, %433 ]
  %442 = icmp eq i32 %441, 0
  br i1 %442, label %443, label %444

443:                                              ; preds = %440
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %399) #10
  br label %444

444:                                              ; preds = %440, %443
  %445 = load atomic i32, i32* %402 monotonic, align 4, !noalias !7
  %446 = and i32 %445, 2
  %447 = icmp eq i32 %446, 0
  %448 = load i32, i32* %406, align 4
  br i1 %447, label %449, label %459

449:                                              ; preds = %444
  %450 = zext i32 %448 to i33
  %451 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %450, i33 1) #10
  %452 = extractvalue { i33, i1 } %451, 1
  %453 = extractvalue { i33, i1 } %451, 0
  %454 = icmp slt i33 %453, 0
  %455 = or i1 %452, %454
  br i1 %455, label %456, label %457, !prof !2

456:                                              ; preds = %449
  call void @llvm.trap() #10, !noalias !7
  unreachable

457:                                              ; preds = %449
  %458 = trunc i33 %453 to i32
  store i32 %458, i32* %406, align 4, !noalias !7
  br label %459

459:                                              ; preds = %444, %457
  %460 = phi i32 [ %458, %457 ], [ %448, %444 ]
  %461 = bitcast %"class.WTF::StringAppend"* %11 to i64*
  store i64 ptrtoint ([17 x i8]* @.str.5 to i64), i64* %461, align 8, !alias.scope !7
  %462 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %399, %"class.WTF::StringImpl"** %462, align 8, !alias.scope !7
  %463 = load atomic i32, i32* %402 monotonic, align 4, !noalias !7
  %464 = and i32 %463, 2
  %465 = icmp eq i32 %464, 0
  br i1 %465, label %466, label %480

466:                                              ; preds = %459
  %467 = zext i32 %460 to i33
  %468 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %467, i33 1) #10
  %469 = extractvalue { i33, i1 } %468, 1
  %470 = extractvalue { i33, i1 } %468, 0
  %471 = icmp slt i33 %470, 0
  %472 = or i1 %469, %471
  br i1 %472, label %473, label %474, !prof !2

473:                                              ; preds = %466
  call void @llvm.trap() #10, !noalias !7
  unreachable

474:                                              ; preds = %466
  %475 = trunc i33 %470 to i32
  store i32 %475, i32* %406, align 4, !noalias !7
  br label %480

476:                                              ; preds = %395
  %477 = bitcast %"class.WTF::StringAppend"* %11 to i64*
  store i64 ptrtoint ([17 x i8]* @.str.5 to i64), i64* %477, align 8, !alias.scope !7
  %478 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %478, align 8, !alias.scope !7
  %479 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.6, i64 0, i64 0), i8** %479, align 8, !alias.scope !7
  br label %492

480:                                              ; preds = %474, %459
  %481 = phi i32 [ %475, %474 ], [ %460, %459 ]
  %482 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.6, i64 0, i64 0), i8** %482, align 8, !alias.scope !7
  %483 = load atomic i32, i32* %402 monotonic, align 4, !noalias !7
  %484 = and i32 %483, 2
  %485 = icmp eq i32 %484, 0
  br i1 %485, label %486, label %488

486:                                              ; preds = %480
  %487 = add i32 %481, -1
  store i32 %487, i32* %406, align 4, !noalias !7
  br label %488

488:                                              ; preds = %486, %480
  %489 = phi i32 [ %487, %486 ], [ %481, %480 ]
  %490 = icmp eq i32 %489, 0
  br i1 %490, label %491, label %492

491:                                              ; preds = %488
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %399) #10, !noalias !7
  br label %492

492:                                              ; preds = %476, %488, %491
  %493 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %11)
  store %"class.WTF::StringImpl"* %493, %"class.WTF::StringImpl"** %397, align 8
  %494 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %495 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %494, align 8
  %496 = icmp eq %"class.WTF::StringImpl"* %495, null
  br i1 %496, label %510, label %497

497:                                              ; preds = %492
  %498 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %495, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %499 = load atomic i32, i32* %498 monotonic, align 4
  %500 = and i32 %499, 2
  %501 = icmp eq i32 %500, 0
  %502 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %495, i64 0, i32 0
  %503 = load i32, i32* %502, align 4
  br i1 %501, label %504, label %506

504:                                              ; preds = %497
  %505 = add i32 %503, -1
  store i32 %505, i32* %502, align 4
  br label %506

506:                                              ; preds = %504, %497
  %507 = phi i32 [ %505, %504 ], [ %503, %497 ]
  %508 = icmp eq i32 %507, 0
  br i1 %508, label %509, label %510

509:                                              ; preds = %506
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %495) #10
  br label %510

510:                                              ; preds = %492, %506, %509
  br i1 %400, label %524, label %511

511:                                              ; preds = %510
  %512 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %399, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %513 = load atomic i32, i32* %512 monotonic, align 4
  %514 = and i32 %513, 2
  %515 = icmp eq i32 %514, 0
  %516 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %399, i64 0, i32 0
  %517 = load i32, i32* %516, align 4
  br i1 %515, label %518, label %520

518:                                              ; preds = %511
  %519 = add i32 %517, -1
  store i32 %519, i32* %516, align 4
  br label %520

520:                                              ; preds = %518, %511
  %521 = phi i32 [ %519, %518 ], [ %517, %511 ]
  %522 = icmp eq i32 %521, 0
  br i1 %522, label %523, label %524

523:                                              ; preds = %520
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %399) #10
  br label %524

524:                                              ; preds = %510, %520, %523
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %398) #10
  %525 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 2
  %526 = bitcast %"class.blink::ExecutionContextLifecycleStateObserver.base"* %525 to %"class.blink::ExecutionContextLifecycleObserver"*
  %527 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %526) #10
  %528 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #10
  %529 = bitcast i8* %528 to %"class.blink::ConsoleMessage"*
  %530 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #10
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %529, i32 1, i32 2, %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.blink::SourceLocation"* %530) #10
  %531 = getelementptr inbounds i8, i8* %528, i64 -4
  %532 = bitcast i8* %531 to i16*
  %533 = load atomic i16, i16* %532 monotonic, align 2
  %534 = or i16 %533, 1
  store atomic i16 %534, i16* %532 release, align 2
  %535 = bitcast %"class.blink::ExecutionContext"* %527 to void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)***
  %536 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)**, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*** %535, align 8
  %537 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %536, i64 52
  %538 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %537, align 8
  call void %538(%"class.blink::ExecutionContext"* %527, %"class.blink::ConsoleMessage"* %529, i1 zeroext false) #10
  %539 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %397, align 8
  %540 = icmp eq %"class.WTF::StringImpl"* %539, null
  br i1 %540, label %642, label %541

541:                                              ; preds = %524
  %542 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %539, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %543 = load atomic i32, i32* %542 monotonic, align 4
  %544 = and i32 %543, 2
  %545 = icmp eq i32 %544, 0
  %546 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %539, i64 0, i32 0
  %547 = load i32, i32* %546, align 4
  br i1 %545, label %548, label %550

548:                                              ; preds = %541
  %549 = add i32 %547, -1
  store i32 %549, i32* %546, align 4
  br label %550

550:                                              ; preds = %548, %541
  %551 = phi i32 [ %549, %548 ], [ %547, %541 ]
  %552 = icmp eq i32 %551, 0
  br i1 %552, label %553, label %642

553:                                              ; preds = %550
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %539) #10
  br label %642

554:                                              ; preds = %393
  %555 = getelementptr inbounds %"class.blink::PerformanceObserverInit", %"class.blink::PerformanceObserverInit"* %1, i64 0, i32 4
  %556 = load i8, i8* %555, align 1, !range !3
  %557 = icmp eq i8 %556, 0
  br i1 %557, label %620, label %558

558:                                              ; preds = %554
  %559 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 5, i32 0
  %560 = bitcast %"class.blink::HeapVector"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %560) #10
  %561 = load %"class.blink::Performance"*, %"class.blink::Performance"** %16, align 8
  %562 = bitcast %"class.WTF::AtomicString"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %562) #10
  %563 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %564 = icmp eq %"class.WTF::StringImpl"* %563, null
  br i1 %564, label %588, label %565

565:                                              ; preds = %558
  %566 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %563, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %567 = load atomic i32, i32* %566 acquire, align 4
  %568 = and i32 %567, 4
  %569 = icmp eq i32 %568, 0
  br i1 %569, label %586, label %570

570:                                              ; preds = %565
  %571 = load atomic i32, i32* %566 monotonic, align 4
  %572 = and i32 %571, 2
  %573 = icmp eq i32 %572, 0
  br i1 %573, label %574, label %588

574:                                              ; preds = %570
  %575 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %563, i64 0, i32 0
  %576 = load i32, i32* %575, align 4
  %577 = zext i32 %576 to i33
  %578 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %577, i33 1) #10
  %579 = extractvalue { i33, i1 } %578, 1
  %580 = extractvalue { i33, i1 } %578, 0
  %581 = icmp slt i33 %580, 0
  %582 = or i1 %579, %581
  br i1 %582, label %583, label %584, !prof !2

583:                                              ; preds = %574
  call void @llvm.trap() #10
  unreachable

584:                                              ; preds = %574
  %585 = trunc i33 %580 to i32
  store i32 %585, i32* %575, align 4
  br label %588

586:                                              ; preds = %565
  %587 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %563) #10
  br label %588

588:                                              ; preds = %558, %570, %584, %586
  %589 = phi %"class.WTF::StringImpl"* [ %587, %586 ], [ %563, %570 ], [ %563, %584 ], [ null, %558 ]
  %590 = ptrtoint %"class.WTF::StringImpl"* %589 to i64
  %591 = bitcast %"class.WTF::AtomicString"* %13 to i64*
  store i64 %590, i64* %591, align 8
  call void @_ZN5blink11Performance24getBufferedEntriesByTypeERKN3WTF12AtomicStringE(%"class.blink::HeapVector"* nonnull sret %12, %"class.blink::Performance"* %561, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %13) #10
  %592 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %593 = load %"class.blink::Member.240"*, %"class.blink::Member.240"** %592, align 8
  %594 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %12, i64 0, i32 0, i32 0, i32 0, i32 2
  %595 = load i32, i32* %594, align 4
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE6AppendIS4_EEvPKT_j(%"class.WTF::Vector.237"* %559, %"class.blink::Member.240"* %593, i32 %595) #10
  %596 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %13, i64 0, i32 0, i32 0, i32 0
  %597 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %596, align 8
  %598 = icmp eq %"class.WTF::StringImpl"* %597, null
  br i1 %598, label %612, label %599

599:                                              ; preds = %588
  %600 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %597, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %601 = load atomic i32, i32* %600 monotonic, align 4
  %602 = and i32 %601, 2
  %603 = icmp eq i32 %602, 0
  %604 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %597, i64 0, i32 0
  %605 = load i32, i32* %604, align 4
  br i1 %603, label %606, label %608

606:                                              ; preds = %599
  %607 = add i32 %605, -1
  store i32 %607, i32* %604, align 4
  br label %608

608:                                              ; preds = %606, %599
  %609 = phi i32 [ %607, %606 ], [ %605, %599 ]
  %610 = icmp eq i32 %609, 0
  br i1 %610, label %611, label %612

611:                                              ; preds = %608
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %597) #10
  br label %612

612:                                              ; preds = %588, %608, %611
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %562) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %560) #10
  %613 = getelementptr inbounds %"class.WTF::Vector.237", %"class.WTF::Vector.237"* %559, i64 0, i32 0, i32 0, i32 0
  %614 = load %"class.blink::Member.240"*, %"class.blink::Member.240"** %613, align 8
  %615 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %616 = load i32, i32* %615, align 4
  %617 = zext i32 %616 to i64
  %618 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %614, i64 %617
  %619 = bitcast i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %619)
  store i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)* @_ZN5blink16PerformanceEntry24StartTimeCompareLessThanEPS0_S1_, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %4, align 8
  call void @_ZNSt3__16__sortIRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEvT0_SA_T_(%"class.blink::Member.240"* %614, %"class.blink::Member.240"* %618, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** nonnull dereferenceable(8) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %619)
  br label %620

620:                                              ; preds = %554, %612
  %621 = phi i1 [ true, %612 ], [ false, %554 ]
  %622 = icmp eq i32 %376, 128
  br i1 %622, label %623, label %638

623:                                              ; preds = %620
  %624 = getelementptr inbounds %"class.blink::PerformanceObserverInit", %"class.blink::PerformanceObserverInit"* %1, i64 0, i32 2
  %625 = load i8, i8* %624, align 1, !range !3
  %626 = icmp eq i8 %625, 0
  br i1 %626, label %638, label %627

627:                                              ; preds = %623
  %628 = bitcast double* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %628)
  store double 1.600000e+01, double* %14, align 8
  %629 = bitcast double* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %629)
  %630 = getelementptr inbounds %"class.blink::PerformanceObserverInit", %"class.blink::PerformanceObserverInit"* %1, i64 0, i32 5
  %631 = load double, double* %630, align 8
  store double %631, double* %15, align 8
  %632 = fcmp ogt double %631, 1.600000e+01
  %633 = select i1 %632, double* %15, double* %14
  %634 = bitcast double* %633 to i64*
  %635 = load i64, i64* %634, align 8
  %636 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 9
  %637 = bitcast double* %636 to i64*
  store i64 %635, i64* %637, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %629)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %628)
  br label %638

638:                                              ; preds = %623, %620, %627
  %639 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 6
  %640 = load i32, i32* %639, align 8
  %641 = or i32 %640, %376
  store i32 %641, i32* %639, align 8
  br label %643

642:                                              ; preds = %553, %550, %524
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %396) #10
  br label %753

643:                                              ; preds = %638, %323
  %644 = phi i32 [ %268, %323 ], [ %641, %638 ]
  %645 = phi i1 [ false, %323 ], [ %621, %638 ]
  %646 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 6
  %647 = and i32 %644, 1024
  %648 = icmp eq i32 %647, 0
  br i1 %648, label %662, label %649

649:                                              ; preds = %643
  %650 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 2
  %651 = bitcast %"class.blink::ExecutionContextLifecycleStateObserver.base"* %650 to %"class.blink::ExecutionContextLifecycleObserver"*
  %652 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %651) #10
  %653 = icmp eq %"class.blink::ExecutionContext"* %652, null
  %654 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %652, i64 0, i32 3
  %655 = icmp eq %"class.blink::UseCounter"* %654, null
  %656 = or i1 %653, %655
  br i1 %656, label %662, label %657

657:                                              ; preds = %649
  %658 = bitcast %"class.blink::UseCounter"* %654 to void (%"class.blink::UseCounter"*, i32)***
  %659 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %658, align 8
  %660 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %659, i64 3
  %661 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %660, align 8
  call void %661(%"class.blink::UseCounter"* nonnull %654, i32 2782) #10
  br label %662

662:                                              ; preds = %657, %649, %643
  %663 = load i32, i32* %646, align 8
  %664 = and i32 %663, 512
  %665 = icmp eq i32 %664, 0
  br i1 %665, label %679, label %666

666:                                              ; preds = %662
  %667 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 2
  %668 = bitcast %"class.blink::ExecutionContextLifecycleStateObserver.base"* %667 to %"class.blink::ExecutionContextLifecycleObserver"*
  %669 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %668) #10
  %670 = icmp eq %"class.blink::ExecutionContext"* %669, null
  %671 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %669, i64 0, i32 3
  %672 = icmp eq %"class.blink::UseCounter"* %671, null
  %673 = or i1 %670, %672
  br i1 %673, label %679, label %674

674:                                              ; preds = %666
  %675 = bitcast %"class.blink::UseCounter"* %671 to void (%"class.blink::UseCounter"*, i32)***
  %676 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %675, align 8
  %677 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %676, i64 3
  %678 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %677, align 8
  call void %678(%"class.blink::UseCounter"* nonnull %671, i32 2728) #10
  br label %679

679:                                              ; preds = %674, %666, %662
  %680 = load i32, i32* %646, align 8
  %681 = and i32 %680, 2048
  %682 = icmp eq i32 %681, 0
  br i1 %682, label %696, label %683

683:                                              ; preds = %679
  %684 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 2
  %685 = bitcast %"class.blink::ExecutionContextLifecycleStateObserver.base"* %684 to %"class.blink::ExecutionContextLifecycleObserver"*
  %686 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %685) #10
  %687 = icmp eq %"class.blink::ExecutionContext"* %686, null
  %688 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %686, i64 0, i32 3
  %689 = icmp eq %"class.blink::UseCounter"* %688, null
  %690 = or i1 %687, %689
  br i1 %690, label %696, label %691

691:                                              ; preds = %683
  %692 = bitcast %"class.blink::UseCounter"* %688 to void (%"class.blink::UseCounter"*, i32)***
  %693 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %692, align 8
  %694 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %693, i64 3
  %695 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %694, align 8
  call void %695(%"class.blink::UseCounter"* nonnull %688, i32 2927) #10
  br label %696

696:                                              ; preds = %691, %683, %679
  %697 = load i32, i32* %646, align 8
  %698 = and i32 %697, 8
  %699 = icmp eq i32 %698, 0
  br i1 %699, label %713, label %700

700:                                              ; preds = %696
  %701 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 2
  %702 = bitcast %"class.blink::ExecutionContextLifecycleStateObserver.base"* %701 to %"class.blink::ExecutionContextLifecycleObserver"*
  %703 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %702) #10
  %704 = icmp eq %"class.blink::ExecutionContext"* %703, null
  %705 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %703, i64 0, i32 3
  %706 = icmp eq %"class.blink::UseCounter"* %705, null
  %707 = or i1 %704, %706
  br i1 %707, label %713, label %708

708:                                              ; preds = %700
  %709 = bitcast %"class.blink::UseCounter"* %705 to void (%"class.blink::UseCounter"*, i32)***
  %710 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %709, align 8
  %711 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %710, i64 3
  %712 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %711, align 8
  call void %712(%"class.blink::UseCounter"* nonnull %705, i32 3350) #10
  br label %713

713:                                              ; preds = %708, %700, %696
  %714 = load i32, i32* %646, align 8
  %715 = and i32 %714, 16
  %716 = icmp eq i32 %715, 0
  br i1 %716, label %730, label %717

717:                                              ; preds = %713
  %718 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 2
  %719 = bitcast %"class.blink::ExecutionContextLifecycleStateObserver.base"* %718 to %"class.blink::ExecutionContextLifecycleObserver"*
  %720 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %719) #10
  %721 = icmp eq %"class.blink::ExecutionContext"* %720, null
  %722 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %720, i64 0, i32 3
  %723 = icmp eq %"class.blink::UseCounter"* %722, null
  %724 = or i1 %721, %723
  br i1 %724, label %730, label %725

725:                                              ; preds = %717
  %726 = bitcast %"class.blink::UseCounter"* %722 to void (%"class.blink::UseCounter"*, i32)***
  %727 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %726, align 8
  %728 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %727, i64 3
  %729 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %728, align 8
  call void %729(%"class.blink::UseCounter"* nonnull %722, i32 1615) #10
  br label %730

730:                                              ; preds = %725, %717, %713
  %731 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 8
  %732 = load i8, i8* %731, align 8, !range !3
  %733 = icmp eq i8 %732, 0
  %734 = load %"class.blink::Performance"*, %"class.blink::Performance"** %16, align 8
  br i1 %733, label %736, label %735

735:                                              ; preds = %730
  call void @_ZN5blink11Performance38UpdatePerformanceObserverFilterOptionsEv(%"class.blink::Performance"* %734) #10
  br label %737

736:                                              ; preds = %730
  call void @_ZN5blink11Performance27RegisterPerformanceObserverERNS_19PerformanceObserverE(%"class.blink::Performance"* %734, %"class.blink::PerformanceObserver"* dereferenceable(104) %0) #10
  br label %737

737:                                              ; preds = %736, %735
  store i8 1, i8* %731, align 8
  br i1 %645, label %738, label %753

738:                                              ; preds = %737
  %739 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 2
  %740 = bitcast %"class.blink::ExecutionContextLifecycleStateObserver.base"* %739 to %"class.blink::ExecutionContextLifecycleObserver"*
  %741 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %740) #10
  %742 = icmp eq %"class.blink::ExecutionContext"* %741, null
  %743 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %741, i64 0, i32 3
  %744 = icmp eq %"class.blink::UseCounter"* %743, null
  %745 = or i1 %742, %744
  br i1 %745, label %751, label %746

746:                                              ; preds = %738
  %747 = bitcast %"class.blink::UseCounter"* %743 to void (%"class.blink::UseCounter"*, i32)***
  %748 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %747, align 8
  %749 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %748, i64 3
  %750 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %749, align 8
  call void %750(%"class.blink::UseCounter"* nonnull %743, i32 3004) #10
  br label %751

751:                                              ; preds = %738, %746
  %752 = load %"class.blink::Performance"*, %"class.blink::Performance"** %16, align 8
  call void @_ZN5blink11Performance16ActivateObserverERNS_19PerformanceObserverE(%"class.blink::Performance"* %752, %"class.blink::PerformanceObserver"* dereferenceable(104) %0) #10
  br label %753

753:                                              ; preds = %47, %642, %41, %46, %339, %344, %67, %751, %737, %19
  ret void
}

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"*) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #2

declare i32 @_ZN5blink16PerformanceEntry15ToEntryTypeEnumERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2481", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2481", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.2481"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #10
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2481"* nonnull %3, i8* %8) #10
  %9 = bitcast %"class.WTF::StringTypeAdapter.2481"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #10
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2481"* nonnull %2, i8* %11) #10
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #10
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #10
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %34
  call void @llvm.trap() #10
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #10
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #10
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #10
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #10
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %70
  call void @llvm.trap() #10
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #10
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #10
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

declare void @_ZN5blink11Performance24getBufferedEntriesByTypeERKN3WTF12AtomicStringE(%"class.blink::HeapVector"* sret, %"class.blink::Performance"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16PerformanceEntry24StartTimeCompareLessThanEPS0_S1_(%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*) #0 comdat align 2 {
  %3 = tail call double @_ZNK5blink16PerformanceEntry9startTimeEv(%"class.blink::PerformanceEntry"* %0) #10
  %4 = tail call double @_ZNK5blink16PerformanceEntry9startTimeEv(%"class.blink::PerformanceEntry"* %1) #10
  %5 = fcmp oeq double %3, %4
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::PerformanceEntry", %"class.blink::PerformanceEntry"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.blink::PerformanceEntry", %"class.blink::PerformanceEntry"* %1, i64 0, i32 4
  %10 = load i32, i32* %9, align 8
  %11 = icmp slt i32 %8, %10
  br label %16

12:                                               ; preds = %2
  %13 = tail call double @_ZNK5blink16PerformanceEntry9startTimeEv(%"class.blink::PerformanceEntry"* %0) #10
  %14 = tail call double @_ZNK5blink16PerformanceEntry9startTimeEv(%"class.blink::PerformanceEntry"* %1) #10
  %15 = fcmp olt double %13, %14
  br label %16

16:                                               ; preds = %12, %6
  %17 = phi i1 [ %11, %6 ], [ %15, %12 ]
  ret i1 %17
}

declare void @_ZN5blink11Performance38UpdatePerformanceObserverFilterOptionsEv(%"class.blink::Performance"*) local_unnamed_addr #2

declare void @_ZN5blink11Performance27RegisterPerformanceObserverERNS_19PerformanceObserverE(%"class.blink::Performance"*, %"class.blink::PerformanceObserver"* dereferenceable(104)) local_unnamed_addr #2

declare void @_ZN5blink11Performance16ActivateObserverERNS_19PerformanceObserverE(%"class.blink::Performance"*, %"class.blink::PerformanceObserver"* dereferenceable(104)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PerformanceObserver10disconnectEv(%"class.blink::PerformanceObserver"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 5, i32 0
  %3 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = bitcast %"class.WTF::Vector.237"* %2 to i8**
  br i1 %9, label %15, label %11

11:                                               ; preds = %6
  %12 = load i8*, i8** %10, align 8
  %13 = zext i32 %8 to i64
  %14 = shl nuw nsw i64 %13, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %12, i64 %14) #10
  store i32 0, i32* %7, align 4
  br label %15

15:                                               ; preds = %11, %6
  %16 = load i8*, i8** %10, align 8
  %17 = bitcast %"class.WTF::Vector.237"* %2 to i64*
  store atomic i64 0, i64* %17 monotonic, align 8
  store i32 0, i32* %3, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %16) #10
  br label %18

18:                                               ; preds = %1, %15
  %19 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 4, i32 0, i32 0
  %20 = load %"class.blink::Performance"*, %"class.blink::Performance"** %19, align 8
  %21 = icmp eq %"class.blink::Performance"* %20, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %18
  tail call void @_ZN5blink11Performance29UnregisterPerformanceObserverERNS_19PerformanceObserverE(%"class.blink::Performance"* nonnull %20, %"class.blink::PerformanceObserver"* dereferenceable(104) %0) #10
  br label %23

23:                                               ; preds = %18, %22
  %24 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 8
  store i8 0, i8* %24, align 8
  %25 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 6
  store i32 0, i32* %25, align 8
  ret void
}

declare void @_ZN5blink11Performance29UnregisterPerformanceObserverERNS_19PerformanceObserverE(%"class.blink::Performance"*, %"class.blink::PerformanceObserver"* dereferenceable(104)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PerformanceObserver11takeRecordsEv(%"class.blink::HeapVector"* noalias nocapture sret, %"class.blink::PerformanceObserver"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %5 = bitcast %"class.blink::HeapVector"* %0 to i64*
  store i64 0, i64* %5, align 8
  %6 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %1, i64 0, i32 5, i32 0
  %7 = bitcast %"class.WTF::Vector.237"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.blink::HeapVector"* %0 to i64*
  store atomic i64 0, i64* %7 monotonic, align 8
  store atomic i64 %8, i64* %9 monotonic, align 8
  %10 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %3, align 8
  store i32 0, i32* %10, align 4
  %12 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %4, align 4
  store i32 0, i32* %12, align 4
  %14 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %2
  %17 = inttoptr i64 %8 to i8*
  %18 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %17) #10
  br label %19

19:                                               ; preds = %16, %2
  %20 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %19
  %23 = bitcast %"class.WTF::Vector.237"* %6 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %24) #10
  br label %26

26:                                               ; preds = %19, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PerformanceObserver23EnqueuePerformanceEntryERNS_16PerformanceEntryE(%"class.blink::PerformanceObserver"*, %"class.blink::PerformanceEntry"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::PerformanceEntry"*, align 8
  %4 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 5, i32 0
  %5 = bitcast %"class.blink::PerformanceEntry"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  store %"class.blink::PerformanceEntry"* %1, %"class.blink::PerformanceEntry"** %3, align 8
  %6 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %7, %9
  br i1 %10, label %26, label %11, !prof !2

11:                                               ; preds = %2
  %12 = ptrtoint %"class.blink::PerformanceEntry"* %1 to i64
  %13 = getelementptr inbounds %"class.WTF::Vector.237", %"class.WTF::Vector.237"* %4, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::Member.240"*, %"class.blink::Member.240"** %13, align 8
  %15 = zext i32 %7 to i64
  %16 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %14, i64 %15
  %17 = bitcast %"class.blink::Member.240"* %16 to i64*
  store atomic i64 %12, i64* %17 monotonic, align 8
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %11
  %21 = bitcast %"class.blink::PerformanceEntry"* %1 to i8*
  %22 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %21) #10
  br label %23

23:                                               ; preds = %20, %11
  %24 = load i32, i32* %6, align 4
  %25 = add i32 %24, 1
  store i32 %25, i32* %6, align 4
  br label %27

26:                                               ; preds = %2
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.237"* %4, %"class.blink::PerformanceEntry"** nonnull dereferenceable(8) %3) #10
  br label %27

27:                                               ; preds = %23, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %28 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 4, i32 0, i32 0
  %29 = load %"class.blink::Performance"*, %"class.blink::Performance"** %28, align 8
  %30 = icmp eq %"class.blink::Performance"* %29, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %27
  call void @_ZN5blink11Performance16ActivateObserverERNS_19PerformanceObserverE(%"class.blink::Performance"* nonnull %29, %"class.blink::PerformanceObserver"* dereferenceable(104) %0) #10
  br label %32

32:                                               ; preds = %27, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19PerformanceObserver10CanObserveERKNS_16PerformanceEntryE(%"class.blink::PerformanceObserver"* nocapture readonly, %"class.blink::PerformanceEntry"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::PerformanceEntry"* %1 to i32 (%"class.blink::PerformanceEntry"*)***
  %4 = load i32 (%"class.blink::PerformanceEntry"*)**, i32 (%"class.blink::PerformanceEntry"*)*** %3, align 8
  %5 = getelementptr inbounds i32 (%"class.blink::PerformanceEntry"*)*, i32 (%"class.blink::PerformanceEntry"*)** %4, i64 10
  %6 = load i32 (%"class.blink::PerformanceEntry"*)*, i32 (%"class.blink::PerformanceEntry"*)** %5, align 8
  %7 = tail call i32 %6(%"class.blink::PerformanceEntry"* %1) #10
  %8 = icmp eq i32 %7, 128
  br i1 %8, label %9, label %18

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::PerformanceEntry"* %1 to double (%"class.blink::PerformanceEntry"*)***
  %11 = load double (%"class.blink::PerformanceEntry"*)**, double (%"class.blink::PerformanceEntry"*)*** %10, align 8
  %12 = getelementptr inbounds double (%"class.blink::PerformanceEntry"*)*, double (%"class.blink::PerformanceEntry"*)** %11, i64 11
  %13 = load double (%"class.blink::PerformanceEntry"*)*, double (%"class.blink::PerformanceEntry"*)** %12, align 8
  %14 = tail call double %13(%"class.blink::PerformanceEntry"* %1) #10
  %15 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 9
  %16 = load double, double* %15, align 8
  %17 = fcmp oge double %14, %16
  br label %18

18:                                               ; preds = %2, %9
  %19 = phi i1 [ %17, %9 ], [ true, %2 ]
  ret i1 %19
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink19PerformanceObserver18HasPendingActivityEv(%"class.blink::PerformanceObserver"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 8
  %3 = load i8, i8* %2, align 8, !range !3
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PerformanceObserver7DeliverEv(%"class.blink::PerformanceObserver"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::HeapVector", align 8
  %3 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::ExecutionContextLifecycleStateObserver.base"* %3 to %"class.blink::ExecutionContextLifecycleObserver"*
  %5 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %4) #10
  %6 = icmp eq %"class.blink::ExecutionContext"* %5, null
  br i1 %6, label %44, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 5, i32 0
  %9 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %44, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.blink::HeapVector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #10
  %14 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %16 = bitcast %"class.blink::HeapVector"* %2 to i64*
  store i64 0, i64* %16, align 8
  %17 = bitcast %"class.WTF::Vector.237"* %8 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.blink::HeapVector"* %2 to i64*
  store atomic i64 0, i64* %17 monotonic, align 8
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %14, align 8
  store i32 0, i32* %20, align 4
  store i32 %10, i32* %15, align 4
  store i32 0, i32* %9, align 4
  %22 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %12
  %25 = inttoptr i64 %18 to i8*
  %26 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %25) #10
  br label %27

27:                                               ; preds = %24, %12
  %28 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %34, label %30

30:                                               ; preds = %27
  %31 = bitcast %"class.WTF::Vector.237"* %8 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %32) #10
  br label %34

34:                                               ; preds = %27, %30
  %35 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 32) #10
  %36 = bitcast i8* %35 to %"class.blink::PerformanceObserverEntryList"*
  call void @_ZN5blink28PerformanceObserverEntryListC1ERKNS_10HeapVectorINS_6MemberINS_16PerformanceEntryEEELj0EEE(%"class.blink::PerformanceObserverEntryList"* %36, %"class.blink::HeapVector"* nonnull dereferenceable(16) %2) #10
  %37 = getelementptr inbounds i8, i8* %35, i64 -4
  %38 = bitcast i8* %37 to i16*
  %39 = load atomic i16, i16* %38 monotonic, align 2
  %40 = or i16 %39, 1
  store atomic i16 %40, i16* %38 release, align 2
  %41 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 3, i32 0, i32 0
  %42 = load %"class.blink::V8PerformanceObserverCallback"*, %"class.blink::V8PerformanceObserverCallback"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 0
  call void @_ZN5blink29V8PerformanceObserverCallback24InvokeAndReportExceptionENS_8bindings31V8ValueOrScriptWrappableAdapterEPNS_28PerformanceObserverEntryListEPNS_19PerformanceObserverE(%"class.blink::V8PerformanceObserverCallback"* %42, %"class.v8::Value"* null, %"class.blink::ScriptWrappable"* %43, %"class.blink::PerformanceObserverEntryList"* %36, %"class.blink::PerformanceObserver"* %0) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #10
  br label %44

44:                                               ; preds = %1, %7, %34
  ret void
}

declare void @_ZN5blink29V8PerformanceObserverCallback24InvokeAndReportExceptionENS_8bindings31V8ValueOrScriptWrappableAdapterEPNS_28PerformanceObserverEntryListEPNS_19PerformanceObserverE(%"class.blink::V8PerformanceObserverCallback"*, %"class.v8::Value"*, %"class.blink::ScriptWrappable"*, %"class.blink::PerformanceObserverEntryList"*, %"class.blink::PerformanceObserver"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PerformanceObserver28ContextLifecycleStateChangedENS_5mojom19FrameLifecycleStateE(%"class.blink::PerformanceObserver"*, i32) unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 0
  %4 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 4, i32 0, i32 0
  %5 = load %"class.blink::Performance"*, %"class.blink::Performance"** %4, align 8
  br i1 %3, label %6, label %7

6:                                                ; preds = %2
  tail call void @_ZN5blink11Performance16ActivateObserverERNS_19PerformanceObserverE(%"class.blink::Performance"* %5, %"class.blink::PerformanceObserver"* dereferenceable(104) %0) #10
  br label %8

7:                                                ; preds = %2
  tail call void @_ZN5blink11Performance15SuspendObserverERNS_19PerformanceObserverE(%"class.blink::Performance"* %5, %"class.blink::PerformanceObserver"* dereferenceable(104) %0) #10
  br label %8

8:                                                ; preds = %7, %6
  ret void
}

declare void @_ZN5blink11Performance15SuspendObserverERNS_19PerformanceObserverE(%"class.blink::Performance"*, %"class.blink::PerformanceObserver"* dereferenceable(104)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn24_N5blink19PerformanceObserver28ContextLifecycleStateChangedENS_5mojom19FrameLifecycleStateE(%"class.blink::PerformanceObserver"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 -1, i32 6
  %4 = bitcast i32* %3 to %"class.blink::PerformanceObserver"*
  %5 = icmp eq i32 %1, 0
  %6 = getelementptr inbounds i32, i32* %3, i64 14
  %7 = bitcast i32* %6 to %"class.blink::Performance"**
  %8 = load %"class.blink::Performance"*, %"class.blink::Performance"** %7, align 8
  br i1 %5, label %9, label %10

9:                                                ; preds = %2
  tail call void @_ZN5blink11Performance16ActivateObserverERNS_19PerformanceObserverE(%"class.blink::Performance"* %8, %"class.blink::PerformanceObserver"* dereferenceable(104) %4) #10
  br label %11

10:                                               ; preds = %2
  tail call void @_ZN5blink11Performance15SuspendObserverERNS_19PerformanceObserverE(%"class.blink::Performance"* %8, %"class.blink::PerformanceObserver"* dereferenceable(104) %4) #10
  br label %11

11:                                               ; preds = %9, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink19PerformanceObserver5TraceEPNS_7VisitorE(%"class.blink::PerformanceObserver"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 3
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_29V8PerformanceObserverCallbackEE5TraceEPNS_7VisitorEPKv) #10
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 4
  %15 = bitcast %"class.blink::WeakMember.233"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::WeakMember.233"* %14 to i8*
  %21 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)***
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %22, i64 6
  %24 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* %20, i8* %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11PerformanceEE5TraceEPNS_7VisitorEPKv, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink7Visitor14HandleWeakCellINS_11PerformanceEEEvRKNS_14LivenessBrokerEPKv) #10
  br label %25

25:                                               ; preds = %13, %18
  %26 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 5
  %27 = bitcast %"class.blink::HeapVector"* %26 to i64*
  %28 = load atomic i64, i64* %27 monotonic, align 8
  %29 = icmp eq i64 %28, 0
  %30 = bitcast %"class.blink::HeapVector"* %26 to i8**
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %32 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %32, i64 11
  %34 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8** %30) #10
  br i1 %29, label %41, label %35

35:                                               ; preds = %25
  %36 = inttoptr i64 %28 to i8*
  %37 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %38, i64 5
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %39, align 8
  tail call void %40(%"class.blink::Visitor"* %1, i8* nonnull %36, i8* nonnull %36, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #10
  br label %41

41:                                               ; preds = %25, %35
  %42 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %42, %"class.blink::Visitor"* %1) #10
  %43 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 2
  %44 = bitcast %"class.blink::ExecutionContextLifecycleStateObserver.base"* %43 to %"class.blink::ExecutionContextLifecycleObserver"*
  tail call void @_ZNK5blink33ExecutionContextLifecycleObserver5TraceEPNS_7VisitorE(%"class.blink::ExecutionContextLifecycleObserver"* %44, %"class.blink::Visitor"* %1) #10
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #2

declare void @_ZNK5blink33ExecutionContextLifecycleObserver5TraceEPNS_7VisitorE(%"class.blink::ExecutionContextLifecycleObserver"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_NK5blink19PerformanceObserver5TraceEPNS_7VisitorE(%"class.blink::PerformanceObserver"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 -1, i32 8
  %4 = bitcast i8* %3 to %"class.blink::PerformanceObserver"*
  tail call void @_ZNK5blink19PerformanceObserver5TraceEPNS_7VisitorE(%"class.blink::PerformanceObserver"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn24_NK5blink19PerformanceObserver5TraceEPNS_7VisitorE(%"class.blink::PerformanceObserver"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 -1, i32 6
  %4 = bitcast i32* %3 to %"class.blink::PerformanceObserver"*
  tail call void @_ZNK5blink19PerformanceObserver5TraceEPNS_7VisitorE(%"class.blink::PerformanceObserver"* %4, %"class.blink::Visitor"* %1)
  ret void
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19PerformanceObserverD2Ev(%"class.blink::PerformanceObserver"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 2
  %3 = bitcast %"class.blink::ExecutionContextLifecycleStateObserver.base"* %2 to %"class.blink::ExecutionContextLifecycleStateObserver"*
  tail call void @_ZN5blink38ExecutionContextLifecycleStateObserverD2Ev(%"class.blink::ExecutionContextLifecycleStateObserver"* %3) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19PerformanceObserverD0Ev(%"class.blink::PerformanceObserver"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 0, i32 2
  %3 = bitcast %"class.blink::ExecutionContextLifecycleStateObserver.base"* %2 to %"class.blink::ExecutionContextLifecycleStateObserver"*
  tail call void @_ZN5blink38ExecutionContextLifecycleStateObserverD2Ev(%"class.blink::ExecutionContextLifecycleStateObserver"* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink19PerformanceObserver18GetWrapperTypeInfoEv(%"class.blink::PerformanceObserver"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink19PerformanceObserver18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19PerformanceObserver16ContextDestroyedEv(%"class.blink::PerformanceObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N5blink19PerformanceObserverD1Ev(%"class.blink::PerformanceObserver"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 -1, i32 8
  %3 = getelementptr inbounds i8, i8* %2, i64 24
  %4 = bitcast i8* %3 to %"class.blink::ExecutionContextLifecycleStateObserver"*
  tail call void @_ZN5blink38ExecutionContextLifecycleStateObserverD2Ev(%"class.blink::ExecutionContextLifecycleStateObserver"* %4) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N5blink19PerformanceObserverD0Ev(%"class.blink::PerformanceObserver"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 -1, i32 8
  %3 = getelementptr inbounds i8, i8* %2, i64 24
  %4 = bitcast i8* %3 to %"class.blink::ExecutionContextLifecycleStateObserver"*
  tail call void @_ZN5blink38ExecutionContextLifecycleStateObserverD2Ev(%"class.blink::ExecutionContextLifecycleStateObserver"* %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_19PerformanceObserverEE18IsContextDestroyedEv(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 1
  %3 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::ExecutionContextLifecycleObserver"*
  %4 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %3) #10
  %5 = tail call zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %4) #10
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_19PerformanceObserverEE26DispatchHasPendingActivityEv(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 9
  %3 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to i8*
  %4 = load i8, i8* %3, align 8, !range !3
  %5 = icmp ne i8 %4, 0
  ret i1 %5
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn24_N5blink19PerformanceObserverD1Ev(%"class.blink::PerformanceObserver"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 -1, i32 6
  %3 = getelementptr inbounds i32, i32* %2, i64 6
  %4 = bitcast i32* %3 to %"class.blink::ExecutionContextLifecycleStateObserver"*
  tail call void @_ZN5blink38ExecutionContextLifecycleStateObserverD2Ev(%"class.blink::ExecutionContextLifecycleStateObserver"* %4) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn24_N5blink19PerformanceObserverD0Ev(%"class.blink::PerformanceObserver"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PerformanceObserver", %"class.blink::PerformanceObserver"* %0, i64 -1, i32 6
  %3 = getelementptr inbounds i32, i32* %2, i64 6
  %4 = bitcast i32* %3 to %"class.blink::ExecutionContextLifecycleStateObserver"*
  tail call void @_ZN5blink38ExecutionContextLifecycleStateObserverD2Ev(%"class.blink::ExecutionContextLifecycleStateObserver"* %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink33ExecutionContextLifecycleObserver35IsExecutionContextLifecycleObserverEv(%"class.blink::ExecutionContextLifecycleObserver"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn24_N5blink19PerformanceObserver16ContextDestroyedEv(%"class.blink::PerformanceObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink38ExecutionContextLifecycleStateObserver19SetExecutionContextEPNS_16ExecutionContextE(%"class.blink::ExecutionContextLifecycleStateObserver"*, %"class.blink::ExecutionContext"*) unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink21GarbageCollectedMixin5TraceEPNS_7VisitorE(%"class.blink::GarbageCollectedMixin"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21ActiveScriptWrappableINS_19PerformanceObserverEED0Ev(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::ActiveScriptWrappable"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25ActiveScriptWrappableBaseD2Ev(%"class.blink::ActiveScriptWrappableBase"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

declare double @_ZNK5blink16PerformanceEntry9startTimeEv(%"class.blink::PerformanceEntry"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink38ExecutionContextLifecycleStateObserverD2Ev(%"class.blink::ExecutionContextLifecycleStateObserver"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.243"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.243"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #10
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* %21, i8* %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.11, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #10
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #10
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.243"*) local_unnamed_addr #2

declare void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS1_EEvOT_(%"class.WTF::Vector.1843"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1843", %"class.WTF::Vector.1843"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1843", %"class.WTF::Vector.1843"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %6, align 8
  %8 = icmp ugt %"class.WTF::AtomicString"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::AtomicString"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1843", %"class.WTF::Vector.1843"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !10

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::AtomicString"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_12AtomicStringEEEmm(i64 %26) #10
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv, i64 0, i64 0)) #10
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1843"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::AtomicString"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::AtomicString"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::AtomicString"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !10

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #10
  %47 = bitcast %"class.WTF::Vector.1843"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #10
  %51 = bitcast %"class.WTF::Vector.1843"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::AtomicString"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::AtomicString"* %1 to i64
  %56 = ptrtoint %"class.WTF::AtomicString"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.1843", %"class.WTF::Vector.1843"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !10

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::AtomicString"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_12AtomicStringEEEmm(i64 %71) #10
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv, i64 0, i64 0)) #10
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1843"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::AtomicString"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::AtomicString"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !10

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #10
  %87 = bitcast %"class.WTF::Vector.1843"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #10
  %91 = bitcast %"class.WTF::Vector.1843"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::AtomicString"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::AtomicString"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::AtomicString"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::AtomicString"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %101, i64 0, i32 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %100, i64 %103, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %106, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %107, label %125, label %108

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %125

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i33
  %117 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #10
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !2

122:                                              ; preds = %113
  tail call void @llvm.trap() #10
  unreachable

123:                                              ; preds = %113
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %114, align 4
  br label %125

125:                                              ; preds = %99, %108, %123
  %126 = load i32, i32* %3, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %3, align 4
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_12AtomicStringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.15, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2481", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2481"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2481", %"class.WTF::StringTypeAdapter.2481"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.2481"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2481"* nonnull %4, i8* %14) #10
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2339"* %9) #10
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2339"* %9) #10
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #10
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i64 0, i64 0), i8* %25, i8* %26) #10
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #10
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #10
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #10
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.18, i64 0, i64 0), i8* %41, i8* %42) #10
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #10
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #10
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2481", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2482", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2481", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2481"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.2481"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2481"* nonnull %5, i8* %10) #10
  %11 = bitcast %"class.WTF::StringTypeAdapter.2481"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2481", %"class.WTF::StringTypeAdapter.2481"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #10
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2481"* nonnull %3, i8* %14) #10
  %15 = bitcast %"class.WTF::StringTypeAdapter.2482"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2482", %"class.WTF::StringTypeAdapter.2482"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2482", %"class.WTF::StringTypeAdapter.2482"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #10
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.2482"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2481"* nonnull %3, i8* %1) #10
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2482", %"class.WTF::StringTypeAdapter.2482"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2483"* nonnull %34, i8* %37) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #10
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2339"* %6) #10
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2481"* nonnull %5, i8* %40) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2481", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2482", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2481", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2481"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.2481"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2481"* nonnull %5, i8* %10) #10
  %11 = bitcast %"class.WTF::StringTypeAdapter.2481"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2481", %"class.WTF::StringTypeAdapter.2481"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #10
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2481"* nonnull %3, i8* %14) #10
  %15 = bitcast %"class.WTF::StringTypeAdapter.2482"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2482", %"class.WTF::StringTypeAdapter.2482"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2482", %"class.WTF::StringTypeAdapter.2482"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #10
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.2482"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2481"* nonnull %3, i16* %1) #10
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2482", %"class.WTF::StringTypeAdapter.2482"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2483"* nonnull %34, i16* %37) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #10
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2339"* %6) #10
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2481"* nonnull %5, i16* %40) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2481"*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2339"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2481", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.2481"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2481", %"class.WTF::StringTypeAdapter.2481"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.2339", %"class.WTF::StringAppend.2339"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.2481"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2481"* nonnull %4, i8* %13) #10
  %14 = getelementptr inbounds %"class.WTF::StringAppend.2339", %"class.WTF::StringAppend.2339"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #10
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i64 0, i64 0), i8* %30, i8* %31) #10
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #10
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #10
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #10
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #10
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.18, i64 0, i64 0), i8* %45, i8* %46) #10
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #10
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #10
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #10
  ret i32 %23
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2481"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2483"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2481"*, i16*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2483"*, i16*) local_unnamed_addr #2

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceLocation"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.243"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.243"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ConsoleMessage"*
  tail call void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ConsoleMessage"*
  tail call void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE6AppendIS4_EEvPKT_j(%"class.WTF::Vector.237"*, %"class.blink::Member.240"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.237", %"class.WTF::Vector.237"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.237", %"class.WTF::Vector.237"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %43

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::Vector.237", %"class.WTF::Vector.237"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::Member.240"*, %"class.blink::Member.240"** %14, align 8
  %16 = icmp ugt %"class.blink::Member.240"* %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %15, i64 %18
  %20 = icmp ugt %"class.blink::Member.240"* %19, %1
  br i1 %20, label %29, label %21

21:                                               ; preds = %17, %13
  %22 = lshr i32 %11, 2
  %23 = add nuw i32 %11, 1
  %24 = add i32 %23, %22
  %25 = icmp ugt i32 %24, 4
  %26 = select i1 %25, i32 %24, i32 4
  %27 = icmp ugt i32 %26, %9
  %28 = select i1 %27, i32 %26, i32 %9
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.237"* %0, i32 %28) #10
  br label %43

29:                                               ; preds = %17
  %30 = ptrtoint %"class.blink::Member.240"* %1 to i64
  %31 = ptrtoint %"class.blink::Member.240"* %15 to i64
  %32 = sub i64 %30, %31
  %33 = ashr exact i64 %32, 3
  %34 = lshr i32 %11, 2
  %35 = add nuw i32 %11, 1
  %36 = add i32 %35, %34
  %37 = icmp ugt i32 %36, 4
  %38 = select i1 %37, i32 %36, i32 4
  %39 = icmp ugt i32 %38, %9
  %40 = select i1 %39, i32 %38, i32 %9
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.237"* %0, i32 %40) #10
  %41 = load %"class.blink::Member.240"*, %"class.blink::Member.240"** %14, align 8
  %42 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %41, i64 %33
  br label %43

43:                                               ; preds = %29, %21, %3
  %44 = phi %"class.blink::Member.240"* [ %1, %3 ], [ %1, %21 ], [ %42, %29 ]
  %45 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #10
  %46 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %46, align 8
  %47 = load i32, i32* %7, align 4
  %48 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48)
  %49 = icmp ult i32 %9, %47
  br i1 %49, label %51, label %50

50:                                               ; preds = %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48)
  store i8* null, i8** %46, align 8
  br label %60

51:                                               ; preds = %43
  %52 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  %53 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %47) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20, i64 0, i64 0), i8* %52, i8* %53) #10
  %54 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %55 = load i8*, i8** %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48)
  store i8* %55, i8** %46, align 8
  %56 = icmp eq i8* %55, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %51
  %58 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #10
  %59 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #10
  br label %60

60:                                               ; preds = %50, %51, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #10
  %61 = getelementptr inbounds %"class.WTF::Vector.237", %"class.WTF::Vector.237"* %0, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::Member.240"*, %"class.blink::Member.240"** %61, align 8
  %63 = load i32, i32* %7, align 4
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %62, i64 %64
  %66 = icmp ne %"class.blink::Member.240"* %65, null
  %67 = icmp ne %"class.blink::Member.240"* %44, null
  %68 = and i1 %67, %66
  br i1 %68, label %69, label %88, !prof !10

69:                                               ; preds = %60
  %70 = zext i32 %2 to i64
  %71 = bitcast %"class.blink::Member.240"* %65 to i8*
  %72 = bitcast %"class.blink::Member.240"* %44 to i8*
  %73 = shl nuw nsw i64 %70, 3
  call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %71, i8* nonnull %72, i64 %73) #10
  %74 = icmp eq i32 %2, 0
  br i1 %74, label %88, label %75

75:                                               ; preds = %69, %85
  %76 = phi i64 [ %78, %85 ], [ %70, %69 ]
  %77 = phi %"class.blink::Member.240"* [ %86, %85 ], [ %65, %69 ]
  %78 = add nsw i64 %76, -1
  %79 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %85, label %81

81:                                               ; preds = %75
  %82 = bitcast %"class.blink::Member.240"* %77 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %83) #10
  br label %85

85:                                               ; preds = %81, %75
  %86 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %77, i64 1
  %87 = icmp eq i64 %78, 0
  br i1 %87, label %88, label %75

88:                                               ; preds = %85, %60, %69
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.237"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.237", %"class.WTF::Vector.237"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.237", %"class.WTF::Vector.237"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.240"*, %"class.blink::Member.240"** %8, align 8
  %10 = icmp eq %"class.blink::Member.240"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_16PerformanceEntryEEEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.237"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.240"*, %"class.blink::Member.240"** %8, align 8
  %26 = icmp eq %"class.blink::Member.240"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.240"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.237"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.237"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.237"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.237", %"class.WTF::Vector.237"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.237"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.237", %"class.WTF::Vector.237"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_16PerformanceEntryEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.237", %"class.WTF::Vector.237"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.240"*, %"class.blink::Member.240"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.237", %"class.WTF::Vector.237"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.240"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.240"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !10

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.237"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector.237"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector.237"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.237", %"class.WTF::Vector.237"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_16PerformanceEntryEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.21, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.23, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.243"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.243"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([173 x i8], [173 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_16PerformanceEntryEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.240"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.240"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16PerformanceEntryEE5TraceEPNS_7VisitorEPKv) #10
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_16PerformanceEntryEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16PerformanceEntryEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEvT0_SA_T_(%"class.blink::Member.240"*, %"class.blink::Member.240"*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  br label %4

4:                                                ; preds = %332, %3
  %5 = phi %"class.blink::Member.240"* [ %1, %3 ], [ %295, %332 ]
  %6 = phi %"class.blink::Member.240"* [ %0, %3 ], [ %16, %332 ]
  %7 = ptrtoint %"class.blink::Member.240"* %5 to i64
  %8 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %5, i64 -1
  %9 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %8, i64 0, i32 0, i32 0
  %10 = bitcast %"class.blink::Member.240"* %8 to i64*
  %11 = bitcast %"class.blink::Member.240"* %8 to i8**
  %12 = ptrtoint %"class.blink::Member.240"* %5 to i64
  br label %13

13:                                               ; preds = %341, %4
  %14 = phi %"class.blink::Member.240"* [ %6, %4 ], [ %342, %341 ]
  br label %15

15:                                               ; preds = %193, %13
  %16 = phi %"class.blink::Member.240"* [ %14, %13 ], [ %178, %193 ]
  %17 = ptrtoint %"class.blink::Member.240"* %16 to i64
  %18 = sub i64 %7, %17
  %19 = ashr exact i64 %18, 3
  switch i64 %19, label %61 [
    i64 0, label %345
    i64 1, label %345
    i64 2, label %20
    i64 3, label %46
    i64 4, label %50
    i64 5, label %55
  ]

20:                                               ; preds = %15
  %21 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %2, align 8
  %22 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %5, i64 -1
  %23 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %22, i64 0, i32 0, i32 0
  %24 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %16, i64 0, i32 0, i32 0
  %26 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %25, align 8
  %27 = tail call zeroext i1 %21(%"class.blink::PerformanceEntry"* %24, %"class.blink::PerformanceEntry"* %26) #10
  br i1 %27, label %28, label %345

28:                                               ; preds = %20
  %29 = bitcast %"class.blink::Member.240"* %16 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::Member.240"* %22 to i64*
  %32 = load i64, i64* %31, align 8
  store atomic i64 %32, i64* %29 monotonic, align 8
  store atomic i64 %30, i64* %31 monotonic, align 8
  %33 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %28
  %36 = bitcast %"class.blink::Member.240"* %16 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %37) #10
  br label %39

39:                                               ; preds = %35, %28
  %40 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %345, label %42

42:                                               ; preds = %39
  %43 = bitcast %"class.blink::Member.240"* %22 to i8**
  %44 = load i8*, i8** %43, align 8
  %45 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %44) #10
  br label %345

46:                                               ; preds = %15
  %47 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %16, i64 1
  %48 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %5, i64 -1
  %49 = tail call i32 @_ZNSt3__17__sort3IRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_T_(%"class.blink::Member.240"* %16, %"class.blink::Member.240"* %47, %"class.blink::Member.240"* %48, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8) %2)
  br label %345

50:                                               ; preds = %15
  %51 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %16, i64 1
  %52 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %16, i64 2
  %53 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %5, i64 -1
  %54 = tail call i32 @_ZNSt3__17__sort4IRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_SA_T_(%"class.blink::Member.240"* %16, %"class.blink::Member.240"* %51, %"class.blink::Member.240"* %52, %"class.blink::Member.240"* %53, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8) %2)
  br label %345

55:                                               ; preds = %15
  %56 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %16, i64 1
  %57 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %16, i64 2
  %58 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %16, i64 3
  %59 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %5, i64 -1
  %60 = tail call i32 @_ZNSt3__17__sort5IRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_SA_SA_T_(%"class.blink::Member.240"* %16, %"class.blink::Member.240"* %56, %"class.blink::Member.240"* %57, %"class.blink::Member.240"* %58, %"class.blink::Member.240"* %59, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8) %2)
  br label %345

61:                                               ; preds = %15
  %62 = icmp slt i64 %18, 56
  br i1 %62, label %63, label %112

63:                                               ; preds = %61
  %64 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %16, i64 2
  %65 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %16, i64 1
  %66 = tail call i32 @_ZNSt3__17__sort3IRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_T_(%"class.blink::Member.240"* %16, %"class.blink::Member.240"* %65, %"class.blink::Member.240"* %64, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8) %2) #10
  %67 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %16, i64 3
  %68 = icmp eq %"class.blink::Member.240"* %67, %5
  br i1 %68, label %345, label %69

69:                                               ; preds = %63, %109
  %70 = phi %"class.blink::Member.240"* [ %110, %109 ], [ %67, %63 ]
  %71 = phi %"class.blink::Member.240"* [ %70, %109 ], [ %64, %63 ]
  %72 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %2, align 8
  %73 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %70, i64 0, i32 0, i32 0
  %74 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %71, i64 0, i32 0, i32 0
  %76 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %75, align 8
  %77 = tail call zeroext i1 %72(%"class.blink::PerformanceEntry"* %74, %"class.blink::PerformanceEntry"* %76) #10
  br i1 %77, label %78, label %109

78:                                               ; preds = %69
  %79 = bitcast %"class.blink::Member.240"* %70 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = inttoptr i64 %80 to %"class.blink::PerformanceEntry"*
  br label %82

82:                                               ; preds = %95, %78
  %83 = phi %"class.blink::Member.240"* [ %70, %78 ], [ %84, %95 ]
  %84 = phi %"class.blink::Member.240"* [ %71, %78 ], [ %97, %95 ]
  %85 = bitcast %"class.blink::Member.240"* %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"class.blink::Member.240"* %83 to i64*
  store atomic i64 %86, i64* %87 monotonic, align 8
  %88 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %93, label %90

90:                                               ; preds = %82
  %91 = inttoptr i64 %86 to i8*
  %92 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %91) #10
  br label %93

93:                                               ; preds = %90, %82
  %94 = icmp eq %"class.blink::Member.240"* %84, %16
  br i1 %94, label %101, label %95

95:                                               ; preds = %93
  %96 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %2, align 8
  %97 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %84, i64 -1
  %98 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %97, i64 0, i32 0, i32 0
  %99 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %98, align 8
  %100 = tail call zeroext i1 %96(%"class.blink::PerformanceEntry"* %81, %"class.blink::PerformanceEntry"* %99) #10
  br i1 %100, label %82, label %101

101:                                              ; preds = %93, %95
  %102 = phi %"class.blink::Member.240"* [ %84, %95 ], [ %16, %93 ]
  %103 = bitcast %"class.blink::Member.240"* %102 to i64*
  store atomic i64 %80, i64* %103 monotonic, align 8
  %104 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %109, label %106

106:                                              ; preds = %101
  %107 = inttoptr i64 %80 to i8*
  %108 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %107) #10
  br label %109

109:                                              ; preds = %106, %101, %69
  %110 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %70, i64 1
  %111 = icmp eq %"class.blink::Member.240"* %110, %5
  br i1 %111, label %345, label %69

112:                                              ; preds = %61
  %113 = icmp sgt i64 %18, 7992
  %114 = sdiv i64 %19, 2
  %115 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %16, i64 %114
  br i1 %113, label %116, label %121

116:                                              ; preds = %112
  %117 = sdiv i64 %19, 4
  %118 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %16, i64 %117
  %119 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %115, i64 %117
  %120 = tail call i32 @_ZNSt3__17__sort5IRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_SA_SA_T_(%"class.blink::Member.240"* %16, %"class.blink::Member.240"* %118, %"class.blink::Member.240"* %115, %"class.blink::Member.240"* %119, %"class.blink::Member.240"* %8, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8) %2)
  br label %123

121:                                              ; preds = %112
  %122 = tail call i32 @_ZNSt3__17__sort3IRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_T_(%"class.blink::Member.240"* %16, %"class.blink::Member.240"* %115, %"class.blink::Member.240"* %8, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8) %2)
  br label %123

123:                                              ; preds = %121, %116
  %124 = phi i32 [ %120, %116 ], [ %122, %121 ]
  %125 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %2, align 8
  %126 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %16, i64 0, i32 0, i32 0
  %127 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %126, align 8
  %128 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %115, i64 0, i32 0, i32 0
  %129 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %128, align 8
  %130 = tail call zeroext i1 %125(%"class.blink::PerformanceEntry"* %127, %"class.blink::PerformanceEntry"* %129) #10
  br i1 %130, label %240, label %131

131:                                              ; preds = %123, %214
  %132 = phi %"class.blink::Member.240"* [ %133, %214 ], [ %8, %123 ]
  %133 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %132, i64 -1
  %134 = icmp eq %"class.blink::Member.240"* %16, %133
  br i1 %134, label %135, label %214

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %16, i64 1
  %137 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %2, align 8
  %138 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %126, align 8
  %139 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %9, align 8
  %140 = tail call zeroext i1 %137(%"class.blink::PerformanceEntry"* %138, %"class.blink::PerformanceEntry"* %139) #10
  br i1 %140, label %171, label %141

141:                                              ; preds = %135
  %142 = icmp eq %"class.blink::Member.240"* %136, %8
  br i1 %142, label %345, label %143

143:                                              ; preds = %141, %168
  %144 = phi %"class.blink::Member.240"* [ %169, %168 ], [ %136, %141 ]
  %145 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %2, align 8
  %146 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %126, align 8
  %147 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %144, i64 0, i32 0, i32 0
  %148 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %147, align 8
  %149 = tail call zeroext i1 %145(%"class.blink::PerformanceEntry"* %146, %"class.blink::PerformanceEntry"* %148) #10
  br i1 %149, label %150, label %168

150:                                              ; preds = %143
  %151 = bitcast %"class.blink::Member.240"* %144 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = load i64, i64* %10, align 8
  store atomic i64 %153, i64* %151 monotonic, align 8
  store atomic i64 %152, i64* %10 monotonic, align 8
  %154 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %160, label %156

156:                                              ; preds = %150
  %157 = bitcast %"class.blink::Member.240"* %144 to i8**
  %158 = load i8*, i8** %157, align 8
  %159 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %158) #10
  br label %160

160:                                              ; preds = %156, %150
  %161 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %166, label %163

163:                                              ; preds = %160
  %164 = load i8*, i8** %11, align 8
  %165 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %164) #10
  br label %166

166:                                              ; preds = %160, %163
  %167 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %144, i64 1
  br label %171

168:                                              ; preds = %143
  %169 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %144, i64 1
  %170 = icmp eq %"class.blink::Member.240"* %169, %8
  br i1 %170, label %345, label %143

171:                                              ; preds = %166, %135
  %172 = phi %"class.blink::Member.240"* [ %136, %135 ], [ %167, %166 ]
  %173 = icmp eq %"class.blink::Member.240"* %172, %8
  br i1 %173, label %345, label %174

174:                                              ; preds = %171, %209
  %175 = phi %"class.blink::Member.240"* [ %184, %209 ], [ %172, %171 ]
  %176 = phi %"class.blink::Member.240"* [ %189, %209 ], [ %8, %171 ]
  br label %177

177:                                              ; preds = %177, %174
  %178 = phi %"class.blink::Member.240"* [ %175, %174 ], [ %184, %177 ]
  %179 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %2, align 8
  %180 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %126, align 8
  %181 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %178, i64 0, i32 0, i32 0
  %182 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %181, align 8
  %183 = tail call zeroext i1 %179(%"class.blink::PerformanceEntry"* %180, %"class.blink::PerformanceEntry"* %182) #10
  %184 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %178, i64 1
  br i1 %183, label %185, label %177

185:                                              ; preds = %177, %185
  %186 = phi %"class.blink::Member.240"* [ %189, %185 ], [ %176, %177 ]
  %187 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %2, align 8
  %188 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %126, align 8
  %189 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %186, i64 -1
  %190 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %189, i64 0, i32 0, i32 0
  %191 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %190, align 8
  %192 = tail call zeroext i1 %187(%"class.blink::PerformanceEntry"* %188, %"class.blink::PerformanceEntry"* %191) #10
  br i1 %192, label %185, label %193

193:                                              ; preds = %185
  %194 = icmp ult %"class.blink::Member.240"* %178, %189
  br i1 %194, label %195, label %15

195:                                              ; preds = %193
  %196 = bitcast %"class.blink::Member.240"* %178 to i64*
  %197 = load i64, i64* %196, align 8
  %198 = bitcast %"class.blink::Member.240"* %189 to i64*
  %199 = load i64, i64* %198, align 8
  store atomic i64 %199, i64* %196 monotonic, align 8
  store atomic i64 %197, i64* %198 monotonic, align 8
  %200 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %206, label %202

202:                                              ; preds = %195
  %203 = bitcast %"class.blink::Member.240"* %178 to i8**
  %204 = load i8*, i8** %203, align 8
  %205 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %204) #10
  br label %206

206:                                              ; preds = %202, %195
  %207 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %210

209:                                              ; preds = %206, %210
  br label %174

210:                                              ; preds = %206
  %211 = bitcast %"class.blink::Member.240"* %189 to i8**
  %212 = load i8*, i8** %211, align 8
  %213 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %212) #10
  br label %209

214:                                              ; preds = %131
  %215 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %2, align 8
  %216 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %133, i64 0, i32 0, i32 0
  %217 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %216, align 8
  %218 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %128, align 8
  %219 = tail call zeroext i1 %215(%"class.blink::PerformanceEntry"* %217, %"class.blink::PerformanceEntry"* %218) #10
  br i1 %219, label %220, label %131

220:                                              ; preds = %214
  %221 = bitcast %"class.blink::Member.240"* %16 to i64*
  %222 = load i64, i64* %221, align 8
  %223 = bitcast %"class.blink::Member.240"* %133 to i64*
  %224 = load i64, i64* %223, align 8
  store atomic i64 %224, i64* %221 monotonic, align 8
  store atomic i64 %222, i64* %223 monotonic, align 8
  %225 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %231, label %227

227:                                              ; preds = %220
  %228 = bitcast %"class.blink::Member.240"* %16 to i8**
  %229 = load i8*, i8** %228, align 8
  %230 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %229) #10
  br label %231

231:                                              ; preds = %227, %220
  %232 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %238, label %234

234:                                              ; preds = %231
  %235 = bitcast %"class.blink::Member.240"* %133 to i8**
  %236 = load i8*, i8** %235, align 8
  %237 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %236) #10
  br label %238

238:                                              ; preds = %231, %234
  %239 = add i32 %124, 1
  br label %240

240:                                              ; preds = %123, %238
  %241 = phi i32 [ %239, %238 ], [ %124, %123 ]
  %242 = phi %"class.blink::Member.240"* [ %133, %238 ], [ %8, %123 ]
  %243 = ptrtoint %"class.blink::Member.240"* %16 to i64
  %244 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %16, i64 1
  %245 = icmp ult %"class.blink::Member.240"* %244, %242
  br i1 %245, label %246, label %292

246:                                              ; preds = %240, %288
  %247 = phi %"class.blink::Member.240"* [ %291, %288 ], [ %115, %240 ]
  %248 = phi i32 [ %289, %288 ], [ %241, %240 ]
  %249 = phi %"class.blink::Member.240"* [ %259, %288 ], [ %244, %240 ]
  %250 = phi %"class.blink::Member.240"* [ %263, %288 ], [ %242, %240 ]
  %251 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %247, i64 0, i32 0, i32 0
  br label %252

252:                                              ; preds = %252, %246
  %253 = phi %"class.blink::Member.240"* [ %249, %246 ], [ %259, %252 ]
  %254 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %2, align 8
  %255 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %253, i64 0, i32 0, i32 0
  %256 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %255, align 8
  %257 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %251, align 8
  %258 = tail call zeroext i1 %254(%"class.blink::PerformanceEntry"* %256, %"class.blink::PerformanceEntry"* %257) #10
  %259 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %253, i64 1
  br i1 %258, label %252, label %260

260:                                              ; preds = %252, %260
  %261 = phi %"class.blink::Member.240"* [ %263, %260 ], [ %250, %252 ]
  %262 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %2, align 8
  %263 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %261, i64 -1
  %264 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %263, i64 0, i32 0, i32 0
  %265 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %264, align 8
  %266 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %251, align 8
  %267 = tail call zeroext i1 %262(%"class.blink::PerformanceEntry"* %265, %"class.blink::PerformanceEntry"* %266) #10
  br i1 %267, label %268, label %260

268:                                              ; preds = %260
  %269 = icmp ugt %"class.blink::Member.240"* %253, %263
  br i1 %269, label %292, label %270

270:                                              ; preds = %268
  %271 = bitcast %"class.blink::Member.240"* %253 to i64*
  %272 = load i64, i64* %271, align 8
  %273 = bitcast %"class.blink::Member.240"* %263 to i64*
  %274 = load i64, i64* %273, align 8
  store atomic i64 %274, i64* %271 monotonic, align 8
  store atomic i64 %272, i64* %273 monotonic, align 8
  %275 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %281, label %277

277:                                              ; preds = %270
  %278 = bitcast %"class.blink::Member.240"* %253 to i8**
  %279 = load i8*, i8** %278, align 8
  %280 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %279) #10
  br label %281

281:                                              ; preds = %277, %270
  %282 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %288, label %284

284:                                              ; preds = %281
  %285 = bitcast %"class.blink::Member.240"* %263 to i8**
  %286 = load i8*, i8** %285, align 8
  %287 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %286) #10
  br label %288

288:                                              ; preds = %281, %284
  %289 = add i32 %248, 1
  %290 = icmp eq %"class.blink::Member.240"* %247, %253
  %291 = select i1 %290, %"class.blink::Member.240"* %263, %"class.blink::Member.240"* %247
  br label %246

292:                                              ; preds = %268, %240
  %293 = phi %"class.blink::Member.240"* [ %115, %240 ], [ %247, %268 ]
  %294 = phi i32 [ %241, %240 ], [ %248, %268 ]
  %295 = phi %"class.blink::Member.240"* [ %244, %240 ], [ %253, %268 ]
  %296 = icmp eq %"class.blink::Member.240"* %295, %293
  br i1 %296, label %324, label %297

297:                                              ; preds = %292
  %298 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %2, align 8
  %299 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %293, i64 0, i32 0, i32 0
  %300 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %299, align 8
  %301 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %295, i64 0, i32 0, i32 0
  %302 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %301, align 8
  %303 = tail call zeroext i1 %298(%"class.blink::PerformanceEntry"* %300, %"class.blink::PerformanceEntry"* %302) #10
  br i1 %303, label %304, label %324

304:                                              ; preds = %297
  %305 = bitcast %"class.blink::Member.240"* %295 to i64*
  %306 = load i64, i64* %305, align 8
  %307 = bitcast %"class.blink::Member.240"* %293 to i64*
  %308 = load i64, i64* %307, align 8
  store atomic i64 %308, i64* %305 monotonic, align 8
  store atomic i64 %306, i64* %307 monotonic, align 8
  %309 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %315, label %311

311:                                              ; preds = %304
  %312 = bitcast %"class.blink::Member.240"* %295 to i8**
  %313 = load i8*, i8** %312, align 8
  %314 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %313) #10
  br label %315

315:                                              ; preds = %311, %304
  %316 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %322, label %318

318:                                              ; preds = %315
  %319 = bitcast %"class.blink::Member.240"* %293 to i8**
  %320 = load i8*, i8** %319, align 8
  %321 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %320) #10
  br label %322

322:                                              ; preds = %315, %318
  %323 = add i32 %294, 1
  br label %324

324:                                              ; preds = %292, %322, %297
  %325 = phi i32 [ %323, %322 ], [ %294, %297 ], [ %294, %292 ]
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %327, label %334

327:                                              ; preds = %324
  %328 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEbT0_SA_T_(%"class.blink::Member.240"* %16, %"class.blink::Member.240"* %295, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8) %2)
  %329 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %295, i64 1
  %330 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEbT0_SA_T_(%"class.blink::Member.240"* %329, %"class.blink::Member.240"* %5, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8) %2)
  br i1 %330, label %331, label %333

331:                                              ; preds = %327
  br i1 %328, label %345, label %332

332:                                              ; preds = %331, %343
  br label %4

333:                                              ; preds = %327
  br i1 %328, label %341, label %334

334:                                              ; preds = %333, %324
  %335 = ptrtoint %"class.blink::Member.240"* %295 to i64
  %336 = sub i64 %335, %243
  %337 = sub i64 %12, %335
  %338 = icmp slt i64 %336, %337
  br i1 %338, label %339, label %343

339:                                              ; preds = %334
  tail call void @_ZNSt3__16__sortIRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEvT0_SA_T_(%"class.blink::Member.240"* %16, %"class.blink::Member.240"* %295, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8) %2)
  %340 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %295, i64 1
  br label %341

341:                                              ; preds = %339, %333
  %342 = phi %"class.blink::Member.240"* [ %329, %333 ], [ %340, %339 ]
  br label %13

343:                                              ; preds = %334
  %344 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %295, i64 1
  tail call void @_ZNSt3__16__sortIRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEvT0_SA_T_(%"class.blink::Member.240"* %344, %"class.blink::Member.240"* %5, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8) %2)
  br label %332

345:                                              ; preds = %331, %171, %15, %15, %141, %168, %109, %63, %42, %39, %20, %46, %50, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort3IRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_T_(%"class.blink::Member.240"*, %"class.blink::Member.240"*, %"class.blink::Member.240"*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %5 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %3, align 8
  %6 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %0, i64 0, i32 0, i32 0
  %9 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %8, align 8
  %10 = tail call zeroext i1 %5(%"class.blink::PerformanceEntry"* %7, %"class.blink::PerformanceEntry"* %9) #10
  %11 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %3, align 8
  %12 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %2, i64 0, i32 0, i32 0
  %13 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %12, align 8
  %14 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %6, align 8
  %15 = tail call zeroext i1 %11(%"class.blink::PerformanceEntry"* %13, %"class.blink::PerformanceEntry"* %14) #10
  br i1 %10, label %57, label %16

16:                                               ; preds = %4
  br i1 %15, label %17, label %114

17:                                               ; preds = %16
  %18 = bitcast %"class.blink::Member.240"* %1 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.blink::Member.240"* %2 to i64*
  %21 = load i64, i64* %20, align 8
  store atomic i64 %21, i64* %18 monotonic, align 8
  store atomic i64 %19, i64* %20 monotonic, align 8
  %22 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %17
  %25 = bitcast %"class.blink::Member.240"* %1 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %24, %17
  %29 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %35, label %31

31:                                               ; preds = %28
  %32 = bitcast %"class.blink::Member.240"* %2 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %33) #10
  br label %35

35:                                               ; preds = %28, %31
  %36 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %3, align 8
  %37 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %6, align 8
  %38 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %8, align 8
  %39 = tail call zeroext i1 %36(%"class.blink::PerformanceEntry"* %37, %"class.blink::PerformanceEntry"* %38) #10
  br i1 %39, label %40, label %114

40:                                               ; preds = %35
  %41 = bitcast %"class.blink::Member.240"* %0 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = load i64, i64* %18, align 8
  store atomic i64 %43, i64* %41 monotonic, align 8
  store atomic i64 %42, i64* %18 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.blink::Member.240"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %46, %40
  %51 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %114, label %53

53:                                               ; preds = %50
  %54 = bitcast %"class.blink::Member.240"* %1 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %55) #10
  br label %114

57:                                               ; preds = %4
  %58 = bitcast %"class.blink::Member.240"* %0 to i64*
  %59 = load i64, i64* %58, align 8
  br i1 %15, label %60, label %76

60:                                               ; preds = %57
  %61 = bitcast %"class.blink::Member.240"* %2 to i64*
  %62 = load i64, i64* %61, align 8
  store atomic i64 %62, i64* %58 monotonic, align 8
  store atomic i64 %59, i64* %61 monotonic, align 8
  %63 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %69, label %65

65:                                               ; preds = %60
  %66 = bitcast %"class.blink::Member.240"* %0 to i8**
  %67 = load i8*, i8** %66, align 8
  %68 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %67) #10
  br label %69

69:                                               ; preds = %65, %60
  %70 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %114, label %72

72:                                               ; preds = %69
  %73 = bitcast %"class.blink::Member.240"* %2 to i8**
  %74 = load i8*, i8** %73, align 8
  %75 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %74) #10
  br label %114

76:                                               ; preds = %57
  %77 = bitcast %"class.blink::Member.240"* %1 to i64*
  %78 = load i64, i64* %77, align 8
  store atomic i64 %78, i64* %58 monotonic, align 8
  store atomic i64 %59, i64* %77 monotonic, align 8
  %79 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %85, label %81

81:                                               ; preds = %76
  %82 = bitcast %"class.blink::Member.240"* %0 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %83) #10
  br label %85

85:                                               ; preds = %81, %76
  %86 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %92, label %88

88:                                               ; preds = %85
  %89 = bitcast %"class.blink::Member.240"* %1 to i8**
  %90 = load i8*, i8** %89, align 8
  %91 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %90) #10
  br label %92

92:                                               ; preds = %85, %88
  %93 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %3, align 8
  %94 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %12, align 8
  %95 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %6, align 8
  %96 = tail call zeroext i1 %93(%"class.blink::PerformanceEntry"* %94, %"class.blink::PerformanceEntry"* %95) #10
  br i1 %96, label %97, label %114

97:                                               ; preds = %92
  %98 = load i64, i64* %77, align 8
  %99 = bitcast %"class.blink::Member.240"* %2 to i64*
  %100 = load i64, i64* %99, align 8
  store atomic i64 %100, i64* %77 monotonic, align 8
  store atomic i64 %98, i64* %99 monotonic, align 8
  %101 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %107, label %103

103:                                              ; preds = %97
  %104 = bitcast %"class.blink::Member.240"* %1 to i8**
  %105 = load i8*, i8** %104, align 8
  %106 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %105) #10
  br label %107

107:                                              ; preds = %103, %97
  %108 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %107
  %111 = bitcast %"class.blink::Member.240"* %2 to i8**
  %112 = load i8*, i8** %111, align 8
  %113 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %112) #10
  br label %114

114:                                              ; preds = %110, %107, %72, %69, %53, %50, %92, %35, %16
  %115 = phi i32 [ 0, %16 ], [ 1, %35 ], [ 1, %92 ], [ 2, %50 ], [ 2, %53 ], [ 1, %69 ], [ 1, %72 ], [ 2, %107 ], [ 2, %110 ]
  ret i32 %115
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_SA_T_(%"class.blink::Member.240"*, %"class.blink::Member.240"*, %"class.blink::Member.240"*, %"class.blink::Member.240"*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %6 = tail call i32 @_ZNSt3__17__sort3IRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_T_(%"class.blink::Member.240"* %0, %"class.blink::Member.240"* %1, %"class.blink::Member.240"* %2, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8) %4)
  %7 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %4, align 8
  %8 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %3, i64 0, i32 0, i32 0
  %9 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %2, i64 0, i32 0, i32 0
  %11 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %10, align 8
  %12 = tail call zeroext i1 %7(%"class.blink::PerformanceEntry"* %9, %"class.blink::PerformanceEntry"* %11) #10
  br i1 %12, label %13, label %81

13:                                               ; preds = %5
  %14 = bitcast %"class.blink::Member.240"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.blink::Member.240"* %3 to i64*
  %17 = load i64, i64* %16, align 8
  store atomic i64 %17, i64* %14 monotonic, align 8
  store atomic i64 %15, i64* %16 monotonic, align 8
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.blink::Member.240"* %2 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %24

24:                                               ; preds = %20, %13
  %25 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.240"* %3 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %29) #10
  br label %31

31:                                               ; preds = %24, %27
  %32 = add i32 %6, 1
  %33 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %4, align 8
  %34 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %10, align 8
  %35 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %1, i64 0, i32 0, i32 0
  %36 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %35, align 8
  %37 = tail call zeroext i1 %33(%"class.blink::PerformanceEntry"* %34, %"class.blink::PerformanceEntry"* %36) #10
  br i1 %37, label %38, label %81

38:                                               ; preds = %31
  %39 = bitcast %"class.blink::Member.240"* %1 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = load i64, i64* %14, align 8
  store atomic i64 %41, i64* %39 monotonic, align 8
  store atomic i64 %40, i64* %14 monotonic, align 8
  %42 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %38
  %45 = bitcast %"class.blink::Member.240"* %1 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %46) #10
  br label %48

48:                                               ; preds = %44, %38
  %49 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %55, label %51

51:                                               ; preds = %48
  %52 = bitcast %"class.blink::Member.240"* %2 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #10
  br label %55

55:                                               ; preds = %48, %51
  %56 = add i32 %6, 2
  %57 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %4, align 8
  %58 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %35, align 8
  %59 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %0, i64 0, i32 0, i32 0
  %60 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %59, align 8
  %61 = tail call zeroext i1 %57(%"class.blink::PerformanceEntry"* %58, %"class.blink::PerformanceEntry"* %60) #10
  br i1 %61, label %62, label %81

62:                                               ; preds = %55
  %63 = bitcast %"class.blink::Member.240"* %0 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = load i64, i64* %39, align 8
  store atomic i64 %65, i64* %63 monotonic, align 8
  store atomic i64 %64, i64* %39 monotonic, align 8
  %66 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %72, label %68

68:                                               ; preds = %62
  %69 = bitcast %"class.blink::Member.240"* %0 to i8**
  %70 = load i8*, i8** %69, align 8
  %71 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %70) #10
  br label %72

72:                                               ; preds = %68, %62
  %73 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %79, label %75

75:                                               ; preds = %72
  %76 = bitcast %"class.blink::Member.240"* %1 to i8**
  %77 = load i8*, i8** %76, align 8
  %78 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %77) #10
  br label %79

79:                                               ; preds = %72, %75
  %80 = add i32 %6, 3
  br label %81

81:                                               ; preds = %31, %79, %55, %5
  %82 = phi i32 [ %80, %79 ], [ %56, %55 ], [ %32, %31 ], [ %6, %5 ]
  ret i32 %82
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_SA_SA_T_(%"class.blink::Member.240"*, %"class.blink::Member.240"*, %"class.blink::Member.240"*, %"class.blink::Member.240"*, %"class.blink::Member.240"*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %7 = tail call i32 @_ZNSt3__17__sort4IRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_SA_T_(%"class.blink::Member.240"* %0, %"class.blink::Member.240"* %1, %"class.blink::Member.240"* %2, %"class.blink::Member.240"* %3, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8) %5)
  %8 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %5, align 8
  %9 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %4, i64 0, i32 0, i32 0
  %10 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %3, i64 0, i32 0, i32 0
  %12 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %11, align 8
  %13 = tail call zeroext i1 %8(%"class.blink::PerformanceEntry"* %10, %"class.blink::PerformanceEntry"* %12) #10
  br i1 %13, label %14, label %106

14:                                               ; preds = %6
  %15 = bitcast %"class.blink::Member.240"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.blink::Member.240"* %4 to i64*
  %18 = load i64, i64* %17, align 8
  store atomic i64 %18, i64* %15 monotonic, align 8
  store atomic i64 %16, i64* %17 monotonic, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %14
  %22 = bitcast %"class.blink::Member.240"* %3 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %23) #10
  br label %25

25:                                               ; preds = %21, %14
  %26 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %25
  %29 = bitcast %"class.blink::Member.240"* %4 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %30) #10
  br label %32

32:                                               ; preds = %25, %28
  %33 = add i32 %7, 1
  %34 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %5, align 8
  %35 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %11, align 8
  %36 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %2, i64 0, i32 0, i32 0
  %37 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %36, align 8
  %38 = tail call zeroext i1 %34(%"class.blink::PerformanceEntry"* %35, %"class.blink::PerformanceEntry"* %37) #10
  br i1 %38, label %39, label %106

39:                                               ; preds = %32
  %40 = bitcast %"class.blink::Member.240"* %2 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = load i64, i64* %15, align 8
  store atomic i64 %42, i64* %40 monotonic, align 8
  store atomic i64 %41, i64* %15 monotonic, align 8
  %43 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %39
  %46 = bitcast %"class.blink::Member.240"* %2 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #10
  br label %49

49:                                               ; preds = %45, %39
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %49
  %53 = bitcast %"class.blink::Member.240"* %3 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %54) #10
  br label %56

56:                                               ; preds = %49, %52
  %57 = add i32 %7, 2
  %58 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %5, align 8
  %59 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %36, align 8
  %60 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %1, i64 0, i32 0, i32 0
  %61 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %60, align 8
  %62 = tail call zeroext i1 %58(%"class.blink::PerformanceEntry"* %59, %"class.blink::PerformanceEntry"* %61) #10
  br i1 %62, label %63, label %106

63:                                               ; preds = %56
  %64 = bitcast %"class.blink::Member.240"* %1 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = load i64, i64* %40, align 8
  store atomic i64 %66, i64* %64 monotonic, align 8
  store atomic i64 %65, i64* %40 monotonic, align 8
  %67 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %73, label %69

69:                                               ; preds = %63
  %70 = bitcast %"class.blink::Member.240"* %1 to i8**
  %71 = load i8*, i8** %70, align 8
  %72 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %71) #10
  br label %73

73:                                               ; preds = %69, %63
  %74 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %80, label %76

76:                                               ; preds = %73
  %77 = bitcast %"class.blink::Member.240"* %2 to i8**
  %78 = load i8*, i8** %77, align 8
  %79 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %78) #10
  br label %80

80:                                               ; preds = %73, %76
  %81 = add i32 %7, 3
  %82 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %5, align 8
  %83 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %60, align 8
  %84 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %0, i64 0, i32 0, i32 0
  %85 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %84, align 8
  %86 = tail call zeroext i1 %82(%"class.blink::PerformanceEntry"* %83, %"class.blink::PerformanceEntry"* %85) #10
  br i1 %86, label %87, label %106

87:                                               ; preds = %80
  %88 = bitcast %"class.blink::Member.240"* %0 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = load i64, i64* %64, align 8
  store atomic i64 %90, i64* %88 monotonic, align 8
  store atomic i64 %89, i64* %64 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %97, label %93

93:                                               ; preds = %87
  %94 = bitcast %"class.blink::Member.240"* %0 to i8**
  %95 = load i8*, i8** %94, align 8
  %96 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %95) #10
  br label %97

97:                                               ; preds = %93, %87
  %98 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %104, label %100

100:                                              ; preds = %97
  %101 = bitcast %"class.blink::Member.240"* %1 to i8**
  %102 = load i8*, i8** %101, align 8
  %103 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %102) #10
  br label %104

104:                                              ; preds = %97, %100
  %105 = add i32 %7, 4
  br label %106

106:                                              ; preds = %32, %80, %104, %56, %6
  %107 = phi i32 [ %105, %104 ], [ %81, %80 ], [ %57, %56 ], [ %33, %32 ], [ %7, %6 ]
  ret i32 %107
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEbT0_SA_T_(%"class.blink::Member.240"*, %"class.blink::Member.240"*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = ptrtoint %"class.blink::Member.240"* %1 to i64
  %5 = ptrtoint %"class.blink::Member.240"* %0 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  switch i64 %7, label %49 [
    i64 0, label %106
    i64 1, label %106
    i64 2, label %8
    i64 3, label %34
    i64 4, label %38
    i64 5, label %43
  ]

8:                                                ; preds = %3
  %9 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %2, align 8
  %10 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %1, i64 -1
  %11 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %0, i64 0, i32 0, i32 0
  %14 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %13, align 8
  %15 = tail call zeroext i1 %9(%"class.blink::PerformanceEntry"* %12, %"class.blink::PerformanceEntry"* %14) #10
  br i1 %15, label %16, label %106

16:                                               ; preds = %8
  %17 = bitcast %"class.blink::Member.240"* %0 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.blink::Member.240"* %10 to i64*
  %20 = load i64, i64* %19, align 8
  store atomic i64 %20, i64* %17 monotonic, align 8
  store atomic i64 %18, i64* %19 monotonic, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %27, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.blink::Member.240"* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %25) #10
  br label %27

27:                                               ; preds = %23, %16
  %28 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %106, label %30

30:                                               ; preds = %27
  %31 = bitcast %"class.blink::Member.240"* %10 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %32) #10
  br label %106

34:                                               ; preds = %3
  %35 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %0, i64 1
  %36 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %1, i64 -1
  %37 = tail call i32 @_ZNSt3__17__sort3IRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_T_(%"class.blink::Member.240"* %0, %"class.blink::Member.240"* %35, %"class.blink::Member.240"* %36, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8) %2)
  br label %106

38:                                               ; preds = %3
  %39 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %0, i64 1
  %40 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %0, i64 2
  %41 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %1, i64 -1
  %42 = tail call i32 @_ZNSt3__17__sort4IRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_SA_T_(%"class.blink::Member.240"* %0, %"class.blink::Member.240"* %39, %"class.blink::Member.240"* %40, %"class.blink::Member.240"* %41, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8) %2)
  br label %106

43:                                               ; preds = %3
  %44 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %0, i64 1
  %45 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %0, i64 2
  %46 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %0, i64 3
  %47 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %1, i64 -1
  %48 = tail call i32 @_ZNSt3__17__sort5IRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_SA_SA_T_(%"class.blink::Member.240"* %0, %"class.blink::Member.240"* %44, %"class.blink::Member.240"* %45, %"class.blink::Member.240"* %46, %"class.blink::Member.240"* %47, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8) %2)
  br label %106

49:                                               ; preds = %3
  %50 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %0, i64 2
  %51 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %0, i64 1
  %52 = tail call i32 @_ZNSt3__17__sort3IRPFbPN5blink16PerformanceEntryES3_EPNS1_6MemberIS2_EEEEjT0_SA_SA_T_(%"class.blink::Member.240"* %0, %"class.blink::Member.240"* %51, %"class.blink::Member.240"* %50, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** dereferenceable(8) %2)
  %53 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %0, i64 3
  %54 = icmp eq %"class.blink::Member.240"* %53, %1
  br i1 %54, label %106, label %55

55:                                               ; preds = %49, %99
  %56 = phi %"class.blink::Member.240"* [ %101, %99 ], [ %53, %49 ]
  %57 = phi i32 [ %100, %99 ], [ 0, %49 ]
  %58 = phi %"class.blink::Member.240"* [ %56, %99 ], [ %50, %49 ]
  %59 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %2, align 8
  %60 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %56, i64 0, i32 0, i32 0
  %61 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %58, i64 0, i32 0, i32 0
  %63 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %62, align 8
  %64 = tail call zeroext i1 %59(%"class.blink::PerformanceEntry"* %61, %"class.blink::PerformanceEntry"* %63) #10
  br i1 %64, label %65, label %99

65:                                               ; preds = %55
  %66 = bitcast %"class.blink::Member.240"* %56 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = inttoptr i64 %67 to %"class.blink::PerformanceEntry"*
  br label %69

69:                                               ; preds = %82, %65
  %70 = phi %"class.blink::Member.240"* [ %56, %65 ], [ %71, %82 ]
  %71 = phi %"class.blink::Member.240"* [ %58, %65 ], [ %84, %82 ]
  %72 = bitcast %"class.blink::Member.240"* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.blink::Member.240"* %70 to i64*
  store atomic i64 %73, i64* %74 monotonic, align 8
  %75 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %80, label %77

77:                                               ; preds = %69
  %78 = inttoptr i64 %73 to i8*
  %79 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %78) #10
  br label %80

80:                                               ; preds = %69, %77
  %81 = icmp eq %"class.blink::Member.240"* %71, %0
  br i1 %81, label %88, label %82

82:                                               ; preds = %80
  %83 = load i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)*, i1 (%"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"*)** %2, align 8
  %84 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %71, i64 -1
  %85 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %84, i64 0, i32 0, i32 0
  %86 = load %"class.blink::PerformanceEntry"*, %"class.blink::PerformanceEntry"** %85, align 8
  %87 = tail call zeroext i1 %83(%"class.blink::PerformanceEntry"* %68, %"class.blink::PerformanceEntry"* %86) #10
  br i1 %87, label %69, label %88

88:                                               ; preds = %80, %82
  %89 = phi %"class.blink::Member.240"* [ %71, %82 ], [ %0, %80 ]
  %90 = bitcast %"class.blink::Member.240"* %89 to i64*
  store atomic i64 %67, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %88
  %94 = inttoptr i64 %67 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #10
  br label %96

96:                                               ; preds = %88, %93
  %97 = add i32 %57, 1
  %98 = icmp eq i32 %97, 8
  br i1 %98, label %103, label %99

99:                                               ; preds = %96, %55
  %100 = phi i32 [ %97, %96 ], [ %57, %55 ]
  %101 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %56, i64 1
  %102 = icmp eq %"class.blink::Member.240"* %101, %1
  br i1 %102, label %106, label %55

103:                                              ; preds = %96
  %104 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %56, i64 1
  %105 = icmp eq %"class.blink::Member.240"* %104, %1
  br label %106

106:                                              ; preds = %99, %103, %49, %30, %27, %8, %3, %3, %43, %38, %34
  %107 = phi i1 [ true, %43 ], [ true, %38 ], [ true, %34 ], [ true, %3 ], [ true, %3 ], [ true, %8 ], [ true, %27 ], [ true, %30 ], [ true, %49 ], [ %105, %103 ], [ true, %99 ]
  ret i1 %107
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.237"*, %"class.blink::PerformanceEntry"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.237", %"class.WTF::Vector.237"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.237", %"class.WTF::Vector.237"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_16PerformanceEntryEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.237"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.237", %"class.WTF::Vector.237"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.240"*, %"class.blink::Member.240"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.240", %"class.blink::Member.240"* %16, i64 %18
  %20 = bitcast %"class.blink::PerformanceEntry"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.240"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

declare void @_ZN5blink28PerformanceObserverEntryListC1ERKNS_10HeapVectorINS_6MemberINS_16PerformanceEntryEEELj0EEE(%"class.blink::PerformanceObserverEntryList"*, %"class.blink::HeapVector"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_29V8PerformanceObserverCallbackEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CallbackFunctionBase"*
  tail call void @_ZNK5blink20CallbackFunctionBase5TraceEPNS_7VisitorE(%"class.blink::CallbackFunctionBase"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZNK5blink20CallbackFunctionBase5TraceEPNS_7VisitorE(%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Visitor14HandleWeakCellINS_11PerformanceEEEvRKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Performance"**
  %4 = load %"class.blink::Performance"*, %"class.blink::Performance"** %3, align 8
  %5 = ptrtoint %"class.blink::Performance"* %4 to i64
  switch i64 %5, label %6 [
    i64 0, label %27
    i64 -1, label %27
  ]

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #10
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #10
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %27, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::Performance", %"class.blink::Performance"* %4, i64 -1, i32 29
  %20 = bitcast %"class.blink::Member.301"* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = bitcast i8* %1 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  br label %27

27:                                               ; preds = %18, %2, %2, %13, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11PerformanceEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Performance"*
  %4 = bitcast i8* %1 to void (%"class.blink::Performance"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Performance"*, %"class.blink::Visitor"*)**, void (%"class.blink::Performance"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Performance"*, %"class.blink::Visitor"*)*, void (%"class.blink::Performance"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Performance"*, %"class.blink::Visitor"*)*, void (%"class.blink::Performance"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Performance"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!6 = distinct !{!6, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!9 = distinct !{!9, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!10 = !{!"branch_weights", i32 2000, i32 1}
