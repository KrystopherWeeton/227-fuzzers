; ModuleID = '../../native_client/src/trusted/desc/nacl_desc_imc_shm.c'
source_filename = "../../native_client/src/trusted/desc/nacl_desc_imc_shm.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.NaClDescVtbl = type { %struct.NaClRefCountVtbl, i64 (%struct.NaClDesc*, %struct.NaClDescEffector*, i8*, i64, i32, i32, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i64 (%struct.NaClDesc*, i64, i32)*, i64 (%struct.NaClDesc*, i8*, i64, i64)*, i64 (%struct.NaClDesc*, i8*, i64, i64)*, i32 (%struct.NaClDesc*, %struct.nacl_abi_stat*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i32)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i32 (%struct.NaClDesc*, i64*, i64*)*, i32 (%struct.NaClDesc*, %struct.NaClDescXferState*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, %struct.NaClDesc*)*, i32 (%struct.NaClDesc*, %struct.NaClDesc*, %struct.nacl_abi_timespec*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)*, i32 (%struct.NaClDesc*, %struct.NaClDesc**)*, i32 (%struct.NaClDesc*, %struct.NaClDesc**)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i32, i32, i8*)*, i32 (%struct.NaClDesc*, i32*, i8*)*, void (%struct.NaClDesc*, i32)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 }
%struct.NaClRefCountVtbl = type { void (%struct.NaClRefCount*)* }
%struct.NaClRefCount = type { %struct.NaClRefCountVtbl*, %struct.NaClFastMutex, i64 }
%struct.NaClFastMutex = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.NaClDesc = type { %struct.NaClRefCount, i32, i32, i32, i8* }
%struct.NaClDescEffector = type { %struct.NaClDescEffectorVtbl* }
%struct.NaClDescEffectorVtbl = type { void (%struct.NaClDescEffector*, i64, i64)* }
%struct.nacl_abi_stat = type { i64, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i64, i64, i64, i64, i64 }
%struct.NaClDescXferState = type { i8*, i8*, i32*, i32* }
%struct.nacl_abi_timespec = type { i64, i32 }
%struct.NaClImcTypedMsgHdr = type opaque
%struct.NaClMessageHeader = type { %struct.NaClIOVec*, i32, i32*, i32, i32 }
%struct.NaClIOVec = type { i8*, i64 }
%struct.NaClDescImcShm = type { %struct.NaClDesc, i32, i64 }

@.str = private unnamed_addr constant [69 x i8] c"NaClDescImcShmAllocCtor: requested size 0x%08lx (0x%08ld) too large\0A\00", align 1
@kNaClDescImcShmVtbl = internal constant %struct.NaClDescVtbl { %struct.NaClRefCountVtbl { void (%struct.NaClRefCount*)* @NaClDescImcShmDtor }, i64 (%struct.NaClDesc*, %struct.NaClDescEffector*, i8*, i64, i32, i32, i64)* @NaClDescImcShmMap, i64 (%struct.NaClDesc*, i8*, i64)* @NaClDescReadNotImplemented, i64 (%struct.NaClDesc*, i8*, i64)* @NaClDescWriteNotImplemented, i64 (%struct.NaClDesc*, i64, i32)* @NaClDescSeekNotImplemented, i64 (%struct.NaClDesc*, i8*, i64, i64)* @NaClDescPReadNotImplemented, i64 (%struct.NaClDesc*, i8*, i64, i64)* @NaClDescPWriteNotImplemented, i32 (%struct.NaClDesc*, %struct.nacl_abi_stat*)* @NaClDescImcShmFstat, i32 (%struct.NaClDesc*)* @NaClDescFchdirNotImplemented, i32 (%struct.NaClDesc*, i32)* @NaClDescFchmodNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescFsyncNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescFdatasyncNotImplemented, i32 (%struct.NaClDesc*, i64)* @NaClDescFtruncateNotImplemented, i64 (%struct.NaClDesc*, i8*, i64)* @NaClDescGetdentsNotImplemented, i32 (%struct.NaClDesc*, i64*, i64*)* @NaClDescImcShmExternalizeSize, i32 (%struct.NaClDesc*, %struct.NaClDescXferState*)* @NaClDescImcShmExternalize, i32 (%struct.NaClDesc*)* @NaClDescLockNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescTryLockNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescUnlockNotImplemented, i32 (%struct.NaClDesc*, %struct.NaClDesc*)* @NaClDescWaitNotImplemented, i32 (%struct.NaClDesc*, %struct.NaClDesc*, %struct.nacl_abi_timespec*)* @NaClDescTimedWaitAbsNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescSignalNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescBroadcastNotImplemented, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)* @NaClDescSendMsgNotImplemented, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)* @NaClDescRecvMsgNotImplemented, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)* @NaClDescLowLevelSendMsgNotImplemented, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)* @NaClDescLowLevelRecvMsgNotImplemented, i32 (%struct.NaClDesc*, %struct.NaClDesc**)* @NaClDescConnectAddrNotImplemented, i32 (%struct.NaClDesc*, %struct.NaClDesc**)* @NaClDescAcceptConnNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescPostNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescSemWaitNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescGetValueNotImplemented, i32 (%struct.NaClDesc*, i32, i32, i8*)* @NaClDescSetMetadata, i32 (%struct.NaClDesc*, i32*, i8*)* @NaClDescGetMetadata, void (%struct.NaClDesc*, i32)* @NaClDescSetFlags, i32 (%struct.NaClDesc*)* @NaClDescGetFlags, i32 (%struct.NaClDesc*)* @NaClDescIsattyNotImplemented, i32 7 }, align 8
@kNaClDescVtbl = external constant %struct.NaClDescVtbl, align 8
@.str.1 = private unnamed_addr constant [64 x i8] c"NaClDescImcShmMap: Mapping not NACL_ABI_MAP_SHARED, flags 0x%x\0A\00", align 1
@.str.2 = private unnamed_addr constant [70 x i8] c"NaClDescImcShmMap: Mapping NACL_ABI_MAP_FIXED but start_addr is NULL\0A\00", align 1
@.str.3 = private unnamed_addr constant [68 x i8] c"NaClDescImcShmMap: prot has other bits than PROT_{READ|WRITE|EXEC}\0A\00", align 1
@.str.4 = private unnamed_addr constant [40 x i8] c"NaClDescImcShmMap: no address space?!?\0A\00", align 1
@.str.5 = private unnamed_addr constant [49 x i8] c"NaClDescImcShmMap: total offset exceeds 32-bits\0A\00", align 1
@.str.6 = private unnamed_addr constant [64 x i8] c"NaClDescImcShmMap: NACL_ABI_MAP_FIXED but got %p instead of %p\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClDescImcShmCtor(%struct.NaClDescImcShm*, i32, i64) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.NaClDescImcShm, %struct.NaClDescImcShm* %0, i64 0, i32 0
  %5 = getelementptr inbounds %struct.NaClDescImcShm, %struct.NaClDescImcShm* %0, i64 0, i32 0, i32 0, i32 0
  store %struct.NaClRefCountVtbl* null, %struct.NaClRefCountVtbl** %5, align 8
  %6 = tail call i32 @NaClDescCtor(%struct.NaClDesc* %4) #6
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %24, label %8

8:                                                ; preds = %3
  %9 = icmp slt i64 %2, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %struct.NaClDescImcShm, %struct.NaClDescImcShm* %0, i64 0, i32 1
  store i32 %1, i32* %11, align 8
  %12 = getelementptr inbounds %struct.NaClDescImcShm, %struct.NaClDescImcShm* %0, i64 0, i32 2
  store i64 %2, i64* %12, align 8
  store %struct.NaClRefCountVtbl* getelementptr inbounds (%struct.NaClDescVtbl, %struct.NaClDescVtbl* @kNaClDescImcShmVtbl, i64 0, i32 0), %struct.NaClRefCountVtbl** %5, align 8
  br label %20

13:                                               ; preds = %8
  %14 = load %struct.NaClRefCountVtbl*, %struct.NaClRefCountVtbl** %5, align 8
  %15 = getelementptr inbounds %struct.NaClRefCountVtbl, %struct.NaClRefCountVtbl* %14, i64 0, i32 0
  %16 = load void (%struct.NaClRefCount*)*, void (%struct.NaClRefCount*)** %15, align 8
  %17 = getelementptr inbounds %struct.NaClDescImcShm, %struct.NaClDescImcShm* %0, i64 0, i32 0, i32 0
  tail call void %16(%struct.NaClRefCount* %17) #6
  %18 = bitcast %struct.NaClDescImcShm* %0 to %struct.NaClDescVtbl**
  %19 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %18, align 8
  br label %20

20:                                               ; preds = %10, %13
  %21 = phi %struct.NaClDescVtbl* [ @kNaClDescImcShmVtbl, %10 ], [ %19, %13 ]
  %22 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %21, i64 0, i32 34
  %23 = load void (%struct.NaClDesc*, i32)*, void (%struct.NaClDesc*, i32)** %22, align 8
  tail call void %23(%struct.NaClDesc* %4, i32 2) #6
  br label %24

24:                                               ; preds = %3, %20
  %25 = phi i32 [ 1, %20 ], [ 0, %3 ]
  ret i32 %25
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @NaClDescCtor(%struct.NaClDesc*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClDescImcShmAllocCtor(%struct.NaClDescImcShm*, i64, i32) local_unnamed_addr #0 {
  %4 = icmp slt i64 %1, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str, i64 0, i64 0), i64 %1, i64 %1) #6
  br label %19

6:                                                ; preds = %3
  %7 = tail call i32 @NaClCreateMemoryObject(i64 %1, i32 %2) #6
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %19, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.NaClDescImcShm, %struct.NaClDescImcShm* %0, i64 0, i32 0
  %11 = getelementptr inbounds %struct.NaClDescImcShm, %struct.NaClDescImcShm* %0, i64 0, i32 0, i32 0, i32 0
  store %struct.NaClRefCountVtbl* null, %struct.NaClRefCountVtbl** %11, align 8
  %12 = tail call i32 @NaClDescCtor(%struct.NaClDesc* %10) #6
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.NaClDescImcShm, %struct.NaClDescImcShm* %0, i64 0, i32 1
  store i32 %7, i32* %15, align 8
  %16 = getelementptr inbounds %struct.NaClDescImcShm, %struct.NaClDescImcShm* %0, i64 0, i32 2
  store i64 %1, i64* %16, align 8
  store %struct.NaClRefCountVtbl* getelementptr inbounds (%struct.NaClDescVtbl, %struct.NaClDescVtbl* @kNaClDescImcShmVtbl, i64 0, i32 0), %struct.NaClRefCountVtbl** %11, align 8
  tail call void @NaClDescSetFlags(%struct.NaClDesc* %10, i32 2) #6
  br label %19

17:                                               ; preds = %9
  %18 = tail call i32 @NaClClose(i32 %7) #6
  br label %19

19:                                               ; preds = %14, %17, %6, %5
  %20 = phi i32 [ 0, %5 ], [ 0, %6 ], [ 0, %17 ], [ 1, %14 ]
  ret i32 %20
}

declare void @NaClLog(i32, i8*, ...) local_unnamed_addr #2

declare i32 @NaClCreateMemoryObject(i64, i32) local_unnamed_addr #2

declare i32 @NaClClose(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.NaClDesc* @NaClDescImcShmMake(i32, i64) local_unnamed_addr #0 {
  %3 = tail call noalias i8* @malloc(i64 96) #6
  %4 = icmp eq i8* %3, null
  br i1 %4, label %29, label %5

5:                                                ; preds = %2
  %6 = bitcast i8* %3 to %struct.NaClDesc*
  %7 = bitcast i8* %3 to %struct.NaClRefCountVtbl**
  store %struct.NaClRefCountVtbl* null, %struct.NaClRefCountVtbl** %7, align 8
  %8 = tail call i32 @NaClDescCtor(%struct.NaClDesc* nonnull %6) #6
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %24, label %10

10:                                               ; preds = %5
  %11 = icmp slt i64 %1, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds i8, i8* %3, i64 80
  %14 = bitcast i8* %13 to i32*
  store i32 %0, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %3, i64 88
  %16 = bitcast i8* %15 to i64*
  store i64 %1, i64* %16, align 8
  store %struct.NaClRefCountVtbl* getelementptr inbounds (%struct.NaClDescVtbl, %struct.NaClDescVtbl* @kNaClDescImcShmVtbl, i64 0, i32 0), %struct.NaClRefCountVtbl** %7, align 8
  br label %25

17:                                               ; preds = %10
  %18 = load %struct.NaClRefCountVtbl*, %struct.NaClRefCountVtbl** %7, align 8
  %19 = getelementptr inbounds %struct.NaClRefCountVtbl, %struct.NaClRefCountVtbl* %18, i64 0, i32 0
  %20 = load void (%struct.NaClRefCount*)*, void (%struct.NaClRefCount*)** %19, align 8
  %21 = bitcast i8* %3 to %struct.NaClRefCount*
  tail call void %20(%struct.NaClRefCount* nonnull %21) #6
  %22 = bitcast i8* %3 to %struct.NaClDescVtbl**
  %23 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %22, align 8
  br label %25

24:                                               ; preds = %5
  tail call void @free(i8* nonnull %3) #6
  br label %29

25:                                               ; preds = %17, %12
  %26 = phi %struct.NaClDescVtbl* [ @kNaClDescImcShmVtbl, %12 ], [ %23, %17 ]
  %27 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %26, i64 0, i32 34
  %28 = load void (%struct.NaClDesc*, i32)*, void (%struct.NaClDesc*, i32)** %27, align 8
  tail call void %28(%struct.NaClDesc* nonnull %6, i32 2) #6
  br label %29

29:                                               ; preds = %2, %25, %24
  %30 = phi %struct.NaClDesc* [ %6, %25 ], [ null, %24 ], [ null, %2 ]
  ret %struct.NaClDesc* %30
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClDescImcShmInternalize(%struct.NaClDesc** nocapture, %struct.NaClDescXferState*) local_unnamed_addr #0 {
  %3 = tail call noalias i8* @malloc(i64 96) #6
  %4 = bitcast i8* %3 to %struct.NaClDescImcShm*
  %5 = icmp eq i8* %3, null
  br i1 %5, label %39, label %6

6:                                                ; preds = %2
  %7 = bitcast i8* %3 to %struct.NaClDesc*
  %8 = tail call i32 @NaClDescInternalizeCtor(%struct.NaClDesc* nonnull %7, %struct.NaClDescXferState* %1) #6
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  tail call void @free(i8* nonnull %3) #6
  br label %39

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.NaClDescXferState, %struct.NaClDescXferState* %1, i64 0, i32 2
  %13 = load i32*, i32** %12, align 8
  %14 = getelementptr inbounds %struct.NaClDescXferState, %struct.NaClDescXferState* %1, i64 0, i32 3
  %15 = load i32*, i32** %14, align 8
  %16 = icmp eq i32* %13, %15
  br i1 %16, label %39, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.NaClDescXferState, %struct.NaClDescXferState* %1, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 8
  %21 = getelementptr inbounds %struct.NaClDescXferState, %struct.NaClDescXferState* %1, i64 0, i32 1
  %22 = load i8*, i8** %21, align 8
  %23 = icmp ugt i8* %20, %22
  br i1 %23, label %39, label %24

24:                                               ; preds = %17
  %25 = load i32, i32* %13, align 4
  %26 = getelementptr inbounds i32, i32* %13, i64 1
  store i32* %26, i32** %12, align 8
  store i32 -1, i32* %13, align 4
  %27 = load i8*, i8** %18, align 8
  %28 = bitcast i8* %27 to i64*
  %29 = load i64, i64* %28, align 1
  %30 = getelementptr inbounds i8, i8* %27, i64 8
  store i8* %30, i8** %18, align 8
  %31 = icmp slt i64 %29, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %24
  %33 = getelementptr inbounds i8, i8* %3, i64 80
  %34 = bitcast i8* %33 to i32*
  store i32 %25, i32* %34, align 8
  %35 = getelementptr inbounds i8, i8* %3, i64 88
  %36 = bitcast i8* %35 to i64*
  store i64 %29, i64* %36, align 8
  %37 = bitcast i8* %3 to %struct.NaClRefCountVtbl**
  store %struct.NaClRefCountVtbl* getelementptr inbounds (%struct.NaClDescVtbl, %struct.NaClDescVtbl* @kNaClDescImcShmVtbl, i64 0, i32 0), %struct.NaClRefCountVtbl** %37, align 8
  %38 = bitcast %struct.NaClDesc** %0 to i8**
  store i8* %3, i8** %38, align 8
  br label %43

39:                                               ; preds = %24, %10, %2, %11, %17
  %40 = phi i32 [ -5, %17 ], [ -5, %11 ], [ -12, %2 ], [ -12, %10 ], [ -5, %24 ]
  %41 = phi %struct.NaClDescImcShm* [ %4, %17 ], [ %4, %11 ], [ null, %2 ], [ null, %10 ], [ %4, %24 ]
  %42 = getelementptr inbounds %struct.NaClDescImcShm, %struct.NaClDescImcShm* %41, i64 0, i32 0
  tail call void @NaClDescSafeUnref(%struct.NaClDesc* %42) #6
  br label %43

43:                                               ; preds = %32, %39
  %44 = phi i32 [ %40, %39 ], [ 0, %32 ]
  ret i32 %44
}

declare i32 @NaClDescInternalizeCtor(%struct.NaClDesc*, %struct.NaClDescXferState*) local_unnamed_addr #2

declare void @NaClDescSafeUnref(%struct.NaClDesc*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @NaClDescImcShmDtor(%struct.NaClRefCount*) #0 {
  %2 = getelementptr inbounds %struct.NaClRefCount, %struct.NaClRefCount* %0, i64 1, i32 1, i32 0, i32 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = tail call i32 @NaClClose(i32 %3) #6
  store i32 -1, i32* %2, align 8
  %5 = getelementptr inbounds %struct.NaClRefCount, %struct.NaClRefCount* %0, i64 0, i32 0
  store %struct.NaClRefCountVtbl* getelementptr inbounds (%struct.NaClDescVtbl, %struct.NaClDescVtbl* @kNaClDescVtbl, i64 0, i32 0), %struct.NaClRefCountVtbl** %5, align 8
  %6 = load void (%struct.NaClRefCount*)*, void (%struct.NaClRefCount*)** getelementptr inbounds (%struct.NaClDescVtbl, %struct.NaClDescVtbl* @kNaClDescVtbl, i64 0, i32 0, i32 0), align 8
  tail call void %6(%struct.NaClRefCount* %0) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @NaClDescImcShmMap(%struct.NaClDesc* nocapture readonly, %struct.NaClDescEffector*, i8*, i64, i32, i32, i64) #0 {
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #6
  store i64 -6148914691236517206, i64* %8, align 8
  %10 = and i32 %5, 3
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %13, label %12

12:                                               ; preds = %7
  tail call void (i32, i8*, ...) @NaClLog(i32 -1, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 %5) #6
  br label %51

13:                                               ; preds = %7
  %14 = and i32 %5, 16
  %15 = icmp ne i32 %14, 0
  %16 = icmp eq i8* %2, null
  %17 = and i1 %16, %15
  br i1 %17, label %18, label %19

18:                                               ; preds = %13
  tail call void (i32, i8*, ...) @NaClLog(i32 -1, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.2, i64 0, i64 0)) #6
  br label %19

19:                                               ; preds = %18, %13
  %20 = icmp ugt i32 %4, 7
  br i1 %20, label %21, label %22

21:                                               ; preds = %19
  tail call void (i32, i8*, ...) @NaClLog(i32 -1, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.3, i64 0, i64 0)) #6
  br label %51

22:                                               ; preds = %19
  %23 = icmp eq i32 %14, 0
  br i1 %23, label %24, label %31

24:                                               ; preds = %22
  %25 = call i32 @NaClFindAddressSpace(i64* nonnull %8, i64 %3) #6
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void (i32, i8*, ...) @NaClLog(i32 1, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i64 0, i64 0)) #6
  br label %51

28:                                               ; preds = %24
  %29 = bitcast i64* %8 to i8**
  %30 = load i8*, i8** %29, align 8
  br label %31

31:                                               ; preds = %28, %22
  %32 = phi i8* [ %30, %28 ], [ %2, %22 ]
  %33 = add i64 %3, 65535
  %34 = add i64 %33, %6
  %35 = and i64 %34, -65536
  %36 = icmp sgt i64 %35, 2147483647
  br i1 %36, label %37, label %38

37:                                               ; preds = %31
  call void (i32, i8*, ...) @NaClLog(i32 -1, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.5, i64 0, i64 0)) #6
  br label %51

38:                                               ; preds = %31
  %39 = getelementptr inbounds %struct.NaClDesc, %struct.NaClDesc* %0, i64 1
  %40 = bitcast %struct.NaClDesc* %39 to i32*
  %41 = load i32, i32* %40, align 8
  %42 = call i8* @NaClMap(%struct.NaClDescEffector* %1, i8* %32, i64 %3, i32 %4, i32 17, i32 %41, i64 %6) #6
  %43 = icmp eq i8* %42, inttoptr (i64 -1 to i8*)
  br i1 %43, label %51, label %44

44:                                               ; preds = %38
  %45 = xor i1 %15, true
  %46 = icmp eq i8* %42, %32
  %47 = or i1 %46, %45
  br i1 %47, label %49, label %48

48:                                               ; preds = %44
  call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.6, i64 0, i64 0), i8* %42, i8* %32) #6
  br label %49

49:                                               ; preds = %44, %48
  %50 = ptrtoint i8* %32 to i64
  br label %51

51:                                               ; preds = %38, %49, %37, %27, %21, %12
  %52 = phi i64 [ -22, %12 ], [ -22, %21 ], [ -75, %37 ], [ %50, %49 ], [ -12, %27 ], [ -1073741824, %38 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #6
  ret i64 %52
}

declare i64 @NaClDescReadNotImplemented(%struct.NaClDesc*, i8*, i64) #2

declare i64 @NaClDescWriteNotImplemented(%struct.NaClDesc*, i8*, i64) #2

declare i64 @NaClDescSeekNotImplemented(%struct.NaClDesc*, i64, i32) #2

declare i64 @NaClDescPReadNotImplemented(%struct.NaClDesc*, i8*, i64, i64) #2

declare i64 @NaClDescPWriteNotImplemented(%struct.NaClDesc*, i8*, i64, i64) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @NaClDescImcShmFstat(%struct.NaClDesc* nocapture readonly, %struct.nacl_abi_stat* nocapture) #5 {
  %3 = getelementptr inbounds %struct.NaClDesc, %struct.NaClDesc* %0, i64 1, i32 0, i32 1
  %4 = bitcast %struct.NaClFastMutex* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = icmp sgt i64 %5, 2147483647
  br i1 %6, label %18, label %7

7:                                                ; preds = %2
  %8 = bitcast %struct.nacl_abi_stat* %1 to <2 x i64>*
  store <2 x i64> <i64 0, i64 1816355150>, <2 x i64>* %8, align 8
  %9 = getelementptr inbounds %struct.nacl_abi_stat, %struct.nacl_abi_stat* %1, i64 0, i32 2
  %10 = bitcast i32* %9 to <4 x i32>*
  store <4 x i32> <i32 82304, i32 1, i32 -1, i32 -1>, <4 x i32>* %10, align 8
  %11 = getelementptr inbounds %struct.nacl_abi_stat, %struct.nacl_abi_stat* %1, i64 0, i32 6
  store i64 0, i64* %11, align 8
  %12 = load i64, i64* %4, align 8
  %13 = getelementptr inbounds %struct.nacl_abi_stat, %struct.nacl_abi_stat* %1, i64 0, i32 7
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %struct.nacl_abi_stat, %struct.nacl_abi_stat* %1, i64 0, i32 8
  %15 = getelementptr inbounds %struct.nacl_abi_stat, %struct.nacl_abi_stat* %1, i64 0, i32 12
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %struct.nacl_abi_stat, %struct.nacl_abi_stat* %1, i64 0, i32 14
  store i64 0, i64* %16, align 8
  %17 = bitcast i32* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false)
  br label %18

18:                                               ; preds = %2, %7
  %19 = phi i32 [ 0, %7 ], [ -75, %2 ]
  ret i32 %19
}

declare i32 @NaClDescFchdirNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescFchmodNotImplemented(%struct.NaClDesc*, i32) #2

declare i32 @NaClDescFsyncNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescFdatasyncNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescFtruncateNotImplemented(%struct.NaClDesc*, i64) #2

declare i64 @NaClDescGetdentsNotImplemented(%struct.NaClDesc*, i8*, i64) #2

; Function Attrs: nounwind ssp uwtable
define internal i32 @NaClDescImcShmExternalizeSize(%struct.NaClDesc*, i64*, i64*) #0 {
  %4 = tail call i32 @NaClDescExternalizeSize(%struct.NaClDesc* %0, i64* %1, i64* %2) #6
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %11

6:                                                ; preds = %3
  %7 = load i64, i64* %1, align 8
  %8 = add i64 %7, 8
  store i64 %8, i64* %1, align 8
  %9 = load i64, i64* %2, align 8
  %10 = add i64 %9, 1
  store i64 %10, i64* %2, align 8
  br label %11

11:                                               ; preds = %3, %6
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @NaClDescImcShmExternalize(%struct.NaClDesc*, %struct.NaClDescXferState*) #0 {
  %3 = tail call i32 @NaClDescExternalize(%struct.NaClDesc* %0, %struct.NaClDescXferState* %1) #6
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %20

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.NaClDesc, %struct.NaClDesc* %0, i64 1
  %7 = bitcast %struct.NaClDesc* %6 to i32*
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %struct.NaClDescXferState, %struct.NaClDescXferState* %1, i64 0, i32 2
  %10 = load i32*, i32** %9, align 8
  %11 = getelementptr inbounds i32, i32* %10, i64 1
  store i32* %11, i32** %9, align 8
  store i32 %8, i32* %10, align 4
  %12 = getelementptr inbounds %struct.NaClDescXferState, %struct.NaClDescXferState* %1, i64 0, i32 0
  %13 = bitcast %struct.NaClDescXferState* %1 to i64**
  %14 = load i64*, i64** %13, align 8
  %15 = getelementptr inbounds %struct.NaClDesc, %struct.NaClDesc* %0, i64 1, i32 0, i32 1
  %16 = bitcast %struct.NaClFastMutex* %15 to i64*
  %17 = load i64, i64* %16, align 8
  store i64 %17, i64* %14, align 1
  %18 = load i8*, i8** %12, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 8
  store i8* %19, i8** %12, align 8
  br label %20

20:                                               ; preds = %2, %5
  ret i32 %3
}

declare i32 @NaClDescLockNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescTryLockNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescUnlockNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescWaitNotImplemented(%struct.NaClDesc*, %struct.NaClDesc*) #2

declare i32 @NaClDescTimedWaitAbsNotImplemented(%struct.NaClDesc*, %struct.NaClDesc*, %struct.nacl_abi_timespec*) #2

declare i32 @NaClDescSignalNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescBroadcastNotImplemented(%struct.NaClDesc*) #2

declare i64 @NaClDescSendMsgNotImplemented(%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32) #2

declare i64 @NaClDescRecvMsgNotImplemented(%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32) #2

declare i64 @NaClDescLowLevelSendMsgNotImplemented(%struct.NaClDesc*, %struct.NaClMessageHeader*, i32) #2

declare i64 @NaClDescLowLevelRecvMsgNotImplemented(%struct.NaClDesc*, %struct.NaClMessageHeader*, i32) #2

declare i32 @NaClDescConnectAddrNotImplemented(%struct.NaClDesc*, %struct.NaClDesc**) #2

declare i32 @NaClDescAcceptConnNotImplemented(%struct.NaClDesc*, %struct.NaClDesc**) #2

declare i32 @NaClDescPostNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescSemWaitNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescGetValueNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescSetMetadata(%struct.NaClDesc*, i32, i32, i8*) #2

declare i32 @NaClDescGetMetadata(%struct.NaClDesc*, i32*, i8*) #2

declare void @NaClDescSetFlags(%struct.NaClDesc*, i32) #2

declare i32 @NaClDescGetFlags(%struct.NaClDesc*) #2

declare i32 @NaClDescIsattyNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClFindAddressSpace(i64*, i64) local_unnamed_addr #2

declare i8* @NaClMap(%struct.NaClDescEffector*, i8*, i64, i32, i32, i32, i64) local_unnamed_addr #2

declare i32 @NaClDescExternalizeSize(%struct.NaClDesc*, i64*, i64*) local_unnamed_addr #2

declare i32 @NaClDescExternalize(%struct.NaClDesc*, %struct.NaClDescXferState*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
