; ModuleID = '../../third_party/libgav1/src/src/tile/bitstream/transform_size.cc'
source_filename = "../../third_party/libgav1/src/src/tile/bitstream/transform_size.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.libgav1::Tile" = type { i32, i32, i32, i8*, i64, i32, i32, i32, i32, i32, i32, i8, [3 x i8], [3 x i8], [3 x i32], [3 x i32], [8 x [4 x [8 x [2 x i8]]]], i8, %"struct.std::__1::array", %"struct.std::__1::array.1", %"struct.libgav1::ObuSequenceHeader"*, %"struct.libgav1::ObuFrameHeader"*, %"struct.std::__1::array.14"*, %"struct.std::__1::array.15"*, %"struct.libgav1::TemporalMotionField"*, %"struct.std::__1::array.21"*, %"struct.std::__1::array.40"*, %"struct.std::__1::array.41"*, %"class.libgav1::DaalaBitReader", [8 x i8], %"struct.libgav1::SymbolDecoderContext", %"struct.libgav1::SymbolDecoderContext"*, %"class.libgav1::SegmentationMap"*, %"struct.libgav1::dsp::Dsp"*, %"class.libgav1::PostFilter"*, %"class.libgav1::BlockParametersHolder"*, %"class.libgav1::Quantizer", %"class.std::__1::unique_ptr.95", %"class.libgav1::Array2D.98", i64, i32, [3 x %"class.libgav1::Array2DView"], %"class.libgav1::RefCountedBuffer"*, %"class.libgav1::Array2D.43"*, %"class.libgav1::Array2D.51"*, [24 x i8], %"struct.std::__1::array.125", %"class.libgav1::ThreadPool"*, %"struct.libgav1::Tile::ThreadingParameters", %"class.libgav1::ResidualBufferPool"*, %"class.libgav1::TileScratchBufferPool"*, %"class.libgav1::BlockingCounterImpl"*, i8, %"class.std::__1::unique_ptr.78", [32 x [32 x i8]], [4 x i8], i8, i8, i8, %"struct.std::__1::array.141"*, %"struct.std::__1::array.142", [24 x i8] }
%"struct.std::__1::array" = type { [2 x %"class.libgav1::Array2D"] }
%"class.libgav1::Array2D" = type { %"class.std::__1::unique_ptr", i64, i64, %"class.libgav1::Array2DView" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.libgav1::Array2DView" = type { i32, i32, i8* }
%"struct.std::__1::array.1" = type { [2 x %"class.libgav1::Array2D.2"] }
%"class.libgav1::Array2D.2" = type { %"class.std::__1::unique_ptr.3", i64, i64, %"class.libgav1::Array2DView.9" }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i8* }
%"class.libgav1::Array2DView.9" = type { i32, i32, i8* }
%"struct.libgav1::ObuSequenceHeader" = type { i8, i8, i8, i32, [32 x i32], [32 x %"struct.libgav1::BitStreamLevel"], [32 x i8], i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.libgav1::ColorConfig", i8, %"struct.libgav1::TimingInfo", i8, %"struct.libgav1::DecoderModelInfo", [32 x i8], i8, [32 x i8], i8, %"struct.libgav1::OperatingParameters" }
%"struct.libgav1::BitStreamLevel" = type { i8, i8 }
%"struct.libgav1::ColorConfig" = type { i8, i8, i32, i32, i32, i32, i8, i8, i32, i8 }
%"struct.libgav1::TimingInfo" = type { i32, i32, i8, i32 }
%"struct.libgav1::DecoderModelInfo" = type { i8, i32, i8, i8 }
%"struct.libgav1::OperatingParameters" = type { [32 x i32], [32 x i32], [32 x i8] }
%"struct.libgav1::ObuFrameHeader" = type { i16, i16, i64, [7 x i16], i32, i32, i32, i32, i32, i32, i32, %"struct.libgav1::LoopRestoration", [32 x i32], i32, %"struct.std::__1::array.10", %"struct.libgav1::TileInfo", %"struct.libgav1::QuantizerParameters", %"struct.libgav1::Segmentation", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8], i8, i8, i8, %"struct.libgav1::Delta", %"struct.libgav1::Delta", [7 x i8], [8 x i8], %"struct.libgav1::LoopFilter", %"struct.libgav1::Cdef", %"struct.libgav1::FilmGrainParams" }
%"struct.libgav1::LoopRestoration" = type { [3 x i8], [3 x i32] }
%"struct.std::__1::array.10" = type { [8 x %"struct.libgav1::GlobalMotion"] }
%"struct.libgav1::GlobalMotion" = type { i8, [6 x i32], i16, i16, i16, i16 }
%"struct.libgav1::TileInfo" = type { i8, i32, i32, i32, i32, i32, [65 x i32], [65 x i32], i32, i32, [65 x i32], [65 x i32], i16, i8 }
%"struct.libgav1::QuantizerParameters" = type { i8, [3 x i8], [3 x i8], i8, [3 x i8] }
%"struct.libgav1::Segmentation" = type { i8, i8, i8, i8, i8, i8, [8 x [8 x i8]], [8 x [8 x i16]], [8 x i8], [8 x i8] }
%"struct.libgav1::Delta" = type { i8, i8, i8 }
%"struct.libgav1::LoopFilter" = type { %"struct.std::__1::array.11", i8, i8, i8, %"struct.std::__1::array.12", %"struct.std::__1::array.13" }
%"struct.std::__1::array.11" = type { [4 x i8] }
%"struct.std::__1::array.12" = type { [8 x i8] }
%"struct.std::__1::array.13" = type { [2 x i8] }
%"struct.libgav1::Cdef" = type { i8, i8, [8 x i8], [8 x i8], [8 x i8], [8 x i8] }
%"struct.libgav1::FilmGrainParams" = type { i8, i8, i8, i8, i8, i8, i8, i8, [14 x i8], [14 x i8], [10 x i8], [10 x i8], [10 x i8], [10 x i8], i8, i8, [24 x i8], [25 x i8], [25 x i8], i8, i16, i32, i32, i8, i8, i16, i8, i8, i16 }
%"struct.std::__1::array.14" = type { [8 x i8] }
%"struct.std::__1::array.15" = type { [8 x %"class.std::__1::shared_ptr"] }
%"class.std::__1::shared_ptr" = type { %"class.libgav1::RefCountedBuffer"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.libgav1::TemporalMotionField" = type { %"class.libgav1::Array2D.31", %"class.libgav1::Array2D.2" }
%"class.libgav1::Array2D.31" = type { %"class.std::__1::unique_ptr.32", i64, i64, %"class.libgav1::Array2DView.39" }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.libgav1::MotionVector"* }
%"struct.libgav1::MotionVector" = type { %union.anon.35 }
%union.anon.35 = type { i32 }
%"class.libgav1::Array2DView.39" = type { i32, i32, %"struct.libgav1::MotionVector"* }
%"struct.std::__1::array.21" = type { [8 x i8] }
%"struct.std::__1::array.40" = type opaque
%"struct.std::__1::array.41" = type opaque
%"class.libgav1::DaalaBitReader" = type { %"class.libgav1::BitReader", i8*, i8*, i8*, i8, i32, i32, i64 }
%"class.libgav1::BitReader" = type { i32 (...)** }
%"struct.libgav1::SymbolDecoderContext" = type { [5 x [4 x [11 x i16]]], [8 x i8], [3 x [9 x i16]], [10 x i8], [3 x [3 x i16]], [14 x i8], [3 x [3 x i16]], [14 x i8], [3 x [3 x i16]], [14 x i8], [5 x i16], [22 x i8], [5 x i16], [22 x i8], [4 x [5 x i16]], [24 x i8], [3 x i16], [26 x i8], [5 x [5 x [14 x i16]]], [4 x i8], [4 x [14 x i16]], [16 x i8], [8 x [8 x i16]], [2 x [13 x [15 x i16]]], [20 x i8], [9 x i16], [14 x i8], [6 x [17 x i16]], [20 x i8], [22 x [3 x i16]], [28 x i8], [6 x i16], [20 x i8], [4 x [3 x [4 x i16]]], [21 x [3 x i16]], [2 x i8], [5 x [13 x [3 x i16]]], [26 x i8], [3 x [4 x [17 x i16]]], [8 x i8], [2 x [4 x [13 x [17 x i16]]]], [16 x i8], [2 x [2 x [6 x i16]]], [16 x i8], [2 x [2 x [7 x i16]]], [8 x i8], [2 x [2 x [8 x i16]]], [2 x [2 x [9 x i16]]], [24 x i8], [2 x [2 x [10 x i16]]], [16 x i8], [2 x [11 x i16]], [20 x i8], [2 x [12 x i16]], [16 x i8], [5 x [2 x [9 x [3 x i16]]]], [4 x i8], [5 x [2 x [4 x [4 x i16]]]], [5 x [2 x [42 x [5 x i16]]]], [24 x i8], [5 x [2 x [21 x [5 x i16]]]], [12 x i8], [2 x [3 x [3 x i16]]], [28 x i8], [4 x i16], [24 x i8], [3 x i16], [26 x i8], [3 x i16], [26 x i8], [7 x [3 x [3 x i16]]], [2 x i8], [7 x [8 x i16]], [16 x i8], [2 x [3 x i16]], [20 x i8], [7 x [8 x i16]], [16 x i8], [2 x [7 x [5 x [9 x i16]]]], [20 x i8], [4 x [3 x i16]], [8 x i8], [5 x [3 x i16]], [2 x i8], [5 x [3 x i16]], [2 x i8], [2 x [3 x [3 x [3 x i16]]]], [20 x i8], [3 x [2 x [3 x i16]]], [28 x i8], [3 x [6 x [3 x i16]]], [20 x i8], [8 x [9 x i16]], [16 x i8], [6 x [3 x i16]], [28 x i8], [2 x [3 x i16]], [20 x i8], [6 x [3 x i16]], [28 x i8], [3 x [3 x i16]], [14 x i8], [3 x [3 x i16]], [14 x i8], [3 x [5 x i16]], [2 x i8], [22 x [3 x i16]], [28 x i8], [22 x [17 x i16]], [20 x i8], [22 x [3 x i16]], [28 x i8], [22 x [4 x i16]], [16 x i8], [6 x [3 x i16]], [28 x i8], [6 x [3 x i16]], [28 x i8], [22 x [3 x i16]], [28 x i8], [16 x [4 x i16]], [2 x [5 x i16]], [12 x i8], [2 x [2 x [3 x i16]]], [8 x i8], [2 x [2 x [12 x i16]]], [2 x [2 x [3 x i16]]], [8 x i8], [2 x [2 x [2 x [5 x i16]]]], [16 x i8], [2 x [2 x [3 x i16]]], [8 x i8], [2 x [2 x [10 x [3 x i16]]]], [16 x i8], [2 x [2 x [5 x i16]]], [24 x i8], [2 x [2 x [3 x i16]]], [8 x i8] }
%"class.libgav1::SegmentationMap" = type { i32, i32, %"class.std::__1::unique_ptr.3", %"class.libgav1::Array2DView.9" }
%"struct.libgav1::dsp::Dsp" = type { void (i8*, i8*, i32, i32, i8*, i64)*, void (i8*, i64, i8*, i32*)*, [2 x [3 x void (i16*, i64, i32, i32, i32, i32, i32, i8*, i64)*]], [19 x void (i8*, i64, [32 x i16]*, i32)*], [19 x [3 x void ([32 x i16]*, i32, i32, i8*, i64)*]], [2 x [2 x [2 x [2 x void (i8*, i64, i32, i32, i32, i32, i32, i32, i8*, i64)*]]]], [2 x void (i8*, i64, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i64)*], void (i8*, i64, i8*, i32, i32, i32, i1)*, void (i8*, i64, i8*, i8*, i32, i32, i32, i32, i1, i1)*, void (i8*, i64, i8*, i32, i32, i32, i1)*, void (i8*, i8*, i8, i8, i32, i32, i8*, i64)*, %"struct.libgav1::dsp::FilmGrainFuncs", void (i8*, i64, i8*, i8*, i8, i32, i32)*, [3 x void (i8*, i8*, i64, i8*, i64, i32, i32)*], void (i8*, i32, i32)*, void (i8*, i32)*, [19 x [10 x void (i8*, i64, i8*, i8*)*]], [4 x [5 x [2 x void (i8, i8, i32, i8*, i32, i32, i8*)*]]], [4 x [2 x void (i8*, i64, i32, i32, i32)*]], [2 x void (%"struct.libgav1::RestorationUnitInfo"*, i8*, i64, i8*, i64, i8*, i64, i32, i32, %"union.libgav1::RestorationBuffer"*, i8*)*], [3 x [2 x void (i8*, i8*, i64, i8*, i64, i32, i32, i8*, i64)*]], void (%"struct.libgav1::ReferenceInfo"*, i32, i32, i32, i32, i32, i32, %"struct.libgav1::TemporalMotionField"*)*, [3 x void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)*], [3 x void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)*], [2 x void (i8*, i64, i32, i32, i8*, i64)*], void (i32, i32, i32, i8*)*, void (i8*, i8*, i64, i32, i32, i32, i32, i32, i8*, i64)*, void (i8*, i64, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8*, i64)*, void (i8*, i64, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8*, i64)*, [6 x [6 x [2 x void (i8*, i8*, i8*, i64)*]]] }
%"struct.libgav1::dsp::FilmGrainFuncs" = type { [3 x void (%"struct.libgav1::FilmGrainParams"*, i8*)*], [2 x [4 x void (%"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i8*, i8*)*]], [2 x void (i8*, i32, i32, i32, i32, i32, i8*)*], void (i8*, i32, i32, i32, i32, i8*)*, void (i32, i8*, i8*, i8*)*, void (i8*, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64)*, [2 x void (i8, %"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64, i8*, i64)*] }
%"struct.libgav1::RestorationUnitInfo" = type { i8, %"struct.libgav1::SgrProjInfo", [16 x i8], %"struct.libgav1::WienerInfo" }
%"struct.libgav1::SgrProjInfo" = type { i32, [2 x i32] }
%"struct.libgav1::WienerInfo" = type { [2 x i16], [28 x i8], [2 x [4 x i16]], [16 x i8] }
%"union.libgav1::RestorationBuffer" = type { %"struct.libgav1::SgrBuffer", [5024 x i8] }
%"struct.libgav1::SgrBuffer" = type { [1152 x i16], [1440 x i16], [1152 x i32], [1440 x i32], [1024 x i16], [768 x i16], [512 x i16], [1024 x i32], [768 x i32], [512 x i32], [288 x i8], [288 x i32] }
%"struct.libgav1::ReferenceInfo" = type { %"struct.std::__1::array.21", %"struct.std::__1::array.12", %"struct.std::__1::array.12", %"struct.std::__1::array.14", %"struct.std::__1::array.22", %"class.libgav1::Array2D.23", %"class.libgav1::Array2D.31" }
%"struct.std::__1::array.22" = type { [8 x i16] }
%"class.libgav1::Array2D.23" = type { %"class.std::__1::unique_ptr.24", i64, i64, %"class.libgav1::Array2DView.30" }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { i8* }
%"class.libgav1::Array2DView.30" = type { i32, i32, i8* }
%"union.libgav1::CompoundMotionVector" = type { i64 }
%"class.libgav1::PostFilter" = type <{ [2 x { i64, i64 }], %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::LoopRestoration"*, %"struct.libgav1::dsp::Dsp"*, i32, i32, i32, i32, i8, [3 x i8], [3 x i8], i8, i32, [4 x i8], i8*, i8*, i8, [8 x [4 x [8 x [2 x i8]]]], [3 x i8], [3 x %struct.anon.42], %"class.libgav1::Array2D.43"*, %"class.libgav1::Array2D.51"*, %"class.libgav1::LoopRestorationInfo"*, [2 x i8*], %"class.libgav1::YuvBuffer"*, %"class.libgav1::BlockParametersHolder"*, %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"*, [3 x i8*], [3 x i8*], [3 x i8*], [3 x i8*], %"class.libgav1::YuvBuffer"*, %"class.libgav1::YuvBuffer"*, i8, [7 x i8], %"class.libgav1::ThreadPool"*, i32, [9248 x i16], [4 x i8] }>
%struct.anon.42 = type { i32, i32, i32 }
%"class.libgav1::LoopRestorationInfo" = type { [3 x %"struct.libgav1::RestorationUnitInfo"*], %"class.libgav1::DynamicBuffer", [3 x i8], %"struct.libgav1::LoopRestoration"*, i8, i8, [3 x i32], [3 x i32], [3 x i32] }
%"class.libgav1::DynamicBuffer" = type { %"class.std::__1::unique_ptr.59", i64 }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"struct.libgav1::RestorationUnitInfo"* }
%"class.libgav1::YuvBuffer" = type <{ i32, i8, [3 x i8], i32, i32, i32, i32, [3 x i32], [3 x i32], [3 x i32], [3 x i32], [3 x i32], [4 x i8], [3 x i8*], %"class.std::__1::unique_ptr", i64, i8, i8, [6 x i8] }>
%"class.libgav1::BlockParametersHolder" = type { i32, i32, %"class.libgav1::DynamicBuffer.65", %"struct.std::__1::atomic", %"class.libgav1::Array2D.74" }
%"class.libgav1::DynamicBuffer.65" = type { %"class.std::__1::unique_ptr.66", i64 }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::unique_ptr.69"* }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"struct.libgav1::BlockParameters"* }
%"struct.libgav1::BlockParameters" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8], [2 x i8], [4 x i8], %"union.libgav1::CompoundMotionVector", %"struct.libgav1::PaletteModeInfo", %"class.std::__1::unique_ptr.78" }
%"struct.libgav1::PaletteModeInfo" = type { [2 x i8], [3 x [8 x i16]] }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.73" }
%"struct.std::__1::__atomic_base.73" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.libgav1::Array2D.74" = type { %"class.std::__1::unique_ptr.75", i64, i64, %"class.libgav1::Array2DView.88" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.libgav1::BlockParameters"** }
%"class.libgav1::Array2DView.88" = type { i32, i32, %"struct.libgav1::BlockParameters"** }
%"class.libgav1::Quantizer" = type { %"struct.libgav1::QuantizerParameters"*, i16*, i16* }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.libgav1::Array2D.98" = type { %"class.std::__1::unique_ptr.99", i64, i64, %"class.libgav1::Array2DView.124" }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.std::__1::unique_ptr.102"* }
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.libgav1::ResidualBuffer"* }
%"class.libgav1::ResidualBuffer" = type { %"class.std::__1::unique_ptr.95", %"class.libgav1::Queue", %"class.libgav1::Queue.111", %"class.libgav1::ResidualBuffer"* }
%"class.libgav1::Queue" = type { %"class.std::__1::unique_ptr.105", i64, i64, i64, i64 }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.libgav1::TransformParameters"* }
%"struct.libgav1::TransformParameters" = type { i8, i32 }
%"class.libgav1::Queue.111" = type { %"class.std::__1::unique_ptr.112", i64, i64, i64, i64 }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"struct.libgav1::PartitionTreeNode"* }
%"struct.libgav1::PartitionTreeNode" = type <{ i32, i32, i8, [3 x i8] }>
%"class.libgav1::Array2DView.124" = type { i32, i32, %"class.std::__1::unique_ptr.102"* }
%"class.libgav1::RefCountedBuffer" = type { %"class.libgav1::BufferPool"*, i8, i8*, %"class.libgav1::YuvBuffer", i8, %"class.std::__1::mutex", i8, i32, %"class.std::__1::condition_variable", %"class.std::__1::condition_variable", %"class.std::__1::condition_variable", i8, i8, i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.libgav1::SegmentationMap", %"struct.std::__1::array.10", [8 x i8], %"struct.libgav1::SymbolDecoderContext", %"struct.std::__1::array.12", %"struct.std::__1::array.13", %"struct.libgav1::Segmentation", %"struct.libgav1::FilmGrainParams", %"struct.libgav1::ReferenceInfo", [16 x i8] }
%"class.libgav1::BufferPool" = type { %"class.std::__1::mutex", %"class.libgav1::Vector", %"class.libgav1::InternalFrameBufferList", i32 (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, i32 (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.Libgav1FrameBuffer*)*, void (i8*, i8*)*, i8* }
%"class.libgav1::Vector" = type { %"class.libgav1::internal::VectorBase" }
%"class.libgav1::internal::VectorBase" = type { %"class.libgav1::RefCountedBuffer"**, i64, i64 }
%"class.libgav1::InternalFrameBufferList" = type { %"class.libgav1::Vector.16" }
%"class.libgav1::Vector.16" = type { %"class.libgav1::internal::VectorBase.17" }
%"class.libgav1::internal::VectorBase.17" = type { %"class.std::__1::unique_ptr.18"*, i64, i64 }
%"class.std::__1::unique_ptr.18" = type opaque
%struct.Libgav1FrameBuffer = type { [3 x i8*], [3 x i32], i8* }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.19, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.19 = type { i64 }
%"class.libgav1::Array2D.43" = type { %"class.std::__1::unique_ptr.44", i64, i64, %"class.libgav1::Array2DView.50" }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { i16* }
%"class.libgav1::Array2DView.50" = type { i32, i32, i16* }
%"class.libgav1::Array2D.51" = type { %"class.std::__1::unique_ptr.52", i64, i64, %"class.libgav1::Array2DView.58" }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { i8* }
%"class.libgav1::Array2DView.58" = type { i32, i32, i8* }
%"struct.std::__1::array.125" = type { [3 x %"struct.libgav1::RestorationUnitInfo"] }
%"class.libgav1::ThreadPool" = type { %"class.libgav1::Executor", %"class.std::__1::condition_variable", %"class.std::__1::mutex", %"class.libgav1::UnboundedQueue", %"class.std::__1::unique_ptr.89", i8, i32, [16 x i8] }
%"class.libgav1::Executor" = type { i32 (...)** }
%"class.libgav1::UnboundedQueue" = type { %"struct.libgav1::UnboundedQueue<std::__1::function<void ()> >::Block"*, i64, %"struct.libgav1::UnboundedQueue<std::__1::function<void ()> >::Block"*, i64 }
%"struct.libgav1::UnboundedQueue<std::__1::function<void ()> >::Block" = type opaque
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.libgav1::ThreadPool::WorkerThread"** }
%"class.libgav1::ThreadPool::WorkerThread" = type opaque
%"struct.libgav1::Tile::ThreadingParameters" = type { %"class.std::__1::mutex", %"class.libgav1::Array2D.126", i8, i32, %"class.std::__1::condition_variable" }
%"class.libgav1::Array2D.126" = type { %"class.std::__1::unique_ptr.127", i64, i64, %"class.libgav1::Array2DView.133" }
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { i8* }
%"class.libgav1::Array2DView.133" = type { i32, i32, i8* }
%"class.libgav1::ResidualBufferPool" = type <{ %"class.std::__1::mutex", %"class.libgav1::ResidualBufferStack", i64, i32, [4 x i8] }>
%"class.libgav1::ResidualBufferStack" = type { %"class.libgav1::ResidualBuffer"*, i64 }
%"class.libgav1::TileScratchBufferPool" = type <{ %"class.std::__1::mutex", %"class.libgav1::Stack", i32, [4 x i8] }>
%"class.libgav1::Stack" = type <{ [128 x %"class.std::__1::unique_ptr.134"], i32, [4 x i8] }>
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"struct.libgav1::TileScratchBuffer"* }
%"struct.libgav1::TileScratchBuffer" = type <{ [16384 x i8], %union.anon.137, %"class.std::__1::unique_ptr.95", i64, i8, [3 x [34 x [34 x i8]]], [3 x i8] }>
%union.anon.137 = type { [2 x [16384 x i16]] }
%"class.libgav1::BlockingCounterImpl" = type opaque
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.libgav1::PredictionParameters"* }
%"struct.libgav1::PredictionParameters" = type { i8, i8, [2 x i32], i8, i8, i32, i32, [2 x %"class.libgav1::Array2D"], i8, i8, i8, i32, i32, i8, i8, i8, %union.anon.81, [8 x i16], i32, i32, i32, [2 x %"struct.libgav1::MotionVector"], i32, [8 x [4 x i32]] }
%union.anon.81 = type { [8 x %"union.libgav1::CompoundMotionVector"] }
%"struct.std::__1::array.141" = type { [3 x %"class.libgav1::AlignedDynamicBuffer"] }
%"class.libgav1::AlignedDynamicBuffer" = type { %"class.std::__1::unique_ptr.95", i64 }
%"struct.std::__1::array.142" = type { [8 x i32] }
%"struct.libgav1::Tile::Block" = type { %"class.libgav1::Tile"*, i8, i8, [3 x i8], [3 x i8], [3 x i8], i32, i32, i32, i32, i32, i32, %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"*, %"struct.libgav1::TileScratchBuffer"*, i8** }
%"class.libgav1::Stack.143" = type { [7 x %"struct.libgav1::Tile::TransformTreeNode"], i32 }
%"struct.libgav1::Tile::TransformTreeNode" = type { i32, i32, i8, i32 }

@_ZN7libgav117kBlockWidthPixelsE = external local_unnamed_addr constant [22 x i8], align 16
@_ZN7libgav115kTransformWidthE = external local_unnamed_addr constant [19 x i8], align 16
@_ZN7libgav118kBlockHeightPixelsE = external local_unnamed_addr constant [22 x i8], align 16
@_ZN7libgav116kTransformHeightE = external local_unnamed_addr constant [19 x i8], align 16
@_ZN7libgav112_GLOBAL__N_126kMaxTransformSizeRectangleE = internal unnamed_addr constant [22 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\12\12\12", align 16
@_ZN7libgav112_GLOBAL__N_116kTxDepthCdfIndexE = internal unnamed_addr constant [22 x i32] [i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 2, i32 1, i32 1, i32 1, i32 2, i32 3, i32 2, i32 2, i32 2, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3], align 16
@_ZN7libgav119kSplitTransformSizeE = external local_unnamed_addr constant [19 x i8], align 16
@_ZN7libgav118kTransformWidth4x4E = external local_unnamed_addr constant [19 x i8], align 16
@_ZN7libgav119kTransformHeight4x4E = external local_unnamed_addr constant [19 x i8], align 16
@_ZN7libgav123kTransformSizeSquareMaxE = external local_unnamed_addr constant [19 x i8], align 16

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN7libgav14Tile20GetTopTransformWidthERKNS0_5BlockEiib(%"class.libgav1::Tile"* nocapture readonly, %"struct.libgav1::Tile::Block"* nocapture readonly dereferenceable(88), i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %1, i64 0, i32 6
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, %2
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = add nsw i32 %2, -1
  %11 = sext i32 %10 to i64
  %12 = sext i32 %3 to i64
  br label %45

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %1, i64 0, i32 3, i64 0
  %15 = load i8, i8* %14, align 2, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %65, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %0, i64 0, i32 35
  %19 = load %"class.libgav1::BlockParametersHolder"*, %"class.libgav1::BlockParametersHolder"** %18, align 32
  %20 = add nsw i32 %2, -1
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %19, i64 0, i32 4, i32 3, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = mul nsw i64 %24, %21
  %26 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %19, i64 0, i32 4, i32 3, i32 2
  %27 = load %"struct.libgav1::BlockParameters"**, %"struct.libgav1::BlockParameters"*** %26, align 8
  %28 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %27, i64 %25
  %29 = sext i32 %3 to i64
  %30 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %28, i64 %29
  %31 = load %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %30, align 8
  br i1 %4, label %36, label %32

32:                                               ; preds = %17
  %33 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %31, i64 0, i32 1
  %34 = load i8, i8* %33, align 1, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %45, label %36

36:                                               ; preds = %32, %17
  %37 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %31, i64 0, i32 3
  %38 = load i8, i8* %37, align 1, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %31, i64 0, i32 0
  %42 = load i8, i8* %41, align 8
  %43 = zext i8 %42 to i64
  %44 = getelementptr inbounds [22 x i8], [22 x i8]* @_ZN7libgav117kBlockWidthPixelsE, i64 0, i64 %43
  br label %61

45:                                               ; preds = %9, %32, %36
  %46 = phi i64 [ %12, %9 ], [ %29, %32 ], [ %29, %36 ]
  %47 = phi i64 [ %11, %9 ], [ %21, %32 ], [ %21, %36 ]
  %48 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %0, i64 0, i32 44
  %49 = load %"class.libgav1::Array2D.51"*, %"class.libgav1::Array2D.51"** %48, align 32
  %50 = getelementptr inbounds %"class.libgav1::Array2D.51", %"class.libgav1::Array2D.51"* %49, i64 0, i32 3, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = sext i32 %51 to i64
  %53 = mul nsw i64 %47, %52
  %54 = getelementptr inbounds %"class.libgav1::Array2D.51", %"class.libgav1::Array2D.51"* %49, i64 0, i32 3, i32 2
  %55 = load i8*, i8** %54, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %53
  %57 = getelementptr inbounds i8, i8* %56, i64 %46
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i64
  %60 = getelementptr inbounds [19 x i8], [19 x i8]* @_ZN7libgav115kTransformWidthE, i64 0, i64 %59
  br label %61

61:                                               ; preds = %45, %40
  %62 = phi i8* [ %44, %40 ], [ %60, %45 ]
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i32
  br label %65

65:                                               ; preds = %61, %13
  %66 = phi i32 [ 64, %13 ], [ %64, %61 ]
  ret i32 %66
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN7libgav14Tile22GetLeftTransformHeightERKNS0_5BlockEiib(%"class.libgav1::Tile"* nocapture readonly, %"struct.libgav1::Tile::Block"* nocapture readonly dereferenceable(88), i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %1, i64 0, i32 7
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, %3
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = sext i32 %2 to i64
  %11 = add nsw i32 %3, -1
  %12 = sext i32 %11 to i64
  br label %45

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %1, i64 0, i32 4, i64 0
  %15 = load i8, i8* %14, align 1, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %65, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %0, i64 0, i32 35
  %19 = load %"class.libgav1::BlockParametersHolder"*, %"class.libgav1::BlockParametersHolder"** %18, align 32
  %20 = add nsw i32 %3, -1
  %21 = sext i32 %2 to i64
  %22 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %19, i64 0, i32 4, i32 3, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = mul nsw i64 %24, %21
  %26 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %19, i64 0, i32 4, i32 3, i32 2
  %27 = load %"struct.libgav1::BlockParameters"**, %"struct.libgav1::BlockParameters"*** %26, align 8
  %28 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %27, i64 %25
  %29 = sext i32 %20 to i64
  %30 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %28, i64 %29
  %31 = load %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %30, align 8
  br i1 %4, label %36, label %32

32:                                               ; preds = %17
  %33 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %31, i64 0, i32 1
  %34 = load i8, i8* %33, align 1, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %45, label %36

36:                                               ; preds = %32, %17
  %37 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %31, i64 0, i32 3
  %38 = load i8, i8* %37, align 1, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %31, i64 0, i32 0
  %42 = load i8, i8* %41, align 8
  %43 = zext i8 %42 to i64
  %44 = getelementptr inbounds [22 x i8], [22 x i8]* @_ZN7libgav118kBlockHeightPixelsE, i64 0, i64 %43
  br label %61

45:                                               ; preds = %9, %32, %36
  %46 = phi i64 [ %12, %9 ], [ %29, %32 ], [ %29, %36 ]
  %47 = phi i64 [ %10, %9 ], [ %21, %32 ], [ %21, %36 ]
  %48 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %0, i64 0, i32 44
  %49 = load %"class.libgav1::Array2D.51"*, %"class.libgav1::Array2D.51"** %48, align 32
  %50 = getelementptr inbounds %"class.libgav1::Array2D.51", %"class.libgav1::Array2D.51"* %49, i64 0, i32 3, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = sext i32 %51 to i64
  %53 = mul nsw i64 %47, %52
  %54 = getelementptr inbounds %"class.libgav1::Array2D.51", %"class.libgav1::Array2D.51"* %49, i64 0, i32 3, i32 2
  %55 = load i8*, i8** %54, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 %53
  %57 = getelementptr inbounds i8, i8* %56, i64 %46
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i64
  %60 = getelementptr inbounds [19 x i8], [19 x i8]* @_ZN7libgav116kTransformHeightE, i64 0, i64 %59
  br label %61

61:                                               ; preds = %45, %40
  %62 = phi i8* [ %44, %40 ], [ %60, %45 ]
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i32
  br label %65

65:                                               ; preds = %61, %13
  %66 = phi i32 [ 64, %13 ], [ %64, %61 ]
  ret i32 %66
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN7libgav14Tile22ReadFixedTransformSizeERKNS0_5BlockE(%"class.libgav1::Tile"*, %"struct.libgav1::Tile::Block"* nocapture readonly dereferenceable(88)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %1, i64 0, i32 14
  %4 = load %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %3, align 8
  %5 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %0, i64 0, i32 21
  %6 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %5, align 8
  %7 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %4, i64 0, i32 8
  %8 = load i8, i8* %7, align 8
  %9 = sext i8 %8 to i64
  %10 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %6, i64 0, i32 17, i32 8, i64 %9
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %171

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %1, i64 0, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i64
  %17 = getelementptr inbounds [22 x i8], [22 x i8]* @_ZN7libgav112_GLOBAL__N_126kMaxTransformSizeRectangleE, i64 0, i64 %16
  %18 = load i8, i8* %17, align 1
  %19 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %4, i64 0, i32 1
  %20 = load i8, i8* %19, align 1, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %4, i64 0, i32 3
  %24 = load i8, i8* %23, align 1, !range !2
  %25 = icmp ne i8 %24, 0
  br label %26

26:                                               ; preds = %13, %22
  %27 = phi i1 [ false, %13 ], [ %25, %22 ]
  %28 = icmp eq i8 %15, 0
  %29 = or i1 %28, %27
  br i1 %29, label %171, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %6, i64 0, i32 44
  %32 = load i8, i8* %31, align 8
  %33 = icmp eq i8 %32, 2
  br i1 %33, label %34, label %171

34:                                               ; preds = %30
  %35 = zext i8 %18 to i64
  %36 = getelementptr inbounds [19 x i8], [19 x i8]* @_ZN7libgav115kTransformWidthE, i64 0, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = getelementptr inbounds [19 x i8], [19 x i8]* @_ZN7libgav116kTransformHeightE, i64 0, i64 %35
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %1, i64 0, i32 3, i64 0
  %43 = load i8, i8* %42, align 2, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %90, label %45

45:                                               ; preds = %34
  %46 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %1, i64 0, i32 6
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %1, i64 0, i32 7
  %49 = load i32, i32* %48, align 8
  %50 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %0, i64 0, i32 35
  %51 = load %"class.libgav1::BlockParametersHolder"*, %"class.libgav1::BlockParametersHolder"** %50, align 32
  %52 = add nsw i32 %47, -1
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %51, i64 0, i32 4, i32 3, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = sext i32 %55 to i64
  %57 = mul nsw i64 %56, %53
  %58 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %51, i64 0, i32 4, i32 3, i32 2
  %59 = load %"struct.libgav1::BlockParameters"**, %"struct.libgav1::BlockParameters"*** %58, align 8
  %60 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %59, i64 %57
  %61 = sext i32 %49 to i64
  %62 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %60, i64 %61
  %63 = load %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %62, align 8
  %64 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %63, i64 0, i32 3
  %65 = load i8, i8* %64, align 1, !range !2
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %72, label %67

67:                                               ; preds = %45
  %68 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %63, i64 0, i32 0
  %69 = load i8, i8* %68, align 8
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [22 x i8], [22 x i8]* @_ZN7libgav117kBlockWidthPixelsE, i64 0, i64 %70
  br label %86

72:                                               ; preds = %45
  %73 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %0, i64 0, i32 44
  %74 = load %"class.libgav1::Array2D.51"*, %"class.libgav1::Array2D.51"** %73, align 32
  %75 = getelementptr inbounds %"class.libgav1::Array2D.51", %"class.libgav1::Array2D.51"* %74, i64 0, i32 3, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = sext i32 %76 to i64
  %78 = mul nsw i64 %77, %53
  %79 = getelementptr inbounds %"class.libgav1::Array2D.51", %"class.libgav1::Array2D.51"* %74, i64 0, i32 3, i32 2
  %80 = load i8*, i8** %79, align 8
  %81 = getelementptr inbounds i8, i8* %80, i64 %78
  %82 = getelementptr inbounds i8, i8* %81, i64 %61
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i64
  %85 = getelementptr inbounds [19 x i8], [19 x i8]* @_ZN7libgav115kTransformWidthE, i64 0, i64 %84
  br label %86

86:                                               ; preds = %67, %72
  %87 = phi i8* [ %85, %72 ], [ %71, %67 ]
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i32
  br label %90

90:                                               ; preds = %34, %86
  %91 = phi i32 [ %89, %86 ], [ 0, %34 ]
  %92 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %1, i64 0, i32 4, i64 0
  %93 = load i8, i8* %92, align 1, !range !2
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %140, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %1, i64 0, i32 6
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %1, i64 0, i32 7
  %99 = load i32, i32* %98, align 8
  %100 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %0, i64 0, i32 35
  %101 = load %"class.libgav1::BlockParametersHolder"*, %"class.libgav1::BlockParametersHolder"** %100, align 32
  %102 = add nsw i32 %99, -1
  %103 = sext i32 %97 to i64
  %104 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %101, i64 0, i32 4, i32 3, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = sext i32 %105 to i64
  %107 = mul nsw i64 %106, %103
  %108 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %101, i64 0, i32 4, i32 3, i32 2
  %109 = load %"struct.libgav1::BlockParameters"**, %"struct.libgav1::BlockParameters"*** %108, align 8
  %110 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %109, i64 %107
  %111 = sext i32 %102 to i64
  %112 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %110, i64 %111
  %113 = load %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %112, align 8
  %114 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %113, i64 0, i32 3
  %115 = load i8, i8* %114, align 1, !range !2
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %122, label %117

117:                                              ; preds = %95
  %118 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %113, i64 0, i32 0
  %119 = load i8, i8* %118, align 8
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [22 x i8], [22 x i8]* @_ZN7libgav118kBlockHeightPixelsE, i64 0, i64 %120
  br label %136

122:                                              ; preds = %95
  %123 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %0, i64 0, i32 44
  %124 = load %"class.libgav1::Array2D.51"*, %"class.libgav1::Array2D.51"** %123, align 32
  %125 = getelementptr inbounds %"class.libgav1::Array2D.51", %"class.libgav1::Array2D.51"* %124, i64 0, i32 3, i32 1
  %126 = load i32, i32* %125, align 4
  %127 = sext i32 %126 to i64
  %128 = mul nsw i64 %127, %103
  %129 = getelementptr inbounds %"class.libgav1::Array2D.51", %"class.libgav1::Array2D.51"* %124, i64 0, i32 3, i32 2
  %130 = load i8*, i8** %129, align 8
  %131 = getelementptr inbounds i8, i8* %130, i64 %128
  %132 = getelementptr inbounds i8, i8* %131, i64 %111
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i64
  %135 = getelementptr inbounds [19 x i8], [19 x i8]* @_ZN7libgav116kTransformHeightE, i64 0, i64 %134
  br label %136

136:                                              ; preds = %117, %122
  %137 = phi i8* [ %135, %122 ], [ %121, %117 ]
  %138 = load i8, i8* %137, align 1
  %139 = zext i8 %138 to i32
  br label %140

140:                                              ; preds = %90, %136
  %141 = phi i32 [ %139, %136 ], [ 0, %90 ]
  %142 = icmp uge i32 %91, %38
  %143 = zext i1 %142 to i64
  %144 = icmp uge i32 %141, %41
  %145 = zext i1 %144 to i64
  %146 = add nuw nsw i64 %145, %143
  %147 = getelementptr inbounds [22 x i32], [22 x i32]* @_ZN7libgav112_GLOBAL__N_116kTxDepthCdfIndexE, i64 0, i64 %16
  %148 = load i32, i32* %147, align 4
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %0, i64 0, i32 30, i32 33, i64 %149, i64 %146, i64 0
  %151 = lshr i64 27, %16
  %152 = and i64 %151, 1
  %153 = icmp eq i64 %152, 0
  %154 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %0, i64 0, i32 28
  br i1 %153, label %158, label %155

155:                                              ; preds = %140
  %156 = tail call zeroext i1 @_ZN7libgav114DaalaBitReader10ReadSymbolEPt(%"class.libgav1::DaalaBitReader"* %154, i16* %150) #4
  %157 = zext i1 %156 to i32
  br label %160

158:                                              ; preds = %140
  %159 = tail call i32 @_ZN7libgav114DaalaBitReader10ReadSymbolILi3EEEiPt(%"class.libgav1::DaalaBitReader"* %154, i16* %150) #4
  br label %160

160:                                              ; preds = %158, %155
  %161 = phi i32 [ %157, %155 ], [ %159, %158 ]
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %171, label %163

163:                                              ; preds = %160
  %164 = getelementptr inbounds [19 x i8], [19 x i8]* @_ZN7libgav119kSplitTransformSizeE, i64 0, i64 %35
  %165 = load i8, i8* %164, align 1
  %166 = icmp eq i32 %161, 1
  br i1 %166, label %171, label %167

167:                                              ; preds = %163
  %168 = zext i8 %165 to i64
  %169 = getelementptr inbounds [19 x i8], [19 x i8]* @_ZN7libgav119kSplitTransformSizeE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  br label %171

171:                                              ; preds = %26, %30, %163, %160, %167, %2
  %172 = phi i8 [ 0, %2 ], [ %18, %26 ], [ %18, %30 ], [ %170, %167 ], [ %18, %160 ], [ %165, %163 ]
  ret i8 %172
}

declare zeroext i1 @_ZN7libgav114DaalaBitReader10ReadSymbolEPt(%"class.libgav1::DaalaBitReader"*, i16*) local_unnamed_addr #3

declare i32 @_ZN7libgav114DaalaBitReader10ReadSymbolILi3EEEiPt(%"class.libgav1::DaalaBitReader"*, i16*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7libgav14Tile25ReadVariableTransformTreeERKNS0_5BlockEiiNS_13TransformSizeE(%"class.libgav1::Tile"*, %"struct.libgav1::Tile::Block"* nocapture readonly dereferenceable(88), i32, i32, i8 zeroext) local_unnamed_addr #2 align 2 {
  %6 = alloca %"class.libgav1::Stack.143", align 8
  %7 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %1, i64 0, i32 8
  %8 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %1, i64 0, i32 9
  %9 = load i32, i32* %7, align 4
  %10 = load i32, i32* %8, align 4
  %11 = icmp slt i32 %9, %10
  %12 = select i1 %11, i32 %10, i32 %9
  %13 = trunc i32 %12 to i8
  switch i8 %13, label %17 [
    i8 -128, label %18
    i8 64, label %18
    i8 32, label %14
    i8 16, label %15
    i8 8, label %16
  ]

14:                                               ; preds = %5
  br label %18

15:                                               ; preds = %5
  br label %18

16:                                               ; preds = %5
  br label %18

17:                                               ; preds = %5
  br label %18

18:                                               ; preds = %5, %5, %14, %15, %16, %17
  %19 = phi i8 [ 0, %17 ], [ 4, %16 ], [ 9, %15 ], [ 14, %14 ], [ 18, %5 ], [ 18, %5 ]
  %20 = lshr i8 %19, 2
  %21 = zext i8 %20 to i64
  %22 = sub nuw nsw i64 4, %21
  %23 = mul nsw i64 %22, 6
  %24 = bitcast %"class.libgav1::Stack.143"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 116, i8* nonnull %24) #4
  %25 = getelementptr inbounds %"class.libgav1::Stack.143", %"class.libgav1::Stack.143"* %6, i64 0, i32 0, i64 1
  %26 = bitcast %"struct.libgav1::Tile::TransformTreeNode"* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 96, i1 false)
  %27 = getelementptr inbounds %"class.libgav1::Stack.143", %"class.libgav1::Stack.143"* %6, i64 0, i32 1
  %28 = zext i32 %2 to i64
  %29 = shl nuw i64 %28, 32
  %30 = zext i32 %3 to i64
  %31 = or i64 %29, %30
  %32 = zext i8 %4 to i64
  store i32 0, i32* %27, align 8
  %33 = bitcast %"class.libgav1::Stack.143"* %6 to i64*
  store i64 %31, i64* %33, align 8
  %34 = getelementptr inbounds %"class.libgav1::Stack.143", %"class.libgav1::Stack.143"* %6, i64 0, i32 0, i64 0, i32 2
  %35 = bitcast i8* %34 to i64*
  store i64 %32, i64* %35, align 8
  %36 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %1, i64 0, i32 6
  %37 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %1, i64 0, i32 3, i64 0
  %38 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %0, i64 0, i32 35
  %39 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %0, i64 0, i32 44
  %40 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %1, i64 0, i32 7
  %41 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %1, i64 0, i32 4, i64 0
  %42 = icmp ugt i8 %19, 4
  %43 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %0, i64 0, i32 28
  %44 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %0, i64 0, i32 21
  br label %45

45:                                               ; preds = %325, %18
  %46 = phi i64 [ %329, %325 ], [ %32, %18 ]
  %47 = phi i32 [ %323, %325 ], [ 0, %18 ]
  %48 = add nsw i32 %47, -1
  store i32 %48, i32* %27, align 8
  %49 = sext i32 %47 to i64
  %50 = getelementptr inbounds %"class.libgav1::Stack.143", %"class.libgav1::Stack.143"* %6, i64 0, i32 0, i64 %49
  %51 = bitcast %"struct.libgav1::Tile::TransformTreeNode"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = trunc i64 %52 to i32
  %54 = lshr i64 %52, 32
  %55 = trunc i64 %54 to i32
  %56 = trunc i64 %46 to i8
  %57 = and i64 %46, 255
  %58 = getelementptr inbounds [19 x i8], [19 x i8]* @_ZN7libgav118kTransformWidth4x4E, i64 0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = getelementptr inbounds [19 x i8], [19 x i8]* @_ZN7libgav119kTransformHeight4x4E, i64 0, i64 %57
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i32
  %64 = icmp eq i64 %57, 0
  %65 = and i64 %46, -4294967296
  %66 = icmp eq i64 %65, 8589934592
  %67 = or i1 %64, %66
  br i1 %67, label %254, label %68

68:                                               ; preds = %45
  %69 = load i32, i32* %36, align 4
  %70 = icmp eq i32 %69, %55
  br i1 %70, label %76, label %71

71:                                               ; preds = %68
  %72 = add i64 %52, -4294967296
  %73 = ashr i64 %72, 32
  %74 = shl i64 %52, 32
  %75 = ashr exact i64 %74, 32
  br label %106

76:                                               ; preds = %68
  %77 = load i8, i8* %37, align 2, !range !2
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %124, label %79

79:                                               ; preds = %76
  %80 = load %"class.libgav1::BlockParametersHolder"*, %"class.libgav1::BlockParametersHolder"** %38, align 32
  %81 = add i64 %52, -4294967296
  %82 = ashr i64 %81, 32
  %83 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %80, i64 0, i32 4, i32 3, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = sext i32 %84 to i64
  %86 = mul nsw i64 %82, %85
  %87 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %80, i64 0, i32 4, i32 3, i32 2
  %88 = load %"struct.libgav1::BlockParameters"**, %"struct.libgav1::BlockParameters"*** %87, align 8
  %89 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %88, i64 %86
  %90 = shl i64 %52, 32
  %91 = ashr exact i64 %90, 32
  %92 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %89, i64 %91
  %93 = load %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %92, align 8
  %94 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %93, i64 0, i32 1
  %95 = load i8, i8* %94, align 1, !range !2
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %106, label %97

97:                                               ; preds = %79
  %98 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %93, i64 0, i32 3
  %99 = load i8, i8* %98, align 1, !range !2
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %106, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %93, i64 0, i32 0
  %103 = load i8, i8* %102, align 8
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [22 x i8], [22 x i8]* @_ZN7libgav117kBlockWidthPixelsE, i64 0, i64 %104
  br label %121

106:                                              ; preds = %97, %79, %71
  %107 = phi i64 [ %75, %71 ], [ %91, %79 ], [ %91, %97 ]
  %108 = phi i64 [ %73, %71 ], [ %82, %79 ], [ %82, %97 ]
  %109 = load %"class.libgav1::Array2D.51"*, %"class.libgav1::Array2D.51"** %39, align 32
  %110 = getelementptr inbounds %"class.libgav1::Array2D.51", %"class.libgav1::Array2D.51"* %109, i64 0, i32 3, i32 1
  %111 = load i32, i32* %110, align 4
  %112 = sext i32 %111 to i64
  %113 = mul nsw i64 %108, %112
  %114 = getelementptr inbounds %"class.libgav1::Array2D.51", %"class.libgav1::Array2D.51"* %109, i64 0, i32 3, i32 2
  %115 = load i8*, i8** %114, align 8
  %116 = getelementptr inbounds i8, i8* %115, i64 %113
  %117 = getelementptr inbounds i8, i8* %116, i64 %107
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i64
  %120 = getelementptr inbounds [19 x i8], [19 x i8]* @_ZN7libgav115kTransformWidthE, i64 0, i64 %119
  br label %121

121:                                              ; preds = %106, %101
  %122 = phi i8* [ %105, %101 ], [ %120, %106 ]
  %123 = load i8, i8* %122, align 1
  br label %124

124:                                              ; preds = %121, %76
  %125 = phi i8 [ 64, %76 ], [ %123, %121 ]
  %126 = getelementptr inbounds [19 x i8], [19 x i8]* @_ZN7libgav115kTransformWidthE, i64 0, i64 %57
  %127 = load i8, i8* %126, align 1
  %128 = icmp ult i8 %125, %127
  %129 = zext i1 %128 to i64
  %130 = load i32, i32* %40, align 8
  %131 = icmp eq i32 %130, %53
  br i1 %131, label %137, label %132

132:                                              ; preds = %124
  %133 = ashr i64 %52, 32
  %134 = shl i64 %52, 32
  %135 = add i64 %134, -4294967296
  %136 = ashr exact i64 %135, 32
  br label %167

137:                                              ; preds = %124
  %138 = load i8, i8* %41, align 1, !range !2
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %185, label %140

140:                                              ; preds = %137
  %141 = load %"class.libgav1::BlockParametersHolder"*, %"class.libgav1::BlockParametersHolder"** %38, align 32
  %142 = ashr i64 %52, 32
  %143 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %141, i64 0, i32 4, i32 3, i32 1
  %144 = load i32, i32* %143, align 4
  %145 = sext i32 %144 to i64
  %146 = mul nsw i64 %142, %145
  %147 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %141, i64 0, i32 4, i32 3, i32 2
  %148 = load %"struct.libgav1::BlockParameters"**, %"struct.libgav1::BlockParameters"*** %147, align 8
  %149 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %148, i64 %146
  %150 = shl i64 %52, 32
  %151 = add i64 %150, -4294967296
  %152 = ashr exact i64 %151, 32
  %153 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %149, i64 %152
  %154 = load %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %153, align 8
  %155 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %154, i64 0, i32 1
  %156 = load i8, i8* %155, align 1, !range !2
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %167, label %158

158:                                              ; preds = %140
  %159 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %154, i64 0, i32 3
  %160 = load i8, i8* %159, align 1, !range !2
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %167, label %162

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %154, i64 0, i32 0
  %164 = load i8, i8* %163, align 8
  %165 = zext i8 %164 to i64
  %166 = getelementptr inbounds [22 x i8], [22 x i8]* @_ZN7libgav118kBlockHeightPixelsE, i64 0, i64 %165
  br label %182

167:                                              ; preds = %158, %140, %132
  %168 = phi i64 [ %136, %132 ], [ %152, %140 ], [ %152, %158 ]
  %169 = phi i64 [ %133, %132 ], [ %142, %140 ], [ %142, %158 ]
  %170 = load %"class.libgav1::Array2D.51"*, %"class.libgav1::Array2D.51"** %39, align 32
  %171 = getelementptr inbounds %"class.libgav1::Array2D.51", %"class.libgav1::Array2D.51"* %170, i64 0, i32 3, i32 1
  %172 = load i32, i32* %171, align 4
  %173 = sext i32 %172 to i64
  %174 = mul nsw i64 %169, %173
  %175 = getelementptr inbounds %"class.libgav1::Array2D.51", %"class.libgav1::Array2D.51"* %170, i64 0, i32 3, i32 2
  %176 = load i8*, i8** %175, align 8
  %177 = getelementptr inbounds i8, i8* %176, i64 %174
  %178 = getelementptr inbounds i8, i8* %177, i64 %168
  %179 = load i8, i8* %178, align 1
  %180 = zext i8 %179 to i64
  %181 = getelementptr inbounds [19 x i8], [19 x i8]* @_ZN7libgav116kTransformHeightE, i64 0, i64 %180
  br label %182

182:                                              ; preds = %167, %162
  %183 = phi i8* [ %166, %162 ], [ %181, %167 ]
  %184 = load i8, i8* %183, align 1
  br label %185

185:                                              ; preds = %182, %137
  %186 = phi i8 [ 64, %137 ], [ %184, %182 ]
  %187 = getelementptr inbounds [19 x i8], [19 x i8]* @_ZN7libgav116kTransformHeightE, i64 0, i64 %57
  %188 = load i8, i8* %187, align 1
  %189 = icmp ult i8 %186, %188
  %190 = zext i1 %189 to i64
  br i1 %42, label %191, label %196

191:                                              ; preds = %185
  %192 = getelementptr inbounds [19 x i8], [19 x i8]* @_ZN7libgav123kTransformSizeSquareMaxE, i64 0, i64 %57
  %193 = load i8, i8* %192, align 1
  %194 = icmp eq i8 %193, %19
  %195 = select i1 %194, i64 0, i64 3
  br label %196

196:                                              ; preds = %191, %185
  %197 = phi i64 [ 0, %185 ], [ %195, %191 ]
  %198 = or i64 %23, %129
  %199 = add nsw i64 %198, %190
  %200 = add nsw i64 %199, %197
  %201 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %0, i64 0, i32 30, i32 34, i64 %200, i64 0
  %202 = tail call zeroext i1 @_ZN7libgav114DaalaBitReader10ReadSymbolEPt(%"class.libgav1::DaalaBitReader"* %43, i16* %201) #4
  br i1 %202, label %203, label %254

203:                                              ; preds = %196
  %204 = getelementptr inbounds [19 x i8], [19 x i8]* @_ZN7libgav119kSplitTransformSizeE, i64 0, i64 %57
  %205 = load i8, i8* %204, align 1
  %206 = zext i8 %205 to i64
  %207 = getelementptr inbounds [19 x i8], [19 x i8]* @_ZN7libgav118kTransformWidth4x4E, i64 0, i64 %206
  %208 = load i8, i8* %207, align 1
  %209 = zext i8 %208 to i32
  %210 = getelementptr inbounds [19 x i8], [19 x i8]* @_ZN7libgav119kTransformHeight4x4E, i64 0, i64 %206
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i32
  %213 = sub nsw i32 %63, %212
  %214 = icmp sgt i32 %213, -1
  br i1 %214, label %215, label %322

215:                                              ; preds = %203
  %216 = sub nsw i32 %60, %209
  %217 = icmp sgt i32 %216, -1
  %218 = add i64 %46, 4294967296
  %219 = and i64 %218, -4294967296
  %220 = or i64 %219, %206
  br label %224

221:                                              ; preds = %251, %224
  %222 = sub nsw i32 %225, %212
  %223 = icmp sgt i32 %222, -1
  br i1 %223, label %224, label %320

224:                                              ; preds = %215, %221
  %225 = phi i32 [ %213, %215 ], [ %222, %221 ]
  br i1 %217, label %226, label %221

226:                                              ; preds = %224
  %227 = add nsw i32 %225, %55
  %228 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %44, align 8
  %229 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %228, i64 0, i32 7
  %230 = load i32, i32* %229, align 4
  %231 = icmp slt i32 %227, %230
  %232 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %228, i64 0, i32 6
  %233 = zext i32 %227 to i64
  %234 = shl nuw i64 %233, 32
  br label %235

235:                                              ; preds = %226, %251
  %236 = phi i32 [ %216, %226 ], [ %252, %251 ]
  br i1 %231, label %237, label %251

237:                                              ; preds = %235
  %238 = add nsw i32 %236, %53
  %239 = load i32, i32* %232, align 8
  %240 = icmp slt i32 %238, %239
  br i1 %240, label %241, label %251

241:                                              ; preds = %237
  %242 = zext i32 %238 to i64
  %243 = or i64 %234, %242
  %244 = load i32, i32* %27, align 8
  %245 = add nsw i32 %244, 1
  store i32 %245, i32* %27, align 8
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds %"class.libgav1::Stack.143", %"class.libgav1::Stack.143"* %6, i64 0, i32 0, i64 %246
  %248 = bitcast %"struct.libgav1::Tile::TransformTreeNode"* %247 to i64*
  store i64 %243, i64* %248, align 8
  %249 = getelementptr inbounds %"class.libgav1::Stack.143", %"class.libgav1::Stack.143"* %6, i64 0, i32 0, i64 %246, i32 2
  %250 = bitcast i8* %249 to i64*
  store i64 %220, i64* %250, align 8
  br label %251

251:                                              ; preds = %237, %235, %241
  %252 = sub nsw i32 %236, %209
  %253 = icmp sgt i32 %252, -1
  br i1 %253, label %235, label %221

254:                                              ; preds = %196, %45
  %255 = icmp eq i8 %62, 0
  %256 = shl i64 %52, 32
  %257 = ashr exact i64 %256, 32
  br i1 %255, label %280, label %258

258:                                              ; preds = %254
  %259 = zext i8 %59 to i64
  %260 = ashr i64 %52, 32
  %261 = zext i8 %62 to i64
  %262 = and i64 %261, 1
  %263 = icmp eq i8 %62, 1
  br i1 %263, label %266, label %264

264:                                              ; preds = %258
  %265 = sub nsw i64 %261, %262
  br label %293

266:                                              ; preds = %293, %258
  %267 = phi i64 [ 0, %258 ], [ %317, %293 ]
  %268 = icmp eq i64 %262, 0
  br i1 %268, label %280, label %269

269:                                              ; preds = %266
  %270 = load %"class.libgav1::Array2D.51"*, %"class.libgav1::Array2D.51"** %39, align 32
  %271 = add nsw i64 %267, %260
  %272 = getelementptr inbounds %"class.libgav1::Array2D.51", %"class.libgav1::Array2D.51"* %270, i64 0, i32 3, i32 1
  %273 = load i32, i32* %272, align 4
  %274 = sext i32 %273 to i64
  %275 = mul nsw i64 %271, %274
  %276 = getelementptr inbounds %"class.libgav1::Array2D.51", %"class.libgav1::Array2D.51"* %270, i64 0, i32 3, i32 2
  %277 = load i8*, i8** %276, align 8
  %278 = getelementptr inbounds i8, i8* %277, i64 %257
  %279 = getelementptr inbounds i8, i8* %278, i64 %275
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %279, i8 %56, i64 %259, i1 false)
  br label %280

280:                                              ; preds = %269, %266, %254
  %281 = load %"class.libgav1::BlockParametersHolder"*, %"class.libgav1::BlockParametersHolder"** %38, align 32
  %282 = ashr i64 %52, 32
  %283 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %281, i64 0, i32 4, i32 3, i32 1
  %284 = load i32, i32* %283, align 4
  %285 = sext i32 %284 to i64
  %286 = mul nsw i64 %282, %285
  %287 = getelementptr inbounds %"class.libgav1::BlockParametersHolder", %"class.libgav1::BlockParametersHolder"* %281, i64 0, i32 4, i32 3, i32 2
  %288 = load %"struct.libgav1::BlockParameters"**, %"struct.libgav1::BlockParameters"*** %287, align 8
  %289 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %288, i64 %286
  %290 = getelementptr inbounds %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %289, i64 %257
  %291 = load %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %290, align 8
  %292 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %291, i64 0, i32 11
  store i8 %56, i8* %292, align 1
  br label %322

293:                                              ; preds = %293, %264
  %294 = phi i64 [ 0, %264 ], [ %317, %293 ]
  %295 = phi i64 [ %265, %264 ], [ %318, %293 ]
  %296 = load %"class.libgav1::Array2D.51"*, %"class.libgav1::Array2D.51"** %39, align 32
  %297 = add nsw i64 %294, %260
  %298 = getelementptr inbounds %"class.libgav1::Array2D.51", %"class.libgav1::Array2D.51"* %296, i64 0, i32 3, i32 1
  %299 = load i32, i32* %298, align 4
  %300 = sext i32 %299 to i64
  %301 = mul nsw i64 %297, %300
  %302 = getelementptr inbounds %"class.libgav1::Array2D.51", %"class.libgav1::Array2D.51"* %296, i64 0, i32 3, i32 2
  %303 = load i8*, i8** %302, align 8
  %304 = getelementptr inbounds i8, i8* %303, i64 %257
  %305 = getelementptr inbounds i8, i8* %304, i64 %301
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %305, i8 %56, i64 %259, i1 false)
  %306 = or i64 %294, 1
  %307 = load %"class.libgav1::Array2D.51"*, %"class.libgav1::Array2D.51"** %39, align 32
  %308 = add nsw i64 %306, %260
  %309 = getelementptr inbounds %"class.libgav1::Array2D.51", %"class.libgav1::Array2D.51"* %307, i64 0, i32 3, i32 1
  %310 = load i32, i32* %309, align 4
  %311 = sext i32 %310 to i64
  %312 = mul nsw i64 %308, %311
  %313 = getelementptr inbounds %"class.libgav1::Array2D.51", %"class.libgav1::Array2D.51"* %307, i64 0, i32 3, i32 2
  %314 = load i8*, i8** %313, align 8
  %315 = getelementptr inbounds i8, i8* %314, i64 %257
  %316 = getelementptr inbounds i8, i8* %315, i64 %312
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %316, i8 %56, i64 %259, i1 false)
  %317 = add nuw nsw i64 %294, 2
  %318 = add i64 %295, -2
  %319 = icmp eq i64 %318, 0
  br i1 %319, label %266, label %293

320:                                              ; preds = %221
  %321 = load i32, i32* %27, align 8
  br label %322

322:                                              ; preds = %320, %203, %280
  %323 = phi i32 [ %321, %320 ], [ %48, %203 ], [ %48, %280 ]
  %324 = icmp slt i32 %323, 0
  br i1 %324, label %330, label %325

325:                                              ; preds = %322
  %326 = sext i32 %323 to i64
  %327 = getelementptr inbounds %"class.libgav1::Stack.143", %"class.libgav1::Stack.143"* %6, i64 0, i32 0, i64 %326, i32 2
  %328 = bitcast i8* %327 to i64*
  %329 = load i64, i64* %328, align 8
  br label %45

330:                                              ; preds = %322
  call void @llvm.lifetime.end.p0i8(i64 116, i8* nonnull %24) #4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7libgav14Tile19DecodeTransformSizeERKNS0_5BlockE(%"class.libgav1::Tile"*, %"struct.libgav1::Tile::Block"* nocapture readonly dereferenceable(88)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %1, i64 0, i32 14
  %4 = load %"struct.libgav1::BlockParameters"*, %"struct.libgav1::BlockParameters"** %3, align 8
  %5 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %0, i64 0, i32 21
  %6 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %5, align 8
  %7 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %6, i64 0, i32 44
  %8 = load i8, i8* %7, align 8
  %9 = icmp eq i8 %8, 2
  br i1 %9, label %10, label %75

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %1, i64 0, i32 2
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %75, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %4, i64 0, i32 3
  %16 = load i8, i8* %15, align 1, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %75, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %4, i64 0, i32 1
  %20 = load i8, i8* %19, align 1, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %75

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %4, i64 0, i32 8
  %24 = load i8, i8* %23, align 8
  %25 = sext i8 %24 to i64
  %26 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %6, i64 0, i32 17, i32 8, i64 %25
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %75

29:                                               ; preds = %22
  %30 = zext i8 %12 to i64
  %31 = getelementptr inbounds [22 x i8], [22 x i8]* @_ZN7libgav112_GLOBAL__N_126kMaxTransformSizeRectangleE, i64 0, i64 %30
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i64
  %34 = getelementptr inbounds [19 x i8], [19 x i8]* @_ZN7libgav118kTransformWidth4x4E, i64 0, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = getelementptr inbounds [19 x i8], [19 x i8]* @_ZN7libgav119kTransformHeight4x4E, i64 0, i64 %33
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %1, i64 0, i32 6
  %41 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %1, i64 0, i32 11
  %42 = load i32, i32* %41, align 8
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %44, label %129

44:                                               ; preds = %29
  %45 = load i32, i32* %40, align 4
  %46 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %1, i64 0, i32 7
  %47 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %1, i64 0, i32 10
  %48 = load i32, i32* %46, align 8
  %49 = load i32, i32* %47, align 4
  br label %50

50:                                               ; preds = %44, %60
  %51 = phi i32 [ %42, %44 ], [ %61, %60 ]
  %52 = phi i32 [ %45, %44 ], [ %62, %60 ]
  %53 = phi i32 [ %49, %44 ], [ %63, %60 ]
  %54 = phi i32 [ %48, %44 ], [ %64, %60 ]
  %55 = phi i32 [ %45, %44 ], [ %65, %60 ]
  %56 = icmp sgt i32 %53, 0
  br i1 %56, label %68, label %60

57:                                               ; preds = %68
  %58 = load i32, i32* %40, align 4
  %59 = load i32, i32* %41, align 8
  br label %60

60:                                               ; preds = %57, %50
  %61 = phi i32 [ %59, %57 ], [ %51, %50 ]
  %62 = phi i32 [ %58, %57 ], [ %52, %50 ]
  %63 = phi i32 [ %72, %57 ], [ %53, %50 ]
  %64 = phi i32 [ %71, %57 ], [ %54, %50 ]
  %65 = add nsw i32 %55, %39
  %66 = add nsw i32 %61, %62
  %67 = icmp slt i32 %65, %66
  br i1 %67, label %50, label %129

68:                                               ; preds = %50, %68
  %69 = phi i32 [ %70, %68 ], [ %54, %50 ]
  tail call void @_ZN7libgav14Tile25ReadVariableTransformTreeERKNS0_5BlockEiiNS_13TransformSizeE(%"class.libgav1::Tile"* %0, %"struct.libgav1::Tile::Block"* dereferenceable(88) %1, i32 %55, i32 %69, i8 zeroext %32)
  %70 = add nsw i32 %69, %36
  %71 = load i32, i32* %46, align 8
  %72 = load i32, i32* %47, align 4
  %73 = add nsw i32 %72, %71
  %74 = icmp slt i32 %70, %73
  br i1 %74, label %68, label %57

75:                                               ; preds = %22, %18, %14, %10, %2
  %76 = tail call zeroext i8 @_ZN7libgav14Tile22ReadFixedTransformSizeERKNS0_5BlockE(%"class.libgav1::Tile"* %0, %"struct.libgav1::Tile::Block"* dereferenceable(88) %1)
  %77 = getelementptr inbounds %"struct.libgav1::BlockParameters", %"struct.libgav1::BlockParameters"* %4, i64 0, i32 11
  store i8 %76, i8* %77, align 1
  %78 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %1, i64 0, i32 6
  %79 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %1, i64 0, i32 11
  %80 = load i32, i32* %79, align 8
  %81 = icmp sgt i32 %80, 0
  br i1 %81, label %82, label %129

82:                                               ; preds = %75
  %83 = load i32, i32* %78, align 4
  %84 = getelementptr inbounds %"class.libgav1::Tile", %"class.libgav1::Tile"* %0, i64 0, i32 44
  %85 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %1, i64 0, i32 7
  %86 = getelementptr inbounds %"struct.libgav1::Tile::Block", %"struct.libgav1::Tile::Block"* %1, i64 0, i32 10
  %87 = sext i32 %83 to i64
  %88 = load %"class.libgav1::Array2D.51"*, %"class.libgav1::Array2D.51"** %84, align 32
  %89 = getelementptr inbounds %"class.libgav1::Array2D.51", %"class.libgav1::Array2D.51"* %88, i64 0, i32 3, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = sext i32 %90 to i64
  %92 = mul nsw i64 %87, %91
  %93 = getelementptr inbounds %"class.libgav1::Array2D.51", %"class.libgav1::Array2D.51"* %88, i64 0, i32 3, i32 2
  %94 = load i8*, i8** %93, align 8
  %95 = getelementptr inbounds i8, i8* %94, i64 %92
  %96 = load i32, i32* %85, align 8
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i8, i8* %95, i64 %97
  %99 = load i32, i32* %86, align 4
  %100 = sext i32 %99 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %98, i8 %76, i64 %100, i1 false)
  %101 = add nsw i64 %87, 1
  %102 = load i32, i32* %78, align 4
  %103 = load i32, i32* %79, align 8
  %104 = add nsw i32 %103, %102
  %105 = sext i32 %104 to i64
  %106 = icmp slt i64 %101, %105
  br i1 %106, label %107, label %129

107:                                              ; preds = %82, %107
  %108 = phi i64 [ %123, %107 ], [ %101, %82 ]
  %109 = load i8, i8* %77, align 1
  %110 = load %"class.libgav1::Array2D.51"*, %"class.libgav1::Array2D.51"** %84, align 32
  %111 = getelementptr inbounds %"class.libgav1::Array2D.51", %"class.libgav1::Array2D.51"* %110, i64 0, i32 3, i32 1
  %112 = load i32, i32* %111, align 4
  %113 = sext i32 %112 to i64
  %114 = mul nsw i64 %108, %113
  %115 = getelementptr inbounds %"class.libgav1::Array2D.51", %"class.libgav1::Array2D.51"* %110, i64 0, i32 3, i32 2
  %116 = load i8*, i8** %115, align 8
  %117 = getelementptr inbounds i8, i8* %116, i64 %114
  %118 = load i32, i32* %85, align 8
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds i8, i8* %117, i64 %119
  %121 = load i32, i32* %86, align 4
  %122 = sext i32 %121 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %120, i8 %109, i64 %122, i1 false)
  %123 = add nsw i64 %108, 1
  %124 = load i32, i32* %78, align 4
  %125 = load i32, i32* %79, align 8
  %126 = add nsw i32 %125, %124
  %127 = sext i32 %126 to i64
  %128 = icmp slt i64 %123, %127
  br i1 %128, label %107, label %129

129:                                              ; preds = %60, %107, %82, %29, %75
  ret void
}

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
