; ModuleID = '../../third_party/freetype/src/src/cid/type1cid.c'
source_filename = "../../third_party/freetype/src/src/cid/type1cid.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.FT_ModuleRec_ = type { %struct.FT_Module_Class_*, %struct.FT_LibraryRec_*, %struct.FT_MemoryRec_* }
%struct.FT_Module_Class_ = type { i64, i64, i8*, i64, i64, i8*, {}*, void (%struct.FT_ModuleRec_*)*, i8* (%struct.FT_ModuleRec_*, i8*)* }
%struct.FT_LibraryRec_ = type { %struct.FT_MemoryRec_*, i32, i32, i32, i32, [32 x %struct.FT_ModuleRec_*], %struct.FT_ListRec_, %struct.FT_RendererRec_*, %struct.FT_ModuleRec_*, [4 x i32 (i8*)*], [5 x i8], void (%struct.FT_Bitmap_*, i8*)*, i32 }
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_RendererRec_ = type { %struct.FT_ModuleRec_, %struct.FT_Renderer_Class_*, i32, %struct.FT_Glyph_Class_, %struct.FT_RasterRec_*, i32 (%struct.FT_RasterRec_*, %struct.FT_Raster_Params_*)*, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Vector_*)* }
%struct.FT_Renderer_Class_ = type { %struct.FT_Module_Class_, i32, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Vector_*)*, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_Matrix_*, %struct.FT_Vector_*)*, void (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_BBox_*)*, i32 (%struct.FT_RendererRec_*, i64, i8*)*, %struct.FT_Raster_Funcs_* }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type { i8*, i32, %struct.FT_Size_Metrics_ }
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type { %struct.FT_ModuleRec_, %struct.FT_Driver_ClassRec_*, %struct.FT_ListRec_, %struct.FT_GlyphLoaderRec_* }
%struct.FT_Driver_ClassRec_ = type { %struct.FT_Module_Class_, i64, i64, i64, i32 (%struct.FT_StreamRec_*, %struct.FT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)*, void (%struct.FT_FaceRec_*)*, i32 (%struct.FT_SizeRec_*)*, void (%struct.FT_SizeRec_*)*, i32 (%struct.FT_GlyphSlotRec_*)*, void (%struct.FT_GlyphSlotRec_*)*, i32 (%struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, i32, i32)*, i32 (%struct.FT_FaceRec_*, i32, i32, %struct.FT_Vector_*)*, i32 (%struct.FT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.FT_FaceRec_*, i32, i32, i32, i64*)*, i32 (%struct.FT_SizeRec_*, %struct.FT_Size_RequestRec_*)*, i32 (%struct.FT_SizeRec_*, i64)* }
%struct.FT_GlyphLoaderRec_ = type { %struct.FT_MemoryRec_*, i32, i32, i32, i8, %struct.FT_GlyphLoadRec_, %struct.FT_GlyphLoadRec_, i8* }
%struct.FT_GlyphLoadRec_ = type { %struct.FT_Outline_, %struct.FT_Vector_*, %struct.FT_Vector_*, i32, %struct.FT_SubGlyphRec_* }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_Face_InternalRec_ = type { %struct.FT_Matrix_, %struct.FT_Vector_, i32, %struct.FT_ServiceCacheRec_, %struct.FT_Incremental_InterfaceRec_*, i8, i32, [5 x i8], void (%struct.FT_Bitmap_*, i8*)*, i32 }
%struct.FT_Matrix_ = type { i64, i64, i64, i64 }
%struct.FT_ServiceCacheRec_ = type { i8*, i8*, i8*, i8*, i8*, i8* }
%struct.FT_Incremental_InterfaceRec_ = type { %struct.FT_Incremental_FuncsRec_*, %struct.FT_IncrementalRec_* }
%struct.FT_Incremental_FuncsRec_ = type { i32 (%struct.FT_IncrementalRec_*, i32, %struct.FT_Data_*)*, void (%struct.FT_IncrementalRec_*, %struct.FT_Data_*)*, i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)* }
%struct.FT_Data_ = type { i8*, i32 }
%struct.FT_Incremental_MetricsRec_ = type { i64, i64, i64, i64 }
%struct.FT_IncrementalRec_ = type opaque
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type { i32, i16, i32, i32, %struct.FT_Matrix_ }
%struct.FT_Slot_InternalRec_ = type { %struct.FT_GlyphLoaderRec_*, i32, i8, %struct.FT_Matrix_, %struct.FT_Vector_, i8*, i32 }
%struct.FT_Raster_Funcs_ = type { i32, i32 (i8*, %struct.FT_RasterRec_**)*, void (%struct.FT_RasterRec_*, i8*, i64)*, i32 (%struct.FT_RasterRec_*, i64, i8*)*, i32 (%struct.FT_RasterRec_*, %struct.FT_Raster_Params_*)*, void (%struct.FT_RasterRec_*)* }
%struct.FT_Glyph_Class_ = type { i64, i32, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphSlotRec_*)*, void (%struct.FT_GlyphRec_*)*, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphRec_*)*, void (%struct.FT_GlyphRec_*, %struct.FT_Matrix_*, %struct.FT_Vector_*)*, void (%struct.FT_GlyphRec_*, %struct.FT_BBox_*)*, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphSlotRec_*)* }
%struct.FT_GlyphRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_Glyph_Class_*, i32, %struct.FT_Vector_ }
%struct.FT_RasterRec_ = type opaque
%struct.FT_Raster_Params_ = type { %struct.FT_Bitmap_*, i8*, i32, void (i32, i32, %struct.FT_Span_*, i8*)*, void (i32, i32, %struct.FT_Span_*, i8*)*, i32 (i32, i32, i8*)*, void (i32, i32, i8*)*, i8*, %struct.FT_BBox_ }
%struct.FT_Span_ = type { i16, i16, i8 }
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%struct.FT_Parameter_ = type { i64, i8* }
%struct.FT_Size_RequestRec_ = type { i32, i64, i64, i32, i32 }
%struct.FT_ServiceDescRec_ = type { i8*, i8* }
%struct.FT_Service_PsFontNameRec_ = type { i8* (%struct.FT_FaceRec_*)* }
%struct.FT_Service_PsInfoRec_ = type { i32 (%struct.FT_FaceRec_*, %struct.PS_FontInfoRec_*)*, i32 (%struct.FT_FaceRec_*, %struct.PS_FontExtraRec_*)*, i32 (%struct.FT_FaceRec_*)*, i32 (%struct.FT_FaceRec_*, %struct.PS_PrivateRec_*)*, i64 (%struct.FT_FaceRec_*, i32, i32, i8*, i64)* }
%struct.PS_FontInfoRec_ = type { i8*, i8*, i8*, i8*, i8*, i64, i8, i16, i16 }
%struct.PS_FontExtraRec_ = type { i16 }
%struct.PS_PrivateRec_ = type { i32, i32, i8, i8, i8, i8, [14 x i16], [10 x i16], [14 x i16], [10 x i16], i64, i32, i32, [1 x i16], [1 x i16], i8, i8, i8, i8, [13 x i16], [13 x i16], i64, i64, i64, [2 x i16] }
%struct.FT_Service_CIDRec_ = type { i32 (%struct.FT_FaceRec_*, i8**, i8**, i32*)*, i32 (%struct.FT_FaceRec_*, i8*)*, i32 (%struct.FT_FaceRec_*, i32, i32*)* }
%struct.FT_Service_PropertiesRec_ = type { i32 (%struct.FT_ModuleRec_*, i8*, i8*, i8)*, i32 (%struct.FT_ModuleRec_*, i8*, i8*)* }
%struct.T1_FieldRec_ = type { i8*, i32, i32, void (%struct.FT_FaceRec_*, i8*)*, i32, i8, i32, i32, i32 }
%struct.PS_DriverRec_ = type { %struct.FT_DriverRec_, i32, i8, [8 x i32], i32 }
%struct.CID_Loader_ = type { %struct.CID_Parser_, i32 }
%struct.CID_Parser_ = type { %struct.PS_ParserRec_, %struct.FT_StreamRec_*, i8*, i64, i64, i64, %struct.CID_FaceInfoRec_*, i32 }
%struct.PS_ParserRec_ = type { i8*, i8*, i8*, i32, %struct.FT_MemoryRec_*, %struct.PS_Parser_FuncsRec_ }
%struct.PS_Parser_FuncsRec_ = type { void (%struct.PS_ParserRec_*, i8*, i8*, %struct.FT_MemoryRec_*)*, void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)*, i64 (%struct.PS_ParserRec_*)*, i64 (%struct.PS_ParserRec_*, i32)*, i32 (%struct.PS_ParserRec_*, i8*, i64, i64*, i8)*, i32 (%struct.PS_ParserRec_*, i32, i16*)*, i32 (%struct.PS_ParserRec_*, i32, i64*, i32)*, void (%struct.PS_ParserRec_*, %struct.T1_TokenRec_*)*, void (%struct.PS_ParserRec_*, %struct.T1_TokenRec_*, i32, i32*)*, i32 (%struct.PS_ParserRec_*, %struct.T1_FieldRec_*, i8**, i32, i64*)*, i32 (%struct.PS_ParserRec_*, %struct.T1_FieldRec_*, i8**, i32, i64*)* }
%struct.T1_TokenRec_ = type { i8*, i8*, i32 }
%struct.CID_FaceInfoRec_ = type { i8*, i64, i32, i8*, i8*, i32, %struct.PS_FontInfoRec_, %struct.FT_BBox_, i64, i32, [16 x i64], i64, i32, i32, i64, i32, %struct.CID_FaceDictRec_*, i64 }
%struct.CID_FaceDictRec_ = type { %struct.PS_PrivateRec_, i32, i64, i64, i64, i8, i8, %struct.FT_Matrix_, %struct.FT_Vector_, i32, i64, i32 }
%struct.CID_FaceRec_ = type { %struct.FT_FaceRec_, i8*, i8*, %struct.CID_FaceInfoRec_, %struct.PS_FontExtraRec_, %struct.CID_SubrsRec_*, i8*, i8*, %struct.FT_StreamRec_* }
%struct.CID_SubrsRec_ = type { i32, i8** }
%struct.PSAux_ServiceRec_ = type { %struct.PS_Table_FuncsRec_*, %struct.PS_Parser_FuncsRec_*, %struct.T1_Builder_FuncsRec_*, %struct.T1_Decoder_FuncsRec_*, void (i8*, i64, i16)*, i32 (i32)*, void (%struct.PS_Decoder_*, i8*, i8)*, void (%struct.FT_FaceRec_*, %struct.PS_PrivateRec_*, %struct.CFF_SubFontRec_*)*, %struct.T1_CMap_ClassesRec_*, %struct.AFM_Parser_FuncsRec_*, %struct.CFF_Decoder_FuncsRec_* }
%struct.PS_Table_FuncsRec_ = type { i32 (%struct.PS_TableRec_*, i32, %struct.FT_MemoryRec_*)*, void (%struct.PS_TableRec_*)*, i32 (%struct.PS_TableRec_*, i32, i8*, i32)*, void (%struct.PS_TableRec_*)* }
%struct.PS_TableRec_ = type { i8*, i64, i64, i64, i32, i32, i8**, i32*, %struct.FT_MemoryRec_*, %struct.PS_Table_FuncsRec_ }
%struct.T1_Builder_FuncsRec_ = type { void (%struct.T1_BuilderRec_*, %struct.FT_FaceRec_*, %struct.FT_SizeRec_*, %struct.FT_GlyphSlotRec_*, i8)*, void (%struct.T1_BuilderRec_*)*, i32 (%struct.T1_BuilderRec_*, i32)*, void (%struct.T1_BuilderRec_*, i64, i64, i8)*, i32 (%struct.T1_BuilderRec_*, i64, i64)*, i32 (%struct.T1_BuilderRec_*)*, i32 (%struct.T1_BuilderRec_*, i64, i64)*, void (%struct.T1_BuilderRec_*)* }
%struct.T1_BuilderRec_ = type { %struct.FT_MemoryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphLoaderRec_*, %struct.FT_Outline_*, %struct.FT_Outline_*, i64, i64, %struct.FT_Vector_, %struct.FT_Vector_, %struct.FT_BBox_, i32, i8, i8, i8, i8*, i8*, %struct.T1_Builder_FuncsRec_ }
%struct.T1_Decoder_FuncsRec_ = type { i32 (%struct.T1_DecoderRec_*, %struct.FT_FaceRec_*, %struct.FT_SizeRec_*, %struct.FT_GlyphSlotRec_*, i8**, %struct.PS_BlendRec_*, i8, i32, i32 (%struct.T1_DecoderRec_*, i32)*)*, void (%struct.T1_DecoderRec_*)*, i32 (%struct.T1_DecoderRec_*, i8*, i32)*, i32 (%struct.PS_Decoder_*, i8*, i64)* }
%struct.T1_DecoderRec_ = type { %struct.T1_BuilderRec_, [512 x i64], i64*, [17 x %struct.T1_Decoder_ZoneRec_], %struct.T1_Decoder_ZoneRec_*, %struct.FT_Service_PsCMapsRec_*, i32, i8**, i32, i32, i8**, i32*, %struct.FT_HashRec_*, %struct.FT_Matrix_, %struct.FT_Vector_, i32, i32, [7 x %struct.FT_Vector_], %struct.PS_BlendRec_*, i32, i32 (%struct.T1_DecoderRec_*, i32)*, %struct.T1_Decoder_FuncsRec_, i64*, i32, i8, %struct.FT_Generic_ }
%struct.T1_Decoder_ZoneRec_ = type { i8*, i8*, i8* }
%struct.FT_Service_PsCMapsRec_ = type { i32 (i8*)*, i32 (%struct.FT_MemoryRec_*, %struct.PS_UnicodesRec_*, i32, i8* (i8*, i32)*, void (i8*, i8*)*, i8*)*, i32 (%struct.PS_UnicodesRec_*, i32)*, i32 (%struct.PS_UnicodesRec_*, i32*)*, i8* (i32)*, i8* (i32)*, i16*, i16* }
%struct.PS_UnicodesRec_ = type { %struct.FT_CMapRec_, i32, %struct.PS_UniMap_* }
%struct.FT_CMapRec_ = type { %struct.FT_CharMapRec_, %struct.FT_CMap_ClassRec_* }
%struct.FT_CMap_ClassRec_ = type { i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* }
%struct.PS_UniMap_ = type { i32, i32 }
%struct.FT_HashRec_ = type { i32, i32, i32, i64 (%union.FT_Hashkey_*)*, i8 (%union.FT_Hashkey_*, %union.FT_Hashkey_*)*, %struct.FT_HashnodeRec_** }
%union.FT_Hashkey_ = type { i8* }
%struct.FT_HashnodeRec_ = type { %union.FT_Hashkey_, i64 }
%struct.PS_BlendRec_ = type { i32, i32, [4 x i8*], [16 x i64*], [4 x %struct.PS_DesignMap_], i64*, i64*, [17 x %struct.PS_FontInfoRec_*], [17 x %struct.PS_PrivateRec_*], i64, [17 x %struct.FT_BBox_*], [16 x i32], i32 }
%struct.PS_DesignMap_ = type { i8, i64*, i64* }
%struct.PS_Decoder_ = type { %struct.PS_Builder_, [49 x i64], i64*, [17 x %struct.PS_Decoder_Zone_], %struct.PS_Decoder_Zone_*, i32, i32, [7 x %struct.FT_Vector_], %struct.CFF_FontRec_*, %struct.CFF_SubFontRec_*, %struct.FT_Generic_*, i64*, i8, i32, i32, i32, i32, i32, i8**, i8**, i8**, i32, i32, i8, i32 (%struct.TT_FaceRec_*, i32, i8**, i64*)*, void (%struct.TT_FaceRec_*, i8**, i64)*, %struct.FT_Service_PsCMapsRec_*, i32, i32*, %struct.FT_HashRec_*, %struct.FT_Matrix_, %struct.FT_Vector_, %struct.PS_BlendRec_*, i64*, i32 }
%struct.PS_Builder_ = type { %struct.FT_MemoryRec_*, %struct.FT_FaceRec_*, %struct.CFF_GlyphSlotRec_*, %struct.FT_GlyphLoaderRec_*, %struct.FT_Outline_*, %struct.FT_Outline_*, i64*, i64*, %struct.FT_Vector_*, %struct.FT_Vector_*, %struct.FT_BBox_*, i8, i8, i8, i8, i8, %struct.PS_Builder_FuncsRec_ }
%struct.CFF_GlyphSlotRec_ = type { %struct.FT_GlyphSlotRec_, i8, i8, i64, i64 }
%struct.PS_Builder_FuncsRec_ = type { void (%struct.PS_Builder_*, i8*, i8)*, void (%struct.PS_Builder_*)* }
%struct.PS_Decoder_Zone_ = type { i8*, i8*, i8* }
%struct.CFF_FontRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_StreamRec_*, %struct.FT_MemoryRec_*, i64, i32, i32, i8, i8, i8, i32, i8, %struct.CFF_IndexRec_, %struct.CFF_IndexRec_, %struct.CFF_IndexRec_, %struct.CFF_EncodingRec_, %struct.CFF_CharsetRec_, %struct.CFF_IndexRec_, %struct.CFF_IndexRec_, %struct.CFF_IndexRec_, %struct.CFF_IndexRec_, i8*, i8**, i32, i8**, i8*, i64, %struct.CFF_SubFontRec_, i32, [256 x %struct.CFF_SubFontRec_*], %struct.CFF_FDSelectRec_, %struct.PSHinter_Interface_*, %struct.FT_Service_PsCMapsRec_*, i8*, %struct.PS_FontInfoRec_*, i8*, i8*, %struct.FT_Generic_, %struct.CFF_VStoreRec_, %struct.PS_FontExtraRec_* }
%struct.CFF_EncodingRec_ = type { i32, i64, i32, [256 x i16], [256 x i16] }
%struct.CFF_CharsetRec_ = type { i32, i64, i16*, i16*, i32, i32 }
%struct.CFF_IndexRec_ = type { %struct.FT_StreamRec_*, i64, i32, i32, i8, i64, i64, i64*, i8* }
%struct.CFF_SubFontRec_ = type { %struct.CFF_FontRecDictRec_, %struct.CFF_PrivateRec_, %struct.CFF_BlendRec_, i32, i64*, i8*, i8*, i32, i32, %struct.CFF_IndexRec_, i8**, i32 }
%struct.CFF_FontRecDictRec_ = type { i32, i32, i32, i32, i32, i32, i8, i64, i64, i64, i32, i32, %struct.FT_Matrix_, i8, i64, %struct.FT_Vector_, i64, %struct.FT_BBox_, i64, i64, i64, i64, i64, i64, i64, i32, i32, i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i16, i16, i64, i32 }
%struct.CFF_PrivateRec_ = type { i8, i8, i8, i8, [14 x i64], [10 x i64], [14 x i64], [10 x i64], i64, i64, i64, i64, i64, i8, i8, [13 x i64], [13 x i64], i8, i64, i32, i32, i64, i64, i64, i64, i64, i32, %struct.CFF_SubFontRec_* }
%struct.CFF_BlendRec_ = type { i8, i8, %struct.CFF_FontRec_*, i32, i32, i64*, i32, i32* }
%struct.CFF_FDSelectRec_ = type { i8, i32, i8*, i32, i32, i32, i8 }
%struct.PSHinter_Interface_ = type { %struct.PSH_Globals_FuncsRec_* (%struct.FT_ModuleRec_*)*, %struct.T1_Hints_FuncsRec_* (%struct.FT_ModuleRec_*)*, %struct.T2_Hints_FuncsRec_* (%struct.FT_ModuleRec_*)* }
%struct.PSH_Globals_FuncsRec_ = type { i32 (%struct.FT_MemoryRec_*, %struct.PS_PrivateRec_*, %struct.PSH_GlobalsRec_**)*, void (%struct.PSH_GlobalsRec_*, i64, i64, i64, i64)*, void (%struct.PSH_GlobalsRec_*)* }
%struct.PSH_GlobalsRec_ = type opaque
%struct.T1_Hints_FuncsRec_ = type { %struct.T1_HintsRec_*, void (%struct.T1_HintsRec_*)*, i32 (%struct.T1_HintsRec_*, i32)*, void (%struct.T1_HintsRec_*, i32, i64*)*, void (%struct.T1_HintsRec_*, i32, i64*)*, void (%struct.T1_HintsRec_*, i32)*, i32 (%struct.T1_HintsRec_*, %struct.FT_Outline_*, %struct.PSH_GlobalsRec_*, i32)* }
%struct.T1_HintsRec_ = type opaque
%struct.T2_Hints_FuncsRec_ = type { %struct.T2_HintsRec_*, void (%struct.T2_HintsRec_*)*, i32 (%struct.T2_HintsRec_*, i32)*, void (%struct.T2_HintsRec_*, i32, i32, i64*)*, void (%struct.T2_HintsRec_*, i32, i32, i8*)*, void (%struct.T2_HintsRec_*, i32, i8*)*, i32 (%struct.T2_HintsRec_*, %struct.FT_Outline_*, %struct.PSH_GlobalsRec_*, i32)* }
%struct.T2_HintsRec_ = type opaque
%struct.CFF_VStoreRec_ = type { i32, %struct.CFF_VarData_*, i16, i32, %struct.CFF_VarRegion_* }
%struct.CFF_VarData_ = type { i32, i32* }
%struct.CFF_VarRegion_ = type { %struct.CFF_AxisCoords_* }
%struct.CFF_AxisCoords_ = type { i64, i64, i64 }
%struct.TT_FaceRec_ = type { %struct.FT_FaceRec_, %struct.TTC_HeaderRec_, i64, i16, %struct.TT_TableRec_*, %struct.TT_Header_, %struct.TT_HoriHeader_, %struct.TT_MaxProfile_, i8, %struct.TT_VertHeader_, i16, %struct.TT_NameTableRec_, %struct.TT_OS2_, %struct.TT_Postscript_, i8*, i64, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_LoaderRec_*, i32, i64, i32)*, void (%struct.TT_LoaderRec_*)*, i32 (%struct.TT_LoaderRec_*)*, i32 (%struct.TT_LoaderRec_*)*, i32 (%struct.TT_LoaderRec_*)*, i8*, i8*, i8*, i8*, i8*, %struct.TT_Gasp_, %struct.TT_PCLT_, i64, %struct.TT_SBit_ScaleRec_*, %struct.TT_Post_NamesRec_, %struct.FT_Palette_Data_, i16, %struct.FT_Color_*, i8, %struct.FT_Color_, i64, i8*, i64, i8*, i64, i32*, i32 (i8*)*, %struct.FT_Generic_, i8*, i64, i64, i8, i8, %struct.GX_BlendRec_*, i32, i8*, i32, i64, i64, i64, i8*, i8*, i64, i32, i64, i8*, i8*, i64, i32, i32, i32*, i8*, i64, i32, i32, i32, i64, i64, i64, i64, i8*, i8* }
%struct.TTC_HeaderRec_ = type { i64, i64, i64, i64* }
%struct.TT_TableRec_ = type { i64, i64, i64, i64 }
%struct.TT_Header_ = type { i64, i64, i64, i64, i16, i16, [2 x i64], [2 x i64], i16, i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.TT_HoriHeader_ = type { i64, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, [4 x i16], i16, i16, i8*, i8* }
%struct.TT_MaxProfile_ = type { i64, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.TT_VertHeader_ = type { i64, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, [4 x i16], i16, i16, i8*, i8* }
%struct.TT_NameTableRec_ = type { i16, i32, i32, %struct.TT_NameRec_*, i32, %struct.TT_LangTagRec_*, %struct.FT_StreamRec_* }
%struct.TT_NameRec_ = type { i16, i16, i16, i16, i16, i64, i8* }
%struct.TT_LangTagRec_ = type { i16, i64, i8* }
%struct.TT_OS2_ = type { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, [10 x i8], i64, i64, i64, i64, [4 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i64, i64, i16, i16, i16, i16, i16, i16, i16 }
%struct.TT_Postscript_ = type { i64, i64, i16, i16, i64, i64, i64, i64, i64 }
%struct.TT_LoaderRec_ = type { %struct.TT_FaceRec_*, %struct.TT_SizeRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphLoaderRec_*, i64, i32, %struct.FT_StreamRec_*, i32, i16, %struct.FT_BBox_, i32, i32, i32, i8, %struct.FT_Vector_, %struct.FT_Vector_, %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_, %struct.TT_ExecContextRec_*, i8*, i64, i8*, i32, i32, %struct.FT_Vector_, %struct.FT_Vector_, i8*, i8*, %struct.FT_ListRec_ }
%struct.TT_SizeRec_ = type opaque
%struct.TT_GlyphZoneRec_ = type { %struct.FT_MemoryRec_*, i16, i16, i16, i16, %struct.FT_Vector_*, %struct.FT_Vector_*, %struct.FT_Vector_*, i8*, i16*, i16 }
%struct.TT_ExecContextRec_ = type opaque
%struct.TT_Gasp_ = type { i16, i16, %struct.TT_GaspRangeRec_* }
%struct.TT_GaspRangeRec_ = type { i16, i16 }
%struct.TT_PCLT_ = type { i64, i64, i16, i16, i16, i16, i16, i16, [16 x i8], [8 x i8], [6 x i8], i8, i8, i8, i8 }
%struct.TT_SBit_ScaleRec_ = type { %struct.TT_SBit_LineMetricsRec_, %struct.TT_SBit_LineMetricsRec_, i8, i8, i8, i8 }
%struct.TT_SBit_LineMetricsRec_ = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8] }
%struct.TT_Post_NamesRec_ = type { i8, %union.anon }
%union.anon = type { %struct.TT_Post_20Rec_ }
%struct.TT_Post_20Rec_ = type { i16, i16, i16*, i8** }
%struct.FT_Palette_Data_ = type { i16, i16*, i16*, i16, i16* }
%struct.FT_Color_ = type { i8, i8, i8, i8 }
%struct.GX_BlendRec_ = type opaque
%struct.T1_CMap_ClassesRec_ = type { %struct.FT_CMap_ClassRec_*, %struct.FT_CMap_ClassRec_*, %struct.FT_CMap_ClassRec_*, %struct.FT_CMap_ClassRec_* }
%struct.AFM_Parser_FuncsRec_ = type { i32 (%struct.AFM_ParserRec_*, %struct.FT_MemoryRec_*, i8*, i8*)*, void (%struct.AFM_ParserRec_*)*, i32 (%struct.AFM_ParserRec_*)* }
%struct.AFM_ParserRec_ = type { %struct.FT_MemoryRec_*, %struct.AFM_StreamRec_*, %struct.AFM_FontInfoRec_*, i32 (i8*, i64, i8*)*, i8* }
%struct.AFM_StreamRec_ = type opaque
%struct.AFM_FontInfoRec_ = type { i8, %struct.FT_BBox_, i64, i64, %struct.AFM_TrackKernRec_*, i32, %struct.AFM_KernPairRec_*, i32 }
%struct.AFM_TrackKernRec_ = type { i32, i64, i64, i64, i64 }
%struct.AFM_KernPairRec_ = type { i32, i32, i32, i32 }
%struct.CFF_Decoder_FuncsRec_ = type { void (%struct.CFF_Decoder_*, %struct.TT_FaceRec_*, %struct.CFF_SizeRec_*, %struct.CFF_GlyphSlotRec_*, i8, i32, i32 (%struct.TT_FaceRec_*, i32, i8**, i64*)*, void (%struct.TT_FaceRec_*, i8**, i64)*)*, i32 (%struct.CFF_Decoder_*, %struct.CFF_SizeRec_*, i32)*, i32 (%struct.PS_Decoder_*, i8*, i64)* }
%struct.CFF_Decoder_ = type { %struct.CFF_Builder_, %struct.CFF_FontRec_*, [49 x i64], i64*, [17 x %struct.CFF_Decoder_Zone_], %struct.CFF_Decoder_Zone_*, i32, i32, [7 x %struct.FT_Vector_], i64, i64, i8, i8, i32, [32 x i64], i32, i32, i32, i32, i8**, i8**, i8**, i32, i32, i8, %struct.CFF_SubFontRec_*, i32 (%struct.TT_FaceRec_*, i32, i8**, i64*)*, void (%struct.TT_FaceRec_*, i8**, i64)* }
%struct.CFF_Builder_ = type { %struct.FT_MemoryRec_*, %struct.TT_FaceRec_*, %struct.CFF_GlyphSlotRec_*, %struct.FT_GlyphLoaderRec_*, %struct.FT_Outline_*, %struct.FT_Outline_*, i64, i64, %struct.FT_Vector_, %struct.FT_Vector_, %struct.FT_BBox_, i8, i8, i8, i8, i8*, i8*, %struct.CFF_Builder_FuncsRec_ }
%struct.CFF_Builder_FuncsRec_ = type { void (%struct.CFF_Builder_*, %struct.TT_FaceRec_*, %struct.CFF_SizeRec_*, %struct.CFF_GlyphSlotRec_*, i8)*, void (%struct.CFF_Builder_*)*, i32 (%struct.CFF_Builder_*, i32)*, void (%struct.CFF_Builder_*, i64, i64, i8)*, i32 (%struct.CFF_Builder_*, i64, i64)*, i32 (%struct.CFF_Builder_*)*, i32 (%struct.CFF_Builder_*, i64, i64)*, void (%struct.CFF_Builder_*)* }
%struct.CFF_Decoder_Zone_ = type { i8*, i8*, i8* }
%struct.CFF_SizeRec_ = type { %struct.FT_SizeRec_, i64 }
%struct.CID_GlyphSlotRec_ = type { %struct.FT_GlyphSlotRec_, i8, i8, i64, i64 }

@.str = private unnamed_addr constant [6 x i8] c"t1cid\00", align 1
@t1cid_driver_class = hidden local_unnamed_addr constant { { i64, i64, i8*, i64, i64, i8*, i32 (%struct.FT_ModuleRec_*)*, void (%struct.FT_ModuleRec_*)*, i8* (%struct.FT_ModuleRec_*, i8*)* }, i64, i64, i64, i32 (%struct.FT_StreamRec_*, %struct.FT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)*, void (%struct.FT_FaceRec_*)*, i32 (%struct.FT_SizeRec_*)*, void (%struct.FT_SizeRec_*)*, i32 (%struct.FT_GlyphSlotRec_*)*, void (%struct.FT_GlyphSlotRec_*)*, i32 (%struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, i32, i32)*, i32 (%struct.FT_FaceRec_*, i32, i32, %struct.FT_Vector_*)*, i32 (%struct.FT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.FT_FaceRec_*, i32, i32, i32, i64*)*, i32 (%struct.FT_SizeRec_*, %struct.FT_Size_RequestRec_*)*, i32 (%struct.FT_SizeRec_*, i64)* } { { i64, i64, i8*, i64, i64, i8*, i32 (%struct.FT_ModuleRec_*)*, void (%struct.FT_ModuleRec_*)*, i8* (%struct.FT_ModuleRec_*, i8*)* } { i64 1281, i64 104, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), i64 65536, i64 131072, i8* null, i32 (%struct.FT_ModuleRec_*)* @cid_driver_init, void (%struct.FT_ModuleRec_*)* @cid_driver_done, i8* (%struct.FT_ModuleRec_*, i8*)* @cid_get_interface }, i64 632, i64 96, i64 328, i32 (%struct.FT_StreamRec_*, %struct.FT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)* @cid_face_init, void (%struct.FT_FaceRec_*)* @cid_face_done, i32 (%struct.FT_SizeRec_*)* @cid_size_init, void (%struct.FT_SizeRec_*)* @cid_size_done, i32 (%struct.FT_GlyphSlotRec_*)* @cid_slot_init, void (%struct.FT_GlyphSlotRec_*)* @cid_slot_done, i32 (%struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, i32, i32)* @cid_slot_load_glyph, i32 (%struct.FT_FaceRec_*, i32, i32, %struct.FT_Vector_*)* null, i32 (%struct.FT_FaceRec_*, %struct.FT_StreamRec_*)* null, i32 (%struct.FT_FaceRec_*, i32, i32, i32, i64*)* null, i32 (%struct.FT_SizeRec_*, %struct.FT_Size_RequestRec_*)* @cid_size_request, i32 (%struct.FT_SizeRec_*, i64)* null }, align 8
@cid_services = internal constant [6 x %struct.FT_ServiceDescRec_] [%struct.FT_ServiceDescRec_ { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i32 0, i32 0) }, %struct.FT_ServiceDescRec_ { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i32 0, i32 0), i8* bitcast (%struct.FT_Service_PsFontNameRec_* @cid_service_ps_name to i8*) }, %struct.FT_ServiceDescRec_ { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i32 0, i32 0), i8* bitcast (%struct.FT_Service_PsInfoRec_* @cid_service_ps_info to i8*) }, %struct.FT_ServiceDescRec_ { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i32 0, i32 0), i8* bitcast (%struct.FT_Service_CIDRec_* @cid_service_cid_info to i8*) }, %struct.FT_ServiceDescRec_ { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.FT_Service_PropertiesRec_* @cid_service_properties to i8*) }, %struct.FT_ServiceDescRec_ zeroinitializer], align 16
@.str.1 = private unnamed_addr constant [12 x i8] c"font-format\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"CID Type 1\00", align 1
@.str.3 = private unnamed_addr constant [21 x i8] c"postscript-font-name\00", align 1
@cid_service_ps_name = internal constant %struct.FT_Service_PsFontNameRec_ { i8* (%struct.FT_FaceRec_*)* bitcast (i8* (%struct.CID_FaceRec_*)* @cid_get_postscript_name to i8* (%struct.FT_FaceRec_*)*) }, align 8
@.str.4 = private unnamed_addr constant [16 x i8] c"postscript-info\00", align 1
@cid_service_ps_info = internal constant %struct.FT_Service_PsInfoRec_ { i32 (%struct.FT_FaceRec_*, %struct.PS_FontInfoRec_*)* @cid_ps_get_font_info, i32 (%struct.FT_FaceRec_*, %struct.PS_FontExtraRec_*)* @cid_ps_get_font_extra, i32 (%struct.FT_FaceRec_*)* null, i32 (%struct.FT_FaceRec_*, %struct.PS_PrivateRec_*)* null, i64 (%struct.FT_FaceRec_*, i32, i32, i8*, i64)* null }, align 8
@.str.5 = private unnamed_addr constant [4 x i8] c"CID\00", align 1
@cid_service_cid_info = internal constant %struct.FT_Service_CIDRec_ { i32 (%struct.FT_FaceRec_*, i8**, i8**, i32*)* bitcast (i32 (%struct.CID_FaceRec_*, i8**, i8**, i32*)* @cid_get_ros to i32 (%struct.FT_FaceRec_*, i8**, i8**, i32*)*), i32 (%struct.FT_FaceRec_*, i8*)* bitcast (i32 (%struct.CID_FaceRec_*, i8*)* @cid_get_is_cid to i32 (%struct.FT_FaceRec_*, i8*)*), i32 (%struct.FT_FaceRec_*, i32, i32*)* bitcast (i32 (%struct.CID_FaceRec_*, i32, i32*)* @cid_get_cid_from_glyph_index to i32 (%struct.FT_FaceRec_*, i32, i32*)*) }, align 8
@.str.6 = private unnamed_addr constant [11 x i8] c"properties\00", align 1
@cid_service_properties = internal constant %struct.FT_Service_PropertiesRec_ { i32 (%struct.FT_ModuleRec_*, i8*, i8*, i8)* @ps_property_set, i32 (%struct.FT_ModuleRec_*, i8*, i8*)* @ps_property_get }, align 8
@.str.7 = private unnamed_addr constant [6 x i8] c"psaux\00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"pshinter\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"Regular\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"Bold\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"Black\00", align 1
@.str.12 = private unnamed_addr constant [32 x i8] c"%!PS-Adobe-3.0 Resource-CIDFont\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"StartData\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"/sfnts\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"(Hex)\00", align 1
@.str.16 = private unnamed_addr constant [18 x i8] c"%ADOBeginFontDict\00", align 1
@cid_field_records = internal constant [53 x %struct.T1_FieldRec_] [%struct.T1_FieldRec_ { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i32 0, i32 0), i32 0, i32 6, void (%struct.FT_FaceRec_*, i8*)* null, i32 0, i8 8, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18, i32 0, i32 0), i32 0, i32 3, void (%struct.FT_FaceRec_*, i8*)* null, i32 8, i8 8, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i32 0, i32 0), i32 0, i32 2, void (%struct.FT_FaceRec_*, i8*)* null, i32 16, i8 4, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i32 0, i32 0), i32 0, i32 5, void (%struct.FT_FaceRec_*, i8*)* null, i32 24, i8 8, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21, i32 0, i32 0), i32 0, i32 5, void (%struct.FT_FaceRec_*, i8*)* null, i32 32, i8 8, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i32 0, i32 0), i32 0, i32 2, void (%struct.FT_FaceRec_*, i8*)* null, i32 40, i8 4, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i32 0, i32 0), i32 0, i32 2, void (%struct.FT_FaceRec_*, i8*)* null, i32 136, i8 8, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i32 0, i32 0), i32 0, i32 9, void (%struct.FT_FaceRec_*, i8*)* null, i32 152, i8 8, i32 16, i32 144, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.25, i32 0, i32 0), i32 0, i32 2, void (%struct.FT_FaceRec_*, i8*)* null, i32 280, i8 8, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i32 0, i32 0), i32 0, i32 2, void (%struct.FT_FaceRec_*, i8*)* null, i32 288, i8 4, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.27, i32 0, i32 0), i32 0, i32 2, void (%struct.FT_FaceRec_*, i8*)* null, i32 292, i8 4, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i32 0, i32 0), i32 0, i32 2, void (%struct.FT_FaceRec_*, i8*)* null, i32 296, i8 8, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i32 0, i32 0), i32 3, i32 5, void (%struct.FT_FaceRec_*, i8*)* null, i32 0, i8 8, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i32 0, i32 0), i32 3, i32 5, void (%struct.FT_FaceRec_*, i8*)* null, i32 8, i8 8, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.31, i32 0, i32 0), i32 3, i32 5, void (%struct.FT_FaceRec_*, i8*)* null, i32 16, i8 8, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.32, i32 0, i32 0), i32 3, i32 5, void (%struct.FT_FaceRec_*, i8*)* null, i32 24, i8 8, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i32 0, i32 0), i32 3, i32 5, void (%struct.FT_FaceRec_*, i8*)* null, i32 32, i8 8, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.34, i32 0, i32 0), i32 3, i32 2, void (%struct.FT_FaceRec_*, i8*)* null, i32 40, i8 8, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i32 0, i32 0), i32 3, i32 1, void (%struct.FT_FaceRec_*, i8*)* null, i32 48, i8 1, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36, i32 0, i32 0), i32 3, i32 2, void (%struct.FT_FaceRec_*, i8*)* null, i32 50, i8 2, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.37, i32 0, i32 0), i32 3, i32 2, void (%struct.FT_FaceRec_*, i8*)* null, i32 52, i8 2, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.38, i32 0, i32 0), i32 2, i32 2, void (%struct.FT_FaceRec_*, i8*)* null, i32 0, i8 2, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.39, i32 0, i32 0), i32 1, i32 2, void (%struct.FT_FaceRec_*, i8*)* null, i32 256, i8 1, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i32 0, i32 0), i32 1, i32 2, void (%struct.FT_FaceRec_*, i8*)* null, i32 257, i8 1, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.41, i32 0, i32 0), i32 1, i32 2, void (%struct.FT_FaceRec_*, i8*)* null, i32 320, i8 8, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.42, i32 0, i32 0), i32 1, i32 2, void (%struct.FT_FaceRec_*, i8*)* null, i32 328, i8 4, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.43, i32 0, i32 0), i32 1, i32 2, void (%struct.FT_FaceRec_*, i8*)* null, i32 312, i8 4, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.44, i32 0, i32 0), i32 1, i32 2, void (%struct.FT_FaceRec_*, i8*)* null, i32 224, i8 4, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.45, i32 0, i32 0), i32 1, i32 3, void (%struct.FT_FaceRec_*, i8*)* null, i32 232, i8 8, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.46, i32 0, i32 0), i32 1, i32 3, void (%struct.FT_FaceRec_*, i8*)* null, i32 240, i8 8, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.47, i32 0, i32 0), i32 4, i32 2, void (%struct.FT_FaceRec_*, i8*)* null, i32 0, i8 4, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i32 0, i32 0), i32 4, i32 2, void (%struct.FT_FaceRec_*, i8*)* null, i32 4, i8 4, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.49, i32 0, i32 0), i32 4, i32 2, void (%struct.FT_FaceRec_*, i8*)* null, i32 200, i8 8, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.50, i32 0, i32 0), i32 4, i32 2, void (%struct.FT_FaceRec_*, i8*)* null, i32 208, i8 8, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.51, i32 0, i32 0), i32 4, i32 4, void (%struct.FT_FaceRec_*, i8*)* null, i32 112, i8 8, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.52, i32 0, i32 0), i32 4, i32 2, void (%struct.FT_FaceRec_*, i8*)* null, i32 120, i8 4, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.53, i32 0, i32 0), i32 4, i32 2, void (%struct.FT_FaceRec_*, i8*)* null, i32 124, i8 4, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.54, i32 0, i32 0), i32 4, i32 9, void (%struct.FT_FaceRec_*, i8*)* null, i32 12, i8 2, i32 14, i32 8, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.55, i32 0, i32 0), i32 4, i32 9, void (%struct.FT_FaceRec_*, i8*)* null, i32 40, i8 2, i32 10, i32 9, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.56, i32 0, i32 0), i32 4, i32 9, void (%struct.FT_FaceRec_*, i8*)* null, i32 60, i8 2, i32 14, i32 10, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i32 0, i32 0), i32 4, i32 9, void (%struct.FT_FaceRec_*, i8*)* null, i32 88, i8 2, i32 10, i32 11, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.58, i32 0, i32 0), i32 4, i32 9, void (%struct.FT_FaceRec_*, i8*)* null, i32 128, i8 2, i32 1, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i32 0, i32 0), i32 4, i32 9, void (%struct.FT_FaceRec_*, i8*)* null, i32 130, i8 2, i32 1, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.60, i32 0, i32 0), i32 4, i32 9, void (%struct.FT_FaceRec_*, i8*)* null, i32 216, i8 2, i32 2, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.61, i32 0, i32 0), i32 4, i32 9, void (%struct.FT_FaceRec_*, i8*)* null, i32 136, i8 2, i32 12, i32 132, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.62, i32 0, i32 0), i32 4, i32 9, void (%struct.FT_FaceRec_*, i8*)* null, i32 162, i8 2, i32 12, i32 133, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.63, i32 0, i32 0), i32 4, i32 1, void (%struct.FT_FaceRec_*, i8*)* null, i32 134, i8 1, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.64, i32 0, i32 0), i32 5, i32 7, void (%struct.FT_FaceRec_*, i8*)* null, i32 0, i8 8, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.65, i32 0, i32 0), i32 5, i32 11, void (%struct.FT_FaceRec_*, i8*)* bitcast (void (%struct.CID_FaceRec_*, %struct.CID_Parser_*)* @parse_fd_array to void (%struct.FT_FaceRec_*, i8*)*), i32 0, i8 0, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.66, i32 0, i32 0), i32 5, i32 11, void (%struct.FT_FaceRec_*, i8*)* bitcast (void (%struct.CID_FaceRec_*, %struct.CID_Parser_*)* @cid_parse_font_matrix to void (%struct.FT_FaceRec_*, i8*)*), i32 0, i8 0, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.67, i32 0, i32 0), i32 5, i32 11, void (%struct.FT_FaceRec_*, i8*)* bitcast (void (%struct.CID_FaceRec_*, %struct.CID_Parser_*)* @parse_expansion_factor to void (%struct.FT_FaceRec_*, i8*)*), i32 0, i8 0, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.68, i32 0, i32 0), i32 5, i32 11, void (%struct.FT_FaceRec_*, i8*)* bitcast (void (%struct.CID_FaceRec_*, %struct.CID_Parser_*)* @parse_font_name to void (%struct.FT_FaceRec_*, i8*)*), i32 0, i8 0, i32 0, i32 0, i32 0 }, %struct.T1_FieldRec_ zeroinitializer], align 16
@.str.17 = private unnamed_addr constant [12 x i8] c"CIDFontName\00", align 1
@.str.18 = private unnamed_addr constant [15 x i8] c"CIDFontVersion\00", align 1
@.str.19 = private unnamed_addr constant [12 x i8] c"CIDFontType\00", align 1
@.str.20 = private unnamed_addr constant [9 x i8] c"Registry\00", align 1
@.str.21 = private unnamed_addr constant [9 x i8] c"Ordering\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"Supplement\00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"UIDBase\00", align 1
@.str.24 = private unnamed_addr constant [5 x i8] c"XUID\00", align 1
@.str.25 = private unnamed_addr constant [13 x i8] c"CIDMapOffset\00", align 1
@.str.26 = private unnamed_addr constant [8 x i8] c"FDBytes\00", align 1
@.str.27 = private unnamed_addr constant [8 x i8] c"GDBytes\00", align 1
@.str.28 = private unnamed_addr constant [9 x i8] c"CIDCount\00", align 1
@.str.29 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.30 = private unnamed_addr constant [7 x i8] c"Notice\00", align 1
@.str.31 = private unnamed_addr constant [9 x i8] c"FullName\00", align 1
@.str.32 = private unnamed_addr constant [11 x i8] c"FamilyName\00", align 1
@.str.33 = private unnamed_addr constant [7 x i8] c"Weight\00", align 1
@.str.34 = private unnamed_addr constant [12 x i8] c"ItalicAngle\00", align 1
@.str.35 = private unnamed_addr constant [13 x i8] c"isFixedPitch\00", align 1
@.str.36 = private unnamed_addr constant [18 x i8] c"UnderlinePosition\00", align 1
@.str.37 = private unnamed_addr constant [19 x i8] c"UnderlineThickness\00", align 1
@.str.38 = private unnamed_addr constant [7 x i8] c"FSType\00", align 1
@.str.39 = private unnamed_addr constant [10 x i8] c"PaintType\00", align 1
@.str.40 = private unnamed_addr constant [9 x i8] c"FontType\00", align 1
@.str.41 = private unnamed_addr constant [14 x i8] c"SubrMapOffset\00", align 1
@.str.42 = private unnamed_addr constant [8 x i8] c"SDBytes\00", align 1
@.str.43 = private unnamed_addr constant [10 x i8] c"SubrCount\00", align 1
@.str.44 = private unnamed_addr constant [18 x i8] c"lenBuildCharArray\00", align 1
@.str.45 = private unnamed_addr constant [19 x i8] c"ForceBoldThreshold\00", align 1
@.str.46 = private unnamed_addr constant [12 x i8] c"StrokeWidth\00", align 1
@.str.47 = private unnamed_addr constant [9 x i8] c"UniqueID\00", align 1
@.str.48 = private unnamed_addr constant [6 x i8] c"lenIV\00", align 1
@.str.49 = private unnamed_addr constant [14 x i8] c"LanguageGroup\00", align 1
@.str.50 = private unnamed_addr constant [9 x i8] c"password\00", align 1
@.str.51 = private unnamed_addr constant [10 x i8] c"BlueScale\00", align 1
@.str.52 = private unnamed_addr constant [10 x i8] c"BlueShift\00", align 1
@.str.53 = private unnamed_addr constant [9 x i8] c"BlueFuzz\00", align 1
@.str.54 = private unnamed_addr constant [11 x i8] c"BlueValues\00", align 1
@.str.55 = private unnamed_addr constant [11 x i8] c"OtherBlues\00", align 1
@.str.56 = private unnamed_addr constant [12 x i8] c"FamilyBlues\00", align 1
@.str.57 = private unnamed_addr constant [17 x i8] c"FamilyOtherBlues\00", align 1
@.str.58 = private unnamed_addr constant [6 x i8] c"StdHW\00", align 1
@.str.59 = private unnamed_addr constant [6 x i8] c"StdVW\00", align 1
@.str.60 = private unnamed_addr constant [11 x i8] c"MinFeature\00", align 1
@.str.61 = private unnamed_addr constant [10 x i8] c"StemSnapH\00", align 1
@.str.62 = private unnamed_addr constant [10 x i8] c"StemSnapV\00", align 1
@.str.63 = private unnamed_addr constant [10 x i8] c"ForceBold\00", align 1
@.str.64 = private unnamed_addr constant [9 x i8] c"FontBBox\00", align 1
@.str.65 = private unnamed_addr constant [8 x i8] c"FDArray\00", align 1
@.str.66 = private unnamed_addr constant [11 x i8] c"FontMatrix\00", align 1
@.str.67 = private unnamed_addr constant [16 x i8] c"ExpansionFactor\00", align 1
@.str.68 = private unnamed_addr constant [9 x i8] c"FontName\00", align 1

; Function Attrs: nounwind ssp uwtable
define internal i32 @cid_driver_init(%struct.FT_ModuleRec_*) #0 {
  %2 = alloca %struct.FT_ModuleRec_*, align 8
  %3 = alloca i32, align 4
  store %struct.FT_ModuleRec_* %0, %struct.FT_ModuleRec_** %2, align 8
  %4 = bitcast %struct.FT_ModuleRec_* %0 to %struct.PS_DriverRec_*
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #10
  %6 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %0, i64 2, i32 1
  %7 = bitcast %struct.FT_LibraryRec_** %6 to i32*
  store i32 1, i32* %7, align 8
  %8 = getelementptr inbounds %struct.PS_DriverRec_, %struct.PS_DriverRec_* %4, i64 0, i32 2
  store i8 1, i8* %8, align 4
  %9 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %0, i64 2, i32 2
  %10 = bitcast %struct.FT_MemoryRec_** %9 to <4 x i32>*
  store <4 x i32> <i32 500, i32 400, i32 1000, i32 275>, <4 x i32>* %10, align 8
  %11 = getelementptr inbounds %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %9, i64 2
  %12 = bitcast %struct.FT_MemoryRec_** %11 to <4 x i32>*
  store <4 x i32> <i32 1667, i32 275, i32 2333, i32 0>, <4 x i32>* %12, align 8
  %13 = ptrtoint i32* %3 to i64
  %14 = ptrtoint %struct.FT_ModuleRec_** %2 to i64
  %15 = xor i64 %13, %14
  %16 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %0, i64 0, i32 2
  %17 = bitcast %struct.FT_MemoryRec_** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = xor i64 %15, %18
  %20 = trunc i64 %19 to i32
  %21 = lshr i32 %20, 10
  %22 = xor i32 %21, %20
  %23 = lshr i32 %20, 20
  %24 = xor i32 %22, %23
  store i32 %24, i32* %3, align 4
  %25 = getelementptr inbounds %struct.FT_ModuleRec_, %struct.FT_ModuleRec_* %0, i64 4
  %26 = bitcast %struct.FT_ModuleRec_* %25 to i32*
  store i32 %24, i32* %26, align 8
  %27 = icmp slt i32 %24, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %1
  %29 = sub nsw i32 0, %24
  br label %32

30:                                               ; preds = %1
  %31 = icmp eq i32 %24, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ 123456789, %30 ]
  store i32 %33, i32* %26, align 8
  br label %34

34:                                               ; preds = %32, %30
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #10
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @cid_driver_done(%struct.FT_ModuleRec_* nocapture) #1 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @cid_get_interface(%struct.FT_ModuleRec_* nocapture readnone, i8*) #0 {
  %3 = tail call i8* @ft_service_list_lookup(%struct.FT_ServiceDescRec_* getelementptr inbounds ([6 x %struct.FT_ServiceDescRec_], [6 x %struct.FT_ServiceDescRec_]* @cid_services, i64 0, i64 0), i8* %1) #10
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cid_face_init(%struct.FT_StreamRec_*, %struct.FT_FaceRec_*, i32, i32, %struct.FT_Parameter_* nocapture readnone) #0 {
  %6 = alloca i32, align 4
  %7 = alloca [256 x i8], align 16
  %8 = alloca i8*, align 8
  %9 = alloca [266 x i8], align 16
  %10 = alloca %struct.CID_Loader_, align 8
  %11 = alloca i32, align 4
  %12 = bitcast %struct.FT_FaceRec_* %1 to %struct.CID_FaceRec_*
  %13 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 0
  store i64 1, i64* %13, align 8
  %14 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 1, i32 1
  %15 = bitcast i64* %14 to i8**
  %16 = bitcast i64* %14 to %struct.PSAux_ServiceRec_**
  %17 = load %struct.PSAux_ServiceRec_*, %struct.PSAux_ServiceRec_** %16, align 8
  %18 = icmp eq %struct.PSAux_ServiceRec_* %17, null
  br i1 %18, label %19, label %27

19:                                               ; preds = %5
  %20 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 24
  %21 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %20, align 8
  %22 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %21, i64 0, i32 0, i32 1
  %23 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %22, align 8
  %24 = tail call i8* @FT_Get_Module_Interface(%struct.FT_LibraryRec_* %23, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0)) #10
  %25 = icmp eq i8* %24, null
  br i1 %25, label %961, label %26

26:                                               ; preds = %19
  store i8* %24, i8** %15, align 8
  br label %27

27:                                               ; preds = %5, %26
  %28 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 2, i32 12, i32 1
  %29 = bitcast i64* %28 to %struct.PSHinter_Interface_**
  %30 = load %struct.PSHinter_Interface_*, %struct.PSHinter_Interface_** %29, align 8
  %31 = icmp eq %struct.PSHinter_Interface_* %30, null
  br i1 %31, label %32, label %39

32:                                               ; preds = %27
  %33 = bitcast i64* %28 to i8**
  %34 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 24
  %35 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %34, align 8
  %36 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %35, i64 0, i32 0, i32 1
  %37 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %36, align 8
  %38 = tail call i8* @FT_Get_Module_Interface(%struct.FT_LibraryRec_* %37, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0)) #10
  store i8* %38, i8** %33, align 8
  br label %39

39:                                               ; preds = %27, %32
  %40 = tail call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %0, i64 0) #10
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %961

42:                                               ; preds = %39
  %43 = bitcast %struct.CID_Loader_* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %43) #10
  %44 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 25
  %45 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %44, align 8
  %46 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %46) #10
  store i32 -1431655766, i32* %11, align 4
  %47 = getelementptr inbounds %struct.CID_Loader_, %struct.CID_Loader_* %10, i64 0, i32 1
  %48 = bitcast i32* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 26
  %50 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %49, align 8
  %51 = load %struct.PSAux_ServiceRec_*, %struct.PSAux_ServiceRec_** %16, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 200, i1 false) #10
  %52 = getelementptr inbounds %struct.PSAux_ServiceRec_, %struct.PSAux_ServiceRec_* %51, i64 0, i32 1
  %53 = load %struct.PS_Parser_FuncsRec_*, %struct.PS_Parser_FuncsRec_** %52, align 8
  %54 = getelementptr inbounds %struct.PS_Parser_FuncsRec_, %struct.PS_Parser_FuncsRec_* %53, i64 0, i32 0
  %55 = load void (%struct.PS_ParserRec_*, i8*, i8*, %struct.FT_MemoryRec_*)*, void (%struct.PS_ParserRec_*, i8*, i8*, %struct.FT_MemoryRec_*)** %54, align 8
  %56 = getelementptr inbounds %struct.CID_Loader_, %struct.CID_Loader_* %10, i64 0, i32 0, i32 0
  call void %55(%struct.PS_ParserRec_* nonnull %56, i8* null, i8* null, %struct.FT_MemoryRec_* %45) #10
  %57 = getelementptr inbounds %struct.CID_Loader_, %struct.CID_Loader_* %10, i64 0, i32 0, i32 1
  store %struct.FT_StreamRec_* %50, %struct.FT_StreamRec_** %57, align 8
  %58 = call i64 @FT_Stream_Pos(%struct.FT_StreamRec_* %50) #10
  %59 = call i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_* %50, i64 31) #10
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %200

61:                                               ; preds = %42
  %62 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %50, i64 0, i32 8
  %63 = load i8*, i8** %62, align 8
  %64 = call i32 @strncmp(i8* %63, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.12, i64 0, i64 0), i64 31) #11
  %65 = icmp eq i32 %64, 0
  call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %50) #10
  br i1 %65, label %66, label %200

66:                                               ; preds = %61
  %67 = getelementptr inbounds [266 x i8], [266 x i8]* %9, i64 0, i64 0
  %68 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %50, i64 0, i32 1
  %69 = getelementptr inbounds [266 x i8], [266 x i8]* %9, i64 0, i64 9
  %70 = ptrtoint [266 x i8]* %9 to i64
  %71 = getelementptr inbounds %struct.CID_Loader_, %struct.CID_Loader_* %10, i64 0, i32 0, i32 2
  %72 = getelementptr inbounds %struct.CID_Loader_, %struct.CID_Loader_* %10, i64 0, i32 0, i32 4
  %73 = getelementptr inbounds %struct.CID_Loader_, %struct.CID_Loader_* %10, i64 0, i32 0, i32 3
  %74 = bitcast i8** %71 to i64*
  %75 = getelementptr inbounds %struct.CID_Loader_, %struct.CID_Loader_* %10, i64 0, i32 0, i32 0, i32 1
  %76 = bitcast i8** %75 to i64*
  %77 = getelementptr inbounds %struct.CID_Loader_, %struct.CID_Loader_* %10, i64 0, i32 0, i32 0, i32 0
  %78 = getelementptr inbounds %struct.CID_Loader_, %struct.CID_Loader_* %10, i64 0, i32 0, i32 0, i32 2
  %79 = getelementptr inbounds %struct.CID_Loader_, %struct.CID_Loader_* %10, i64 0, i32 0, i32 7
  %80 = getelementptr inbounds %struct.CID_Loader_, %struct.CID_Loader_* %10, i64 0, i32 0, i32 0, i32 5, i32 3
  %81 = getelementptr inbounds %struct.CID_Loader_, %struct.CID_Loader_* %10, i64 0, i32 0, i32 0, i32 5, i32 2
  %82 = getelementptr inbounds %struct.CID_Loader_, %struct.CID_Loader_* %10, i64 0, i32 0, i32 0, i32 3
  %83 = getelementptr [266 x i8], [266 x i8]* %9, i64 0, i64 -6
  br label %84

84:                                               ; preds = %197, %66
  call void @llvm.lifetime.start.p0i8(i64 266, i8* nonnull %67) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %67, i8 -86, i64 266, i1 false) #10
  %85 = call i64 @FT_Stream_Pos(%struct.FT_StreamRec_* %50) #10
  %86 = load i64, i64* %68, align 8
  %87 = call i64 @FT_Stream_Pos(%struct.FT_StreamRec_* %50) #10
  %88 = sub i64 %86, %87
  %89 = icmp ult i64 %88, 265
  %90 = select i1 %89, i64 %88, i64 265
  %91 = call i32 @FT_Stream_Read(%struct.FT_StreamRec_* %50, i8* nonnull %67, i64 %90) #10
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %134

93:                                               ; preds = %84, %123
  %94 = phi i64 [ %131, %123 ], [ %90, %84 ]
  %95 = phi i64 [ 9, %123 ], [ 0, %84 ]
  %96 = phi i64 [ %126, %123 ], [ %85, %84 ]
  %97 = getelementptr inbounds [266 x i8], [266 x i8]* %9, i64 0, i64 %95
  %98 = getelementptr inbounds i8, i8* %97, i64 %94
  store i8 0, i8* %98, align 1
  %99 = getelementptr inbounds i8, i8* %98, i64 -6
  %100 = icmp ult i8* %67, %99
  %101 = add nuw nsw i64 %95, %94
  br i1 %100, label %102, label %121

102:                                              ; preds = %93
  %103 = getelementptr i8, i8* %83, i64 %101
  %104 = load i8, i8* %67, align 16
  br label %105

105:                                              ; preds = %119, %102
  %106 = phi i8 [ %114, %119 ], [ %104, %102 ]
  %107 = phi i8* [ %113, %119 ], [ %67, %102 ]
  %108 = icmp eq i8 %106, 83
  br i1 %108, label %109, label %112

109:                                              ; preds = %105
  %110 = call i32 @strncmp(i8* %107, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0), i64 9) #11
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %136, label %112

112:                                              ; preds = %109, %105
  %113 = getelementptr inbounds i8, i8* %107, i64 1
  %114 = load i8, i8* %113, align 1
  %115 = icmp eq i8 %114, 115
  br i1 %115, label %116, label %119

116:                                              ; preds = %112
  %117 = call i32 @strncmp(i8* %107, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i64 0, i64 0), i64 6) #11
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %136, label %119

119:                                              ; preds = %116, %112
  %120 = icmp eq i8* %113, %103
  br i1 %120, label %121, label %105

121:                                              ; preds = %119, %93
  %122 = icmp ult i64 %101, 9
  br i1 %122, label %134, label %123

123:                                              ; preds = %121
  %124 = getelementptr inbounds i8, i8* %97, i64 -9
  %125 = getelementptr inbounds i8, i8* %124, i64 %94
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 16 %67, i8* align 1 %125, i64 9, i1 false) #10
  %126 = add i64 %96, 256
  %127 = load i64, i64* %68, align 8
  %128 = call i64 @FT_Stream_Pos(%struct.FT_StreamRec_* %50) #10
  %129 = sub i64 %127, %128
  %130 = icmp ult i64 %129, 256
  %131 = select i1 %130, i64 %129, i64 256
  %132 = call i32 @FT_Stream_Read(%struct.FT_StreamRec_* %50, i8* %69, i64 %131) #10
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %93, label %134

134:                                              ; preds = %84, %123, %121
  %135 = phi i32 [ %132, %123 ], [ 3, %121 ], [ %91, %84 ]
  call void @llvm.lifetime.end.p0i8(i64 266, i8* nonnull %67) #10
  br label %200

136:                                              ; preds = %116, %109
  %137 = phi i64 [ 10, %109 ], [ 7, %116 ]
  %138 = sub i64 %137, %70
  %139 = ptrtoint i8* %107 to i64
  %140 = add i64 %138, %139
  %141 = add i64 %140, %96
  call void @llvm.lifetime.end.p0i8(i64 266, i8* nonnull %67) #10
  %142 = sub i64 %141, %58
  %143 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %50, i64 %58) #10
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %200

145:                                              ; preds = %136
  %146 = call i32 @FT_Stream_ExtractFrame(%struct.FT_StreamRec_* %50, i64 %142, i8** %71) #10
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %200

148:                                              ; preds = %145
  store i64 %141, i64* %72, align 8
  store i64 %142, i64* %73, align 8
  %149 = load i64, i64* %74, align 8
  store i64 %149, i64* %76, align 8
  %150 = inttoptr i64 %149 to i8*
  store i8* %150, i8** %77, align 8
  %151 = getelementptr inbounds i8, i8* %150, i64 %142
  store i8* %151, i8** %78, align 8
  store i32 -1, i32* %79, align 8
  %152 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %80, align 8
  call void %152(%struct.PS_ParserRec_* nonnull %56) #10
  %153 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %81, align 8
  call void %153(%struct.PS_ParserRec_* nonnull %56) #10
  %154 = load i8*, i8** %77, align 8
  %155 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %80, align 8
  call void %155(%struct.PS_ParserRec_* nonnull %56) #10
  %156 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %81, align 8
  call void %156(%struct.PS_ParserRec_* nonnull %56) #10
  %157 = load i8*, i8** %78, align 8
  %158 = load i8*, i8** %77, align 8
  %159 = getelementptr inbounds i8, i8* %157, i64 -6
  %160 = icmp ugt i8* %158, %159
  br i1 %160, label %197, label %161

161:                                              ; preds = %148
  %162 = getelementptr inbounds i8, i8* %157, i64 -9
  br label %163

163:                                              ; preds = %192, %161
  %164 = phi i8* [ %158, %161 ], [ %195, %192 ]
  %165 = phi i8* [ %154, %161 ], [ %164, %192 ]
  %166 = phi i8* [ %150, %161 ], [ %165, %192 ]
  %167 = load i32, i32* %82, align 8
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %200

169:                                              ; preds = %163
  %170 = load i8, i8* %164, align 1
  %171 = icmp ne i8 %170, 83
  %172 = icmp ugt i8* %164, %162
  %173 = or i1 %172, %171
  br i1 %173, label %185, label %174

174:                                              ; preds = %169
  %175 = call i32 @strncmp(i8* %164, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0), i64 9) #11
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %185

177:                                              ; preds = %174
  %178 = call i32 @strncmp(i8* %166, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0), i64 5) #11
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %202

180:                                              ; preds = %177
  %181 = call i64 @strtol(i8* nocapture %165, i8** null, i32 10) #10
  %182 = icmp slt i64 %181, 0
  br i1 %182, label %200, label %183

183:                                              ; preds = %180
  %184 = getelementptr inbounds %struct.CID_Loader_, %struct.CID_Loader_* %10, i64 0, i32 0, i32 5
  store i64 %181, i64* %184, align 8
  br label %202

185:                                              ; preds = %174, %169
  %186 = getelementptr inbounds i8, i8* %164, i64 1
  %187 = load i8, i8* %186, align 1
  %188 = icmp eq i8 %187, 115
  br i1 %188, label %189, label %192

189:                                              ; preds = %185
  %190 = call i32 @strncmp(i8* %164, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i64 0, i64 0), i64 6) #11
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %200, label %192

192:                                              ; preds = %189, %185
  %193 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %80, align 8
  call void %193(%struct.PS_ParserRec_* nonnull %56) #10
  %194 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %81, align 8
  call void %194(%struct.PS_ParserRec_* nonnull %56) #10
  %195 = load i8*, i8** %77, align 8
  %196 = icmp ugt i8* %195, %159
  br i1 %196, label %197, label %163

197:                                              ; preds = %192, %148
  call void @FT_Stream_ReleaseFrame(%struct.FT_StreamRec_* %50, i8** %71) #10
  %198 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %50, i64 %141) #10
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %84, label %200

200:                                              ; preds = %197, %145, %136, %189, %163, %180, %134, %61, %42
  %201 = phi i32 [ 3, %180 ], [ %135, %134 ], [ 2, %61 ], [ %59, %42 ], [ %167, %163 ], [ 2, %189 ], [ %143, %136 ], [ %146, %145 ], [ %198, %197 ]
  store i32 %201, i32* %11, align 4
  br label %817

202:                                              ; preds = %183, %177
  store i32 0, i32* %11, align 4
  %203 = load i8*, i8** %71, align 8
  %204 = load i64, i64* %73, align 8
  store i8* %203, i8** %77, align 8
  %205 = getelementptr inbounds i8, i8* %203, i64 %204
  store i8* %205, i8** %78, align 8
  store i32 0, i32* %82, align 8
  %206 = getelementptr inbounds i8, i8* %205, i64 -1
  %207 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 2, i32 9
  %208 = bitcast i8** %8 to i8*
  %209 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 1, i32 2
  %210 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 1, i32 12, i32 2
  %211 = bitcast i64* %210 to i8*
  %212 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 2, i32 11, i32 1
  %213 = bitcast void (i8*)** %212 to i8*
  %214 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 1, i32 8
  %215 = bitcast %struct.FT_Bitmap_Size_** %214 to i8*
  %216 = bitcast i64* %209 to i8*
  %217 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 2, i32 10
  %218 = bitcast %struct.FT_CharMapRec_*** %217 to %struct.CID_FaceDictRec_**
  %219 = getelementptr inbounds %struct.CID_Loader_, %struct.CID_Loader_* %10, i64 0, i32 0, i32 0, i32 5, i32 11
  %220 = getelementptr inbounds %struct.CID_Loader_, %struct.CID_Loader_* %10, i64 0, i32 0, i32 0, i32 5, i32 12
  br label %221

221:                                              ; preds = %331, %202
  %222 = phi i8* [ %203, %202 ], [ %332, %331 ]
  store i8* %222, i8** %77, align 8
  %223 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %81, align 8
  call void %223(%struct.PS_ParserRec_* nonnull %56) #10
  %224 = load i8*, i8** %77, align 8
  %225 = icmp ult i8* %224, %205
  %226 = select i1 %225, i8* %224, i8* %206
  %227 = getelementptr inbounds i8, i8* %226, i64 -17
  %228 = icmp ult i8* %222, %227
  br i1 %228, label %229, label %245

229:                                              ; preds = %221, %242
  %230 = phi i8* [ %243, %242 ], [ %222, %221 ]
  %231 = load i8, i8* %230, align 1
  %232 = icmp eq i8 %231, 37
  br i1 %232, label %233, label %242

233:                                              ; preds = %229
  %234 = call i32 @strncmp(i8* %230, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16, i64 0, i64 0), i64 17) #11
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %236, label %242

236:                                              ; preds = %233
  %237 = load i32, i32* %207, align 8
  %238 = icmp sgt i32 %237, 0
  br i1 %238, label %239, label %242

239:                                              ; preds = %236
  %240 = load i32, i32* %79, align 8
  %241 = add nsw i32 %240, 1
  store i32 %241, i32* %79, align 8
  br label %242

242:                                              ; preds = %239, %236, %233, %229
  %243 = getelementptr inbounds i8, i8* %230, i64 1
  %244 = icmp eq i8* %243, %227
  br i1 %244, label %245, label %229

245:                                              ; preds = %242, %221
  br i1 %225, label %246, label %338

246:                                              ; preds = %245
  %247 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %80, align 8
  call void %247(%struct.PS_ParserRec_* nonnull %56) #10
  %248 = load i8*, i8** %77, align 8
  %249 = icmp ult i8* %248, %205
  %250 = load i32, i32* %82, align 8
  %251 = icmp eq i32 %250, 0
  %252 = and i1 %249, %251
  br i1 %252, label %253, label %338

253:                                              ; preds = %246
  %254 = load i8, i8* %224, align 1
  %255 = icmp eq i8 %254, 47
  %256 = getelementptr inbounds i8, i8* %224, i64 2
  %257 = icmp ult i8* %256, %205
  %258 = and i1 %257, %255
  br i1 %258, label %259, label %331

259:                                              ; preds = %253
  %260 = getelementptr inbounds i8, i8* %224, i64 1
  %261 = ptrtoint i8* %248 to i64
  %262 = ptrtoint i8* %260 to i64
  %263 = sub i64 %261, %262
  %264 = trunc i64 %263 to i32
  %265 = add i32 %264, -1
  %266 = icmp ult i32 %265, 21
  br i1 %266, label %267, label %331

267:                                              ; preds = %259
  %268 = and i64 %263, 4294967295
  %269 = icmp ugt i32 %264, 1
  %270 = load i8, i8* %260, align 1
  br label %271

271:                                              ; preds = %333, %267
  %272 = phi i8* [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0), %267 ], [ %336, %333 ]
  %273 = phi %struct.T1_FieldRec_* [ getelementptr inbounds ([53 x %struct.T1_FieldRec_], [53 x %struct.T1_FieldRec_]* @cid_field_records, i64 0, i64 0), %267 ], [ %334, %333 ]
  %274 = load i8, i8* %272, align 1
  %275 = icmp eq i8 %270, %274
  br i1 %275, label %276, label %333

276:                                              ; preds = %271
  %277 = call i64 @strlen(i8* nonnull %272) #11
  %278 = icmp eq i64 %268, %277
  br i1 %278, label %279, label %333

279:                                              ; preds = %276
  br i1 %269, label %282, label %290

280:                                              ; preds = %282
  %281 = icmp eq i64 %289, %268
  br i1 %281, label %290, label %282

282:                                              ; preds = %279, %280
  %283 = phi i64 [ %289, %280 ], [ 1, %279 ]
  %284 = getelementptr inbounds i8, i8* %260, i64 %283
  %285 = load i8, i8* %284, align 1
  %286 = getelementptr inbounds i8, i8* %272, i64 %283
  %287 = load i8, i8* %286, align 1
  %288 = icmp eq i8 %285, %287
  %289 = add nuw nsw i64 %283, 1
  br i1 %288, label %280, label %333

290:                                              ; preds = %279, %280
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %208) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %291 = getelementptr inbounds %struct.T1_FieldRec_, %struct.T1_FieldRec_* %273, i64 0, i32 2
  %292 = load i32, i32* %291, align 4
  %293 = icmp eq i32 %292, 11
  br i1 %293, label %294, label %298

294:                                              ; preds = %290
  %295 = getelementptr inbounds %struct.T1_FieldRec_, %struct.T1_FieldRec_* %273, i64 0, i32 3
  %296 = load void (%struct.FT_FaceRec_*, i8*)*, void (%struct.FT_FaceRec_*, i8*)** %295, align 8
  call void %296(%struct.FT_FaceRec_* %1, i8* nonnull %43) #10
  %297 = load i32, i32* %82, align 8
  br label %326

298:                                              ; preds = %290
  %299 = getelementptr inbounds %struct.T1_FieldRec_, %struct.T1_FieldRec_* %273, i64 0, i32 1
  %300 = load i32, i32* %299, align 8
  switch i32 %300, label %304 [
    i32 0, label %315
    i32 3, label %301
    i32 2, label %302
    i32 5, label %303
  ]

301:                                              ; preds = %298
  br label %315

302:                                              ; preds = %298
  br label %315

303:                                              ; preds = %298
  br label %315

304:                                              ; preds = %298
  %305 = load i32, i32* %79, align 8
  %306 = icmp slt i32 %305, 0
  br i1 %306, label %325, label %307

307:                                              ; preds = %304
  %308 = load i32, i32* %207, align 8
  %309 = icmp slt i32 %305, %308
  br i1 %309, label %310, label %325

310:                                              ; preds = %307
  %311 = load %struct.CID_FaceDictRec_*, %struct.CID_FaceDictRec_** %218, align 8
  %312 = sext i32 %305 to i64
  %313 = getelementptr inbounds %struct.CID_FaceDictRec_, %struct.CID_FaceDictRec_* %311, i64 %312
  %314 = bitcast %struct.CID_FaceDictRec_* %313 to i8*
  br label %315

315:                                              ; preds = %310, %303, %302, %301, %298
  %316 = phi i8* [ %314, %310 ], [ %211, %303 ], [ %213, %302 ], [ %215, %301 ], [ %216, %298 ]
  store i8* %316, i8** %8, align 8
  %317 = add i32 %292, -9
  %318 = icmp ult i32 %317, 2
  br i1 %318, label %319, label %322

319:                                              ; preds = %315
  %320 = load i32 (%struct.PS_ParserRec_*, %struct.T1_FieldRec_*, i8**, i32, i64*)*, i32 (%struct.PS_ParserRec_*, %struct.T1_FieldRec_*, i8**, i32, i64*)** %220, align 8
  %321 = call i32 %320(%struct.PS_ParserRec_* nonnull %56, %struct.T1_FieldRec_* %273, i8** nonnull %8, i32 0, i64* null) #10
  br label %326

322:                                              ; preds = %315
  %323 = load i32 (%struct.PS_ParserRec_*, %struct.T1_FieldRec_*, i8**, i32, i64*)*, i32 (%struct.PS_ParserRec_*, %struct.T1_FieldRec_*, i8**, i32, i64*)** %219, align 8
  %324 = call i32 %323(%struct.PS_ParserRec_* nonnull %56, %struct.T1_FieldRec_* %273, i8** nonnull %8, i32 0, i64* null) #10
  br label %326

325:                                              ; preds = %307, %304
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %208) #10
  store i32 160, i32* %82, align 8
  br label %341

326:                                              ; preds = %322, %319, %294
  %327 = phi i32 [ %297, %294 ], [ %321, %319 ], [ %324, %322 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %208) #10
  store i32 %327, i32* %82, align 8
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %329, label %341

329:                                              ; preds = %326
  %330 = load i8*, i8** %77, align 8
  br label %331

331:                                              ; preds = %333, %329, %259, %253
  %332 = phi i8* [ %248, %253 ], [ %248, %259 ], [ %330, %329 ], [ %248, %333 ]
  br label %221

333:                                              ; preds = %282, %276, %271
  %334 = getelementptr inbounds %struct.T1_FieldRec_, %struct.T1_FieldRec_* %273, i64 1
  %335 = getelementptr inbounds %struct.T1_FieldRec_, %struct.T1_FieldRec_* %334, i64 0, i32 0
  %336 = load i8*, i8** %335, align 8
  %337 = icmp eq i8* %336, null
  br i1 %337, label %331, label %271

338:                                              ; preds = %246, %245
  %339 = load i32, i32* %207, align 8
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %341, label %343

341:                                              ; preds = %326, %338, %325
  %342 = phi i32 [ 160, %325 ], [ 3, %338 ], [ %327, %326 ]
  store i32 %342, i32* %11, align 4
  br label %817

343:                                              ; preds = %338
  %344 = load i32, i32* %82, align 8
  store i32 %344, i32* %11, align 4
  %345 = icmp ne i32 %344, 0
  %346 = icmp slt i32 %2, 0
  %347 = or i1 %346, %345
  br i1 %347, label %817, label %348

348:                                              ; preds = %343
  %349 = call i8* @ft_mem_alloc(%struct.FT_MemoryRec_* %45, i64 80, i32* nonnull %11) #10
  %350 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 2, i32 12, i32 3
  %351 = bitcast i64* %350 to %struct.FT_StreamRec_**
  %352 = bitcast i64* %350 to i8**
  store i8* %349, i8** %352, align 8
  %353 = load i32, i32* %11, align 4
  %354 = icmp eq i32 %353, 0
  br i1 %354, label %355, label %817

355:                                              ; preds = %348
  %356 = getelementptr inbounds %struct.CID_Loader_, %struct.CID_Loader_* %10, i64 0, i32 0, i32 5
  %357 = load i64, i64* %356, align 8
  %358 = icmp eq i64 %357, 0
  br i1 %358, label %458, label %359

359:                                              ; preds = %355
  %360 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %49, align 8
  %361 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %360, i64 0, i32 1
  %362 = load i64, i64* %361, align 8
  %363 = load i64, i64* %72, align 8
  %364 = sub i64 %362, %363
  %365 = icmp ugt i64 %357, %364
  br i1 %365, label %366, label %367

366:                                              ; preds = %359
  store i64 %364, i64* %356, align 8
  br label %367

367:                                              ; preds = %366, %359
  %368 = phi i64 [ %364, %366 ], [ %357, %359 ]
  %369 = call i8* @ft_mem_qalloc(%struct.FT_MemoryRec_* %45, i64 %368, i32* nonnull %11) #10
  %370 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 2, i32 12, i32 2
  %371 = bitcast i64* %370 to i8**
  store i8* %369, i8** %371, align 8
  %372 = load i32, i32* %11, align 4
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %374, label %817

374:                                              ; preds = %367
  %375 = load i64, i64* %356, align 8
  %376 = load i64, i64* %72, align 8
  %377 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %49, align 8
  %378 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %378) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %378, i8 -86, i64 256, i1 false) #10
  %379 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %377, i64 %376) #10
  %380 = icmp eq i32 %379, 0
  br i1 %380, label %381, label %449

381:                                              ; preds = %374
  %382 = getelementptr inbounds i8, i8* %369, i64 %375
  %383 = icmp sgt i64 %375, 0
  br i1 %383, label %384, label %451

384:                                              ; preds = %381
  %385 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %377, i64 0, i32 1
  br label %386

386:                                              ; preds = %445, %384
  %387 = phi i8 [ 1, %384 ], [ %446, %445 ]
  %388 = phi i8* [ %369, %384 ], [ %443, %445 ]
  %389 = phi i8* [ %378, %384 ], [ %412, %445 ]
  %390 = phi i8* [ %378, %384 ], [ %447, %445 ]
  br label %391

391:                                              ; preds = %430, %386
  %392 = phi i8* [ %389, %386 ], [ %412, %430 ]
  %393 = phi i8* [ %390, %386 ], [ %431, %430 ]
  %394 = icmp ult i8* %393, %392
  br i1 %394, label %410, label %395

395:                                              ; preds = %391
  %396 = call i64 @FT_Stream_Pos(%struct.FT_StreamRec_* %377) #10
  %397 = load i64, i64* %385, align 8
  %398 = sub i64 %397, %396
  %399 = icmp eq i64 %398, 0
  br i1 %399, label %449, label %400

400:                                              ; preds = %395
  %401 = icmp ult i64 %398, 256
  %402 = select i1 %401, i64 %398, i64 256
  %403 = call i32 @FT_Stream_Read(%struct.FT_StreamRec_* %377, i8* nonnull %378, i64 %402) #10
  %404 = icmp eq i32 %403, 0
  br i1 %404, label %405, label %449

405:                                              ; preds = %400
  %406 = call i64 @FT_Stream_Pos(%struct.FT_StreamRec_* %377) #10
  %407 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 %406
  %408 = sub i64 0, %396
  %409 = getelementptr inbounds i8, i8* %407, i64 %408
  br label %410

410:                                              ; preds = %405, %391
  %411 = phi i8* [ %378, %405 ], [ %393, %391 ]
  %412 = phi i8* [ %409, %405 ], [ %392, %391 ]
  %413 = load i8, i8* %411, align 1
  %414 = zext i8 %413 to i32
  %415 = add nsw i32 %414, -48
  %416 = icmp ult i32 %415, 10
  br i1 %416, label %417, label %419

417:                                              ; preds = %410
  %418 = trunc i32 %415 to i8
  br label %432

419:                                              ; preds = %410
  %420 = add i8 %413, -97
  %421 = icmp ult i8 %420, 6
  br i1 %421, label %422, label %424

422:                                              ; preds = %419
  %423 = add nsw i8 %413, -87
  br label %432

424:                                              ; preds = %419
  %425 = add i8 %413, -65
  %426 = icmp ult i8 %425, 6
  br i1 %426, label %427, label %429

427:                                              ; preds = %424
  %428 = add nsw i8 %413, -55
  br label %432

429:                                              ; preds = %424
  switch i8 %413, label %449 [
    i8 32, label %430
    i8 9, label %430
    i8 13, label %430
    i8 10, label %430
    i8 12, label %430
    i8 0, label %430
    i8 62, label %432
  ]

430:                                              ; preds = %429, %429, %429, %429, %429, %429
  %431 = getelementptr inbounds i8, i8* %411, i64 1
  br label %391

432:                                              ; preds = %429, %427, %422, %417
  %433 = phi i8 [ %418, %417 ], [ %423, %422 ], [ %428, %427 ], [ 0, %429 ]
  %434 = phi i8 [ 0, %417 ], [ 0, %422 ], [ 0, %427 ], [ 1, %429 ]
  %435 = icmp eq i8 %387, 0
  br i1 %435, label %438, label %436

436:                                              ; preds = %432
  %437 = shl i8 %433, 4
  store i8 %437, i8* %388, align 1
  br label %442

438:                                              ; preds = %432
  %439 = load i8, i8* %388, align 1
  %440 = add i8 %439, %433
  store i8 %440, i8* %388, align 1
  %441 = getelementptr inbounds i8, i8* %388, i64 1
  br label %442

442:                                              ; preds = %438, %436
  %443 = phi i8* [ %388, %436 ], [ %441, %438 ]
  %444 = icmp eq i8 %434, 0
  br i1 %444, label %445, label %451

445:                                              ; preds = %442
  %446 = sub i8 1, %387
  %447 = getelementptr inbounds i8, i8* %411, i64 1
  %448 = icmp ult i8* %443, %382
  br i1 %448, label %386, label %451

449:                                              ; preds = %429, %400, %395, %374
  %450 = phi i32 [ %379, %374 ], [ 160, %429 ], [ 160, %395 ], [ %403, %400 ]
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %378) #10
  store i32 %450, i32* %11, align 4
  br label %817

451:                                              ; preds = %445, %442, %381
  %452 = phi i8* [ %369, %381 ], [ %443, %442 ], [ %443, %445 ]
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %378) #10
  store i32 0, i32* %11, align 4
  %453 = ptrtoint i8* %452 to i64
  %454 = ptrtoint i8* %369 to i64
  %455 = sub i64 %453, %454
  %456 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %351, align 8
  %457 = load i8*, i8** %371, align 8
  call void @FT_Stream_OpenMemory(%struct.FT_StreamRec_* %456, i8* %457, i64 %455) #10
  br label %462

458:                                              ; preds = %355
  %459 = bitcast %struct.FT_StreamRec_** %49 to i8**
  %460 = load i8*, i8** %459, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %349, i8* align 8 %460, i64 80, i1 false) #10
  %461 = load i64, i64* %72, align 8
  br label %462

462:                                              ; preds = %458, %451
  %463 = phi i64 [ %461, %458 ], [ 0, %451 ]
  %464 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 2, i32 11
  %465 = bitcast %struct.FT_Generic_* %464 to i64*
  store i64 %463, i64* %465, align 8
  %466 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 2, i32 7
  %467 = load i32, i32* %466, align 8
  %468 = icmp slt i32 %467, 0
  br i1 %468, label %473, label %469

469:                                              ; preds = %462
  %470 = getelementptr inbounds %struct.CID_FaceRec_, %struct.CID_FaceRec_* %12, i64 0, i32 3, i32 13
  %471 = load i32, i32* %470, align 4
  %472 = icmp slt i32 %471, 1
  br i1 %472, label %473, label %474

473:                                              ; preds = %469, %462
  store i32 3, i32* %11, align 4
  br label %817

474:                                              ; preds = %469
  %475 = icmp sgt i32 %467, 4
  %476 = icmp sgt i32 %471, 4
  %477 = or i1 %475, %476
  br i1 %477, label %478, label %479

478:                                              ; preds = %474
  store i32 3, i32* %11, align 4
  br label %817

479:                                              ; preds = %474
  %480 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %351, align 8
  %481 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %480, i64 0, i32 1
  %482 = load i64, i64* %481, align 8
  %483 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 2, i32 11
  %484 = bitcast %struct.FT_Generic_* %483 to i64*
  %485 = sub i64 %482, %463
  %486 = add nuw nsw i32 %471, %467
  %487 = sext i32 %486 to i64
  %488 = load i32, i32* %207, align 8
  %489 = icmp sgt i32 %488, 0
  br i1 %489, label %490, label %536

490:                                              ; preds = %479, %531
  %491 = phi i64 [ %532, %531 ], [ 0, %479 ]
  %492 = load %struct.CID_FaceDictRec_*, %struct.CID_FaceDictRec_** %218, align 8
  %493 = getelementptr inbounds %struct.CID_FaceDictRec_, %struct.CID_FaceDictRec_* %492, i64 %491, i32 0, i32 11
  %494 = load i32, i32* %493, align 8
  %495 = icmp ugt i32 %494, 1000
  br i1 %495, label %496, label %497

496:                                              ; preds = %490
  store i32 7, i32* %493, align 8
  br label %497

497:                                              ; preds = %496, %490
  %498 = getelementptr inbounds %struct.CID_FaceDictRec_, %struct.CID_FaceDictRec_* %492, i64 %491, i32 0, i32 12
  %499 = load i32, i32* %498, align 4
  %500 = icmp ugt i32 %499, 1000
  br i1 %500, label %501, label %502

501:                                              ; preds = %497
  store i32 1, i32* %498, align 4
  br label %502

502:                                              ; preds = %501, %497
  %503 = getelementptr inbounds %struct.CID_FaceDictRec_, %struct.CID_FaceDictRec_* %492, i64 %491, i32 11
  %504 = load i32, i32* %503, align 8
  %505 = icmp slt i32 %504, 0
  br i1 %505, label %512, label %506

506:                                              ; preds = %502
  %507 = getelementptr inbounds %struct.CID_FaceDictRec_, %struct.CID_FaceDictRec_* %492, i64 %491, i32 9
  %508 = load i32, i32* %507, align 8
  %509 = icmp ne i32 %508, 0
  %510 = icmp eq i32 %504, 0
  %511 = and i1 %510, %509
  br i1 %511, label %512, label %513

512:                                              ; preds = %506, %502
  store i32 3, i32* %11, align 4
  br label %817

513:                                              ; preds = %506
  %514 = icmp sgt i32 %504, 4
  br i1 %514, label %515, label %516

515:                                              ; preds = %513
  store i32 3, i32* %11, align 4
  br label %817

516:                                              ; preds = %513
  %517 = getelementptr inbounds %struct.CID_FaceDictRec_, %struct.CID_FaceDictRec_* %492, i64 %491, i32 10
  %518 = load i64, i64* %517, align 8
  %519 = icmp ult i64 %485, %518
  br i1 %519, label %520, label %521

520:                                              ; preds = %516
  store i32 3, i32* %11, align 4
  br label %817

521:                                              ; preds = %516
  %522 = icmp slt i32 %508, 0
  br i1 %522, label %530, label %523

523:                                              ; preds = %521
  br i1 %510, label %531, label %524

524:                                              ; preds = %523
  %525 = zext i32 %508 to i64
  %526 = sub i64 %485, %518
  %527 = zext i32 %504 to i64
  %528 = udiv i64 %526, %527
  %529 = icmp ult i64 %528, %525
  br i1 %529, label %530, label %531

530:                                              ; preds = %524, %521
  store i32 3, i32* %11, align 4
  br label %817

531:                                              ; preds = %524, %523
  %532 = add nuw nsw i64 %491, 1
  %533 = load i32, i32* %207, align 8
  %534 = sext i32 %533 to i64
  %535 = icmp slt i64 %532, %534
  br i1 %535, label %490, label %536

536:                                              ; preds = %531, %479
  %537 = phi i32 [ %488, %479 ], [ %533, %531 ]
  %538 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 2, i32 6
  %539 = bitcast i8** %538 to i64*
  %540 = load i64, i64* %539, align 8
  %541 = icmp ult i64 %485, %540
  br i1 %541, label %542, label %543

542:                                              ; preds = %536
  store i32 3, i32* %11, align 4
  br label %817

543:                                              ; preds = %536
  %544 = icmp eq i32 %486, 0
  br i1 %544, label %553, label %545

545:                                              ; preds = %543
  %546 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 2, i32 8
  %547 = bitcast %struct.FT_Bitmap_Size_** %546 to i64*
  %548 = load i64, i64* %547, align 8
  %549 = sub i64 %485, %540
  %550 = udiv i64 %549, %487
  %551 = icmp ugt i64 %548, %550
  br i1 %551, label %552, label %553

552:                                              ; preds = %545
  store i32 3, i32* %11, align 4
  br label %817

553:                                              ; preds = %545, %543
  %554 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %44, align 8
  %555 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %351, align 8
  %556 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %556) #10
  store i32 -1431655766, i32* %6, align 4
  %557 = load %struct.PSAux_ServiceRec_*, %struct.PSAux_ServiceRec_** %16, align 8
  %558 = sext i32 %537 to i64
  %559 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %554, i64 16, i64 0, i64 %558, i8* null, i32* nonnull %6) #10
  %560 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 2, i32 12
  %561 = bitcast %struct.FT_BBox_* %560 to %struct.CID_SubrsRec_**
  %562 = bitcast %struct.FT_BBox_* %560 to i8**
  store i8* %559, i8** %562, align 8
  %563 = load i32, i32* %6, align 4
  %564 = icmp eq i32 %563, 0
  br i1 %564, label %565, label %814

565:                                              ; preds = %553
  %566 = load i32, i32* %207, align 8
  %567 = icmp sgt i32 %566, 0
  br i1 %567, label %568, label %814

568:                                              ; preds = %565
  %569 = bitcast i8* %559 to %struct.CID_SubrsRec_*
  %570 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %555, i64 0, i32 8
  %571 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %555, i64 0, i32 1
  %572 = getelementptr inbounds %struct.PSAux_ServiceRec_, %struct.PSAux_ServiceRec_* %557, i64 0, i32 4
  br label %573

573:                                              ; preds = %768, %568
  %574 = phi i32 [ %566, %568 ], [ %769, %768 ]
  %575 = phi i64 [ 0, %568 ], [ %773, %768 ]
  %576 = phi i64* [ null, %568 ], [ %772, %768 ]
  %577 = phi i8* [ null, %568 ], [ %771, %768 ]
  %578 = phi i32 [ 0, %568 ], [ %770, %768 ]
  %579 = phi %struct.CID_SubrsRec_* [ %569, %568 ], [ %774, %768 ]
  %580 = load %struct.CID_FaceDictRec_*, %struct.CID_FaceDictRec_** %218, align 8
  %581 = getelementptr inbounds %struct.CID_FaceDictRec_, %struct.CID_FaceDictRec_* %580, i64 %575, i32 0, i32 1
  %582 = load i32, i32* %581, align 4
  %583 = getelementptr inbounds %struct.CID_FaceDictRec_, %struct.CID_FaceDictRec_* %580, i64 %575, i32 9
  %584 = load i32, i32* %583, align 8
  %585 = icmp eq i32 %584, 0
  br i1 %585, label %768, label %586

586:                                              ; preds = %573
  %587 = add i32 %584, 1
  %588 = icmp ugt i32 %587, %578
  br i1 %588, label %589, label %601

589:                                              ; preds = %586
  %590 = add i32 %584, 4
  %591 = and i32 %590, -4
  %592 = icmp ugt i32 %591, %578
  br i1 %592, label %594, label %593

593:                                              ; preds = %589
  store i32 160, i32* %6, align 4
  br label %777

594:                                              ; preds = %589
  %595 = zext i32 %578 to i64
  %596 = zext i32 %591 to i64
  %597 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %554, i64 8, i64 %595, i64 %596, i8* %577, i32* nonnull %6) #10
  %598 = bitcast i8* %597 to i64*
  %599 = load i32, i32* %6, align 4
  %600 = icmp eq i32 %599, 0
  br i1 %600, label %601, label %777

601:                                              ; preds = %594, %586
  %602 = phi i32 [ %578, %586 ], [ %591, %594 ]
  %603 = phi i8* [ %577, %586 ], [ %597, %594 ]
  %604 = phi i64* [ %576, %586 ], [ %598, %594 ]
  %605 = load i64, i64* %484, align 8
  %606 = getelementptr inbounds %struct.CID_FaceDictRec_, %struct.CID_FaceDictRec_* %580, i64 %575, i32 10
  %607 = load i64, i64* %606, align 8
  %608 = add i64 %607, %605
  %609 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %555, i64 %608) #10
  store i32 %609, i32* %6, align 4
  %610 = icmp eq i32 %609, 0
  br i1 %610, label %611, label %777

611:                                              ; preds = %601
  %612 = getelementptr inbounds %struct.CID_FaceDictRec_, %struct.CID_FaceDictRec_* %580, i64 %575, i32 11
  %613 = load i32, i32* %612, align 8
  %614 = mul i32 %613, %587
  %615 = zext i32 %614 to i64
  %616 = call i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_* %555, i64 %615) #10
  store i32 %616, i32* %6, align 4
  %617 = icmp eq i32 %616, 0
  br i1 %617, label %618, label %777

618:                                              ; preds = %611
  %619 = load i8*, i8** %570, align 8
  br label %620

620:                                              ; preds = %680, %618
  %621 = phi i32 [ 0, %618 ], [ %685, %680 ]
  %622 = phi i8* [ %619, %618 ], [ %682, %680 ]
  %623 = load i32, i32* %612, align 8
  %624 = trunc i32 %623 to i8
  %625 = icmp eq i8 %624, 0
  br i1 %625, label %680, label %626

626:                                              ; preds = %620
  %627 = add i8 %624, -1
  %628 = and i8 %624, 3
  %629 = icmp ult i8 %627, 3
  br i1 %629, label %658, label %630

630:                                              ; preds = %626
  %631 = sub i8 %624, %628
  br label %632

632:                                              ; preds = %632, %630
  %633 = phi i8* [ %622, %630 ], [ %652, %632 ]
  %634 = phi i64 [ 0, %630 ], [ %655, %632 ]
  %635 = phi i8 [ %631, %630 ], [ %656, %632 ]
  %636 = shl i64 %634, 8
  %637 = getelementptr inbounds i8, i8* %633, i64 1
  %638 = load i8, i8* %633, align 1
  %639 = zext i8 %638 to i64
  %640 = or i64 %636, %639
  %641 = shl i64 %640, 8
  %642 = getelementptr inbounds i8, i8* %633, i64 2
  %643 = load i8, i8* %637, align 1
  %644 = zext i8 %643 to i64
  %645 = or i64 %641, %644
  %646 = shl i64 %645, 8
  %647 = getelementptr inbounds i8, i8* %633, i64 3
  %648 = load i8, i8* %642, align 1
  %649 = zext i8 %648 to i64
  %650 = or i64 %646, %649
  %651 = shl i64 %650, 8
  %652 = getelementptr inbounds i8, i8* %633, i64 4
  %653 = load i8, i8* %647, align 1
  %654 = zext i8 %653 to i64
  %655 = or i64 %651, %654
  %656 = add i8 %635, -4
  %657 = icmp eq i8 %656, 0
  br i1 %657, label %658, label %632

658:                                              ; preds = %632, %626
  %659 = phi i64 [ undef, %626 ], [ %655, %632 ]
  %660 = phi i8* [ %622, %626 ], [ %652, %632 ]
  %661 = phi i64 [ 0, %626 ], [ %655, %632 ]
  %662 = icmp eq i8 %628, 0
  br i1 %662, label %674, label %663

663:                                              ; preds = %658, %663
  %664 = phi i8* [ %668, %663 ], [ %660, %658 ]
  %665 = phi i64 [ %671, %663 ], [ %661, %658 ]
  %666 = phi i8 [ %672, %663 ], [ %628, %658 ]
  %667 = shl i64 %665, 8
  %668 = getelementptr inbounds i8, i8* %664, i64 1
  %669 = load i8, i8* %664, align 1
  %670 = zext i8 %669 to i64
  %671 = or i64 %667, %670
  %672 = add i8 %666, -1
  %673 = icmp eq i8 %672, 0
  br i1 %673, label %674, label %663, !llvm.loop !2

674:                                              ; preds = %663, %658
  %675 = phi i64 [ %659, %658 ], [ %671, %663 ]
  %676 = add i8 %624, -1
  %677 = zext i8 %676 to i64
  %678 = add nuw nsw i64 %677, 1
  %679 = getelementptr i8, i8* %622, i64 %678
  br label %680

680:                                              ; preds = %674, %620
  %681 = phi i64 [ 0, %620 ], [ %675, %674 ]
  %682 = phi i8* [ %622, %620 ], [ %679, %674 ]
  %683 = zext i32 %621 to i64
  %684 = getelementptr inbounds i64, i64* %604, i64 %683
  store i64 %681, i64* %684, align 8
  %685 = add i32 %621, 1
  %686 = icmp ugt i32 %685, %584
  br i1 %686, label %687, label %620

687:                                              ; preds = %680
  call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %555) #10
  %688 = load i64, i64* %604, align 8
  br label %691

689:                                              ; preds = %691
  %690 = icmp ugt i32 %698, %584
  br i1 %690, label %700, label %691

691:                                              ; preds = %689, %687
  %692 = phi i64 [ %696, %689 ], [ %688, %687 ]
  %693 = phi i32 [ %698, %689 ], [ 1, %687 ]
  %694 = zext i32 %693 to i64
  %695 = getelementptr inbounds i64, i64* %604, i64 %694
  %696 = load i64, i64* %695, align 8
  %697 = icmp ugt i64 %692, %696
  %698 = add i32 %693, 1
  br i1 %697, label %699, label %689

699:                                              ; preds = %691
  store i32 3, i32* %6, align 4
  br label %777

700:                                              ; preds = %689
  %701 = zext i32 %584 to i64
  %702 = getelementptr inbounds i64, i64* %604, i64 %701
  %703 = load i64, i64* %702, align 8
  %704 = load i64, i64* %571, align 8
  %705 = load i64, i64* %484, align 8
  %706 = sub i64 %704, %705
  %707 = icmp ugt i64 %703, %706
  br i1 %707, label %708, label %709

708:                                              ; preds = %700
  store i32 3, i32* %6, align 4
  br label %777

709:                                              ; preds = %700
  %710 = sub i64 %703, %688
  %711 = zext i32 %587 to i64
  %712 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %554, i64 8, i64 0, i64 %711, i8* null, i32* nonnull %6) #10
  %713 = getelementptr inbounds %struct.CID_SubrsRec_, %struct.CID_SubrsRec_* %579, i64 0, i32 1
  %714 = bitcast i8*** %713 to i8**
  store i8* %712, i8** %714, align 8
  %715 = load i32, i32* %6, align 4
  %716 = icmp eq i32 %715, 0
  br i1 %716, label %717, label %777

717:                                              ; preds = %709
  %718 = call i8* @ft_mem_qalloc(%struct.FT_MemoryRec_* %554, i64 %710, i32* nonnull %6) #10
  %719 = load i8**, i8*** %713, align 8
  store i8* %718, i8** %719, align 8
  %720 = load i32, i32* %6, align 4
  %721 = icmp eq i32 %720, 0
  br i1 %721, label %722, label %777

722:                                              ; preds = %717
  %723 = load i64, i64* %484, align 8
  %724 = load i64, i64* %604, align 8
  %725 = add i64 %724, %723
  %726 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %555, i64 %725) #10
  store i32 %726, i32* %6, align 4
  %727 = icmp eq i32 %726, 0
  br i1 %727, label %728, label %777

728:                                              ; preds = %722
  %729 = load i8**, i8*** %713, align 8
  %730 = load i8*, i8** %729, align 8
  %731 = call i32 @FT_Stream_Read(%struct.FT_StreamRec_* %555, i8* %730, i64 %710) #10
  store i32 %731, i32* %6, align 4
  %732 = icmp eq i32 %731, 0
  br i1 %732, label %733, label %777

733:                                              ; preds = %728, %733
  %734 = phi i32 [ %748, %733 ], [ 1, %728 ]
  %735 = zext i32 %734 to i64
  %736 = getelementptr inbounds i64, i64* %604, i64 %735
  %737 = load i64, i64* %736, align 8
  %738 = add i32 %734, -1
  %739 = zext i32 %738 to i64
  %740 = getelementptr inbounds i64, i64* %604, i64 %739
  %741 = load i64, i64* %740, align 8
  %742 = sub i64 %737, %741
  %743 = load i8**, i8*** %713, align 8
  %744 = getelementptr inbounds i8*, i8** %743, i64 %739
  %745 = load i8*, i8** %744, align 8
  %746 = getelementptr inbounds i8, i8* %745, i64 %742
  %747 = getelementptr inbounds i8*, i8** %743, i64 %735
  store i8* %746, i8** %747, align 8
  %748 = add i32 %734, 1
  %749 = icmp ugt i32 %748, %584
  br i1 %749, label %750, label %733

750:                                              ; preds = %733
  %751 = icmp sgt i32 %582, -1
  br i1 %751, label %752, label %765

752:                                              ; preds = %750, %752
  %753 = phi i64 [ %754, %752 ], [ 0, %750 ]
  %754 = add nuw nsw i64 %753, 1
  %755 = getelementptr inbounds i64, i64* %604, i64 %754
  %756 = load i64, i64* %755, align 8
  %757 = getelementptr inbounds i64, i64* %604, i64 %753
  %758 = load i64, i64* %757, align 8
  %759 = sub i64 %756, %758
  %760 = load void (i8*, i64, i16)*, void (i8*, i64, i16)** %572, align 8
  %761 = load i8**, i8*** %713, align 8
  %762 = getelementptr inbounds i8*, i8** %761, i64 %753
  %763 = load i8*, i8** %762, align 8
  call void %760(i8* %763, i64 %759, i16 zeroext 4330) #10
  %764 = icmp eq i64 %754, %701
  br i1 %764, label %765, label %752

765:                                              ; preds = %752, %750
  %766 = getelementptr inbounds %struct.CID_SubrsRec_, %struct.CID_SubrsRec_* %579, i64 0, i32 0
  store i32 %584, i32* %766, align 8
  %767 = load i32, i32* %207, align 8
  br label %768

768:                                              ; preds = %765, %573
  %769 = phi i32 [ %767, %765 ], [ %574, %573 ]
  %770 = phi i32 [ %602, %765 ], [ %578, %573 ]
  %771 = phi i8* [ %603, %765 ], [ %577, %573 ]
  %772 = phi i64* [ %604, %765 ], [ %576, %573 ]
  %773 = add nuw nsw i64 %575, 1
  %774 = getelementptr inbounds %struct.CID_SubrsRec_, %struct.CID_SubrsRec_* %579, i64 1
  %775 = sext i32 %769 to i64
  %776 = icmp slt i64 %773, %775
  br i1 %776, label %573, label %814

777:                                              ; preds = %728, %722, %717, %709, %611, %601, %594, %708, %699, %593
  %778 = phi i8* [ %603, %708 ], [ %603, %699 ], [ %577, %593 ], [ %597, %594 ], [ %603, %611 ], [ %603, %601 ], [ %603, %717 ], [ %603, %709 ], [ %603, %728 ], [ %603, %722 ]
  %779 = load %struct.CID_SubrsRec_*, %struct.CID_SubrsRec_** %561, align 8
  %780 = icmp eq %struct.CID_SubrsRec_* %779, null
  br i1 %780, label %814, label %781

781:                                              ; preds = %777
  %782 = bitcast %struct.CID_SubrsRec_* %779 to i8*
  %783 = load i32, i32* %207, align 8
  %784 = icmp sgt i32 %783, 0
  br i1 %784, label %785, label %812

785:                                              ; preds = %781, %808
  %786 = phi %struct.CID_SubrsRec_* [ %809, %808 ], [ %779, %781 ]
  %787 = phi i64 [ %804, %808 ], [ 0, %781 ]
  %788 = getelementptr inbounds %struct.CID_SubrsRec_, %struct.CID_SubrsRec_* %786, i64 %787, i32 1
  %789 = load i8**, i8*** %788, align 8
  %790 = icmp eq i8** %789, null
  br i1 %790, label %797, label %791

791:                                              ; preds = %785
  %792 = load i8*, i8** %789, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %554, i8* %792) #10
  %793 = load %struct.CID_SubrsRec_*, %struct.CID_SubrsRec_** %561, align 8
  %794 = getelementptr inbounds %struct.CID_SubrsRec_, %struct.CID_SubrsRec_* %793, i64 %787, i32 1
  %795 = load i8**, i8*** %794, align 8
  store i8* null, i8** %795, align 8
  %796 = load %struct.CID_SubrsRec_*, %struct.CID_SubrsRec_** %561, align 8
  br label %797

797:                                              ; preds = %791, %785
  %798 = phi %struct.CID_SubrsRec_* [ %786, %785 ], [ %796, %791 ]
  %799 = getelementptr inbounds %struct.CID_SubrsRec_, %struct.CID_SubrsRec_* %798, i64 %787, i32 1
  %800 = bitcast i8*** %799 to i8**
  %801 = load i8*, i8** %800, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %554, i8* %801) #10
  %802 = load %struct.CID_SubrsRec_*, %struct.CID_SubrsRec_** %561, align 8
  %803 = getelementptr inbounds %struct.CID_SubrsRec_, %struct.CID_SubrsRec_* %802, i64 %787, i32 1
  store i8** null, i8*** %803, align 8
  %804 = add nuw nsw i64 %787, 1
  %805 = load i32, i32* %207, align 8
  %806 = sext i32 %805 to i64
  %807 = icmp slt i64 %804, %806
  br i1 %807, label %808, label %810

808:                                              ; preds = %797
  %809 = load %struct.CID_SubrsRec_*, %struct.CID_SubrsRec_** %561, align 8
  br label %785

810:                                              ; preds = %797
  %811 = load i8*, i8** %562, align 8
  br label %812

812:                                              ; preds = %810, %781
  %813 = phi i8* [ %811, %810 ], [ %782, %781 ]
  call void @ft_mem_free(%struct.FT_MemoryRec_* %554, i8* %813) #10
  store %struct.CID_SubrsRec_* null, %struct.CID_SubrsRec_** %561, align 8
  br label %814

814:                                              ; preds = %768, %812, %777, %565, %553
  %815 = phi i8* [ null, %553 ], [ %778, %812 ], [ %778, %777 ], [ null, %565 ], [ %771, %768 ]
  call void @ft_mem_free(%struct.FT_MemoryRec_* %554, i8* %815) #10
  %816 = load i32, i32* %6, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %556) #10
  store i32 %816, i32* %11, align 4
  br label %817

817:                                              ; preds = %814, %552, %542, %530, %520, %515, %512, %478, %473, %449, %367, %348, %343, %341, %200
  %818 = getelementptr inbounds %struct.CID_Loader_, %struct.CID_Loader_* %10, i64 0, i32 0, i32 2
  %819 = load i8*, i8** %818, align 8
  %820 = icmp eq i8* %819, null
  br i1 %820, label %823, label %821

821:                                              ; preds = %817
  %822 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %57, align 8
  call void @FT_Stream_ReleaseFrame(%struct.FT_StreamRec_* %822, i8** %818) #10
  br label %823

823:                                              ; preds = %817, %821
  %824 = getelementptr inbounds %struct.CID_Loader_, %struct.CID_Loader_* %10, i64 0, i32 0, i32 0, i32 5, i32 1
  %825 = load void (%struct.PS_ParserRec_*)*, void (%struct.PS_ParserRec_*)** %824, align 8
  call void %825(%struct.PS_ParserRec_* nonnull %56) #10
  %826 = load i32, i32* %11, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %46) #10
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %43) #10
  %827 = icmp ne i32 %826, 0
  %828 = icmp slt i32 %2, 0
  %829 = or i1 %828, %827
  br i1 %829, label %961, label %830

830:                                              ; preds = %823
  %831 = and i32 %2, 65535
  %832 = icmp eq i32 %831, 0
  br i1 %832, label %833, label %961

833:                                              ; preds = %830
  %834 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 1, i32 2
  %835 = getelementptr inbounds i64, i64* %834, i64 6
  %836 = bitcast i64* %835 to %struct.PS_FontInfoRec_*
  %837 = getelementptr inbounds i64, i64* %834, i64 37
  %838 = load i64, i64* %837, align 8
  %839 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 4
  store i64 %838, i64* %839, align 8
  %840 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 9
  store i32 0, i32* %840, align 8
  %841 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 1
  store i64 0, i64* %841, align 8
  %842 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 2
  %843 = load i64, i64* %842, align 8
  %844 = or i64 %843, 2065
  store i64 %844, i64* %842, align 8
  %845 = getelementptr inbounds i64, i64* %834, i64 12
  %846 = bitcast i64* %845 to i8*
  %847 = load i8, i8* %846, align 8
  %848 = icmp eq i8 %847, 0
  br i1 %848, label %851, label %849

849:                                              ; preds = %833
  %850 = or i64 %843, 2069
  store i64 %850, i64* %842, align 8
  br label %851

851:                                              ; preds = %833, %849
  %852 = getelementptr inbounds i64, i64* %834, i64 9
  %853 = load i64, i64* %852, align 8
  %854 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 5
  %855 = bitcast i8** %854 to i64*
  store i64 %853, i64* %855, align 8
  %856 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 6
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i8** %856, align 8
  %857 = icmp eq i64 %853, 0
  br i1 %857, label %889, label %858

858:                                              ; preds = %851
  %859 = getelementptr inbounds i64, i64* %834, i64 8
  %860 = bitcast i64* %859 to i8**
  %861 = load i8*, i8** %860, align 8
  %862 = icmp eq i8* %861, null
  br i1 %862, label %894, label %863

863:                                              ; preds = %858
  %864 = load i8, i8* %861, align 1
  %865 = icmp eq i8 %864, 0
  br i1 %865, label %894, label %866

866:                                              ; preds = %863
  %867 = inttoptr i64 %853 to i8*
  br label %868

868:                                              ; preds = %866, %884
  %869 = phi i8 [ %887, %884 ], [ %864, %866 ]
  %870 = phi i8* [ %886, %884 ], [ %867, %866 ]
  %871 = phi i8* [ %885, %884 ], [ %861, %866 ]
  %872 = load i8, i8* %870, align 1
  %873 = icmp eq i8 %869, %872
  br i1 %873, label %874, label %877

874:                                              ; preds = %868
  %875 = getelementptr inbounds i8, i8* %870, i64 1
  %876 = getelementptr inbounds i8, i8* %871, i64 1
  br label %884

877:                                              ; preds = %868
  switch i8 %869, label %880 [
    i8 32, label %878
    i8 45, label %878
  ]

878:                                              ; preds = %877, %877
  %879 = getelementptr inbounds i8, i8* %871, i64 1
  br label %884

880:                                              ; preds = %877
  switch i8 %872, label %894 [
    i8 32, label %881
    i8 45, label %881
    i8 0, label %883
  ]

881:                                              ; preds = %880, %880
  %882 = getelementptr inbounds i8, i8* %870, i64 1
  br label %884

883:                                              ; preds = %880
  store i8* %871, i8** %856, align 8
  br label %894

884:                                              ; preds = %878, %881, %874
  %885 = phi i8* [ %876, %874 ], [ %879, %878 ], [ %871, %881 ]
  %886 = phi i8* [ %875, %874 ], [ %870, %878 ], [ %882, %881 ]
  %887 = load i8, i8* %885, align 1
  %888 = icmp eq i8 %887, 0
  br i1 %888, label %894, label %868

889:                                              ; preds = %851
  %890 = bitcast i64* %834 to i8**
  %891 = load i8*, i8** %890, align 8
  %892 = icmp eq i8* %891, null
  br i1 %892, label %894, label %893

893:                                              ; preds = %889
  store i8* %891, i8** %854, align 8
  br label %894

894:                                              ; preds = %880, %884, %863, %883, %858, %889, %893
  %895 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 3
  %896 = getelementptr inbounds i64, i64* %834, i64 11
  %897 = load i64, i64* %896, align 8
  %898 = icmp ne i64 %897, 0
  %899 = zext i1 %898 to i64
  store i64 %899, i64* %895, align 8
  %900 = getelementptr inbounds i64, i64* %834, i64 10
  %901 = bitcast i64* %900 to i8**
  %902 = load i8*, i8** %901, align 8
  %903 = icmp eq i8* %902, null
  br i1 %903, label %912, label %904

904:                                              ; preds = %894
  %905 = call i32 @strcmp(i8* nonnull %902, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0)) #11
  %906 = icmp eq i32 %905, 0
  br i1 %906, label %910, label %907

907:                                              ; preds = %904
  %908 = call i32 @strcmp(i8* nonnull %902, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0)) #11
  %909 = icmp eq i32 %908, 0
  br i1 %909, label %910, label %912

910:                                              ; preds = %907, %904
  %911 = or i64 %899, 2
  store i64 %911, i64* %895, align 8
  br label %912

912:                                              ; preds = %907, %894, %910
  %913 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 7
  store i32 0, i32* %913, align 8
  %914 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 8
  store %struct.FT_Bitmap_Size_* null, %struct.FT_Bitmap_Size_** %914, align 8
  %915 = getelementptr inbounds i64, i64* %834, i64 13
  %916 = load i64, i64* %915, align 8
  %917 = ashr i64 %916, 16
  %918 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 12, i32 0
  store i64 %917, i64* %918, align 8
  %919 = getelementptr inbounds i64, i64* %834, i64 14
  %920 = load i64, i64* %919, align 8
  %921 = ashr i64 %920, 16
  %922 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 12, i32 1
  store i64 %921, i64* %922, align 8
  %923 = getelementptr inbounds i64, i64* %834, i64 15
  %924 = load i64, i64* %923, align 8
  %925 = add nsw i64 %924, 65535
  %926 = ashr i64 %925, 16
  %927 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 12, i32 2
  store i64 %926, i64* %927, align 8
  %928 = getelementptr inbounds i64, i64* %834, i64 16
  %929 = load i64, i64* %928, align 8
  %930 = add nsw i64 %929, 65535
  %931 = ashr i64 %930, 16
  %932 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 12, i32 3
  store i64 %931, i64* %932, align 8
  %933 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 13
  %934 = load i16, i16* %933, align 8
  %935 = icmp eq i16 %934, 0
  br i1 %935, label %936, label %937

936:                                              ; preds = %912
  store i16 1000, i16* %933, align 8
  br label %937

937:                                              ; preds = %912, %936
  %938 = phi i16 [ %934, %912 ], [ 1000, %936 ]
  %939 = trunc i64 %931 to i16
  %940 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 14
  store i16 %939, i16* %940, align 2
  %941 = trunc i64 %921 to i16
  %942 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 15
  store i16 %941, i16* %942, align 4
  %943 = zext i16 %938 to i32
  %944 = mul nuw nsw i32 %943, 12
  %945 = udiv i32 %944, 10
  %946 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 16
  %947 = shl i32 %945, 16
  %948 = ashr exact i32 %947, 16
  %949 = sext i16 %939 to i32
  %950 = sext i16 %941 to i32
  %951 = sub nsw i32 %949, %950
  %952 = icmp slt i32 %948, %951
  %953 = select i1 %952, i32 %951, i32 %945
  %954 = trunc i32 %953 to i16
  store i16 %954, i16* %946, align 2
  %955 = getelementptr inbounds %struct.PS_FontInfoRec_, %struct.PS_FontInfoRec_* %836, i64 0, i32 7
  %956 = load i16, i16* %955, align 2
  %957 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 19
  store i16 %956, i16* %957, align 4
  %958 = getelementptr inbounds %struct.PS_FontInfoRec_, %struct.PS_FontInfoRec_* %836, i64 0, i32 8
  %959 = load i16, i16* %958, align 4
  %960 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 20
  store i16 %959, i16* %960, align 2
  br label %961

961:                                              ; preds = %830, %19, %39, %823, %937
  %962 = phi i32 [ %40, %39 ], [ %826, %823 ], [ 0, %937 ], [ 11, %19 ], [ 6, %830 ]
  ret i32 %962
}

; Function Attrs: nounwind ssp uwtable
define internal void @cid_face_done(%struct.FT_FaceRec_*) #0 {
  %2 = icmp eq %struct.FT_FaceRec_* %0, null
  br i1 %2, label %81, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 2
  %5 = getelementptr inbounds i64, i64* %4, i64 6
  %6 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 25
  %7 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %6, align 8
  %8 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 12
  %9 = bitcast %struct.FT_BBox_* %8 to %struct.CID_SubrsRec_**
  %10 = load %struct.CID_SubrsRec_*, %struct.CID_SubrsRec_** %9, align 8
  %11 = icmp eq %struct.CID_SubrsRec_* %10, null
  br i1 %11, label %43, label %12

12:                                               ; preds = %3
  %13 = bitcast %struct.CID_SubrsRec_* %10 to i8*
  %14 = getelementptr inbounds i64, i64* %4, i64 38
  %15 = bitcast i64* %14 to i32*
  %16 = load i32, i32* %15, align 8
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %18, label %41

18:                                               ; preds = %12, %36
  %19 = phi i32 [ %32, %36 ], [ %16, %12 ]
  %20 = phi %struct.CID_SubrsRec_* [ %37, %36 ], [ %10, %12 ]
  %21 = phi i64 [ %33, %36 ], [ 0, %12 ]
  %22 = getelementptr inbounds %struct.CID_SubrsRec_, %struct.CID_SubrsRec_* %20, i64 %21, i32 1
  %23 = load i8**, i8*** %22, align 8
  %24 = icmp eq i8** %23, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %18
  %26 = load i8*, i8** %23, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %7, i8* %26) #10
  %27 = load i8**, i8*** %22, align 8
  store i8* null, i8** %27, align 8
  %28 = bitcast i8*** %22 to i8**
  %29 = load i8*, i8** %28, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %7, i8* %29) #10
  store i8** null, i8*** %22, align 8
  %30 = load i32, i32* %15, align 8
  br label %31

31:                                               ; preds = %18, %25
  %32 = phi i32 [ %19, %18 ], [ %30, %25 ]
  %33 = add nuw nsw i64 %21, 1
  %34 = sext i32 %32 to i64
  %35 = icmp slt i64 %33, %34
  br i1 %35, label %36, label %38

36:                                               ; preds = %31
  %37 = load %struct.CID_SubrsRec_*, %struct.CID_SubrsRec_** %9, align 8
  br label %18

38:                                               ; preds = %31
  %39 = bitcast %struct.FT_BBox_* %8 to i8**
  %40 = load i8*, i8** %39, align 8
  br label %41

41:                                               ; preds = %12, %38
  %42 = phi i8* [ %40, %38 ], [ %13, %12 ]
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %7, i8* %42) #10
  store %struct.CID_SubrsRec_* null, %struct.CID_SubrsRec_** %9, align 8
  br label %43

43:                                               ; preds = %3, %41
  %44 = bitcast i64* %5 to i8**
  %45 = load i8*, i8** %44, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %7, i8* %45) #10
  store i8* null, i8** %44, align 8
  %46 = getelementptr inbounds i64, i64* %4, i64 7
  %47 = bitcast i64* %46 to i8**
  %48 = load i8*, i8** %47, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %7, i8* %48) #10
  store i8* null, i8** %47, align 8
  %49 = getelementptr inbounds i64, i64* %4, i64 8
  %50 = bitcast i64* %49 to i8**
  %51 = load i8*, i8** %50, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %7, i8* %51) #10
  store i8* null, i8** %50, align 8
  %52 = getelementptr inbounds i64, i64* %4, i64 9
  %53 = bitcast i64* %52 to i8**
  %54 = load i8*, i8** %53, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %7, i8* %54) #10
  store i8* null, i8** %53, align 8
  %55 = getelementptr inbounds i64, i64* %4, i64 10
  %56 = bitcast i64* %55 to i8**
  %57 = load i8*, i8** %56, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %7, i8* %57) #10
  store i8* null, i8** %56, align 8
  %58 = getelementptr inbounds i64, i64* %4, i64 39
  %59 = bitcast i64* %58 to %struct.CID_FaceDictRec_**
  %60 = bitcast i64* %58 to i8**
  %61 = load i8*, i8** %60, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %7, i8* %61) #10
  store %struct.CID_FaceDictRec_* null, %struct.CID_FaceDictRec_** %59, align 8
  %62 = getelementptr inbounds i64, i64* %4, i64 38
  %63 = bitcast i64* %62 to i32*
  store i32 0, i32* %63, align 8
  %64 = bitcast i64* %4 to i8**
  %65 = load i8*, i8** %64, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %7, i8* %65) #10
  store i8* null, i8** %64, align 8
  %66 = getelementptr inbounds i64, i64* %4, i64 3
  %67 = bitcast i64* %66 to i8**
  %68 = load i8*, i8** %67, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %7, i8* %68) #10
  store i8* null, i8** %67, align 8
  %69 = getelementptr inbounds i64, i64* %4, i64 4
  %70 = bitcast i64* %69 to i8**
  %71 = load i8*, i8** %70, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %7, i8* %71) #10
  store i8* null, i8** %70, align 8
  %72 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 5
  %73 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 12, i32 2
  %74 = bitcast i64* %73 to i8**
  %75 = bitcast i8** %72 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 16, i1 false)
  %76 = load i8*, i8** %74, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %7, i8* %76) #10
  store i8* null, i8** %74, align 8
  %77 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 12, i32 3
  %78 = bitcast i64* %77 to %struct.FT_StreamRec_**
  %79 = bitcast i64* %77 to i8**
  %80 = load i8*, i8** %79, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %7, i8* %80) #10
  store %struct.FT_StreamRec_* null, %struct.FT_StreamRec_** %78, align 8
  br label %81

81:                                               ; preds = %1, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cid_size_init(%struct.FT_SizeRec_* nocapture readonly) #0 {
  %2 = alloca %struct.PSH_GlobalsRec_*, align 8
  %3 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 0, i32 0
  %4 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %3, align 8
  %5 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %4, i64 2, i32 12, i32 1
  %6 = bitcast i64* %5 to %struct.PSHinter_Interface_**
  %7 = load %struct.PSHinter_Interface_*, %struct.PSHinter_Interface_** %6, align 8
  %8 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %4, i64 0, i32 24
  %9 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %8, align 8
  %10 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %9, i64 0, i32 0, i32 1
  %11 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %10, align 8
  %12 = tail call %struct.FT_ModuleRec_* @FT_Get_Module(%struct.FT_LibraryRec_* %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0)) #10
  %13 = icmp ne %struct.FT_ModuleRec_* %12, null
  %14 = icmp ne %struct.PSHinter_Interface_* %7, null
  %15 = and i1 %14, %13
  br i1 %15, label %16, label %46

16:                                               ; preds = %1
  %17 = getelementptr inbounds %struct.PSHinter_Interface_, %struct.PSHinter_Interface_* %7, i64 0, i32 0
  %18 = load %struct.PSH_Globals_FuncsRec_* (%struct.FT_ModuleRec_*)*, %struct.PSH_Globals_FuncsRec_* (%struct.FT_ModuleRec_*)** %17, align 8
  %19 = icmp eq %struct.PSH_Globals_FuncsRec_* (%struct.FT_ModuleRec_*)* %18, null
  br i1 %19, label %46, label %20

20:                                               ; preds = %16
  %21 = tail call %struct.PSH_Globals_FuncsRec_* %18(%struct.FT_ModuleRec_* nonnull %12) #10
  %22 = icmp eq %struct.PSH_Globals_FuncsRec_* %21, null
  br i1 %22, label %46, label %23

23:                                               ; preds = %20
  %24 = bitcast %struct.PSH_GlobalsRec_** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  store %struct.PSH_GlobalsRec_* inttoptr (i64 -6148914691236517206 to %struct.PSH_GlobalsRec_*), %struct.PSH_GlobalsRec_** %2, align 8
  %25 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %3, align 8
  %26 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %25, i64 1, i32 2
  %27 = getelementptr inbounds i64, i64* %26, i64 39
  %28 = bitcast i64* %27 to %struct.CID_FaceDictRec_**
  %29 = load %struct.CID_FaceDictRec_*, %struct.CID_FaceDictRec_** %28, align 8
  %30 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %25, i64 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %struct.CID_FaceDictRec_, %struct.CID_FaceDictRec_* %29, i64 %31, i32 0
  %33 = getelementptr inbounds %struct.PSH_Globals_FuncsRec_, %struct.PSH_Globals_FuncsRec_* %21, i64 0, i32 0
  %34 = load i32 (%struct.FT_MemoryRec_*, %struct.PS_PrivateRec_*, %struct.PSH_GlobalsRec_**)*, i32 (%struct.FT_MemoryRec_*, %struct.PS_PrivateRec_*, %struct.PSH_GlobalsRec_**)** %33, align 8
  %35 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %25, i64 0, i32 25
  %36 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %35, align 8
  %37 = call i32 %34(%struct.FT_MemoryRec_* %36, %struct.PS_PrivateRec_* %32, %struct.PSH_GlobalsRec_** nonnull %2) #10
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %45

39:                                               ; preds = %23
  %40 = bitcast %struct.PSH_GlobalsRec_** %2 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 0, i32 3
  %43 = bitcast %struct.FT_Size_InternalRec_** %42 to i64**
  %44 = load i64*, i64** %43, align 8
  store i64 %41, i64* %44, align 8
  br label %45

45:                                               ; preds = %23, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  br label %46

46:                                               ; preds = %1, %16, %20, %45
  %47 = phi i32 [ %37, %45 ], [ 0, %20 ], [ 0, %16 ], [ 0, %1 ]
  ret i32 %47
}

; Function Attrs: nounwind ssp uwtable
define internal void @cid_size_done(%struct.FT_SizeRec_* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 0, i32 3
  %3 = load %struct.FT_Size_InternalRec_*, %struct.FT_Size_InternalRec_** %2, align 8
  %4 = getelementptr inbounds %struct.FT_Size_InternalRec_, %struct.FT_Size_InternalRec_* %3, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %37, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 0, i32 0
  %9 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %8, align 8
  %10 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %9, i64 2, i32 12, i32 1
  %11 = bitcast i64* %10 to %struct.PSHinter_Interface_**
  %12 = load %struct.PSHinter_Interface_*, %struct.PSHinter_Interface_** %11, align 8
  %13 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %9, i64 0, i32 24
  %14 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %13, align 8
  %15 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %14, i64 0, i32 0, i32 1
  %16 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %15, align 8
  %17 = tail call %struct.FT_ModuleRec_* @FT_Get_Module(%struct.FT_LibraryRec_* %16, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0)) #10
  %18 = icmp ne %struct.FT_ModuleRec_* %17, null
  %19 = icmp ne %struct.PSHinter_Interface_* %12, null
  %20 = and i1 %19, %18
  br i1 %20, label %21, label %34

21:                                               ; preds = %7
  %22 = getelementptr inbounds %struct.PSHinter_Interface_, %struct.PSHinter_Interface_* %12, i64 0, i32 0
  %23 = load %struct.PSH_Globals_FuncsRec_* (%struct.FT_ModuleRec_*)*, %struct.PSH_Globals_FuncsRec_* (%struct.FT_ModuleRec_*)** %22, align 8
  %24 = icmp eq %struct.PSH_Globals_FuncsRec_* (%struct.FT_ModuleRec_*)* %23, null
  br i1 %24, label %34, label %25

25:                                               ; preds = %21
  %26 = tail call %struct.PSH_Globals_FuncsRec_* %23(%struct.FT_ModuleRec_* nonnull %17) #10
  %27 = icmp eq %struct.PSH_Globals_FuncsRec_* %26, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %struct.PSH_Globals_FuncsRec_, %struct.PSH_Globals_FuncsRec_* %26, i64 0, i32 2
  %30 = load void (%struct.PSH_GlobalsRec_*)*, void (%struct.PSH_GlobalsRec_*)** %29, align 8
  %31 = bitcast %struct.FT_Size_InternalRec_** %2 to %struct.PSH_GlobalsRec_***
  %32 = load %struct.PSH_GlobalsRec_**, %struct.PSH_GlobalsRec_*** %31, align 8
  %33 = load %struct.PSH_GlobalsRec_*, %struct.PSH_GlobalsRec_** %32, align 8
  tail call void %30(%struct.PSH_GlobalsRec_* %33) #10
  br label %34

34:                                               ; preds = %7, %21, %25, %28
  %35 = load %struct.FT_Size_InternalRec_*, %struct.FT_Size_InternalRec_** %2, align 8
  %36 = getelementptr inbounds %struct.FT_Size_InternalRec_, %struct.FT_Size_InternalRec_* %35, i64 0, i32 0
  store i8* null, i8** %36, align 8
  br label %37

37:                                               ; preds = %1, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cid_slot_init(%struct.FT_GlyphSlotRec_* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 1
  %3 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %2, align 8
  %4 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %3, i64 2, i32 12, i32 1
  %5 = bitcast i64* %4 to %struct.PSHinter_Interface_**
  %6 = load %struct.PSHinter_Interface_*, %struct.PSHinter_Interface_** %5, align 8
  %7 = icmp eq %struct.PSHinter_Interface_* %6, null
  br i1 %7, label %23, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %3, i64 0, i32 24
  %10 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %9, align 8
  %11 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %10, i64 0, i32 0, i32 1
  %12 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %11, align 8
  %13 = tail call %struct.FT_ModuleRec_* @FT_Get_Module(%struct.FT_LibraryRec_* %12, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0)) #10
  %14 = icmp eq %struct.FT_ModuleRec_* %13, null
  br i1 %14, label %23, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %struct.PSHinter_Interface_, %struct.PSHinter_Interface_* %6, i64 0, i32 1
  %17 = load %struct.T1_Hints_FuncsRec_* (%struct.FT_ModuleRec_*)*, %struct.T1_Hints_FuncsRec_* (%struct.FT_ModuleRec_*)** %16, align 8
  %18 = tail call %struct.T1_Hints_FuncsRec_* %17(%struct.FT_ModuleRec_* nonnull %13) #10
  %19 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 21
  %20 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %19, align 8
  %21 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %20, i64 0, i32 5
  %22 = bitcast i8** %21 to %struct.T1_Hints_FuncsRec_**
  store %struct.T1_Hints_FuncsRec_* %18, %struct.T1_Hints_FuncsRec_** %22, align 8
  br label %23

23:                                               ; preds = %15, %8, %1
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @cid_slot_done(%struct.FT_GlyphSlotRec_* nocapture readonly) #2 {
  %2 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 21
  %3 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %2, align 8
  %4 = icmp eq %struct.FT_Slot_InternalRec_* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %3, i64 0, i32 5
  store i8* null, i8** %6, align 8
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cid_slot_load_glyph(%struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, i32, i32) #0 {
  %5 = alloca %struct.T1_DecoderRec_, align 8
  %6 = alloca %struct.FT_Matrix_, align 8
  %7 = alloca %struct.FT_BBox_, align 16
  %8 = bitcast %struct.FT_GlyphSlotRec_* %0 to %struct.CID_GlyphSlotRec_*
  %9 = bitcast %struct.T1_DecoderRec_* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 5048, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 5048, i1 false)
  %10 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 1
  %11 = bitcast %struct.FT_FaceRec_** %10 to %struct.CID_FaceRec_**
  %12 = load %struct.CID_FaceRec_*, %struct.CID_FaceRec_** %11, align 8
  %13 = getelementptr inbounds %struct.CID_FaceRec_, %struct.CID_FaceRec_* %12, i64 0, i32 2
  %14 = bitcast i8** %13 to %struct.PSAux_ServiceRec_**
  %15 = load %struct.PSAux_ServiceRec_*, %struct.PSAux_ServiceRec_** %14, align 8
  %16 = bitcast %struct.FT_Matrix_* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #10
  %17 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %6, i64 0, i32 0
  %18 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %6, i64 0, i32 1
  %19 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %6, i64 0, i32 2
  %20 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %6, i64 0, i32 3
  %21 = getelementptr inbounds %struct.CID_FaceRec_, %struct.CID_FaceRec_* %12, i64 0, i32 0, i32 4
  %22 = bitcast %struct.FT_Matrix_* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 32, i1 false)
  %23 = load i64, i64* %21, align 8
  %24 = trunc i64 %23 to i32
  %25 = icmp ugt i32 %24, %2
  %26 = getelementptr inbounds %struct.CID_FaceRec_, %struct.CID_FaceRec_* %12, i64 0, i32 0
  br i1 %25, label %27, label %283

27:                                               ; preds = %4
  %28 = and i32 %3, 1024
  %29 = icmp eq i32 %28, 0
  %30 = or i32 %3, 3
  %31 = select i1 %29, i32 %3, i32 %30
  %32 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 0, i32 2, i32 2
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 1, i32 1
  %35 = bitcast %struct.FT_FaceRec_** %34 to i64*
  store i64 %33, i64* %35, align 8
  %36 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 0, i32 2, i32 3
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 1, i32 2
  %39 = bitcast %struct.FT_GlyphSlotRec_** %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 13
  %41 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 13, i32 1
  store i16 0, i16* %41, align 2
  %42 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %40, i64 0, i32 0
  store i16 0, i16* %42, align 8
  %43 = sext i32 %31 to i64
  %44 = and i64 %43, 1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %46, label %51

46:                                               ; preds = %27
  %47 = lshr i64 %43, 1
  %48 = trunc i64 %47 to i8
  %49 = and i8 %48, 1
  %50 = xor i8 %49, 1
  br label %51

51:                                               ; preds = %46, %27
  %52 = phi i8 [ 0, %27 ], [ %50, %46 ]
  %53 = trunc i64 %44 to i8
  %54 = xor i8 %53, 1
  %55 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 1
  %56 = bitcast %struct.FT_GlyphSlotRec_* %55 to i8*
  store i8 %52, i8* %56, align 8
  %57 = getelementptr inbounds %struct.CID_GlyphSlotRec_, %struct.CID_GlyphSlotRec_* %8, i64 0, i32 2
  store i8 %54, i8* %57, align 1
  %58 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 9
  store i32 1869968492, i32* %58, align 8
  %59 = getelementptr inbounds %struct.PSAux_ServiceRec_, %struct.PSAux_ServiceRec_* %15, i64 0, i32 3
  %60 = load %struct.T1_Decoder_FuncsRec_*, %struct.T1_Decoder_FuncsRec_** %59, align 8
  %61 = getelementptr inbounds %struct.T1_Decoder_FuncsRec_, %struct.T1_Decoder_FuncsRec_* %60, i64 0, i32 0
  %62 = load i32 (%struct.T1_DecoderRec_*, %struct.FT_FaceRec_*, %struct.FT_SizeRec_*, %struct.FT_GlyphSlotRec_*, i8**, %struct.PS_BlendRec_*, i8, i32, i32 (%struct.T1_DecoderRec_*, i32)*)*, i32 (%struct.T1_DecoderRec_*, %struct.FT_FaceRec_*, %struct.FT_SizeRec_*, %struct.FT_GlyphSlotRec_*, i8**, %struct.PS_BlendRec_*, i8, i32, i32 (%struct.T1_DecoderRec_*, i32)*)** %61, align 8
  %63 = lshr i32 %31, 16
  %64 = and i32 %63, 15
  %65 = call i32 %62(%struct.T1_DecoderRec_* nonnull %5, %struct.FT_FaceRec_* %26, %struct.FT_SizeRec_* %1, %struct.FT_GlyphSlotRec_* %0, i8** null, %struct.PS_BlendRec_* null, i8 zeroext %52, i32 %64, i32 (%struct.T1_DecoderRec_*, i32)* nonnull @cid_load_glyph) #10
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %283

67:                                               ; preds = %51
  %68 = and i64 %43, 1024
  %69 = lshr exact i64 %68, 10
  %70 = trunc i64 %69 to i8
  %71 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %5, i64 0, i32 0, i32 13
  store i8 %70, i8* %71, align 1
  %72 = call i32 @cid_load_glyph(%struct.T1_DecoderRec_* nonnull %5, i32 %2)
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %279

74:                                               ; preds = %67
  %75 = icmp eq i64 %68, 0
  %76 = load i8, i8* %56, align 8
  %77 = load i8, i8* %57, align 1
  %78 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %5, i64 0, i32 13
  %79 = bitcast %struct.FT_Matrix_* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* align 8 %79, i64 32, i1 false)
  %80 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %5, i64 0, i32 14, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %5, i64 0, i32 14, i32 1
  %83 = load i64, i64* %82, align 8
  %84 = load %struct.T1_Decoder_FuncsRec_*, %struct.T1_Decoder_FuncsRec_** %59, align 8
  %85 = getelementptr inbounds %struct.T1_Decoder_FuncsRec_, %struct.T1_Decoder_FuncsRec_* %84, i64 0, i32 1
  %86 = load void (%struct.T1_DecoderRec_*)*, void (%struct.T1_DecoderRec_*)** %85, align 8
  call void %86(%struct.T1_DecoderRec_* nonnull %5) #10
  %87 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 13, i32 5
  %88 = load i32, i32* %87, align 8
  %89 = and i32 %88, 1
  %90 = or i32 %89, 4
  store i32 %90, i32* %87, align 8
  br i1 %75, label %109, label %91

91:                                               ; preds = %74
  %92 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 21
  %93 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %92, align 8
  %94 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %5, i64 0, i32 0, i32 8, i32 0
  %95 = load i64, i64* %94, align 8
  %96 = call i64 @FT_RoundFix(i64 %95) #10
  %97 = ashr i64 %96, 16
  %98 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 2
  store i64 %97, i64* %98, align 8
  %99 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %5, i64 0, i32 0, i32 9, i32 0
  %100 = load i64, i64* %99, align 8
  %101 = call i64 @FT_RoundFix(i64 %100) #10
  %102 = ashr i64 %101, 16
  %103 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 4
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %93, i64 0, i32 3
  %105 = bitcast %struct.FT_Matrix_* %104 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* nonnull align 8 %16, i64 32, i1 false)
  %106 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %93, i64 0, i32 4, i32 0
  store i64 %81, i64* %106, align 8
  %107 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %93, i64 0, i32 4, i32 1
  store i64 %83, i64* %107, align 8
  %108 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %93, i64 0, i32 2
  store i8 1, i8* %108, align 4
  br label %283

109:                                              ; preds = %74
  %110 = bitcast %struct.FT_BBox_* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %110) #10
  %111 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %7, i64 0, i32 2
  %112 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5
  %113 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %5, i64 0, i32 0, i32 9, i32 0
  %114 = bitcast %struct.FT_BBox_* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %114, i8 -86, i64 32, i1 false)
  %115 = load i64, i64* %113, align 8
  %116 = call i64 @FT_RoundFix(i64 %115) #10
  %117 = ashr i64 %116, 16
  %118 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 4
  store i64 %117, i64* %118, align 8
  %119 = load i64, i64* %113, align 8
  %120 = call i64 @FT_RoundFix(i64 %119) #10
  %121 = ashr i64 %120, 16
  %122 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 6
  store i64 %121, i64* %122, align 8
  %123 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 21
  %124 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %123, align 8
  %125 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %124, i64 0, i32 2
  store i8 0, i8* %125, align 4
  %126 = getelementptr inbounds %struct.CID_FaceRec_, %struct.CID_FaceRec_* %12, i64 0, i32 3, i32 7, i32 3
  %127 = load i64, i64* %126, align 8
  %128 = getelementptr inbounds %struct.CID_FaceRec_, %struct.CID_FaceRec_* %12, i64 0, i32 3, i32 7, i32 1
  %129 = load i64, i64* %128, align 8
  %130 = sub nsw i64 %127, %129
  %131 = ashr i64 %130, 16
  %132 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 7
  store i64 %131, i64* %132, align 8
  %133 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 7
  store i64 %131, i64* %133, align 8
  store i32 1869968492, i32* %58, align 8
  %134 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %1, i64 0, i32 2, i32 1
  %135 = load i16, i16* %134, align 2
  %136 = icmp ult i16 %135, 24
  br i1 %136, label %137, label %140

137:                                              ; preds = %109
  %138 = load i32, i32* %87, align 8
  %139 = or i32 %138, 256
  store i32 %139, i32* %87, align 8
  br label %140

140:                                              ; preds = %137, %109
  %141 = load i64, i64* %17, align 8
  %142 = icmp eq i64 %141, 65536
  %143 = load i64, i64* %20, align 8
  %144 = icmp eq i64 %143, 65536
  %145 = and i1 %142, %144
  %146 = load i64, i64* %18, align 8
  %147 = load i64, i64* %19, align 8
  %148 = or i64 %147, %146
  %149 = icmp eq i64 %148, 0
  %150 = and i1 %145, %149
  br i1 %150, label %176, label %151

151:                                              ; preds = %140
  call void @FT_Outline_Transform(%struct.FT_Outline_* %40, %struct.FT_Matrix_* nonnull %6) #10
  %152 = load i64, i64* %118, align 8
  %153 = load i64, i64* %17, align 8
  %154 = shl i64 %152, 32
  %155 = ashr exact i64 %154, 32
  %156 = shl i64 %153, 32
  %157 = ashr exact i64 %156, 32
  %158 = mul nsw i64 %157, %155
  %159 = ashr i64 %158, 63
  %160 = add nsw i64 %158, 32768
  %161 = add nsw i64 %160, %159
  %162 = shl i64 %161, 16
  %163 = ashr i64 %162, 32
  store i64 %163, i64* %118, align 8
  %164 = load i64, i64* %132, align 8
  %165 = load i64, i64* %20, align 8
  %166 = shl i64 %164, 32
  %167 = ashr exact i64 %166, 32
  %168 = shl i64 %165, 32
  %169 = ashr exact i64 %168, 32
  %170 = mul nsw i64 %169, %167
  %171 = ashr i64 %170, 63
  %172 = add nsw i64 %170, 32768
  %173 = add nsw i64 %172, %171
  %174 = shl i64 %173, 16
  %175 = ashr i64 %174, 32
  store i64 %175, i64* %132, align 8
  br label %176

176:                                              ; preds = %140, %151
  %177 = phi i64 [ %131, %140 ], [ %175, %151 ]
  %178 = or i64 %83, %81
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %185, label %180

180:                                              ; preds = %176
  call void @FT_Outline_Translate(%struct.FT_Outline_* %40, i64 %81, i64 %83) #10
  %181 = load i64, i64* %118, align 8
  %182 = add nsw i64 %181, %81
  store i64 %182, i64* %118, align 8
  %183 = load i64, i64* %132, align 8
  %184 = add nsw i64 %183, %83
  store i64 %184, i64* %132, align 8
  br label %185

185:                                              ; preds = %176, %180
  %186 = phi i64 [ %177, %176 ], [ %184, %180 ]
  %187 = xor i1 %45, true
  %188 = icmp eq i8 %77, 0
  %189 = and i1 %188, %187
  br i1 %189, label %263, label %190

190:                                              ; preds = %185
  %191 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %5, i64 0, i32 0, i32 4
  %192 = load %struct.FT_Outline_*, %struct.FT_Outline_** %191, align 8
  %193 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %192, i64 0, i32 2
  %194 = load %struct.FT_Vector_*, %struct.FT_Vector_** %193, align 8
  %195 = load i64, i64* %35, align 8
  %196 = load i64, i64* %39, align 8
  %197 = icmp eq i8 %76, 0
  br i1 %197, label %202, label %198

198:                                              ; preds = %190
  %199 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %5, i64 0, i32 0, i32 15
  %200 = load i8*, i8** %199, align 8
  %201 = icmp eq i8* %200, null
  br i1 %201, label %202, label %240

202:                                              ; preds = %198, %190
  %203 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %192, i64 0, i32 1
  %204 = load i16, i16* %203, align 2
  %205 = icmp sgt i16 %204, 0
  br i1 %205, label %206, label %240

206:                                              ; preds = %202
  %207 = sext i16 %204 to i32
  %208 = shl i64 %195, 32
  %209 = ashr exact i64 %208, 32
  %210 = shl i64 %196, 32
  %211 = ashr exact i64 %210, 32
  br label %212

212:                                              ; preds = %206, %212
  %213 = phi %struct.FT_Vector_* [ %194, %206 ], [ %236, %212 ]
  %214 = phi i32 [ %207, %206 ], [ %235, %212 ]
  %215 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %213, i64 0, i32 0
  %216 = load i64, i64* %215, align 8
  %217 = shl i64 %216, 32
  %218 = ashr exact i64 %217, 32
  %219 = mul nsw i64 %218, %209
  %220 = ashr i64 %219, 63
  %221 = add nsw i64 %219, 32768
  %222 = add nsw i64 %221, %220
  %223 = shl i64 %222, 16
  %224 = ashr i64 %223, 32
  store i64 %224, i64* %215, align 8
  %225 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %213, i64 0, i32 1
  %226 = load i64, i64* %225, align 8
  %227 = shl i64 %226, 32
  %228 = ashr exact i64 %227, 32
  %229 = mul nsw i64 %228, %211
  %230 = ashr i64 %229, 63
  %231 = add nsw i64 %229, 32768
  %232 = add nsw i64 %231, %230
  %233 = shl i64 %232, 16
  %234 = ashr i64 %233, 32
  store i64 %234, i64* %225, align 8
  %235 = add nsw i32 %214, -1
  %236 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %213, i64 1
  %237 = icmp sgt i32 %235, 0
  br i1 %237, label %212, label %238

238:                                              ; preds = %212
  %239 = load i64, i64* %132, align 8
  br label %240

240:                                              ; preds = %238, %202, %198
  %241 = phi i64 [ %239, %238 ], [ %186, %202 ], [ %186, %198 ]
  %242 = load i64, i64* %118, align 8
  %243 = shl i64 %242, 32
  %244 = ashr exact i64 %243, 32
  %245 = shl i64 %195, 32
  %246 = ashr exact i64 %245, 32
  %247 = mul nsw i64 %244, %246
  %248 = ashr i64 %247, 63
  %249 = add nsw i64 %247, 32768
  %250 = add nsw i64 %249, %248
  %251 = shl i64 %250, 16
  %252 = ashr i64 %251, 32
  store i64 %252, i64* %118, align 8
  %253 = shl i64 %241, 32
  %254 = ashr exact i64 %253, 32
  %255 = shl i64 %196, 32
  %256 = ashr exact i64 %255, 32
  %257 = mul nsw i64 %254, %256
  %258 = ashr i64 %257, 63
  %259 = add nsw i64 %257, 32768
  %260 = add nsw i64 %259, %258
  %261 = shl i64 %260, 16
  %262 = ashr i64 %261, 32
  store i64 %262, i64* %132, align 8
  br label %263

263:                                              ; preds = %185, %240
  call void @FT_Outline_Get_CBox(%struct.FT_Outline_* %40, %struct.FT_BBox_* nonnull %7) #10
  %264 = bitcast i64* %111 to <2 x i64>*
  %265 = load <2 x i64>, <2 x i64>* %264, align 16
  %266 = bitcast %struct.FT_BBox_* %7 to <2 x i64>*
  %267 = load <2 x i64>, <2 x i64>* %266, align 16
  %268 = sub nsw <2 x i64> %265, %267
  %269 = bitcast %struct.FT_Glyph_Metrics_* %112 to <2 x i64>*
  store <2 x i64> %268, <2 x i64>* %269, align 8
  %270 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 2
  %271 = extractelement <2 x i64> %267, i32 0
  store i64 %271, i64* %270, align 8
  %272 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 5, i32 3
  %273 = extractelement <2 x i64> %265, i32 1
  store i64 %273, i64* %272, align 8
  %274 = and i64 %43, 16
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %278, label %276

276:                                              ; preds = %263
  %277 = load i64, i64* %132, align 8
  call void @ft_synthesize_vertical_metrics(%struct.FT_Glyph_Metrics_* %112, i64 %277) #10
  br label %278

278:                                              ; preds = %263, %276
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %110) #10
  br label %283

279:                                              ; preds = %67
  %280 = load %struct.T1_Decoder_FuncsRec_*, %struct.T1_Decoder_FuncsRec_** %59, align 8
  %281 = getelementptr inbounds %struct.T1_Decoder_FuncsRec_, %struct.T1_Decoder_FuncsRec_* %280, i64 0, i32 1
  %282 = load void (%struct.T1_DecoderRec_*)*, void (%struct.T1_DecoderRec_*)** %281, align 8
  call void %282(%struct.T1_DecoderRec_* nonnull %5) #10
  br label %283

283:                                              ; preds = %4, %278, %91, %51, %279
  %284 = phi i32 [ %72, %279 ], [ 6, %4 ], [ 0, %278 ], [ 0, %91 ], [ %65, %51 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #10
  call void @llvm.lifetime.end.p0i8(i64 5048, i8* nonnull %9) #10
  ret i32 %284
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cid_size_request(%struct.FT_SizeRec_* nocapture readonly, %struct.FT_Size_RequestRec_*) #0 {
  %3 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 0, i32 0
  %4 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %3, align 8
  tail call void @FT_Request_Metrics(%struct.FT_FaceRec_* %4, %struct.FT_Size_RequestRec_* %1) #10
  %5 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %3, align 8
  %6 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %5, i64 2, i32 12, i32 1
  %7 = bitcast i64* %6 to %struct.PSHinter_Interface_**
  %8 = load %struct.PSHinter_Interface_*, %struct.PSHinter_Interface_** %7, align 8
  %9 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %5, i64 0, i32 24
  %10 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %9, align 8
  %11 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %10, i64 0, i32 0, i32 1
  %12 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %11, align 8
  %13 = tail call %struct.FT_ModuleRec_* @FT_Get_Module(%struct.FT_LibraryRec_* %12, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0)) #10
  %14 = icmp ne %struct.FT_ModuleRec_* %13, null
  %15 = icmp ne %struct.PSHinter_Interface_* %8, null
  %16 = and i1 %15, %14
  br i1 %16, label %17, label %35

17:                                               ; preds = %2
  %18 = getelementptr inbounds %struct.PSHinter_Interface_, %struct.PSHinter_Interface_* %8, i64 0, i32 0
  %19 = load %struct.PSH_Globals_FuncsRec_* (%struct.FT_ModuleRec_*)*, %struct.PSH_Globals_FuncsRec_* (%struct.FT_ModuleRec_*)** %18, align 8
  %20 = icmp eq %struct.PSH_Globals_FuncsRec_* (%struct.FT_ModuleRec_*)* %19, null
  br i1 %20, label %35, label %21

21:                                               ; preds = %17
  %22 = tail call %struct.PSH_Globals_FuncsRec_* %19(%struct.FT_ModuleRec_* nonnull %13) #10
  %23 = icmp eq %struct.PSH_Globals_FuncsRec_* %22, null
  br i1 %23, label %35, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %struct.PSH_Globals_FuncsRec_, %struct.PSH_Globals_FuncsRec_* %22, i64 0, i32 1
  %26 = load void (%struct.PSH_GlobalsRec_*, i64, i64, i64, i64)*, void (%struct.PSH_GlobalsRec_*, i64, i64, i64, i64)** %25, align 8
  %27 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 0, i32 3
  %28 = bitcast %struct.FT_Size_InternalRec_** %27 to %struct.PSH_GlobalsRec_***
  %29 = load %struct.PSH_GlobalsRec_**, %struct.PSH_GlobalsRec_*** %28, align 8
  %30 = load %struct.PSH_GlobalsRec_*, %struct.PSH_GlobalsRec_** %29, align 8
  %31 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 0, i32 2, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %0, i64 0, i32 2, i32 3
  %34 = load i64, i64* %33, align 8
  tail call void %26(%struct.PSH_GlobalsRec_* %30, i64 %32, i64 %34, i64 0, i64 0) #10
  br label %35

35:                                               ; preds = %2, %17, %21, %24
  ret i32 0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare hidden i8* @ft_service_list_lookup(%struct.FT_ServiceDescRec_*, i8*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i8* @cid_get_postscript_name(%struct.CID_FaceRec_* nocapture readonly) #5 {
  %2 = getelementptr inbounds %struct.CID_FaceRec_, %struct.CID_FaceRec_* %0, i64 0, i32 3, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = load i8, i8* %3, align 1
  %7 = icmp eq i8 %6, 47
  %8 = getelementptr inbounds i8, i8* %3, i64 1
  %9 = select i1 %7, i8* %8, i8* %3
  ret i8* %9

10:                                               ; preds = %1
  ret i8* null
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @cid_ps_get_font_info(%struct.FT_FaceRec_* nocapture readonly, %struct.PS_FontInfoRec_* nocapture) #0 {
  %3 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 1, i32 2
  %4 = getelementptr inbounds i64, i64* %3, i64 6
  %5 = bitcast %struct.PS_FontInfoRec_* %1 to i8*
  %6 = bitcast i64* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 56, i1 false)
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @cid_ps_get_font_extra(%struct.FT_FaceRec_* nocapture readonly, %struct.PS_FontExtraRec_* nocapture) #2 {
  %3 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 2, i32 11, i32 1
  %4 = bitcast void (i8*)** %3 to i16*
  %5 = getelementptr inbounds %struct.PS_FontExtraRec_, %struct.PS_FontExtraRec_* %1, i64 0, i32 0
  %6 = load i16, i16* %4, align 8
  store i16 %6, i16* %5, align 2
  ret i32 0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @cid_get_ros(%struct.CID_FaceRec_* nocapture readonly, i8**, i8**, i32*) #2 {
  %5 = icmp eq i8** %1, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.CID_FaceRec_, %struct.CID_FaceRec_* %0, i64 0, i32 3, i32 3
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast i8** %1 to i64*
  store i64 %9, i64* %10, align 8
  br label %11

11:                                               ; preds = %4, %6
  %12 = icmp eq i8** %2, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.CID_FaceRec_, %struct.CID_FaceRec_* %0, i64 0, i32 3, i32 4
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast i8** %2 to i64*
  store i64 %16, i64* %17, align 8
  br label %18

18:                                               ; preds = %11, %13
  %19 = icmp eq i32* %3, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %struct.CID_FaceRec_, %struct.CID_FaceRec_* %0, i64 0, i32 3, i32 5
  %22 = load i32, i32* %21, align 8
  store i32 %22, i32* %3, align 4
  br label %23

23:                                               ; preds = %18, %20
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal i32 @cid_get_is_cid(%struct.CID_FaceRec_* nocapture readnone, i8*) #6 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  store i8 1, i8* %1, align 1
  br label %5

5:                                                ; preds = %2, %4
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal i32 @cid_get_cid_from_glyph_index(%struct.CID_FaceRec_* nocapture readnone, i32, i32*) #6 {
  %4 = icmp eq i32* %2, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %3
  store i32 %1, i32* %2, align 4
  br label %6

6:                                                ; preds = %3, %5
  ret i32 0
}

declare i32 @ps_property_set(%struct.FT_ModuleRec_*, i8*, i8*, i8 zeroext) #4

declare i32 @ps_property_get(%struct.FT_ModuleRec_*, i8*, i8*) #4

declare hidden i8* @FT_Get_Module_Interface(%struct.FT_LibraryRec_*, i8*) local_unnamed_addr #4

declare hidden i32 @FT_Stream_Seek(%struct.FT_StreamRec_*, i64) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare hidden i8* @ft_mem_alloc(%struct.FT_MemoryRec_*, i64, i32*) local_unnamed_addr #4

declare hidden i8* @ft_mem_qalloc(%struct.FT_MemoryRec_*, i64, i32*) local_unnamed_addr #4

declare hidden void @FT_Stream_OpenMemory(%struct.FT_StreamRec_*, i8*, i64) local_unnamed_addr #4

declare hidden i64 @FT_Stream_Pos(%struct.FT_StreamRec_*) local_unnamed_addr #4

declare hidden i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_*, i64) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

declare hidden void @FT_Stream_ExitFrame(%struct.FT_StreamRec_*) local_unnamed_addr #4

declare hidden i32 @FT_Stream_Read(%struct.FT_StreamRec_*, i8*, i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

declare hidden i32 @FT_Stream_ExtractFrame(%struct.FT_StreamRec_*, i64, i8**) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #8

declare hidden void @FT_Stream_ReleaseFrame(%struct.FT_StreamRec_*, i8**) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @parse_fd_array(%struct.CID_FaceRec_* nocapture, %struct.CID_Parser_*) #0 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %struct.CID_FaceRec_, %struct.CID_FaceRec_* %0, i64 0, i32 0, i32 25
  %5 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %4, align 8
  %6 = getelementptr inbounds %struct.CID_Parser_, %struct.CID_Parser_* %1, i64 0, i32 1
  %7 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %6, align 8
  %8 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #10
  store i32 0, i32* %3, align 4
  %9 = getelementptr inbounds %struct.CID_Parser_, %struct.CID_Parser_* %1, i64 0, i32 0
  %10 = getelementptr inbounds %struct.CID_Parser_, %struct.CID_Parser_* %1, i64 0, i32 0, i32 5, i32 4
  %11 = load i64 (%struct.PS_ParserRec_*)*, i64 (%struct.PS_ParserRec_*)** %10, align 8
  %12 = tail call i64 %11(%struct.PS_ParserRec_* %9) #10
  %13 = icmp slt i64 %12, 0
  br i1 %13, label %48, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %7, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = udiv i64 %16, 100
  %18 = icmp ugt i64 %12, %17
  %19 = select i1 %18, i64 %17, i64 %12
  %20 = getelementptr inbounds %struct.CID_FaceRec_, %struct.CID_FaceRec_* %0, i64 0, i32 3, i32 16
  %21 = load %struct.CID_FaceDictRec_*, %struct.CID_FaceDictRec_** %20, align 8
  %22 = icmp eq %struct.CID_FaceDictRec_* %21, null
  br i1 %22, label %23, label %48

23:                                               ; preds = %14
  %24 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %5, i64 336, i64 0, i64 %19, i8* null, i32* nonnull %3) #10
  %25 = bitcast %struct.CID_FaceDictRec_** %20 to i8**
  store i8* %24, i8** %25, align 8
  %26 = load i32, i32* %3, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %48

28:                                               ; preds = %23
  %29 = trunc i64 %19 to i32
  %30 = getelementptr inbounds %struct.CID_FaceRec_, %struct.CID_FaceRec_* %0, i64 0, i32 3, i32 15
  store i32 %29, i32* %30, align 8
  %31 = icmp sgt i32 %29, 0
  br i1 %31, label %32, label %48

32:                                               ; preds = %28
  %33 = bitcast i8* %24 to %struct.CID_FaceDictRec_*
  br label %34

34:                                               ; preds = %32, %46
  %35 = phi %struct.CID_FaceDictRec_* [ %47, %46 ], [ %33, %32 ]
  %36 = phi i64 [ %42, %46 ], [ 0, %32 ]
  %37 = getelementptr inbounds %struct.CID_FaceDictRec_, %struct.CID_FaceDictRec_* %35, i64 %36, i32 0, i32 11
  store i32 7, i32* %37, align 8
  %38 = getelementptr inbounds %struct.CID_FaceDictRec_, %struct.CID_FaceDictRec_* %35, i64 %36, i32 0, i32 12
  store i32 1, i32* %38, align 4
  %39 = getelementptr inbounds %struct.CID_FaceDictRec_, %struct.CID_FaceDictRec_* %35, i64 %36, i32 0, i32 1
  store i32 4, i32* %39, align 4
  %40 = getelementptr inbounds %struct.CID_FaceDictRec_, %struct.CID_FaceDictRec_* %35, i64 %36, i32 0, i32 21
  store i64 3932, i64* %40, align 8
  %41 = getelementptr inbounds %struct.CID_FaceDictRec_, %struct.CID_FaceDictRec_* %35, i64 %36, i32 0, i32 10
  store i64 2596864, i64* %41, align 8
  %42 = add nuw nsw i64 %36, 1
  %43 = load i32, i32* %30, align 8
  %44 = sext i32 %43 to i64
  %45 = icmp slt i64 %42, %44
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = load %struct.CID_FaceDictRec_*, %struct.CID_FaceDictRec_** %20, align 8
  br label %34

48:                                               ; preds = %34, %28, %2, %14, %23
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @cid_parse_font_matrix(%struct.CID_FaceRec_* nocapture, %struct.CID_Parser_*) #0 {
  %3 = alloca [6 x i64], align 16
  %4 = bitcast [6 x i64]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %4) #10
  %5 = getelementptr inbounds [6 x i64], [6 x i64]* %3, i64 0, i64 0
  %6 = getelementptr inbounds [6 x i64], [6 x i64]* %3, i64 0, i64 1
  %7 = getelementptr inbounds [6 x i64], [6 x i64]* %3, i64 0, i64 2
  %8 = getelementptr inbounds [6 x i64], [6 x i64]* %3, i64 0, i64 3
  %9 = getelementptr inbounds [6 x i64], [6 x i64]* %3, i64 0, i64 4
  %10 = getelementptr inbounds [6 x i64], [6 x i64]* %3, i64 0, i64 5
  %11 = getelementptr inbounds %struct.CID_Parser_, %struct.CID_Parser_* %1, i64 0, i32 7
  %12 = bitcast [6 x i64]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 48, i1 false)
  %13 = load i32, i32* %11, align 8
  %14 = icmp sgt i32 %13, -1
  br i1 %14, label %15, label %71

15:                                               ; preds = %2
  %16 = getelementptr inbounds %struct.CID_FaceRec_, %struct.CID_FaceRec_* %0, i64 0, i32 3, i32 15
  %17 = load i32, i32* %16, align 8
  %18 = icmp slt i32 %13, %17
  br i1 %18, label %19, label %71

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.CID_FaceRec_, %struct.CID_FaceRec_* %0, i64 0, i32 3, i32 16
  %21 = load %struct.CID_FaceDictRec_*, %struct.CID_FaceDictRec_** %20, align 8
  %22 = sext i32 %13 to i64
  %23 = getelementptr inbounds %struct.CID_FaceDictRec_, %struct.CID_FaceDictRec_* %21, i64 %22, i32 7
  %24 = getelementptr inbounds %struct.CID_Parser_, %struct.CID_Parser_* %1, i64 0, i32 0
  %25 = getelementptr inbounds %struct.CID_Parser_, %struct.CID_Parser_* %1, i64 0, i32 0, i32 5, i32 8
  %26 = load i32 (%struct.PS_ParserRec_*, i32, i64*, i32)*, i32 (%struct.PS_ParserRec_*, i32, i64*, i32)** %25, align 8
  %27 = call i32 %26(%struct.PS_ParserRec_* %24, i32 6, i64* nonnull %5, i32 3) #10
  %28 = icmp slt i32 %27, 6
  br i1 %28, label %71, label %29

29:                                               ; preds = %19
  %30 = load i64, i64* %8, align 8
  %31 = icmp slt i64 %30, 0
  %32 = sub nsw i64 0, %30
  %33 = select i1 %31, i64 %32, i64 %30
  switch i64 %33, label %34 [
    i64 0, label %71
    i64 65536, label %51
  ]

34:                                               ; preds = %29
  %35 = call i64 @FT_DivFix(i64 1000, i64 %33) #10
  %36 = trunc i64 %35 to i16
  %37 = getelementptr inbounds %struct.CID_FaceRec_, %struct.CID_FaceRec_* %0, i64 0, i32 0, i32 13
  store i16 %36, i16* %37, align 8
  %38 = load i64, i64* %5, align 16
  %39 = call i64 @FT_DivFix(i64 %38, i64 %33) #10
  store i64 %39, i64* %5, align 16
  %40 = load i64, i64* %6, align 8
  %41 = call i64 @FT_DivFix(i64 %40, i64 %33) #10
  store i64 %41, i64* %6, align 8
  %42 = load i64, i64* %7, align 16
  %43 = call i64 @FT_DivFix(i64 %42, i64 %33) #10
  store i64 %43, i64* %7, align 16
  %44 = load i64, i64* %9, align 16
  %45 = call i64 @FT_DivFix(i64 %44, i64 %33) #10
  store i64 %45, i64* %9, align 16
  %46 = load i64, i64* %10, align 8
  %47 = call i64 @FT_DivFix(i64 %46, i64 %33) #10
  store i64 %47, i64* %10, align 8
  %48 = load i64, i64* %8, align 8
  %49 = icmp slt i64 %48, 0
  %50 = select i1 %49, i64 -65536, i64 65536
  store i64 %50, i64* %8, align 8
  br label %51

51:                                               ; preds = %29, %34
  %52 = load i64, i64* %5, align 16
  %53 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %23, i64 0, i32 0
  store i64 %52, i64* %53, align 8
  %54 = load i64, i64* %6, align 8
  %55 = getelementptr inbounds %struct.CID_FaceDictRec_, %struct.CID_FaceDictRec_* %21, i64 %22, i32 7, i32 2
  store i64 %54, i64* %55, align 8
  %56 = load i64, i64* %7, align 16
  %57 = getelementptr inbounds %struct.CID_FaceDictRec_, %struct.CID_FaceDictRec_* %21, i64 %22, i32 7, i32 1
  store i64 %56, i64* %57, align 8
  %58 = load i64, i64* %8, align 8
  %59 = getelementptr inbounds %struct.CID_FaceDictRec_, %struct.CID_FaceDictRec_* %21, i64 %22, i32 7, i32 3
  store i64 %58, i64* %59, align 8
  %60 = call zeroext i8 @FT_Matrix_Check(%struct.FT_Matrix_* %23) #10
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %51
  %63 = getelementptr inbounds %struct.CID_Parser_, %struct.CID_Parser_* %1, i64 0, i32 0, i32 3
  store i32 3, i32* %63, align 8
  br label %71

64:                                               ; preds = %51
  %65 = load i64, i64* %9, align 16
  %66 = ashr i64 %65, 16
  %67 = getelementptr inbounds %struct.CID_FaceDictRec_, %struct.CID_FaceDictRec_* %21, i64 %22, i32 8, i32 0
  store i64 %66, i64* %67, align 8
  %68 = load i64, i64* %10, align 8
  %69 = ashr i64 %68, 16
  %70 = getelementptr inbounds %struct.CID_FaceDictRec_, %struct.CID_FaceDictRec_* %21, i64 %22, i32 8, i32 1
  store i64 %69, i64* %70, align 8
  br label %71

71:                                               ; preds = %15, %2, %29, %19, %62, %64
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @parse_expansion_factor(%struct.CID_FaceRec_* nocapture readonly, %struct.CID_Parser_*) #0 {
  %3 = getelementptr inbounds %struct.CID_Parser_, %struct.CID_Parser_* %1, i64 0, i32 7
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, -1
  br i1 %5, label %6, label %20

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.CID_FaceRec_, %struct.CID_FaceRec_* %0, i64 0, i32 3, i32 15
  %8 = load i32, i32* %7, align 8
  %9 = icmp slt i32 %4, %8
  br i1 %9, label %10, label %20

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.CID_FaceRec_, %struct.CID_FaceRec_* %0, i64 0, i32 3, i32 16
  %12 = load %struct.CID_FaceDictRec_*, %struct.CID_FaceDictRec_** %11, align 8
  %13 = sext i32 %4 to i64
  %14 = getelementptr inbounds %struct.CID_Parser_, %struct.CID_Parser_* %1, i64 0, i32 0
  %15 = getelementptr inbounds %struct.CID_Parser_, %struct.CID_Parser_* %1, i64 0, i32 0, i32 5, i32 5
  %16 = load i64 (%struct.PS_ParserRec_*, i32)*, i64 (%struct.PS_ParserRec_*, i32)** %15, align 8
  %17 = tail call i64 %16(%struct.PS_ParserRec_* %14, i32 0) #10
  %18 = getelementptr inbounds %struct.CID_FaceDictRec_, %struct.CID_FaceDictRec_* %12, i64 %13, i32 4
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %struct.CID_FaceDictRec_, %struct.CID_FaceDictRec_* %12, i64 %13, i32 0, i32 21
  store i64 %17, i64* %19, align 8
  br label %20

20:                                               ; preds = %10, %6, %2
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @parse_font_name(%struct.CID_FaceRec_* nocapture, %struct.CID_Parser_* nocapture) #1 {
  ret void
}

declare hidden i8* @ft_mem_realloc(%struct.FT_MemoryRec_*, i64, i64, i64, i8*, i32*) local_unnamed_addr #4

declare i64 @FT_DivFix(i64, i64) local_unnamed_addr #4

declare hidden zeroext i8 @FT_Matrix_Check(%struct.FT_Matrix_*) local_unnamed_addr #4

declare hidden void @ft_mem_free(%struct.FT_MemoryRec_*, i8*) local_unnamed_addr #4

declare %struct.FT_ModuleRec_* @FT_Get_Module(%struct.FT_LibraryRec_*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal i32 @cid_load_glyph(%struct.T1_DecoderRec_*, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.FT_Data_, align 8
  %5 = alloca %struct.PS_Decoder_, align 8
  %6 = alloca %struct.CFF_SubFontRec_, align 8
  %7 = alloca %struct.FT_Incremental_MetricsRec_, align 8
  %8 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 0, i32 1
  %9 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %8, align 8
  %10 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %9, i64 1, i32 2
  %11 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %9, i64 2, i32 12, i32 3
  %12 = bitcast i64* %11 to %struct.FT_StreamRec_**
  %13 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %12, align 8
  %14 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #10
  store i32 0, i32* %3, align 4
  %15 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %9, i64 0, i32 25
  %16 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %15, align 8
  %17 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %9, i64 1, i32 1
  %18 = bitcast i64* %17 to %struct.PSAux_ServiceRec_**
  %19 = load %struct.PSAux_ServiceRec_*, %struct.PSAux_ServiceRec_** %18, align 8
  %20 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %9, i64 0, i32 30
  %21 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %20, align 8
  %22 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %21, i64 0, i32 4
  %23 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %22, align 8
  %24 = icmp ne %struct.FT_Incremental_InterfaceRec_* %23, null
  br i1 %24, label %25, label %119

25:                                               ; preds = %2
  %26 = bitcast %struct.FT_Data_* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false)
  %27 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %23, i64 0, i32 0
  %28 = load %struct.FT_Incremental_FuncsRec_*, %struct.FT_Incremental_FuncsRec_** %27, align 8
  %29 = getelementptr inbounds %struct.FT_Incremental_FuncsRec_, %struct.FT_Incremental_FuncsRec_* %28, i64 0, i32 0
  %30 = load i32 (%struct.FT_IncrementalRec_*, i32, %struct.FT_Data_*)*, i32 (%struct.FT_IncrementalRec_*, i32, %struct.FT_Data_*)** %29, align 8
  %31 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %23, i64 0, i32 1
  %32 = load %struct.FT_IncrementalRec_*, %struct.FT_IncrementalRec_** %31, align 8
  %33 = call i32 %30(%struct.FT_IncrementalRec_* %32, i32 %1, %struct.FT_Data_* nonnull %4) #10
  store i32 %33, i32* %3, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %116

35:                                               ; preds = %25
  %36 = getelementptr inbounds %struct.FT_Data_, %struct.FT_Data_* %4, i64 0, i32 0
  %37 = getelementptr inbounds i64, i64* %10, i64 36
  %38 = bitcast i64* %37 to i32*
  %39 = load i32, i32* %38, align 8
  %40 = trunc i32 %39 to i8
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %91, label %42

42:                                               ; preds = %35
  %43 = load i8*, i8** %36, align 8
  %44 = add i8 %40, -1
  %45 = and i8 %40, 3
  %46 = icmp ult i8 %44, 3
  br i1 %46, label %75, label %47

47:                                               ; preds = %42
  %48 = sub i8 %40, %45
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i8* [ %43, %47 ], [ %69, %49 ]
  %51 = phi i64 [ 0, %47 ], [ %72, %49 ]
  %52 = phi i8 [ %48, %47 ], [ %73, %49 ]
  %53 = shl i64 %51, 8
  %54 = getelementptr inbounds i8, i8* %50, i64 1
  %55 = load i8, i8* %50, align 1
  %56 = zext i8 %55 to i64
  %57 = or i64 %53, %56
  %58 = shl i64 %57, 8
  %59 = getelementptr inbounds i8, i8* %50, i64 2
  %60 = load i8, i8* %54, align 1
  %61 = zext i8 %60 to i64
  %62 = or i64 %58, %61
  %63 = shl i64 %62, 8
  %64 = getelementptr inbounds i8, i8* %50, i64 3
  %65 = load i8, i8* %59, align 1
  %66 = zext i8 %65 to i64
  %67 = or i64 %63, %66
  %68 = shl i64 %67, 8
  %69 = getelementptr inbounds i8, i8* %50, i64 4
  %70 = load i8, i8* %64, align 1
  %71 = zext i8 %70 to i64
  %72 = or i64 %68, %71
  %73 = add i8 %52, -4
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %75, label %49

75:                                               ; preds = %49, %42
  %76 = phi i64 [ undef, %42 ], [ %72, %49 ]
  %77 = phi i8* [ %43, %42 ], [ %69, %49 ]
  %78 = phi i64 [ 0, %42 ], [ %72, %49 ]
  %79 = icmp eq i8 %45, 0
  br i1 %79, label %91, label %80

80:                                               ; preds = %75, %80
  %81 = phi i8* [ %85, %80 ], [ %77, %75 ]
  %82 = phi i64 [ %88, %80 ], [ %78, %75 ]
  %83 = phi i8 [ %89, %80 ], [ %45, %75 ]
  %84 = shl i64 %82, 8
  %85 = getelementptr inbounds i8, i8* %81, i64 1
  %86 = load i8, i8* %81, align 1
  %87 = zext i8 %86 to i64
  %88 = or i64 %84, %87
  %89 = add i8 %83, -1
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %91, label %80, !llvm.loop !4

91:                                               ; preds = %75, %80, %35
  %92 = phi i64 [ 0, %35 ], [ %76, %75 ], [ %88, %80 ]
  %93 = getelementptr inbounds %struct.FT_Data_, %struct.FT_Data_* %4, i64 0, i32 1
  %94 = load i32, i32* %93, align 8
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %107, label %96

96:                                               ; preds = %91
  %97 = sub nsw i32 %94, %39
  %98 = sext i32 %97 to i64
  %99 = call i8* @ft_mem_qalloc(%struct.FT_MemoryRec_* %16, i64 %98, i32* nonnull %3) #10
  %100 = load i32, i32* %3, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %107

102:                                              ; preds = %96
  %103 = load i8*, i8** %36, align 8
  %104 = load i32, i32* %38, align 8
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds i8, i8* %103, i64 %105
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %99, i8* align 1 %106, i64 %98, i1 false)
  br label %107

107:                                              ; preds = %96, %91, %102
  %108 = phi i8* [ %99, %96 ], [ %99, %102 ], [ null, %91 ]
  %109 = phi i64 [ %98, %96 ], [ %98, %102 ], [ 0, %91 ]
  %110 = load %struct.FT_Incremental_FuncsRec_*, %struct.FT_Incremental_FuncsRec_** %27, align 8
  %111 = getelementptr inbounds %struct.FT_Incremental_FuncsRec_, %struct.FT_Incremental_FuncsRec_* %110, i64 0, i32 1
  %112 = load void (%struct.FT_IncrementalRec_*, %struct.FT_Data_*)*, void (%struct.FT_IncrementalRec_*, %struct.FT_Data_*)** %111, align 8
  %113 = load %struct.FT_IncrementalRec_*, %struct.FT_IncrementalRec_** %31, align 8
  call void %112(%struct.FT_IncrementalRec_* %113, %struct.FT_Data_* nonnull %4) #10
  %114 = load i32, i32* %3, align 4
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %118, label %116

116:                                              ; preds = %25, %107
  %117 = phi i8* [ %108, %107 ], [ null, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #10
  br label %461

118:                                              ; preds = %107
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #10
  br label %336

119:                                              ; preds = %2
  %120 = bitcast i64* %10 to %struct.CID_FaceInfoRec_*
  %121 = getelementptr inbounds i64, i64* %10, i64 36
  %122 = bitcast i64* %121 to i32*
  %123 = load i32, i32* %122, align 8
  %124 = getelementptr inbounds %struct.CID_FaceInfoRec_, %struct.CID_FaceInfoRec_* %120, i64 0, i32 13
  %125 = load i32, i32* %124, align 4
  %126 = add nsw i32 %125, %123
  %127 = getelementptr inbounds i64, i64* %10, i64 40
  %128 = load i64, i64* %127, align 8
  %129 = getelementptr inbounds i64, i64* %10, i64 35
  %130 = load i64, i64* %129, align 8
  %131 = add i64 %130, %128
  %132 = mul i32 %126, %1
  %133 = zext i32 %132 to i64
  %134 = add i64 %131, %133
  %135 = tail call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %13, i64 %134) #10
  store i32 %135, i32* %3, align 4
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %461

137:                                              ; preds = %119
  %138 = shl i32 %126, 1
  %139 = zext i32 %138 to i64
  %140 = tail call i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_* %13, i64 %139) #10
  store i32 %140, i32* %3, align 4
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %461

142:                                              ; preds = %137
  %143 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %13, i64 0, i32 8
  %144 = load i8*, i8** %143, align 8
  %145 = load i32, i32* %122, align 8
  %146 = trunc i32 %145 to i8
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %201, label %148

148:                                              ; preds = %142
  %149 = add i8 %146, -1
  %150 = zext i8 %149 to i64
  %151 = and i8 %146, 3
  %152 = icmp ult i8 %149, 3
  br i1 %152, label %181, label %153

153:                                              ; preds = %148
  %154 = sub i8 %146, %151
  br label %155

155:                                              ; preds = %155, %153
  %156 = phi i8* [ %144, %153 ], [ %175, %155 ]
  %157 = phi i64 [ 0, %153 ], [ %178, %155 ]
  %158 = phi i8 [ %154, %153 ], [ %179, %155 ]
  %159 = shl i64 %157, 8
  %160 = getelementptr inbounds i8, i8* %156, i64 1
  %161 = load i8, i8* %156, align 1
  %162 = zext i8 %161 to i64
  %163 = or i64 %159, %162
  %164 = shl i64 %163, 8
  %165 = getelementptr inbounds i8, i8* %156, i64 2
  %166 = load i8, i8* %160, align 1
  %167 = zext i8 %166 to i64
  %168 = or i64 %164, %167
  %169 = shl i64 %168, 8
  %170 = getelementptr inbounds i8, i8* %156, i64 3
  %171 = load i8, i8* %165, align 1
  %172 = zext i8 %171 to i64
  %173 = or i64 %169, %172
  %174 = shl i64 %173, 8
  %175 = getelementptr inbounds i8, i8* %156, i64 4
  %176 = load i8, i8* %170, align 1
  %177 = zext i8 %176 to i64
  %178 = or i64 %174, %177
  %179 = add i8 %158, -4
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %181, label %155

181:                                              ; preds = %155, %148
  %182 = phi i64 [ undef, %148 ], [ %178, %155 ]
  %183 = phi i8* [ %144, %148 ], [ %175, %155 ]
  %184 = phi i64 [ 0, %148 ], [ %178, %155 ]
  %185 = icmp eq i8 %151, 0
  br i1 %185, label %197, label %186

186:                                              ; preds = %181, %186
  %187 = phi i8* [ %191, %186 ], [ %183, %181 ]
  %188 = phi i64 [ %194, %186 ], [ %184, %181 ]
  %189 = phi i8 [ %195, %186 ], [ %151, %181 ]
  %190 = shl i64 %188, 8
  %191 = getelementptr inbounds i8, i8* %187, i64 1
  %192 = load i8, i8* %187, align 1
  %193 = zext i8 %192 to i64
  %194 = or i64 %190, %193
  %195 = add i8 %189, -1
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %197, label %186, !llvm.loop !5

197:                                              ; preds = %186, %181
  %198 = phi i64 [ %182, %181 ], [ %194, %186 ]
  %199 = add nuw nsw i64 %150, 1
  %200 = getelementptr i8, i8* %144, i64 %199
  br label %201

201:                                              ; preds = %142, %197
  %202 = phi i64 [ 0, %142 ], [ %198, %197 ]
  %203 = phi i8* [ %144, %142 ], [ %200, %197 ]
  %204 = load i32, i32* %124, align 4
  %205 = trunc i32 %204 to i8
  %206 = icmp eq i8 %205, 0
  br i1 %206, label %309, label %207

207:                                              ; preds = %201
  %208 = add i8 %205, -1
  %209 = zext i8 %208 to i64
  %210 = and i8 %205, 3
  %211 = icmp ult i8 %208, 3
  br i1 %211, label %240, label %212

212:                                              ; preds = %207
  %213 = sub i8 %205, %210
  br label %214

214:                                              ; preds = %214, %212
  %215 = phi i8* [ %203, %212 ], [ %234, %214 ]
  %216 = phi i64 [ 0, %212 ], [ %237, %214 ]
  %217 = phi i8 [ %213, %212 ], [ %238, %214 ]
  %218 = shl i64 %216, 8
  %219 = getelementptr inbounds i8, i8* %215, i64 1
  %220 = load i8, i8* %215, align 1
  %221 = zext i8 %220 to i64
  %222 = or i64 %218, %221
  %223 = shl i64 %222, 8
  %224 = getelementptr inbounds i8, i8* %215, i64 2
  %225 = load i8, i8* %219, align 1
  %226 = zext i8 %225 to i64
  %227 = or i64 %223, %226
  %228 = shl i64 %227, 8
  %229 = getelementptr inbounds i8, i8* %215, i64 3
  %230 = load i8, i8* %224, align 1
  %231 = zext i8 %230 to i64
  %232 = or i64 %228, %231
  %233 = shl i64 %232, 8
  %234 = getelementptr inbounds i8, i8* %215, i64 4
  %235 = load i8, i8* %229, align 1
  %236 = zext i8 %235 to i64
  %237 = or i64 %233, %236
  %238 = add i8 %217, -4
  %239 = icmp eq i8 %238, 0
  br i1 %239, label %240, label %214

240:                                              ; preds = %214, %207
  %241 = phi i64 [ undef, %207 ], [ %237, %214 ]
  %242 = phi i8* [ %203, %207 ], [ %234, %214 ]
  %243 = phi i64 [ 0, %207 ], [ %237, %214 ]
  %244 = icmp eq i8 %210, 0
  br i1 %244, label %256, label %245

245:                                              ; preds = %240, %245
  %246 = phi i8* [ %250, %245 ], [ %242, %240 ]
  %247 = phi i64 [ %253, %245 ], [ %243, %240 ]
  %248 = phi i8 [ %254, %245 ], [ %210, %240 ]
  %249 = shl i64 %247, 8
  %250 = getelementptr inbounds i8, i8* %246, i64 1
  %251 = load i8, i8* %246, align 1
  %252 = zext i8 %251 to i64
  %253 = or i64 %249, %252
  %254 = add i8 %248, -1
  %255 = icmp eq i8 %254, 0
  br i1 %255, label %256, label %245, !llvm.loop !6

256:                                              ; preds = %245, %240
  %257 = phi i64 [ %241, %240 ], [ %253, %245 ]
  %258 = add nuw nsw i64 %209, 1
  %259 = getelementptr i8, i8* %203, i64 %258
  %260 = sext i32 %145 to i64
  %261 = getelementptr inbounds i8, i8* %259, i64 %260
  %262 = add i8 %205, -1
  %263 = and i8 %205, 3
  %264 = icmp ult i8 %262, 3
  br i1 %264, label %293, label %265

265:                                              ; preds = %256
  %266 = sub i8 %205, %263
  br label %267

267:                                              ; preds = %267, %265
  %268 = phi i8* [ %261, %265 ], [ %287, %267 ]
  %269 = phi i64 [ 0, %265 ], [ %290, %267 ]
  %270 = phi i8 [ %266, %265 ], [ %291, %267 ]
  %271 = shl i64 %269, 8
  %272 = getelementptr inbounds i8, i8* %268, i64 1
  %273 = load i8, i8* %268, align 1
  %274 = zext i8 %273 to i64
  %275 = or i64 %271, %274
  %276 = shl i64 %275, 8
  %277 = getelementptr inbounds i8, i8* %268, i64 2
  %278 = load i8, i8* %272, align 1
  %279 = zext i8 %278 to i64
  %280 = or i64 %276, %279
  %281 = shl i64 %280, 8
  %282 = getelementptr inbounds i8, i8* %268, i64 3
  %283 = load i8, i8* %277, align 1
  %284 = zext i8 %283 to i64
  %285 = or i64 %281, %284
  %286 = shl i64 %285, 8
  %287 = getelementptr inbounds i8, i8* %268, i64 4
  %288 = load i8, i8* %282, align 1
  %289 = zext i8 %288 to i64
  %290 = or i64 %286, %289
  %291 = add i8 %270, -4
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %293, label %267

293:                                              ; preds = %267, %256
  %294 = phi i64 [ undef, %256 ], [ %290, %267 ]
  %295 = phi i8* [ %261, %256 ], [ %287, %267 ]
  %296 = phi i64 [ 0, %256 ], [ %290, %267 ]
  %297 = icmp eq i8 %263, 0
  br i1 %297, label %309, label %298

298:                                              ; preds = %293, %298
  %299 = phi i8* [ %303, %298 ], [ %295, %293 ]
  %300 = phi i64 [ %306, %298 ], [ %296, %293 ]
  %301 = phi i8 [ %307, %298 ], [ %263, %293 ]
  %302 = shl i64 %300, 8
  %303 = getelementptr inbounds i8, i8* %299, i64 1
  %304 = load i8, i8* %299, align 1
  %305 = zext i8 %304 to i64
  %306 = or i64 %302, %305
  %307 = add i8 %301, -1
  %308 = icmp eq i8 %307, 0
  br i1 %308, label %309, label %298, !llvm.loop !7

309:                                              ; preds = %293, %298, %201
  %310 = phi i64 [ 0, %201 ], [ %257, %298 ], [ %257, %293 ]
  %311 = phi i64 [ 0, %201 ], [ %294, %293 ], [ %306, %298 ]
  tail call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %13) #10
  %312 = getelementptr inbounds i64, i64* %10, i64 38
  %313 = bitcast i64* %312 to i32*
  %314 = load i32, i32* %313, align 8
  %315 = sext i32 %314 to i64
  %316 = icmp ult i64 %202, %315
  br i1 %316, label %317, label %323

317:                                              ; preds = %309
  %318 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %13, i64 0, i32 1
  %319 = load i64, i64* %318, align 8
  %320 = icmp ugt i64 %311, %319
  %321 = icmp ult i64 %311, %310
  %322 = or i1 %321, %320
  br i1 %322, label %323, label %324

323:                                              ; preds = %309, %317
  store i32 9, i32* %3, align 4
  br label %461

324:                                              ; preds = %317
  %325 = sub i64 %311, %310
  %326 = icmp eq i64 %325, 0
  br i1 %326, label %461, label %327

327:                                              ; preds = %324
  %328 = call i8* @ft_mem_qalloc(%struct.FT_MemoryRec_* %16, i64 %325, i32* nonnull %3) #10
  %329 = load i32, i32* %3, align 4
  %330 = icmp eq i32 %329, 0
  br i1 %330, label %331, label %461

331:                                              ; preds = %327
  %332 = load i64, i64* %127, align 8
  %333 = add i64 %332, %310
  %334 = call i32 @FT_Stream_ReadAt(%struct.FT_StreamRec_* %13, i64 %333, i8* %328, i64 %325) #10
  store i32 %334, i32* %3, align 4
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %336, label %461

336:                                              ; preds = %331, %118
  %337 = phi i64 [ %92, %118 ], [ %202, %331 ]
  %338 = phi i8* [ %108, %118 ], [ %328, %331 ]
  %339 = phi i64 [ %109, %118 ], [ %325, %331 ]
  %340 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %9, i64 2, i32 12
  %341 = bitcast %struct.FT_BBox_* %340 to %struct.CID_SubrsRec_**
  %342 = load %struct.CID_SubrsRec_*, %struct.CID_SubrsRec_** %341, align 8
  %343 = getelementptr inbounds %struct.CID_SubrsRec_, %struct.CID_SubrsRec_* %342, i64 %337, i32 0
  %344 = load i32, i32* %343, align 8
  %345 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 9
  store i32 %344, i32* %345, align 4
  %346 = getelementptr inbounds %struct.CID_SubrsRec_, %struct.CID_SubrsRec_* %342, i64 %337, i32 1
  %347 = bitcast i8*** %346 to i64*
  %348 = load i64, i64* %347, align 8
  %349 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 10
  %350 = bitcast i8*** %349 to i64*
  store i64 %348, i64* %350, align 8
  %351 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 11
  %352 = getelementptr inbounds i64, i64* %10, i64 39
  %353 = bitcast i64* %352 to %struct.CID_FaceDictRec_**
  %354 = bitcast i32** %351 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %354, i8 0, i64 16, i1 false)
  %355 = load %struct.CID_FaceDictRec_*, %struct.CID_FaceDictRec_** %353, align 8
  %356 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 13
  %357 = getelementptr inbounds %struct.CID_FaceDictRec_, %struct.CID_FaceDictRec_* %355, i64 %337, i32 7
  %358 = bitcast %struct.FT_Matrix_* %356 to i8*
  %359 = bitcast %struct.FT_Matrix_* %357 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %358, i8* align 8 %359, i64 32, i1 false)
  %360 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 14
  %361 = getelementptr inbounds %struct.CID_FaceDictRec_, %struct.CID_FaceDictRec_* %355, i64 %337, i32 8
  %362 = bitcast %struct.FT_Vector_* %360 to i8*
  %363 = bitcast %struct.FT_Vector_* %361 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %362, i8* align 8 %363, i64 16, i1 false)
  %364 = getelementptr inbounds %struct.CID_FaceDictRec_, %struct.CID_FaceDictRec_* %355, i64 %337, i32 0
  %365 = getelementptr inbounds %struct.CID_FaceDictRec_, %struct.CID_FaceDictRec_* %355, i64 %337, i32 0, i32 1
  %366 = load i32, i32* %365, align 4
  %367 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 8
  store i32 %366, i32* %367, align 8
  %368 = icmp sgt i32 %366, -1
  %369 = select i1 %368, i32 %366, i32 0
  %370 = zext i32 %369 to i64
  %371 = icmp ult i64 %339, %370
  br i1 %371, label %419, label %372

372:                                              ; preds = %336
  br i1 %368, label %373, label %376

373:                                              ; preds = %372
  %374 = getelementptr inbounds %struct.PSAux_ServiceRec_, %struct.PSAux_ServiceRec_* %19, i64 0, i32 4
  %375 = load void (i8*, i64, i16)*, void (i8*, i64, i16)** %374, align 8
  call void %375(i8* %338, i64 %339, i16 zeroext 4330) #10
  br label %376

376:                                              ; preds = %373, %372
  %377 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 0, i32 14
  %378 = load i8, i8* %377, align 2
  %379 = icmp eq i8 %378, 0
  br i1 %379, label %389, label %380

380:                                              ; preds = %376
  %381 = getelementptr inbounds %struct.PSAux_ServiceRec_, %struct.PSAux_ServiceRec_* %19, i64 0, i32 3
  %382 = load %struct.T1_Decoder_FuncsRec_*, %struct.T1_Decoder_FuncsRec_** %381, align 8
  %383 = getelementptr inbounds %struct.T1_Decoder_FuncsRec_, %struct.T1_Decoder_FuncsRec_* %382, i64 0, i32 2
  %384 = load i32 (%struct.T1_DecoderRec_*, i8*, i32)*, i32 (%struct.T1_DecoderRec_*, i8*, i32)** %383, align 8
  %385 = getelementptr inbounds i8, i8* %338, i64 %370
  %386 = trunc i64 %339 to i32
  %387 = sub i32 %386, %369
  %388 = call i32 %384(%struct.T1_DecoderRec_* %0, i8* %385, i32 %387) #10
  store i32 %388, i32* %3, align 4
  br label %420

389:                                              ; preds = %376
  %390 = bitcast %struct.PS_Decoder_* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1264, i8* nonnull %390) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %390, i8 -86, i64 1264, i1 false)
  %391 = bitcast %struct.CFF_SubFontRec_* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1224, i8* nonnull %391) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %391, i8 -86, i64 1224, i1 false)
  %392 = getelementptr inbounds %struct.PSAux_ServiceRec_, %struct.PSAux_ServiceRec_* %19, i64 0, i32 6
  %393 = load void (%struct.PS_Decoder_*, i8*, i8)*, void (%struct.PS_Decoder_*, i8*, i8)** %392, align 8
  %394 = bitcast %struct.T1_DecoderRec_* %0 to i8*
  call void %393(%struct.PS_Decoder_* nonnull %5, i8* %394, i8 zeroext 1) #10
  %395 = getelementptr inbounds %struct.PSAux_ServiceRec_, %struct.PSAux_ServiceRec_* %19, i64 0, i32 7
  %396 = load void (%struct.FT_FaceRec_*, %struct.PS_PrivateRec_*, %struct.CFF_SubFontRec_*)*, void (%struct.FT_FaceRec_*, %struct.PS_PrivateRec_*, %struct.CFF_SubFontRec_*)** %395, align 8
  call void %396(%struct.FT_FaceRec_* %9, %struct.PS_PrivateRec_* %364, %struct.CFF_SubFontRec_* nonnull %6) #10
  %397 = getelementptr inbounds %struct.PS_Decoder_, %struct.PS_Decoder_* %5, i64 0, i32 9
  store %struct.CFF_SubFontRec_* %6, %struct.CFF_SubFontRec_** %397, align 8
  %398 = getelementptr inbounds %struct.PSAux_ServiceRec_, %struct.PSAux_ServiceRec_* %19, i64 0, i32 3
  %399 = load %struct.T1_Decoder_FuncsRec_*, %struct.T1_Decoder_FuncsRec_** %398, align 8
  %400 = getelementptr inbounds %struct.T1_Decoder_FuncsRec_, %struct.T1_Decoder_FuncsRec_* %399, i64 0, i32 3
  %401 = load i32 (%struct.PS_Decoder_*, i8*, i64)*, i32 (%struct.PS_Decoder_*, i8*, i64)** %400, align 8
  %402 = getelementptr inbounds i8, i8* %338, i64 %370
  %403 = sub i64 %339, %370
  %404 = call i32 %401(%struct.PS_Decoder_* nonnull %5, i8* %402, i64 %403) #10
  store i32 %404, i32* %3, align 4
  %405 = and i32 %404, 255
  %406 = icmp eq i32 %405, 164
  br i1 %406, label %407, label %416

407:                                              ; preds = %389
  %408 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 0, i32 2
  %409 = bitcast %struct.FT_GlyphSlotRec_** %408 to %struct.CID_GlyphSlotRec_**
  %410 = load %struct.CID_GlyphSlotRec_*, %struct.CID_GlyphSlotRec_** %409, align 8
  %411 = getelementptr inbounds %struct.CID_GlyphSlotRec_, %struct.CID_GlyphSlotRec_* %410, i64 0, i32 1
  store i8 0, i8* %411, align 8
  %412 = load %struct.T1_Decoder_FuncsRec_*, %struct.T1_Decoder_FuncsRec_** %398, align 8
  %413 = getelementptr inbounds %struct.T1_Decoder_FuncsRec_, %struct.T1_Decoder_FuncsRec_* %412, i64 0, i32 3
  %414 = load i32 (%struct.PS_Decoder_*, i8*, i64)*, i32 (%struct.PS_Decoder_*, i8*, i64)** %413, align 8
  %415 = call i32 %414(%struct.PS_Decoder_* nonnull %5, i8* %402, i64 %403) #10
  store i32 %415, i32* %3, align 4
  br label %416

416:                                              ; preds = %407, %389
  %417 = phi i32 [ %415, %407 ], [ %404, %389 ]
  %418 = phi i8 [ 1, %407 ], [ 0, %389 ]
  call void @llvm.lifetime.end.p0i8(i64 1224, i8* nonnull %391) #10
  call void @llvm.lifetime.end.p0i8(i64 1264, i8* nonnull %390) #10
  br label %420

419:                                              ; preds = %336
  store i32 9, i32* %3, align 4
  br label %461

420:                                              ; preds = %416, %380
  %421 = phi i32 [ %417, %416 ], [ %388, %380 ]
  %422 = phi i8 [ %418, %416 ], [ 0, %380 ]
  %423 = icmp eq i32 %421, 0
  %424 = and i1 %24, %423
  br i1 %424, label %425, label %461

425:                                              ; preds = %420
  %426 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %23, i64 0, i32 0
  %427 = load %struct.FT_Incremental_FuncsRec_*, %struct.FT_Incremental_FuncsRec_** %426, align 8
  %428 = getelementptr inbounds %struct.FT_Incremental_FuncsRec_, %struct.FT_Incremental_FuncsRec_* %427, i64 0, i32 2
  %429 = load i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)*, i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)** %428, align 8
  %430 = icmp eq i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)* %429, null
  br i1 %430, label %461, label %431

431:                                              ; preds = %425
  %432 = bitcast %struct.FT_Incremental_MetricsRec_* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %432) #10
  %433 = getelementptr inbounds %struct.FT_Incremental_MetricsRec_, %struct.FT_Incremental_MetricsRec_* %7, i64 0, i32 0
  %434 = getelementptr inbounds %struct.FT_Incremental_MetricsRec_, %struct.FT_Incremental_MetricsRec_* %7, i64 0, i32 1
  %435 = getelementptr inbounds %struct.FT_Incremental_MetricsRec_, %struct.FT_Incremental_MetricsRec_* %7, i64 0, i32 2
  %436 = getelementptr inbounds %struct.FT_Incremental_MetricsRec_, %struct.FT_Incremental_MetricsRec_* %7, i64 0, i32 3
  %437 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 0, i32 8, i32 0
  %438 = load i64, i64* %437, align 8
  %439 = call i64 @FT_RoundFix(i64 %438) #10
  %440 = ashr i64 %439, 16
  store i64 %440, i64* %433, align 8
  store i64 0, i64* %434, align 8
  %441 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 0, i32 9, i32 0
  %442 = load i64, i64* %441, align 8
  %443 = call i64 @FT_RoundFix(i64 %442) #10
  %444 = ashr i64 %443, 16
  store i64 %444, i64* %435, align 8
  %445 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 0, i32 9, i32 1
  %446 = load i64, i64* %445, align 8
  %447 = call i64 @FT_RoundFix(i64 %446) #10
  %448 = ashr i64 %447, 16
  store i64 %448, i64* %436, align 8
  %449 = load %struct.FT_Incremental_FuncsRec_*, %struct.FT_Incremental_FuncsRec_** %426, align 8
  %450 = getelementptr inbounds %struct.FT_Incremental_FuncsRec_, %struct.FT_Incremental_FuncsRec_* %449, i64 0, i32 2
  %451 = load i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)*, i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)** %450, align 8
  %452 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %23, i64 0, i32 1
  %453 = load %struct.FT_IncrementalRec_*, %struct.FT_IncrementalRec_** %452, align 8
  %454 = call i32 %451(%struct.FT_IncrementalRec_* %453, i32 %1, i8 zeroext 0, %struct.FT_Incremental_MetricsRec_* nonnull %7) #10
  store i32 %454, i32* %3, align 4
  %455 = load i64, i64* %433, align 8
  %456 = shl nsw i64 %455, 16
  store i64 %456, i64* %437, align 8
  %457 = bitcast i64* %435 to <2 x i64>*
  %458 = load <2 x i64>, <2 x i64>* %457, align 8
  %459 = shl nsw <2 x i64> %458, <i64 16, i64 16>
  %460 = bitcast i64* %441 to <2 x i64>*
  store <2 x i64> %459, <2 x i64>* %460, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %432) #10
  br label %461

461:                                              ; preds = %331, %324, %327, %119, %137, %323, %419, %116, %425, %420, %431
  %462 = phi i8* [ %338, %419 ], [ %338, %431 ], [ %338, %425 ], [ %338, %420 ], [ %117, %116 ], [ %328, %331 ], [ %328, %327 ], [ null, %324 ], [ null, %119 ], [ null, %137 ], [ null, %323 ]
  %463 = phi i8 [ 0, %419 ], [ %422, %431 ], [ %422, %425 ], [ %422, %420 ], [ 0, %116 ], [ 0, %331 ], [ 0, %327 ], [ 0, %324 ], [ 0, %119 ], [ 0, %137 ], [ 0, %323 ]
  call void @ft_mem_free(%struct.FT_MemoryRec_* %16, i8* %462) #10
  %464 = getelementptr inbounds %struct.T1_DecoderRec_, %struct.T1_DecoderRec_* %0, i64 0, i32 0, i32 2
  %465 = bitcast %struct.FT_GlyphSlotRec_** %464 to %struct.CID_GlyphSlotRec_**
  %466 = load %struct.CID_GlyphSlotRec_*, %struct.CID_GlyphSlotRec_** %465, align 8
  %467 = getelementptr inbounds %struct.CID_GlyphSlotRec_, %struct.CID_GlyphSlotRec_* %466, i64 0, i32 2
  store i8 %463, i8* %467, align 1
  %468 = load i32, i32* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #10
  ret i32 %468
}

declare i64 @FT_RoundFix(i64) local_unnamed_addr #4

declare void @FT_Outline_Transform(%struct.FT_Outline_*, %struct.FT_Matrix_*) local_unnamed_addr #4

declare void @FT_Outline_Translate(%struct.FT_Outline_*, i64, i64) local_unnamed_addr #4

declare void @FT_Outline_Get_CBox(%struct.FT_Outline_*, %struct.FT_BBox_*) local_unnamed_addr #4

declare hidden void @ft_synthesize_vertical_metrics(%struct.FT_Glyph_Metrics_*, i64) local_unnamed_addr #4

declare hidden i32 @FT_Stream_ReadAt(%struct.FT_StreamRec_*, i64, i8*, i64) local_unnamed_addr #4

declare hidden void @FT_Request_Metrics(%struct.FT_FaceRec_*, %struct.FT_Size_RequestRec_*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !3}
