; ModuleID = '../../third_party/blink/renderer/core/clipboard/data_object_item.cc'
source_filename = "../../third_party/blink/renderer/core/clipboard/data_object_item.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.236", i32, [4 x i8], %"class.std::__1::unique_ptr.374", %"class.std::__1::unique_ptr.374", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.385", %"class.std::__1::unique_ptr.391", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.403", %"class.std::__1::unique_ptr.409", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.101", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.239", %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.251", %"class.std::__1::unique_ptr.257", %"class.std::__1::unique_ptr.263", %"class.std::__1::unique_ptr.269", %"class.std::__1::unique_ptr.280", %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.294", %"class.std::__1::unique_ptr.301", %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.315", %"class.std::__1::unique_ptr.322", %"class.std::__1::unique_ptr.329", %"class.std::__1::unique_ptr.354", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.272" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.272" = type { %"struct.std::__1::__atomic_base.273" }
%"struct.std::__1::__atomic_base.273" = type { %"struct.std::__1::__atomic_base.274" }
%"struct.std::__1::__atomic_base.274" = type { %"struct.std::__1::__cxx_atomic_impl.275" }
%"struct.std::__1::__cxx_atomic_impl.275" = type { %"struct.std::__1::__cxx_atomic_base_impl.276" }
%"struct.std::__1::__cxx_atomic_base_impl.276" = type { i64 }
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.blink::Worklist.283"* }
%"class.blink::Worklist.283" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.272" }
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.blink::Worklist.290"* }
%"class.blink::Worklist.290" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.272" }
%"class.std::__1::unique_ptr.294" = type { %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"class.blink::Worklist.297"* }
%"class.blink::Worklist.297" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.272" }
%"class.std::__1::unique_ptr.301" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"class.blink::Worklist.304"* }
%"class.blink::Worklist.304" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.272" }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.blink::Worklist.311"* }
%"class.blink::Worklist.311" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.272" }
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.blink::Worklist.318"* }
%"class.blink::Worklist.318" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.272" }
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.blink::Worklist.325"* }
%"class.blink::Worklist.325" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.272" }
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.332", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.347", [4 x i8] }>
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334", %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { i64 }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { float }
%"class.std::__1::unique_ptr.354" = type { %"class.std::__1::__compressed_pair.355" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.356" }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.357", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.357" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.366" }
%"class.WTF::Vector.366" = type { %"class.WTF::VectorBuffer.367" }
%"class.WTF::VectorBuffer.367" = type { %"class.WTF::VectorBufferBase.368" }
%"class.WTF::VectorBufferBase.368" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.374" = type { %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.382" }
%"class.WTF::VectorBuffer.382" = type { %"class.WTF::VectorBufferBase.383" }
%"class.WTF::VectorBufferBase.383" = type { %"struct.std::__1::pair.384"*, i32, i32 }
%"struct.std::__1::pair.384" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.385" = type { %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.391" = type { %"class.std::__1::__compressed_pair.392" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.397" }
%"class.std::__1::unique_ptr.397" = type { %"class.std::__1::__compressed_pair.398" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.399" }
%"struct.std::__1::__compressed_pair_elem.399" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.283"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.290"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.297"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.304"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.311"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.416" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.417" }
%"struct.std::__1::__compressed_pair_elem.417" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.415 }
%class.scoped_refptr.415 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.101" = type { %"struct.std::__1::__atomic_base.102" }
%"struct.std::__1::__atomic_base.102" = type { %"struct.std::__1::__cxx_atomic_impl.103" }
%"struct.std::__1::__cxx_atomic_impl.103" = type { %"struct.std::__1::__cxx_atomic_base_impl.104" }
%"struct.std::__1::__cxx_atomic_base_impl.104" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.193" }
%"class.base::time_internal::TimeBase.193" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::DataObjectItem" = type { %class.scoped_refptr, i32, i32, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member", %class.scoped_refptr.17, %"class.WTF::String", %"class.WTF::String", %"class.blink::KURL", i64, %"class.WTF::String", %"class.blink::Member.24" }
%class.scoped_refptr = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe", %"class.blink::CrossVariantMojoRemote" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.blink::CrossVariantMojoRemote" = type { i32, %"class.mojo::ScopedHandleBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::File"* }
%"class.blink::File" = type { %"class.blink::Blob", i8, i32, %"class.WTF::String", %"class.WTF::String", %"class.blink::KURL", %"class.absl::optional", %"class.absl::optional.12", %"class.WTF::String" }
%"class.blink::Blob" = type { %"class.blink::ScriptWrappable", %"class.blink::URLRegistrable", %"class.blink::ImageBitmapSource", %class.scoped_refptr.9 }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::URLRegistrable" = type { i32 (...)** }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%class.scoped_refptr.9 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.10" }
%"class.base::RefCountedThreadSafe.10" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.absl::optional.12" = type { %"class.absl::optional_internal::optional_data.13" }
%"class.absl::optional_internal::optional_data.13" = type { %"class.absl::optional_internal::optional_data_base.14" }
%"class.absl::optional_internal::optional_data_base.14" = type { %"class.absl::optional_internal::optional_data_dtor_base.15" }
%"class.absl::optional_internal::optional_data_dtor_base.15" = type { i8, %union.anon.16 }
%union.anon.16 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr.17 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted", i64, %"class.WTF::Vector", %"class.WTF::Vector.18" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.WTF::Vector.18" = type { %"class.WTF::VectorBuffer.19" }
%"class.WTF::VectorBuffer.19" = type { %"class.WTF::VectorBufferBase.20" }
%"class.WTF::VectorBufferBase.20" = type { %"class.std::__1::unique_ptr.21"*, i32, i32 }
%"class.std::__1::unique_ptr.21" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.WTF::String" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.WTF::StringImpl"* }
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type { %"class.blink::HeapMojoRemote", i32, i8, [3 x i8], %"class.WTF::HashSet" }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.28" }
%"class.blink::Member.28" = type { %"class.blink::MemberBase.29" }
%"class.blink::MemberBase.29" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ClipboardHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ClipboardHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.38 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.32, i32, i32 }
%class.sk_sp.32 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.33" }
%"struct.std::__1::atomic.33" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl.36" }
%"struct.std::__1::__cxx_atomic_impl.36" = type { %"struct.std::__1::__cxx_atomic_base_impl.37" }
%"struct.std::__1::__cxx_atomic_base_impl.37" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.38 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"struct.SkPngEncoder::Options" = type { i32, i32, %class.sk_sp.39 }
%class.sk_sp.39 = type { %class.SkDataTable* }
%class.SkDataTable = type { %class.SkRefCnt.base, i32, i64, %union.anon.40, void (i8*)*, i8* }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%union.anon.40 = type { %"struct.SkDataTable::Dir"* }
%"struct.SkDataTable::Dir" = type { i8*, i64 }
%"class.WTF::Vector.41" = type { %"class.WTF::VectorBuffer.42" }
%"class.WTF::VectorBuffer.42" = type { %"class.WTF::VectorBufferBase.43" }
%"class.WTF::VectorBufferBase.43" = type { i8*, i32, i32 }
%"class.blink::BlobData" = type { %"class.WTF::String", i32, %"class.WTF::Vector.49", i64, %"class.blink::BlobBytesProvider"* }
%"class.WTF::Vector.49" = type { %"class.WTF::VectorBuffer.50" }
%"class.WTF::VectorBuffer.50" = type { %"class.WTF::VectorBufferBase.51" }
%"class.WTF::VectorBufferBase.51" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.mojo::StructPtr" = type opaque
%"class.blink::BlobBytesProvider" = type opaque
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.mojo::PendingRemote.57" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.229" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.58, %"class.std::__1::unique_ptr.178", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.60, i32 }>
%class.scoped_refptr.58 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.60, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.145", %"class.absl::optional.150", %"class.absl::optional.105", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.169", i8, [7 x i8], %class.scoped_refptr.60, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.59" }>
%"class.base::RefCountedThreadSafe.59" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.64 }
%union.anon.64 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.72", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.78 }
%class.scoped_refptr.78 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.79", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.79" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.33" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.60, %"class.std::__1::unique_ptr.82", %"class.absl::optional.91", %"struct.std::__1::atomic.101", i8, i8, i8, i8, i32, i32, %"class.absl::optional.105", %"class.std::__1::unique_ptr.110", i8, i64, %class.scoped_refptr.141, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.144" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.80 }
%class.scoped_refptr.80 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.81", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.81" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.60, i8, %"class.mojo::ScopedHandleBase.85", %class.scoped_refptr.86, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.87" }
%"class.mojo::ScopedHandleBase.85" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.86 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.87" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.91" = type { %"class.absl::optional_internal::optional_data.92" }
%"class.absl::optional_internal::optional_data.92" = type { %"class.absl::optional_internal::optional_data_base.93" }
%"class.absl::optional_internal::optional_data_base.93" = type { %"class.absl::optional_internal::optional_data_dtor_base.94" }
%"class.absl::optional_internal::optional_data_dtor_base.94" = type { i8, %union.anon.95 }
%union.anon.95 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.96", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.96" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.113", i8, i64, %class.scoped_refptr.114, %class.scoped_refptr.136 }
%"class.base::RepeatingCallback.113" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.114 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.115", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.125", i8, [7 x i8] }>
%"class.base::RefCounted.115" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.116 }
%class.scoped_refptr.116 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.117", %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"class.std::__1::map.125" = type { %"class.std::__1::__tree.126" }
%"class.std::__1::__tree.126" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.127", %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%class.scoped_refptr.136 = type { %"class.base::RefCountedData.137"* }
%"class.base::RefCountedData.137" = type opaque
%class.scoped_refptr.141 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.142 }
%class.scoped_refptr.142 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.235", [4 x i8], %"class.base::RepeatingCallback.181", %class.scoped_refptr.60, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.2", [4 x i8] }>
%"class.base::RefCountedThreadSafe.235" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.181" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.143 }
%class.scoped_refptr.143 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.144" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.145" = type { %"class.absl::optional_internal::optional_data.146" }
%"class.absl::optional_internal::optional_data.146" = type { %"class.absl::optional_internal::optional_data_base.147" }
%"class.absl::optional_internal::optional_data_base.147" = type { %"class.absl::optional_internal::optional_data_dtor_base.148" }
%"class.absl::optional_internal::optional_data_dtor_base.148" = type { i8, %union.anon.149 }
%union.anon.149 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.150" = type { %"class.absl::optional_internal::optional_data.151" }
%"class.absl::optional_internal::optional_data.151" = type { %"class.absl::optional_internal::optional_data_base.152" }
%"class.absl::optional_internal::optional_data_base.152" = type { %"class.absl::optional_internal::optional_data_dtor_base.153" }
%"class.absl::optional_internal::optional_data_dtor_base.153" = type { i8, [7 x i8], %union.anon.154 }
%union.anon.154 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.105" = type { %"class.absl::optional_internal::optional_data.106" }
%"class.absl::optional_internal::optional_data.106" = type { %"class.absl::optional_internal::optional_data_base.107" }
%"class.absl::optional_internal::optional_data_base.107" = type { %"class.absl::optional_internal::optional_data_dtor_base.108" }
%"class.absl::optional_internal::optional_data_dtor_base.108" = type { i8, %union.anon.109 }
%union.anon.109 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.155 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.155 = type { %"class.std::__1::map.157" }
%"class.std::__1::map.157" = type { %"class.std::__1::__tree.158" }
%"class.std::__1::__tree.158" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.159", %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.168"*, i64 }
%"class.std::__1::unique_ptr.168" = type opaque
%"class.std::__1::map.169" = type { %"class.std::__1::__tree.170" }
%"class.std::__1::__tree.170" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.171", %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.181", %"class.base::OnceCallback.182", %"class.absl::optional.183", %"class.absl::optional.188", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.196", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.204", %"class.std::__1::map.215", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.224", i8, %class.scoped_refptr.60, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.225" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.182" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.183" = type { %"class.absl::optional_internal::optional_data.184" }
%"class.absl::optional_internal::optional_data.184" = type { %"class.absl::optional_internal::optional_data_base.185" }
%"class.absl::optional_internal::optional_data_base.185" = type { %"class.absl::optional_internal::optional_data_dtor_base.186" }
%"class.absl::optional_internal::optional_data_dtor_base.186" = type { i8, %union.anon.187 }
%union.anon.187 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.188" = type { %"class.absl::optional_internal::optional_data.189" }
%"class.absl::optional_internal::optional_data.189" = type { %"class.absl::optional_internal::optional_data_base.190" }
%"class.absl::optional_internal::optional_data_base.190" = type { %"class.absl::optional_internal::optional_data_dtor_base.191" }
%"class.absl::optional_internal::optional_data_dtor_base.191" = type { i8, %union.anon.192 }
%union.anon.192 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.60, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.194" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.194" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.195 }
%class.scoped_refptr.195 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.199", %class.scoped_refptr.200 }
%"class.base::RepeatingCallback.199" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.200 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.59", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.204" = type { %"class.std::__1::__tree.205" }
%"class.std::__1::__tree.205" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.206", %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"class.std::__1::map.215" = type { %"class.std::__1::__tree.216" }
%"class.std::__1::__tree.216" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.217", %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"class.base::OnceCallback.224" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.225" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.60 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.61" }>
%"class.base::RefCountedThreadSafe.61" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"* }
%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy" = type { %"class.blink::mojom::blink::FileSystemAccessDataTransferToken", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::FileSystemAccessDataTransferToken" = type { i32 (...)** }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.mojo::internal::InterfacePtrStateBase" = type <{ %class.scoped_refptr.58, %"class.std::__1::unique_ptr.178", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.60, i32, [4 x i8] }>
%struct.MojoCreateMessagePipeOptions = type { i32, i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.mojo::InterfacePtrInfo" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.61", [4 x i8] }>

$_ZN4mojo6RemoteIN5blink5mojom5blink33FileSystemAccessDataTransferTokenEE6UnbindEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14DataObjectItemEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_14DataObjectItemEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14DataObjectItemEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14DataObjectItemEE7GetNameEPKv = comdat any

$_ZN5blink14DataObjectItemD2Ev = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14DataObjectItemEE4CallIJNS1_8ItemKindERA_KcEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_4FileEE4CallIJRA10_KcN4base4TimeE13scoped_refptrINS_14BlobDataHandleEEEEEPS1_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN4mojo6RemoteIN5blink5mojom5blink33FileSystemAccessDataTransferTokenEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN4mojo8internal17InterfacePtrStateIN5blink5mojom5blink33FileSystemAccessDataTransferTokenEE13PassInterfaceEv = comdat any

$_ZN5blink10TraceTraitINS_4FileEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_15SystemClipboardEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_14DataObjectItemEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14DataObjectItemEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink20kMimeTypeTextURIListE = external constant [0 x i8], align 1
@_ZN5blink17kMimeTypeTextHTMLE = external constant [0 x i8], align 1
@_ZN5blink17kMimeTypeImagePngE = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [10 x i8] c"image.png\00", align 1
@_ZN5blink18kMimeTypeTextPlainE = external constant [0 x i8], align 1
@_ZN5blink16kMimeTypeTextRTFE = external constant [0 x i8], align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14DataObjectItemEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::DataObjectItem]\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.2 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_14DataObjectItemEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14DataObjectItemEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14DataObjectItemEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14DataObjectItemEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14DataObjectItemEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.3 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink5mojom5blink33FileSystemAccessDataTransferToken5Name_E = external constant [0 x i8], align 1
@_ZTVN5blink5mojom5blink50FileSystemAccessDataTransferTokenResponseValidatorE = external unnamed_addr constant { [6 x i8*] }, align 8
@.str.4 = private unnamed_addr constant [40 x i8] c"../../mojo/public/cpp/bindings/remote.h\00", align 1
@.str.5 = private unnamed_addr constant [41 x i8] c"!internal_state_.has_pending_callbacks()\00", align 1

@_ZN5blink14DataObjectItemC1ENS0_8ItemKindERKN3WTF6StringE = hidden unnamed_addr alias void (%"class.blink::DataObjectItem"*, i32, %"class.WTF::String"*), void (%"class.blink::DataObjectItem"*, i32, %"class.WTF::String"*)* @_ZN5blink14DataObjectItemC2ENS0_8ItemKindERKN3WTF6StringE
@_ZN5blink14DataObjectItemC1ENS0_8ItemKindERKN3WTF6StringEmPNS_15SystemClipboardE = hidden unnamed_addr alias void (%"class.blink::DataObjectItem"*, i32, %"class.WTF::String"*, i64, %"class.blink::SystemClipboard"*), void (%"class.blink::DataObjectItem"*, i32, %"class.WTF::String"*, i64, %"class.blink::SystemClipboard"*)* @_ZN5blink14DataObjectItemC2ENS0_8ItemKindERKN3WTF6StringEmPNS_15SystemClipboardE

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DataObjectItem"* @_ZN5blink14DataObjectItem16CreateFromStringERKN3WTF6StringES4_(%"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14DataObjectItemEEEPhm(i64 200) #12
  %4 = bitcast i8* %3 to %"class.blink::DataObjectItem"*
  %5 = bitcast i8* %3 to %"class.base::RefCountedData"**
  store %"class.base::RefCountedData"* null, %"class.base::RefCountedData"** %5, align 8
  %6 = getelementptr inbounds i8, i8* %3, i64 8
  %7 = bitcast i8* %6 to i32*
  store i32 1, i32* %7, align 8
  %8 = getelementptr inbounds i8, i8* %3, i64 12
  %9 = bitcast i8* %8 to i32*
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = getelementptr inbounds i8, i8* %3, i64 16
  %13 = bitcast i8* %12 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %13, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #12
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !2

29:                                               ; preds = %20
  tail call void @llvm.trap() #12
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %2, %15, %30
  %33 = getelementptr inbounds i8, i8* %3, i64 24
  %34 = getelementptr inbounds i8, i8* %3, i64 64
  %35 = bitcast i8* %34 to %"class.blink::KURL"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 40, i1 false) #12
  tail call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %35) #12
  %36 = getelementptr inbounds i8, i8* %3, i64 176
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false) #12
  %37 = getelementptr inbounds i8, i8* %3, i64 -4
  %38 = bitcast i8* %37 to i16*
  %39 = load atomic i16, i16* %38 monotonic, align 2
  %40 = or i16 %39, 1
  store atomic i16 %40, i16* %38 release, align 2
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %61, label %44

44:                                               ; preds = %32
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %61

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = zext i32 %51 to i33
  %53 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %52, i33 1) #12
  %54 = extractvalue { i33, i1 } %53, 1
  %55 = extractvalue { i33, i1 } %53, 0
  %56 = icmp slt i33 %55, 0
  %57 = or i1 %54, %56
  br i1 %57, label %58, label %59, !prof !2

58:                                               ; preds = %49
  tail call void @llvm.trap() #12
  unreachable

59:                                               ; preds = %49
  %60 = trunc i33 %55 to i32
  store i32 %60, i32* %50, align 4
  br label %61

61:                                               ; preds = %59, %44, %32
  %62 = ptrtoint %"class.WTF::StringImpl"* %42 to i64
  %63 = bitcast i8* %33 to i64*
  %64 = bitcast i8* %33 to %"class.WTF::StringImpl"**
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  store i64 %62, i64* %63, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #12
  br label %80

80:                                               ; preds = %61, %76, %79
  ret %"class.blink::DataObjectItem"* %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DataObjectItem"* @_ZN5blink14DataObjectItem14CreateFromFileEPNS_4FileE(%"class.blink::File"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::File", %"class.blink::File"* %0, i64 0, i32 0, i32 3, i32 0
  %3 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %3, i64 0, i32 2
  %5 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %4) #12
  %6 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14DataObjectItemEEEPhm(i64 200) #12
  %7 = bitcast i8* %6 to %"class.blink::DataObjectItem"*
  %8 = bitcast i8* %6 to %"class.base::RefCountedData"**
  store %"class.base::RefCountedData"* null, %"class.base::RefCountedData"** %8, align 8
  %9 = getelementptr inbounds i8, i8* %6, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 1, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %6, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 1, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %6, i64 16
  %14 = bitcast i8* %13 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %14, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i33
  %25 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %24, i33 1) #12
  %26 = extractvalue { i33, i1 } %25, 1
  %27 = extractvalue { i33, i1 } %25, 0
  %28 = icmp slt i33 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %31, !prof !2

30:                                               ; preds = %21
  tail call void @llvm.trap() #12
  unreachable

31:                                               ; preds = %21
  %32 = trunc i33 %27 to i32
  store i32 %32, i32* %22, align 4
  br label %33

33:                                               ; preds = %1, %16, %31
  %34 = getelementptr inbounds i8, i8* %6, i64 24
  %35 = getelementptr inbounds i8, i8* %6, i64 64
  %36 = bitcast i8* %35 to %"class.blink::KURL"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 40, i1 false) #12
  tail call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %36) #12
  %37 = getelementptr inbounds i8, i8* %6, i64 176
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #12
  %38 = getelementptr inbounds i8, i8* %6, i64 -4
  %39 = bitcast i8* %38 to i16*
  %40 = load atomic i16, i16* %39 monotonic, align 2
  %41 = or i16 %40, 1
  store atomic i16 %41, i16* %39 release, align 2
  br i1 %15, label %55, label %42

42:                                               ; preds = %33
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #12
  br label %55

55:                                               ; preds = %33, %51, %54
  %56 = getelementptr inbounds i8, i8* %6, i64 32
  %57 = ptrtoint %"class.blink::File"* %0 to i64
  %58 = bitcast i8* %56 to i64*
  store atomic i64 %57, i64* %58 monotonic, align 8
  %59 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %64, label %61

61:                                               ; preds = %55
  %62 = bitcast %"class.blink::File"* %0 to i8*
  %63 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %62) #12
  br label %64

64:                                               ; preds = %55, %61
  ret %"class.blink::DataObjectItem"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DataObjectItem"* @_ZN5blink14DataObjectItem30CreateFromFileWithFileSystemIdEPNS_4FileERKN3WTF6StringE13scoped_refptrIN4base14RefCountedDataINS_22CrossVariantMojoRemoteINS_5mojom46FileSystemAccessDataTransferTokenInterfaceBaseEEEEEE(%"class.blink::File"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.base::RefCountedData"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::File", %"class.blink::File"* %0, i64 0, i32 0, i32 3, i32 0
  %5 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %5, i64 0, i32 2
  %7 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %6) #12
  %8 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14DataObjectItemEEEPhm(i64 200) #12
  %9 = bitcast i8* %8 to %"class.blink::DataObjectItem"*
  %10 = bitcast i8* %8 to %"class.base::RefCountedData"**
  store %"class.base::RefCountedData"* null, %"class.base::RefCountedData"** %10, align 8
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 1, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %8, i64 12
  %14 = bitcast i8* %13 to i32*
  store i32 1, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %8, i64 16
  %16 = bitcast i8* %15 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %16, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %17, label %35, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %35

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i33
  %27 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %26, i33 1) #12
  %28 = extractvalue { i33, i1 } %27, 1
  %29 = extractvalue { i33, i1 } %27, 0
  %30 = icmp slt i33 %29, 0
  %31 = or i1 %28, %30
  br i1 %31, label %32, label %33, !prof !2

32:                                               ; preds = %23
  tail call void @llvm.trap() #12
  unreachable

33:                                               ; preds = %23
  %34 = trunc i33 %29 to i32
  store i32 %34, i32* %24, align 4
  br label %35

35:                                               ; preds = %3, %18, %33
  %36 = getelementptr inbounds i8, i8* %8, i64 24
  %37 = getelementptr inbounds i8, i8* %8, i64 64
  %38 = bitcast i8* %37 to %"class.blink::KURL"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 40, i1 false) #12
  tail call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %38) #12
  %39 = getelementptr inbounds i8, i8* %8, i64 176
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false) #12
  %40 = getelementptr inbounds i8, i8* %8, i64 -4
  %41 = bitcast i8* %40 to i16*
  %42 = load atomic i16, i16* %41 monotonic, align 2
  %43 = or i16 %42, 1
  store atomic i16 %43, i16* %41 release, align 2
  br i1 %17, label %57, label %44

44:                                               ; preds = %35
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #12
  br label %57

57:                                               ; preds = %35, %53, %56
  %58 = getelementptr inbounds i8, i8* %8, i64 32
  %59 = ptrtoint %"class.blink::File"* %0 to i64
  %60 = bitcast i8* %58 to i64*
  store atomic i64 %59, i64* %60 monotonic, align 8
  %61 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = bitcast %"class.blink::File"* %0 to i8*
  %65 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %64) #12
  br label %66

66:                                               ; preds = %57, %63
  %67 = getelementptr inbounds i8, i8* %8, i64 184
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %88, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %88

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = zext i32 %78 to i33
  %80 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %79, i33 1) #12
  %81 = extractvalue { i33, i1 } %80, 1
  %82 = extractvalue { i33, i1 } %80, 0
  %83 = icmp slt i33 %82, 0
  %84 = or i1 %81, %83
  br i1 %84, label %85, label %86, !prof !2

85:                                               ; preds = %76
  tail call void @llvm.trap() #12
  unreachable

86:                                               ; preds = %76
  %87 = trunc i33 %82 to i32
  store i32 %87, i32* %77, align 4
  br label %88

88:                                               ; preds = %86, %71, %66
  %89 = ptrtoint %"class.WTF::StringImpl"* %69 to i64
  %90 = bitcast i8* %67 to i64*
  %91 = bitcast i8* %67 to %"class.WTF::StringImpl"**
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  store i64 %89, i64* %90, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %107, label %94

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %101, label %103

101:                                              ; preds = %94
  %102 = add i32 %100, -1
  store i32 %102, i32* %99, align 4
  br label %103

103:                                              ; preds = %101, %94
  %104 = phi i32 [ %102, %101 ], [ %100, %94 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #12
  br label %107

107:                                              ; preds = %88, %103, %106
  %108 = icmp eq %"class.base::RefCountedData"* %2, null
  br i1 %108, label %112, label %109

109:                                              ; preds = %107
  %110 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = atomicrmw add i32* %110, i32 1 monotonic
  br label %112

112:                                              ; preds = %107, %109
  %113 = ptrtoint %"class.base::RefCountedData"* %2 to i64
  %114 = bitcast i8* %8 to i64*
  %115 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %10, align 8
  store i64 %113, i64* %114, align 8
  %116 = icmp eq %"class.base::RefCountedData"* %115, null
  br i1 %116, label %130, label %117

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = atomicrmw sub i32* %118, i32 1 acq_rel
  %120 = icmp eq i32 %119, 1
  br i1 %120, label %121, label %130

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %115, i64 0, i32 0
  %123 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %122, i64 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %128, label %126

126:                                              ; preds = %121
  %127 = tail call i32 @MojoClose(i32 %124) #12
  br label %128

128:                                              ; preds = %126, %121
  %129 = bitcast %"class.base::RefCountedData"* %115 to i8*
  tail call void @_ZdlPv(i8* %129) #13
  br label %130

130:                                              ; preds = %112, %117, %128
  br i1 %108, label %144, label %131

131:                                              ; preds = %130
  %132 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = atomicrmw sub i32* %132, i32 1 acq_rel
  %134 = icmp eq i32 %133, 1
  br i1 %134, label %135, label %144

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %2, i64 0, i32 0
  %137 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %136, i64 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %142, label %140

140:                                              ; preds = %135
  %141 = tail call i32 @MojoClose(i32 %138) #12
  br label %142

142:                                              ; preds = %140, %135
  %143 = bitcast %"class.base::RefCountedData"* %2 to i8*
  tail call void @_ZdlPv(i8* %143) #13
  br label %144

144:                                              ; preds = %130, %131, %142
  ret %"class.blink::DataObjectItem"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DataObjectItem"* @_ZN5blink14DataObjectItem13CreateFromURLERKN3WTF6StringES4_(%"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #12
  store i32 0, i32* %3, align 4
  %5 = call %"class.blink::DataObjectItem"* @_ZN5blink25MakeGarbageCollectedTraitINS_14DataObjectItemEE4CallIJNS1_8ItemKindERA_KcEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %3, [0 x i8]* nonnull @_ZN5blink20kMimeTypeTextURIListE) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #12
  %6 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %5, i64 0, i32 4
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #12
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %15
  call void @llvm.trap() #12
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %25, %10, %2
  %28 = ptrtoint %"class.WTF::StringImpl"* %8 to i64
  %29 = bitcast %"class.WTF::String"* %6 to i64*
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  store i64 %28, i64* %29, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #12
  br label %46

46:                                               ; preds = %27, %42, %45
  %47 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %5, i64 0, i32 8
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %68, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %68

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = zext i32 %58 to i33
  %60 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #12
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !2

65:                                               ; preds = %56
  call void @llvm.trap() #12
  unreachable

66:                                               ; preds = %56
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %57, align 4
  br label %68

68:                                               ; preds = %66, %51, %46
  %69 = ptrtoint %"class.WTF::StringImpl"* %49 to i64
  %70 = bitcast %"class.WTF::String"* %47 to i64*
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %47, i64 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  store i64 %69, i64* %70, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #12
  br label %87

87:                                               ; preds = %68, %83, %86
  ret %"class.blink::DataObjectItem"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DataObjectItem"* @_ZN5blink14DataObjectItem14CreateFromHTMLERKN3WTF6StringERKNS_4KURLE(%"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #12
  store i32 0, i32* %3, align 4
  %5 = call %"class.blink::DataObjectItem"* @_ZN5blink25MakeGarbageCollectedTraitINS_14DataObjectItemEE4CallIJNS1_8ItemKindERA_KcEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %3, [0 x i8]* nonnull @_ZN5blink17kMimeTypeTextHTMLE) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #12
  %6 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %5, i64 0, i32 4
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #12
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %15
  call void @llvm.trap() #12
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %25, %10, %2
  %28 = ptrtoint %"class.WTF::StringImpl"* %8 to i64
  %29 = bitcast %"class.WTF::String"* %6 to i64*
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  store i64 %28, i64* %29, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #12
  br label %46

46:                                               ; preds = %27, %42, %45
  %47 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %5, i64 0, i32 9
  %48 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %47, %"class.blink::KURL"* dereferenceable(112) %1) #12
  ret %"class.blink::DataObjectItem"* %5
}

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DataObjectItem"* @_ZN5blink14DataObjectItem22CreateFromSharedBufferE13scoped_refptrIN3WTF12SharedBufferEERKNS_4KURLERKNS2_6StringERKNS2_12AtomicStringE(%"class.WTF::SharedBuffer"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8), %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = ptrtoint %"class.WTF::SharedBuffer"* %0 to i64
  %6 = tail call %"class.WTF::StringImpl"* @_ZN5blink16MIMETypeRegistry32GetWellKnownMIMETypeForExtensionERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %2) #12
  %7 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14DataObjectItemEEEPhm(i64 200) #12
  %8 = bitcast i8* %7 to %"class.blink::DataObjectItem"*
  %9 = bitcast i8* %7 to %"class.base::RefCountedData"**
  store %"class.base::RefCountedData"* null, %"class.base::RefCountedData"** %9, align 8
  %10 = getelementptr inbounds i8, i8* %7, i64 8
  %11 = bitcast i8* %10 to i32*
  store i32 1, i32* %11, align 8
  %12 = getelementptr inbounds i8, i8* %7, i64 12
  %13 = bitcast i8* %12 to i32*
  store i32 1, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %7, i64 16
  %15 = bitcast i8* %14 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %15, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %16, label %34, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %34

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i33
  %26 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %25, i33 1) #12
  %27 = extractvalue { i33, i1 } %26, 1
  %28 = extractvalue { i33, i1 } %26, 0
  %29 = icmp slt i33 %28, 0
  %30 = or i1 %27, %29
  br i1 %30, label %31, label %32, !prof !2

31:                                               ; preds = %22
  tail call void @llvm.trap() #12
  unreachable

32:                                               ; preds = %22
  %33 = trunc i33 %28 to i32
  store i32 %33, i32* %23, align 4
  br label %34

34:                                               ; preds = %4, %17, %32
  %35 = getelementptr inbounds i8, i8* %7, i64 24
  %36 = getelementptr inbounds i8, i8* %7, i64 64
  %37 = bitcast i8* %36 to %"class.blink::KURL"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 40, i1 false) #12
  tail call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %37) #12
  %38 = getelementptr inbounds i8, i8* %7, i64 176
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #12
  %39 = getelementptr inbounds i8, i8* %7, i64 -4
  %40 = bitcast i8* %39 to i16*
  %41 = load atomic i16, i16* %40 monotonic, align 2
  %42 = or i16 %41, 1
  store atomic i16 %42, i16* %40 release, align 2
  br i1 %16, label %56, label %43

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #12
  br label %56

56:                                               ; preds = %34, %52, %55
  %57 = getelementptr inbounds i8, i8* %7, i64 40
  %58 = bitcast i8* %57 to i64*
  %59 = bitcast i8* %57 to %"class.WTF::SharedBuffer"**
  %60 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %59, align 8
  store i64 %5, i64* %58, align 8
  %61 = icmp eq %"class.WTF::SharedBuffer"* %60, null
  br i1 %61, label %69, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %60, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %63) #12
  %64 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %60, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %62
  tail call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %60) #12
  %68 = bitcast %"class.WTF::SharedBuffer"* %60 to i8*
  tail call void @free(i8* %68) #12
  br label %69

69:                                               ; preds = %56, %62, %67
  %70 = getelementptr inbounds i8, i8* %7, i64 48
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %91, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %91

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i33
  %83 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %82, i33 1) #12
  %84 = extractvalue { i33, i1 } %83, 1
  %85 = extractvalue { i33, i1 } %83, 0
  %86 = icmp slt i33 %85, 0
  %87 = or i1 %84, %86
  br i1 %87, label %88, label %89, !prof !2

88:                                               ; preds = %79
  tail call void @llvm.trap() #12
  unreachable

89:                                               ; preds = %79
  %90 = trunc i33 %85 to i32
  store i32 %90, i32* %80, align 4
  br label %91

91:                                               ; preds = %89, %74, %69
  %92 = ptrtoint %"class.WTF::StringImpl"* %72 to i64
  %93 = bitcast i8* %70 to i64*
  %94 = bitcast i8* %70 to %"class.WTF::StringImpl"**
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  store i64 %92, i64* %93, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %91
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #12
  br label %110

110:                                              ; preds = %91, %106, %109
  %111 = getelementptr inbounds i8, i8* %7, i64 56
  %112 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %132, label %115

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %132

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = zext i32 %122 to i33
  %124 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %123, i33 1) #12
  %125 = extractvalue { i33, i1 } %124, 1
  %126 = extractvalue { i33, i1 } %124, 0
  %127 = icmp slt i33 %126, 0
  %128 = or i1 %125, %127
  br i1 %128, label %129, label %130, !prof !2

129:                                              ; preds = %120
  tail call void @llvm.trap() #12
  unreachable

130:                                              ; preds = %120
  %131 = trunc i33 %126 to i32
  store i32 %131, i32* %121, align 4
  br label %132

132:                                              ; preds = %130, %115, %110
  %133 = ptrtoint %"class.WTF::StringImpl"* %113 to i64
  %134 = bitcast i8* %111 to i64*
  %135 = bitcast i8* %111 to %"class.WTF::StringImpl"**
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %135, align 8
  store i64 %133, i64* %134, align 8
  %137 = icmp eq %"class.WTF::StringImpl"* %136, null
  br i1 %137, label %151, label %138

138:                                              ; preds = %132
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load atomic i32, i32* %139 monotonic, align 4
  %141 = and i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 0
  %144 = load i32, i32* %143, align 4
  br i1 %142, label %145, label %147

145:                                              ; preds = %138
  %146 = add i32 %144, -1
  store i32 %146, i32* %143, align 4
  br label %147

147:                                              ; preds = %145, %138
  %148 = phi i32 [ %146, %145 ], [ %144, %138 ]
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %147
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %136) #12
  br label %151

151:                                              ; preds = %150, %147, %132
  %152 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %37, %"class.blink::KURL"* dereferenceable(112) %1) #12
  ret %"class.blink::DataObjectItem"* %8
}

declare %"class.WTF::StringImpl"* @_ZN5blink16MIMETypeRegistry32GetWellKnownMIMETypeForExtensionERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DataObjectItem"* @_ZN5blink14DataObjectItem19CreateFromClipboardEPNS_15SystemClipboardERKN3WTF6StringEm(%"class.blink::SystemClipboard"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = ptrtoint %"class.blink::SystemClipboard"* %0 to i64
  %7 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %12, align 8
  %13 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %14 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %13, i64* %14, align 8
  br label %22

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %16, align 8
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 1
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %21 = bitcast i8** %20 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %21, align 8
  br label %22

22:                                               ; preds = %15, %11
  %23 = phi i32 [ %18, %15 ], [ 0, %11 ]
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %23, i32* %24, align 8
  %25 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #12
  %26 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeImagePngE, i64 0, i64 0)) #14
  %27 = icmp ult i64 %26, 4294967296
  br i1 %27, label %29, label %28, !prof !3

28:                                               ; preds = %22
  tail call void @llvm.trap() #12
  unreachable

29:                                               ; preds = %22
  %30 = trunc i64 %26 to i32
  %31 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %32 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeImagePngE, i64 0, i64 0), i8** %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %30, i32* %34, align 8
  %35 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #12
  %36 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14DataObjectItemEEEPhm(i64 200) #12
  %37 = bitcast i8* %36 to %"class.blink::DataObjectItem"*
  %38 = bitcast i8* %36 to %"class.base::RefCountedData"**
  store %"class.base::RefCountedData"* null, %"class.base::RefCountedData"** %38, align 8
  %39 = getelementptr inbounds i8, i8* %36, i64 8
  %40 = bitcast i8* %39 to i32*
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds i8, i8* %36, i64 12
  %42 = bitcast i8* %41 to i32*
  br i1 %35, label %43, label %65

43:                                               ; preds = %29
  store i32 1, i32* %42, align 4
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %45 = getelementptr inbounds i8, i8* %36, i64 16
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %46, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %47, label %87, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %87

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i33
  %57 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %56, i33 1) #12
  %58 = extractvalue { i33, i1 } %57, 1
  %59 = extractvalue { i33, i1 } %57, 0
  %60 = icmp slt i33 %59, 0
  %61 = or i1 %58, %60
  br i1 %61, label %62, label %63, !prof !2

62:                                               ; preds = %53
  call void @llvm.trap() #12
  unreachable

63:                                               ; preds = %53
  %64 = trunc i33 %59 to i32
  store i32 %64, i32* %54, align 4
  br label %87

65:                                               ; preds = %29
  store i32 0, i32* %42, align 4
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %67 = getelementptr inbounds i8, i8* %36, i64 16
  %68 = bitcast i8* %67 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %66, %"class.WTF::StringImpl"** %68, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %69, label %87, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %87

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i33
  %79 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %78, i33 1) #12
  %80 = extractvalue { i33, i1 } %79, 1
  %81 = extractvalue { i33, i1 } %79, 0
  %82 = icmp slt i33 %81, 0
  %83 = or i1 %80, %82
  br i1 %83, label %84, label %85, !prof !2

84:                                               ; preds = %75
  call void @llvm.trap() #12
  unreachable

85:                                               ; preds = %75
  %86 = trunc i33 %81 to i32
  store i32 %86, i32* %76, align 4
  br label %87

87:                                               ; preds = %85, %70, %65, %63, %48, %43
  %88 = getelementptr inbounds i8, i8* %36, i64 24
  %89 = getelementptr inbounds i8, i8* %36, i64 64
  %90 = bitcast i8* %89 to %"class.blink::KURL"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 40, i1 false) #12
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %90) #12
  %91 = getelementptr inbounds i8, i8* %36, i64 176
  %92 = bitcast i8* %91 to i64*
  store i64 %2, i64* %92, align 8
  %93 = getelementptr inbounds i8, i8* %36, i64 184
  %94 = bitcast i8* %93 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %94, align 8
  %95 = getelementptr inbounds i8, i8* %36, i64 192
  %96 = bitcast i8* %95 to i64*
  store i64 %6, i64* %96, align 8
  %97 = getelementptr inbounds i8, i8* %36, i64 -4
  %98 = bitcast i8* %97 to i16*
  %99 = load atomic i16, i16* %98 monotonic, align 2
  %100 = or i16 %99, 1
  store atomic i16 %100, i16* %98 release, align 2
  ret %"class.blink::DataObjectItem"* %37
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14DataObjectItemC2ENS0_8ItemKindERKN3WTF6StringE(%"class.blink::DataObjectItem"*, i32, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 0, i32 0
  store %"class.base::RefCountedData"* null, %"class.base::RefCountedData"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 1
  store i32 1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 2
  store i32 %1, i32* %6, align 4
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #12
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #12
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %3, %11, %26
  %29 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 4, i32 0, i32 0
  %30 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 9
  %31 = bitcast %"class.WTF::StringImpl"** %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 40, i1 false)
  tail call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %30) #12
  %32 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 10
  %33 = bitcast i64* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false)
  ret void
}

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14DataObjectItemC2ENS0_8ItemKindERKN3WTF6StringEmPNS_15SystemClipboardE(%"class.blink::DataObjectItem"*, i32, %"class.WTF::String"* nocapture readonly dereferenceable(8), i64, %"class.blink::SystemClipboard"*) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 0, i32 0
  store %"class.base::RefCountedData"* null, %"class.base::RefCountedData"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 1
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 2
  store i32 %1, i32* %8, align 4
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #12
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !2

27:                                               ; preds = %18
  tail call void @llvm.trap() #12
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %5, %13, %28
  %31 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 4, i32 0, i32 0
  %32 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 9
  %33 = bitcast %"class.WTF::StringImpl"** %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 40, i1 false)
  tail call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %32) #12
  %34 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 10
  store i64 %3, i64* %34, align 8
  %35 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 11, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %35, align 8
  %36 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 12, i32 0, i32 0
  store %"class.blink::SystemClipboard"* %4, %"class.blink::SystemClipboard"** %36, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::File"* @_ZNK5blink14DataObjectItem9GetAsFileEv(%"class.blink::DataObjectItem"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %class.SkBitmap, align 8
  %5 = alloca %class.SkPixmap, align 8
  %6 = alloca %"struct.SkPngEncoder::Options", align 8
  %7 = alloca %"class.WTF::Vector.41", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %class.scoped_refptr.9, align 8
  %10 = alloca %"class.base::Time", align 8
  %11 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %175

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %21

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 5, i32 0, i32 0
  %20 = load %"class.blink::File"*, %"class.blink::File"** %19, align 8
  ret %"class.blink::File"* %20

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 3, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %42, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %47

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i33
  %34 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %33, i33 1) #12
  %35 = extractvalue { i33, i1 } %34, 1
  %36 = extractvalue { i33, i1 } %34, 0
  %37 = icmp slt i33 %36, 0
  %38 = or i1 %35, %37
  br i1 %38, label %39, label %40, !prof !2

39:                                               ; preds = %30
  tail call void @llvm.trap() #12
  unreachable

40:                                               ; preds = %30
  %41 = trunc i33 %36 to i32
  store i32 %41, i32* %31, align 4
  br label %47

42:                                               ; preds = %21
  %43 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #12
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %44, align 8
  %45 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %46 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %45, i64* %46, align 8
  br label %55

47:                                               ; preds = %25, %40
  %48 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #12
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %49, align 8
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 1
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %54 = bitcast i8** %53 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %52, %"class.WTF::StringImpl"** %54, align 8
  br label %55

55:                                               ; preds = %47, %42
  %56 = phi i8* [ %48, %47 ], [ %43, %42 ]
  %57 = phi i32 [ %51, %47 ], [ 0, %42 ]
  %58 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %57, i32* %58, align 8
  %59 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #12
  %60 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeImagePngE, i64 0, i64 0)) #14
  %61 = icmp ult i64 %60, 4294967296
  br i1 %61, label %63, label %62, !prof !3

62:                                               ; preds = %55
  tail call void @llvm.trap() #12
  unreachable

63:                                               ; preds = %55
  %64 = trunc i64 %60 to i32
  %65 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %66 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeImagePngE, i64 0, i64 0), i8** %67, align 8
  %68 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %64, i32* %68, align 8
  %69 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #12
  br i1 %24, label %83, label %70

70:                                               ; preds = %63
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #12
  br label %83

83:                                               ; preds = %63, %79, %82
  br i1 %69, label %84, label %175

84:                                               ; preds = %83
  %85 = bitcast %class.SkBitmap* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %85) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 -86, i64 56, i1 false)
  %86 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 12, i32 0, i32 0
  %87 = load %"class.blink::SystemClipboard"*, %"class.blink::SystemClipboard"** %86, align 8
  call void @_ZN5blink15SystemClipboard9ReadImageENS_5mojom15ClipboardBufferE(%class.SkBitmap* nonnull sret %4, %"class.blink::SystemClipboard"* %87, i32 0) #12
  %88 = bitcast %class.SkPixmap* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %88) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %88, i8 0, i64 40, i1 false) #12
  %89 = call zeroext i1 @_ZNK8SkBitmap10peekPixelsEP8SkPixmap(%class.SkBitmap* nonnull %4, %class.SkPixmap* nonnull %5) #12
  %90 = bitcast %"struct.SkPngEncoder::Options"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %90) #12
  %91 = getelementptr inbounds %"struct.SkPngEncoder::Options", %"struct.SkPngEncoder::Options"* %6, i64 0, i32 0
  %92 = getelementptr inbounds %"struct.SkPngEncoder::Options", %"struct.SkPngEncoder::Options"* %6, i64 0, i32 1
  %93 = getelementptr inbounds %"struct.SkPngEncoder::Options", %"struct.SkPngEncoder::Options"* %6, i64 0, i32 2, i32 0
  store %class.SkDataTable* null, %class.SkDataTable** %93, align 8
  store i32 1, i32* %92, align 4
  store i32 8, i32* %91, align 8
  %94 = bitcast %"class.WTF::Vector.41"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94) #12
  %95 = getelementptr inbounds %"class.WTF::Vector.41", %"class.WTF::Vector.41"* %7, i64 0, i32 0, i32 0, i32 0
  %96 = getelementptr inbounds %"class.WTF::Vector.41", %"class.WTF::Vector.41"* %7, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %94, i8 0, i64 16, i1 false) #12
  %97 = call zeroext i1 @_ZN5blink12ImageEncoder6EncodeEPN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEERK8SkPixmapRKN12SkPngEncoder7OptionsE(%"class.WTF::Vector.41"* nonnull %7, %class.SkPixmap* nonnull dereferenceable(40) %5, %"struct.SkPngEncoder::Options"* nonnull dereferenceable(16) %6) #12
  br i1 %97, label %98, label %142

98:                                               ; preds = %84
  %99 = call noalias i8* @malloc(i64 48) #12
  %100 = bitcast i8* %99 to %"class.blink::BlobData"*
  call void @_ZN5blink8BlobDataC1ENS0_21FileCompositionStatusE(%"class.blink::BlobData"* %100, i32 1) #12
  %101 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #12
  %102 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeImagePngE, i64 0, i64 0)) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeImagePngE, i64 0, i64 0), i64 %102) #12
  call void @_ZN5blink8BlobData14SetContentTypeERKN3WTF6StringE(%"class.blink::BlobData"* %100, %"class.WTF::String"* nonnull dereferenceable(8) %8) #12
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %98
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #12
  br label %119

119:                                              ; preds = %98, %115, %118
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #12
  %120 = load i8*, i8** %95, align 8
  %121 = load i32, i32* %96, align 4
  %122 = zext i32 %121 to i64
  call void @_ZN5blink8BlobData11AppendBytesEPKvm(%"class.blink::BlobData"* %100, i8* %120, i64 %122) #12
  %123 = call i64 @_ZNK5blink8BlobData6lengthEv(%"class.blink::BlobData"* %100) #12
  %124 = bitcast %class.scoped_refptr.9* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124) #12
  %125 = getelementptr inbounds %class.scoped_refptr.9, %class.scoped_refptr.9* %9, i64 0, i32 0
  %126 = call noalias i8* @malloc(i64 88) #12
  %127 = bitcast i8* %126 to %"class.blink::BlobDataHandle"*
  call void @_ZN5blink14BlobDataHandleC1ENSt3__110unique_ptrINS_8BlobDataENS1_14default_deleteIS3_EEEEm(%"class.blink::BlobDataHandle"* %127, %"class.blink::BlobData"* %100, i64 %123) #12
  %128 = bitcast %class.scoped_refptr.9* %9 to i8**
  store i8* %126, i8** %128, align 8
  %129 = bitcast %"class.base::Time"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129) #12
  %130 = call i64 @_ZN4base4Time3NowEv() #12
  %131 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %10, i64 0, i32 0, i32 0
  store i64 %130, i64* %131, align 8
  %132 = call %"class.blink::File"* @_ZN5blink25MakeGarbageCollectedTraitINS_4FileEE4CallIJRA10_KcN4base4TimeE13scoped_refptrINS_14BlobDataHandleEEEEEPS1_DpOT_([10 x i8]* nonnull dereferenceable(10) @.str, %"class.base::Time"* nonnull dereferenceable(8) %10, %class.scoped_refptr.9* nonnull dereferenceable(8) %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #12
  %133 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %125, align 8
  %134 = icmp eq %"class.blink::BlobDataHandle"* %133, null
  br i1 %134, label %141, label %135

135:                                              ; preds = %119
  %136 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %133, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = atomicrmw sub i32* %136, i32 1 acq_rel
  %138 = icmp eq i32 %137, 1
  br i1 %138, label %139, label %141

139:                                              ; preds = %135
  call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %133) #12
  %140 = bitcast %"class.blink::BlobDataHandle"* %133 to i8*
  call void @free(i8* %140) #12
  br label %141

141:                                              ; preds = %139, %135, %119
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124) #12
  br label %142

142:                                              ; preds = %84, %141
  %143 = phi %"class.blink::File"* [ %132, %141 ], [ null, %84 ]
  %144 = load i8*, i8** %95, align 8
  %145 = icmp eq i8* %144, null
  br i1 %145, label %151, label %146, !prof !3

146:                                              ; preds = %142
  %147 = load i32, i32* %96, align 4
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %150, label %149, !prof !2

149:                                              ; preds = %146
  store i32 0, i32* %96, align 4
  br label %150

150:                                              ; preds = %149, %146
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %144) #12
  store i8* null, i8** %95, align 8
  br label %151

151:                                              ; preds = %142, %150
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #12
  %152 = load %class.SkDataTable*, %class.SkDataTable** %93, align 8
  %153 = icmp eq %class.SkDataTable* %152, null
  br i1 %153, label %164, label %154

154:                                              ; preds = %151
  %155 = getelementptr inbounds %class.SkDataTable, %class.SkDataTable* %152, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = atomicrmw add i32* %155, i32 -1 acq_rel
  %157 = icmp eq i32 %156, 1
  br i1 %157, label %158, label %164

158:                                              ; preds = %154
  %159 = bitcast %class.SkDataTable* %152 to %class.SkRefCntBase*
  %160 = bitcast %class.SkDataTable* %152 to void (%class.SkRefCntBase*)***
  %161 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %160, align 8
  %162 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %161, i64 2
  %163 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %162, align 8
  call void %163(%class.SkRefCntBase* nonnull %159) #12
  br label %164

164:                                              ; preds = %151, %154, %158
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %90) #12
  %165 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %166 = load %class.SkColorSpace*, %class.SkColorSpace** %165, align 8
  %167 = icmp eq %class.SkColorSpace* %166, null
  br i1 %167, label %174, label %168

168:                                              ; preds = %164
  %169 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %166, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = atomicrmw add i32* %169, i32 -1 acq_rel
  %171 = icmp eq i32 %170, 1
  br i1 %171, label %172, label %174

172:                                              ; preds = %168
  %173 = bitcast %class.SkColorSpace* %166 to i8*
  call void @_ZdlPv(i8* %173) #13
  br label %174

174:                                              ; preds = %164, %168, %172
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %88) #12
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %85) #12
  br label %175

175:                                              ; preds = %83, %1, %174
  %176 = phi %"class.blink::File"* [ %143, %174 ], [ null, %1 ], [ null, %83 ]
  ret %"class.blink::File"* %176
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink15SystemClipboard9ReadImageENS_5mojom15ClipboardBufferE(%class.SkBitmap* sret, %"class.blink::SystemClipboard"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK8SkBitmap10peekPixelsEP8SkPixmap(%class.SkBitmap*, %class.SkPixmap*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink12ImageEncoder6EncodeEPN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEERK8SkPixmapRKN12SkPngEncoder7OptionsE(%"class.WTF::Vector.41"*, %class.SkPixmap* dereferenceable(40), %"struct.SkPngEncoder::Options"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink8BlobData14SetContentTypeERKN3WTF6StringE(%"class.blink::BlobData"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink8BlobData11AppendBytesEPKvm(%"class.blink::BlobData"*, i8*, i64) local_unnamed_addr #2

declare i64 @_ZNK5blink8BlobData6lengthEv(%"class.blink::BlobData"*) local_unnamed_addr #2

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink14DataObjectItem11GetAsStringEv(%"class.blink::DataObjectItem"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.blink::KURL", align 8
  %9 = alloca i32, align 4
  %10 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %35

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 4, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %17 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %17, label %185, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %185

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i33
  %27 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %26, i33 1) #12
  %28 = extractvalue { i33, i1 } %27, 1
  %29 = extractvalue { i33, i1 } %27, 0
  %30 = icmp slt i33 %29, 0
  %31 = or i1 %28, %30
  br i1 %31, label %32, label %33, !prof !2

32:                                               ; preds = %23
  tail call void @llvm.trap() #12
  unreachable

33:                                               ; preds = %23
  %34 = trunc i33 %29 to i32
  store i32 %34, i32* %24, align 4
  br label %185

35:                                               ; preds = %1
  %36 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 3
  %37 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #12
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %41, label %45

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %42, align 8
  %43 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %44 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %43, i64* %44, align 8
  br label %52

45:                                               ; preds = %35
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %46, align 8
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 1
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %51 = bitcast i8** %50 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %51, align 8
  br label %52

52:                                               ; preds = %45, %41
  %53 = phi i32 [ %48, %45 ], [ 0, %41 ]
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %53, i32* %54, align 8
  %55 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #12
  %56 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink18kMimeTypeTextPlainE, i64 0, i64 0)) #14
  %57 = icmp ult i64 %56, 4294967296
  br i1 %57, label %59, label %58, !prof !3

58:                                               ; preds = %52
  tail call void @llvm.trap() #12
  unreachable

59:                                               ; preds = %52
  %60 = trunc i64 %56 to i32
  %61 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %62 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink18kMimeTypeTextPlainE, i64 0, i64 0), i8** %63, align 8
  %64 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %60, i32* %64, align 8
  %65 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #12
  br i1 %65, label %66, label %70

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 12, i32 0, i32 0
  %68 = load %"class.blink::SystemClipboard"*, %"class.blink::SystemClipboard"** %67, align 8
  %69 = call %"class.WTF::StringImpl"* @_ZN5blink15SystemClipboard13ReadPlainTextEv(%"class.blink::SystemClipboard"* %68) #12
  br label %142

70:                                               ; preds = %59
  %71 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #12
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %74, label %78

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %75, align 8
  %76 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %77 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %76, i64* %77, align 8
  br label %85

78:                                               ; preds = %70
  %79 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %72, %"class.WTF::StringImpl"** %79, align 8
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 1
  %83 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %84 = bitcast i8** %83 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %82, %"class.WTF::StringImpl"** %84, align 8
  br label %85

85:                                               ; preds = %78, %74
  %86 = phi i32 [ %81, %78 ], [ 0, %74 ]
  %87 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %86, i32* %87, align 8
  %88 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #12
  %89 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink16kMimeTypeTextRTFE, i64 0, i64 0)) #14
  %90 = icmp ult i64 %89, 4294967296
  br i1 %90, label %92, label %91, !prof !3

91:                                               ; preds = %85
  call void @llvm.trap() #12
  unreachable

92:                                               ; preds = %85
  %93 = trunc i64 %89 to i32
  %94 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %95 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink16kMimeTypeTextRTFE, i64 0, i64 0), i8** %96, align 8
  %97 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %93, i32* %97, align 8
  %98 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #12
  br i1 %98, label %99, label %103

99:                                               ; preds = %92
  %100 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 12, i32 0, i32 0
  %101 = load %"class.blink::SystemClipboard"*, %"class.blink::SystemClipboard"** %100, align 8
  %102 = call %"class.WTF::StringImpl"* @_ZN5blink15SystemClipboard7ReadRTFEv(%"class.blink::SystemClipboard"* %101) #12
  br label %142

103:                                              ; preds = %92
  %104 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #12
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %107, label %111

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %108, align 8
  %109 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %110 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %109, i64* %110, align 8
  br label %118

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %112, align 8
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 1
  %116 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %117 = bitcast i8** %116 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %115, %"class.WTF::StringImpl"** %117, align 8
  br label %118

118:                                              ; preds = %111, %107
  %119 = phi i32 [ %114, %111 ], [ 0, %107 ]
  %120 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %119, i32* %120, align 8
  %121 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %121) #12
  %122 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeTextHTMLE, i64 0, i64 0)) #14
  %123 = icmp ult i64 %122, 4294967296
  br i1 %123, label %125, label %124, !prof !3

124:                                              ; preds = %118
  call void @llvm.trap() #12
  unreachable

125:                                              ; preds = %118
  %126 = trunc i64 %122 to i32
  %127 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %128 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeTextHTMLE, i64 0, i64 0), i8** %129, align 8
  %130 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %126, i32* %130, align 8
  %131 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %121) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #12
  br i1 %131, label %132, label %138

132:                                              ; preds = %125
  %133 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %133) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %133, i8 -86, i64 112, i1 false)
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %8) #12
  %134 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %134) #12
  store i32 -1431655766, i32* %9, align 4
  %135 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 12, i32 0, i32 0
  %136 = load %"class.blink::SystemClipboard"*, %"class.blink::SystemClipboard"** %135, align 8
  %137 = call %"class.WTF::StringImpl"* @_ZN5blink15SystemClipboard8ReadHTMLERNS_4KURLERjS3_(%"class.blink::SystemClipboard"* %136, %"class.blink::KURL"* nonnull dereferenceable(112) %8, i32* nonnull dereferenceable(4) %9, i32* nonnull dereferenceable(4) %9) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %134) #12
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %133) #12
  br label %142

138:                                              ; preds = %125
  %139 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 12, i32 0, i32 0
  %140 = load %"class.blink::SystemClipboard"*, %"class.blink::SystemClipboard"** %139, align 8
  %141 = call %"class.WTF::StringImpl"* @_ZN5blink15SystemClipboard14ReadCustomDataERKN3WTF6StringE(%"class.blink::SystemClipboard"* %140, %"class.WTF::String"* dereferenceable(8) %36) #12
  br label %142

142:                                              ; preds = %99, %138, %132, %66
  %143 = phi %"class.WTF::StringImpl"* [ %69, %66 ], [ %102, %99 ], [ %137, %132 ], [ %141, %138 ]
  %144 = ptrtoint %"class.WTF::StringImpl"* %143 to i64
  %145 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 12, i32 0, i32 0
  %146 = load %"class.blink::SystemClipboard"*, %"class.blink::SystemClipboard"** %145, align 8
  %147 = call i64 @_ZN5blink15SystemClipboard14SequenceNumberEv(%"class.blink::SystemClipboard"* %146) #12
  %148 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 10
  %149 = load i64, i64* %148, align 8
  %150 = icmp eq i64 %147, %149
  %151 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %150, label %152, label %170

152:                                              ; preds = %142
  br i1 %151, label %185, label %153

153:                                              ; preds = %152
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load atomic i32, i32* %154 monotonic, align 4
  %156 = and i32 %155, 2
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %171

158:                                              ; preds = %153
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  %161 = zext i32 %160 to i33
  %162 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %161, i33 1) #12
  %163 = extractvalue { i33, i1 } %162, 1
  %164 = extractvalue { i33, i1 } %162, 0
  %165 = icmp slt i33 %164, 0
  %166 = or i1 %163, %165
  br i1 %166, label %167, label %168, !prof !2

167:                                              ; preds = %158
  call void @llvm.trap() #12
  unreachable

168:                                              ; preds = %158
  %169 = trunc i33 %164 to i32
  store i32 %169, i32* %159, align 4
  br label %171

170:                                              ; preds = %142
  br i1 %151, label %185, label %171

171:                                              ; preds = %153, %168, %170
  %172 = phi i64 [ 0, %170 ], [ %144, %168 ], [ %144, %153 ]
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load atomic i32, i32* %173 monotonic, align 4
  %175 = and i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %178 = load i32, i32* %177, align 4
  br i1 %176, label %179, label %181

179:                                              ; preds = %171
  %180 = add i32 %178, -1
  store i32 %180, i32* %177, align 4
  br label %181

181:                                              ; preds = %179, %171
  %182 = phi i32 [ %180, %179 ], [ %178, %171 ]
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %185

184:                                              ; preds = %181
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %143) #12
  br label %185

185:                                              ; preds = %152, %184, %181, %170, %33, %18, %13
  %186 = phi i64 [ %16, %13 ], [ %16, %18 ], [ %16, %33 ], [ 0, %170 ], [ %172, %181 ], [ %172, %184 ], [ %144, %152 ]
  %187 = inttoptr i64 %186 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %187
}

declare %"class.WTF::StringImpl"* @_ZN5blink15SystemClipboard13ReadPlainTextEv(%"class.blink::SystemClipboard"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink15SystemClipboard7ReadRTFEv(%"class.blink::SystemClipboard"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink15SystemClipboard8ReadHTMLERNS_4KURLERjS3_(%"class.blink::SystemClipboard"*, %"class.blink::KURL"* dereferenceable(112), i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink15SystemClipboard14ReadCustomDataERKN3WTF6StringE(%"class.blink::SystemClipboard"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare i64 @_ZN5blink15SystemClipboard14SequenceNumberEv(%"class.blink::SystemClipboard"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink14DataObjectItem10IsFilenameEv(%"class.blink::DataObjectItem"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 5, i32 0, i32 0
  %7 = load %"class.blink::File"*, %"class.blink::File"** %6, align 8
  %8 = icmp ne %"class.blink::File"* %7, null
  br label %9

9:                                                ; preds = %5, %1
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink14DataObjectItem15HasFileSystemIdEv(%"class.blink::DataObjectItem"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 11, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp ne i32 %11, 0
  br label %13

13:                                               ; preds = %9, %5, %1
  %14 = phi i1 [ false, %1 ], [ false, %5 ], [ %12, %9 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink14DataObjectItem12FileSystemIdEv(%"class.blink::DataObjectItem"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 11, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #12
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !2

19:                                               ; preds = %10
  tail call void @llvm.trap() #12
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %1, %5, %20
  ret %"class.WTF::StringImpl"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink14DataObjectItem24HasFileSystemAccessEntryEv(%"class.blink::DataObjectItem"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %2, align 8
  %4 = icmp ne %"class.base::RefCountedData"* %3, null
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14DataObjectItem31CloneFileSystemAccessEntryTokenEv(%"class.mojo::PendingRemote.57"* noalias sret, %"class.blink::DataObjectItem"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::ScopedHandleBase", align 4
  %4 = alloca %"class.mojo::MessagePipeHandle", align 4
  %5 = alloca %"class.mojo::MessagePipeHandle", align 4
  %6 = alloca %"class.mojo::PendingRemote.57", align 4
  %7 = alloca %"class.mojo::PendingRemote.57", align 4
  %8 = alloca %"class.mojo::ScopedHandleBase", align 4
  %9 = alloca i64, align 8
  %10 = alloca %"class.mojo::Remote", align 8
  %11 = alloca %"class.mojo::PendingRemote.57", align 4
  %12 = alloca %"class.mojo::PendingReceiver", align 8
  %13 = alloca %"class.mojo::PendingRemote.57", align 4
  %14 = bitcast %"class.mojo::Remote"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 48, i1 false)
  %15 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %1, i64 0, i32 0, i32 0
  %16 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %15, align 8
  %17 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %16, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4, !noalias !4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %32, label %21

21:                                               ; preds = %2
  store i32 0, i32* %18, align 4, !noalias !7
  %22 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %16, i64 0, i32 1, i32 0
  %23 = load i32, i32* %22, align 4, !noalias !4
  %24 = bitcast %"class.mojo::ScopedHandleBase"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #12, !noalias !4
  %25 = bitcast i64* %9 to %"struct.mojo::internal::PendingRemoteState"*
  %26 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %8, i64 0, i32 0, i32 0, i32 0
  store i32 %19, i32* %26, align 4, !alias.scope !10, !noalias !4
  call void @_ZN4mojo8internal18PendingRemoteStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEEj(%"struct.mojo::internal::PendingRemoteState"* nonnull %25, %"class.mojo::ScopedHandleBase"* nonnull %8, i32 %23) #12
  %27 = load i32, i32* %26, align 4, !noalias !4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %21
  %30 = call i32 @MojoClose(i32 %27) #12
  br label %31

31:                                               ; preds = %29, %21
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #12, !noalias !4
  br label %34

32:                                               ; preds = %2
  store i64 0, i64* %9, align 8, !alias.scope !4
  %33 = bitcast i64* %9 to %"struct.mojo::internal::PendingRemoteState"*
  call void @_ZN4mojo8internal18PendingRemoteStateC1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %33) #12
  br label %34

34:                                               ; preds = %31, %32
  %35 = phi %"struct.mojo::internal::PendingRemoteState"* [ %25, %31 ], [ %33, %32 ]
  %36 = getelementptr inbounds %"class.mojo::PendingRemote.57", %"class.mojo::PendingRemote.57"* %11, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %36, %"struct.mojo::internal::PendingRemoteState"* nonnull dereferenceable(8) %35) #12
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %35) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  %37 = bitcast %"class.mojo::PendingRemote.57"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = getelementptr inbounds %"class.mojo::PendingRemote.57", %"class.mojo::PendingRemote.57"* %7, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %38, %"struct.mojo::internal::PendingRemoteState"* nonnull dereferenceable(8) %36) #12
  %39 = bitcast %"class.mojo::PendingRemote.57"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #12
  %40 = bitcast %"class.mojo::Remote"* %10 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %40) #12
  %41 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %10, i64 0, i32 0, i32 1
  %42 = bitcast %"class.std::__1::unique_ptr.229"* %41 to i64*
  store i64 0, i64* %42, align 8
  %43 = getelementptr inbounds %"class.mojo::PendingRemote.57", %"class.mojo::PendingRemote.57"* %6, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %43, %"struct.mojo::internal::PendingRemoteState"* nonnull dereferenceable(8) %38) #12
  call void @_ZN4mojo6RemoteIN5blink5mojom5blink33FileSystemAccessDataTransferTokenEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Remote"* nonnull %10, %"class.mojo::PendingRemote.57"* nonnull %6, %"class.base::SequencedTaskRunner"* null) #12
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %43) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #12
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %38) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %36) #12
  %44 = getelementptr inbounds %"class.mojo::PendingRemote.57", %"class.mojo::PendingRemote.57"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 -1431655766, i32* %44, align 4
  %45 = getelementptr inbounds %"class.mojo::PendingRemote.57", %"class.mojo::PendingRemote.57"* %0, i64 0, i32 0, i32 1
  store i32 -1431655766, i32* %45, align 4
  %46 = getelementptr inbounds %"class.mojo::PendingRemote.57", %"class.mojo::PendingRemote.57"* %0, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1Ev(%"struct.mojo::internal::PendingRemoteState"* %46) #12
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.229", %"class.std::__1::unique_ptr.229"* %41, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*, %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"** %47, align 8
  %49 = icmp eq %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"* %48, null
  br i1 %49, label %50, label %69

50:                                               ; preds = %34
  %51 = call i8* @_Znwm(i64 8) #13
  %52 = bitcast i8* %51 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink5mojom5blink50FileSystemAccessDataTransferTokenResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %52, align 8
  %53 = bitcast i8* %51 to %"class.mojo::MessageReceiver"*
  %54 = call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %40, i1 zeroext false, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %53, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink33FileSystemAccessDataTransferToken5Name_E, i64 0, i64 0)) #12
  br i1 %54, label %55, label %69

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %10, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %57 = bitcast %"class.mojo::InterfaceEndpointClient"** %56 to %"class.mojo::MessageReceiverWithResponder"**
  %58 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %57, align 8
  %59 = call i8* @_Znwm(i64 16) #13
  %60 = bitcast i8* %59 to %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*
  call void @_ZN5blink5mojom5blink38FileSystemAccessDataTransferTokenProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"* nonnull %60, %"class.mojo::MessageReceiverWithResponder"* %58) #12
  %61 = ptrtoint i8* %59 to i64
  %62 = load %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*, %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"** %47, align 8
  store i64 %61, i64* %42, align 8
  %63 = icmp eq %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %55
  %65 = bitcast %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"* %62 to void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)***
  %66 = load void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)**, void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)*, void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)** %66, i64 1
  %68 = load void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)*, void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)** %67, align 8
  call void %68(%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"* nonnull %62) #12
  br label %69

69:                                               ; preds = %34, %50, %55, %64
  %70 = load %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*, %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"** %47, align 8
  %71 = bitcast %"class.mojo::MessagePipeHandle"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %71) #12, !noalias !13
  %72 = getelementptr inbounds %"class.mojo::MessagePipeHandle", %"class.mojo::MessagePipeHandle"* %4, i64 0, i32 0, i32 0
  store i32 0, i32* %72, align 4, !noalias !13
  %73 = bitcast %"class.mojo::MessagePipeHandle"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %73) #12, !noalias !13
  %74 = getelementptr inbounds %"class.mojo::MessagePipeHandle", %"class.mojo::MessagePipeHandle"* %5, i64 0, i32 0, i32 0
  store i32 0, i32* %74, align 4, !noalias !13
  %75 = call i32 @MojoCreateMessagePipe(%struct.MojoCreateMessagePipeOptions* null, i32* nonnull %72, i32* nonnull %74) #12, !noalias !13
  %76 = load i32, i32* %72, align 4, !noalias !13
  %77 = load i32, i32* %74, align 4, !noalias !13
  %78 = load i32, i32* %44, align 4, !noalias !13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %73) #12, !noalias !13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %71) #12, !noalias !13
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %82, label %80

80:                                               ; preds = %69
  %81 = call i32 @MojoClose(i32 %78) #12
  br label %82

82:                                               ; preds = %80, %69
  store i32 %76, i32* %44, align 4, !noalias !13
  %83 = bitcast %"class.mojo::ScopedHandleBase"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %83) #12, !noalias !13
  %84 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %12, i64 0, i32 0
  %85 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %3, i64 0, i32 0, i32 0, i32 0
  store i32 %77, i32* %85, align 4, !alias.scope !16, !noalias !13
  call void @_ZN4mojo8internal20PendingReceiverStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEE(%"struct.mojo::internal::PendingReceiverState"* nonnull %84, %"class.mojo::ScopedHandleBase"* nonnull %3) #12
  %86 = load i32, i32* %85, align 4, !noalias !13
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %82
  %89 = call i32 @MojoClose(i32 %86) #12
  br label %90

90:                                               ; preds = %82, %88
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %83) #12, !noalias !13
  call void @_ZN5blink5mojom5blink38FileSystemAccessDataTransferTokenProxy5CloneEN4mojo15PendingReceiverINS1_33FileSystemAccessDataTransferTokenEEE(%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"* %70, %"class.mojo::PendingReceiver"* nonnull %12) #12
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %84) #12
  call void @_ZN4mojo6RemoteIN5blink5mojom5blink33FileSystemAccessDataTransferTokenEE6UnbindEv(%"class.mojo::PendingRemote.57"* nonnull sret %13, %"class.mojo::Remote"* nonnull %10)
  %91 = getelementptr inbounds %"class.mojo::PendingRemote.57", %"class.mojo::PendingRemote.57"* %13, i64 0, i32 0, i32 1
  %92 = load i32, i32* %91, align 4
  store i32 0, i32* %91, align 4, !noalias !19
  %93 = getelementptr inbounds %"class.mojo::PendingRemote.57", %"class.mojo::PendingRemote.57"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load i32, i32* %93, align 4, !noalias !22
  store i32 0, i32* %93, align 4, !noalias !22
  %95 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %15, align 8
  %96 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %95, i64 0, i32 1, i32 0
  store i32 %92, i32* %96, align 4
  %97 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %95, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %102, label %100

100:                                              ; preds = %90
  %101 = call i32 @MojoClose(i32 %98) #12
  br label %102

102:                                              ; preds = %90, %100
  store i32 %94, i32* %97, align 4
  %103 = getelementptr inbounds %"class.mojo::PendingRemote.57", %"class.mojo::PendingRemote.57"* %13, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %103) #12
  %104 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %10, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %105 = load %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*, %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"** %104, align 8
  store %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"* null, %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"** %104, align 8
  %106 = icmp eq %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"* %105, null
  br i1 %106, label %112, label %107

107:                                              ; preds = %102
  %108 = bitcast %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"* %105 to void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)***
  %109 = load void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)**, void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)*** %108, align 8
  %110 = getelementptr inbounds void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)*, void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)** %109, i64 1
  %111 = load void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)*, void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)** %110, align 8
  call void %111(%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"* nonnull %105) #12
  br label %112

112:                                              ; preds = %102, %107
  call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %40) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #12
  ret void
}

declare void @_ZN5blink5mojom5blink38FileSystemAccessDataTransferTokenProxy5CloneEN4mojo15PendingReceiverINS1_33FileSystemAccessDataTransferTokenEEE(%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*, %"class.mojo::PendingReceiver"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo6RemoteIN5blink5mojom5blink33FileSystemAccessDataTransferTokenEE6UnbindEv(%"class.mojo::PendingRemote.57"* noalias sret, %"class.mojo::Remote"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.mojo::ScopedHandleBase", align 4
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.mojo::internal::InterfacePtrState", align 8
  %6 = alloca %"class.mojo::InterfacePtrInfo", align 4
  %7 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"class.mojo::InterfaceEndpointClient"*, %"class.mojo::InterfaceEndpointClient"** %7, align 8
  %9 = icmp eq %"class.mojo::InterfaceEndpointClient"* %8, null
  br i1 %9, label %21, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.mojo::InterfaceEndpointClient", %"class.mojo::InterfaceEndpointClient"* %8, i64 0, i32 14, i32 0, i32 2, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.mojo::InterfaceEndpointClient", %"class.mojo::InterfaceEndpointClient"* %8, i64 0, i32 15, i32 0, i32 2, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %14, %10
  %19 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i64 0, i64 0), i32 296, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5, i64 0, i64 0)) #12
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  br label %21

21:                                               ; preds = %14, %2, %18
  %22 = bitcast %"class.mojo::internal::InterfacePtrState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %22) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 48, i1 false)
  %23 = bitcast %"class.mojo::internal::InterfacePtrState"* %5 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %23) #12
  %24 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %5, i64 0, i32 1
  %25 = bitcast %"class.std::__1::unique_ptr.229"* %24 to i64*
  %26 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %1, i64 0, i32 0, i32 1
  %27 = bitcast %"class.std::__1::unique_ptr.229"* %26 to i64*
  %28 = load i64, i64* %27, align 8
  store i64 %28, i64* %25, align 8
  store i64 0, i64* %27, align 8
  %29 = bitcast %"class.mojo::Remote"* %1 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"* %29, %"class.mojo::internal::InterfacePtrStateBase"* nonnull %23) #12
  %30 = bitcast %"class.mojo::InterfacePtrInfo"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #12
  %31 = getelementptr inbounds %"class.mojo::InterfacePtrInfo", %"class.mojo::InterfacePtrInfo"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 -1431655766, i32* %31, align 4
  %32 = getelementptr inbounds %"class.mojo::InterfacePtrInfo", %"class.mojo::InterfacePtrInfo"* %6, i64 0, i32 0, i32 1
  store i32 -1431655766, i32* %32, align 4
  call void @_ZN4mojo8internal17InterfacePtrStateIN5blink5mojom5blink33FileSystemAccessDataTransferTokenEE13PassInterfaceEv(%"class.mojo::InterfacePtrInfo"* nonnull sret %6, %"class.mojo::internal::InterfacePtrState"* nonnull %5)
  %33 = load i32, i32* %31, align 4, !noalias !25
  store i32 0, i32* %31, align 4, !noalias !25
  %34 = load i32, i32* %32, align 4
  %35 = bitcast %"class.mojo::ScopedHandleBase"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35)
  %36 = getelementptr inbounds %"class.mojo::PendingRemote.57", %"class.mojo::PendingRemote.57"* %0, i64 0, i32 0
  %37 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %3, i64 0, i32 0, i32 0, i32 0
  store i32 %33, i32* %37, align 4, !alias.scope !30
  call void @_ZN4mojo8internal18PendingRemoteStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEEj(%"struct.mojo::internal::PendingRemoteState"* %36, %"class.mojo::ScopedHandleBase"* nonnull %3, i32 %34) #12
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %21
  %41 = call i32 @MojoClose(i32 %38) #12
  br label %42

42:                                               ; preds = %40, %21
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35)
  %43 = getelementptr inbounds %"class.mojo::InterfacePtrInfo", %"class.mojo::InterfacePtrInfo"* %6, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %43) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #12
  %44 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %45 = load %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*, %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"** %44, align 8
  store %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"* null, %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"** %44, align 8
  %46 = icmp eq %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %42
  %48 = bitcast %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"* %45 to void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)***
  %49 = load void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)**, void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)*, void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)** %49, i64 1
  %51 = load void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)*, void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)** %50, align 8
  call void %51(%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"* nonnull %45) #12
  br label %52

52:                                               ; preds = %42, %47
  call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %23) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %22) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14DataObjectItem5TraceEPNS_7VisitorE(%"class.blink::DataObjectItem"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 5
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4FileEE5TraceEPNS_7VisitorEPKv) #12
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 12
  %15 = bitcast %"class.blink::Member.24"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15SystemClipboardEE5TraceEPNS_7VisitorEPKv) #12
  br label %24

24:                                               ; preds = %13, %18
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare void @_ZN5blink14BlobDataHandleC1ENSt3__110unique_ptrINS_8BlobDataENS1_14default_deleteIS3_EEEEm(%"class.blink::BlobDataHandle"*, %"class.blink::BlobData"*, i64) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #9

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #3

declare void @_ZN4mojo8internal18PendingRemoteStateC1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #3

declare i32 @MojoClose(i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14DataObjectItemEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14DataObjectItemEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14DataObjectItemEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.2"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14DataObjectItemEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.2"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14DataObjectItemEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #10 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #12
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* %21, i8* %22) #12
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #12
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #12
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14DataObjectItemEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 32
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4FileEE5TraceEPNS_7VisitorEPKv) #12
  br label %13

13:                                               ; preds = %7, %2
  %14 = getelementptr inbounds i8, i8* %1, i64 192
  %15 = bitcast i8* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %0, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15SystemClipboardEE5TraceEPNS_7VisitorEPKv) #12
  br label %24

24:                                               ; preds = %13, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14DataObjectItemEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::DataObjectItem"*
  tail call void @_ZN5blink14DataObjectItemD2Ev(%"class.blink::DataObjectItem"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14DataObjectItemEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.2"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14DataObjectItemD2Ev(%"class.blink::DataObjectItem"*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 11, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #12
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 9
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %19) #12
  %20 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 8, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #12
  br label %36

36:                                               ; preds = %18, %32, %35
  %37 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 7, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #12
  br label %53

53:                                               ; preds = %36, %49, %52
  %54 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 6, i32 0
  %55 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %54, align 8
  %56 = icmp eq %"class.WTF::SharedBuffer"* %55, null
  br i1 %56, label %64, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %55, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %58) #12
  %59 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %57
  tail call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %55) #12
  %63 = bitcast %"class.WTF::SharedBuffer"* %55 to i8*
  tail call void @free(i8* %63) #12
  br label %64

64:                                               ; preds = %53, %57, %62
  %65 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 4, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #12
  br label %81

81:                                               ; preds = %64, %77, %80
  %82 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 3, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %98, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  br i1 %89, label %92, label %94

92:                                               ; preds = %85
  %93 = add i32 %91, -1
  store i32 %93, i32* %90, align 4
  br label %94

94:                                               ; preds = %92, %85
  %95 = phi i32 [ %93, %92 ], [ %91, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %83) #12
  br label %98

98:                                               ; preds = %81, %94, %97
  %99 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %0, i64 0, i32 0, i32 0
  %100 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %99, align 8
  %101 = icmp eq %"class.base::RefCountedData"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = atomicrmw sub i32* %103, i32 1 acq_rel
  %105 = icmp eq i32 %104, 1
  br i1 %105, label %106, label %115

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %100, i64 0, i32 0
  %108 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %107, i64 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %113, label %111

111:                                              ; preds = %106
  %112 = tail call i32 @MojoClose(i32 %109) #12
  br label %113

113:                                              ; preds = %111, %106
  %114 = bitcast %"class.base::RefCountedData"* %100 to i8*
  tail call void @_ZdlPv(i8* %114) #13
  br label %115

115:                                              ; preds = %98, %102, %113
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DataObjectItem"* @_ZN5blink25MakeGarbageCollectedTraitINS_14DataObjectItemEE4CallIJNS1_8ItemKindERA_KcEEEPS1_DpOT_(i32* dereferenceable(4), [0 x i8]*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14DataObjectItemEEEPhm(i64 200) #12
  %5 = bitcast i8* %4 to %"class.blink::DataObjectItem"*
  %6 = load i32, i32* %0, align 4
  %7 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  %8 = getelementptr inbounds [0 x i8], [0 x i8]* %1, i64 0, i64 0
  %9 = icmp eq [0 x i8]* %1, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %2
  %11 = tail call i64 @strlen(i8* nonnull %8) #14
  br label %12

12:                                               ; preds = %2, %10
  %13 = phi i64 [ %11, %10 ], [ 0, %2 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* %8, i64 %13) #12
  %14 = bitcast i8* %4 to %"class.base::RefCountedData"**
  store %"class.base::RefCountedData"* null, %"class.base::RefCountedData"** %14, align 8
  %15 = getelementptr inbounds i8, i8* %4, i64 8
  %16 = bitcast i8* %15 to i32*
  store i32 1, i32* %16, align 8
  %17 = getelementptr inbounds i8, i8* %4, i64 12
  %18 = bitcast i8* %17 to i32*
  store i32 %6, i32* %18, align 4
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = getelementptr inbounds i8, i8* %4, i64 16
  %22 = bitcast i8* %21 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %22, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %23, label %41, label %24

24:                                               ; preds = %12
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %41

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i33
  %33 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %32, i33 1) #12
  %34 = extractvalue { i33, i1 } %33, 1
  %35 = extractvalue { i33, i1 } %33, 0
  %36 = icmp slt i33 %35, 0
  %37 = or i1 %34, %36
  br i1 %37, label %38, label %39, !prof !2

38:                                               ; preds = %29
  call void @llvm.trap() #12
  unreachable

39:                                               ; preds = %29
  %40 = trunc i33 %35 to i32
  store i32 %40, i32* %30, align 4
  br label %41

41:                                               ; preds = %12, %24, %39
  %42 = getelementptr inbounds i8, i8* %4, i64 24
  %43 = getelementptr inbounds i8, i8* %4, i64 64
  %44 = bitcast i8* %43 to %"class.blink::KURL"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 40, i1 false) #12
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %44) #12
  %45 = getelementptr inbounds i8, i8* %4, i64 176
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 24, i1 false) #12
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #12
  br label %61

61:                                               ; preds = %41, %57, %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  %62 = getelementptr inbounds i8, i8* %4, i64 -4
  %63 = bitcast i8* %62 to i16*
  %64 = load atomic i16, i16* %63 monotonic, align 2
  %65 = or i16 %64, 1
  store atomic i16 %65, i16* %63 release, align 2
  ret %"class.blink::DataObjectItem"* %5
}

declare void @_ZN5blink8BlobDataC1ENS0_21FileCompositionStatusE(%"class.blink::BlobData"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::File"* @_ZN5blink25MakeGarbageCollectedTraitINS_4FileEE4CallIJRA10_KcN4base4TimeE13scoped_refptrINS_14BlobDataHandleEEEEEPS1_DpOT_([10 x i8]* dereferenceable(10), %"class.base::Time"* dereferenceable(8), %class.scoped_refptr.9* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.absl::optional.12", align 8
  %6 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 216) #12
  %7 = bitcast i8* %6 to %"class.blink::File"*
  %8 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #12
  %9 = getelementptr inbounds [10 x i8], [10 x i8]* %0, i64 0, i64 0
  %10 = icmp eq [10 x i8]* %0, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %3
  %12 = tail call i64 @strlen(i8* nonnull %9) #14
  br label %13

13:                                               ; preds = %3, %11
  %14 = phi i64 [ %12, %11 ], [ 0, %3 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %9, i64 %14) #12
  %15 = getelementptr inbounds %"class.absl::optional.12", %"class.absl::optional.12"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #12
  store i8 1, i8* %15, align 8
  %16 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %1, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.absl::optional.12", %"class.absl::optional.12"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %18 = load i64, i64* %16, align 8
  store i64 %18, i64* %17, align 8
  %19 = getelementptr inbounds %class.scoped_refptr.9, %class.scoped_refptr.9* %2, i64 0, i32 0
  %20 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %19, align 8
  store %"class.blink::BlobDataHandle"* null, %"class.blink::BlobDataHandle"** %19, align 8
  call void @_ZN5blink4FileC1ERKN3WTF6StringERKN4absl8optionalIN4base4TimeEEE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::File"* %7, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.absl::optional.12"* nonnull dereferenceable(16) %5, %"class.blink::BlobDataHandle"* %20) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #12
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %13
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  br i1 %28, label %31, label %33

31:                                               ; preds = %24
  %32 = add i32 %30, -1
  store i32 %32, i32* %29, align 4
  br label %33

33:                                               ; preds = %31, %24
  %34 = phi i32 [ %32, %31 ], [ %30, %24 ]
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #12
  br label %37

37:                                               ; preds = %13, %33, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #12
  %38 = getelementptr inbounds i8, i8* %6, i64 -4
  %39 = bitcast i8* %38 to i16*
  %40 = load atomic i16, i16* %39 monotonic, align 2
  %41 = or i16 %40, 1
  store atomic i16 %41, i16* %39 release, align 2
  ret %"class.blink::File"* %7
}

declare void @_ZN5blink4FileC1ERKN3WTF6StringERKN4absl8optionalIN4base4TimeEEE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::File"*, %"class.WTF::String"* dereferenceable(8), %"class.absl::optional.12"* dereferenceable(16), %"class.blink::BlobDataHandle"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.2"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.2"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #12
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare void @_ZN4mojo8internal18PendingRemoteStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEEj(%"struct.mojo::internal::PendingRemoteState"*, %"class.mojo::ScopedHandleBase"*, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo6RemoteIN5blink5mojom5blink33FileSystemAccessDataTransferTokenEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Remote"*, %"class.mojo::PendingRemote.57"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::internal::InterfacePtrState", align 8
  %5 = getelementptr inbounds %"class.mojo::PendingRemote.57", %"class.mojo::PendingRemote.57"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %25

8:                                                ; preds = %3
  %9 = bitcast %"class.mojo::internal::InterfacePtrState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false) #12
  %10 = bitcast %"class.mojo::internal::InterfacePtrState"* %4 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #12
  %11 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %4, i64 0, i32 1
  %12 = bitcast %"class.std::__1::unique_ptr.229"* %11 to i64*
  %13 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::unique_ptr.229"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %12, align 8
  store i64 0, i64* %14, align 8
  %16 = bitcast %"class.mojo::Remote"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"* %16, %"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #12
  %17 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*, %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"** %17, align 8
  store %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"* null, %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"** %17, align 8
  %19 = icmp eq %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"* %18, null
  br i1 %19, label %52, label %20

20:                                               ; preds = %8
  %21 = bitcast %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"* %18 to void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)***
  %22 = load void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)**, void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)*, void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)** %22, i64 1
  %24 = load void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)*, void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)** %23, align 8
  call void %24(%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"* nonnull %18) #12
  br label %52

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.mojo::PendingRemote.57", %"class.mojo::PendingRemote.57"* %1, i64 0, i32 0
  %27 = bitcast %"class.mojo::Remote"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBase4BindEPNS0_18PendingRemoteStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::InterfacePtrStateBase"* %27, %"struct.mojo::internal::PendingRemoteState"* %26, %"class.base::SequencedTaskRunner"* %2) #12
  %28 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %0, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.229", %"class.std::__1::unique_ptr.229"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*, %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"** %29, align 8
  %31 = icmp eq %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"* %30, null
  br i1 %31, label %32, label %62

32:                                               ; preds = %25
  %33 = tail call i8* @_Znwm(i64 8) #13
  %34 = bitcast i8* %33 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink5mojom5blink50FileSystemAccessDataTransferTokenResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %35 = bitcast i8* %33 to %"class.mojo::MessageReceiver"*
  %36 = tail call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %27, i1 zeroext false, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %35, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink33FileSystemAccessDataTransferToken5Name_E, i64 0, i64 0)) #12
  br i1 %36, label %37, label %62

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %39 = bitcast %"class.mojo::InterfaceEndpointClient"** %38 to %"class.mojo::MessageReceiverWithResponder"**
  %40 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %39, align 8
  %41 = tail call i8* @_Znwm(i64 16) #13
  %42 = bitcast i8* %41 to %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*
  tail call void @_ZN5blink5mojom5blink38FileSystemAccessDataTransferTokenProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"* nonnull %42, %"class.mojo::MessageReceiverWithResponder"* %40) #12
  %43 = ptrtoint i8* %41 to i64
  %44 = load %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*, %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"** %29, align 8
  %45 = bitcast %"class.std::__1::unique_ptr.229"* %28 to i64*
  store i64 %43, i64* %45, align 8
  %46 = icmp eq %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"* %44, null
  br i1 %46, label %62, label %47

47:                                               ; preds = %37
  %48 = bitcast %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"* %44 to void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)***
  %49 = load void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)**, void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)*, void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)** %49, i64 1
  %51 = load void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)*, void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)** %50, align 8
  tail call void %51(%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"* nonnull %44) #12
  br label %62

52:                                               ; preds = %20, %8
  call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #12
  %53 = icmp eq %"class.base::SequencedTaskRunner"* %2, null
  br i1 %53, label %62, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1
  %56 = getelementptr inbounds %"class.base::RefCountedThreadSafe.61", %"class.base::RefCountedThreadSafe.61"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw sub i32* %56, i32 1 acq_rel
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %62

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.base::RefCountedThreadSafe.61", %"class.base::RefCountedThreadSafe.61"* %55, i64 -2
  %61 = bitcast %"class.base::RefCountedThreadSafe.61"* %60 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %61) #12
  br label %62

62:                                               ; preds = %47, %37, %32, %25, %52, %54, %59
  ret void
}

declare void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"*) unnamed_addr #2

declare void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"*, %"class.mojo::internal::InterfacePtrStateBase"*) local_unnamed_addr #2

declare void @_ZN4mojo8internal21InterfacePtrStateBase4BindEPNS0_18PendingRemoteStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::InterfacePtrStateBase"*, %"struct.mojo::internal::PendingRemoteState"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"*, i1 zeroext, i1 zeroext, i1 zeroext, %"class.mojo::MessageReceiver"*, i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

declare void @_ZN5blink5mojom5blink38FileSystemAccessDataTransferTokenProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*, %"class.mojo::MessageReceiverWithResponder"*) unnamed_addr #2

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

declare i32 @MojoCreateMessagePipe(%struct.MojoCreateMessagePipeOptions*, i32*, i32*) local_unnamed_addr #2

declare void @_ZN4mojo8internal20PendingReceiverStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEE(%"struct.mojo::internal::PendingReceiverState"*, %"class.mojo::ScopedHandleBase"*) unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal17InterfacePtrStateIN5blink5mojom5blink33FileSystemAccessDataTransferTokenEE13PassInterfaceEv(%"class.mojo::InterfacePtrInfo"* noalias sret, %"class.mojo::internal::InterfacePtrState"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.mojo::ScopedHandleBase", align 4
  %4 = alloca %"class.mojo::ScopedHandleBase", align 4
  %5 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*, %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"** %5, align 8
  store %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"* null, %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"** %5, align 8
  %7 = icmp eq %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"* %6 to void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)***
  %10 = load void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)**, void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)*, void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)** %10, i64 1
  %12 = load void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)*, void (%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"*)** %11, align 8
  tail call void %12(%"class.blink::mojom::blink::FileSystemAccessDataTransferTokenProxy"* nonnull %6) #12
  br label %13

13:                                               ; preds = %2, %8
  %14 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"class.mojo::InterfaceEndpointClient"*, %"class.mojo::InterfaceEndpointClient"** %14, align 8, !noalias !33
  store %"class.mojo::InterfaceEndpointClient"* null, %"class.mojo::InterfaceEndpointClient"** %14, align 8, !noalias !33
  %16 = icmp eq %"class.mojo::InterfaceEndpointClient"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.mojo::InterfaceEndpointClient"* %15 to void (%"class.mojo::InterfaceEndpointClient"*)***
  %19 = load void (%"class.mojo::InterfaceEndpointClient"*)**, void (%"class.mojo::InterfaceEndpointClient"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.mojo::InterfaceEndpointClient"*)*, void (%"class.mojo::InterfaceEndpointClient"*)** %19, i64 1
  %21 = load void (%"class.mojo::InterfaceEndpointClient"*)*, void (%"class.mojo::InterfaceEndpointClient"*)** %20, align 8
  tail call void %21(%"class.mojo::InterfaceEndpointClient"* nonnull %15) #12
  br label %22

22:                                               ; preds = %17, %13
  %23 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %1, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.mojo::internal::MultiplexRouter"*, %"class.mojo::internal::MultiplexRouter"** %23, align 8, !noalias !33
  %25 = icmp eq %"class.mojo::internal::MultiplexRouter"* %24, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.mojo::internal::MultiplexRouter", %"class.mojo::internal::MultiplexRouter"* %24, i64 0, i32 10
  call void @_ZN4mojo9Connector15PassMessagePipeEv(%"class.mojo::ScopedHandleBase"* nonnull sret %4, %"class.mojo::Connector"* %27) #12
  %28 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %4, i64 0, i32 0, i32 0, i32 0
  %29 = load i32, i32* %28, align 4, !noalias !36
  br label %34

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %4, i64 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %1, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4, !noalias !39
  store i32 %33, i32* %31, align 4, !alias.scope !39
  store i32 0, i32* %32, align 4, !noalias !39
  br label %34

34:                                               ; preds = %26, %30
  %35 = phi i32 [ %29, %26 ], [ %33, %30 ]
  %36 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %1, i64 0, i32 0, i32 5
  %37 = load i32, i32* %36, align 8
  %38 = bitcast %"class.mojo::ScopedHandleBase"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %38)
  %39 = getelementptr inbounds %"class.mojo::InterfacePtrInfo", %"class.mojo::InterfacePtrInfo"* %0, i64 0, i32 0
  %40 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %3, i64 0, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %4, i64 0, i32 0, i32 0, i32 0
  store i32 %35, i32* %40, align 4, !alias.scope !36
  store i32 0, i32* %41, align 4, !noalias !36
  call void @_ZN4mojo8internal18PendingRemoteStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEEj(%"struct.mojo::internal::PendingRemoteState"* %39, %"class.mojo::ScopedHandleBase"* nonnull %3, i32 %37) #12
  %42 = load i32, i32* %40, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %34
  %45 = call i32 @MojoClose(i32 %42) #12
  br label %46

46:                                               ; preds = %34, %44
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38)
  %47 = load i32, i32* %41, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %51, label %49

49:                                               ; preds = %46
  %50 = call i32 @MojoClose(i32 %47) #12
  br label %51

51:                                               ; preds = %46, %49
  ret void
}

declare void @_ZN4mojo9Connector15PassMessagePipeEv(%"class.mojo::ScopedHandleBase"* sret, %"class.mojo::Connector"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_4FileEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15SystemClipboardEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SystemClipboard"*
  tail call void @_ZNK5blink15SystemClipboard5TraceEPNS_7VisitorE(%"class.blink::SystemClipboard"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare void @_ZNK5blink15SystemClipboard5TraceEPNS_7VisitorE(%"class.blink::SystemClipboard"*, %"class.blink::Visitor"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN4mojo22PendingRemoteConverterIN5blink22CrossVariantMojoRemoteINS1_5mojom46FileSystemAccessDataTransferTokenInterfaceBaseEEEE2ToINS3_5blink33FileSystemAccessDataTransferTokenEEENS_13PendingRemoteIT_EEOS5_: argument 0"}
!6 = distinct !{!6, !"_ZN4mojo22PendingRemoteConverterIN5blink22CrossVariantMojoRemoteINS1_5mojom46FileSystemAccessDataTransferTokenInterfaceBaseEEEE2ToINS3_5blink33FileSystemAccessDataTransferTokenEEENS_13PendingRemoteIT_EEOS5_"}
!7 = !{!8, !5}
!8 = distinct !{!8, !9, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!9 = distinct !{!9, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!12 = distinct !{!12, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN4mojo13PendingRemoteIN5blink5mojom5blink33FileSystemAccessDataTransferTokenEE30InitWithNewPipeAndPassReceiverEv: argument 0"}
!15 = distinct !{!15, !"_ZN4mojo13PendingRemoteIN5blink5mojom5blink33FileSystemAccessDataTransferTokenEE30InitWithNewPipeAndPassReceiverEv"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!18 = distinct !{!18, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN4mojo13PendingRemoteIN5blink5mojom5blink33FileSystemAccessDataTransferTokenEE8PassPipeEv: argument 0"}
!21 = distinct !{!21, !"_ZN4mojo13PendingRemoteIN5blink5mojom5blink33FileSystemAccessDataTransferTokenEE8PassPipeEv"}
!22 = !{!23, !20}
!23 = distinct !{!23, !24, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!24 = distinct !{!24, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!25 = !{!26, !28}
!26 = distinct !{!26, !27, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!27 = distinct !{!27, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!28 = distinct !{!28, !29, !"_ZN4mojo16InterfacePtrInfoIN5blink5mojom5blink33FileSystemAccessDataTransferTokenEE10PassHandleEv: argument 0"}
!29 = distinct !{!29, !"_ZN4mojo16InterfacePtrInfoIN5blink5mojom5blink33FileSystemAccessDataTransferTokenEE10PassHandleEv"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!32 = distinct !{!32, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZN4mojo8internal21InterfacePtrStateBase15PassMessagePipeEv: argument 0"}
!35 = distinct !{!35, !"_ZN4mojo8internal21InterfacePtrStateBase15PassMessagePipeEv"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!38 = distinct !{!38, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!39 = !{!40, !34}
!40 = distinct !{!40, !41, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!41 = distinct !{!41, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
