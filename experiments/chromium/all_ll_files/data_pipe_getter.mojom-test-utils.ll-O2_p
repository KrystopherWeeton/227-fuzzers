; ModuleID = 'gen/services/network/public/mojom/data_pipe_getter.mojom-test-utils.cc'
source_filename = "gen/services/network/public/mojom/data_pipe_getter.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.network::mojom::DataPipeGetterAsyncWaiter" = type { %"class.network::mojom::DataPipeGetter"* }
%"class.network::mojom::DataPipeGetter" = type { i32 (...)** }
%"class.network::mojom::DataPipeGetterInterceptorForTesting" = type { %"class.network::mojom::DataPipeGetter" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::DataPipeProducerHandle" }
%"class.mojo::DataPipeProducerHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase.1", %"class.mojo::ConnectionGroup::Ref" }
%"class.mojo::ScopedHandleBase.1" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.3", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.4, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.6", [4 x i8] }>
%"class.base::RefCountedThreadSafe.3" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.4 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.5" }>
%"class.base::RefCountedThreadSafe.5" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl.9" }
%"struct.std::__1::__cxx_atomic_impl.9" = type { %"struct.std::__1::__cxx_atomic_base_impl.10" }
%"struct.std::__1::__cxx_atomic_base_impl.10" = type { i32 }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.19, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.12", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.14" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.19 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.20 }
%class.scoped_refptr.20 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.21", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.21" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.22" }
%"struct.std::__1::atomic.22" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__atomic_base.24" }
%"struct.std::__1::__atomic_base.24" = type { %"struct.std::__1::__cxx_atomic_impl.25" }
%"struct.std::__1::__cxx_atomic_impl.25" = type { %"struct.std::__1::__cxx_atomic_base_impl.26" }
%"struct.std::__1::__cxx_atomic_base_impl.26" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }

$_ZN7network5mojom14DataPipeGetterD2Ev = comdat any

$_ZN7network5mojom35DataPipeGetterInterceptorForTestingD0Ev = comdat any

@.str = private unnamed_addr constant [5 x i8] c"Read\00", align 1
@.str.1 = private unnamed_addr constant [71 x i8] c"gen/services/network/public/mojom/data_pipe_getter.mojom-test-utils.cc\00", align 1
@_ZTVN7network5mojom35DataPipeGetterInterceptorForTestingE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.network::mojom::DataPipeGetter"*)* @_ZN7network5mojom14DataPipeGetterD2Ev to i8*), i8* bitcast (void (%"class.network::mojom::DataPipeGetterInterceptorForTesting"*)* @_ZN7network5mojom35DataPipeGetterInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.network::mojom::DataPipeGetterInterceptorForTesting"*, %"class.mojo::ScopedHandleBase"*, %"class.base::OnceCallback"*)* @_ZN7network5mojom35DataPipeGetterInterceptorForTesting4ReadEN4mojo16ScopedHandleBaseINS2_22DataPipeProducerHandleEEEN4base12OnceCallbackIFvimEEE to i8*), i8* bitcast (void (%"class.network::mojom::DataPipeGetterInterceptorForTesting"*, %"class.mojo::PendingReceiver"*)* @_ZN7network5mojom35DataPipeGetterInterceptorForTesting5CloneEN4mojo15PendingReceiverINS0_14DataPipeGetterEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN7network5mojom25DataPipeGetterAsyncWaiterC1EPNS0_14DataPipeGetterE = hidden unnamed_addr alias void (%"class.network::mojom::DataPipeGetterAsyncWaiter"*, %"class.network::mojom::DataPipeGetter"*), void (%"class.network::mojom::DataPipeGetterAsyncWaiter"*, %"class.network::mojom::DataPipeGetter"*)* @_ZN7network5mojom25DataPipeGetterAsyncWaiterC2EPNS0_14DataPipeGetterE
@_ZN7network5mojom25DataPipeGetterAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.network::mojom::DataPipeGetterAsyncWaiter"*), void (%"class.network::mojom::DataPipeGetterAsyncWaiter"*)* @_ZN7network5mojom25DataPipeGetterAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom35DataPipeGetterInterceptorForTesting4ReadEN4mojo16ScopedHandleBaseINS2_22DataPipeProducerHandleEEEN4base12OnceCallbackIFvimEEE(%"class.network::mojom::DataPipeGetterInterceptorForTesting"*, %"class.mojo::ScopedHandleBase"* nocapture, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.mojo::ScopedHandleBase", align 4
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = bitcast %"class.network::mojom::DataPipeGetterInterceptorForTesting"* %0 to %"class.network::mojom::DataPipeGetter"* (%"class.network::mojom::DataPipeGetterInterceptorForTesting"*)***
  %7 = load %"class.network::mojom::DataPipeGetter"* (%"class.network::mojom::DataPipeGetterInterceptorForTesting"*)**, %"class.network::mojom::DataPipeGetter"* (%"class.network::mojom::DataPipeGetterInterceptorForTesting"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.network::mojom::DataPipeGetter"* (%"class.network::mojom::DataPipeGetterInterceptorForTesting"*)*, %"class.network::mojom::DataPipeGetter"* (%"class.network::mojom::DataPipeGetterInterceptorForTesting"*)** %7, i64 4
  %9 = load %"class.network::mojom::DataPipeGetter"* (%"class.network::mojom::DataPipeGetterInterceptorForTesting"*)*, %"class.network::mojom::DataPipeGetter"* (%"class.network::mojom::DataPipeGetterInterceptorForTesting"*)** %8, align 8
  %10 = tail call %"class.network::mojom::DataPipeGetter"* %9(%"class.network::mojom::DataPipeGetterInterceptorForTesting"* %0) #10
  %11 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %4, i64 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %1, i64 0, i32 0, i32 0, i32 0
  %13 = load i32, i32* %12, align 4, !noalias !2
  store i32 %13, i32* %11, align 4, !alias.scope !2
  store i32 0, i32* %12, align 4, !noalias !2
  %14 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %16, i64* %17, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %14, align 8
  %18 = bitcast %"class.network::mojom::DataPipeGetter"* %10 to void (%"class.network::mojom::DataPipeGetter"*, %"class.mojo::ScopedHandleBase"*, %"class.base::OnceCallback"*)***
  %19 = load void (%"class.network::mojom::DataPipeGetter"*, %"class.mojo::ScopedHandleBase"*, %"class.base::OnceCallback"*)**, void (%"class.network::mojom::DataPipeGetter"*, %"class.mojo::ScopedHandleBase"*, %"class.base::OnceCallback"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.network::mojom::DataPipeGetter"*, %"class.mojo::ScopedHandleBase"*, %"class.base::OnceCallback"*)*, void (%"class.network::mojom::DataPipeGetter"*, %"class.mojo::ScopedHandleBase"*, %"class.base::OnceCallback"*)** %19, i64 2
  %21 = load void (%"class.network::mojom::DataPipeGetter"*, %"class.mojo::ScopedHandleBase"*, %"class.base::OnceCallback"*)*, void (%"class.network::mojom::DataPipeGetter"*, %"class.mojo::ScopedHandleBase"*, %"class.base::OnceCallback"*)** %20, align 8
  call void %21(%"class.network::mojom::DataPipeGetter"* %10, %"class.mojo::ScopedHandleBase"* nonnull %4, %"class.base::OnceCallback"* nonnull %5) #10
  %22 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #10
  %23 = load i32, i32* %11, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %3
  %26 = call i32 @MojoClose(i32 %23) #10
  br label %27

27:                                               ; preds = %3, %25
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom35DataPipeGetterInterceptorForTesting5CloneEN4mojo15PendingReceiverINS0_14DataPipeGetterEEE(%"class.network::mojom::DataPipeGetterInterceptorForTesting"*, %"class.mojo::PendingReceiver"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::PendingReceiver", align 8
  %4 = bitcast %"class.network::mojom::DataPipeGetterInterceptorForTesting"* %0 to %"class.network::mojom::DataPipeGetter"* (%"class.network::mojom::DataPipeGetterInterceptorForTesting"*)***
  %5 = load %"class.network::mojom::DataPipeGetter"* (%"class.network::mojom::DataPipeGetterInterceptorForTesting"*)**, %"class.network::mojom::DataPipeGetter"* (%"class.network::mojom::DataPipeGetterInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.network::mojom::DataPipeGetter"* (%"class.network::mojom::DataPipeGetterInterceptorForTesting"*)*, %"class.network::mojom::DataPipeGetter"* (%"class.network::mojom::DataPipeGetterInterceptorForTesting"*)** %5, i64 4
  %7 = load %"class.network::mojom::DataPipeGetter"* (%"class.network::mojom::DataPipeGetterInterceptorForTesting"*)*, %"class.network::mojom::DataPipeGetter"* (%"class.network::mojom::DataPipeGetterInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.network::mojom::DataPipeGetter"* %7(%"class.network::mojom::DataPipeGetterInterceptorForTesting"* %0) #10
  %9 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %3, i64 0, i32 0
  %10 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %1, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"* nonnull %9, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24) %10) #10
  %11 = bitcast %"class.network::mojom::DataPipeGetter"* %8 to void (%"class.network::mojom::DataPipeGetter"*, %"class.mojo::PendingReceiver"*)***
  %12 = load void (%"class.network::mojom::DataPipeGetter"*, %"class.mojo::PendingReceiver"*)**, void (%"class.network::mojom::DataPipeGetter"*, %"class.mojo::PendingReceiver"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.network::mojom::DataPipeGetter"*, %"class.mojo::PendingReceiver"*)*, void (%"class.network::mojom::DataPipeGetter"*, %"class.mojo::PendingReceiver"*)** %12, i64 3
  %14 = load void (%"class.network::mojom::DataPipeGetter"*, %"class.mojo::PendingReceiver"*)*, void (%"class.network::mojom::DataPipeGetter"*, %"class.mojo::PendingReceiver"*)** %13, align 8
  call void %14(%"class.network::mojom::DataPipeGetter"* %8, %"class.mojo::PendingReceiver"* nonnull %3) #10
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %9) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7network5mojom25DataPipeGetterAsyncWaiterC2EPNS0_14DataPipeGetterE(%"class.network::mojom::DataPipeGetterAsyncWaiter"* nocapture, %"class.network::mojom::DataPipeGetter"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.network::mojom::DataPipeGetterAsyncWaiter", %"class.network::mojom::DataPipeGetterAsyncWaiter"* %0, i64 0, i32 0
  store %"class.network::mojom::DataPipeGetter"* %1, %"class.network::mojom::DataPipeGetter"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7network5mojom25DataPipeGetterAsyncWaiterD2Ev(%"class.network::mojom::DataPipeGetterAsyncWaiter"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom25DataPipeGetterAsyncWaiter4ReadEN4mojo16ScopedHandleBaseINS2_22DataPipeProducerHandleEEEPiPm(%"class.network::mojom::DataPipeGetterAsyncWaiter"* nocapture readonly, %"class.mojo::ScopedHandleBase"* nocapture, i32*, i64*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RunLoop", align 8
  %6 = alloca %"class.mojo::ScopedHandleBase", align 4
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = ptrtoint i32* %2 to i64
  %10 = ptrtoint i64* %3 to i64
  %11 = bitcast %"class.base::RunLoop"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %5, i32 0) #10
  %12 = getelementptr inbounds %"class.network::mojom::DataPipeGetterAsyncWaiter", %"class.network::mojom::DataPipeGetterAsyncWaiter"* %0, i64 0, i32 0
  %13 = load %"class.network::mojom::DataPipeGetter"*, %"class.network::mojom::DataPipeGetter"** %12, align 8
  %14 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %6, i64 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %1, i64 0, i32 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4, !noalias !5
  store i32 %16, i32* %14, align 4, !alias.scope !5
  store i32 0, i32* %15, align 4, !noalias !5
  %17 = ptrtoint %"class.base::RunLoop"* %5 to i64
  %18 = call i8* @_Znwm(i64 64) #11, !noalias !8
  %19 = bitcast i8* %18 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %19, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, i64)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN7network5mojom25DataPipeGetterAsyncWaiter4ReadEN4mojo16ScopedHandleBaseINS6_22DataPipeProducerHandleEEEPiPmE3$_0JPNS_7RunLoopESA_SB_EEEFvimEE7RunOnceEPNS0_13BindStateBaseEim" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN7network5mojom25DataPipeGetterAsyncWaiter4ReadEN4mojo16ScopedHandleBaseINS5_22DataPipeProducerHandleEEEPiPmE3$_0JPNS_7RunLoopES9_SA_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !8
  %20 = getelementptr inbounds i8, i8* %18, i64 40
  %21 = bitcast i8* %20 to i64*
  store i64 %17, i64* %21, align 8, !noalias !8
  %22 = getelementptr inbounds i8, i8* %18, i64 48
  %23 = bitcast i8* %22 to i64*
  store i64 %9, i64* %23, align 8, !noalias !8
  %24 = getelementptr inbounds i8, i8* %18, i64 56
  %25 = bitcast i8* %24 to i64*
  store i64 %10, i64* %25, align 8, !noalias !8
  %26 = bitcast %"class.base::OnceCallback"* %7 to i8**
  store i8* %18, i8** %26, align 8, !alias.scope !8
  %27 = bitcast %"class.network::mojom::DataPipeGetter"* %13 to void (%"class.network::mojom::DataPipeGetter"*, %"class.mojo::ScopedHandleBase"*, %"class.base::OnceCallback"*)***
  %28 = load void (%"class.network::mojom::DataPipeGetter"*, %"class.mojo::ScopedHandleBase"*, %"class.base::OnceCallback"*)**, void (%"class.network::mojom::DataPipeGetter"*, %"class.mojo::ScopedHandleBase"*, %"class.base::OnceCallback"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.network::mojom::DataPipeGetter"*, %"class.mojo::ScopedHandleBase"*, %"class.base::OnceCallback"*)*, void (%"class.network::mojom::DataPipeGetter"*, %"class.mojo::ScopedHandleBase"*, %"class.base::OnceCallback"*)** %28, i64 2
  %30 = load void (%"class.network::mojom::DataPipeGetter"*, %"class.mojo::ScopedHandleBase"*, %"class.base::OnceCallback"*)*, void (%"class.network::mojom::DataPipeGetter"*, %"class.mojo::ScopedHandleBase"*, %"class.base::OnceCallback"*)** %29, align 8
  call void %30(%"class.network::mojom::DataPipeGetter"* %13, %"class.mojo::ScopedHandleBase"* nonnull %6, %"class.base::OnceCallback"* nonnull %7) #10
  %31 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %31) #10
  %32 = load i32, i32* %14, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %4
  %35 = call i32 @MojoClose(i32 %32) #10
  br label %36

36:                                               ; preds = %4, %34
  %37 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1, i64 0, i64 0), i32 58) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %5, %"class.base::Location"* nonnull dereferenceable(32) %8) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #5

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom14DataPipeGetterD2Ev(%"class.network::mojom::DataPipeGetter"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom35DataPipeGetterInterceptorForTestingD0Ev(%"class.network::mojom::DataPipeGetterInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateC1EOS1_(%"struct.mojo::internal::PendingReceiverState"*, %"struct.mojo::internal::PendingReceiverState"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare i32 @MojoClose(i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN7network5mojom25DataPipeGetterAsyncWaiter4ReadEN4mojo16ScopedHandleBaseINS6_22DataPipeProducerHandleEEEPiPmE3$_0JPNS_7RunLoopESA_SB_EEEFvimEE7RunOnceEPNS0_13BindStateBaseEim"(%"class.base::internal::BindStateBase"* nocapture readonly, i32, i64) #0 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::RunLoop"**
  %6 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %7 = bitcast void ()** %6 to i32**
  %8 = getelementptr inbounds void ()*, void ()** %4, i64 2
  %9 = bitcast void ()** %8 to i64**
  %10 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %5, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = load i64*, i64** %9, align 8
  store i32 %1, i32* %11, align 4
  store i64 %2, i64* %12, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %10) #10
  ret void
}

declare void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN7network5mojom25DataPipeGetterAsyncWaiter4ReadEN4mojo16ScopedHandleBaseINS5_22DataPipeProducerHandleEEEPiPmE3$_0JPNS_7RunLoopES9_SA_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeProducerHandleEE7releaseEv: argument 0"}
!4 = distinct !{!4, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeProducerHandleEE7releaseEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeProducerHandleEE7releaseEv: argument 0"}
!7 = distinct !{!7, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeProducerHandleEE7releaseEv"}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN7network5mojom25DataPipeGetterAsyncWaiter4ReadEN4mojo16ScopedHandleBaseINS6_22DataPipeProducerHandleEEEPiPmE3$_0JPNS_7RunLoopERSA_RSB_EEEDcOT0_DpOT1_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN7network5mojom25DataPipeGetterAsyncWaiter4ReadEN4mojo16ScopedHandleBaseINS6_22DataPipeProducerHandleEEEPiPmE3$_0JPNS_7RunLoopERSA_RSB_EEEDcOT0_DpOT1_"}
!11 = distinct !{!11, !12, !"_ZN4base8BindOnceIZN7network5mojom25DataPipeGetterAsyncWaiter4ReadEN4mojo16ScopedHandleBaseINS4_22DataPipeProducerHandleEEEPiPmE3$_0JPNS_7RunLoopERS8_RS9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_: argument 0"}
!12 = distinct !{!12, !"_ZN4base8BindOnceIZN7network5mojom25DataPipeGetterAsyncWaiter4ReadEN4mojo16ScopedHandleBaseINS4_22DataPipeProducerHandleEEEPiPmE3$_0JPNS_7RunLoopERS8_RS9_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_"}
