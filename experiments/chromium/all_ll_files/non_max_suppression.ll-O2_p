; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/non_max_suppression.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/non_max_suppression.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TfLiteRegistration = type { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, i32 (%struct.TfLiteContext*, %struct.TfLiteRegistration*, %struct.TfLiteIntArray*, %struct.TfLiteDelegate*)*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%class.anon = type { i8 }
%"class.std::__1::priority_queue" = type <{ %"class.std::__1::deque", %class.anon, [7 x i8] }>
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.1" }
%"struct.std::__1::__split_buffer" = type { %struct.Candidate**, %struct.Candidate**, %struct.Candidate**, %"class.std::__1::__compressed_pair" }
%struct.Candidate = type { i32, float, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %struct.Candidate** }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"struct.tflite::reference_ops::BoxCornerEncoding" = type { float, float, float, float }
%"class.std::__1::__deque_iterator" = type { %struct.Candidate**, %struct.Candidate* }
%"struct.std::__1::__split_buffer.6" = type { %struct.Candidate**, %struct.Candidate**, %struct.Candidate**, %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.std::__1::allocator"* }
%"class.std::__1::allocator" = type { i8 }

$_ZN6tflite13reference_ops17NonMaxSuppressionEPKfiS2_ifffPiPfS3_ = comdat any

$_ZNSt3__114priority_queueIZN6tflite13reference_ops17NonMaxSuppressionEPKfiS4_ifffPiPfS5_E9CandidateNS_5dequeIS7_NS_9allocatorIS7_EEEEZNS2_17NonMaxSuppressionES4_iS4_ifffS5_S6_S5_EUlS7_S7_E_E3popEv = comdat any

$_ZNSt3__15dequeIZN6tflite13reference_ops17NonMaxSuppressionEPKfiS4_ifffPiPfS5_E9CandidateNS_9allocatorIS7_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPZN6tflite13reference_ops17NonMaxSuppressionEPKfiS4_ifffPiPfS5_E9CandidateNS_9allocatorIS8_EEE9push_backEOS8_ = comdat any

$_ZNSt3__114__split_bufferIPZN6tflite13reference_ops17NonMaxSuppressionEPKfiS4_ifffPiPfS5_E9CandidateNS_9allocatorIS8_EEE10push_frontEOS8_ = comdat any

$_ZNSt3__114__split_bufferIPZN6tflite13reference_ops17NonMaxSuppressionEPKfiS4_ifffPiPfS5_E9CandidateRNS_9allocatorIS8_EEE10push_frontERKS8_ = comdat any

$_ZNSt3__19__sift_upIRZN6tflite13reference_ops17NonMaxSuppressionEPKfiS4_ifffPiPfS5_EUlZNS2_17NonMaxSuppressionES4_iS4_ifffS5_S6_S5_E9CandidateS7_E_NS_16__deque_iteratorIS7_PS7_RS7_PSB_lLl0EEEEEvT0_SF_T_NS_15iterator_traitsISF_E15difference_typeE = comdat any

$_ZNSt3__111__sift_downIRZN6tflite13reference_ops17NonMaxSuppressionEPKfiS4_ifffPiPfS5_EUlZNS2_17NonMaxSuppressionES4_iS4_ifffS5_S6_S5_E9CandidateS7_E_NS_16__deque_iteratorIS7_PS7_RS7_PSB_lLl0EEEEEvT0_SF_T_NS_15iterator_traitsISF_E15difference_typeESF_ = comdat any

@.str = private unnamed_addr constant [41 x i8] c"Found NMS op with invalid num inputs: %d\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.2 = private unnamed_addr constant [76 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/non_max_suppression.cc\00", align 1
@.str.3 = private unnamed_addr constant [18 x i8] c"input_boxes->type\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"kTfLiteFloat32\00", align 1
@.str.5 = private unnamed_addr constant [27 x i8] c"NumDimensions(input_boxes)\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.7 = private unnamed_addr constant [32 x i8] c"SizeOfDimension(input_boxes, 1)\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"4\00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c"input_scores->type\00", align 1
@.str.10 = private unnamed_addr constant [28 x i8] c"NumDimensions(input_scores)\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.12 = private unnamed_addr constant [10 x i8] c"num_boxes\00", align 1
@.str.13 = private unnamed_addr constant [33 x i8] c"SizeOfDimension(input_scores, 0)\00", align 1
@.str.14 = private unnamed_addr constant [28 x i8] c"input_max_output_size->type\00", align 1
@.str.15 = private unnamed_addr constant [13 x i8] c"kTfLiteInt32\00", align 1
@.str.16 = private unnamed_addr constant [37 x i8] c"NumDimensions(input_max_output_size)\00", align 1
@.str.17 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.18 = private unnamed_addr constant [23 x i8] c"%s:%d %s was not true.\00", align 1
@.str.19 = private unnamed_addr constant [29 x i8] c"(max_output_size_value >= 0)\00", align 1
@.str.20 = private unnamed_addr constant [26 x i8] c"input_iou_threshold->type\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"NumDimensions(input_iou_threshold)\00", align 1
@.str.22 = private unnamed_addr constant [37 x i8] c"NumDimensions(input_score_threshold)\00", align 1
@.str.23 = private unnamed_addr constant [18 x i8] c"input_sigma->type\00", align 1
@.str.24 = private unnamed_addr constant [27 x i8] c"NumDimensions(input_sigma)\00", align 1
@.str.25 = private unnamed_addr constant [17 x i8] c"NumOutputs(node)\00", align 1
@.str.26 = private unnamed_addr constant [2 x i8] c"3\00", align 1
@.str.27 = private unnamed_addr constant [37 x i8] c"Invalid sigma value for soft NMS: %f\00", align 1
@_ZZN6tflite3ops7builtin31Register_NON_MAX_SUPPRESSION_V4EvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin19non_max_suppression7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin19non_max_suppression4EvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin31Register_NON_MAX_SUPPRESSION_V5EvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin19non_max_suppression7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin19non_max_suppression4EvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin19non_max_suppression14SetTensorSizesEP13TfLiteContextP12TfLiteTensorSt16initializer_listIiE(%struct.TfLiteContext*, %struct.TfLiteTensor*, i32*, i64) local_unnamed_addr #0 {
  %5 = trunc i64 %3 to i32
  %6 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %5) #10
  %7 = getelementptr inbounds i32, i32* %2, i64 %3
  %8 = icmp eq i64 %3, 0
  br i1 %8, label %134, label %9

9:                                                ; preds = %4
  %10 = shl nsw i64 %3, 2
  %11 = add i64 %10, -4
  %12 = lshr exact i64 %11, 2
  %13 = add nuw nsw i64 %12, 1
  %14 = icmp ult i64 %13, 8
  br i1 %14, label %15, label %41

15:                                               ; preds = %132, %41, %9
  %16 = phi i64 [ 0, %41 ], [ 0, %9 ], [ %55, %132 ]
  %17 = phi i32* [ %2, %41 ], [ %2, %9 ], [ %56, %132 ]
  %18 = ptrtoint i32* %17 to i64
  %19 = add i64 %3, -1
  %20 = getelementptr i32, i32* %2, i64 %19
  %21 = ptrtoint i32* %20 to i64
  %22 = sub i64 %21, %18
  %23 = lshr i64 %22, 2
  %24 = add nuw nsw i64 %23, 1
  %25 = and i64 %24, 3
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %37, label %27

27:                                               ; preds = %15, %27
  %28 = phi i64 [ %32, %27 ], [ %16, %15 ]
  %29 = phi i32* [ %34, %27 ], [ %17, %15 ]
  %30 = phi i64 [ %35, %27 ], [ %25, %15 ]
  %31 = load i32, i32* %29, align 4
  %32 = add nuw nsw i64 %28, 1
  %33 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %28
  store i32 %31, i32* %33, align 4
  %34 = getelementptr inbounds i32, i32* %29, i64 1
  %35 = add i64 %30, -1
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %27, !llvm.loop !2

37:                                               ; preds = %27, %15
  %38 = phi i64 [ %16, %15 ], [ %32, %27 ]
  %39 = phi i32* [ %17, %15 ], [ %34, %27 ]
  %40 = icmp ult i64 %22, 12
  br i1 %40, label %134, label %138

41:                                               ; preds = %9
  %42 = getelementptr %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 1
  %43 = shl nsw i64 %3, 2
  %44 = add i64 %43, -4
  %45 = lshr exact i64 %44, 2
  %46 = add nuw nsw i64 %45, 2
  %47 = add nuw nsw i64 %45, 1
  %48 = getelementptr i32, i32* %2, i64 %47
  %49 = bitcast i32* %48 to %struct.TfLiteIntArray*
  %50 = icmp ult %struct.TfLiteIntArray* %42, %49
  %51 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 %46, i32 0
  %52 = icmp ugt i32* %51, %2
  %53 = and i1 %50, %52
  br i1 %53, label %15, label %54

54:                                               ; preds = %41
  %55 = and i64 %13, 9223372036854775800
  %56 = getelementptr i32, i32* %2, i64 %55
  %57 = add nsw i64 %55, -8
  %58 = lshr exact i64 %57, 3
  %59 = add nuw nsw i64 %58, 1
  %60 = and i64 %59, 3
  %61 = icmp ult i64 %57, 24
  br i1 %61, label %113, label %62

62:                                               ; preds = %54
  %63 = sub nsw i64 %59, %60
  br label %64

64:                                               ; preds = %64, %62
  %65 = phi i64 [ 0, %62 ], [ %110, %64 ]
  %66 = phi i64 [ %63, %62 ], [ %111, %64 ]
  %67 = getelementptr i32, i32* %2, i64 %65
  %68 = bitcast i32* %67 to <4 x i32>*
  %69 = load <4 x i32>, <4 x i32>* %68, align 4, !alias.scope !4
  %70 = getelementptr i32, i32* %67, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  %72 = load <4 x i32>, <4 x i32>* %71, align 4, !alias.scope !4
  %73 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %65
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> %69, <4 x i32>* %74, align 4, !alias.scope !7, !noalias !4
  %75 = getelementptr inbounds i32, i32* %73, i64 4
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> %72, <4 x i32>* %76, align 4, !alias.scope !7, !noalias !4
  %77 = or i64 %65, 8
  %78 = getelementptr i32, i32* %2, i64 %77
  %79 = bitcast i32* %78 to <4 x i32>*
  %80 = load <4 x i32>, <4 x i32>* %79, align 4, !alias.scope !4
  %81 = getelementptr i32, i32* %78, i64 4
  %82 = bitcast i32* %81 to <4 x i32>*
  %83 = load <4 x i32>, <4 x i32>* %82, align 4, !alias.scope !4
  %84 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %77
  %85 = bitcast i32* %84 to <4 x i32>*
  store <4 x i32> %80, <4 x i32>* %85, align 4, !alias.scope !7, !noalias !4
  %86 = getelementptr inbounds i32, i32* %84, i64 4
  %87 = bitcast i32* %86 to <4 x i32>*
  store <4 x i32> %83, <4 x i32>* %87, align 4, !alias.scope !7, !noalias !4
  %88 = or i64 %65, 16
  %89 = getelementptr i32, i32* %2, i64 %88
  %90 = bitcast i32* %89 to <4 x i32>*
  %91 = load <4 x i32>, <4 x i32>* %90, align 4, !alias.scope !4
  %92 = getelementptr i32, i32* %89, i64 4
  %93 = bitcast i32* %92 to <4 x i32>*
  %94 = load <4 x i32>, <4 x i32>* %93, align 4, !alias.scope !4
  %95 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %88
  %96 = bitcast i32* %95 to <4 x i32>*
  store <4 x i32> %91, <4 x i32>* %96, align 4, !alias.scope !7, !noalias !4
  %97 = getelementptr inbounds i32, i32* %95, i64 4
  %98 = bitcast i32* %97 to <4 x i32>*
  store <4 x i32> %94, <4 x i32>* %98, align 4, !alias.scope !7, !noalias !4
  %99 = or i64 %65, 24
  %100 = getelementptr i32, i32* %2, i64 %99
  %101 = bitcast i32* %100 to <4 x i32>*
  %102 = load <4 x i32>, <4 x i32>* %101, align 4, !alias.scope !4
  %103 = getelementptr i32, i32* %100, i64 4
  %104 = bitcast i32* %103 to <4 x i32>*
  %105 = load <4 x i32>, <4 x i32>* %104, align 4, !alias.scope !4
  %106 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %99
  %107 = bitcast i32* %106 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %107, align 4, !alias.scope !7, !noalias !4
  %108 = getelementptr inbounds i32, i32* %106, i64 4
  %109 = bitcast i32* %108 to <4 x i32>*
  store <4 x i32> %105, <4 x i32>* %109, align 4, !alias.scope !7, !noalias !4
  %110 = add i64 %65, 32
  %111 = add i64 %66, -4
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %64, !llvm.loop !9

113:                                              ; preds = %64, %54
  %114 = phi i64 [ 0, %54 ], [ %110, %64 ]
  %115 = icmp eq i64 %60, 0
  br i1 %115, label %132, label %116

116:                                              ; preds = %113, %116
  %117 = phi i64 [ %129, %116 ], [ %114, %113 ]
  %118 = phi i64 [ %130, %116 ], [ %60, %113 ]
  %119 = getelementptr i32, i32* %2, i64 %117
  %120 = bitcast i32* %119 to <4 x i32>*
  %121 = load <4 x i32>, <4 x i32>* %120, align 4, !alias.scope !4
  %122 = getelementptr i32, i32* %119, i64 4
  %123 = bitcast i32* %122 to <4 x i32>*
  %124 = load <4 x i32>, <4 x i32>* %123, align 4, !alias.scope !4
  %125 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %117
  %126 = bitcast i32* %125 to <4 x i32>*
  store <4 x i32> %121, <4 x i32>* %126, align 4, !alias.scope !7, !noalias !4
  %127 = getelementptr inbounds i32, i32* %125, i64 4
  %128 = bitcast i32* %127 to <4 x i32>*
  store <4 x i32> %124, <4 x i32>* %128, align 4, !alias.scope !7, !noalias !4
  %129 = add i64 %117, 8
  %130 = add i64 %118, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %116, !llvm.loop !11

132:                                              ; preds = %116, %113
  %133 = icmp eq i64 %13, %55
  br i1 %133, label %134, label %15

134:                                              ; preds = %37, %138, %132, %4
  %135 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %136 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %135, align 8
  %137 = tail call i32 %136(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %1, %struct.TfLiteIntArray* %6) #10
  ret i32 %137

138:                                              ; preds = %37, %138
  %139 = phi i64 [ %154, %138 ], [ %38, %37 ]
  %140 = phi i32* [ %156, %138 ], [ %39, %37 ]
  %141 = load i32, i32* %140, align 4
  %142 = add nuw nsw i64 %139, 1
  %143 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %139
  store i32 %141, i32* %143, align 4
  %144 = getelementptr inbounds i32, i32* %140, i64 1
  %145 = load i32, i32* %144, align 4
  %146 = add nuw nsw i64 %139, 2
  %147 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %142
  store i32 %145, i32* %147, align 4
  %148 = getelementptr inbounds i32, i32* %140, i64 2
  %149 = load i32, i32* %148, align 4
  %150 = add nuw nsw i64 %139, 3
  %151 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %146
  store i32 %149, i32* %151, align 4
  %152 = getelementptr inbounds i32, i32* %140, i64 3
  %153 = load i32, i32* %152, align 4
  %154 = add nuw nsw i64 %139, 4
  %155 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %150
  store i32 %153, i32* %155, align 4
  %156 = getelementptr inbounds i32, i32* %140, i64 4
  %157 = icmp eq i32* %156, %7
  br i1 %157, label %134, label %138, !llvm.loop !12
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin19non_max_suppression7PrepareEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #0 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 6
  %8 = add i32 %6, -5
  %9 = icmp ugt i32 %8, 1
  br i1 %9, label %10, label %13

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %12 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %11, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %12(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0), i32 %6) #10
  br label %317

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %15, 0
  br i1 %16, label %22, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %19 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %18, align 8
  %20 = sext i32 %15 to i64
  %21 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %19, i64 %20
  br label %22

22:                                               ; preds = %13, %17
  %23 = phi %struct.TfLiteTensor* [ %21, %17 ], [ null, %13 ]
  %24 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %23, i64 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %29 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %28, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %29(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.2, i64 0, i64 0), i32 83, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i32 %25, i32 1) #10
  br label %317

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %23, i64 0, i32 2
  %32 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %31, align 8
  %33 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 2
  br i1 %35, label %39, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %38 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %37, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %38(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.2, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i32 %34, i32 2) #10
  br label %317

39:                                               ; preds = %30
  %40 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %32, i64 0, i32 1, i64 1
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 4
  br i1 %42, label %46, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %45 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %44, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %45(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.2, i64 0, i64 0), i32 85, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i32 %41, i32 4) #10
  br label %317

46:                                               ; preds = %39
  %47 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %32, i64 0, i32 1, i64 0
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 1
  %50 = load i32, i32* %49, align 4
  %51 = icmp slt i32 %50, 0
  br i1 %51, label %57, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %54 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %53, align 8
  %55 = sext i32 %50 to i64
  %56 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %54, i64 %55
  br label %57

57:                                               ; preds = %46, %52
  %58 = phi %struct.TfLiteTensor* [ %56, %52 ], [ null, %46 ]
  %59 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 0, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %65, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %64 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %63, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %64(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.2, i64 0, i64 0), i32 89, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i32 %60, i32 1) #10
  br label %317

65:                                               ; preds = %57
  %66 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 0, i32 2
  %67 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %66, align 8
  %68 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %67, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %74, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %73 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %72, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %73(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.2, i64 0, i64 0), i32 90, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0), i32 %69, i32 1) #10
  br label %317

74:                                               ; preds = %65
  %75 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %67, i64 0, i32 1, i64 0
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %48, %76
  br i1 %77, label %81, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %80 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %79, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %80(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.2, i64 0, i64 0), i32 91, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0), i32 %48, i32 %76) #10
  br label %317

81:                                               ; preds = %74
  %82 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 2
  %83 = load i32, i32* %82, align 4
  %84 = icmp slt i32 %83, 0
  br i1 %84, label %90, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %87 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %86, align 8
  %88 = sext i32 %83 to i64
  %89 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %87, i64 %88
  br label %90

90:                                               ; preds = %81, %85
  %91 = phi %struct.TfLiteTensor* [ %89, %85 ], [ null, %81 ]
  %92 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %91, i64 0, i32 0
  %93 = load i32, i32* %92, align 8
  %94 = icmp eq i32 %93, 2
  br i1 %94, label %98, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %97 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %96, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %97(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.2, i64 0, i64 0), i32 96, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i64 0, i64 0), i32 %93, i32 2) #10
  br label %317

98:                                               ; preds = %90
  %99 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %91, i64 0, i32 2
  %100 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %99, align 8
  %101 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %100, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %107, label %104

104:                                              ; preds = %98
  %105 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %106 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %105, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %106(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.2, i64 0, i64 0), i32 97, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), i32 %102, i32 0) #10
  br label %317

107:                                              ; preds = %98
  %108 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %91, i64 0, i32 4
  %109 = load i32, i32* %108, align 8
  %110 = icmp eq i32 %109, 1
  br i1 %110, label %111, label %123

111:                                              ; preds = %107
  %112 = icmp eq %struct.TfLiteTensor* %91, null
  br i1 %112, label %116, label %113

113:                                              ; preds = %111
  %114 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %91, i64 0, i32 1, i32 0
  %115 = load i32*, i32** %114, align 8
  br label %116

116:                                              ; preds = %111, %113
  %117 = phi i32* [ %115, %113 ], [ null, %111 ]
  %118 = load i32, i32* %117, align 4
  %119 = icmp sgt i32 %118, -1
  br i1 %119, label %123, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %122 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %121, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %122(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.2, i64 0, i64 0), i32 102, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.19, i64 0, i64 0)) #10
  br label %317

123:                                              ; preds = %116, %107
  %124 = phi i32 [ %118, %116 ], [ 0, %107 ]
  %125 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 3
  %126 = load i32, i32* %125, align 4
  %127 = icmp slt i32 %126, 0
  br i1 %127, label %133, label %128

128:                                              ; preds = %123
  %129 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %130 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %129, align 8
  %131 = sext i32 %126 to i64
  %132 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %130, i64 %131
  br label %133

133:                                              ; preds = %123, %128
  %134 = phi %struct.TfLiteTensor* [ %132, %128 ], [ null, %123 ]
  %135 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %134, i64 0, i32 0
  %136 = load i32, i32* %135, align 8
  %137 = icmp eq i32 %136, 1
  br i1 %137, label %141, label %138

138:                                              ; preds = %133
  %139 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %140 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %139, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %140(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.2, i64 0, i64 0), i32 108, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i32 %136, i32 1) #10
  br label %317

141:                                              ; preds = %133
  %142 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %134, i64 0, i32 2
  %143 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %142, align 8
  %144 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %143, i64 0, i32 0
  %145 = load i32, i32* %144, align 4
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %150, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %149 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %148, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %149(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.2, i64 0, i64 0), i32 109, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), i32 %145, i32 0) #10
  br label %317

150:                                              ; preds = %141
  %151 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 4
  %152 = load i32, i32* %151, align 4
  %153 = icmp slt i32 %152, 0
  br i1 %153, label %159, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %156 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %155, align 8
  %157 = sext i32 %152 to i64
  %158 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %156, i64 %157
  br label %159

159:                                              ; preds = %154, %150
  %160 = phi %struct.TfLiteTensor* [ %158, %154 ], [ null, %150 ]
  %161 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %160, i64 0, i32 2
  %162 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %161, align 8
  %163 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %162, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %169, label %166

166:                                              ; preds = %159
  %167 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %168 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %167, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %168(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.2, i64 0, i64 0), i32 113, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), i32 %164, i32 0) #10
  br label %317

169:                                              ; preds = %159
  br i1 %7, label %170, label %268

170:                                              ; preds = %169
  %171 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 5
  %172 = load i32, i32* %171, align 4
  %173 = icmp slt i32 %172, 0
  br i1 %173, label %179, label %174

174:                                              ; preds = %170
  %175 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %176 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %175, align 8
  %177 = sext i32 %172 to i64
  %178 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %176, i64 %177
  br label %179

179:                                              ; preds = %170, %174
  %180 = phi %struct.TfLiteTensor* [ %178, %174 ], [ null, %170 ]
  %181 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %180, i64 0, i32 0
  %182 = load i32, i32* %181, align 8
  %183 = icmp eq i32 %182, 1
  br i1 %183, label %187, label %184

184:                                              ; preds = %179
  %185 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %186 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %185, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %186(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.2, i64 0, i64 0), i32 118, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i32 %182, i32 1) #10
  br label %317

187:                                              ; preds = %179
  %188 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %180, i64 0, i32 2
  %189 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %188, align 8
  %190 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %189, i64 0, i32 0
  %191 = load i32, i32* %190, align 4
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %196, label %193

193:                                              ; preds = %187
  %194 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %195 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %194, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %195(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.2, i64 0, i64 0), i32 119, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), i32 %191, i32 0) #10
  br label %317

196:                                              ; preds = %187
  %197 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %198 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %197, align 8
  %199 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %198, i64 0, i32 0
  %200 = load i32, i32* %199, align 4
  %201 = icmp eq i32 %200, 3
  br i1 %201, label %205, label %202

202:                                              ; preds = %196
  %203 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %204 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %203, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %204(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.2, i64 0, i64 0), i32 121, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.26, i64 0, i64 0), i32 %200, i32 3) #10
  br label %317

205:                                              ; preds = %196
  %206 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %198, i64 0, i32 1, i64 0
  %207 = load i32, i32* %206, align 4
  %208 = icmp slt i32 %207, 0
  br i1 %208, label %214, label %209

209:                                              ; preds = %205
  %210 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %211 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %210, align 8
  %212 = sext i32 %207 to i64
  %213 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %211, i64 %212
  br label %214

214:                                              ; preds = %205, %209
  %215 = phi %struct.TfLiteTensor* [ %213, %209 ], [ null, %205 ]
  %216 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %215, i64 0, i32 0
  store i32 2, i32* %216, align 8
  %217 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %197, align 8
  %218 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %217, i64 0, i32 1, i64 1
  %219 = load i32, i32* %218, align 4
  %220 = icmp slt i32 %219, 0
  br i1 %220, label %226, label %221

221:                                              ; preds = %214
  %222 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %223 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %222, align 8
  %224 = sext i32 %219 to i64
  %225 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %223, i64 %224
  br label %226

226:                                              ; preds = %214, %221
  %227 = phi %struct.TfLiteTensor* [ %225, %221 ], [ null, %214 ]
  %228 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %227, i64 0, i32 0
  store i32 1, i32* %228, align 8
  %229 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %197, align 8
  %230 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %229, i64 0, i32 1, i64 2
  %231 = load i32, i32* %230, align 4
  %232 = icmp slt i32 %231, 0
  br i1 %232, label %238, label %233

233:                                              ; preds = %226
  %234 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %235 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %234, align 8
  %236 = sext i32 %231 to i64
  %237 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %235, i64 %236
  br label %238

238:                                              ; preds = %233, %226
  %239 = phi %struct.TfLiteTensor* [ %237, %233 ], [ null, %226 ]
  %240 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %239, i64 0, i32 0
  store i32 2, i32* %240, align 8
  %241 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 0) #10
  %242 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %243 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %242, align 8
  %244 = tail call i32 %243(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %239, %struct.TfLiteIntArray* %241) #10
  br i1 %110, label %245, label %254

245:                                              ; preds = %238
  %246 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 1) #10
  %247 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %246, i64 0, i32 1, i64 0
  store i32 %124, i32* %247, align 4
  %248 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %242, align 8
  %249 = call i32 %248(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %215, %struct.TfLiteIntArray* %246) #10
  %250 = call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 1) #10
  %251 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %250, i64 0, i32 1, i64 0
  store i32 %124, i32* %251, align 4
  %252 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %242, align 8
  %253 = call i32 %252(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %227, %struct.TfLiteIntArray* %250) #10
  br label %317

254:                                              ; preds = %238
  %255 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %215, i64 0, i32 4
  %256 = load i32, i32* %255, align 8
  %257 = icmp eq i32 %256, 4
  br i1 %257, label %261, label %258

258:                                              ; preds = %254
  store i32 4, i32* %255, align 8
  %259 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %215, i64 0, i32 1
  %260 = bitcast %union.TfLitePtrUnion* %259 to i8**
  store i8* null, i8** %260, align 8
  br label %261

261:                                              ; preds = %254, %258
  %262 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %227, i64 0, i32 4
  %263 = load i32, i32* %262, align 8
  %264 = icmp eq i32 %263, 4
  br i1 %264, label %317, label %265

265:                                              ; preds = %261
  store i32 4, i32* %262, align 8
  %266 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %227, i64 0, i32 1
  %267 = bitcast %union.TfLitePtrUnion* %266 to i8**
  store i8* null, i8** %267, align 8
  br label %317

268:                                              ; preds = %169
  %269 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %270 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %269, align 8
  %271 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %270, i64 0, i32 0
  %272 = load i32, i32* %271, align 4
  %273 = icmp eq i32 %272, 2
  br i1 %273, label %277, label %274

274:                                              ; preds = %268
  %275 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %276 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %275, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %276(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.2, i64 0, i64 0), i32 141, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i32 %272, i32 2) #10
  br label %317

277:                                              ; preds = %268
  %278 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %270, i64 0, i32 1, i64 0
  %279 = load i32, i32* %278, align 4
  %280 = icmp slt i32 %279, 0
  br i1 %280, label %286, label %281

281:                                              ; preds = %277
  %282 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %283 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %282, align 8
  %284 = sext i32 %279 to i64
  %285 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %283, i64 %284
  br label %286

286:                                              ; preds = %277, %281
  %287 = phi %struct.TfLiteTensor* [ %285, %281 ], [ null, %277 ]
  %288 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %287, i64 0, i32 0
  store i32 2, i32* %288, align 8
  %289 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %269, align 8
  %290 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %289, i64 0, i32 1, i64 1
  %291 = load i32, i32* %290, align 4
  %292 = icmp slt i32 %291, 0
  br i1 %292, label %298, label %293

293:                                              ; preds = %286
  %294 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %295 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %294, align 8
  %296 = sext i32 %291 to i64
  %297 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %295, i64 %296
  br label %298

298:                                              ; preds = %293, %286
  %299 = phi %struct.TfLiteTensor* [ %297, %293 ], [ null, %286 ]
  %300 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %299, i64 0, i32 0
  store i32 2, i32* %300, align 8
  %301 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 0) #10
  %302 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %303 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %302, align 8
  %304 = tail call i32 %303(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %299, %struct.TfLiteIntArray* %301) #10
  br i1 %110, label %305, label %310

305:                                              ; preds = %298
  %306 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 1) #10
  %307 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %306, i64 0, i32 1, i64 0
  store i32 %124, i32* %307, align 4
  %308 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %302, align 8
  %309 = call i32 %308(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %287, %struct.TfLiteIntArray* %306) #10
  br label %317

310:                                              ; preds = %298
  %311 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %287, i64 0, i32 4
  %312 = load i32, i32* %311, align 8
  %313 = icmp eq i32 %312, 4
  br i1 %313, label %317, label %314

314:                                              ; preds = %310
  store i32 4, i32* %311, align 8
  %315 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %287, i64 0, i32 1
  %316 = bitcast %union.TfLitePtrUnion* %315 to i8**
  store i8* null, i8** %316, align 8
  br label %317

317:                                              ; preds = %314, %310, %265, %261, %27, %36, %43, %95, %104, %138, %147, %245, %305, %202, %193, %184, %274, %166, %120, %78, %71, %62, %10
  %318 = phi i32 [ 1, %10 ], [ 1, %27 ], [ 1, %36 ], [ 1, %43 ], [ 1, %62 ], [ 1, %71 ], [ 1, %78 ], [ 1, %95 ], [ 1, %104 ], [ 1, %120 ], [ 1, %138 ], [ 1, %147 ], [ 1, %166 ], [ 1, %274 ], [ 1, %184 ], [ 1, %193 ], [ 1, %202 ], [ 0, %305 ], [ 0, %245 ], [ 0, %261 ], [ 0, %265 ], [ 0, %310 ], [ 0, %314 ]
  ret i32 %318
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6tflite3ops7builtin19non_max_suppression27ResetUnusedElementsToZeroesEiiPiPf(i32, i32, i32* nocapture, float*) local_unnamed_addr #3 {
  %5 = icmp slt i32 %1, %0
  br i1 %5, label %6, label %24

6:                                                ; preds = %4
  %7 = icmp eq float* %3, null
  %8 = sext i32 %1 to i64
  %9 = sext i32 %0 to i64
  %10 = sub nsw i64 %9, %8
  %11 = xor i64 %8, -1
  %12 = and i64 %10, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds i32, i32* %2, i64 %8
  store i32 0, i32* %15, align 4
  br i1 %7, label %18, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds float, float* %3, i64 %8
  store float 0.000000e+00, float* %17, align 4
  br label %18

18:                                               ; preds = %16, %14
  %19 = add nsw i64 %8, 1
  br label %20

20:                                               ; preds = %6, %18
  %21 = phi i64 [ %8, %6 ], [ %19, %18 ]
  %22 = sub nsw i64 0, %9
  %23 = icmp eq i64 %11, %22
  br i1 %23, label %24, label %25

24:                                               ; preds = %20, %35, %4
  ret void

25:                                               ; preds = %20, %35
  %26 = phi i64 [ %36, %35 ], [ %21, %20 ]
  %27 = getelementptr inbounds i32, i32* %2, i64 %26
  store i32 0, i32* %27, align 4
  br i1 %7, label %30, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds float, float* %3, i64 %26
  store float 0.000000e+00, float* %29, align 4
  br label %30

30:                                               ; preds = %25, %28
  %31 = add nsw i64 %26, 1
  %32 = getelementptr inbounds i32, i32* %2, i64 %31
  store i32 0, i32* %32, align 4
  br i1 %7, label %35, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds float, float* %3, i64 %31
  store float 0.000000e+00, float* %34, align 4
  br label %35

35:                                               ; preds = %33, %30
  %36 = add nsw i64 %26, 2
  %37 = icmp eq i64 %36, %9
  br i1 %37, label %24, label %25
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin19non_max_suppression4EvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #0 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %12 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %11, align 8
  %13 = sext i32 %8 to i64
  %14 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %12, i64 %13
  br label %15

15:                                               ; preds = %2, %10
  %16 = phi %struct.TfLiteTensor* [ %14, %10 ], [ null, %2 ]
  %17 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %16, i64 0, i32 2
  %18 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %17, align 8
  %19 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %18, i64 0, i32 1, i64 0
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %15
  %25 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %26 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %25, align 8
  %27 = sext i32 %22 to i64
  %28 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 %27
  br label %29

29:                                               ; preds = %15, %24
  %30 = phi %struct.TfLiteTensor* [ %28, %24 ], [ null, %15 ]
  %31 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %32, 0
  br i1 %33, label %43, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %36 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %35, align 8
  %37 = sext i32 %32 to i64
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 %37
  %39 = icmp eq %struct.TfLiteTensor* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 %37, i32 1, i32 0
  %42 = load i32*, i32** %41, align 8
  br label %43

43:                                               ; preds = %29, %34, %40
  %44 = phi %struct.TfLiteTensor* [ %38, %40 ], [ null, %34 ], [ null, %29 ]
  %45 = phi i32* [ %42, %40 ], [ null, %34 ], [ null, %29 ]
  %46 = load i32, i32* %45, align 4
  %47 = icmp sgt i32 %46, -1
  br i1 %47, label %51, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %50 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %49, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %50(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.2, i64 0, i64 0), i32 189, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.19, i64 0, i64 0)) #10
  br label %249

51:                                               ; preds = %43
  %52 = icmp eq i32 %6, 6
  %53 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 4
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 1
  %56 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 3
  %57 = load i32, i32* %56, align 4
  %58 = icmp slt i32 %57, 0
  br i1 %58, label %69, label %59

59:                                               ; preds = %51
  %60 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %61 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %60, align 8
  %62 = sext i32 %57 to i64
  %63 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %61, i64 %62
  %64 = icmp eq %struct.TfLiteTensor* %63, null
  br i1 %64, label %69, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %61, i64 %62, i32 1
  %67 = bitcast %union.TfLitePtrUnion* %66 to float**
  %68 = load float*, float** %67, align 8
  br label %69

69:                                               ; preds = %51, %59, %65
  %70 = phi float* [ %68, %65 ], [ null, %59 ], [ null, %51 ]
  %71 = load float, float* %70, align 4
  %72 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 4
  %73 = load i32, i32* %72, align 4
  %74 = icmp slt i32 %73, 0
  br i1 %74, label %85, label %75

75:                                               ; preds = %69
  %76 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %77 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %76, align 8
  %78 = sext i32 %73 to i64
  %79 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %77, i64 %78
  %80 = icmp eq %struct.TfLiteTensor* %79, null
  br i1 %80, label %85, label %81

81:                                               ; preds = %75
  %82 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %77, i64 %78, i32 1
  %83 = bitcast %union.TfLitePtrUnion* %82 to float**
  %84 = load float*, float** %83, align 8
  br label %85

85:                                               ; preds = %69, %75, %81
  %86 = phi float* [ %84, %81 ], [ null, %75 ], [ null, %69 ]
  %87 = load float, float* %86, align 4
  br i1 %52, label %88, label %198

88:                                               ; preds = %85
  %89 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 5
  %90 = load i32, i32* %89, align 4
  %91 = icmp slt i32 %90, 0
  br i1 %91, label %102, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %94 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %93, align 8
  %95 = sext i32 %90 to i64
  %96 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %94, i64 %95
  %97 = icmp eq %struct.TfLiteTensor* %96, null
  br i1 %97, label %102, label %98

98:                                               ; preds = %92
  %99 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %94, i64 %95, i32 1
  %100 = bitcast %union.TfLitePtrUnion* %99 to float**
  %101 = load float*, float** %100, align 8
  br label %102

102:                                              ; preds = %88, %92, %98
  %103 = phi float* [ %101, %98 ], [ null, %92 ], [ null, %88 ]
  %104 = load float, float* %103, align 4
  %105 = fcmp olt float %104, 0.000000e+00
  br i1 %105, label %106, label %110

106:                                              ; preds = %102
  %107 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %108 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %107, align 8
  %109 = fpext float %104 to double
  tail call void (%struct.TfLiteContext*, i8*, ...) %108(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.27, i64 0, i64 0), double %109) #10
  br label %249

110:                                              ; preds = %102
  %111 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %112 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %111, align 8
  %113 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %112, i64 0, i32 1, i64 0
  %114 = load i32, i32* %113, align 4
  %115 = icmp slt i32 %114, 0
  br i1 %115, label %121, label %116

116:                                              ; preds = %110
  %117 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %118 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %117, align 8
  %119 = sext i32 %114 to i64
  %120 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %118, i64 %119
  br label %121

121:                                              ; preds = %110, %116
  %122 = phi %struct.TfLiteTensor* [ %120, %116 ], [ null, %110 ]
  %123 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %112, i64 0, i32 1, i64 1
  %124 = load i32, i32* %123, align 4
  %125 = icmp slt i32 %124, 0
  br i1 %125, label %131, label %126

126:                                              ; preds = %121
  %127 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %128 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %127, align 8
  %129 = sext i32 %124 to i64
  %130 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %128, i64 %129
  br label %131

131:                                              ; preds = %121, %126
  %132 = phi %struct.TfLiteTensor* [ %130, %126 ], [ null, %121 ]
  %133 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %112, i64 0, i32 1, i64 2
  %134 = load i32, i32* %133, align 4
  %135 = icmp slt i32 %134, 0
  br i1 %135, label %141, label %136

136:                                              ; preds = %131
  %137 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %138 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %137, align 8
  %139 = sext i32 %134 to i64
  %140 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %138, i64 %139
  br label %141

141:                                              ; preds = %131, %136
  %142 = phi %struct.TfLiteTensor* [ %140, %136 ], [ null, %131 ]
  br i1 %55, label %153, label %143

143:                                              ; preds = %141
  %144 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 1) #10
  %145 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %144, i64 0, i32 1, i64 0
  store i32 %46, i32* %145, align 4
  %146 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %147 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %146, align 8
  %148 = call i32 %147(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %122, %struct.TfLiteIntArray* %144) #10
  %149 = call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 1) #10
  %150 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %149, i64 0, i32 1, i64 0
  store i32 %46, i32* %150, align 4
  %151 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %146, align 8
  %152 = call i32 %151(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %132, %struct.TfLiteIntArray* %149) #10
  br label %153

153:                                              ; preds = %143, %141
  %154 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %16, i64 0, i32 1
  %155 = bitcast %union.TfLitePtrUnion* %154 to float**
  %156 = load float*, float** %155, align 8
  %157 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 1
  %158 = bitcast %union.TfLitePtrUnion* %157 to float**
  %159 = load float*, float** %158, align 8
  %160 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %122, i64 0, i32 1, i32 0
  %161 = load i32*, i32** %160, align 8
  %162 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %132, i64 0, i32 1
  %163 = bitcast %union.TfLitePtrUnion* %162 to float**
  %164 = load float*, float** %163, align 8
  %165 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %142, i64 0, i32 1, i32 0
  %166 = load i32*, i32** %165, align 8
  call void @_ZN6tflite13reference_ops17NonMaxSuppressionEPKfiS2_ifffPiPfS3_(float* %156, i32 %20, float* %159, i32 %46, float %71, float %87, float %104, i32* %161, float* %164, i32* %166)
  %167 = load i32*, i32** %165, align 8
  %168 = load i32, i32* %167, align 4
  %169 = load i32*, i32** %160, align 8
  %170 = load float*, float** %163, align 8
  %171 = icmp slt i32 %168, %46
  br i1 %171, label %172, label %249

172:                                              ; preds = %153
  %173 = icmp eq float* %170, null
  %174 = sext i32 %168 to i64
  %175 = sext i32 %46 to i64
  %176 = sub nsw i64 %175, %174
  %177 = xor i64 %174, -1
  %178 = and i64 %176, 1
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %186, label %180

180:                                              ; preds = %172
  %181 = getelementptr inbounds i32, i32* %169, i64 %174
  store i32 0, i32* %181, align 4
  br i1 %173, label %184, label %182

182:                                              ; preds = %180
  %183 = getelementptr inbounds float, float* %170, i64 %174
  store float 0.000000e+00, float* %183, align 4
  br label %184

184:                                              ; preds = %182, %180
  %185 = add nsw i64 %174, 1
  br label %186

186:                                              ; preds = %172, %184
  %187 = phi i64 [ %174, %172 ], [ %185, %184 ]
  %188 = sub nsw i64 0, %175
  %189 = icmp eq i64 %177, %188
  br i1 %189, label %249, label %190

190:                                              ; preds = %186, %253
  %191 = phi i64 [ %254, %253 ], [ %187, %186 ]
  %192 = getelementptr inbounds i32, i32* %169, i64 %191
  store i32 0, i32* %192, align 4
  br i1 %173, label %195, label %193

193:                                              ; preds = %190
  %194 = getelementptr inbounds float, float* %170, i64 %191
  store float 0.000000e+00, float* %194, align 4
  br label %195

195:                                              ; preds = %193, %190
  %196 = add nsw i64 %191, 1
  %197 = getelementptr inbounds i32, i32* %169, i64 %196
  store i32 0, i32* %197, align 4
  br i1 %173, label %253, label %251

198:                                              ; preds = %85
  %199 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %200 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %199, align 8
  %201 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %200, i64 0, i32 1, i64 0
  %202 = load i32, i32* %201, align 4
  %203 = icmp slt i32 %202, 0
  br i1 %203, label %209, label %204

204:                                              ; preds = %198
  %205 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %206 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %205, align 8
  %207 = sext i32 %202 to i64
  %208 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %206, i64 %207
  br label %209

209:                                              ; preds = %198, %204
  %210 = phi %struct.TfLiteTensor* [ %208, %204 ], [ null, %198 ]
  %211 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %200, i64 0, i32 1, i64 1
  %212 = load i32, i32* %211, align 4
  %213 = icmp slt i32 %212, 0
  br i1 %213, label %219, label %214

214:                                              ; preds = %209
  %215 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %216 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %215, align 8
  %217 = sext i32 %212 to i64
  %218 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %216, i64 %217
  br label %219

219:                                              ; preds = %209, %214
  %220 = phi %struct.TfLiteTensor* [ %218, %214 ], [ null, %209 ]
  br i1 %55, label %227, label %221

221:                                              ; preds = %219
  %222 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 1) #10
  %223 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %222, i64 0, i32 1, i64 0
  store i32 %46, i32* %223, align 4
  %224 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %225 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %224, align 8
  %226 = call i32 %225(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %210, %struct.TfLiteIntArray* %222) #10
  br label %227

227:                                              ; preds = %221, %219
  %228 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %16, i64 0, i32 1
  %229 = bitcast %union.TfLitePtrUnion* %228 to float**
  %230 = load float*, float** %229, align 8
  %231 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 1
  %232 = bitcast %union.TfLitePtrUnion* %231 to float**
  %233 = load float*, float** %232, align 8
  %234 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %210, i64 0, i32 1, i32 0
  %235 = load i32*, i32** %234, align 8
  %236 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %220, i64 0, i32 1, i32 0
  %237 = load i32*, i32** %236, align 8
  call void @_ZN6tflite13reference_ops17NonMaxSuppressionEPKfiS2_ifffPiPfS3_(float* %230, i32 %20, float* %233, i32 %46, float %71, float %87, float 0.000000e+00, i32* %235, float* null, i32* %237)
  %238 = load i32*, i32** %236, align 8
  %239 = load i32, i32* %238, align 4
  %240 = icmp slt i32 %239, %46
  br i1 %240, label %241, label %249

241:                                              ; preds = %227
  %242 = load i32*, i32** %234, align 8
  %243 = sext i32 %239 to i64
  %244 = sext i32 %46 to i64
  %245 = getelementptr i32, i32* %242, i64 %243
  %246 = bitcast i32* %245 to i8*
  %247 = sub nsw i64 %244, %243
  %248 = shl nsw i64 %247, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %246, i8 0, i64 %248, i1 false)
  br label %249

249:                                              ; preds = %186, %253, %241, %227, %153, %106, %48
  %250 = phi i32 [ 1, %48 ], [ 1, %106 ], [ 0, %153 ], [ 0, %227 ], [ 0, %241 ], [ 0, %253 ], [ 0, %186 ]
  ret i32 %250

251:                                              ; preds = %195
  %252 = getelementptr inbounds float, float* %170, i64 %196
  store float 0.000000e+00, float* %252, align 4
  br label %253

253:                                              ; preds = %251, %195
  %254 = add nsw i64 %191, 2
  %255 = icmp eq i64 %254, %175
  br i1 %255, label %249, label %190
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops17NonMaxSuppressionEPKfiS2_ifffPiPfS3_(float*, i32, float*, i32, float, float, float, i32*, float*, i32*) local_unnamed_addr #4 comdat {
  %11 = alloca %class.anon, align 1
  %12 = alloca %class.anon, align 1
  %13 = alloca %"class.std::__1::priority_queue", align 8
  %14 = bitcast %"class.std::__1::priority_queue"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.std::__1::priority_queue", %"class.std::__1::priority_queue"* %13, i64 0, i32 1, i32 0
  %16 = bitcast i8* %15 to i64*
  store i64 -6148914691236517206, i64* %16, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 48, i1 false) #10
  %17 = icmp sgt i32 %1, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.std::__1::priority_queue", %"class.std::__1::priority_queue"* %13, i64 0, i32 0, i32 0, i32 0, i32 2
  %20 = bitcast %struct.Candidate*** %19 to i64*
  %21 = getelementptr inbounds %"class.std::__1::priority_queue", %"class.std::__1::priority_queue"* %13, i64 0, i32 0, i32 0, i32 0, i32 1
  %22 = bitcast %struct.Candidate*** %21 to i64*
  %23 = getelementptr inbounds %"class.std::__1::priority_queue", %"class.std::__1::priority_queue"* %13, i64 0, i32 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.std::__1::priority_queue", %"class.std::__1::priority_queue"* %13, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::priority_queue", %"class.std::__1::priority_queue"* %13, i64 0, i32 0
  %26 = getelementptr inbounds %class.anon, %class.anon* %12, i64 0, i32 0
  %27 = zext i32 %1 to i64
  br label %37

28:                                               ; preds = %119
  %29 = load i64, i64* %24, align 8
  br label %30

30:                                               ; preds = %28, %10
  %31 = phi i64 [ %29, %28 ], [ 0, %10 ]
  store i32 0, i32* %9, align 4
  %32 = getelementptr inbounds %"class.std::__1::priority_queue", %"class.std::__1::priority_queue"* %13, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %33 = trunc i64 %31 to i32
  %34 = icmp sgt i32 %33, %3
  %35 = select i1 %34, i32 %3, i32 %33
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %344, label %122

37:                                               ; preds = %119, %18
  %38 = phi i64 [ 0, %18 ], [ %120, %119 ]
  %39 = getelementptr inbounds float, float* %2, i64 %38
  %40 = load float, float* %39, align 4
  %41 = fcmp ogt float %40, %5
  br i1 %41, label %42, label %119

42:                                               ; preds = %37
  %43 = load i64, i64* %20, align 8
  %44 = load i64, i64* %22, align 8
  %45 = sub i64 %43, %44
  %46 = ashr exact i64 %45, 3
  %47 = icmp eq i64 %45, 0
  %48 = mul i64 %46, 341
  %49 = add i64 %48, -1
  %50 = select i1 %47, i64 0, i64 %49
  %51 = load i64, i64* %23, align 8
  %52 = load i64, i64* %24, align 8
  %53 = add i64 %52, %51
  %54 = icmp eq i64 %50, %53
  %55 = inttoptr i64 %44 to %struct.Candidate**
  %56 = inttoptr i64 %43 to %struct.Candidate**
  br i1 %54, label %57, label %63

57:                                               ; preds = %42
  call void @_ZNSt3__15dequeIZN6tflite13reference_ops17NonMaxSuppressionEPKfiS4_ifffPiPfS5_E9CandidateNS_9allocatorIS7_EEE19__add_back_capacityEv(%"class.std::__1::deque"* nonnull %25) #10
  %58 = load i64, i64* %24, align 8
  %59 = load i64, i64* %23, align 8
  %60 = load %struct.Candidate**, %struct.Candidate*** %21, align 8
  %61 = load %struct.Candidate**, %struct.Candidate*** %19, align 8
  %62 = add i64 %59, %58
  br label %63

63:                                               ; preds = %57, %42
  %64 = phi i64 [ %62, %57 ], [ %53, %42 ]
  %65 = phi %struct.Candidate** [ %61, %57 ], [ %56, %42 ]
  %66 = phi %struct.Candidate** [ %60, %57 ], [ %55, %42 ]
  %67 = icmp eq %struct.Candidate** %65, %66
  br i1 %67, label %75, label %68

68:                                               ; preds = %63
  %69 = udiv i64 %64, 341
  %70 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %66, i64 %69
  %71 = load %struct.Candidate*, %struct.Candidate** %70, align 8
  %72 = urem i64 %64, 341
  %73 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %71, i64 %72
  %74 = bitcast %struct.Candidate* %73 to i8*
  br label %75

75:                                               ; preds = %68, %63
  %76 = phi i8* [ %74, %68 ], [ null, %63 ]
  %77 = bitcast i8* %76 to i32*
  %78 = trunc i64 %38 to i32
  store i32 %78, i32* %77, align 4
  %79 = getelementptr inbounds i8, i8* %76, i64 4
  %80 = bitcast i8* %79 to float*
  store float %40, float* %80, align 4
  %81 = getelementptr inbounds i8, i8* %76, i64 8
  %82 = bitcast i8* %81 to i32*
  store i32 0, i32* %82, align 4
  %83 = load i64, i64* %24, align 8
  %84 = add i64 %83, 1
  store i64 %84, i64* %24, align 8
  %85 = load %struct.Candidate**, %struct.Candidate*** %21, align 8
  %86 = load i64, i64* %23, align 8
  %87 = udiv i64 %86, 341
  %88 = urem i64 %86, 341
  %89 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %85, i64 %87
  %90 = load %struct.Candidate**, %struct.Candidate*** %19, align 8
  %91 = icmp eq %struct.Candidate** %90, %85
  br i1 %91, label %92, label %96

92:                                               ; preds = %75
  %93 = add i64 %86, %84
  %94 = udiv i64 %93, 341
  %95 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %85, i64 %94
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %26) #10
  br label %114

96:                                               ; preds = %75
  %97 = load %struct.Candidate*, %struct.Candidate** %89, align 8
  %98 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %97, i64 %88
  %99 = add i64 %86, %84
  %100 = udiv i64 %99, 341
  %101 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %85, i64 %100
  %102 = load %struct.Candidate*, %struct.Candidate** %101, align 8
  %103 = urem i64 %99, 341
  %104 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %102, i64 %103
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %26) #10
  %105 = icmp eq %struct.Candidate* %104, %98
  br i1 %105, label %114, label %106

106:                                              ; preds = %96
  %107 = ptrtoint %struct.Candidate** %101 to i64
  %108 = ptrtoint %struct.Candidate** %89 to i64
  %109 = sub i64 %107, %108
  %110 = ashr exact i64 %109, 3
  %111 = mul nsw i64 %110, 341
  %112 = sub nsw i64 %103, %88
  %113 = add i64 %112, %111
  br label %114

114:                                              ; preds = %92, %96, %106
  %115 = phi %struct.Candidate* [ %104, %106 ], [ %98, %96 ], [ null, %92 ]
  %116 = phi %struct.Candidate* [ %98, %106 ], [ %98, %96 ], [ null, %92 ]
  %117 = phi %struct.Candidate** [ %101, %106 ], [ %101, %96 ], [ %95, %92 ]
  %118 = phi i64 [ %113, %106 ], [ 0, %96 ], [ 0, %92 ]
  call void @_ZNSt3__19__sift_upIRZN6tflite13reference_ops17NonMaxSuppressionEPKfiS4_ifffPiPfS5_EUlZNS2_17NonMaxSuppressionES4_iS4_ifffS5_S6_S5_E9CandidateS7_E_NS_16__deque_iteratorIS7_PS7_RS7_PSB_lLl0EEEEEvT0_SF_T_NS_15iterator_traitsISF_E15difference_typeE(%struct.Candidate** %89, %struct.Candidate* %116, %struct.Candidate** %117, %struct.Candidate* %115, %class.anon* nonnull dereferenceable(1) %12, i64 %118) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %26) #10
  br label %119

119:                                              ; preds = %37, %114
  %120 = add nuw nsw i64 %38, 1
  %121 = icmp eq i64 %120, %27
  br i1 %121, label %28, label %37

122:                                              ; preds = %30
  %123 = fcmp ogt float %6, 0.000000e+00
  %124 = fdiv float -5.000000e-01, %6
  %125 = select i1 %123, float %124, float 0.000000e+00
  %126 = icmp slt i32 %35, 1
  %127 = icmp eq i64 %31, 0
  %128 = or i1 %126, %127
  br i1 %128, label %344, label %129

129:                                              ; preds = %122
  %130 = getelementptr inbounds %"class.std::__1::priority_queue", %"class.std::__1::priority_queue"* %13, i64 0, i32 0, i32 0, i32 0, i32 1
  %131 = getelementptr inbounds %"class.std::__1::priority_queue", %"class.std::__1::priority_queue"* %13, i64 0, i32 0, i32 0, i32 1
  %132 = bitcast float* %0 to %"struct.tflite::reference_ops::BoxCornerEncoding"*
  %133 = icmp eq float* %8, null
  %134 = getelementptr inbounds %"class.std::__1::priority_queue", %"class.std::__1::priority_queue"* %13, i64 0, i32 0, i32 0, i32 0, i32 2
  %135 = bitcast %struct.Candidate*** %134 to i64*
  %136 = bitcast %struct.Candidate*** %130 to i64*
  %137 = getelementptr inbounds %"class.std::__1::priority_queue", %"class.std::__1::priority_queue"* %13, i64 0, i32 0
  %138 = getelementptr inbounds %class.anon, %class.anon* %11, i64 0, i32 0
  br label %139

139:                                              ; preds = %129, %338
  %140 = load %struct.Candidate**, %struct.Candidate*** %130, align 8
  %141 = load i64, i64* %131, align 8
  %142 = udiv i64 %141, 341
  %143 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %140, i64 %142
  %144 = load %struct.Candidate*, %struct.Candidate** %143, align 8
  %145 = urem i64 %141, 341
  %146 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %144, i64 %145, i32 0
  %147 = load i32, i32* %146, align 4
  %148 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %144, i64 %145, i32 1
  %149 = bitcast float* %148 to i32*
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %144, i64 %145, i32 2
  %152 = load i32, i32* %151, align 4
  %153 = bitcast i32 %150 to float
  call void @_ZNSt3__114priority_queueIZN6tflite13reference_ops17NonMaxSuppressionEPKfiS4_ifffPiPfS5_E9CandidateNS_5dequeIS7_NS_9allocatorIS7_EEEEZNS2_17NonMaxSuppressionES4_iS4_ifffS5_S6_S5_EUlS7_S7_E_E3popEv(%"class.std::__1::priority_queue"* nonnull %13)
  %154 = load i32, i32* %9, align 4
  %155 = sext i32 %147 to i64
  %156 = getelementptr inbounds %"struct.tflite::reference_ops::BoxCornerEncoding", %"struct.tflite::reference_ops::BoxCornerEncoding"* %132, i64 %155, i32 0
  %157 = getelementptr inbounds %"struct.tflite::reference_ops::BoxCornerEncoding", %"struct.tflite::reference_ops::BoxCornerEncoding"* %132, i64 %155, i32 2
  %158 = getelementptr inbounds %"struct.tflite::reference_ops::BoxCornerEncoding", %"struct.tflite::reference_ops::BoxCornerEncoding"* %132, i64 %155, i32 1
  %159 = getelementptr inbounds %"struct.tflite::reference_ops::BoxCornerEncoding", %"struct.tflite::reference_ops::BoxCornerEncoding"* %132, i64 %155, i32 3
  %160 = sext i32 %154 to i64
  %161 = sext i32 %152 to i64
  br label %162

162:                                              ; preds = %240, %139
  %163 = phi i64 [ %165, %240 ], [ %160, %139 ]
  %164 = phi i32 [ %241, %240 ], [ %150, %139 ]
  %165 = add nsw i64 %163, -1
  %166 = icmp sgt i64 %163, %161
  br i1 %166, label %169, label %167

167:                                              ; preds = %162
  %168 = bitcast i32 %164 to float
  br label %244

169:                                              ; preds = %162
  %170 = getelementptr inbounds i32, i32* %7, i64 %165
  %171 = load i32, i32* %170, align 4
  %172 = sext i32 %171 to i64
  %173 = load float, float* %157, align 4
  %174 = load float, float* %156, align 4
  %175 = fcmp olt float %173, %174
  %176 = select i1 %175, float %173, float %174
  %177 = fcmp olt float %174, %173
  %178 = select i1 %177, float %173, float %174
  %179 = load float, float* %159, align 4
  %180 = load float, float* %158, align 4
  %181 = fcmp olt float %179, %180
  %182 = select i1 %181, float %179, float %180
  %183 = fcmp olt float %180, %179
  %184 = select i1 %183, float %179, float %180
  %185 = getelementptr inbounds %"struct.tflite::reference_ops::BoxCornerEncoding", %"struct.tflite::reference_ops::BoxCornerEncoding"* %132, i64 %172, i32 0
  %186 = getelementptr inbounds %"struct.tflite::reference_ops::BoxCornerEncoding", %"struct.tflite::reference_ops::BoxCornerEncoding"* %132, i64 %172, i32 2
  %187 = load float, float* %186, align 4
  %188 = load float, float* %185, align 4
  %189 = fcmp olt float %187, %188
  %190 = select i1 %189, float %187, float %188
  %191 = fcmp olt float %188, %187
  %192 = select i1 %191, float %187, float %188
  %193 = getelementptr inbounds %"struct.tflite::reference_ops::BoxCornerEncoding", %"struct.tflite::reference_ops::BoxCornerEncoding"* %132, i64 %172, i32 1
  %194 = getelementptr inbounds %"struct.tflite::reference_ops::BoxCornerEncoding", %"struct.tflite::reference_ops::BoxCornerEncoding"* %132, i64 %172, i32 3
  %195 = load float, float* %194, align 4
  %196 = load float, float* %193, align 4
  %197 = fcmp olt float %195, %196
  %198 = select i1 %197, float %195, float %196
  %199 = fcmp olt float %196, %195
  %200 = select i1 %199, float %195, float %196
  %201 = fsub float %178, %176
  %202 = fsub float %184, %182
  %203 = fmul float %201, %202
  %204 = fsub float %192, %190
  %205 = fsub float %200, %198
  %206 = fmul float %204, %205
  %207 = fcmp ole float %203, 0.000000e+00
  %208 = fcmp ole float %206, 0.000000e+00
  %209 = or i1 %207, %208
  br i1 %209, label %229, label %210

210:                                              ; preds = %169
  %211 = fcmp olt float %192, %178
  %212 = select i1 %211, float %192, float %178
  %213 = fcmp olt float %200, %184
  %214 = select i1 %213, float %200, float %184
  %215 = fcmp olt float %176, %190
  %216 = select i1 %215, float %190, float %176
  %217 = fcmp olt float %182, %198
  %218 = select i1 %217, float %198, float %182
  %219 = fsub float %212, %216
  %220 = fcmp olt float %219, 0.000000e+00
  %221 = select i1 %220, float 0.000000e+00, float %219
  %222 = fsub float %214, %218
  %223 = fcmp olt float %222, 0.000000e+00
  %224 = select i1 %223, float 0.000000e+00, float %222
  %225 = fmul float %221, %224
  %226 = fadd float %203, %206
  %227 = fsub float %226, %225
  %228 = fdiv float %225, %227
  br label %229

229:                                              ; preds = %169, %210
  %230 = phi float [ %228, %210 ], [ 0.000000e+00, %169 ]
  %231 = fcmp ult float %230, %4
  br i1 %231, label %232, label %338

232:                                              ; preds = %229
  br i1 %123, label %233, label %240

233:                                              ; preds = %232
  %234 = bitcast i32 %164 to float
  %235 = fmul float %125, %230
  %236 = fmul float %230, %235
  %237 = call float @expf(float %236) #10
  %238 = fmul float %237, %234
  %239 = bitcast float %238 to i32
  br label %240

240:                                              ; preds = %232, %233
  %241 = phi i32 [ %239, %233 ], [ %164, %232 ]
  %242 = bitcast i32 %241 to float
  %243 = fcmp ugt float %242, %5
  br i1 %243, label %162, label %244

244:                                              ; preds = %240, %167
  %245 = phi float [ %168, %167 ], [ %242, %240 ]
  %246 = phi i32 [ %164, %167 ], [ %241, %240 ]
  %247 = load i32, i32* %9, align 4
  %248 = fcmp oeq float %245, %153
  br i1 %248, label %249, label %260

249:                                              ; preds = %244
  %250 = sext i32 %247 to i64
  %251 = getelementptr inbounds i32, i32* %7, i64 %250
  store i32 %147, i32* %251, align 4
  br i1 %133, label %257, label %252

252:                                              ; preds = %249
  %253 = load i32, i32* %9, align 4
  %254 = sext i32 %253 to i64
  %255 = getelementptr inbounds float, float* %8, i64 %254
  %256 = bitcast float* %255 to i32*
  store i32 %246, i32* %256, align 4
  br label %257

257:                                              ; preds = %249, %252
  %258 = load i32, i32* %9, align 4
  %259 = add nsw i32 %258, 1
  store i32 %259, i32* %9, align 4
  br label %260

260:                                              ; preds = %257, %244
  %261 = fcmp ogt float %245, %5
  br i1 %261, label %262, label %338

262:                                              ; preds = %260
  %263 = load i64, i64* %135, align 8
  %264 = load i64, i64* %136, align 8
  %265 = sub i64 %263, %264
  %266 = ashr exact i64 %265, 3
  %267 = icmp eq i64 %265, 0
  %268 = mul i64 %266, 341
  %269 = add i64 %268, -1
  %270 = select i1 %267, i64 0, i64 %269
  %271 = load i64, i64* %131, align 8
  %272 = load i64, i64* %32, align 8
  %273 = add i64 %272, %271
  %274 = icmp eq i64 %270, %273
  %275 = inttoptr i64 %264 to %struct.Candidate**
  %276 = inttoptr i64 %263 to %struct.Candidate**
  br i1 %274, label %277, label %283

277:                                              ; preds = %262
  call void @_ZNSt3__15dequeIZN6tflite13reference_ops17NonMaxSuppressionEPKfiS4_ifffPiPfS5_E9CandidateNS_9allocatorIS7_EEE19__add_back_capacityEv(%"class.std::__1::deque"* nonnull %137) #10
  %278 = load i64, i64* %32, align 8
  %279 = load i64, i64* %131, align 8
  %280 = load %struct.Candidate**, %struct.Candidate*** %130, align 8
  %281 = load %struct.Candidate**, %struct.Candidate*** %134, align 8
  %282 = add i64 %279, %278
  br label %283

283:                                              ; preds = %277, %262
  %284 = phi i64 [ %282, %277 ], [ %273, %262 ]
  %285 = phi %struct.Candidate** [ %281, %277 ], [ %276, %262 ]
  %286 = phi %struct.Candidate** [ %280, %277 ], [ %275, %262 ]
  %287 = icmp eq %struct.Candidate** %285, %286
  br i1 %287, label %295, label %288

288:                                              ; preds = %283
  %289 = udiv i64 %284, 341
  %290 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %286, i64 %289
  %291 = load %struct.Candidate*, %struct.Candidate** %290, align 8
  %292 = urem i64 %284, 341
  %293 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %291, i64 %292
  %294 = bitcast %struct.Candidate* %293 to i8*
  br label %295

295:                                              ; preds = %288, %283
  %296 = phi i8* [ %294, %288 ], [ null, %283 ]
  %297 = bitcast i8* %296 to i32*
  store i32 %147, i32* %297, align 4
  %298 = getelementptr inbounds i8, i8* %296, i64 4
  %299 = bitcast i8* %298 to i32*
  store i32 %246, i32* %299, align 4
  %300 = getelementptr inbounds i8, i8* %296, i64 8
  %301 = bitcast i8* %300 to i32*
  store i32 %247, i32* %301, align 4
  %302 = load i64, i64* %32, align 8
  %303 = add i64 %302, 1
  store i64 %303, i64* %32, align 8
  %304 = load %struct.Candidate**, %struct.Candidate*** %130, align 8
  %305 = load i64, i64* %131, align 8
  %306 = udiv i64 %305, 341
  %307 = urem i64 %305, 341
  %308 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %304, i64 %306
  %309 = load %struct.Candidate**, %struct.Candidate*** %134, align 8
  %310 = icmp eq %struct.Candidate** %309, %304
  br i1 %310, label %311, label %315

311:                                              ; preds = %295
  %312 = add i64 %305, %303
  %313 = udiv i64 %312, 341
  %314 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %304, i64 %313
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %138) #10
  br label %333

315:                                              ; preds = %295
  %316 = load %struct.Candidate*, %struct.Candidate** %308, align 8
  %317 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %316, i64 %307
  %318 = add i64 %305, %303
  %319 = udiv i64 %318, 341
  %320 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %304, i64 %319
  %321 = load %struct.Candidate*, %struct.Candidate** %320, align 8
  %322 = urem i64 %318, 341
  %323 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %321, i64 %322
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %138) #10
  %324 = icmp eq %struct.Candidate* %323, %317
  br i1 %324, label %333, label %325

325:                                              ; preds = %315
  %326 = ptrtoint %struct.Candidate** %320 to i64
  %327 = ptrtoint %struct.Candidate** %308 to i64
  %328 = sub i64 %326, %327
  %329 = ashr exact i64 %328, 3
  %330 = mul nsw i64 %329, 341
  %331 = sub nsw i64 %322, %307
  %332 = add i64 %331, %330
  br label %333

333:                                              ; preds = %311, %315, %325
  %334 = phi %struct.Candidate* [ %323, %325 ], [ %317, %315 ], [ null, %311 ]
  %335 = phi %struct.Candidate* [ %317, %325 ], [ %317, %315 ], [ null, %311 ]
  %336 = phi %struct.Candidate** [ %320, %325 ], [ %320, %315 ], [ %314, %311 ]
  %337 = phi i64 [ %332, %325 ], [ 0, %315 ], [ 0, %311 ]
  call void @_ZNSt3__19__sift_upIRZN6tflite13reference_ops17NonMaxSuppressionEPKfiS4_ifffPiPfS5_EUlZNS2_17NonMaxSuppressionES4_iS4_ifffS5_S6_S5_E9CandidateS7_E_NS_16__deque_iteratorIS7_PS7_RS7_PSB_lLl0EEEEEvT0_SF_T_NS_15iterator_traitsISF_E15difference_typeE(%struct.Candidate** %308, %struct.Candidate* %335, %struct.Candidate** %336, %struct.Candidate* %334, %class.anon* nonnull dereferenceable(1) %11, i64 %337) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %138) #10
  br label %338

338:                                              ; preds = %229, %260, %333
  %339 = load i32, i32* %9, align 4
  %340 = icmp sge i32 %339, %35
  %341 = load i64, i64* %32, align 8
  %342 = icmp eq i64 %341, 0
  %343 = or i1 %340, %342
  br i1 %343, label %344, label %139

344:                                              ; preds = %338, %122, %30
  %345 = phi i64 [ %31, %122 ], [ %31, %30 ], [ %341, %338 ]
  %346 = getelementptr inbounds %"class.std::__1::priority_queue", %"class.std::__1::priority_queue"* %13, i64 0, i32 0, i32 0, i32 0, i32 1
  %347 = load %struct.Candidate**, %struct.Candidate*** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::priority_queue", %"class.std::__1::priority_queue"* %13, i64 0, i32 0, i32 0, i32 1
  %349 = load i64, i64* %348, align 8
  %350 = udiv i64 %349, 341
  %351 = urem i64 %349, 341
  %352 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %347, i64 %350
  %353 = getelementptr inbounds %"class.std::__1::priority_queue", %"class.std::__1::priority_queue"* %13, i64 0, i32 0, i32 0, i32 0, i32 2
  %354 = load %struct.Candidate**, %struct.Candidate*** %353, align 8
  %355 = icmp eq %struct.Candidate** %354, %347
  %356 = ptrtoint %struct.Candidate** %354 to i64
  %357 = ptrtoint %struct.Candidate** %347 to i64
  br i1 %355, label %368, label %358

358:                                              ; preds = %344
  %359 = load %struct.Candidate*, %struct.Candidate** %352, align 8
  %360 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %359, i64 %351
  %361 = add i64 %345, %349
  %362 = udiv i64 %361, 341
  %363 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %347, i64 %362
  %364 = load %struct.Candidate*, %struct.Candidate** %363, align 8
  %365 = urem i64 %361, 341
  %366 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %364, i64 %365
  %367 = icmp eq %struct.Candidate* %366, %360
  br i1 %367, label %368, label %373

368:                                              ; preds = %386, %344, %358
  store i64 0, i64* %32, align 8
  %369 = bitcast %struct.Candidate*** %353 to i64*
  %370 = sub i64 %356, %357
  %371 = ashr exact i64 %370, 3
  %372 = icmp ugt i64 %371, 2
  br i1 %372, label %391, label %404

373:                                              ; preds = %358, %386
  %374 = phi %struct.Candidate* [ %389, %386 ], [ %360, %358 ]
  %375 = phi %struct.Candidate** [ %388, %386 ], [ %352, %358 ]
  %376 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %374, i64 1
  %377 = ptrtoint %struct.Candidate* %376 to i64
  %378 = bitcast %struct.Candidate** %375 to i64*
  %379 = load i64, i64* %378, align 8
  %380 = sub i64 %377, %379
  %381 = icmp eq i64 %380, 4092
  br i1 %381, label %382, label %386

382:                                              ; preds = %373
  %383 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %375, i64 1
  %384 = bitcast %struct.Candidate** %383 to i64*
  %385 = load i64, i64* %384, align 8
  br label %386

386:                                              ; preds = %382, %373
  %387 = phi i64 [ %385, %382 ], [ %377, %373 ]
  %388 = phi %struct.Candidate** [ %383, %382 ], [ %375, %373 ]
  %389 = inttoptr i64 %387 to %struct.Candidate*
  %390 = icmp eq %struct.Candidate* %366, %389
  br i1 %390, label %368, label %373

391:                                              ; preds = %368, %391
  %392 = phi %struct.Candidate** [ %396, %391 ], [ %347, %368 ]
  %393 = bitcast %struct.Candidate** %392 to i8**
  %394 = load i8*, i8** %393, align 8
  call void @_ZdlPv(i8* %394) #11
  %395 = load %struct.Candidate**, %struct.Candidate*** %346, align 8
  %396 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %395, i64 1
  store %struct.Candidate** %396, %struct.Candidate*** %346, align 8
  %397 = load i64, i64* %369, align 8
  %398 = ptrtoint %struct.Candidate** %396 to i64
  %399 = sub i64 %397, %398
  %400 = ashr exact i64 %399, 3
  %401 = icmp ugt i64 %400, 2
  br i1 %401, label %391, label %402

402:                                              ; preds = %391
  %403 = inttoptr i64 %397 to %struct.Candidate**
  br label %404

404:                                              ; preds = %402, %368
  %405 = phi %struct.Candidate** [ %354, %368 ], [ %403, %402 ]
  %406 = phi %struct.Candidate** [ %347, %368 ], [ %396, %402 ]
  %407 = phi i64 [ %371, %368 ], [ %400, %402 ]
  switch i64 %407, label %411 [
    i64 1, label %409
    i64 2, label %408
  ]

408:                                              ; preds = %404
  br label %409

409:                                              ; preds = %404, %408
  %410 = phi i64 [ 341, %408 ], [ 170, %404 ]
  store i64 %410, i64* %348, align 8
  br label %411

411:                                              ; preds = %409, %404
  %412 = icmp eq %struct.Candidate** %406, %405
  br i1 %412, label %431, label %413

413:                                              ; preds = %411, %413
  %414 = phi %struct.Candidate** [ %417, %413 ], [ %406, %411 ]
  %415 = bitcast %struct.Candidate** %414 to i8**
  %416 = load i8*, i8** %415, align 8
  call void @_ZdlPv(i8* %416) #11
  %417 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %414, i64 1
  %418 = icmp eq %struct.Candidate** %417, %405
  br i1 %418, label %419, label %413

419:                                              ; preds = %413
  %420 = load %struct.Candidate**, %struct.Candidate*** %346, align 8
  %421 = load %struct.Candidate**, %struct.Candidate*** %353, align 8
  %422 = icmp eq %struct.Candidate** %421, %420
  br i1 %422, label %431, label %423

423:                                              ; preds = %419
  %424 = ptrtoint %struct.Candidate** %420 to i64
  %425 = getelementptr %struct.Candidate*, %struct.Candidate** %421, i64 -1
  %426 = ptrtoint %struct.Candidate** %425 to i64
  %427 = sub i64 %426, %424
  %428 = lshr i64 %427, 3
  %429 = xor i64 %428, -1
  %430 = getelementptr %struct.Candidate*, %struct.Candidate** %421, i64 %429
  store %struct.Candidate** %430, %struct.Candidate*** %353, align 8
  br label %431

431:                                              ; preds = %423, %419, %411
  %432 = getelementptr inbounds %"class.std::__1::priority_queue", %"class.std::__1::priority_queue"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %433 = load %struct.Candidate**, %struct.Candidate*** %432, align 8
  %434 = icmp eq %struct.Candidate** %433, null
  br i1 %434, label %437, label %435

435:                                              ; preds = %431
  %436 = bitcast %struct.Candidate** %433 to i8*
  call void @_ZdlPv(i8* %436) #11
  br label %437

437:                                              ; preds = %431, %435
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #10
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin31Register_NON_MAX_SUPPRESSION_V4Ev() local_unnamed_addr #5 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin31Register_NON_MAX_SUPPRESSION_V4EvE1r
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin31Register_NON_MAX_SUPPRESSION_V5Ev() local_unnamed_addr #5 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin31Register_NON_MAX_SUPPRESSION_V5EvE1r
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114priority_queueIZN6tflite13reference_ops17NonMaxSuppressionEPKfiS4_ifffPiPfS5_E9CandidateNS_5dequeIS7_NS_9allocatorIS7_EEEEZNS2_17NonMaxSuppressionES4_iS4_ifffS5_S6_S5_EUlS7_S7_E_E3popEv(%"class.std::__1::priority_queue"*) local_unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::__1::__deque_iterator", align 8
  %3 = alloca %class.anon, align 1
  %4 = getelementptr inbounds %"class.std::__1::priority_queue", %"class.std::__1::priority_queue"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load %struct.Candidate**, %struct.Candidate*** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::priority_queue", %"class.std::__1::priority_queue"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = udiv i64 %7, 341
  %9 = urem i64 %7, 341
  %10 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %5, i64 %8
  %11 = getelementptr inbounds %"class.std::__1::priority_queue", %"class.std::__1::priority_queue"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %12 = load %struct.Candidate**, %struct.Candidate*** %11, align 8
  %13 = icmp eq %struct.Candidate** %12, %5
  %14 = ptrtoint %struct.Candidate** %12 to i64
  %15 = ptrtoint %struct.Candidate** %5 to i64
  br i1 %13, label %16, label %20

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.std::__1::priority_queue", %"class.std::__1::priority_queue"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %class.anon, %class.anon* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %19)
  br label %33

20:                                               ; preds = %1
  %21 = load %struct.Candidate*, %struct.Candidate** %10, align 8
  %22 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %21, i64 %9
  %23 = getelementptr inbounds %"class.std::__1::priority_queue", %"class.std::__1::priority_queue"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %24, %7
  %26 = udiv i64 %25, 341
  %27 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %5, i64 %26
  %28 = load %struct.Candidate*, %struct.Candidate** %27, align 8
  %29 = urem i64 %25, 341
  %30 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %28, i64 %29
  %31 = getelementptr inbounds %class.anon, %class.anon* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %31)
  %32 = icmp eq %struct.Candidate* %30, %22
  br i1 %32, label %33, label %38

33:                                               ; preds = %16, %20
  %34 = phi i8* [ %19, %16 ], [ %31, %20 ]
  %35 = phi i64* [ %17, %16 ], [ %23, %20 ]
  %36 = phi i64 [ %18, %16 ], [ %24, %20 ]
  %37 = bitcast %"class.std::__1::__deque_iterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #10
  br label %91

38:                                               ; preds = %20
  %39 = ptrtoint %struct.Candidate* %22 to i64
  %40 = ptrtoint %struct.Candidate* %30 to i64
  %41 = ptrtoint %struct.Candidate** %27 to i64
  %42 = ptrtoint %struct.Candidate** %10 to i64
  %43 = sub i64 %41, %42
  %44 = ashr exact i64 %43, 3
  %45 = mul nsw i64 %44, 341
  %46 = bitcast %struct.Candidate** %27 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %40, %47
  %49 = sdiv exact i64 %48, 12
  %50 = add nsw i64 %49, %45
  %51 = bitcast %struct.Candidate** %10 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %39, %52
  %54 = sdiv exact i64 %53, -12
  %55 = add i64 %50, %54
  %56 = bitcast %"class.std::__1::__deque_iterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #10
  %57 = icmp sgt i64 %55, 1
  br i1 %57, label %58, label %91

58:                                               ; preds = %38
  %59 = inttoptr i64 %47 to %struct.Candidate*
  %60 = icmp eq %struct.Candidate* %30, %59
  br i1 %60, label %61, label %65

61:                                               ; preds = %58
  %62 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %27, i64 -1
  %63 = load %struct.Candidate*, %struct.Candidate** %62, align 8
  %64 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %63, i64 341
  br label %65

65:                                               ; preds = %61, %58
  %66 = phi %struct.Candidate** [ %62, %61 ], [ %27, %58 ]
  %67 = phi %struct.Candidate* [ %64, %61 ], [ %30, %58 ]
  %68 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %67, i64 -1
  %69 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %22, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %21, i64 %9, i32 1
  %72 = bitcast float* %71 to i32*
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %21, i64 %9, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = bitcast %struct.Candidate* %22 to i8*
  %77 = bitcast %struct.Candidate* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 12, i1 false) #10
  %78 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %68, i64 0, i32 0
  store i32 %70, i32* %78, align 4
  %79 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %67, i64 -1, i32 1
  %80 = bitcast float* %79 to i32*
  store i32 %73, i32* %80, align 4
  %81 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %67, i64 -1, i32 2
  store i32 %75, i32* %81, align 4
  %82 = add nsw i64 %55, -1
  %83 = getelementptr inbounds %"class.std::__1::__deque_iterator", %"class.std::__1::__deque_iterator"* %2, i64 0, i32 0
  store %struct.Candidate** %10, %struct.Candidate*** %83, align 8
  %84 = getelementptr inbounds %"class.std::__1::__deque_iterator", %"class.std::__1::__deque_iterator"* %2, i64 0, i32 1
  store %struct.Candidate* %22, %struct.Candidate** %84, align 8
  call void @_ZNSt3__111__sift_downIRZN6tflite13reference_ops17NonMaxSuppressionEPKfiS4_ifffPiPfS5_EUlZNS2_17NonMaxSuppressionES4_iS4_ifffS5_S6_S5_E9CandidateS7_E_NS_16__deque_iteratorIS7_PS7_RS7_PSB_lLl0EEEEEvT0_SF_T_NS_15iterator_traitsISF_E15difference_typeESF_(%struct.Candidate** %10, %struct.Candidate* %22, %struct.Candidate** %66, %struct.Candidate* %68, %class.anon* nonnull dereferenceable(1) %3, i64 %82, %"class.std::__1::__deque_iterator"* nonnull byval(%"class.std::__1::__deque_iterator") align 8 %2) #10
  %85 = load i64, i64* %23, align 8
  %86 = load i64, i64* %6, align 8
  %87 = bitcast %struct.Candidate*** %11 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %struct.Candidate*** %4 to i64*
  %90 = load i64, i64* %89, align 8
  br label %91

91:                                               ; preds = %33, %38, %65
  %92 = phi i8* [ %34, %33 ], [ %31, %38 ], [ %31, %65 ]
  %93 = phi i64* [ %35, %33 ], [ %23, %38 ], [ %23, %65 ]
  %94 = phi i64 [ %15, %33 ], [ %15, %38 ], [ %90, %65 ]
  %95 = phi i64 [ %14, %33 ], [ %14, %38 ], [ %88, %65 ]
  %96 = phi i64 [ %7, %33 ], [ %7, %38 ], [ %86, %65 ]
  %97 = phi i64 [ %36, %33 ], [ %24, %38 ], [ %85, %65 ]
  %98 = phi i8* [ %37, %33 ], [ %56, %38 ], [ %56, %65 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %98) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %92)
  %99 = add i64 %97, -1
  store i64 %99, i64* %93, align 8
  %100 = sub i64 %95, %94
  %101 = ashr exact i64 %100, 3
  %102 = icmp eq i64 %100, 0
  %103 = mul i64 %101, 341
  %104 = add i64 %103, -1
  %105 = select i1 %102, i64 0, i64 %104
  %106 = sub i64 1, %97
  %107 = sub i64 %106, %96
  %108 = add i64 %107, %105
  %109 = icmp ult i64 %108, 682
  br i1 %109, label %117, label %110

110:                                              ; preds = %91
  %111 = inttoptr i64 %95 to %struct.Candidate**
  %112 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %111, i64 -1
  %113 = bitcast %struct.Candidate** %112 to i8**
  %114 = load i8*, i8** %113, align 8
  call void @_ZdlPv(i8* %114) #11
  %115 = load %struct.Candidate**, %struct.Candidate*** %11, align 8
  %116 = getelementptr %struct.Candidate*, %struct.Candidate** %115, i64 -1
  store %struct.Candidate** %116, %struct.Candidate*** %11, align 8
  br label %117

117:                                              ; preds = %91, %110
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIZN6tflite13reference_ops17NonMaxSuppressionEPKfiS4_ifffPiPfS5_E9CandidateNS_9allocatorIS7_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %struct.Candidate*, align 8
  %3 = alloca %struct.Candidate*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.6", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 340
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -341
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %struct.Candidate**, %struct.Candidate*** %10, align 8
  %12 = bitcast %struct.Candidate** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %11, i64 1
  store %struct.Candidate** %14, %struct.Candidate*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %struct.Candidate**, %struct.Candidate*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %struct.Candidate**, %struct.Candidate*** %17, align 8
  %19 = icmp eq %struct.Candidate** %16, %18
  %20 = ptrtoint %struct.Candidate** %18 to i64
  %21 = bitcast %struct.Candidate** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %struct.Candidate**, %struct.Candidate*** %23, align 8
  %25 = icmp ugt %struct.Candidate** %14, %24
  %26 = ptrtoint %struct.Candidate** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint %struct.Candidate** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %14, i64 %32
  %34 = ptrtoint %struct.Candidate** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast %struct.Candidate** %33 to i8*
  %40 = bitcast %struct.Candidate** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #10
  %41 = load %struct.Candidate**, %struct.Candidate*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi %struct.Candidate** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %33, i64 %36
  store %struct.Candidate** %44, %struct.Candidate*** %15, align 8
  %45 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %43, i64 %32
  store %struct.Candidate** %45, %struct.Candidate*** %10, align 8
  %46 = bitcast %struct.Candidate** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast %struct.Candidate*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #12
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #11
  %60 = bitcast i8* %59 to %struct.Candidate**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %60, i64 %57
  %63 = ptrtoint %struct.Candidate** %62 to i64
  %64 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %60, i64 %53
  %65 = ptrtoint %struct.Candidate** %64 to i64
  %66 = ptrtoint %struct.Candidate** %14 to i64
  %67 = ptrtoint %struct.Candidate** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi %struct.Candidate** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi %struct.Candidate** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast %struct.Candidate** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %79, i64 1
  %87 = ptrtoint %struct.Candidate** %86 to i64
  %88 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !13

91:                                               ; preds = %78
  %92 = ptrtoint %struct.Candidate** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi %struct.Candidate** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi %struct.Candidate** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi %struct.Candidate** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi %struct.Candidate** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast %struct.Candidate** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %99, i64 1
  %106 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %101, i64 1
  %107 = bitcast %struct.Candidate** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %struct.Candidate** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %99, i64 2
  %111 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %101, i64 2
  %112 = bitcast %struct.Candidate** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %struct.Candidate** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %99, i64 3
  %116 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %101, i64 3
  %117 = bitcast %struct.Candidate** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %struct.Candidate** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %99, i64 4
  %121 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %101, i64 4
  %122 = bitcast %struct.Candidate** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %struct.Candidate** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %99, i64 5
  %126 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %101, i64 5
  %127 = bitcast %struct.Candidate** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %struct.Candidate** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %99, i64 6
  %131 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %101, i64 6
  %132 = bitcast %struct.Candidate** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %struct.Candidate** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %99, i64 7
  %136 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %101, i64 7
  %137 = bitcast %struct.Candidate** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %struct.Candidate** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %99, i64 8
  %141 = ptrtoint %struct.Candidate** %140 to i64
  %142 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %101, i64 8
  %143 = icmp eq %struct.Candidate** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint %struct.Candidate** %70 to i64
  %146 = load %struct.Candidate**, %struct.Candidate*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi %struct.Candidate** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast %struct.Candidate*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast %struct.Candidate*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq %struct.Candidate** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %struct.Candidate** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #11
  %156 = bitcast %struct.Candidate*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load %struct.Candidate**, %struct.Candidate*** %15, align 8
  %161 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %160, i64 1
  store %struct.Candidate** %161, %struct.Candidate*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast %struct.Candidate*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %struct.Candidate*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast %struct.Candidate*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to %struct.Candidate**
  %181 = inttoptr i64 %169 to %struct.Candidate**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast %struct.Candidate** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #10
  %186 = tail call i8* @_Znwm(i64 4092) #11
  %187 = bitcast %struct.Candidate** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPZN6tflite13reference_ops17NonMaxSuppressionEPKfiS4_ifffPiPfS5_E9CandidateNS_9allocatorIS8_EEE9push_backEOS8_(%"struct.std::__1::__split_buffer"* %163, %struct.Candidate** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #10
  br label %460

188:                                              ; preds = %182
  %189 = bitcast %struct.Candidate** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #10
  %190 = tail call i8* @_Znwm(i64 4092) #11
  %191 = bitcast %struct.Candidate** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPZN6tflite13reference_ops17NonMaxSuppressionEPKfiS4_ifffPiPfS5_E9CandidateNS_9allocatorIS8_EEE10push_frontEOS8_(%"struct.std::__1::__split_buffer"* %163, %struct.Candidate** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #10
  %192 = load %struct.Candidate**, %struct.Candidate*** %167, align 8
  %193 = bitcast %struct.Candidate** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %192, i64 1
  store %struct.Candidate** %195, %struct.Candidate*** %167, align 8
  %196 = load %struct.Candidate**, %struct.Candidate*** %164, align 8
  %197 = load %struct.Candidate**, %struct.Candidate*** %172, align 8
  %198 = icmp eq %struct.Candidate** %196, %197
  %199 = ptrtoint %struct.Candidate** %197 to i64
  %200 = bitcast %struct.Candidate** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %struct.Candidate**, %struct.Candidate*** %202, align 8
  %204 = icmp ugt %struct.Candidate** %195, %203
  %205 = ptrtoint %struct.Candidate** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint %struct.Candidate** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %195, i64 %211
  %213 = ptrtoint %struct.Candidate** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast %struct.Candidate** %212 to i8*
  %219 = bitcast %struct.Candidate** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #10
  %220 = load %struct.Candidate**, %struct.Candidate*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi %struct.Candidate** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %212, i64 %215
  store %struct.Candidate** %223, %struct.Candidate*** %164, align 8
  %224 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %222, i64 %211
  store %struct.Candidate** %224, %struct.Candidate*** %167, align 8
  %225 = bitcast %struct.Candidate** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #12
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #11
  %237 = bitcast i8* %236 to %struct.Candidate**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %237, i64 %234
  %240 = ptrtoint %struct.Candidate** %239 to i64
  %241 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %237, i64 %230
  %242 = ptrtoint %struct.Candidate** %241 to i64
  %243 = ptrtoint %struct.Candidate** %195 to i64
  %244 = ptrtoint %struct.Candidate** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi %struct.Candidate** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi %struct.Candidate** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast %struct.Candidate** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %256, i64 1
  %264 = ptrtoint %struct.Candidate** %263 to i64
  %265 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !14

268:                                              ; preds = %255
  %269 = ptrtoint %struct.Candidate** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi %struct.Candidate** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi %struct.Candidate** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi %struct.Candidate** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi %struct.Candidate** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast %struct.Candidate** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %276, i64 1
  %283 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %278, i64 1
  %284 = bitcast %struct.Candidate** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %struct.Candidate** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %276, i64 2
  %288 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %278, i64 2
  %289 = bitcast %struct.Candidate** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %struct.Candidate** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %276, i64 3
  %293 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %278, i64 3
  %294 = bitcast %struct.Candidate** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %struct.Candidate** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %276, i64 4
  %298 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %278, i64 4
  %299 = bitcast %struct.Candidate** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %struct.Candidate** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %276, i64 5
  %303 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %278, i64 5
  %304 = bitcast %struct.Candidate** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %struct.Candidate** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %276, i64 6
  %308 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %278, i64 6
  %309 = bitcast %struct.Candidate** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %struct.Candidate** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %276, i64 7
  %313 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %278, i64 7
  %314 = bitcast %struct.Candidate** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %struct.Candidate** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %276, i64 8
  %318 = ptrtoint %struct.Candidate** %317 to i64
  %319 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %278, i64 8
  %320 = icmp eq %struct.Candidate** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint %struct.Candidate** %247 to i64
  %323 = load %struct.Candidate**, %struct.Candidate*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi %struct.Candidate** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq %struct.Candidate** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %struct.Candidate** %325 to i8*
  call void @_ZdlPv(i8* %330) #11
  %331 = bitcast %struct.Candidate*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load %struct.Candidate**, %struct.Candidate*** %164, align 8
  %336 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %335, i64 1
  store %struct.Candidate** %336, %struct.Candidate*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.6"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #10
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.6", %"struct.std::__1::__split_buffer.6"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.6", %"struct.std::__1::__split_buffer.6"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.6", %"struct.std::__1::__split_buffer.6"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.6", %"struct.std::__1::__split_buffer.6"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.6"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store %struct.Candidate** null, %struct.Candidate*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator"** %342 to %"class.std::__1::__compressed_pair"**
  store %"class.std::__1::__compressed_pair"* %346, %"class.std::__1::__compressed_pair"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #12
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #11
  %354 = bitcast i8* %353 to %struct.Candidate**
  %355 = bitcast %"struct.std::__1::__split_buffer.6"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %354, i64 %171
  store %struct.Candidate** %356, %struct.Candidate*** %340, align 8
  store %struct.Candidate** %356, %struct.Candidate*** %339, align 8
  %357 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %354, i64 %345
  store %struct.Candidate** %357, %struct.Candidate*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4092) #11
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint %struct.Candidate** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint %struct.Candidate** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt %struct.Candidate** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %356, i64 %370
  store %struct.Candidate** %371, %struct.Candidate*** %340, align 8
  store %struct.Candidate** %371, %struct.Candidate*** %339, align 8
  %372 = ptrtoint %struct.Candidate** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #12
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.6"* %4 to i64*
  %382 = bitcast %struct.Candidate*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #11
  %386 = bitcast i8* %385 to %struct.Candidate**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %386, i64 %383
  %389 = ptrtoint %struct.Candidate** %388 to i64
  %390 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %386, i64 %377
  %391 = ptrtoint %struct.Candidate** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast %struct.Candidate*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast %struct.Candidate*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #11
  %394 = load %struct.Candidate**, %struct.Candidate*** %164, align 8
  %395 = load %struct.Candidate**, %struct.Candidate*** %167, align 8
  %396 = ptrtoint %struct.Candidate** %395 to i64
  %397 = ptrtoint %struct.Candidate** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi %struct.Candidate** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi %struct.Candidate** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi %struct.Candidate** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast %struct.Candidate** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %406, i64 1
  store %struct.Candidate** %408, %struct.Candidate*** %340, align 8
  %409 = icmp eq %struct.Candidate** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint %struct.Candidate** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.6"* %4 to i64*
  %413 = bitcast %struct.Candidate*** %339 to i64*
  %414 = bitcast %struct.Candidate*** %340 to i64*
  %415 = bitcast %struct.Candidate*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint %struct.Candidate** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.6"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %struct.Candidate*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast %struct.Candidate*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %struct.Candidate*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to %struct.Candidate**
  %441 = inttoptr i64 %434 to %struct.Candidate**
  %442 = icmp eq %struct.Candidate** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr %struct.Candidate*, %struct.Candidate** %441, i64 -1
  %445 = ptrtoint %struct.Candidate** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %struct.Candidate*, %struct.Candidate** %441, i64 %448
  store %struct.Candidate** %449, %struct.Candidate*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #11
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #10
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi %struct.Candidate** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPZN6tflite13reference_ops17NonMaxSuppressionEPKfiS4_ifffPiPfS5_E9CandidateRNS_9allocatorIS8_EEE10push_frontERKS8_(%"struct.std::__1::__split_buffer.6"* nonnull %4, %struct.Candidate** dereferenceable(8) %457)
  %458 = load %struct.Candidate**, %struct.Candidate*** %167, align 8
  %459 = icmp eq %struct.Candidate** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPZN6tflite13reference_ops17NonMaxSuppressionEPKfiS4_ifffPiPfS5_E9CandidateNS_9allocatorIS8_EEE9push_backEOS8_(%"struct.std::__1::__split_buffer"*, %struct.Candidate** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %struct.Candidate**, %struct.Candidate*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %struct.Candidate**, %struct.Candidate*** %5, align 8
  %7 = icmp eq %struct.Candidate** %4, %6
  %8 = ptrtoint %struct.Candidate** %6 to i64
  %9 = bitcast %struct.Candidate** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %struct.Candidate**, %struct.Candidate*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %struct.Candidate**, %struct.Candidate*** %13, align 8
  %15 = icmp ugt %struct.Candidate** %12, %14
  %16 = ptrtoint %struct.Candidate** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %struct.Candidate** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %12, i64 %22
  %24 = ptrtoint %struct.Candidate** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %struct.Candidate** %23 to i8*
  %30 = bitcast %struct.Candidate** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #10
  %31 = load %struct.Candidate**, %struct.Candidate*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %struct.Candidate** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %23, i64 %26
  store %struct.Candidate** %34, %struct.Candidate*** %3, align 8
  %35 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %33, i64 %22
  store %struct.Candidate** %35, %struct.Candidate*** %11, align 8
  %36 = bitcast %struct.Candidate** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %struct.Candidate*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #12
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #11
  %50 = bitcast i8* %49 to %struct.Candidate**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %50, i64 %47
  %53 = ptrtoint %struct.Candidate** %52 to i64
  %54 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %50, i64 %43
  %55 = ptrtoint %struct.Candidate** %54 to i64
  %56 = ptrtoint %struct.Candidate** %12 to i64
  %57 = ptrtoint %struct.Candidate** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %struct.Candidate** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %struct.Candidate** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %struct.Candidate** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %69, i64 1
  %77 = ptrtoint %struct.Candidate** %76 to i64
  %78 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !15

81:                                               ; preds = %68
  %82 = ptrtoint %struct.Candidate** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %struct.Candidate** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %struct.Candidate** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %struct.Candidate** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %struct.Candidate** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %struct.Candidate** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %89, i64 1
  %96 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %91, i64 1
  %97 = bitcast %struct.Candidate** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %struct.Candidate** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %89, i64 2
  %101 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %91, i64 2
  %102 = bitcast %struct.Candidate** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %struct.Candidate** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %89, i64 3
  %106 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %91, i64 3
  %107 = bitcast %struct.Candidate** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %struct.Candidate** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %89, i64 4
  %111 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %91, i64 4
  %112 = bitcast %struct.Candidate** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %struct.Candidate** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %89, i64 5
  %116 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %91, i64 5
  %117 = bitcast %struct.Candidate** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %struct.Candidate** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %89, i64 6
  %121 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %91, i64 6
  %122 = bitcast %struct.Candidate** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %struct.Candidate** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %89, i64 7
  %126 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %91, i64 7
  %127 = bitcast %struct.Candidate** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %struct.Candidate** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %89, i64 8
  %131 = ptrtoint %struct.Candidate** %130 to i64
  %132 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %91, i64 8
  %133 = icmp eq %struct.Candidate** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %struct.Candidate** %60 to i64
  %136 = load %struct.Candidate**, %struct.Candidate*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %struct.Candidate** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %struct.Candidate*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %struct.Candidate*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %struct.Candidate** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %struct.Candidate** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #11
  %146 = bitcast %struct.Candidate*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %struct.Candidate** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %struct.Candidate**, %struct.Candidate*** %3, align 8
  %153 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %152, i64 1
  store %struct.Candidate** %153, %struct.Candidate*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPZN6tflite13reference_ops17NonMaxSuppressionEPKfiS4_ifffPiPfS5_E9CandidateNS_9allocatorIS8_EEE10push_frontEOS8_(%"struct.std::__1::__split_buffer"*, %struct.Candidate** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %struct.Candidate**, %struct.Candidate*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %struct.Candidate**, %struct.Candidate*** %5, align 8
  %7 = icmp eq %struct.Candidate** %4, %6
  %8 = ptrtoint %struct.Candidate** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %struct.Candidate**, %struct.Candidate*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %struct.Candidate**, %struct.Candidate*** %12, align 8
  %14 = icmp ult %struct.Candidate** %11, %13
  %15 = bitcast %struct.Candidate*** %12 to i64*
  %16 = ptrtoint %struct.Candidate** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %struct.Candidate** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %11, i64 %22
  %24 = ptrtoint %struct.Candidate** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %23, i64 %29
  %31 = bitcast %struct.Candidate** %30 to i8*
  %32 = bitcast %struct.Candidate** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #10
  %33 = load %struct.Candidate**, %struct.Candidate*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %struct.Candidate** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %struct.Candidate** [ %30, %27 ], [ %23, %17 ]
  store %struct.Candidate** %36, %struct.Candidate*** %3, align 8
  %37 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %35, i64 %22
  store %struct.Candidate** %37, %struct.Candidate*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #12
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #11
  %51 = bitcast i8* %50 to %struct.Candidate**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %51, i64 %48
  %54 = ptrtoint %struct.Candidate** %53 to i64
  %55 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %51, i64 %43
  %56 = ptrtoint %struct.Candidate** %55 to i64
  %57 = ptrtoint %struct.Candidate** %4 to i64
  %58 = ptrtoint %struct.Candidate** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %struct.Candidate** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %struct.Candidate** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %struct.Candidate** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %70, i64 1
  %78 = ptrtoint %struct.Candidate** %77 to i64
  %79 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !16

82:                                               ; preds = %69
  %83 = ptrtoint %struct.Candidate** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %struct.Candidate** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %struct.Candidate** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %struct.Candidate** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %struct.Candidate** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %struct.Candidate** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %90, i64 1
  %97 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %92, i64 1
  %98 = bitcast %struct.Candidate** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %struct.Candidate** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %90, i64 2
  %102 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %92, i64 2
  %103 = bitcast %struct.Candidate** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %struct.Candidate** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %90, i64 3
  %107 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %92, i64 3
  %108 = bitcast %struct.Candidate** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %struct.Candidate** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %90, i64 4
  %112 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %92, i64 4
  %113 = bitcast %struct.Candidate** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %struct.Candidate** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %90, i64 5
  %117 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %92, i64 5
  %118 = bitcast %struct.Candidate** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %struct.Candidate** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %90, i64 6
  %122 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %92, i64 6
  %123 = bitcast %struct.Candidate** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %struct.Candidate** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %90, i64 7
  %127 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %92, i64 7
  %128 = bitcast %struct.Candidate** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %struct.Candidate** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %90, i64 8
  %132 = ptrtoint %struct.Candidate** %131 to i64
  %133 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %92, i64 8
  %134 = icmp eq %struct.Candidate** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %struct.Candidate** %61 to i64
  %137 = load %struct.Candidate**, %struct.Candidate*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %struct.Candidate** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %struct.Candidate*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %struct.Candidate*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %struct.Candidate** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %struct.Candidate** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #11
  %146 = load %struct.Candidate**, %struct.Candidate*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %struct.Candidate** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %148, i64 -1
  %150 = bitcast %struct.Candidate** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %struct.Candidate** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %struct.Candidate**, %struct.Candidate*** %3, align 8
  %154 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %153, i64 -1
  store %struct.Candidate** %154, %struct.Candidate*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPZN6tflite13reference_ops17NonMaxSuppressionEPKfiS4_ifffPiPfS5_E9CandidateRNS_9allocatorIS8_EEE10push_frontERKS8_(%"struct.std::__1::__split_buffer.6"*, %struct.Candidate** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.6", %"struct.std::__1::__split_buffer.6"* %0, i64 0, i32 1
  %4 = load %struct.Candidate**, %struct.Candidate*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.6", %"struct.std::__1::__split_buffer.6"* %0, i64 0, i32 0
  %6 = load %struct.Candidate**, %struct.Candidate*** %5, align 8
  %7 = icmp eq %struct.Candidate** %4, %6
  %8 = ptrtoint %struct.Candidate** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.6", %"struct.std::__1::__split_buffer.6"* %0, i64 0, i32 2
  %11 = load %struct.Candidate**, %struct.Candidate*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.6", %"struct.std::__1::__split_buffer.6"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %struct.Candidate**, %struct.Candidate*** %12, align 8
  %14 = icmp ult %struct.Candidate** %11, %13
  %15 = bitcast %struct.Candidate*** %12 to i64*
  %16 = ptrtoint %struct.Candidate** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %struct.Candidate** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %11, i64 %22
  %24 = ptrtoint %struct.Candidate** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %23, i64 %29
  %31 = bitcast %struct.Candidate** %30 to i8*
  %32 = bitcast %struct.Candidate** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #10
  %33 = load %struct.Candidate**, %struct.Candidate*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %struct.Candidate** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %struct.Candidate** [ %30, %27 ], [ %23, %17 ]
  store %struct.Candidate** %36, %struct.Candidate*** %3, align 8
  %37 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %35, i64 %22
  store %struct.Candidate** %37, %struct.Candidate*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.6"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #12
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #11
  %51 = bitcast i8* %50 to %struct.Candidate**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %51, i64 %48
  %54 = ptrtoint %struct.Candidate** %53 to i64
  %55 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %51, i64 %43
  %56 = ptrtoint %struct.Candidate** %55 to i64
  %57 = ptrtoint %struct.Candidate** %4 to i64
  %58 = ptrtoint %struct.Candidate** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %struct.Candidate** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %struct.Candidate** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %struct.Candidate** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %70, i64 1
  %78 = ptrtoint %struct.Candidate** %77 to i64
  %79 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !17

82:                                               ; preds = %69
  %83 = ptrtoint %struct.Candidate** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %struct.Candidate** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %struct.Candidate** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %struct.Candidate** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %struct.Candidate** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %struct.Candidate** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %90, i64 1
  %97 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %92, i64 1
  %98 = bitcast %struct.Candidate** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %struct.Candidate** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %90, i64 2
  %102 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %92, i64 2
  %103 = bitcast %struct.Candidate** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %struct.Candidate** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %90, i64 3
  %107 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %92, i64 3
  %108 = bitcast %struct.Candidate** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %struct.Candidate** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %90, i64 4
  %112 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %92, i64 4
  %113 = bitcast %struct.Candidate** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %struct.Candidate** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %90, i64 5
  %117 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %92, i64 5
  %118 = bitcast %struct.Candidate** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %struct.Candidate** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %90, i64 6
  %122 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %92, i64 6
  %123 = bitcast %struct.Candidate** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %struct.Candidate** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %90, i64 7
  %127 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %92, i64 7
  %128 = bitcast %struct.Candidate** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %struct.Candidate** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %90, i64 8
  %132 = ptrtoint %struct.Candidate** %131 to i64
  %133 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %92, i64 8
  %134 = icmp eq %struct.Candidate** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %struct.Candidate** %61 to i64
  %137 = load %struct.Candidate**, %struct.Candidate*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %struct.Candidate** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %struct.Candidate*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %struct.Candidate*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %struct.Candidate** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %struct.Candidate** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #11
  %146 = load %struct.Candidate**, %struct.Candidate*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %struct.Candidate** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %148, i64 -1
  %150 = bitcast %struct.Candidate** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %struct.Candidate** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %struct.Candidate**, %struct.Candidate*** %3, align 8
  %154 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %153, i64 -1
  store %struct.Candidate** %154, %struct.Candidate*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__19__sift_upIRZN6tflite13reference_ops17NonMaxSuppressionEPKfiS4_ifffPiPfS5_EUlZNS2_17NonMaxSuppressionES4_iS4_ifffS5_S6_S5_E9CandidateS7_E_NS_16__deque_iteratorIS7_PS7_RS7_PSB_lLl0EEEEEvT0_SF_T_NS_15iterator_traitsISF_E15difference_typeE(%struct.Candidate**, %struct.Candidate*, %struct.Candidate**, %struct.Candidate*, %class.anon* dereferenceable(1), i64) local_unnamed_addr #0 comdat {
  %7 = ptrtoint %struct.Candidate* %1 to i64
  %8 = icmp sgt i64 %5, 1
  br i1 %8, label %9, label %116

9:                                                ; preds = %6
  %10 = add nsw i64 %5, -2
  %11 = sdiv i64 %10, 2
  %12 = add nsw i64 %5, -1
  %13 = icmp ult i64 %12, 3
  br i1 %13, label %37, label %14

14:                                               ; preds = %9
  %15 = bitcast %struct.Candidate** %0 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %7, %16
  %18 = sdiv exact i64 %17, 12
  %19 = add nsw i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %14
  %22 = udiv i64 %19, 341
  %23 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %0, i64 %22
  %24 = load %struct.Candidate*, %struct.Candidate** %23, align 8
  %25 = urem i64 %19, 341
  %26 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %24, i64 %25
  %27 = ptrtoint %struct.Candidate* %26 to i64
  br label %37

28:                                               ; preds = %14
  %29 = sub nsw i64 340, %19
  %30 = sdiv i64 %29, -341
  %31 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %0, i64 %30
  %32 = load %struct.Candidate*, %struct.Candidate** %31, align 8
  %33 = srem i64 %29, 341
  %34 = sub nuw nsw i64 340, %33
  %35 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %32, i64 %34
  %36 = ptrtoint %struct.Candidate* %35 to i64
  br label %37

37:                                               ; preds = %9, %21, %28
  %38 = phi i64 [ %7, %9 ], [ %27, %21 ], [ %36, %28 ]
  %39 = inttoptr i64 %38 to i64*
  %40 = load i64, i64* %39, align 4
  %41 = load %struct.Candidate*, %struct.Candidate** %2, align 8
  %42 = icmp eq %struct.Candidate* %41, %3
  br i1 %42, label %43, label %47

43:                                               ; preds = %37
  %44 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %2, i64 -1
  %45 = load %struct.Candidate*, %struct.Candidate** %44, align 8
  %46 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %45, i64 341
  br label %47

47:                                               ; preds = %37, %43
  %48 = phi %struct.Candidate* [ %46, %43 ], [ %3, %37 ]
  %49 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %48, i64 -1
  %50 = bitcast %struct.Candidate* %49 to i64*
  %51 = load i64, i64* %50, align 4
  %52 = lshr i64 %40, 32
  %53 = trunc i64 %52 to i32
  %54 = lshr i64 %51, 32
  %55 = trunc i64 %54 to i32
  %56 = bitcast i32 %53 to float
  %57 = bitcast i32 %55 to float
  %58 = fcmp olt float %56, %57
  %59 = trunc i64 %51 to i32
  br i1 %58, label %60, label %116

60:                                               ; preds = %47
  %61 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %48, i64 -1, i32 2
  %62 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %48, i64 -1, i32 1
  %63 = bitcast float* %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = load i32, i32* %61, align 4
  %66 = bitcast %struct.Candidate** %0 to i64*
  %67 = bitcast i32 %64 to float
  br label %68

68:                                               ; preds = %102, %60
  %69 = phi %struct.Candidate* [ %49, %60 ], [ %72, %102 ]
  %70 = phi i64 [ %38, %60 ], [ %103, %102 ]
  %71 = phi i64 [ %11, %60 ], [ %78, %102 ]
  %72 = inttoptr i64 %70 to %struct.Candidate*
  %73 = bitcast %struct.Candidate* %69 to i8*
  %74 = inttoptr i64 %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %73, i8* align 4 %74, i64 12, i1 false)
  %75 = icmp eq i64 %71, 0
  br i1 %75, label %110, label %76

76:                                               ; preds = %68
  %77 = add nsw i64 %71, -1
  %78 = sdiv i64 %77, 2
  %79 = icmp ult i64 %71, 3
  br i1 %79, label %102, label %80

80:                                               ; preds = %76
  %81 = load i64, i64* %66, align 8
  %82 = sub i64 %7, %81
  %83 = sdiv exact i64 %82, 12
  %84 = add nsw i64 %83, %78
  %85 = icmp sgt i64 %84, 0
  br i1 %85, label %86, label %93

86:                                               ; preds = %80
  %87 = udiv i64 %84, 341
  %88 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %0, i64 %87
  %89 = load %struct.Candidate*, %struct.Candidate** %88, align 8
  %90 = urem i64 %84, 341
  %91 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %89, i64 %90
  %92 = ptrtoint %struct.Candidate* %91 to i64
  br label %102

93:                                               ; preds = %80
  %94 = sub nsw i64 340, %84
  %95 = sdiv i64 %94, -341
  %96 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %0, i64 %95
  %97 = load %struct.Candidate*, %struct.Candidate** %96, align 8
  %98 = srem i64 %94, 341
  %99 = sub nuw nsw i64 340, %98
  %100 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %97, i64 %99
  %101 = ptrtoint %struct.Candidate* %100 to i64
  br label %102

102:                                              ; preds = %76, %86, %93
  %103 = phi i64 [ %7, %76 ], [ %92, %86 ], [ %101, %93 ]
  %104 = inttoptr i64 %103 to i64*
  %105 = load i64, i64* %104, align 4
  %106 = lshr i64 %105, 32
  %107 = trunc i64 %106 to i32
  %108 = bitcast i32 %107 to float
  %109 = fcmp olt float %108, %67
  br i1 %109, label %68, label %110

110:                                              ; preds = %68, %102
  %111 = inttoptr i64 %70 to %struct.Candidate*
  %112 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %111, i64 0, i32 0
  store i32 %59, i32* %112, align 4
  %113 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %111, i64 0, i32 1
  %114 = bitcast float* %113 to i32*
  store i32 %64, i32* %114, align 4
  %115 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %111, i64 0, i32 2
  store i32 %65, i32* %115, align 4
  br label %116

116:                                              ; preds = %47, %110, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__111__sift_downIRZN6tflite13reference_ops17NonMaxSuppressionEPKfiS4_ifffPiPfS5_EUlZNS2_17NonMaxSuppressionES4_iS4_ifffS5_S6_S5_E9CandidateS7_E_NS_16__deque_iteratorIS7_PS7_RS7_PSB_lLl0EEEEEvT0_SF_T_NS_15iterator_traitsISF_E15difference_typeESF_(%struct.Candidate**, %struct.Candidate*, %struct.Candidate**, %struct.Candidate*, %class.anon* dereferenceable(1), i64, %"class.std::__1::__deque_iterator"* byval(%"class.std::__1::__deque_iterator") align 8) local_unnamed_addr #0 comdat {
  %8 = ptrtoint %struct.Candidate* %1 to i64
  %9 = getelementptr inbounds %"class.std::__1::__deque_iterator", %"class.std::__1::__deque_iterator"* %6, i64 0, i32 1
  %10 = load %struct.Candidate*, %struct.Candidate** %9, align 8
  %11 = icmp eq %struct.Candidate* %10, %1
  %12 = bitcast %struct.Candidate* %10 to i8*
  br i1 %11, label %32, label %13

13:                                               ; preds = %7
  %14 = ptrtoint %struct.Candidate* %10 to i64
  %15 = getelementptr inbounds %"class.std::__1::__deque_iterator", %"class.std::__1::__deque_iterator"* %6, i64 0, i32 0
  %16 = load %struct.Candidate**, %struct.Candidate*** %15, align 8
  %17 = ptrtoint %struct.Candidate** %16 to i64
  %18 = ptrtoint %struct.Candidate** %0 to i64
  %19 = sub i64 %17, %18
  %20 = ashr exact i64 %19, 3
  %21 = mul nsw i64 %20, 341
  %22 = bitcast %struct.Candidate** %16 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %14, %23
  %25 = sdiv exact i64 %24, 12
  %26 = add nsw i64 %21, %25
  %27 = bitcast %struct.Candidate** %0 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %8, %28
  %30 = sdiv exact i64 %29, -12
  %31 = add i64 %26, %30
  br label %32

32:                                               ; preds = %7, %13
  %33 = phi i64 [ %31, %13 ], [ 0, %7 ]
  %34 = icmp slt i64 %5, 2
  br i1 %34, label %230, label %35

35:                                               ; preds = %32
  %36 = add nsw i64 %5, -2
  %37 = sdiv i64 %36, 2
  %38 = icmp slt i64 %37, %33
  br i1 %38, label %230, label %39

39:                                               ; preds = %35
  %40 = shl nsw i64 %33, 1
  %41 = or i64 %40, 1
  %42 = bitcast %struct.Candidate** %0 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = sub i64 %8, %43
  %45 = sdiv exact i64 %44, 12
  %46 = add nsw i64 %45, %41
  %47 = icmp sgt i64 %46, 0
  br i1 %47, label %48, label %54

48:                                               ; preds = %39
  %49 = udiv i64 %46, 341
  %50 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %0, i64 %49
  %51 = load %struct.Candidate*, %struct.Candidate** %50, align 8
  %52 = urem i64 %46, 341
  %53 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %51, i64 %52
  br label %62

54:                                               ; preds = %39
  %55 = sub nsw i64 340, %46
  %56 = sdiv i64 %55, -341
  %57 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %0, i64 %56
  %58 = load %struct.Candidate*, %struct.Candidate** %57, align 8
  %59 = srem i64 %55, 341
  %60 = sub nsw i64 340, %59
  %61 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %58, i64 %60
  br label %62

62:                                               ; preds = %48, %54
  %63 = phi %struct.Candidate* [ %53, %48 ], [ %61, %54 ]
  %64 = phi %struct.Candidate** [ %50, %48 ], [ %57, %54 ]
  %65 = ptrtoint %struct.Candidate* %63 to i64
  %66 = add nsw i64 %41, 1
  %67 = icmp slt i64 %66, %5
  br i1 %67, label %68, label %111

68:                                               ; preds = %62
  %69 = bitcast %struct.Candidate* %63 to i64*
  %70 = load i64, i64* %69, align 4
  %71 = bitcast %struct.Candidate** %64 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = sub i64 %65, %72
  %74 = sdiv exact i64 %73, 12
  %75 = add nsw i64 %74, 1
  %76 = icmp sgt i64 %73, -12
  br i1 %76, label %77, label %83

77:                                               ; preds = %68
  %78 = udiv i64 %75, 341
  %79 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %64, i64 %78
  %80 = load %struct.Candidate*, %struct.Candidate** %79, align 8
  %81 = urem i64 %75, 341
  %82 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %80, i64 %81
  br label %91

83:                                               ; preds = %68
  %84 = sub nsw i64 339, %74
  %85 = sdiv i64 %84, -341
  %86 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %64, i64 %85
  %87 = load %struct.Candidate*, %struct.Candidate** %86, align 8
  %88 = srem i64 %84, 341
  %89 = sub nuw nsw i64 340, %88
  %90 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %87, i64 %89
  br label %91

91:                                               ; preds = %77, %83
  %92 = phi %struct.Candidate* [ %82, %77 ], [ %90, %83 ]
  %93 = bitcast %struct.Candidate* %92 to i64*
  %94 = load i64, i64* %93, align 4
  %95 = lshr i64 %70, 32
  %96 = trunc i64 %95 to i32
  %97 = lshr i64 %94, 32
  %98 = trunc i64 %97 to i32
  %99 = bitcast i32 %96 to float
  %100 = bitcast i32 %98 to float
  %101 = fcmp olt float %99, %100
  br i1 %101, label %102, label %111

102:                                              ; preds = %91
  %103 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %63, i64 1
  %104 = ptrtoint %struct.Candidate* %103 to i64
  %105 = sub i64 %104, %72
  %106 = icmp eq i64 %105, 4092
  br i1 %106, label %107, label %111

107:                                              ; preds = %102
  %108 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %64, i64 1
  %109 = bitcast %struct.Candidate** %108 to i64*
  %110 = load i64, i64* %109, align 8
  br label %111

111:                                              ; preds = %62, %107, %102, %91
  %112 = phi %struct.Candidate** [ %64, %91 ], [ %108, %107 ], [ %64, %102 ], [ %64, %62 ]
  %113 = phi i64 [ %65, %91 ], [ %110, %107 ], [ %104, %102 ], [ %65, %62 ]
  %114 = phi i64 [ %41, %91 ], [ %66, %107 ], [ %66, %102 ], [ %41, %62 ]
  %115 = inttoptr i64 %113 to i64*
  %116 = load i64, i64* %115, align 4
  %117 = bitcast %struct.Candidate* %10 to i64*
  %118 = load i64, i64* %117, align 4
  %119 = lshr i64 %116, 32
  %120 = trunc i64 %119 to i32
  %121 = lshr i64 %118, 32
  %122 = trunc i64 %121 to i32
  %123 = bitcast i32 %120 to float
  %124 = bitcast i32 %122 to float
  %125 = fcmp olt float %123, %124
  %126 = trunc i64 %118 to i32
  br i1 %125, label %230, label %127

127:                                              ; preds = %111
  %128 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %10, i64 0, i32 2
  %129 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %10, i64 0, i32 1
  %130 = bitcast float* %129 to i32*
  %131 = load i32, i32* %130, align 4
  %132 = load i32, i32* %128, align 4
  %133 = getelementptr inbounds %"class.std::__1::__deque_iterator", %"class.std::__1::__deque_iterator"* %6, i64 0, i32 0
  %134 = bitcast %struct.Candidate** %9 to i64*
  %135 = bitcast i32 %131 to float
  br label %136

136:                                              ; preds = %214, %127
  %137 = phi i8* [ %12, %127 ], [ %141, %214 ]
  %138 = phi %struct.Candidate** [ %112, %127 ], [ %215, %214 ]
  %139 = phi i64 [ %113, %127 ], [ %216, %214 ]
  %140 = phi i64 [ %114, %127 ], [ %217, %214 ]
  %141 = inttoptr i64 %139 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %137, i8* align 4 %141, i64 12, i1 false)
  store %struct.Candidate** %138, %struct.Candidate*** %133, align 8
  store i64 %139, i64* %134, align 8
  %142 = icmp slt i64 %37, %140
  br i1 %142, label %224, label %143

143:                                              ; preds = %136
  %144 = shl nsw i64 %140, 1
  %145 = or i64 %144, 1
  %146 = load i64, i64* %42, align 8
  %147 = sub i64 %8, %146
  %148 = sdiv exact i64 %147, 12
  %149 = add nsw i64 %148, %145
  %150 = icmp sgt i64 %149, 0
  br i1 %150, label %151, label %157

151:                                              ; preds = %143
  %152 = udiv i64 %149, 341
  %153 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %0, i64 %152
  %154 = load %struct.Candidate*, %struct.Candidate** %153, align 8
  %155 = urem i64 %149, 341
  %156 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %154, i64 %155
  br label %165

157:                                              ; preds = %143
  %158 = sub nsw i64 340, %149
  %159 = sdiv i64 %158, -341
  %160 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %0, i64 %159
  %161 = load %struct.Candidate*, %struct.Candidate** %160, align 8
  %162 = srem i64 %158, 341
  %163 = sub nsw i64 340, %162
  %164 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %161, i64 %163
  br label %165

165:                                              ; preds = %151, %157
  %166 = phi %struct.Candidate* [ %156, %151 ], [ %164, %157 ]
  %167 = phi %struct.Candidate** [ %153, %151 ], [ %160, %157 ]
  %168 = ptrtoint %struct.Candidate* %166 to i64
  %169 = add nsw i64 %145, 1
  %170 = icmp slt i64 %169, %5
  br i1 %170, label %171, label %214

171:                                              ; preds = %165
  %172 = bitcast %struct.Candidate* %166 to i64*
  %173 = load i64, i64* %172, align 4
  %174 = bitcast %struct.Candidate** %167 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = sub i64 %168, %175
  %177 = sdiv exact i64 %176, 12
  %178 = add nsw i64 %177, 1
  %179 = icmp sgt i64 %176, -12
  br i1 %179, label %180, label %186

180:                                              ; preds = %171
  %181 = udiv i64 %178, 341
  %182 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %167, i64 %181
  %183 = load %struct.Candidate*, %struct.Candidate** %182, align 8
  %184 = urem i64 %178, 341
  %185 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %183, i64 %184
  br label %194

186:                                              ; preds = %171
  %187 = sub nsw i64 339, %177
  %188 = sdiv i64 %187, -341
  %189 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %167, i64 %188
  %190 = load %struct.Candidate*, %struct.Candidate** %189, align 8
  %191 = srem i64 %187, 341
  %192 = sub nuw nsw i64 340, %191
  %193 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %190, i64 %192
  br label %194

194:                                              ; preds = %180, %186
  %195 = phi %struct.Candidate* [ %185, %180 ], [ %193, %186 ]
  %196 = bitcast %struct.Candidate* %195 to i64*
  %197 = load i64, i64* %196, align 4
  %198 = lshr i64 %173, 32
  %199 = trunc i64 %198 to i32
  %200 = lshr i64 %197, 32
  %201 = trunc i64 %200 to i32
  %202 = bitcast i32 %199 to float
  %203 = bitcast i32 %201 to float
  %204 = fcmp olt float %202, %203
  br i1 %204, label %205, label %214

205:                                              ; preds = %194
  %206 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %166, i64 1
  %207 = ptrtoint %struct.Candidate* %206 to i64
  %208 = sub i64 %207, %175
  %209 = icmp eq i64 %208, 4092
  br i1 %209, label %210, label %214

210:                                              ; preds = %205
  %211 = getelementptr inbounds %struct.Candidate*, %struct.Candidate** %167, i64 1
  %212 = bitcast %struct.Candidate** %211 to i64*
  %213 = load i64, i64* %212, align 8
  br label %214

214:                                              ; preds = %165, %210, %205, %194
  %215 = phi %struct.Candidate** [ %167, %194 ], [ %211, %210 ], [ %167, %205 ], [ %167, %165 ]
  %216 = phi i64 [ %168, %194 ], [ %213, %210 ], [ %207, %205 ], [ %168, %165 ]
  %217 = phi i64 [ %145, %194 ], [ %169, %210 ], [ %169, %205 ], [ %145, %165 ]
  %218 = inttoptr i64 %216 to i64*
  %219 = load i64, i64* %218, align 4
  %220 = lshr i64 %219, 32
  %221 = trunc i64 %220 to i32
  %222 = bitcast i32 %221 to float
  %223 = fcmp olt float %222, %135
  br i1 %223, label %224, label %136

224:                                              ; preds = %214, %136
  %225 = inttoptr i64 %139 to %struct.Candidate*
  %226 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %225, i64 0, i32 0
  store i32 %126, i32* %226, align 4
  %227 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %225, i64 0, i32 1
  %228 = bitcast float* %227 to i32*
  store i32 %131, i32* %228, align 4
  %229 = getelementptr inbounds %struct.Candidate, %struct.Candidate* %225, i64 0, i32 2
  store i32 %132, i32* %229, align 4
  br label %230

230:                                              ; preds = %224, %111, %32, %35
  ret void
}

; Function Attrs: nofree nounwind
declare float @expf(float) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{!5}
!5 = distinct !{!5, !6}
!6 = distinct !{!6, !"LVerDomain"}
!7 = !{!8}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.isvectorized", i32 1}
!11 = distinct !{!11, !3}
!12 = distinct !{!12, !10}
!13 = distinct !{!13, !3}
!14 = distinct !{!14, !3}
!15 = distinct !{!15, !3}
!16 = distinct !{!16, !3}
!17 = distinct !{!17, !3}
