; ModuleID = '../../content/public/browser/speech_recognition_session_context.cc'
source_filename = "../../content/public/browser/speech_recognition_session_context.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.content::SpeechRecognitionSessionContext" = type { i32, i32, i32, i32, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::vector" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.blink::MediaStreamDevice"*, %"struct.blink::MediaStreamDevice"*, %"class.std::__1::__compressed_pair.52" }
%"struct.blink::MediaStreamDevice" = type { i32, %"class.std::__1::basic_string", %"struct.media::VideoCaptureControlSupport", i32, %"class.absl::optional.2", %"class.absl::optional.2", %"class.std::__1::basic_string", %"class.media::AudioParameters", %"class.absl::optional.19", %"class.absl::optional.47" }
%"struct.media::VideoCaptureControlSupport" = type { i8, i8, i8 }
%"class.absl::optional.2" = type { %"class.absl::optional_internal::optional_data.3" }
%"class.absl::optional_internal::optional_data.3" = type { %"class.absl::optional_internal::optional_data_base.4" }
%"class.absl::optional_internal::optional_data_base.4" = type { %"class.absl::optional_internal::optional_data_dtor_base.5" }
%"class.absl::optional_internal::optional_data_dtor_base.5" = type { i8, %union.anon.6 }
%union.anon.6 = type { %"class.std::__1::basic_string" }
%"class.media::AudioParameters" = type { i32, i32, i32, i32, i32, i32, %"class.std::__1::vector.7", i32, %"class.absl::optional.14" }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { %"class.gfx::Point3F"*, %"class.gfx::Point3F"*, %"class.std::__1::__compressed_pair.9" }
%"class.gfx::Point3F" = type { float, float, float }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.gfx::Point3F"* }
%"class.absl::optional.14" = type { %"class.absl::optional_internal::optional_data.15" }
%"class.absl::optional_internal::optional_data.15" = type { %"class.absl::optional_internal::optional_data_base.16" }
%"class.absl::optional_internal::optional_data_base.16" = type { %"class.absl::optional_internal::optional_data_dtor_base.17" }
%"class.absl::optional_internal::optional_data_dtor_base.17" = type { i8, %union.anon.18 }
%union.anon.18 = type { %"struct.media::AudioParameters::HardwareCapabilities" }
%"struct.media::AudioParameters::HardwareCapabilities" = type { i32, i32 }
%"class.absl::optional.19" = type { %"class.absl::optional_internal::optional_data.20" }
%"class.absl::optional_internal::optional_data.20" = type { %"class.absl::optional_internal::optional_data_base.21" }
%"class.absl::optional_internal::optional_data_base.21" = type { %"class.absl::optional_internal::optional_data_dtor_base.22" }
%"class.absl::optional_internal::optional_data_dtor_base.22" = type { i8, %union.anon.23 }
%union.anon.23 = type { %"class.mojo::StructPtr" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.media::mojom::DisplayMediaInformation"* }
%"class.media::mojom::DisplayMediaInformation" = type { i32, i8, i32, %"class.mojo::StructPtr.26" }
%"class.mojo::StructPtr.26" = type { %"class.std::__1::unique_ptr.27" }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.media::mojom::CaptureHandle"* }
%"class.media::mojom::CaptureHandle" = type { %"class.url::Origin", %"class.std::__1::basic_string.30" }
%"class.std::__1::basic_string.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.33 }
%union.anon.33 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.absl::optional.47" = type { %"class.absl::optional_internal::optional_data.48" }
%"class.absl::optional_internal::optional_data.48" = type { %"class.absl::optional_internal::optional_data_base.49" }
%"class.absl::optional_internal::optional_data_base.49" = type { %"class.absl::optional_internal::optional_data_dtor_base.50" }
%"class.absl::optional_internal::optional_data_dtor_base.50" = type { i8, %union.anon.51 }
%union.anon.51 = type { %"class.base::UnguessableToken" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::MediaStreamDevice"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

@_ZN7content31SpeechRecognitionSessionContextC1Ev = hidden unnamed_addr alias void (%"struct.content::SpeechRecognitionSessionContext"*), void (%"struct.content::SpeechRecognitionSessionContext"*)* @_ZN7content31SpeechRecognitionSessionContextC2Ev
@_ZN7content31SpeechRecognitionSessionContextC1ERKS0_ = hidden unnamed_addr alias void (%"struct.content::SpeechRecognitionSessionContext"*, %"struct.content::SpeechRecognitionSessionContext"*), void (%"struct.content::SpeechRecognitionSessionContext"*, %"struct.content::SpeechRecognitionSessionContext"*)* @_ZN7content31SpeechRecognitionSessionContextC2ERKS0_
@_ZN7content31SpeechRecognitionSessionContextD1Ev = hidden unnamed_addr alias void (%"struct.content::SpeechRecognitionSessionContext"*), void (%"struct.content::SpeechRecognitionSessionContext"*)* @_ZN7content31SpeechRecognitionSessionContextD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content31SpeechRecognitionSessionContextC2Ev(%"struct.content::SpeechRecognitionSessionContext"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.content::SpeechRecognitionSessionContext"* %0 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -2, i32 0, i32 -2>, <4 x i32>* %2, align 8
  %3 = getelementptr inbounds %"struct.content::SpeechRecognitionSessionContext", %"struct.content::SpeechRecognitionSessionContext"* %0, i64 0, i32 4
  tail call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* %3) #7
  %4 = getelementptr inbounds %"struct.content::SpeechRecognitionSessionContext", %"struct.content::SpeechRecognitionSessionContext"* %0, i64 0, i32 5
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 48, i1 false)
  ret void
}

declare void @_ZN3url6OriginC1Ev(%"class.url::Origin"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content31SpeechRecognitionSessionContextC2ERKS0_(%"struct.content::SpeechRecognitionSessionContext"*, %"struct.content::SpeechRecognitionSessionContext"* dereferenceable(144)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.content::SpeechRecognitionSessionContext"* %0 to i8*
  %4 = bitcast %"struct.content::SpeechRecognitionSessionContext"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  %5 = getelementptr inbounds %"struct.content::SpeechRecognitionSessionContext", %"struct.content::SpeechRecognitionSessionContext"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"struct.content::SpeechRecognitionSessionContext", %"struct.content::SpeechRecognitionSessionContext"* %1, i64 0, i32 4
  tail call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %5, %"class.url::Origin"* dereferenceable(80) %6) #7
  %7 = getelementptr inbounds %"struct.content::SpeechRecognitionSessionContext", %"struct.content::SpeechRecognitionSessionContext"* %0, i64 0, i32 5
  %8 = getelementptr inbounds %"struct.content::SpeechRecognitionSessionContext", %"struct.content::SpeechRecognitionSessionContext"* %1, i64 0, i32 5
  %9 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %15 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false) #7
  br label %21

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"struct.content::SpeechRecognitionSessionContext", %"struct.content::SpeechRecognitionSessionContext"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %7, i8* %18, i64 %20) #7
  br label %21

21:                                               ; preds = %13, %16
  %22 = getelementptr inbounds %"struct.content::SpeechRecognitionSessionContext", %"struct.content::SpeechRecognitionSessionContext"* %0, i64 0, i32 6
  %23 = getelementptr inbounds %"struct.content::SpeechRecognitionSessionContext", %"struct.content::SpeechRecognitionSessionContext"* %1, i64 0, i32 6
  %24 = bitcast %"class.std::__1::vector"* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #7
  %25 = getelementptr inbounds %"struct.content::SpeechRecognitionSessionContext", %"struct.content::SpeechRecognitionSessionContext"* %1, i64 0, i32 6, i32 0, i32 1
  %26 = bitcast %"struct.blink::MediaStreamDevice"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::vector"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %27, %29
  %31 = sdiv exact i64 %30, 232
  %32 = icmp eq i64 %30, 0
  br i1 %32, label %61, label %33

33:                                               ; preds = %21
  %34 = icmp ugt i64 %31, 79511827903920481
  br i1 %34, label %35, label %37

35:                                               ; preds = %33
  %36 = bitcast %"class.std::__1::vector"* %22 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %36) #8
  unreachable

37:                                               ; preds = %33
  %38 = tail call i8* @_Znwm(i64 %30) #9
  %39 = bitcast i8* %38 to %"struct.blink::MediaStreamDevice"*
  %40 = getelementptr inbounds %"struct.content::SpeechRecognitionSessionContext", %"struct.content::SpeechRecognitionSessionContext"* %0, i64 0, i32 6, i32 0, i32 1
  %41 = bitcast %"struct.blink::MediaStreamDevice"** %40 to i8**
  store i8* %38, i8** %41, align 8
  %42 = bitcast %"class.std::__1::vector"* %22 to i8**
  store i8* %38, i8** %42, align 8
  %43 = getelementptr inbounds %"struct.blink::MediaStreamDevice", %"struct.blink::MediaStreamDevice"* %39, i64 %31
  %44 = getelementptr inbounds %"struct.content::SpeechRecognitionSessionContext", %"struct.content::SpeechRecognitionSessionContext"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  store %"struct.blink::MediaStreamDevice"* %43, %"struct.blink::MediaStreamDevice"** %44, align 8
  %45 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %23, i64 0, i32 0, i32 0
  %46 = load %"struct.blink::MediaStreamDevice"*, %"struct.blink::MediaStreamDevice"** %45, align 8
  %47 = load %"struct.blink::MediaStreamDevice"*, %"struct.blink::MediaStreamDevice"** %25, align 8
  %48 = bitcast %"struct.blink::MediaStreamDevice"** %40 to i64*
  %49 = ptrtoint i8* %38 to i64
  %50 = icmp eq %"struct.blink::MediaStreamDevice"* %46, %47
  br i1 %50, label %59, label %51

51:                                               ; preds = %37, %51
  %52 = phi %"struct.blink::MediaStreamDevice"* [ %55, %51 ], [ %39, %37 ]
  %53 = phi %"struct.blink::MediaStreamDevice"* [ %54, %51 ], [ %46, %37 ]
  tail call void @_ZN5blink17MediaStreamDeviceC1ERKS0_(%"struct.blink::MediaStreamDevice"* %52, %"struct.blink::MediaStreamDevice"* dereferenceable(232) %53) #7
  %54 = getelementptr inbounds %"struct.blink::MediaStreamDevice", %"struct.blink::MediaStreamDevice"* %53, i64 1
  %55 = getelementptr inbounds %"struct.blink::MediaStreamDevice", %"struct.blink::MediaStreamDevice"* %52, i64 1
  %56 = icmp eq %"struct.blink::MediaStreamDevice"* %54, %47
  br i1 %56, label %57, label %51

57:                                               ; preds = %51
  %58 = ptrtoint %"struct.blink::MediaStreamDevice"* %55 to i64
  br label %59

59:                                               ; preds = %57, %37
  %60 = phi i64 [ %49, %37 ], [ %58, %57 ]
  store i64 %60, i64* %48, align 8
  br label %61

61:                                               ; preds = %21, %59
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content31SpeechRecognitionSessionContextD2Ev(%"struct.content::SpeechRecognitionSessionContext"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.content::SpeechRecognitionSessionContext", %"struct.content::SpeechRecognitionSessionContext"* %0, i64 0, i32 6
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load %"struct.blink::MediaStreamDevice"*, %"struct.blink::MediaStreamDevice"** %3, align 8
  %5 = icmp eq %"struct.blink::MediaStreamDevice"* %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.blink::MediaStreamDevice"* %4 to i8*
  %8 = getelementptr inbounds %"struct.content::SpeechRecognitionSessionContext", %"struct.content::SpeechRecognitionSessionContext"* %0, i64 0, i32 6, i32 0, i32 1
  %9 = load %"struct.blink::MediaStreamDevice"*, %"struct.blink::MediaStreamDevice"** %8, align 8
  %10 = icmp eq %"struct.blink::MediaStreamDevice"* %9, %4
  br i1 %10, label %18, label %11

11:                                               ; preds = %6, %11
  %12 = phi %"struct.blink::MediaStreamDevice"* [ %13, %11 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"struct.blink::MediaStreamDevice", %"struct.blink::MediaStreamDevice"* %12, i64 -1
  tail call void @_ZN5blink17MediaStreamDeviceD1Ev(%"struct.blink::MediaStreamDevice"* %13) #7
  %14 = icmp eq %"struct.blink::MediaStreamDevice"* %13, %4
  br i1 %14, label %15, label %11

15:                                               ; preds = %11
  %16 = bitcast %"class.std::__1::vector"* %2 to i8**
  %17 = load i8*, i8** %16, align 8
  br label %18

18:                                               ; preds = %15, %6
  %19 = phi i8* [ %17, %15 ], [ %7, %6 ]
  store %"struct.blink::MediaStreamDevice"* %4, %"struct.blink::MediaStreamDevice"** %8, align 8
  tail call void @_ZdlPv(i8* %19) #9
  br label %20

20:                                               ; preds = %1, %18
  %21 = getelementptr inbounds %"struct.content::SpeechRecognitionSessionContext", %"struct.content::SpeechRecognitionSessionContext"* %0, i64 0, i32 5
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #9
  br label %29

29:                                               ; preds = %20, %26
  %30 = getelementptr inbounds %"struct.content::SpeechRecognitionSessionContext", %"struct.content::SpeechRecognitionSessionContext"* %0, i64 0, i32 4
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %30) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink17MediaStreamDeviceD1Ev(%"struct.blink::MediaStreamDevice"*) unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN5blink17MediaStreamDeviceC1ERKS0_(%"struct.blink::MediaStreamDevice"*, %"struct.blink::MediaStreamDevice"* dereferenceable(232)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
