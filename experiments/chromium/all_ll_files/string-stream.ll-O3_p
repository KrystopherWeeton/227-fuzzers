; ModuleID = '../../v8/src/strings/string-stream.cc'
source_filename = "../../v8/src/strings/string-stream.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::internal::SoleReadOnlyHeap" = type { %"class.v8::internal::ReadOnlyHeap", [587 x i64] }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.547" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.145", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.25", i64 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.25", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.25", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.25", i64, i64, %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.35", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.152", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.167", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.25", i64, i8, %"struct.std::__1::atomic.25", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.171", %"class.std::__1::vector.171", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.184", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.314", %"class.std::__1::unique_ptr.320", %"class.std::__1::unique_ptr.326", %"class.std::__1::unique_ptr.365", %"class.std::__1::unique_ptr.404", %"class.std::__1::unique_ptr.434", %"class.std::__1::unique_ptr.440", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.456", %"class.std::__1::unique_ptr.456", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.468", %"class.std::__1::unique_ptr.468", %"class.std::__1::unique_ptr.474", %"class.std::__1::unique_ptr.480", %"class.std::__1::shared_ptr.486", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.509", %"class.std::__1::unique_ptr.535", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.541", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.554", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.336", i8, [7 x i8], %"class.std::__1::unordered_map.560", %"class.std::__1::unordered_map.586", %"class.std::__1::unordered_map.560", %"class.std::__1::unordered_map.610", %"class.std::__1::vector.638", i8, %"class.std::__1::unique_ptr.645", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.8", %"class.std::__1::__compressed_pair.15", %"class.std::__1::__compressed_pair.20", %"class.std::__1::__compressed_pair.22", [4 x i8] }>
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10", %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i64 }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.30", %"struct.std::__1::atomic.30", %"struct.std::__1::atomic.30" }
%"struct.std::__1::atomic.30" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__atomic_base.32" }
%"struct.std::__1::__atomic_base.32" = type { %"struct.std::__1::__cxx_atomic_impl.33" }
%"struct.std::__1::__cxx_atomic_impl.33" = type { %"struct.std::__1::__cxx_atomic_base_impl.34" }
%"struct.std::__1::__cxx_atomic_base_impl.34" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.651", %"class.std::__1::unique_ptr.672", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.682", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.822", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.835", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.845", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.856", %"struct.std::__1::atomic.158", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.931", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.974"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.983", i32, i8, i8, i32, i32, %"class.std::__1::vector.989", %"class.std::__1::vector.989", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.996", i64, %"class.std::__1::unordered_map.997", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.547", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.166", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1053", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1091", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1125", %"class.std::__1::vector.1129", %"class.std::__1::vector.1129", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.651" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.145", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.652", %"class.std::__1::unique_ptr.666" }
%"class.std::__1::unique_ptr.652" = type { %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.655" }
%"class.std::__1::vector.655" = type { %"class.std::__1::__vector_base.656" }
%"class.std::__1::__vector_base.656" = type { %"class.std::__1::unique_ptr.657"*, %"class.std::__1::unique_ptr.657"*, %"class.std::__1::__compressed_pair.658" }
%"class.std::__1::unique_ptr.657" = type { %"class.std::__1::__compressed_pair.1153" }
%"class.std::__1::__compressed_pair.1153" = type { %"struct.std::__1::__compressed_pair_elem.1154" }
%"struct.std::__1::__compressed_pair_elem.1154" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.658" = type { %"struct.std::__1::__compressed_pair_elem.659" }
%"struct.std::__1::__compressed_pair_elem.659" = type { %"class.std::__1::unique_ptr.657"* }
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.672" = type { %"class.std::__1::__compressed_pair.673" }
%"class.std::__1::__compressed_pair.673" = type { %"struct.std::__1::__compressed_pair_elem.674" }
%"struct.std::__1::__compressed_pair_elem.674" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.675", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.675" = type { %"struct.std::__1::__atomic_base.676" }
%"struct.std::__1::__atomic_base.676" = type { %"struct.std::__1::__cxx_atomic_impl.677" }
%"struct.std::__1::__cxx_atomic_impl.677" = type { %"struct.std::__1::__cxx_atomic_base_impl.678" }
%"struct.std::__1::__cxx_atomic_base_impl.678" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type { %"class.v8::internal::StringAllocator"*, i32, i32, i32, i8* }
%"class.v8::internal::StringAllocator" = type { i32 (...)** }
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.682" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.683", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.683" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.684", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.684" = type { %"class.std::__1::__vector_base.685" }
%"class.std::__1::__vector_base.685" = type { %"class.std::__1::unique_ptr.686"*, %"class.std::__1::unique_ptr.686"*, %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::unique_ptr.686" = type opaque
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.std::__1::unique_ptr.686"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon.692 }
%union.anon.692 = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.693", %"class.std::__1::unique_ptr.699", %"struct.std::__1::atomic.158", %"class.std::__1::unique_ptr.705", %"class.std::__1::unique_ptr.711", %"class.std::__1::unique_ptr.717", %"class.std::__1::unique_ptr.723", %"class.std::__1::unique_ptr.729", %"class.std::__1::set.735", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.693" = type { %"class.std::__1::__compressed_pair.694" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.705" = type { %"class.std::__1::__compressed_pair.706" }
%"class.std::__1::__compressed_pair.706" = type { %"struct.std::__1::__compressed_pair_elem.707" }
%"struct.std::__1::__compressed_pair_elem.707" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.711" = type { %"class.std::__1::__compressed_pair.712" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.717" = type { %"class.std::__1::__compressed_pair.718" }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.719" }
%"struct.std::__1::__compressed_pair_elem.719" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.723" = type { %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.735" = type { %"class.std::__1::__tree.736" }
%"class.std::__1::__tree.736" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.737", %"class.std::__1::__compressed_pair.741" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.741" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.744" }
%"class.v8::internal::TaggedImpl.744" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.743" }
%"class.v8::internal::TaggedImpl.743" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.751", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.751" = type { %"class.std::__1::__compressed_pair.752" }
%"class.std::__1::__compressed_pair.752" = type { %"struct.std::__1::__compressed_pair_elem.753" }
%"struct.std::__1::__compressed_pair_elem.753" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.757", %"class.v8::internal::DetachableVector.758", %"class.v8::internal::DetachableVector.757", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.758" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.757" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.25", %"class.std::__1::unique_ptr.745", %"class.std::__1::unique_ptr.487" }
%"class.std::__1::unique_ptr.745" = type { %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.747" }
%"struct.std::__1::__compressed_pair_elem.747" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.487" = type { %"class.std::__1::__compressed_pair.488" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.490", %"class.std::__1::set.498" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.490" = type { %"class.std::__1::__tree.491" }
%"class.std::__1::__tree.491" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.492", %"class.std::__1::__compressed_pair.496" }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::set.498" = type { %"class.std::__1::__tree.499" }
%"class.std::__1::__tree.499" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.492", %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.759", %"class.std::__1::vector.765", %"class.std::__1::unique_ptr.772", %"class.std::__1::vector.779", %"class.std::__1::unique_ptr.786", i64, %"class.std::__1::vector.792", %"class.std::__1::vector.800", %"class.std::__1::vector.808", i8, i8, i32 }
%"class.std::__1::unique_ptr.759" = type { %"class.std::__1::__compressed_pair.760" }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.765" = type { %"class.std::__1::__vector_base.766" }
%"class.std::__1::__vector_base.766" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.767" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.767" = type { %"struct.std::__1::__compressed_pair_elem.768" }
%"struct.std::__1::__compressed_pair_elem.768" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.772" = type { %"class.std::__1::__compressed_pair.773" }
%"class.std::__1::__compressed_pair.773" = type { %"struct.std::__1::__compressed_pair_elem.774" }
%"struct.std::__1::__compressed_pair_elem.774" = type { %"class.v8::internal::GlobalHandles::NodeSpace.775"* }
%"class.v8::internal::GlobalHandles::NodeSpace.775" = type opaque
%"class.std::__1::vector.779" = type { %"class.std::__1::__vector_base.780" }
%"class.std::__1::__vector_base.780" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.781" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.782" }
%"struct.std::__1::__compressed_pair_elem.782" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.786" = type { %"class.std::__1::__compressed_pair.787" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.788" }
%"struct.std::__1::__compressed_pair_elem.788" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.792" = type { %"class.std::__1::__vector_base.793" }
%"class.std::__1::__vector_base.793" = type { %"struct.std::__1::pair.794"*, %"struct.std::__1::pair.794"*, %"class.std::__1::__compressed_pair.795" }
%"struct.std::__1::pair.794" = type opaque
%"class.std::__1::__compressed_pair.795" = type { %"struct.std::__1::__compressed_pair_elem.796" }
%"struct.std::__1::__compressed_pair_elem.796" = type { %"struct.std::__1::pair.794"* }
%"class.std::__1::vector.800" = type { %"class.std::__1::__vector_base.801" }
%"class.std::__1::__vector_base.801" = type { %"struct.std::__1::pair.802"*, %"struct.std::__1::pair.802"*, %"class.std::__1::__compressed_pair.803" }
%"struct.std::__1::pair.802" = type opaque
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.std::__1::pair.802"* }
%"class.std::__1::vector.808" = type { %"class.std::__1::__vector_base.809" }
%"class.std::__1::__vector_base.809" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.810" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.815", %"class.std::__1::vector.822" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { i64**, i64**, %"class.std::__1::__compressed_pair.817" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.829" }
%"class.std::__1::unique_ptr.829" = type { %"class.std::__1::__compressed_pair.830" }
%"class.std::__1::__compressed_pair.830" = type { %"struct.std::__1::__compressed_pair_elem.831" }
%"struct.std::__1::__compressed_pair_elem.831" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.822" = type { %"class.std::__1::__vector_base.823" }
%"class.std::__1::__vector_base.823" = type { i32*, i32*, %"class.std::__1::__compressed_pair.824" }
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.825" }
%"struct.std::__1::__compressed_pair_elem.825" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.835" = type { %"struct.std::__1::__atomic_base.836" }
%"struct.std::__1::__atomic_base.836" = type { %"struct.std::__1::__cxx_atomic_impl.837" }
%"struct.std::__1::__cxx_atomic_impl.837" = type { %"struct.std::__1::__cxx_atomic_base_impl.838" }
%"struct.std::__1::__cxx_atomic_base_impl.838" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.845" = type { %"struct.std::__1::__atomic_base.846" }
%"struct.std::__1::__atomic_base.846" = type { %"struct.std::__1::__cxx_atomic_impl.847" }
%"struct.std::__1::__cxx_atomic_impl.847" = type { %"struct.std::__1::__cxx_atomic_base_impl.848" }
%"struct.std::__1::__cxx_atomic_base_impl.848" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.851" }
%"struct.std::__1::__compressed_pair_elem.851" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.852 }
%union.anon.852 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.856" = type { %"class.std::__1::__hash_table.857" }
%"class.std::__1::__hash_table.857" = type <{ %"class.std::__1::unique_ptr.858", %"class.std::__1::__compressed_pair.868", %"class.std::__1::__compressed_pair.873", %"class.std::__1::__compressed_pair.876", [4 x i8] }>
%"class.std::__1::unique_ptr.858" = type { %"class.std::__1::__compressed_pair.859" }
%"class.std::__1::__compressed_pair.859" = type { %"struct.std::__1::__compressed_pair_elem.860", %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.860" = type { %"struct.std::__1::__hash_node_base.861"** }
%"struct.std::__1::__hash_node_base.861" = type { %"struct.std::__1::__hash_node_base.861"* }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"class.std::__1::__bucket_list_deallocator.863" }
%"class.std::__1::__bucket_list_deallocator.863" = type { %"class.std::__1::__compressed_pair.864" }
%"class.std::__1::__compressed_pair.864" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.869" }
%"struct.std::__1::__compressed_pair_elem.869" = type { %"struct.std::__1::__hash_node_base.861" }
%"class.std::__1::__compressed_pair.873" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::atomic.158" = type { %"struct.std::__1::__atomic_base.159" }
%"struct.std::__1::__atomic_base.159" = type { %"struct.std::__1::__cxx_atomic_impl.160" }
%"struct.std::__1::__cxx_atomic_impl.160" = type { %"struct.std::__1::__cxx_atomic_base_impl.161" }
%"struct.std::__1::__cxx_atomic_base_impl.161" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.882", %"class.v8::internal::Handle.888", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.889", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.882" = type { %"class.std::__1::__compressed_pair.883" }
%"class.std::__1::__compressed_pair.883" = type { %"struct.std::__1::__compressed_pair_elem.884" }
%"struct.std::__1::__compressed_pair_elem.884" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.888" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.889" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.890", %"class.std::__1::vector.896", %"class.std::__1::unique_ptr.904", %"class.std::__1::unique_ptr.910", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.916", %"class.std::__1::vector.922", %"struct.std::__1::pair.930" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.890" = type { %"class.std::__1::__compressed_pair.891" }
%"class.std::__1::__compressed_pair.891" = type { %"struct.std::__1::__compressed_pair_elem.892" }
%"struct.std::__1::__compressed_pair_elem.892" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.896" = type { %"class.std::__1::__vector_base.897" }
%"class.std::__1::__vector_base.897" = type { %"class.std::__1::unique_ptr.898"*, %"class.std::__1::unique_ptr.898"*, %"class.std::__1::__compressed_pair.899" }
%"class.std::__1::unique_ptr.898" = type opaque
%"class.std::__1::__compressed_pair.899" = type { %"struct.std::__1::__compressed_pair_elem.900" }
%"struct.std::__1::__compressed_pair_elem.900" = type { %"class.std::__1::unique_ptr.898"* }
%"class.std::__1::unique_ptr.904" = type { %"class.std::__1::__compressed_pair.905" }
%"class.std::__1::__compressed_pair.905" = type { %"struct.std::__1::__compressed_pair_elem.906" }
%"struct.std::__1::__compressed_pair_elem.906" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.910" = type { %"class.std::__1::__compressed_pair.911" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem.912" }
%"struct.std::__1::__compressed_pair_elem.912" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.916" = type { %"class.std::__1::__compressed_pair.917" }
%"class.std::__1::__compressed_pair.917" = type { %"struct.std::__1::__compressed_pair_elem.918" }
%"struct.std::__1::__compressed_pair_elem.918" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.922" = type { %"class.std::__1::__vector_base.923" }
%"class.std::__1::__vector_base.923" = type { %"struct.std::__1::pair.924"*, %"struct.std::__1::pair.924"*, %"class.std::__1::__compressed_pair.925" }
%"struct.std::__1::pair.924" = type opaque
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"struct.std::__1::pair.924"* }
%"struct.std::__1::pair.930" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.6"*, i16, i8*)*, i8* }
%"class.v8::Local.6" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.934", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.934" = type { %"class.std::__1::__hash_table.935" }
%"class.std::__1::__hash_table.935" = type <{ %"class.std::__1::unique_ptr.936", %"class.std::__1::__compressed_pair.946", %"class.std::__1::__compressed_pair.951", %"class.std::__1::__compressed_pair.955", [4 x i8] }>
%"class.std::__1::unique_ptr.936" = type { %"class.std::__1::__compressed_pair.937" }
%"class.std::__1::__compressed_pair.937" = type { %"struct.std::__1::__compressed_pair_elem.938", %"struct.std::__1::__compressed_pair_elem.940" }
%"struct.std::__1::__compressed_pair_elem.938" = type { %"struct.std::__1::__hash_node_base.939"** }
%"struct.std::__1::__hash_node_base.939" = type { %"struct.std::__1::__hash_node_base.939"* }
%"struct.std::__1::__compressed_pair_elem.940" = type { %"class.std::__1::__bucket_list_deallocator.941" }
%"class.std::__1::__bucket_list_deallocator.941" = type { %"class.std::__1::__compressed_pair.942" }
%"class.std::__1::__compressed_pair.942" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.946" = type { %"struct.std::__1::__compressed_pair_elem.947" }
%"struct.std::__1::__compressed_pair_elem.947" = type { %"struct.std::__1::__hash_node_base.939" }
%"class.std::__1::__compressed_pair.951" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.955" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.969" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.963"**, %"struct.std::__1::pair.963"**, %"struct.std::__1::pair.963"**, %"class.std::__1::__compressed_pair.964" }
%"struct.std::__1::pair.963" = type opaque
%"class.std::__1::__compressed_pair.964" = type { %"struct.std::__1::__compressed_pair_elem.965" }
%"struct.std::__1::__compressed_pair_elem.965" = type { %"struct.std::__1::pair.963"** }
%"class.std::__1::__compressed_pair.969" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.974" = type { %"class.std::__1::__vector_base.975" }
%"class.std::__1::__vector_base.975" = type { %"class.v8::internal::Handle.976"*, %"class.v8::internal::Handle.976"*, %"class.std::__1::__compressed_pair.977" }
%"class.v8::internal::Handle.976" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.977" = type { %"struct.std::__1::__compressed_pair_elem.978" }
%"struct.std::__1::__compressed_pair_elem.978" = type { %"class.v8::internal::Handle.976"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector.982", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector.982" = type { %"class.v8::internal::Vector.2", [128 x i8] }
%"class.v8::internal::Vector.2" = type { i8*, i64 }
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.840", i32, %"class.v8::Local.6" }
%"class.v8::Local.840" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.983" = type { %"class.std::__1::__compressed_pair.984" }
%"class.std::__1::__compressed_pair.984" = type { %"struct.std::__1::__compressed_pair_elem.985" }
%"struct.std::__1::__compressed_pair_elem.985" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.815", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.989" = type { %"class.std::__1::__vector_base.990" }
%"class.std::__1::__vector_base.990" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.991" }
%"class.std::__1::__compressed_pair.991" = type { %"struct.std::__1::__compressed_pair_elem.992" }
%"struct.std::__1::__compressed_pair_elem.992" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.996" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.997" = type { %"class.std::__1::__hash_table.998" }
%"class.std::__1::__hash_table.998" = type <{ %"class.std::__1::unique_ptr.999", %"class.std::__1::__compressed_pair.1009", %"class.std::__1::__compressed_pair.1014", %"class.std::__1::__compressed_pair.1017", [4 x i8] }>
%"class.std::__1::unique_ptr.999" = type { %"class.std::__1::__compressed_pair.1000" }
%"class.std::__1::__compressed_pair.1000" = type { %"struct.std::__1::__compressed_pair_elem.1001", %"struct.std::__1::__compressed_pair_elem.1003" }
%"struct.std::__1::__compressed_pair_elem.1001" = type { %"struct.std::__1::__hash_node_base.1002"** }
%"struct.std::__1::__hash_node_base.1002" = type { %"struct.std::__1::__hash_node_base.1002"* }
%"struct.std::__1::__compressed_pair_elem.1003" = type { %"class.std::__1::__bucket_list_deallocator.1004" }
%"class.std::__1::__bucket_list_deallocator.1004" = type { %"class.std::__1::__compressed_pair.1005" }
%"class.std::__1::__compressed_pair.1005" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.1010" }
%"struct.std::__1::__compressed_pair_elem.1010" = type { %"struct.std::__1::__hash_node_base.1002" }
%"class.std::__1::__compressed_pair.1014" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.1017" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.166" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1021", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1050", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1051", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1021" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1046, %union.anon.1048, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1046 = type { i64 }
%union.anon.1048 = type { i64 }
%"class.std::__1::weak_ptr.1050" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.25", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.166" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1051" = type { %"class.v8::PersistentBase.1052" }
%"class.v8::PersistentBase.1052" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1022", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1022" = type { %"class.std::__1::__hash_table.1023" }
%"class.std::__1::__hash_table.1023" = type <{ %"class.std::__1::unique_ptr.1024", %"class.std::__1::__compressed_pair.1034", %"class.std::__1::__compressed_pair.1039", %"class.std::__1::__compressed_pair.1042", [4 x i8] }>
%"class.std::__1::unique_ptr.1024" = type { %"class.std::__1::__compressed_pair.1025" }
%"class.std::__1::__compressed_pair.1025" = type { %"struct.std::__1::__compressed_pair_elem.1026", %"struct.std::__1::__compressed_pair_elem.1028" }
%"struct.std::__1::__compressed_pair_elem.1026" = type { %"struct.std::__1::__hash_node_base.1027"** }
%"struct.std::__1::__hash_node_base.1027" = type { %"struct.std::__1::__hash_node_base.1027"* }
%"struct.std::__1::__compressed_pair_elem.1028" = type { %"class.std::__1::__bucket_list_deallocator.1029" }
%"class.std::__1::__bucket_list_deallocator.1029" = type { %"class.std::__1::__compressed_pair.1030" }
%"class.std::__1::__compressed_pair.1030" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.1034" = type { %"struct.std::__1::__compressed_pair_elem.1035" }
%"struct.std::__1::__compressed_pair_elem.1035" = type { %"struct.std::__1::__hash_node_base.1027" }
%"class.std::__1::__compressed_pair.1039" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.1042" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1053" = type { %"class.std::__1::__compressed_pair.1054" }
%"class.std::__1::__compressed_pair.1054" = type { %"struct.std::__1::__compressed_pair_elem.1055" }
%"struct.std::__1::__compressed_pair_elem.1055" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1082", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1058", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1062", %"class.std::__1::unique_ptr.1068", %"class.std::__1::unique_ptr.480", %"class.std::__1::vector.1074", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1058" = type { %"struct.std::__1::__atomic_base.1059" }
%"struct.std::__1::__atomic_base.1059" = type { %"struct.std::__1::__cxx_atomic_impl.1060" }
%"struct.std::__1::__cxx_atomic_impl.1060" = type { %"struct.std::__1::__cxx_atomic_base_impl.1061" }
%"struct.std::__1::__cxx_atomic_base_impl.1061" = type { i32 }
%"class.std::__1::unique_ptr.1062" = type { %"class.std::__1::__compressed_pair.1063" }
%"class.std::__1::__compressed_pair.1063" = type { %"struct.std::__1::__compressed_pair_elem.1064" }
%"struct.std::__1::__compressed_pair_elem.1064" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.815" }
%"class.std::__1::unique_ptr.1068" = type { %"class.std::__1::__compressed_pair.1069" }
%"class.std::__1::__compressed_pair.1069" = type { %"struct.std::__1::__compressed_pair_elem.1070" }
%"struct.std::__1::__compressed_pair_elem.1070" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1074" = type { %"class.std::__1::__vector_base.1075" }
%"class.std::__1::__vector_base.1075" = type { %"struct.std::__1::pair.1076"*, %"struct.std::__1::pair.1076"*, %"class.std::__1::__compressed_pair.1077" }
%"struct.std::__1::pair.1076" = type opaque
%"class.std::__1::__compressed_pair.1077" = type { %"struct.std::__1::__compressed_pair_elem.1078" }
%"struct.std::__1::__compressed_pair_elem.1078" = type { %"struct.std::__1::pair.1076"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.25"*, %"class.std::__1::unique_ptr.103" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.44", %"class.std::__1::vector.44", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.46" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.51" }
%"class.std::__1::__hash_table.51" = type <{ %"class.std::__1::unique_ptr.52", %"class.std::__1::__compressed_pair.62", %"class.std::__1::__compressed_pair.67", %"class.std::__1::__compressed_pair.69", [4 x i8] }>
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54", %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"struct.std::__1::__hash_node_base.55"** }
%"struct.std::__1::__hash_node_base.55" = type { %"struct.std::__1::__hash_node_base.55"* }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.std::__1::__bucket_list_deallocator.57" }
%"class.std::__1::__bucket_list_deallocator.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.std::__1::__hash_node_base.55" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.30", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.92", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.25"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.30", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.30", %"struct.std::__1::atomic.74", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.74" = type { %"struct.std::__1::__atomic_base.75" }
%"struct.std::__1::__atomic_base.75" = type { %"struct.std::__1::__cxx_atomic_impl.76" }
%"struct.std::__1::__cxx_atomic_impl.76" = type { %"struct.std::__1::__cxx_atomic_base_impl.77" }
%"struct.std::__1::__cxx_atomic_base_impl.77" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.78" }
%"class.std::__1::vector.78" = type { %"class.std::__1::__vector_base.79" }
%"class.std::__1::__vector_base.79" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.80" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.85", %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::atomic.92" = type { %"struct.std::__1::__atomic_base.93" }
%"struct.std::__1::__atomic_base.93" = type { %"struct.std::__1::__cxx_atomic_impl.94" }
%"struct.std::__1::__cxx_atomic_impl.94" = type { %"struct.std::__1::__cxx_atomic_base_impl.95" }
%"struct.std::__1::__cxx_atomic_base_impl.95" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.96", i8, [7 x i8] }>
%"class.std::__1::vector.96" = type { %"class.std::__1::__vector_base.97" }
%"class.std::__1::__vector_base.97" = type { i64*, i64*, %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.25", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1082" = type { %"class.std::__1::__compressed_pair.1083" }
%"class.std::__1::__compressed_pair.1083" = type { %"struct.std::__1::__compressed_pair_elem.1084" }
%"struct.std::__1::__compressed_pair_elem.1084" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1091" = type { %"class.std::__1::__compressed_pair.1092" }
%"class.std::__1::__compressed_pair.1092" = type { %"struct.std::__1::__compressed_pair_elem.1093" }
%"struct.std::__1::__compressed_pair_elem.1093" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.841", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.841" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1099" }
%"class.std::__1::unordered_map.1099" = type { %"class.std::__1::__hash_table.1100" }
%"class.std::__1::__hash_table.1100" = type <{ %"class.std::__1::unique_ptr.1101", %"class.std::__1::__compressed_pair.1111", %"class.std::__1::__compressed_pair.1116", %"class.std::__1::__compressed_pair.1119", [4 x i8] }>
%"class.std::__1::unique_ptr.1101" = type { %"class.std::__1::__compressed_pair.1102" }
%"class.std::__1::__compressed_pair.1102" = type { %"struct.std::__1::__compressed_pair_elem.1103", %"struct.std::__1::__compressed_pair_elem.1105" }
%"struct.std::__1::__compressed_pair_elem.1103" = type { %"struct.std::__1::__hash_node_base.1104"** }
%"struct.std::__1::__hash_node_base.1104" = type { %"struct.std::__1::__hash_node_base.1104"* }
%"struct.std::__1::__compressed_pair_elem.1105" = type { %"class.std::__1::__bucket_list_deallocator.1106" }
%"class.std::__1::__bucket_list_deallocator.1106" = type { %"class.std::__1::__compressed_pair.1107" }
%"class.std::__1::__compressed_pair.1107" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.1111" = type { %"struct.std::__1::__compressed_pair_elem.1112" }
%"struct.std::__1::__compressed_pair_elem.1112" = type { %"struct.std::__1::__hash_node_base.1104" }
%"class.std::__1::__compressed_pair.1116" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.1119" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::atomic.1125" = type { %"struct.std::__1::__atomic_base.1126" }
%"struct.std::__1::__atomic_base.1126" = type { %"struct.std::__1::__cxx_atomic_impl.1127" }
%"struct.std::__1::__cxx_atomic_impl.1127" = type { %"struct.std::__1::__cxx_atomic_base_impl.1128" }
%"struct.std::__1::__cxx_atomic_base_impl.1128" = type { %"class.std::__1::vector.1129"* }
%"class.std::__1::vector.1129" = type { %"class.std::__1::__vector_base.1130" }
%"class.std::__1::__vector_base.1130" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1131" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1131" = type { %"struct.std::__1::__compressed_pair_elem.1132" }
%"struct.std::__1::__compressed_pair_elem.1132" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.35" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__cxx_atomic_impl.37" }
%"struct.std::__1::__cxx_atomic_impl.37" = type { %"struct.std::__1::__cxx_atomic_base_impl.38" }
%"struct.std::__1::__cxx_atomic_base_impl.38" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.39" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.25", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.109" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.109" = type { %"class.std::__1::__vector_base.110" }
%"class.std::__1::__vector_base.110" = type { %"struct.std::__1::pair.111"*, %"struct.std::__1::pair.111"*, %"class.std::__1::__compressed_pair.112" }
%"struct.std::__1::pair.111" = type { i32, i64 }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"struct.std::__1::pair.111"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.25", i32, %"struct.std::__1::atomic.25", %"class.v8::base::Mutex", %"struct.std::__1::atomic.25" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.117" }
%"class.std::__1::unordered_map.117" = type { %"class.std::__1::__hash_table.118" }
%"class.std::__1::__hash_table.118" = type <{ %"class.std::__1::unique_ptr.119", %"class.std::__1::__compressed_pair.129", %"class.std::__1::__compressed_pair.134", %"class.std::__1::__compressed_pair.139", [4 x i8] }>
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121", %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"struct.std::__1::__hash_node_base.122"** }
%"struct.std::__1::__hash_node_base.122" = type { %"struct.std::__1::__hash_node_base.122"* }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.std::__1::__bucket_list_deallocator.124" }
%"class.std::__1::__bucket_list_deallocator.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"struct.std::__1::__hash_node_base.122" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.158", %"struct.std::__1::atomic.162", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.25" }
%"struct.std::__1::atomic.162" = type { %"struct.std::__1::__atomic_base.163" }
%"struct.std::__1::__atomic_base.163" = type { %"struct.std::__1::__cxx_atomic_impl.164" }
%"struct.std::__1::__cxx_atomic_impl.164" = type { %"struct.std::__1::__cxx_atomic_base_impl.165" }
%"struct.std::__1::__cxx_atomic_base_impl.165" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.167" = type { %"struct.std::__1::__atomic_base.168" }
%"struct.std::__1::__atomic_base.168" = type { %"struct.std::__1::__cxx_atomic_impl.169" }
%"struct.std::__1::__cxx_atomic_impl.169" = type { %"struct.std::__1::__cxx_atomic_base_impl.170" }
%"struct.std::__1::__cxx_atomic_base_impl.170" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.171" = type { %"class.std::__1::__vector_base.172" }
%"class.std::__1::__vector_base.172" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.173" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.226", %"class.std::__1::unique_ptr.232", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.286", %"class.std::__1::vector.286", %"class.std::__1::vector.286", %"class.std::__1::vector.293", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.187", %"class.std::__1::vector.188", %"class.std::__1::vector.195", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.187" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.25" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.188" = type { %"class.std::__1::__vector_base.189" }
%"class.std::__1::__vector_base.189" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.190" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.195" = type { %"class.std::__1::__vector_base.196" }
%"class.std::__1::__vector_base.196" = type { %"class.std::__1::unique_ptr.197"*, %"class.std::__1::unique_ptr.197"*, %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::unique_ptr.197" = type opaque
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.std::__1::unique_ptr.197"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.25" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.203", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.209", %"class.v8::internal::Worklist.211", %"class.v8::internal::Worklist.213", %"class.v8::internal::Worklist.215", %"class.v8::internal::Worklist.217" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.25" }
%"class.v8::internal::Worklist.203" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.25" }
%"class.v8::internal::Worklist.205" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.25" }
%"class.v8::internal::Worklist.207" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.25" }
%"class.v8::internal::Worklist.209" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.25" }
%"class.v8::internal::Worklist.211" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.25" }
%"class.v8::internal::Worklist.213" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.25" }
%"class.v8::internal::Worklist.215" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.25" }
%"class.v8::internal::Worklist.217" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.25" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.219", i8, i64 }
%"class.std::__1::vector.219" = type { %"class.std::__1::__vector_base.220" }
%"class.std::__1::__vector_base.220" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.235" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.187"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.235" = type { %"class.std::__1::__hash_table.236" }
%"class.std::__1::__hash_table.236" = type <{ %"class.std::__1::unique_ptr.237", %"class.std::__1::__compressed_pair.247", %"class.std::__1::__compressed_pair.252", %"class.std::__1::__compressed_pair.255", [4 x i8] }>
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239", %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"struct.std::__1::__hash_node_base.240"** }
%"struct.std::__1::__hash_node_base.240" = type { %"struct.std::__1::__hash_node_base.240"* }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.std::__1::__bucket_list_deallocator.242" }
%"class.std::__1::__bucket_list_deallocator.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"struct.std::__1::__hash_node_base.240" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.262" }
%"class.std::__1::unordered_map.262" = type { %"class.std::__1::__hash_table.263" }
%"class.std::__1::__hash_table.263" = type <{ %"class.std::__1::unique_ptr.264", %"class.std::__1::__compressed_pair.274", %"class.std::__1::__compressed_pair.279", %"class.std::__1::__compressed_pair.282", [4 x i8] }>
%"class.std::__1::unique_ptr.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266", %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"struct.std::__1::__hash_node_base.267"** }
%"struct.std::__1::__hash_node_base.267" = type { %"struct.std::__1::__hash_node_base.267"* }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"class.std::__1::__bucket_list_deallocator.269" }
%"class.std::__1::__bucket_list_deallocator.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"struct.std::__1::__hash_node_base.267" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::vector.286" = type { %"class.std::__1::__vector_base.287" }
%"class.std::__1::__vector_base.287" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.293" = type { %"class.std::__1::__vector_base.294" }
%"class.std::__1::__vector_base.294" = type { %"struct.std::__1::pair.295"*, %"struct.std::__1::pair.295"*, %"class.std::__1::__compressed_pair.296" }
%"struct.std::__1::pair.295" = type opaque
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"struct.std::__1::pair.295"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.301", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.286"], [3 x %"class.std::__1::vector.286"], i8, %"struct.std::__1::atomic.158", [6 x i8], %"class.std::__1::vector.286", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.301" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.311"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.286", %"class.std::__1::vector.286", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.311" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.326" = type { %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.25", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.336", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.329"], %"class.std::__1::unique_ptr.301" }
%"class.std::__1::vector.329" = type { %"class.std::__1::__vector_base.330" }
%"class.std::__1::__vector_base.330" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.365" = type { %"class.std::__1::__compressed_pair.366" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"struct.std::__1::__compressed_pair_elem.367" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.368", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.372", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.377" }
%"struct.std::__1::atomic.368" = type { %"struct.std::__1::__atomic_base.369" }
%"struct.std::__1::__atomic_base.369" = type { %"struct.std::__1::__cxx_atomic_impl.370" }
%"struct.std::__1::__cxx_atomic_impl.370" = type { %"struct.std::__1::__cxx_atomic_base_impl.371" }
%"struct.std::__1::__cxx_atomic_base_impl.371" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.372" = type { %"struct.std::__1::__atomic_base.373" }
%"struct.std::__1::__atomic_base.373" = type { %"struct.std::__1::__cxx_atomic_impl.374" }
%"struct.std::__1::__cxx_atomic_impl.374" = type { %"struct.std::__1::__cxx_atomic_base_impl.375" }
%"struct.std::__1::__cxx_atomic_base_impl.375" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.377" = type { %"class.std::__1::__hash_table.378" }
%"class.std::__1::__hash_table.378" = type <{ %"class.std::__1::unique_ptr.379", %"class.std::__1::__compressed_pair.389", %"class.std::__1::__compressed_pair.394", %"class.std::__1::__compressed_pair.397", [4 x i8] }>
%"class.std::__1::unique_ptr.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381", %"struct.std::__1::__compressed_pair_elem.383" }
%"struct.std::__1::__compressed_pair_elem.381" = type { %"struct.std::__1::__hash_node_base.382"** }
%"struct.std::__1::__hash_node_base.382" = type { %"struct.std::__1::__hash_node_base.382"* }
%"struct.std::__1::__compressed_pair_elem.383" = type { %"class.std::__1::__bucket_list_deallocator.384" }
%"class.std::__1::__bucket_list_deallocator.384" = type { %"class.std::__1::__compressed_pair.385" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.390" }
%"struct.std::__1::__compressed_pair_elem.390" = type { %"struct.std::__1::__hash_node_base.382" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::unique_ptr.404" = type { %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.301", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.25", %"struct.std::__1::atomic.158", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.407", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.407" = type { %"class.std::__1::__hash_table.408" }
%"class.std::__1::__hash_table.408" = type <{ %"class.std::__1::unique_ptr.409", %"class.std::__1::__compressed_pair.419", %"class.std::__1::__compressed_pair.424", %"class.std::__1::__compressed_pair.427", [4 x i8] }>
%"class.std::__1::unique_ptr.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411", %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"struct.std::__1::__hash_node_base.412"** }
%"struct.std::__1::__hash_node_base.412" = type { %"struct.std::__1::__hash_node_base.412"* }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.std::__1::__bucket_list_deallocator.414" }
%"class.std::__1::__bucket_list_deallocator.414" = type { %"class.std::__1::__compressed_pair.415" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.420" }
%"struct.std::__1::__compressed_pair_elem.420" = type { %"struct.std::__1::__hash_node_base.412" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.440" = type { %"class.std::__1::__compressed_pair.441" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.443" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.443" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.486" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.505", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.487", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.505" = type { %"struct.std::__1::__atomic_base.506" }
%"struct.std::__1::__atomic_base.506" = type { %"struct.std::__1::__cxx_atomic_impl.507" }
%"struct.std::__1::__cxx_atomic_impl.507" = type { %"struct.std::__1::__cxx_atomic_base_impl.508" }
%"struct.std::__1::__cxx_atomic_base_impl.508" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.509" = type { %"class.std::__1::__hash_table.510" }
%"class.std::__1::__hash_table.510" = type <{ %"class.std::__1::unique_ptr.511", %"class.std::__1::__compressed_pair.521", %"class.std::__1::__compressed_pair.526", %"class.std::__1::__compressed_pair.529", [4 x i8] }>
%"class.std::__1::unique_ptr.511" = type { %"class.std::__1::__compressed_pair.512" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.513", %"struct.std::__1::__compressed_pair_elem.515" }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"struct.std::__1::__hash_node_base.514"** }
%"struct.std::__1::__hash_node_base.514" = type { %"struct.std::__1::__hash_node_base.514"* }
%"struct.std::__1::__compressed_pair_elem.515" = type { %"class.std::__1::__bucket_list_deallocator.516" }
%"class.std::__1::__bucket_list_deallocator.516" = type { %"class.std::__1::__compressed_pair.517" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.522" }
%"struct.std::__1::__compressed_pair_elem.522" = type { %"struct.std::__1::__hash_node_base.514" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.529" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.541" = type { %"class.std::__1::__compressed_pair.542" }
%"class.std::__1::__compressed_pair.542" = type { %"struct.std::__1::__compressed_pair_elem.543" }
%"struct.std::__1::__compressed_pair_elem.543" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.547", %"class.std::__1::vector.547" }
%"class.std::__1::unique_ptr.554" = type { %"class.std::__1::__compressed_pair.555" }
%"class.std::__1::__compressed_pair.555" = type { %"struct.std::__1::__compressed_pair_elem.556" }
%"struct.std::__1::__compressed_pair_elem.556" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.336" = type { %"class.std::__1::__hash_table.337" }
%"class.std::__1::__hash_table.337" = type <{ %"class.std::__1::unique_ptr.338", %"class.std::__1::__compressed_pair.348", %"class.std::__1::__compressed_pair.353", %"class.std::__1::__compressed_pair.357", [4 x i8] }>
%"class.std::__1::unique_ptr.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340", %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"struct.std::__1::__hash_node_base.341"** }
%"struct.std::__1::__hash_node_base.341" = type { %"struct.std::__1::__hash_node_base.341"* }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.std::__1::__bucket_list_deallocator.343" }
%"class.std::__1::__bucket_list_deallocator.343" = type { %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"struct.std::__1::__hash_node_base.341" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::unordered_map.586" = type { %"class.std::__1::__hash_table.587" }
%"class.std::__1::__hash_table.587" = type <{ %"class.std::__1::unique_ptr.588", %"class.std::__1::__compressed_pair.598", %"class.std::__1::__compressed_pair.603", %"class.std::__1::__compressed_pair.606", [4 x i8] }>
%"class.std::__1::unique_ptr.588" = type { %"class.std::__1::__compressed_pair.589" }
%"class.std::__1::__compressed_pair.589" = type { %"struct.std::__1::__compressed_pair_elem.590", %"struct.std::__1::__compressed_pair_elem.592" }
%"struct.std::__1::__compressed_pair_elem.590" = type { %"struct.std::__1::__hash_node_base.591"** }
%"struct.std::__1::__hash_node_base.591" = type { %"struct.std::__1::__hash_node_base.591"* }
%"struct.std::__1::__compressed_pair_elem.592" = type { %"class.std::__1::__bucket_list_deallocator.593" }
%"class.std::__1::__bucket_list_deallocator.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.599" }
%"struct.std::__1::__compressed_pair_elem.599" = type { %"struct.std::__1::__hash_node_base.591" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.606" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::unordered_map.560" = type { %"class.std::__1::__hash_table.561" }
%"class.std::__1::__hash_table.561" = type <{ %"class.std::__1::unique_ptr.562", %"class.std::__1::__compressed_pair.572", %"class.std::__1::__compressed_pair.577", %"class.std::__1::__compressed_pair.580", [4 x i8] }>
%"class.std::__1::unique_ptr.562" = type { %"class.std::__1::__compressed_pair.563" }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.564", %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.564" = type { %"struct.std::__1::__hash_node_base.565"** }
%"struct.std::__1::__hash_node_base.565" = type { %"struct.std::__1::__hash_node_base.565"* }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.std::__1::__bucket_list_deallocator.567" }
%"class.std::__1::__bucket_list_deallocator.567" = type { %"class.std::__1::__compressed_pair.568" }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.573" }
%"struct.std::__1::__compressed_pair_elem.573" = type { %"struct.std::__1::__hash_node_base.565" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::unordered_map.610" = type { %"class.std::__1::__hash_table.611" }
%"class.std::__1::__hash_table.611" = type <{ %"class.std::__1::unique_ptr.612", %"class.std::__1::__compressed_pair.622", %"class.std::__1::__compressed_pair.627", %"class.std::__1::__compressed_pair.632", [4 x i8] }>
%"class.std::__1::unique_ptr.612" = type { %"class.std::__1::__compressed_pair.613" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.614", %"struct.std::__1::__compressed_pair_elem.616" }
%"struct.std::__1::__compressed_pair_elem.614" = type { %"struct.std::__1::__hash_node_base.615"** }
%"struct.std::__1::__hash_node_base.615" = type { %"struct.std::__1::__hash_node_base.615"* }
%"struct.std::__1::__compressed_pair_elem.616" = type { %"class.std::__1::__bucket_list_deallocator.617" }
%"class.std::__1::__bucket_list_deallocator.617" = type { %"class.std::__1::__compressed_pair.618" }
%"class.std::__1::__compressed_pair.618" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.623" }
%"struct.std::__1::__compressed_pair_elem.623" = type { %"struct.std::__1::__hash_node_base.615" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::vector.638" = type { %"class.std::__1::__vector_base.639" }
%"class.std::__1::__vector_base.639" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.645" = type { %"class.std::__1::__compressed_pair.646" }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.647" }
%"struct.std::__1::__compressed_pair_elem.647" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__cxx_atomic_impl.28" }
%"struct.std::__1::__cxx_atomic_impl.28" = type { %"struct.std::__1::__cxx_atomic_base_impl.29" }
%"struct.std::__1::__cxx_atomic_base_impl.29" = type { i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.25", i64, %"struct.std::__1::atomic.25" }
%"class.std::__1::vector.145" = type { %"class.std::__1::__vector_base.146" }
%"class.std::__1::__vector_base.146" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.147" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.std::__1::vector.547" = type { %"class.std::__1::__vector_base.548" }
%"class.std::__1::__vector_base.548" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.v8::internal::Object"* }
%"struct.std::nothrow_t" = type { i8 }
%"class.v8::internal::HeapStringAllocator" = type { %"class.v8::internal::StringAllocator", i8* }
%"class.v8::Platform" = type { i32 (...)** }
%"class.v8::internal::FixedStringAllocator" = type <{ %"class.v8::internal::StringAllocator", i8*, i32, [4 x i8] }>
%"class.v8::internal::StringStream::FmtElm" = type { %union.anon }
%union.anon = type { double }
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector.2", [24 x i8] }
%"class.v8::internal::EmbeddedVector.3" = type <{ %"class.v8::internal::Vector.2", [28 x i8], [4 x i8] }>
%"class.v8::internal::EmbeddedVector.4" = type <{ %"class.v8::internal::Vector.2", [20 x i8], [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::internal::Vector" = type { i8*, i64 }
%"class.v8::internal::Factory" = type { i8 }
%"class.v8::internal::StringCharacterStream" = type { %"class.v8::internal::ConsStringIterator", i8, %union.anon.1143, i8*, %"class.v8::internal::SharedStringAccessGuardIfNeeded" }
%"class.v8::internal::ConsStringIterator" = type <{ [32 x %"class.v8::internal::ConsString"], %"class.v8::internal::ConsString", i32, i32, i32, [4 x i8] }>
%"class.v8::internal::ConsString" = type { %"class.v8::internal::TorqueGeneratedConsString" }
%"class.v8::internal::TorqueGeneratedConsString" = type { %"class.v8::internal::String" }
%"class.v8::internal::String" = type { %"class.v8::internal::TorqueGeneratedString" }
%"class.v8::internal::TorqueGeneratedString" = type { %"class.v8::internal::Name" }
%union.anon.1143 = type { i8* }
%"class.v8::internal::SharedStringAccessGuardIfNeeded" = type { %"class.v8::base::Optional.1144" }
%"class.v8::base::Optional.1144" = type { %"class.v8::base::internal::OptionalBase.1145" }
%"class.v8::base::internal::OptionalBase.1145" = type { %"struct.v8::base::internal::OptionalStorage.1146" }
%"struct.v8::base::internal::OptionalStorage.1146" = type { %"struct.v8::base::internal::OptionalStorageBase.1147" }
%"struct.v8::base::internal::OptionalStorageBase.1147" = type { i8, %union.anon.1148 }
%union.anon.1148 = type { %"class.v8::base::SharedMutexGuard" }
%"class.v8::base::SharedMutexGuard" = type { %"class.v8::base::SharedMutex"* }
%"class.v8::internal::Representation" = type { i8 }
%"class.v8::internal::Code" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::SharedFunctionInfo" = type { %"class.v8::internal::TorqueGeneratedSharedFunctionInfo" }
%"class.v8::internal::TorqueGeneratedSharedFunctionInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PrototypeIterator" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Object", %"class.v8::internal::Handle.976", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.v8::internal::JSObject" = type { %"class.v8::internal::TorqueGeneratedJSObject" }
%"class.v8::internal::TorqueGeneratedJSObject" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::JSReceiver" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::ScopeInfo" = type { %"class.v8::internal::TorqueGeneratedScopeInfo" }
%"class.v8::internal::TorqueGeneratedScopeInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::String::ExternalOneByteStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i8* }
%"class.v8::String::ExternalStringResourceBase" = type { i32 (...)** }
%"class.v8::String::ExternalStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i16* }

$_ZN2v88internal21StringCharacterStreamC2ENS0_6StringEi = comdat any

$_ZNK2v88internal18SharedFunctionInfo4NameEv = comdat any

$_ZN2v88internal17PrototypeIterator7AdvanceEv = comdat any

$_ZN2v88internal19HeapStringAllocatorD2Ev = comdat any

$_ZN2v88internal19HeapStringAllocatorD0Ev = comdat any

$_ZN2v88internal15StringAllocatorD2Ev = comdat any

$_ZN2v88internal20FixedStringAllocatorD0Ev = comdat any

$_ZN2v88internal6String9VisitFlatINS0_21StringCharacterStreamEEENS0_10ConsStringEPT_S1_iRKNS0_31SharedStringAccessGuardIfNeededE = comdat any

$_ZNK2v88internal14Representation8MnemonicEv = comdat any

@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"bytes <= length_\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"\5Cx%02x\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"\5Cu%04x\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"inf\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"nan\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"#%d#\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"@%p\00", align 1
@_ZN2v88internal8FLAG_logE = external local_unnamed_addr global i8, align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"StackDump\00", align 1
@.str.11 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.12 = private unnamed_addr constant [16 x i8] c"/* anonymous */\00", align 1
@.str.13 = private unnamed_addr constant [3 x i8] c"%o\00", align 1
@stdout = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.14 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.15 = private unnamed_addr constant [4 x i8] c"%o\0A\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"%d: %o\0A\00", align 1
@.str.17 = private unnamed_addr constant [23 x i8] c"                  ...\0A\00", align 1
@.str.18 = private unnamed_addr constant [28 x i8] c"             %d: %3d 0x%02x\00", align 1
@.str.19 = private unnamed_addr constant [6 x i8] c" '%c'\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c" '\0A'\00", align 1
@.str.21 = private unnamed_addr constant [5 x i8] c" '\0D'\00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c" ^%c\00", align 1
@.str.23 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.24 = private unnamed_addr constant [64 x i8] c"==== Key         ============================================\0A\0A\00", align 1
@.str.25 = private unnamed_addr constant [11 x i8] c" #%d# %p: \00", align 1
@.str.26 = private unnamed_addr constant [24 x i8] c"           value(): %o\0A\00", align 1
@.str.27 = private unnamed_addr constant [22 x i8] c"Security context: %o\0A\00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"(aka \00", align 1
@_ZTVN2v88internal19HeapStringAllocatorE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::HeapStringAllocator"*)* @_ZN2v88internal19HeapStringAllocatorD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::HeapStringAllocator"*)* @_ZN2v88internal19HeapStringAllocatorD0Ev to i8*), i8* bitcast (i8* (%"class.v8::internal::HeapStringAllocator"*, i32)* @_ZN2v88internal19HeapStringAllocator8allocateEj to i8*), i8* bitcast (i8* (%"class.v8::internal::HeapStringAllocator"*, i32*)* @_ZN2v88internal19HeapStringAllocator4growEPj to i8*)] }, align 8
@_ZTVN2v88internal20FixedStringAllocatorE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::StringAllocator"*)* @_ZN2v88internal15StringAllocatorD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::FixedStringAllocator"*)* @_ZN2v88internal20FixedStringAllocatorD0Ev to i8*), i8* bitcast (i8* (%"class.v8::internal::FixedStringAllocator"*, i32)* @_ZN2v88internal20FixedStringAllocator8allocateEj to i8*), i8* bitcast (i8* (%"class.v8::internal::FixedStringAllocator"*, i32*)* @_ZN2v88internal20FixedStringAllocator4growEPj to i8*)] }, align 8
@_ZN2v88internal7Isolate12isolate_key_E = external local_unnamed_addr global i32, align 4
@.str.29 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.30 = private unnamed_addr constant [2 x i8] c"v\00", align 1
@.str.31 = private unnamed_addr constant [2 x i8] c"t\00", align 1
@.str.32 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.33 = private unnamed_addr constant [2 x i8] c"d\00", align 1
@.str.34 = private unnamed_addr constant [2 x i8] c"h\00", align 1
@.str.35 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E = external local_unnamed_addr global %"class.v8::internal::SoleReadOnlyHeap"*, align 8
@.str.36 = private unnamed_addr constant [23 x i8] c"(location_) != nullptr\00", align 1
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@.str.37 = private unnamed_addr constant [9 x i8] c"NewArray\00", align 1
@switch.table._ZNK2v88internal14Representation8MnemonicEv = private unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i64 0, i64 0)], align 8

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal19HeapStringAllocator8allocateEj(%"class.v8::internal::HeapStringAllocator"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = zext i32 %1 to i64
  %4 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %3, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #13
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %15

6:                                                ; preds = %2
  %7 = tail call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #9
  %8 = bitcast %"class.v8::Platform"* %7 to void (%"class.v8::Platform"*)***
  %9 = load void (%"class.v8::Platform"*)**, void (%"class.v8::Platform"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %9, i64 3
  %11 = load void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %10, align 8
  tail call void %11(%"class.v8::Platform"* %7) #9
  %12 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %3, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #13
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %6
  tail call void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37, i64 0, i64 0)) #14
  unreachable

15:                                               ; preds = %2, %6
  %16 = phi i8* [ %12, %6 ], [ %4, %2 ]
  %17 = getelementptr inbounds %"class.v8::internal::HeapStringAllocator", %"class.v8::internal::HeapStringAllocator"* %0, i64 0, i32 1
  store i8* %16, i8** %17, align 8
  ret i8* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal20FixedStringAllocator8allocateEj(%"class.v8::internal::FixedStringAllocator"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::FixedStringAllocator", %"class.v8::internal::FixedStringAllocator"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp ult i32 %4, %1
  br i1 %5, label %6, label %7, !prof !2

6:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #14
  unreachable

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::FixedStringAllocator", %"class.v8::internal::FixedStringAllocator"* %0, i64 0, i32 1
  %9 = load i8*, i8** %8, align 8
  ret i8* %9
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @_ZN2v88internal20FixedStringAllocator4growEPj(%"class.v8::internal::FixedStringAllocator"* nocapture readonly, i32* nocapture) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::FixedStringAllocator", %"class.v8::internal::FixedStringAllocator"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  store i32 %4, i32* %1, align 4
  %5 = getelementptr inbounds %"class.v8::internal::FixedStringAllocator", %"class.v8::internal::FixedStringAllocator"* %0, i64 0, i32 1
  %6 = load i8*, i8** %5, align 8
  ret i8* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal12StringStream3PutEc(%"class.v8::internal::StringStream"* nocapture, i8 signext) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = sub i32 %5, %7
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %70, label %10

10:                                               ; preds = %2
  %11 = add i32 %5, -2
  %12 = icmp eq i32 %7, %11
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 4
  %15 = load i8*, i8** %14, align 8
  br label %57

16:                                               ; preds = %10
  %17 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #9
  store i32 %5, i32* %3, align 4
  %18 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 0
  %19 = load %"class.v8::internal::StringAllocator"*, %"class.v8::internal::StringAllocator"** %18, align 8
  %20 = bitcast %"class.v8::internal::StringAllocator"* %19 to i8* (%"class.v8::internal::StringAllocator"*, i32*)***
  %21 = load i8* (%"class.v8::internal::StringAllocator"*, i32*)**, i8* (%"class.v8::internal::StringAllocator"*, i32*)*** %20, align 8
  %22 = getelementptr inbounds i8* (%"class.v8::internal::StringAllocator"*, i32*)*, i8* (%"class.v8::internal::StringAllocator"*, i32*)** %21, i64 3
  %23 = load i8* (%"class.v8::internal::StringAllocator"*, i32*)*, i8* (%"class.v8::internal::StringAllocator"*, i32*)** %22, align 8
  %24 = call i8* %23(%"class.v8::internal::StringAllocator"* %19, i32* nonnull %3) #9
  %25 = load i32, i32* %3, align 4
  %26 = load i32, i32* %4, align 4
  %27 = icmp ugt i32 %25, %26
  br i1 %27, label %28, label %31

28:                                               ; preds = %16
  store i32 %25, i32* %4, align 4
  %29 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 4
  store i8* %24, i8** %29, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #9
  %30 = load i32, i32* %6, align 8
  br label %57

31:                                               ; preds = %16
  %32 = add i32 %26, -1
  store i32 %32, i32* %6, align 8
  %33 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 4
  %34 = load i8*, i8** %33, align 8
  %35 = add i32 %26, -5
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %34, i64 %36
  store i8 46, i8* %37, align 1
  %38 = load i8*, i8** %33, align 8
  %39 = load i32, i32* %6, align 8
  %40 = add i32 %39, -3
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds i8, i8* %38, i64 %41
  store i8 46, i8* %42, align 1
  %43 = load i8*, i8** %33, align 8
  %44 = load i32, i32* %6, align 8
  %45 = add i32 %44, -2
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %43, i64 %46
  store i8 46, i8* %47, align 1
  %48 = load i8*, i8** %33, align 8
  %49 = load i32, i32* %6, align 8
  %50 = add i32 %49, -1
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %48, i64 %51
  store i8 10, i8* %52, align 1
  %53 = load i8*, i8** %33, align 8
  %54 = load i32, i32* %6, align 8
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %53, i64 %55
  store i8 0, i8* %56, align 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #9
  br label %70

57:                                               ; preds = %13, %28
  %58 = phi i32 [ %7, %13 ], [ %30, %28 ]
  %59 = phi i8* [ %15, %13 ], [ %24, %28 ]
  %60 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 4
  %61 = zext i32 %58 to i64
  %62 = getelementptr inbounds i8, i8* %59, i64 %61
  store i8 %1, i8* %62, align 1
  %63 = load i8*, i8** %60, align 8
  %64 = load i32, i32* %6, align 8
  %65 = add i32 %64, 1
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds i8, i8* %63, i64 %66
  store i8 0, i8* %67, align 1
  %68 = load i32, i32* %6, align 8
  %69 = add i32 %68, 1
  store i32 %69, i32* %6, align 8
  br label %70

70:                                               ; preds = %31, %2, %57
  %71 = phi i1 [ true, %57 ], [ false, %31 ], [ false, %2 ]
  ret i1 %71
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"*, i8*, i64, %"class.v8::internal::StringStream::FmtElm"*, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca [1 x %"class.v8::internal::StringStream::FmtElm"], align 8
  %7 = alloca [1 x %"class.v8::internal::StringStream::FmtElm"], align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %"class.v8::internal::EmbeddedVector", align 8
  %12 = alloca %"class.v8::internal::EmbeddedVector", align 8
  %13 = alloca %"class.v8::internal::EmbeddedVector.3", align 8
  %14 = alloca %"class.v8::internal::EmbeddedVector.4", align 8
  %15 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 3
  %18 = load i32, i32* %17, align 8
  %19 = sub i32 %16, %18
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %410, label %21

21:                                               ; preds = %5
  %22 = trunc i64 %2 to i32
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %24, label %410

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 4
  %26 = bitcast i32* %10 to i8*
  %27 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 0
  %28 = bitcast %"class.v8::internal::EmbeddedVector"* %11 to i8*
  %29 = getelementptr inbounds %"class.v8::internal::EmbeddedVector", %"class.v8::internal::EmbeddedVector"* %11, i64 0, i32 1, i64 0
  %30 = getelementptr inbounds %"class.v8::internal::EmbeddedVector", %"class.v8::internal::EmbeddedVector"* %11, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.v8::internal::EmbeddedVector", %"class.v8::internal::EmbeddedVector"* %11, i64 0, i32 0, i32 1
  %32 = bitcast %"class.v8::internal::EmbeddedVector.4"* %14 to i8*
  %33 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.4", %"class.v8::internal::EmbeddedVector.4"* %14, i64 0, i32 1, i64 0
  %34 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.4", %"class.v8::internal::EmbeddedVector.4"* %14, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.4", %"class.v8::internal::EmbeddedVector.4"* %14, i64 0, i32 0, i32 1
  %36 = bitcast %"class.v8::internal::EmbeddedVector.3"* %13 to i8*
  %37 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.3", %"class.v8::internal::EmbeddedVector.3"* %13, i64 0, i32 1, i64 0
  %38 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.3", %"class.v8::internal::EmbeddedVector.3"* %13, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.v8::internal::EmbeddedVector.3", %"class.v8::internal::EmbeddedVector.3"* %13, i64 0, i32 0, i32 1
  %40 = bitcast %"class.v8::internal::EmbeddedVector"* %12 to i8*
  %41 = getelementptr inbounds %"class.v8::internal::EmbeddedVector", %"class.v8::internal::EmbeddedVector"* %12, i64 0, i32 1, i64 0
  %42 = getelementptr inbounds %"class.v8::internal::EmbeddedVector", %"class.v8::internal::EmbeddedVector"* %12, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.v8::internal::EmbeddedVector", %"class.v8::internal::EmbeddedVector"* %12, i64 0, i32 0, i32 1
  %44 = bitcast [1 x %"class.v8::internal::StringStream::FmtElm"]* %7 to i8*
  %45 = getelementptr inbounds [1 x %"class.v8::internal::StringStream::FmtElm"], [1 x %"class.v8::internal::StringStream::FmtElm"]* %7, i64 0, i64 0
  %46 = bitcast [1 x %"class.v8::internal::StringStream::FmtElm"]* %7 to i32*
  %47 = bitcast [1 x %"class.v8::internal::StringStream::FmtElm"]* %6 to i8*
  %48 = getelementptr inbounds [1 x %"class.v8::internal::StringStream::FmtElm"], [1 x %"class.v8::internal::StringStream::FmtElm"]* %6, i64 0, i64 0
  %49 = bitcast [1 x %"class.v8::internal::StringStream::FmtElm"]* %6 to i32*
  %50 = bitcast i32* %8 to i8*
  %51 = bitcast i32* %9 to i8*
  %52 = shl i64 %2, 32
  %53 = ashr exact i64 %52, 32
  %54 = and i64 %4, 4294967295
  br label %55

55:                                               ; preds = %24, %408
  %56 = phi i64 [ 0, %24 ], [ %228, %408 ]
  %57 = phi i32 [ 0, %24 ], [ %227, %408 ]
  %58 = icmp eq i64 %56, %54
  %59 = sext i32 %57 to i64
  br i1 %58, label %60, label %125

60:                                               ; preds = %55, %122
  %61 = phi i64 [ %123, %122 ], [ %59, %55 ]
  %62 = getelementptr inbounds i8, i8* %1, i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = load i32, i32* %15, align 4
  %65 = load i32, i32* %17, align 8
  %66 = sub i32 %64, %65
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %122, label %68

68:                                               ; preds = %60
  %69 = add i32 %64, -2
  %70 = icmp eq i32 %65, %69
  br i1 %70, label %73, label %71

71:                                               ; preds = %68
  %72 = load i8*, i8** %25, align 8
  br label %110

73:                                               ; preds = %68
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #9
  store i32 %64, i32* %10, align 4
  %74 = load %"class.v8::internal::StringAllocator"*, %"class.v8::internal::StringAllocator"** %27, align 8
  %75 = bitcast %"class.v8::internal::StringAllocator"* %74 to i8* (%"class.v8::internal::StringAllocator"*, i32*)***
  %76 = load i8* (%"class.v8::internal::StringAllocator"*, i32*)**, i8* (%"class.v8::internal::StringAllocator"*, i32*)*** %75, align 8
  %77 = getelementptr inbounds i8* (%"class.v8::internal::StringAllocator"*, i32*)*, i8* (%"class.v8::internal::StringAllocator"*, i32*)** %76, i64 3
  %78 = load i8* (%"class.v8::internal::StringAllocator"*, i32*)*, i8* (%"class.v8::internal::StringAllocator"*, i32*)** %77, align 8
  %79 = call i8* %78(%"class.v8::internal::StringAllocator"* %74, i32* nonnull %10) #9
  %80 = load i32, i32* %10, align 4
  %81 = load i32, i32* %15, align 4
  %82 = icmp ugt i32 %80, %81
  br i1 %82, label %108, label %83

83:                                               ; preds = %73
  %84 = add i32 %81, -1
  store i32 %84, i32* %17, align 8
  %85 = load i8*, i8** %25, align 8
  %86 = add i32 %81, -5
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i8, i8* %85, i64 %87
  store i8 46, i8* %88, align 1
  %89 = load i8*, i8** %25, align 8
  %90 = load i32, i32* %17, align 8
  %91 = add i32 %90, -3
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds i8, i8* %89, i64 %92
  store i8 46, i8* %93, align 1
  %94 = load i8*, i8** %25, align 8
  %95 = load i32, i32* %17, align 8
  %96 = add i32 %95, -2
  %97 = zext i32 %96 to i64
  %98 = getelementptr inbounds i8, i8* %94, i64 %97
  store i8 46, i8* %98, align 1
  %99 = load i8*, i8** %25, align 8
  %100 = load i32, i32* %17, align 8
  %101 = add i32 %100, -1
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds i8, i8* %99, i64 %102
  store i8 10, i8* %103, align 1
  %104 = load i8*, i8** %25, align 8
  %105 = load i32, i32* %17, align 8
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds i8, i8* %104, i64 %106
  store i8 0, i8* %107, align 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #9
  br label %122

108:                                              ; preds = %73
  store i32 %80, i32* %15, align 4
  store i8* %79, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #9
  %109 = load i32, i32* %17, align 8
  br label %110

110:                                              ; preds = %108, %71
  %111 = phi i32 [ %65, %71 ], [ %109, %108 ]
  %112 = phi i8* [ %72, %71 ], [ %79, %108 ]
  %113 = zext i32 %111 to i64
  %114 = getelementptr inbounds i8, i8* %112, i64 %113
  store i8 %63, i8* %114, align 1
  %115 = load i8*, i8** %25, align 8
  %116 = load i32, i32* %17, align 8
  %117 = add i32 %116, 1
  %118 = zext i32 %117 to i64
  %119 = getelementptr inbounds i8, i8* %115, i64 %118
  store i8 0, i8* %119, align 1
  %120 = load i32, i32* %17, align 8
  %121 = add i32 %120, 1
  store i32 %121, i32* %17, align 8
  br label %122

122:                                              ; preds = %110, %83, %60
  %123 = add nsw i64 %61, 1
  %124 = icmp slt i64 %123, %53
  br i1 %124, label %60, label %410

125:                                              ; preds = %55, %189
  %126 = phi i64 [ %190, %189 ], [ %59, %55 ]
  %127 = getelementptr inbounds i8, i8* %1, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = icmp eq i8 %128, 37
  br i1 %129, label %192, label %130

130:                                              ; preds = %125
  %131 = load i32, i32* %15, align 4
  %132 = load i32, i32* %17, align 8
  %133 = sub i32 %131, %132
  %134 = icmp eq i32 %133, 1
  br i1 %134, label %189, label %135

135:                                              ; preds = %130
  %136 = add i32 %131, -2
  %137 = icmp eq i32 %132, %136
  br i1 %137, label %140, label %138

138:                                              ; preds = %135
  %139 = load i8*, i8** %25, align 8
  br label %177

140:                                              ; preds = %135
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #9
  store i32 %131, i32* %10, align 4
  %141 = load %"class.v8::internal::StringAllocator"*, %"class.v8::internal::StringAllocator"** %27, align 8
  %142 = bitcast %"class.v8::internal::StringAllocator"* %141 to i8* (%"class.v8::internal::StringAllocator"*, i32*)***
  %143 = load i8* (%"class.v8::internal::StringAllocator"*, i32*)**, i8* (%"class.v8::internal::StringAllocator"*, i32*)*** %142, align 8
  %144 = getelementptr inbounds i8* (%"class.v8::internal::StringAllocator"*, i32*)*, i8* (%"class.v8::internal::StringAllocator"*, i32*)** %143, i64 3
  %145 = load i8* (%"class.v8::internal::StringAllocator"*, i32*)*, i8* (%"class.v8::internal::StringAllocator"*, i32*)** %144, align 8
  %146 = call i8* %145(%"class.v8::internal::StringAllocator"* %141, i32* nonnull %10) #9
  %147 = load i32, i32* %10, align 4
  %148 = load i32, i32* %15, align 4
  %149 = icmp ugt i32 %147, %148
  br i1 %149, label %150, label %152

150:                                              ; preds = %140
  store i32 %147, i32* %15, align 4
  store i8* %146, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #9
  %151 = load i32, i32* %17, align 8
  br label %177

152:                                              ; preds = %140
  %153 = add i32 %148, -1
  store i32 %153, i32* %17, align 8
  %154 = load i8*, i8** %25, align 8
  %155 = add i32 %148, -5
  %156 = zext i32 %155 to i64
  %157 = getelementptr inbounds i8, i8* %154, i64 %156
  store i8 46, i8* %157, align 1
  %158 = load i8*, i8** %25, align 8
  %159 = load i32, i32* %17, align 8
  %160 = add i32 %159, -3
  %161 = zext i32 %160 to i64
  %162 = getelementptr inbounds i8, i8* %158, i64 %161
  store i8 46, i8* %162, align 1
  %163 = load i8*, i8** %25, align 8
  %164 = load i32, i32* %17, align 8
  %165 = add i32 %164, -2
  %166 = zext i32 %165 to i64
  %167 = getelementptr inbounds i8, i8* %163, i64 %166
  store i8 46, i8* %167, align 1
  %168 = load i8*, i8** %25, align 8
  %169 = load i32, i32* %17, align 8
  %170 = add i32 %169, -1
  %171 = zext i32 %170 to i64
  %172 = getelementptr inbounds i8, i8* %168, i64 %171
  store i8 10, i8* %172, align 1
  %173 = load i8*, i8** %25, align 8
  %174 = load i32, i32* %17, align 8
  %175 = zext i32 %174 to i64
  %176 = getelementptr inbounds i8, i8* %173, i64 %175
  store i8 0, i8* %176, align 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #9
  br label %189

177:                                              ; preds = %150, %138
  %178 = phi i32 [ %132, %138 ], [ %151, %150 ]
  %179 = phi i8* [ %139, %138 ], [ %146, %150 ]
  %180 = zext i32 %178 to i64
  %181 = getelementptr inbounds i8, i8* %179, i64 %180
  store i8 %128, i8* %181, align 1
  %182 = load i8*, i8** %25, align 8
  %183 = load i32, i32* %17, align 8
  %184 = add i32 %183, 1
  %185 = zext i32 %184 to i64
  %186 = getelementptr inbounds i8, i8* %182, i64 %185
  store i8 0, i8* %186, align 1
  %187 = load i32, i32* %17, align 8
  %188 = add i32 %187, 1
  store i32 %188, i32* %17, align 8
  br label %189

189:                                              ; preds = %130, %152, %177
  %190 = add nsw i64 %126, 1
  %191 = icmp slt i64 %190, %53
  br i1 %191, label %125, label %410

192:                                              ; preds = %125
  %193 = trunc i64 %126 to i32
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %28) #9
  store i8* %29, i8** %30, align 8
  store i64 24, i64* %31, align 8
  store i8 37, i8* %29, align 8
  %194 = add i32 %193, 1
  %195 = icmp slt i32 %194, %22
  br i1 %195, label %196, label %200

196:                                              ; preds = %192
  %197 = sext i32 %194 to i64
  %198 = sub i64 %2, %126
  %199 = and i64 %198, 4294967295
  br label %201

200:                                              ; preds = %192, %208
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %28) #9
  br label %410

201:                                              ; preds = %208, %196
  %202 = phi i64 [ 1, %196 ], [ %209, %208 ]
  %203 = phi i64 [ %197, %196 ], [ %212, %208 ]
  %204 = phi i32 [ %193, %196 ], [ %213, %208 ]
  %205 = getelementptr inbounds i8, i8* %1, i64 %203
  %206 = load i8, i8* %205, align 1
  %207 = sext i8 %206 to i32
  switch i32 %207, label %215 [
    i32 48, label %208
    i32 49, label %208
    i32 50, label %208
    i32 51, label %208
    i32 52, label %208
    i32 53, label %208
    i32 54, label %208
    i32 55, label %208
    i32 56, label %208
    i32 57, label %208
    i32 46, label %208
    i32 45, label %208
  ]

208:                                              ; preds = %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201, %201
  %209 = add nuw nsw i64 %202, 1
  %210 = load i8*, i8** %30, align 8
  %211 = getelementptr inbounds i8, i8* %210, i64 %202
  store i8 %206, i8* %211, align 1
  %212 = add nsw i64 %203, 1
  %213 = trunc i64 %203 to i32
  %214 = icmp eq i64 %209, %199
  br i1 %214, label %200, label %201

215:                                              ; preds = %201
  %216 = shl i64 %203, 32
  %217 = ashr exact i64 %216, 32
  %218 = getelementptr inbounds i8, i8* %1, i64 %217
  %219 = load i8, i8* %218, align 1
  %220 = add nuw i64 %202, 1
  %221 = and i64 %202, 4294967295
  %222 = load i8*, i8** %30, align 8
  %223 = getelementptr inbounds i8, i8* %222, i64 %221
  store i8 %219, i8* %223, align 1
  %224 = and i64 %220, 4294967295
  %225 = load i8*, i8** %30, align 8
  %226 = getelementptr inbounds i8, i8* %225, i64 %224
  store i8 0, i8* %226, align 1
  %227 = add nsw i32 %204, 2
  %228 = add nuw nsw i64 %56, 1
  %229 = getelementptr inbounds %"class.v8::internal::StringStream::FmtElm", %"class.v8::internal::StringStream::FmtElm"* %3, i64 %56
  %230 = bitcast %"class.v8::internal::StringStream::FmtElm"* %229 to i64*
  %231 = load i64, i64* %230, align 8
  %232 = sext i8 %219 to i32
  switch i32 %232, label %407 [
    i32 115, label %233
    i32 119, label %236
    i32 111, label %313
    i32 107, label %314
    i32 105, label %382
    i32 100, label %382
    i32 117, label %382
    i32 120, label %382
    i32 99, label %382
    i32 88, label %382
    i32 102, label %388
    i32 103, label %388
    i32 71, label %388
    i32 101, label %388
    i32 69, label %388
    i32 112, label %401
  ]

233:                                              ; preds = %215
  %234 = inttoptr i64 %231 to i8*
  %235 = call i64 @strlen(i8* %234) #15
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %0, i8* %234, i64 %235, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #9
  br label %408

236:                                              ; preds = %215
  %237 = inttoptr i64 %231 to i8*
  %238 = inttoptr i64 %231 to i16**
  %239 = load i16*, i16** %238, align 8
  %240 = getelementptr inbounds i8, i8* %237, i64 8
  %241 = bitcast i8* %240 to i64*
  %242 = load i64, i64* %241, align 8
  %243 = trunc i64 %242 to i32
  %244 = icmp sgt i32 %243, 0
  br i1 %244, label %245, label %408

245:                                              ; preds = %236
  %246 = and i64 %242, 4294967295
  br label %247

247:                                              ; preds = %310, %245
  %248 = phi i64 [ 0, %245 ], [ %311, %310 ]
  %249 = getelementptr inbounds i16, i16* %239, i64 %248
  %250 = load i16, i16* %249, align 2
  %251 = trunc i16 %250 to i8
  %252 = load i32, i32* %15, align 4
  %253 = load i32, i32* %17, align 8
  %254 = sub i32 %252, %253
  %255 = icmp eq i32 %254, 1
  br i1 %255, label %310, label %256

256:                                              ; preds = %247
  %257 = add i32 %252, -2
  %258 = icmp eq i32 %253, %257
  br i1 %258, label %261, label %259

259:                                              ; preds = %256
  %260 = load i8*, i8** %25, align 8
  br label %298

261:                                              ; preds = %256
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %51) #9
  store i32 %252, i32* %9, align 4
  %262 = load %"class.v8::internal::StringAllocator"*, %"class.v8::internal::StringAllocator"** %27, align 8
  %263 = bitcast %"class.v8::internal::StringAllocator"* %262 to i8* (%"class.v8::internal::StringAllocator"*, i32*)***
  %264 = load i8* (%"class.v8::internal::StringAllocator"*, i32*)**, i8* (%"class.v8::internal::StringAllocator"*, i32*)*** %263, align 8
  %265 = getelementptr inbounds i8* (%"class.v8::internal::StringAllocator"*, i32*)*, i8* (%"class.v8::internal::StringAllocator"*, i32*)** %264, i64 3
  %266 = load i8* (%"class.v8::internal::StringAllocator"*, i32*)*, i8* (%"class.v8::internal::StringAllocator"*, i32*)** %265, align 8
  %267 = call i8* %266(%"class.v8::internal::StringAllocator"* %262, i32* nonnull %9) #9
  %268 = load i32, i32* %9, align 4
  %269 = load i32, i32* %15, align 4
  %270 = icmp ugt i32 %268, %269
  br i1 %270, label %271, label %273

271:                                              ; preds = %261
  store i32 %268, i32* %15, align 4
  store i8* %267, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #9
  %272 = load i32, i32* %17, align 8
  br label %298

273:                                              ; preds = %261
  %274 = add i32 %269, -1
  store i32 %274, i32* %17, align 8
  %275 = load i8*, i8** %25, align 8
  %276 = add i32 %269, -5
  %277 = zext i32 %276 to i64
  %278 = getelementptr inbounds i8, i8* %275, i64 %277
  store i8 46, i8* %278, align 1
  %279 = load i8*, i8** %25, align 8
  %280 = load i32, i32* %17, align 8
  %281 = add i32 %280, -3
  %282 = zext i32 %281 to i64
  %283 = getelementptr inbounds i8, i8* %279, i64 %282
  store i8 46, i8* %283, align 1
  %284 = load i8*, i8** %25, align 8
  %285 = load i32, i32* %17, align 8
  %286 = add i32 %285, -2
  %287 = zext i32 %286 to i64
  %288 = getelementptr inbounds i8, i8* %284, i64 %287
  store i8 46, i8* %288, align 1
  %289 = load i8*, i8** %25, align 8
  %290 = load i32, i32* %17, align 8
  %291 = add i32 %290, -1
  %292 = zext i32 %291 to i64
  %293 = getelementptr inbounds i8, i8* %289, i64 %292
  store i8 10, i8* %293, align 1
  %294 = load i8*, i8** %25, align 8
  %295 = load i32, i32* %17, align 8
  %296 = zext i32 %295 to i64
  %297 = getelementptr inbounds i8, i8* %294, i64 %296
  store i8 0, i8* %297, align 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #9
  br label %310

298:                                              ; preds = %271, %259
  %299 = phi i32 [ %253, %259 ], [ %272, %271 ]
  %300 = phi i8* [ %260, %259 ], [ %267, %271 ]
  %301 = zext i32 %299 to i64
  %302 = getelementptr inbounds i8, i8* %300, i64 %301
  store i8 %251, i8* %302, align 1
  %303 = load i8*, i8** %25, align 8
  %304 = load i32, i32* %17, align 8
  %305 = add i32 %304, 1
  %306 = zext i32 %305 to i64
  %307 = getelementptr inbounds i8, i8* %303, i64 %306
  store i8 0, i8* %307, align 1
  %308 = load i32, i32* %17, align 8
  %309 = add i32 %308, 1
  store i32 %309, i32* %17, align 8
  br label %310

310:                                              ; preds = %247, %273, %298
  %311 = add nuw nsw i64 %248, 1
  %312 = icmp eq i64 %311, %246
  br i1 %312, label %408, label %247

313:                                              ; preds = %215
  call void @_ZN2v88internal12StringStream11PrintObjectENS0_6ObjectE(%"class.v8::internal::StringStream"* %0, i64 %231)
  br label %408

314:                                              ; preds = %215
  %315 = trunc i64 %231 to i32
  %316 = add i32 %315, -32
  %317 = icmp ult i32 %316, 96
  br i1 %317, label %318, label %378

318:                                              ; preds = %314
  %319 = trunc i64 %231 to i8
  %320 = load i32, i32* %15, align 4
  %321 = load i32, i32* %17, align 8
  %322 = sub i32 %320, %321
  %323 = icmp eq i32 %322, 1
  br i1 %323, label %408, label %324

324:                                              ; preds = %318
  %325 = add i32 %320, -2
  %326 = icmp eq i32 %321, %325
  br i1 %326, label %329, label %327

327:                                              ; preds = %324
  %328 = load i8*, i8** %25, align 8
  br label %366

329:                                              ; preds = %324
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #9
  store i32 %320, i32* %8, align 4
  %330 = load %"class.v8::internal::StringAllocator"*, %"class.v8::internal::StringAllocator"** %27, align 8
  %331 = bitcast %"class.v8::internal::StringAllocator"* %330 to i8* (%"class.v8::internal::StringAllocator"*, i32*)***
  %332 = load i8* (%"class.v8::internal::StringAllocator"*, i32*)**, i8* (%"class.v8::internal::StringAllocator"*, i32*)*** %331, align 8
  %333 = getelementptr inbounds i8* (%"class.v8::internal::StringAllocator"*, i32*)*, i8* (%"class.v8::internal::StringAllocator"*, i32*)** %332, i64 3
  %334 = load i8* (%"class.v8::internal::StringAllocator"*, i32*)*, i8* (%"class.v8::internal::StringAllocator"*, i32*)** %333, align 8
  %335 = call i8* %334(%"class.v8::internal::StringAllocator"* %330, i32* nonnull %8) #9
  %336 = load i32, i32* %8, align 4
  %337 = load i32, i32* %15, align 4
  %338 = icmp ugt i32 %336, %337
  br i1 %338, label %339, label %341

339:                                              ; preds = %329
  store i32 %336, i32* %15, align 4
  store i8* %335, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #9
  %340 = load i32, i32* %17, align 8
  br label %366

341:                                              ; preds = %329
  %342 = add i32 %337, -1
  store i32 %342, i32* %17, align 8
  %343 = load i8*, i8** %25, align 8
  %344 = add i32 %337, -5
  %345 = zext i32 %344 to i64
  %346 = getelementptr inbounds i8, i8* %343, i64 %345
  store i8 46, i8* %346, align 1
  %347 = load i8*, i8** %25, align 8
  %348 = load i32, i32* %17, align 8
  %349 = add i32 %348, -3
  %350 = zext i32 %349 to i64
  %351 = getelementptr inbounds i8, i8* %347, i64 %350
  store i8 46, i8* %351, align 1
  %352 = load i8*, i8** %25, align 8
  %353 = load i32, i32* %17, align 8
  %354 = add i32 %353, -2
  %355 = zext i32 %354 to i64
  %356 = getelementptr inbounds i8, i8* %352, i64 %355
  store i8 46, i8* %356, align 1
  %357 = load i8*, i8** %25, align 8
  %358 = load i32, i32* %17, align 8
  %359 = add i32 %358, -1
  %360 = zext i32 %359 to i64
  %361 = getelementptr inbounds i8, i8* %357, i64 %360
  store i8 10, i8* %361, align 1
  %362 = load i8*, i8** %25, align 8
  %363 = load i32, i32* %17, align 8
  %364 = zext i32 %363 to i64
  %365 = getelementptr inbounds i8, i8* %362, i64 %364
  store i8 0, i8* %365, align 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #9
  br label %408

366:                                              ; preds = %339, %327
  %367 = phi i32 [ %321, %327 ], [ %340, %339 ]
  %368 = phi i8* [ %328, %327 ], [ %335, %339 ]
  %369 = zext i32 %367 to i64
  %370 = getelementptr inbounds i8, i8* %368, i64 %369
  store i8 %319, i8* %370, align 1
  %371 = load i8*, i8** %25, align 8
  %372 = load i32, i32* %17, align 8
  %373 = add i32 %372, 1
  %374 = zext i32 %373 to i64
  %375 = getelementptr inbounds i8, i8* %371, i64 %374
  store i8 0, i8* %375, align 1
  %376 = load i32, i32* %17, align 8
  %377 = add i32 %376, 1
  store i32 %377, i32* %17, align 8
  br label %408

378:                                              ; preds = %314
  %379 = icmp slt i32 %315, 256
  br i1 %379, label %380, label %381

380:                                              ; preds = %378
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #9
  store i32 %315, i32* %49, align 8
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i64 6, %"class.v8::internal::StringStream::FmtElm"* nonnull %48, i64 1) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #9
  br label %408

381:                                              ; preds = %378
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #9
  store i32 %315, i32* %46, align 8
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i64 6, %"class.v8::internal::StringStream::FmtElm"* nonnull %45, i64 1) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #9
  br label %408

382:                                              ; preds = %215, %215, %215, %215, %215, %215
  %383 = trunc i64 %231 to i32
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %40) #9
  store i8* %41, i8** %42, align 8
  store i64 24, i64* %43, align 8
  %384 = load i8*, i8** %30, align 8
  %385 = call i32 (i8*, i64, i8*, ...) @_ZN2v88internal8SNPrintFENS0_6VectorIcEEPKcz(i8* %41, i64 24, i8* %384, i32 %383) #9
  %386 = load i8*, i8** %42, align 8
  %387 = sext i32 %385 to i64
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %0, i8* %386, i64 %387, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %40) #9
  br label %408

388:                                              ; preds = %215, %215, %215, %215, %215
  %389 = bitcast i64 %231 to double
  %390 = call double @llvm.fabs.f64(double %389) #16
  %391 = fcmp oeq double %390, 0x7FF0000000000000
  br i1 %391, label %392, label %393

392:                                              ; preds = %388
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i64 3, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #9
  br label %408

393:                                              ; preds = %388
  %394 = fcmp uno double %389, 0.000000e+00
  br i1 %394, label %395, label %396

395:                                              ; preds = %393
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i64 3, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #9
  br label %408

396:                                              ; preds = %393
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %36) #9
  store i8* %37, i8** %38, align 8
  store i64 28, i64* %39, align 8
  %397 = load i8*, i8** %30, align 8
  %398 = call i32 (i8*, i64, i8*, ...) @_ZN2v88internal8SNPrintFENS0_6VectorIcEEPKcz(i8* %37, i64 28, i8* %397, double %389) #9
  %399 = load i8*, i8** %38, align 8
  %400 = call i64 @strlen(i8* %399) #15
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %0, i8* %399, i64 %400, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %36) #9
  br label %408

401:                                              ; preds = %215
  %402 = inttoptr i64 %231 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %32) #9
  store i8* %33, i8** %34, align 8
  store i64 20, i64* %35, align 8
  %403 = load i8*, i8** %30, align 8
  %404 = call i32 (i8*, i64, i8*, ...) @_ZN2v88internal8SNPrintFENS0_6VectorIcEEPKcz(i8* %33, i64 20, i8* %403, i8* %402) #9
  %405 = load i8*, i8** %34, align 8
  %406 = call i64 @strlen(i8* %405) #15
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %0, i8* %405, i64 %406, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %32) #9
  br label %408

407:                                              ; preds = %215
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)) #14
  unreachable

408:                                              ; preds = %310, %236, %366, %341, %318, %233, %313, %382, %401, %380, %381, %392, %396, %395
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %28) #9
  %409 = icmp slt i32 %227, %22
  br i1 %409, label %55, label %410

410:                                              ; preds = %408, %189, %122, %21, %200, %5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12StringStream11PrintObjectENS0_6ObjectE(%"class.v8::internal::StringStream"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca [1 x %"class.v8::internal::StringStream::FmtElm"], align 8
  %4 = alloca [1 x %"class.v8::internal::StringStream::FmtElm"], align 8
  %5 = alloca [1 x %"class.v8::internal::StringStream::FmtElm"], align 8
  %6 = alloca %"class.v8::internal::Object", align 8
  %7 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %6, i64 0, i32 0, i32 0
  store i64 %1, i64* %7, align 8
  call void @_ZNK2v88internal6Object10ShortPrintEPNS0_12StringStreamE(%"class.v8::internal::Object"* nonnull %6, %"class.v8::internal::StringStream"* %0) #9
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %182, label %11

11:                                               ; preds = %2
  %12 = and i64 %8, -4294967296
  %13 = add i64 %8, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %12, %16
  %18 = add i64 %17, 7
  %19 = inttoptr i64 %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = icmp ult i16 %20, 64
  br i1 %21, label %22, label %27

22:                                               ; preds = %11
  %23 = add i64 %8, 7
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = icmp slt i32 %25, 1025
  br i1 %26, label %182, label %43

27:                                               ; preds = %11
  %28 = load atomic i32, i32* %14 monotonic, align 4
  %29 = zext i32 %28 to i64
  %30 = or i64 %12, %29
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = icmp eq i16 %33, 66
  br i1 %34, label %182, label %35

35:                                               ; preds = %27
  %36 = load atomic i32, i32* %14 monotonic, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %12, %37
  %39 = add i64 %38, 7
  %40 = inttoptr i64 %39 to i16*
  %41 = load atomic i16, i16* %40 monotonic, align 2
  %42 = icmp eq i16 %41, 67
  br i1 %42, label %182, label %43

43:                                               ; preds = %22, %35
  %44 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %182

47:                                               ; preds = %43
  %48 = load i32, i32* @_ZN2v88internal7Isolate12isolate_key_E, align 4
  %49 = call i8* @_ZN2v84base6Thread14GetThreadLocalEi(i32 %48) #9
  %50 = bitcast i8* %49 to %"class.v8::internal::Isolate"*
  %51 = getelementptr inbounds i8, i8* %49, i64 46192
  %52 = bitcast i8* %51 to %"class.std::__1::vector.974"**
  %53 = load %"class.std::__1::vector.974"*, %"class.std::__1::vector.974"** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::vector.974", %"class.std::__1::vector.974"* %53, i64 0, i32 0, i32 1
  %55 = bitcast %"class.v8::internal::Handle.976"** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"class.std::__1::vector.974"* %53 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = sub i64 %56, %58
  %60 = ashr exact i64 %59, 3
  %61 = icmp eq i64 %59, 0
  %62 = inttoptr i64 %58 to %"class.v8::internal::Handle.976"*
  br i1 %61, label %83, label %63

63:                                               ; preds = %47
  %64 = load i64, i64* %7, align 8
  %65 = trunc i64 %64 to i32
  br label %66

66:                                               ; preds = %63, %78
  %67 = phi i64 [ 0, %63 ], [ %79, %78 ]
  %68 = getelementptr inbounds %"class.v8::internal::Handle.976", %"class.v8::internal::Handle.976"* %62, i64 %67, i32 0, i32 0
  %69 = load i64*, i64** %68, align 8
  %70 = load i64, i64* %69, align 8
  %71 = trunc i64 %70 to i32
  %72 = icmp eq i32 %71, %65
  br i1 %72, label %73, label %78

73:                                               ; preds = %66
  %74 = trunc i64 %67 to i32
  %75 = bitcast [1 x %"class.v8::internal::StringStream::FmtElm"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #9
  %76 = getelementptr inbounds [1 x %"class.v8::internal::StringStream::FmtElm"], [1 x %"class.v8::internal::StringStream::FmtElm"]* %3, i64 0, i64 0
  %77 = bitcast [1 x %"class.v8::internal::StringStream::FmtElm"]* %3 to i32*
  store i32 %74, i32* %77, align 8
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i64 4, %"class.v8::internal::StringStream::FmtElm"* nonnull %76, i64 1) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #9
  br label %182

78:                                               ; preds = %66
  %79 = add nuw i64 %67, 1
  %80 = icmp ult i64 %79, %60
  br i1 %80, label %66, label %81

81:                                               ; preds = %78
  %82 = icmp ult i64 %60, 256
  br i1 %82, label %83, label %177

83:                                               ; preds = %47, %81
  %84 = trunc i64 %60 to i32
  %85 = bitcast [1 x %"class.v8::internal::StringStream::FmtElm"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #9
  %86 = getelementptr inbounds [1 x %"class.v8::internal::StringStream::FmtElm"], [1 x %"class.v8::internal::StringStream::FmtElm"]* %4, i64 0, i64 0
  %87 = bitcast [1 x %"class.v8::internal::StringStream::FmtElm"]* %4 to i32*
  store i32 %84, i32* %87, align 8
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i64 4, %"class.v8::internal::StringStream::FmtElm"* nonnull %86, i64 1) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #9
  %88 = load i64, i64* %7, align 8
  %89 = getelementptr inbounds i8, i8* %49, i64 45608
  %90 = bitcast i8* %89 to %"class.v8::internal::CanonicalHandleScope"**
  %91 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %90, align 8
  %92 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %91, null
  br i1 %92, label %96, label %93

93:                                               ; preds = %83
  %94 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %91, i64 %88) #9
  %95 = ptrtoint i64* %94 to i64
  br label %111

96:                                               ; preds = %83
  %97 = getelementptr inbounds i8, i8* %49, i64 45584
  %98 = bitcast i8* %97 to i64**
  %99 = load i64*, i64** %98, align 8
  %100 = getelementptr inbounds i8, i8* %49, i64 45592
  %101 = bitcast i8* %100 to i64**
  %102 = load i64*, i64** %101, align 8
  %103 = icmp eq i64* %99, %102
  br i1 %103, label %104, label %106

104:                                              ; preds = %96
  %105 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %50) #9
  br label %106

106:                                              ; preds = %104, %96
  %107 = phi i64* [ %105, %104 ], [ %99, %96 ]
  %108 = ptrtoint i64* %107 to i64
  %109 = add i64 %108, 8
  %110 = inttoptr i64 %109 to i64*
  store i64* %110, i64** %98, align 8
  store i64 %88, i64* %107, align 8
  br label %111

111:                                              ; preds = %93, %106
  %112 = phi i64 [ %95, %93 ], [ %108, %106 ]
  %113 = load %"class.v8::internal::Handle.976"*, %"class.v8::internal::Handle.976"** %54, align 8
  %114 = getelementptr inbounds %"class.std::__1::vector.974", %"class.std::__1::vector.974"* %53, i64 0, i32 0, i32 2, i32 0, i32 0
  %115 = load %"class.v8::internal::Handle.976"*, %"class.v8::internal::Handle.976"** %114, align 8
  %116 = icmp ult %"class.v8::internal::Handle.976"* %113, %115
  %117 = ptrtoint %"class.v8::internal::Handle.976"* %115 to i64
  br i1 %116, label %118, label %122

118:                                              ; preds = %111
  %119 = bitcast %"class.v8::internal::Handle.976"* %113 to i64*
  store i64 %112, i64* %119, align 8
  %120 = getelementptr inbounds %"class.v8::internal::Handle.976", %"class.v8::internal::Handle.976"* %113, i64 1
  %121 = ptrtoint %"class.v8::internal::Handle.976"* %120 to i64
  store i64 %121, i64* %55, align 8
  br label %182

122:                                              ; preds = %111
  %123 = ptrtoint %"class.v8::internal::Handle.976"* %113 to i64
  %124 = load i64, i64* %57, align 8
  %125 = sub i64 %123, %124
  %126 = ashr exact i64 %125, 3
  %127 = add nsw i64 %126, 1
  %128 = icmp ugt i64 %127, 2305843009213693951
  br i1 %128, label %129, label %131

129:                                              ; preds = %122
  %130 = bitcast %"class.std::__1::vector.974"* %53 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %130) #14
  unreachable

131:                                              ; preds = %122
  %132 = bitcast %"class.v8::internal::Handle.976"** %114 to i64*
  %133 = sub i64 %117, %124
  %134 = ashr exact i64 %133, 3
  %135 = icmp ult i64 %134, 1152921504606846975
  br i1 %135, label %136, label %144

136:                                              ; preds = %131
  %137 = ashr exact i64 %133, 2
  %138 = icmp ult i64 %137, %127
  %139 = select i1 %138, i64 %127, i64 %137
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %149, label %141

141:                                              ; preds = %136
  %142 = icmp ugt i64 %139, 2305843009213693951
  br i1 %142, label %143, label %144

143:                                              ; preds = %141
  call void @abort() #14
  unreachable

144:                                              ; preds = %141, %131
  %145 = phi i64 [ %139, %141 ], [ 2305843009213693951, %131 ]
  %146 = shl i64 %145, 3
  %147 = call i8* @_Znwm(i64 %146) #13
  %148 = bitcast i8* %147 to %"class.v8::internal::Handle.976"*
  br label %149

149:                                              ; preds = %144, %136
  %150 = phi i64 [ %145, %144 ], [ 0, %136 ]
  %151 = phi %"class.v8::internal::Handle.976"* [ %148, %144 ], [ null, %136 ]
  %152 = getelementptr inbounds %"class.v8::internal::Handle.976", %"class.v8::internal::Handle.976"* %151, i64 %126
  %153 = getelementptr inbounds %"class.v8::internal::Handle.976", %"class.v8::internal::Handle.976"* %151, i64 %150
  %154 = ptrtoint %"class.v8::internal::Handle.976"* %153 to i64
  %155 = bitcast %"class.v8::internal::Handle.976"* %152 to i64*
  store i64 %112, i64* %155, align 8
  %156 = getelementptr inbounds %"class.v8::internal::Handle.976", %"class.v8::internal::Handle.976"* %152, i64 1
  %157 = ptrtoint %"class.v8::internal::Handle.976"* %156 to i64
  %158 = getelementptr inbounds %"class.std::__1::vector.974", %"class.std::__1::vector.974"* %53, i64 0, i32 0, i32 0
  %159 = load %"class.v8::internal::Handle.976"*, %"class.v8::internal::Handle.976"** %158, align 8
  %160 = load i64, i64* %55, align 8
  %161 = ptrtoint %"class.v8::internal::Handle.976"* %159 to i64
  %162 = sub i64 %160, %161
  %163 = ashr exact i64 %162, 3
  %164 = sub nsw i64 0, %163
  %165 = getelementptr inbounds %"class.v8::internal::Handle.976", %"class.v8::internal::Handle.976"* %152, i64 %164
  %166 = ptrtoint %"class.v8::internal::Handle.976"* %165 to i64
  %167 = icmp sgt i64 %162, 0
  br i1 %167, label %168, label %172

168:                                              ; preds = %149
  %169 = bitcast %"class.v8::internal::Handle.976"* %165 to i8*
  %170 = bitcast %"class.v8::internal::Handle.976"* %159 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %169, i8* align 8 %170, i64 %162, i1 false) #9
  %171 = load %"class.v8::internal::Handle.976"*, %"class.v8::internal::Handle.976"** %158, align 8
  br label %172

172:                                              ; preds = %168, %149
  %173 = phi %"class.v8::internal::Handle.976"* [ %159, %149 ], [ %171, %168 ]
  store i64 %166, i64* %57, align 8
  store i64 %157, i64* %55, align 8
  store i64 %154, i64* %132, align 8
  %174 = icmp eq %"class.v8::internal::Handle.976"* %173, null
  br i1 %174, label %182, label %175

175:                                              ; preds = %172
  %176 = bitcast %"class.v8::internal::Handle.976"* %173 to i8*
  call void @_ZdlPv(i8* %176) #13
  br label %182

177:                                              ; preds = %81
  %178 = load i64, i64* %7, align 8
  %179 = bitcast [1 x %"class.v8::internal::StringStream::FmtElm"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %179) #9
  %180 = getelementptr inbounds [1 x %"class.v8::internal::StringStream::FmtElm"], [1 x %"class.v8::internal::StringStream::FmtElm"]* %5, i64 0, i64 0
  %181 = bitcast [1 x %"class.v8::internal::StringStream::FmtElm"]* %5 to i64*
  store i64 %178, i64* %181, align 8
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), i64 3, %"class.v8::internal::StringStream::FmtElm"* nonnull %180, i64 1) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %179) #9
  br label %182

182:                                              ; preds = %2, %175, %172, %118, %177, %73, %43, %22, %35, %27
  ret void
}

declare i32 @_ZN2v88internal8SNPrintFENS0_6VectorIcEEPKcz(i8*, i64, i8*, ...) local_unnamed_addr #4

declare void @_ZNK2v88internal6Object10ShortPrintEPNS0_12StringStreamE(%"class.v8::internal::Object"*, %"class.v8::internal::StringStream"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZNK2v88internal12StringStream9ToCStringEv(%"class.v8::internal::StringStream"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, 1
  %5 = zext i32 %4 to i64
  %6 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %5, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #13
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %19

8:                                                ; preds = %1
  %9 = tail call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #9
  %10 = bitcast %"class.v8::Platform"* %9 to void (%"class.v8::Platform"*)***
  %11 = load void (%"class.v8::Platform"*)**, void (%"class.v8::Platform"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %11, i64 3
  %13 = load void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %12, align 8
  tail call void %13(%"class.v8::Platform"* %9) #9
  %14 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %5, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #13
  %15 = icmp eq i8* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %8
  %17 = load i32, i32* %2, align 8
  br label %19

18:                                               ; preds = %8
  tail call void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37, i64 0, i64 0)) #14
  unreachable

19:                                               ; preds = %16, %1
  %20 = phi i32 [ %17, %16 ], [ %3, %1 ]
  %21 = phi i8* [ %14, %16 ], [ %6, %1 ]
  %22 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 4
  %23 = load i8*, i8** %22, align 8
  %24 = zext i32 %20 to i64
  switch i32 %20, label %51 [
    i32 1, label %25
    i32 2, label %27
    i32 3, label %31
    i32 4, label %32
    i32 5, label %36
    i32 6, label %37
    i32 7, label %38
    i32 8, label %39
    i32 9, label %43
    i32 10, label %44
    i32 11, label %45
    i32 12, label %46
    i32 13, label %47
    i32 14, label %48
    i32 15, label %49
    i32 16, label %50
  ]

25:                                               ; preds = %19
  %26 = load i8, i8* %23, align 1
  store i8 %26, i8* %21, align 1
  br label %52

27:                                               ; preds = %19
  %28 = bitcast i8* %23 to i16*
  %29 = bitcast i8* %21 to i16*
  %30 = load i16, i16* %28, align 1
  store i16 %30, i16* %29, align 1
  br label %52

31:                                               ; preds = %19
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 %23, i64 3, i1 false) #9
  br label %52

32:                                               ; preds = %19
  %33 = bitcast i8* %23 to i32*
  %34 = bitcast i8* %21 to i32*
  %35 = load i32, i32* %33, align 1
  store i32 %35, i32* %34, align 1
  br label %52

36:                                               ; preds = %19
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 %23, i64 5, i1 false) #9
  br label %52

37:                                               ; preds = %19
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 %23, i64 6, i1 false) #9
  br label %52

38:                                               ; preds = %19
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 %23, i64 7, i1 false) #9
  br label %52

39:                                               ; preds = %19
  %40 = bitcast i8* %23 to i64*
  %41 = bitcast i8* %21 to i64*
  %42 = load i64, i64* %40, align 1
  store i64 %42, i64* %41, align 1
  br label %52

43:                                               ; preds = %19
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 %23, i64 9, i1 false) #9
  br label %52

44:                                               ; preds = %19
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 %23, i64 10, i1 false) #9
  br label %52

45:                                               ; preds = %19
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 %23, i64 11, i1 false) #9
  br label %52

46:                                               ; preds = %19
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 %23, i64 12, i1 false) #9
  br label %52

47:                                               ; preds = %19
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 %23, i64 13, i1 false) #9
  br label %52

48:                                               ; preds = %19
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 %23, i64 14, i1 false) #9
  br label %52

49:                                               ; preds = %19
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 %23, i64 15, i1 false) #9
  br label %52

50:                                               ; preds = %19
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 %23, i64 16, i1 false) #9
  br label %52

51:                                               ; preds = %19
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 %23, i64 %24, i1 false) #9
  br label %52

52:                                               ; preds = %25, %27, %31, %32, %36, %37, %38, %39, %43, %44, %45, %46, %47, %48, %49, %50, %51
  %53 = getelementptr inbounds i8, i8* %21, i64 %24
  store i8 0, i8* %53, align 1
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12StringStream3LogEPNS0_7IsolateE(%"class.v8::internal::StringStream"* nocapture readonly, %"class.v8::internal::Isolate"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 21
  %7 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 4
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZN2v88internal6Logger11StringEventEPKcS3_(%"class.v8::internal::Logger"* %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0), i8* %9) #9
  br label %10

10:                                               ; preds = %2, %5
  ret void
}

declare void @_ZN2v88internal6Logger11StringEventEPKcS3_(%"class.v8::internal::Logger"*, i8*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12StringStream12OutputToFileEP8_IO_FILE(%"class.v8::internal::StringStream"* nocapture readonly, %struct._IO_FILE*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = icmp ugt i32 %4, 2048
  %6 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 4
  %7 = load i8*, i8** %6, align 8
  br i1 %5, label %13, label %8

8:                                                ; preds = %13, %2
  %9 = phi i32 [ 0, %2 ], [ %15, %13 ]
  %10 = phi i8* [ %7, %2 ], [ %28, %13 ]
  %11 = zext i32 %9 to i64
  %12 = getelementptr inbounds i8, i8* %10, i64 %11
  tail call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0), i8* %12) #9
  ret void

13:                                               ; preds = %2, %13
  %14 = phi i8* [ %28, %13 ], [ %7, %2 ]
  %15 = phi i32 [ %25, %13 ], [ 2048, %2 ]
  %16 = phi i32 [ %15, %13 ], [ 0, %2 ]
  %17 = zext i32 %15 to i64
  %18 = getelementptr inbounds i8, i8* %14, i64 %17
  %19 = load i8, i8* %18, align 1
  store i8 0, i8* %18, align 1
  %20 = load i8*, i8** %6, align 8
  %21 = zext i32 %16 to i64
  %22 = getelementptr inbounds i8, i8* %20, i64 %21
  tail call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0), i8* %22) #9
  %23 = load i8*, i8** %6, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 %17
  store i8 %19, i8* %24, align 1
  %25 = add i32 %15, 2048
  %26 = load i32, i32* %3, align 8
  %27 = icmp ult i32 %25, %26
  %28 = load i8*, i8** %6, align 8
  br i1 %27, label %13, label %8
}

declare void @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal12StringStream8ToStringEPNS0_7IsolateE(%"class.v8::internal::StringStream"* nocapture readonly, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Vector", align 8
  %4 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::Factory"*
  %5 = bitcast %"class.v8::internal::Vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 4
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = bitcast %"class.v8::internal::Vector"* %3 to i64*
  store i64 %8, i64* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Vector", %"class.v8::internal::Vector"* %3, i64 0, i32 1
  store i64 %11, i64* %13, align 8
  %14 = call i64* @_ZN2v88internal7Factory17NewStringFromUtf8ERKNS0_6VectorIKcEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %4, %"class.v8::internal::Vector"* nonnull dereferenceable(16) %3, i8 zeroext 0) #9
  %15 = icmp eq i64* %14, null
  br i1 %15, label %16, label %17, !prof !2

16:                                               ; preds = %2
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.36, i64 0, i64 0)) #14
  unreachable

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #9
  ret i64* %14
}

declare i64* @_ZN2v88internal7Factory17NewStringFromUtf8ERKNS0_6VectorIKcEENS0_14AllocationTypeE(%"class.v8::internal::Factory"*, %"class.v8::internal::Vector"* dereferenceable(16), i8 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12StringStream25ClearMentionedObjectCacheEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 93, i32 0, i32 0
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 92
  %4 = load %"class.std::__1::vector.974"*, %"class.std::__1::vector.974"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.974"* %4, null
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = tail call i8* @_Znwm(i64 24) #13
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #9
  %8 = bitcast %"class.std::__1::vector.974"** %3 to i8**
  store i8* %7, i8** %8, align 8
  %9 = bitcast i8* %7 to %"class.std::__1::vector.974"*
  br label %10

10:                                               ; preds = %6, %1
  %11 = phi %"class.std::__1::vector.974"* [ %9, %6 ], [ %4, %1 ]
  %12 = bitcast %"class.std::__1::vector.974"* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector.974", %"class.std::__1::vector.974"* %11, i64 0, i32 0, i32 1
  %15 = bitcast %"class.v8::internal::Handle.976"** %14 to i64*
  store i64 %13, i64* %15, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal12StringStream3PutENS0_6StringE(%"class.v8::internal::StringStream"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = add i64 %1, 7
  %4 = inttoptr i64 %3 to i32*
  %5 = load i32, i32* %4, align 4
  %6 = tail call zeroext i1 @_ZN2v88internal12StringStream3PutENS0_6StringEii(%"class.v8::internal::StringStream"* %0, i64 %1, i32 0, i32 %5)
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal12StringStream3PutENS0_6StringEii(%"class.v8::internal::StringStream"* nocapture, i64, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %"class.v8::internal::StringCharacterStream", align 8
  %9 = bitcast %"class.v8::internal::StringCharacterStream"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 320, i8* nonnull %9) #9
  call void @_ZN2v88internal21StringCharacterStreamC2ENS0_6StringEi(%"class.v8::internal::StringCharacterStream"* nonnull %8, i64 %1, i32 %2)
  %10 = icmp slt i32 %2, %3
  br i1 %10, label %11, label %137

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %8, i64 0, i32 2, i32 0
  %13 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %8, i64 0, i32 3
  %14 = bitcast i32* %7 to i8*
  %15 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %8, i64 0, i32 0, i32 2
  %16 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %8, i64 0, i32 0
  %17 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %8, i64 0, i32 4
  %18 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %8, i64 0, i32 2
  %19 = getelementptr inbounds %union.anon.1143, %union.anon.1143* %18, i64 0, i32 0
  %20 = bitcast i32* %6 to i8*
  %21 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %8, i64 0, i32 1
  %22 = bitcast %union.anon.1143* %18 to i16**
  %23 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 2
  %24 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 3
  %25 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 4
  %26 = bitcast i32* %5 to i8*
  %27 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 0
  br label %28

28:                                               ; preds = %123, %11
  %29 = phi i32 [ %2, %11 ], [ %135, %123 ]
  %30 = load i8*, i8** %12, align 8
  %31 = load i8*, i8** %13, align 8
  %32 = icmp eq i8* %30, %31
  br i1 %32, label %33, label %45

33:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #9
  store i32 0, i32* %7, align 4
  %34 = load i32, i32* %15, align 8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %33
  %37 = call i64 @_ZN2v88internal18ConsStringIterator8ContinueEPi(%"class.v8::internal::ConsStringIterator"* nonnull %16, i32* nonnull %7) #9
  %38 = trunc i64 %37 to i32
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %36, %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #9
  br label %137

41:                                               ; preds = %36
  %42 = call i64 @_ZN2v88internal6String9VisitFlatINS0_21StringCharacterStreamEEENS0_10ConsStringEPT_S1_iRKNS0_31SharedStringAccessGuardIfNeededE(%"class.v8::internal::StringCharacterStream"* nonnull %8, i64 %37, i32 0, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16) %17) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #9
  %43 = load i8*, i8** %19, align 8
  %44 = load i8*, i8** %13, align 8
  br label %45

45:                                               ; preds = %28, %41
  %46 = phi i8* [ %31, %28 ], [ %44, %41 ]
  %47 = phi i8* [ %30, %28 ], [ %43, %41 ]
  %48 = icmp eq i8* %47, %46
  br i1 %48, label %49, label %59

49:                                               ; preds = %45
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #9
  store i32 0, i32* %6, align 4
  %50 = load i32, i32* %15, align 8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %58, label %52

52:                                               ; preds = %49
  %53 = call i64 @_ZN2v88internal18ConsStringIterator8ContinueEPi(%"class.v8::internal::ConsStringIterator"* nonnull %16, i32* nonnull %6) #9
  %54 = trunc i64 %53 to i32
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %52
  %57 = call i64 @_ZN2v88internal6String9VisitFlatINS0_21StringCharacterStreamEEENS0_10ConsStringEPT_S1_iRKNS0_31SharedStringAccessGuardIfNeededE(%"class.v8::internal::StringCharacterStream"* nonnull %8, i64 %53, i32 0, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16) %17) #9
  br label %58

58:                                               ; preds = %56, %52, %49
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #9
  br label %59

59:                                               ; preds = %58, %45
  %60 = load i8, i8* %21, align 8, !range !3
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %67, label %62

62:                                               ; preds = %59
  %63 = load i8*, i8** %19, align 8
  %64 = getelementptr inbounds i8, i8* %63, i64 1
  store i8* %64, i8** %19, align 8
  %65 = load i8, i8* %63, align 1
  %66 = zext i8 %65 to i16
  br label %71

67:                                               ; preds = %59
  %68 = load i16*, i16** %22, align 8
  %69 = getelementptr inbounds i16, i16* %68, i64 1
  store i16* %69, i16** %22, align 8
  %70 = load i16, i16* %68, align 2
  br label %71

71:                                               ; preds = %62, %67
  %72 = phi i16 [ %66, %62 ], [ %70, %67 ]
  %73 = add i16 %72, -32
  %74 = icmp ugt i16 %73, 94
  %75 = select i1 %74, i16 63, i16 %72
  %76 = trunc i16 %75 to i8
  %77 = load i32, i32* %23, align 4
  %78 = load i32, i32* %24, align 8
  %79 = sub i32 %77, %78
  %80 = icmp eq i32 %79, 1
  br i1 %80, label %137, label %81

81:                                               ; preds = %71
  %82 = add i32 %77, -2
  %83 = icmp eq i32 %78, %82
  br i1 %83, label %86, label %84

84:                                               ; preds = %81
  %85 = load i8*, i8** %25, align 8
  br label %123

86:                                               ; preds = %81
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #9
  store i32 %77, i32* %5, align 4
  %87 = load %"class.v8::internal::StringAllocator"*, %"class.v8::internal::StringAllocator"** %27, align 8
  %88 = bitcast %"class.v8::internal::StringAllocator"* %87 to i8* (%"class.v8::internal::StringAllocator"*, i32*)***
  %89 = load i8* (%"class.v8::internal::StringAllocator"*, i32*)**, i8* (%"class.v8::internal::StringAllocator"*, i32*)*** %88, align 8
  %90 = getelementptr inbounds i8* (%"class.v8::internal::StringAllocator"*, i32*)*, i8* (%"class.v8::internal::StringAllocator"*, i32*)** %89, i64 3
  %91 = load i8* (%"class.v8::internal::StringAllocator"*, i32*)*, i8* (%"class.v8::internal::StringAllocator"*, i32*)** %90, align 8
  %92 = call i8* %91(%"class.v8::internal::StringAllocator"* %87, i32* nonnull %5) #9
  %93 = load i32, i32* %5, align 4
  %94 = load i32, i32* %23, align 4
  %95 = icmp ugt i32 %93, %94
  br i1 %95, label %96, label %98

96:                                               ; preds = %86
  store i32 %93, i32* %23, align 4
  store i8* %92, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #9
  %97 = load i32, i32* %24, align 8
  br label %123

98:                                               ; preds = %86
  %99 = add i32 %94, -1
  store i32 %99, i32* %24, align 8
  %100 = load i8*, i8** %25, align 8
  %101 = add i32 %94, -5
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds i8, i8* %100, i64 %102
  store i8 46, i8* %103, align 1
  %104 = load i8*, i8** %25, align 8
  %105 = load i32, i32* %24, align 8
  %106 = add i32 %105, -3
  %107 = zext i32 %106 to i64
  %108 = getelementptr inbounds i8, i8* %104, i64 %107
  store i8 46, i8* %108, align 1
  %109 = load i8*, i8** %25, align 8
  %110 = load i32, i32* %24, align 8
  %111 = add i32 %110, -2
  %112 = zext i32 %111 to i64
  %113 = getelementptr inbounds i8, i8* %109, i64 %112
  store i8 46, i8* %113, align 1
  %114 = load i8*, i8** %25, align 8
  %115 = load i32, i32* %24, align 8
  %116 = add i32 %115, -1
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds i8, i8* %114, i64 %117
  store i8 10, i8* %118, align 1
  %119 = load i8*, i8** %25, align 8
  %120 = load i32, i32* %24, align 8
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds i8, i8* %119, i64 %121
  store i8 0, i8* %122, align 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #9
  br label %137

123:                                              ; preds = %84, %96
  %124 = phi i32 [ %78, %84 ], [ %97, %96 ]
  %125 = phi i8* [ %85, %84 ], [ %92, %96 ]
  %126 = zext i32 %124 to i64
  %127 = getelementptr inbounds i8, i8* %125, i64 %126
  store i8 %76, i8* %127, align 1
  %128 = load i8*, i8** %25, align 8
  %129 = load i32, i32* %24, align 8
  %130 = add i32 %129, 1
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds i8, i8* %128, i64 %131
  store i8 0, i8* %132, align 1
  %133 = load i32, i32* %24, align 8
  %134 = add i32 %133, 1
  store i32 %134, i32* %24, align 8
  %135 = add i32 %29, 1
  %136 = icmp eq i32 %135, %3
  br i1 %136, label %137, label %28

137:                                              ; preds = %71, %123, %4, %40, %98
  %138 = phi i1 [ false, %98 ], [ true, %40 ], [ true, %4 ], [ false, %71 ], [ true, %123 ]
  %139 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %8, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load i8, i8* %139, align 8, !range !3
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %145, label %142

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %8, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %144 = load %"class.v8::base::SharedMutex"*, %"class.v8::base::SharedMutex"** %143, align 8
  call void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"* %144) #9
  br label %145

145:                                              ; preds = %137, %142
  call void @llvm.lifetime.end.p0i8(i64 320, i8* nonnull %9) #9
  ret i1 %138
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal21StringCharacterStreamC2ENS0_6StringEi(%"class.v8::internal::StringCharacterStream"*, i64, i32) unnamed_addr #6 comdat align 2 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 0
  %6 = bitcast %"class.v8::internal::StringCharacterStream"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 264, i1 false) #9
  %7 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 1
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %union.anon.1148* %10 to i8*
  store i8 0, i8* %11, align 8
  %12 = tail call %"class.v8::internal::LocalHeap"* @_ZN2v88internal9LocalHeap7CurrentEv() #9
  %13 = icmp eq %"class.v8::internal::LocalHeap"* %12, null
  br i1 %13, label %41, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %12, i64 0, i32 1
  %16 = load i8, i8* %15, align 8, !range !3
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %41

18:                                               ; preds = %14
  %19 = and i64 %1, -262144
  %20 = or i64 %19, 8
  %21 = inttoptr i64 %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, 2097152
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %41

25:                                               ; preds = %18
  %26 = or i64 %19, 16
  %27 = inttoptr i64 %26 to i64*
  %28 = load i64, i64* %27, align 16
  %29 = add i64 %28, -41416
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %41, label %31

31:                                               ; preds = %25
  %32 = inttoptr i64 %29 to %"class.v8::internal::Isolate"*
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %32, i64 0, i32 17
  %34 = load i8, i8* %9, align 8, !range !3
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %38 = load %"class.v8::base::SharedMutex"*, %"class.v8::base::SharedMutex"** %37, align 8
  tail call void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"* %38) #9
  store i8 0, i8* %9, align 8
  br label %39

39:                                               ; preds = %36, %31
  %40 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.v8::base::SharedMutex"* %33, %"class.v8::base::SharedMutex"** %40, align 8
  tail call void @_ZN2v84base11SharedMutex10LockSharedEv(%"class.v8::base::SharedMutex"* %33) #9
  store i8 1, i8* %9, align 8
  br label %41

41:                                               ; preds = %3, %14, %18, %25, %39
  %42 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42)
  store i32 %2, i32* %4, align 4
  %43 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 2, i32 0
  %44 = bitcast i8** %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 16, i1 false) #9
  %45 = tail call i64 @_ZN2v88internal6String9VisitFlatINS0_21StringCharacterStreamEEENS0_10ConsStringEPT_S1_iRKNS0_31SharedStringAccessGuardIfNeededE(%"class.v8::internal::StringCharacterStream"* %0, i64 %1, i32 %2, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16) %8) #9
  %46 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 0, i32 2
  store i32 0, i32* %46, align 8
  %47 = trunc i64 %45 to i32
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %59, label %49

49:                                               ; preds = %41
  tail call void @_ZN2v88internal18ConsStringIterator10InitializeENS0_10ConsStringEi(%"class.v8::internal::ConsStringIterator"* %5, i64 %45, i32 %2) #9
  store i32 0, i32* %4, align 4
  %50 = load i32, i32* %46, align 8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %59, label %52

52:                                               ; preds = %49
  %53 = call i64 @_ZN2v88internal18ConsStringIterator8ContinueEPi(%"class.v8::internal::ConsStringIterator"* %5, i32* nonnull %4) #9
  %54 = trunc i64 %53 to i32
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %52
  %57 = load i32, i32* %4, align 4
  %58 = call i64 @_ZN2v88internal6String9VisitFlatINS0_21StringCharacterStreamEEENS0_10ConsStringEPT_S1_iRKNS0_31SharedStringAccessGuardIfNeededE(%"class.v8::internal::StringCharacterStream"* %0, i64 %53, i32 %57, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16) %8) #9
  br label %59

59:                                               ; preds = %41, %49, %52, %56
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12StringStream9PrintNameENS0_6ObjectE(%"class.v8::internal::StringStream"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca [1 x %"class.v8::internal::StringStream::FmtElm"], align 8
  %4 = and i64 %1, 1
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %25, label %6

6:                                                ; preds = %2
  %7 = and i64 %1, -4294967296
  %8 = add i64 %1, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = add i64 %12, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = icmp ult i16 %15, 64
  br i1 %16, label %17, label %25

17:                                               ; preds = %6
  %18 = add i64 %1, 7
  %19 = inttoptr i64 %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %17
  %23 = tail call zeroext i1 @_ZN2v88internal12StringStream3PutENS0_6StringEii(%"class.v8::internal::StringStream"* %0, i64 %1, i32 0, i32 %20) #9
  br label %29

24:                                               ; preds = %17
  tail call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i64 0, i64 0), i64 15, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #9
  br label %29

25:                                               ; preds = %2, %6
  %26 = bitcast [1 x %"class.v8::internal::StringStream::FmtElm"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #9
  %27 = getelementptr inbounds [1 x %"class.v8::internal::StringStream::FmtElm"], [1 x %"class.v8::internal::StringStream::FmtElm"]* %3, i64 0, i64 0
  %28 = bitcast [1 x %"class.v8::internal::StringStream::FmtElm"]* %3 to i64*
  store i64 %1, i64* %28, align 8
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0), i64 2, %"class.v8::internal::StringStream::FmtElm"* nonnull %27, i64 1) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #9
  br label %29

29:                                               ; preds = %22, %24, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12StringStream13PrintUsingMapENS0_8JSObjectE(%"class.v8::internal::StringStream"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.v8::internal::Representation", align 1
  %5 = alloca [1 x %"class.v8::internal::StringStream::FmtElm"], align 8
  %6 = alloca %"class.v8::internal::Object", align 8
  %7 = and i64 %1, -4294967296
  %8 = add i64 %1, -1
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = and i64 %1, -262144
  %14 = or i64 %13, 16
  %15 = inttoptr i64 %14 to i64*
  %16 = load i64, i64* %15, align 16
  %17 = add i64 %16, -41416
  %18 = inttoptr i64 %17 to %"class.v8::internal::Isolate"*
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 0, i32 4
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %12, 23
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = and i64 %20, 4294967295
  %25 = icmp eq i64 %24, 0
  tail call void @llvm.assume(i1 %25) #9
  %26 = zext i32 %23 to i64
  %27 = or i64 %20, %26
  %28 = add i64 %12, 11
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 acquire, align 4
  %31 = lshr i32 %30, 10
  %32 = and i32 %31, 1023
  %33 = zext i32 %32 to i64
  %34 = icmp eq i32 %32, 0
  br i1 %34, label %54, label %35

35:                                               ; preds = %2
  %36 = bitcast %"class.v8::internal::Object"* %6 to i8*
  %37 = add i64 %27, -1
  %38 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %6, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 2
  %40 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 3
  %41 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 4
  %42 = bitcast i32* %3 to i8*
  %43 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 0
  %44 = add i64 %12, 3
  %45 = inttoptr i64 %44 to i8*
  %46 = add i64 %12, 4
  %47 = inttoptr i64 %46 to i8*
  %48 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %4, i64 0, i32 0
  %49 = add i64 %1, 3
  %50 = inttoptr i64 %49 to i32*
  %51 = bitcast [1 x %"class.v8::internal::StringStream::FmtElm"]* %5 to i8*
  %52 = getelementptr inbounds [1 x %"class.v8::internal::StringStream::FmtElm"], [1 x %"class.v8::internal::StringStream::FmtElm"]* %5, i64 0, i64 0
  %53 = bitcast [1 x %"class.v8::internal::StringStream::FmtElm"]* %5 to i64*
  br label %55

54:                                               ; preds = %305, %2
  ret void

55:                                               ; preds = %35, %305
  %56 = phi i64 [ 0, %35 ], [ %306, %305 ]
  %57 = mul nuw nsw i64 %56, 51539607552
  %58 = add nuw nsw i64 %57, 68719476736
  %59 = lshr exact i64 %58, 32
  %60 = or i64 %59, 3
  %61 = add i64 %60, %27
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %305

66:                                               ; preds = %55
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #9
  %67 = add i64 %37, %59
  %68 = inttoptr i64 %67 to i32*
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = zext i32 %69 to i64
  %71 = or i64 %20, %70
  store i64 %71, i64* %38, align 8
  %72 = and i64 %70, 1
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %105, label %74

74:                                               ; preds = %66
  %75 = add i64 %71, -1
  %76 = inttoptr i64 %75 to i32*
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = zext i32 %77 to i64
  %79 = or i64 %20, %78
  %80 = add i64 %79, 7
  %81 = inttoptr i64 %80 to i16*
  %82 = load atomic i16, i16* %81 monotonic, align 2
  %83 = icmp ult i16 %82, 64
  br i1 %83, label %92, label %84

84:                                               ; preds = %74
  %85 = load atomic i32, i32* %76 monotonic, align 4
  %86 = zext i32 %85 to i64
  %87 = or i64 %20, %86
  %88 = add i64 %87, 7
  %89 = inttoptr i64 %88 to i16*
  %90 = load atomic i16, i16* %89 monotonic, align 2
  %91 = icmp eq i16 %90, 66
  br i1 %91, label %92, label %304

92:                                               ; preds = %74, %84
  %93 = load atomic i32, i32* %76 monotonic, align 4
  %94 = zext i32 %93 to i64
  %95 = or i64 %20, %94
  %96 = add i64 %95, 7
  %97 = inttoptr i64 %96 to i16*
  %98 = load atomic i16, i16* %97 monotonic, align 2
  %99 = icmp ult i16 %98, 64
  br i1 %99, label %100, label %105

100:                                              ; preds = %92
  %101 = add i64 %71, 7
  %102 = inttoptr i64 %101 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = icmp slt i32 %103, 18
  br i1 %104, label %105, label %172

105:                                              ; preds = %66, %92, %100
  %106 = phi i32 [ 3, %66 ], [ 3, %92 ], [ %103, %100 ]
  br label %107

107:                                              ; preds = %105, %167
  %108 = phi i32 [ %168, %167 ], [ %106, %105 ]
  %109 = load i32, i32* %39, align 4
  %110 = load i32, i32* %40, align 8
  %111 = sub i32 %109, %110
  %112 = icmp eq i32 %111, 1
  br i1 %112, label %167, label %113

113:                                              ; preds = %107
  %114 = add i32 %109, -2
  %115 = icmp eq i32 %110, %114
  br i1 %115, label %118, label %116

116:                                              ; preds = %113
  %117 = load i8*, i8** %41, align 8
  br label %155

118:                                              ; preds = %113
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42) #9
  store i32 %109, i32* %3, align 4
  %119 = load %"class.v8::internal::StringAllocator"*, %"class.v8::internal::StringAllocator"** %43, align 8
  %120 = bitcast %"class.v8::internal::StringAllocator"* %119 to i8* (%"class.v8::internal::StringAllocator"*, i32*)***
  %121 = load i8* (%"class.v8::internal::StringAllocator"*, i32*)**, i8* (%"class.v8::internal::StringAllocator"*, i32*)*** %120, align 8
  %122 = getelementptr inbounds i8* (%"class.v8::internal::StringAllocator"*, i32*)*, i8* (%"class.v8::internal::StringAllocator"*, i32*)** %121, i64 3
  %123 = load i8* (%"class.v8::internal::StringAllocator"*, i32*)*, i8* (%"class.v8::internal::StringAllocator"*, i32*)** %122, align 8
  %124 = call i8* %123(%"class.v8::internal::StringAllocator"* %119, i32* nonnull %3) #9
  %125 = load i32, i32* %3, align 4
  %126 = load i32, i32* %39, align 4
  %127 = icmp ugt i32 %125, %126
  br i1 %127, label %128, label %130

128:                                              ; preds = %118
  store i32 %125, i32* %39, align 4
  store i8* %124, i8** %41, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42) #9
  %129 = load i32, i32* %40, align 8
  br label %155

130:                                              ; preds = %118
  %131 = add i32 %126, -1
  store i32 %131, i32* %40, align 8
  %132 = load i8*, i8** %41, align 8
  %133 = add i32 %126, -5
  %134 = zext i32 %133 to i64
  %135 = getelementptr inbounds i8, i8* %132, i64 %134
  store i8 46, i8* %135, align 1
  %136 = load i8*, i8** %41, align 8
  %137 = load i32, i32* %40, align 8
  %138 = add i32 %137, -3
  %139 = zext i32 %138 to i64
  %140 = getelementptr inbounds i8, i8* %136, i64 %139
  store i8 46, i8* %140, align 1
  %141 = load i8*, i8** %41, align 8
  %142 = load i32, i32* %40, align 8
  %143 = add i32 %142, -2
  %144 = zext i32 %143 to i64
  %145 = getelementptr inbounds i8, i8* %141, i64 %144
  store i8 46, i8* %145, align 1
  %146 = load i8*, i8** %41, align 8
  %147 = load i32, i32* %40, align 8
  %148 = add i32 %147, -1
  %149 = zext i32 %148 to i64
  %150 = getelementptr inbounds i8, i8* %146, i64 %149
  store i8 10, i8* %150, align 1
  %151 = load i8*, i8** %41, align 8
  %152 = load i32, i32* %40, align 8
  %153 = zext i32 %152 to i64
  %154 = getelementptr inbounds i8, i8* %151, i64 %153
  store i8 0, i8* %154, align 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42) #9
  br label %167

155:                                              ; preds = %128, %116
  %156 = phi i32 [ %110, %116 ], [ %129, %128 ]
  %157 = phi i8* [ %117, %116 ], [ %124, %128 ]
  %158 = zext i32 %156 to i64
  %159 = getelementptr inbounds i8, i8* %157, i64 %158
  store i8 32, i8* %159, align 1
  %160 = load i8*, i8** %41, align 8
  %161 = load i32, i32* %40, align 8
  %162 = add i32 %161, 1
  %163 = zext i32 %162 to i64
  %164 = getelementptr inbounds i8, i8* %160, i64 %163
  store i8 0, i8* %164, align 1
  %165 = load i32, i32* %40, align 8
  %166 = add i32 %165, 1
  store i32 %166, i32* %40, align 8
  br label %167

167:                                              ; preds = %107, %130, %155
  %168 = add i32 %108, 1
  %169 = icmp eq i32 %168, 18
  br i1 %169, label %170, label %107

170:                                              ; preds = %167
  %171 = load i64, i64* %38, align 8
  br label %172

172:                                              ; preds = %170, %100
  %173 = phi i64 [ %171, %170 ], [ %71, %100 ]
  %174 = and i64 %173, 1
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %192, label %176

176:                                              ; preds = %172
  %177 = and i64 %173, -4294967296
  %178 = add i64 %173, -1
  %179 = inttoptr i64 %178 to i32*
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = zext i32 %180 to i64
  %182 = or i64 %177, %181
  %183 = add i64 %182, 7
  %184 = inttoptr i64 %183 to i16*
  %185 = load atomic i16, i16* %184 monotonic, align 2
  %186 = icmp ult i16 %185, 64
  br i1 %186, label %187, label %192

187:                                              ; preds = %176
  %188 = add i64 %173, 7
  %189 = inttoptr i64 %188 to i32*
  %190 = load i32, i32* %189, align 4
  %191 = call zeroext i1 @_ZN2v88internal12StringStream3PutENS0_6StringEii(%"class.v8::internal::StringStream"* %0, i64 %173, i32 0, i32 %190) #9
  br label %194

192:                                              ; preds = %172, %176
  %193 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZNK2v88internal6Object10ShortPrintEP8_IO_FILE(%"class.v8::internal::Object"* nonnull %6, %struct._IO_FILE* %193) #9
  br label %194

194:                                              ; preds = %192, %187
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i64 0, i64 0), i64 2, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #9
  %195 = load atomic i32, i32* %22 monotonic, align 4
  %196 = zext i32 %195 to i64
  %197 = or i64 %7, %196
  %198 = add i64 %197, %60
  %199 = inttoptr i64 %198 to i32*
  %200 = load atomic i32, i32* %199 monotonic, align 4
  %201 = ashr i32 %200, 1
  %202 = lshr i32 %201, 19
  %203 = and i32 %202, 1023
  %204 = lshr i32 %201, 6
  %205 = trunc i32 %204 to i8
  %206 = and i8 %205, 7
  %207 = load atomic i8, i8* %45 monotonic, align 1
  %208 = zext i8 %207 to i32
  %209 = load atomic i8, i8* %47 monotonic, align 1
  %210 = zext i8 %209 to i32
  %211 = sub nsw i32 %208, %210
  %212 = icmp slt i32 %203, %211
  br i1 %212, label %213, label %221

213:                                              ; preds = %194
  %214 = load atomic i8, i8* %47 monotonic, align 1
  %215 = zext i8 %214 to i64
  %216 = shl nuw nsw i64 %215, 28
  %217 = load atomic i8, i8* %47 monotonic, align 1
  %218 = zext i8 %217 to i32
  %219 = add nuw nsw i32 %203, %218
  %220 = shl nuw nsw i32 %219, 2
  br label %225

221:                                              ; preds = %194
  %222 = sub nsw i32 %203, %211
  %223 = shl nsw i32 %222, 2
  %224 = add nsw i32 %223, 8
  br label %225

225:                                              ; preds = %221, %213
  %226 = phi i32 [ %220, %213 ], [ %224, %221 ]
  %227 = phi i64 [ %216, %213 ], [ 536870912, %221 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %48) #9
  store i8 %206, i8* %48, align 1
  %228 = icmp ult i8 %206, 5
  br i1 %228, label %231, label %229

229:                                              ; preds = %225
  %230 = call i8* @_ZNK2v88internal14Representation8MnemonicEv(%"class.v8::internal::Representation"* nonnull %4) #9
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i64 0, i64 0), i8* %230) #9
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)) #14
  unreachable

231:                                              ; preds = %225
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %48) #9
  %232 = zext i1 %212 to i64
  %233 = shl nuw nsw i64 %232, 13
  %234 = sext i32 %226 to i64
  %235 = sext i32 %211 to i64
  %236 = shl nsw i64 %235, 16
  %237 = or i64 %233, %236
  %238 = or i64 %237, %234
  %239 = or i64 %238, %227
  %240 = and i64 %238, 8192
  %241 = icmp eq i64 %240, 0
  br i1 %241, label %246, label %242

242:                                              ; preds = %231
  %243 = and i64 %234, 8191
  %244 = add i64 %8, %243
  %245 = inttoptr i64 %244 to i32*
  br label %299

246:                                              ; preds = %231
  %247 = load i32, i32* %50, align 4
  %248 = zext i32 %247 to i64
  %249 = or i64 %7, %248
  %250 = and i64 %248, 1
  %251 = icmp eq i64 %250, 0
  %252 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  br i1 %251, label %272, label %253

253:                                              ; preds = %246
  %254 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %252, null
  br i1 %254, label %261, label %255

255:                                              ; preds = %253
  %256 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %252, i64 0, i32 0, i32 1
  %257 = load i8, i8* %256, align 8, !range !3
  %258 = icmp eq i8 %257, 0
  br i1 %258, label %261, label %259

259:                                              ; preds = %255
  %260 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %252, i64 0, i32 1, i64 0
  br label %266

261:                                              ; preds = %255, %253
  %262 = load i64, i64* %15, align 16
  %263 = add i64 %262, -41416
  %264 = inttoptr i64 %263 to %"class.v8::internal::Isolate"*
  %265 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %264, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %266

266:                                              ; preds = %261, %259
  %267 = phi i64* [ %265, %261 ], [ %260, %259 ]
  %268 = getelementptr inbounds i64, i64* %267, i64 29
  %269 = load i64, i64* %268, align 8
  %270 = trunc i64 %269 to i32
  %271 = icmp eq i32 %247, %270
  br i1 %271, label %272, label %289

272:                                              ; preds = %266, %246
  %273 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %252, null
  br i1 %273, label %280, label %274

274:                                              ; preds = %272
  %275 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %252, i64 0, i32 0, i32 1
  %276 = load i8, i8* %275, align 8, !range !3
  %277 = icmp eq i8 %276, 0
  br i1 %277, label %280, label %278

278:                                              ; preds = %274
  %279 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %252, i64 0, i32 1, i64 0
  br label %285

280:                                              ; preds = %274, %272
  %281 = load i64, i64* %15, align 16
  %282 = add i64 %281, -41416
  %283 = inttoptr i64 %282 to %"class.v8::internal::Isolate"*
  %284 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %283, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %285

285:                                              ; preds = %280, %278
  %286 = phi i64* [ %284, %280 ], [ %279, %278 ]
  %287 = getelementptr inbounds i64, i64* %286, i64 106
  %288 = load i64, i64* %287, align 8
  br label %289

289:                                              ; preds = %285, %266
  %290 = phi i64 [ %288, %285 ], [ %249, %266 ]
  %291 = lshr i64 %239, 26
  %292 = and i64 %291, 124
  %293 = and i64 %234, 8188
  %294 = add nuw nsw i64 %293, 7
  %295 = sub nsw i64 %294, %292
  %296 = add i64 %295, %290
  %297 = inttoptr i64 %296 to i32*
  %298 = load atomic i32, i32* %297 monotonic, align 4
  br label %299

299:                                              ; preds = %242, %289
  %300 = phi i32* [ %245, %242 ], [ %297, %289 ]
  %301 = load i32, i32* %300, align 4
  %302 = zext i32 %301 to i64
  %303 = or i64 %7, %302
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #9
  store i64 %303, i64* %53, align 8
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15, i64 0, i64 0), i64 3, %"class.v8::internal::StringStream::FmtElm"* nonnull %52, i64 1) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #9
  br label %304

304:                                              ; preds = %299, %84
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #9
  br label %305

305:                                              ; preds = %304, %55
  %306 = add nuw nsw i64 %56, 1
  %307 = icmp eq i64 %306, %33
  br i1 %307, label %54, label %55
}

declare void @_ZNK2v88internal6Object10ShortPrintEP8_IO_FILE(%"class.v8::internal::Object"*, %struct._IO_FILE*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12StringStream15PrintFixedArrayENS0_10FixedArrayEj(%"class.v8::internal::StringStream"*, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca [2 x %"class.v8::internal::StringStream::FmtElm"], align 16
  %5 = alloca i32, align 4
  %6 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %7 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %6, i64 0, i32 0, i32 1
  %10 = load i8, i8* %9, align 8, !range !3
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %6, i64 0, i32 1, i64 0
  br label %22

14:                                               ; preds = %8, %3
  %15 = and i64 %1, -262144
  %16 = or i64 %15, 16
  %17 = inttoptr i64 %16 to i64*
  %18 = load i64, i64* %17, align 16
  %19 = add i64 %18, -41416
  %20 = inttoptr i64 %19 to %"class.v8::internal::Isolate"*
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %20, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %22

22:                                               ; preds = %12, %14
  %23 = phi i64* [ %21, %14 ], [ %13, %12 ]
  %24 = icmp eq i32 %2, 0
  br i1 %24, label %125, label %25

25:                                               ; preds = %22
  %26 = and i64 %1, -4294967296
  %27 = add i64 %1, 7
  %28 = getelementptr inbounds i64, i64* %23, i64 5
  %29 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 2
  %30 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 3
  %31 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 4
  %32 = bitcast i32* %5 to i8*
  %33 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 0
  %34 = bitcast [2 x %"class.v8::internal::StringStream::FmtElm"]* %4 to i8*
  %35 = getelementptr inbounds [2 x %"class.v8::internal::StringStream::FmtElm"], [2 x %"class.v8::internal::StringStream::FmtElm"]* %4, i64 0, i64 0
  %36 = bitcast [2 x %"class.v8::internal::StringStream::FmtElm"]* %4 to i32*
  %37 = getelementptr inbounds [2 x %"class.v8::internal::StringStream::FmtElm"], [2 x %"class.v8::internal::StringStream::FmtElm"]* %4, i64 0, i64 1
  %38 = bitcast %"class.v8::internal::StringStream::FmtElm"* %37 to i64*
  %39 = zext i32 %2 to i64
  br label %42

40:                                               ; preds = %119
  %41 = icmp ugt i32 %2, 9
  br i1 %41, label %124, label %125

42:                                               ; preds = %25, %119
  %43 = phi i64 [ 0, %25 ], [ %120, %119 ]
  %44 = shl i64 %43, 2
  %45 = add i64 %27, %44
  %46 = inttoptr i64 %45 to i32*
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = load i64, i64* %28, align 8
  %49 = trunc i64 %48 to i32
  %50 = icmp eq i32 %47, %49
  br i1 %50, label %119, label %56

51:                                               ; preds = %116
  %52 = load atomic i32, i32* %46 monotonic, align 4
  %53 = zext i32 %52 to i64
  %54 = or i64 %26, %53
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #9
  %55 = trunc i64 %43 to i32
  store i32 %55, i32* %36, align 16
  store i64 %54, i64* %38, align 8
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i64 0, i64 0), i64 7, %"class.v8::internal::StringStream::FmtElm"* nonnull %35, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #9
  br label %119

56:                                               ; preds = %42, %116
  %57 = phi i32 [ %117, %116 ], [ 1, %42 ]
  %58 = load i32, i32* %29, align 4
  %59 = load i32, i32* %30, align 8
  %60 = sub i32 %58, %59
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %116, label %62

62:                                               ; preds = %56
  %63 = add i32 %58, -2
  %64 = icmp eq i32 %59, %63
  br i1 %64, label %67, label %65

65:                                               ; preds = %62
  %66 = load i8*, i8** %31, align 8
  br label %104

67:                                               ; preds = %62
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #9
  store i32 %58, i32* %5, align 4
  %68 = load %"class.v8::internal::StringAllocator"*, %"class.v8::internal::StringAllocator"** %33, align 8
  %69 = bitcast %"class.v8::internal::StringAllocator"* %68 to i8* (%"class.v8::internal::StringAllocator"*, i32*)***
  %70 = load i8* (%"class.v8::internal::StringAllocator"*, i32*)**, i8* (%"class.v8::internal::StringAllocator"*, i32*)*** %69, align 8
  %71 = getelementptr inbounds i8* (%"class.v8::internal::StringAllocator"*, i32*)*, i8* (%"class.v8::internal::StringAllocator"*, i32*)** %70, i64 3
  %72 = load i8* (%"class.v8::internal::StringAllocator"*, i32*)*, i8* (%"class.v8::internal::StringAllocator"*, i32*)** %71, align 8
  %73 = call i8* %72(%"class.v8::internal::StringAllocator"* %68, i32* nonnull %5) #9
  %74 = load i32, i32* %5, align 4
  %75 = load i32, i32* %29, align 4
  %76 = icmp ugt i32 %74, %75
  br i1 %76, label %77, label %79

77:                                               ; preds = %67
  store i32 %74, i32* %29, align 4
  store i8* %73, i8** %31, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #9
  %78 = load i32, i32* %30, align 8
  br label %104

79:                                               ; preds = %67
  %80 = add i32 %75, -1
  store i32 %80, i32* %30, align 8
  %81 = load i8*, i8** %31, align 8
  %82 = add i32 %75, -5
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds i8, i8* %81, i64 %83
  store i8 46, i8* %84, align 1
  %85 = load i8*, i8** %31, align 8
  %86 = load i32, i32* %30, align 8
  %87 = add i32 %86, -3
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds i8, i8* %85, i64 %88
  store i8 46, i8* %89, align 1
  %90 = load i8*, i8** %31, align 8
  %91 = load i32, i32* %30, align 8
  %92 = add i32 %91, -2
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds i8, i8* %90, i64 %93
  store i8 46, i8* %94, align 1
  %95 = load i8*, i8** %31, align 8
  %96 = load i32, i32* %30, align 8
  %97 = add i32 %96, -1
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds i8, i8* %95, i64 %98
  store i8 10, i8* %99, align 1
  %100 = load i8*, i8** %31, align 8
  %101 = load i32, i32* %30, align 8
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds i8, i8* %100, i64 %102
  store i8 0, i8* %103, align 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #9
  br label %116

104:                                              ; preds = %77, %65
  %105 = phi i32 [ %59, %65 ], [ %78, %77 ]
  %106 = phi i8* [ %66, %65 ], [ %73, %77 ]
  %107 = zext i32 %105 to i64
  %108 = getelementptr inbounds i8, i8* %106, i64 %107
  store i8 32, i8* %108, align 1
  %109 = load i8*, i8** %31, align 8
  %110 = load i32, i32* %30, align 8
  %111 = add i32 %110, 1
  %112 = zext i32 %111 to i64
  %113 = getelementptr inbounds i8, i8* %109, i64 %112
  store i8 0, i8* %113, align 1
  %114 = load i32, i32* %30, align 8
  %115 = add i32 %114, 1
  store i32 %115, i32* %30, align 8
  br label %116

116:                                              ; preds = %56, %79, %104
  %117 = add nuw nsw i32 %57, 1
  %118 = icmp eq i32 %117, 18
  br i1 %118, label %51, label %56

119:                                              ; preds = %42, %51
  %120 = add nuw nsw i64 %43, 1
  %121 = icmp ult i64 %120, 10
  %122 = icmp ult i64 %120, %39
  %123 = and i1 %121, %122
  br i1 %123, label %42, label %40

124:                                              ; preds = %40
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0), i64 22, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #9
  br label %125

125:                                              ; preds = %22, %124, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12StringStream14PrintByteArrayENS0_9ByteArrayE(%"class.v8::internal::StringStream"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca [1 x %"class.v8::internal::StringStream::FmtElm"], align 8
  %4 = alloca [3 x %"class.v8::internal::StringStream::FmtElm"], align 16
  %5 = add i64 %1, 3
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = ashr i32 %7, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %48, label %10

10:                                               ; preds = %2
  %11 = bitcast [3 x %"class.v8::internal::StringStream::FmtElm"]* %4 to i8*
  %12 = getelementptr inbounds [3 x %"class.v8::internal::StringStream::FmtElm"], [3 x %"class.v8::internal::StringStream::FmtElm"]* %4, i64 0, i64 0
  %13 = bitcast [3 x %"class.v8::internal::StringStream::FmtElm"]* %4 to i32*
  %14 = getelementptr inbounds [3 x %"class.v8::internal::StringStream::FmtElm"], [3 x %"class.v8::internal::StringStream::FmtElm"]* %4, i64 0, i64 1
  %15 = bitcast %"class.v8::internal::StringStream::FmtElm"* %14 to i32*
  %16 = getelementptr inbounds [3 x %"class.v8::internal::StringStream::FmtElm"], [3 x %"class.v8::internal::StringStream::FmtElm"]* %4, i64 0, i64 2
  %17 = bitcast %"class.v8::internal::StringStream::FmtElm"* %16 to i32*
  %18 = bitcast [1 x %"class.v8::internal::StringStream::FmtElm"]* %3 to i8*
  %19 = getelementptr inbounds [1 x %"class.v8::internal::StringStream::FmtElm"], [1 x %"class.v8::internal::StringStream::FmtElm"]* %3, i64 0, i64 0
  %20 = bitcast [1 x %"class.v8::internal::StringStream::FmtElm"]* %3 to i32*
  %21 = zext i32 %8 to i64
  br label %24

22:                                               ; preds = %42
  %23 = icmp ugt i32 %8, 9
  br i1 %23, label %47, label %48

24:                                               ; preds = %10, %42
  %25 = phi i64 [ 0, %10 ], [ %43, %42 ]
  %26 = add nuw nsw i64 %25, 7
  %27 = add i64 %26, %1
  %28 = inttoptr i64 %27 to i8*
  %29 = load i8, i8* %28, align 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #9
  %30 = trunc i64 %25 to i32
  store i32 %30, i32* %13, align 16
  %31 = zext i8 %29 to i32
  store i32 %31, i32* %15, align 8
  store i32 %31, i32* %17, align 16
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.18, i64 0, i64 0), i64 27, %"class.v8::internal::StringStream::FmtElm"* nonnull %12, i64 3) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #9
  %32 = add i8 %29, -32
  %33 = icmp ult i8 %32, 95
  br i1 %33, label %34, label %35

34:                                               ; preds = %24
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  store i32 %31, i32* %20, align 8
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0), i64 5, %"class.v8::internal::StringStream::FmtElm"* nonnull %19, i64 1) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  br label %42

35:                                               ; preds = %24
  switch i8 %29, label %38 [
    i8 10, label %36
    i8 13, label %37
    i8 0, label %42
  ]

36:                                               ; preds = %35
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i64 0, i64 0), i64 4, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #9
  br label %42

37:                                               ; preds = %35
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0), i64 4, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #9
  br label %42

38:                                               ; preds = %35
  %39 = icmp ult i8 %29, 27
  br i1 %39, label %40, label %42

40:                                               ; preds = %38
  %41 = add nuw nsw i32 %31, 64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  store i32 %41, i32* %20, align 8
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0), i64 4, %"class.v8::internal::StringStream::FmtElm"* nonnull %19, i64 1) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  br label %42

42:                                               ; preds = %35, %36, %38, %40, %37, %34
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 1, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #9
  %43 = add nuw nsw i64 %25, 1
  %44 = icmp ult i64 %43, 10
  %45 = icmp ult i64 %43, %21
  %46 = and i1 %44, %45
  br i1 %46, label %24, label %22

47:                                               ; preds = %22
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0), i64 22, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #9
  br label %48

48:                                               ; preds = %2, %47, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12StringStream25PrintMentionedObjectCacheEPNS0_7IsolateE(%"class.v8::internal::StringStream"*, %"class.v8::internal::Isolate"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca [1 x %"class.v8::internal::StringStream::FmtElm"], align 8
  %4 = alloca [2 x %"class.v8::internal::StringStream::FmtElm"], align 16
  %5 = alloca %"class.v8::internal::HeapObject", align 8
  %6 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %139, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 92
  %11 = load %"class.std::__1::vector.974"*, %"class.std::__1::vector.974"** %10, align 8
  tail call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %0, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.24, i64 0, i64 0), i64 63, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #9
  %12 = getelementptr inbounds %"class.std::__1::vector.974", %"class.std::__1::vector.974"* %11, i64 0, i32 0, i32 1
  %13 = bitcast %"class.v8::internal::Handle.976"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.974"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %14, %16
  br i1 %17, label %139, label %18

18:                                               ; preds = %9
  %19 = bitcast %"class.v8::internal::HeapObject"* %5 to i8*
  %20 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %5, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast [2 x %"class.v8::internal::StringStream::FmtElm"]* %4 to i8*
  %22 = getelementptr inbounds [2 x %"class.v8::internal::StringStream::FmtElm"], [2 x %"class.v8::internal::StringStream::FmtElm"]* %4, i64 0, i64 0
  %23 = bitcast [2 x %"class.v8::internal::StringStream::FmtElm"]* %4 to i32*
  %24 = getelementptr inbounds [2 x %"class.v8::internal::StringStream::FmtElm"], [2 x %"class.v8::internal::StringStream::FmtElm"]* %4, i64 0, i64 1
  %25 = bitcast %"class.v8::internal::StringStream::FmtElm"* %24 to i64*
  %26 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %5, i64 0, i32 0
  %27 = bitcast [1 x %"class.v8::internal::StringStream::FmtElm"]* %3 to i8*
  %28 = getelementptr inbounds [1 x %"class.v8::internal::StringStream::FmtElm"], [1 x %"class.v8::internal::StringStream::FmtElm"]* %3, i64 0, i64 0
  %29 = bitcast [1 x %"class.v8::internal::StringStream::FmtElm"]* %3 to i64*
  br label %30

30:                                               ; preds = %18, %132
  %31 = phi i64 [ %16, %18 ], [ %135, %132 ]
  %32 = phi i64 [ 0, %18 ], [ %133, %132 ]
  %33 = inttoptr i64 %31 to %"class.v8::internal::Handle.976"*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #9
  %34 = getelementptr inbounds %"class.v8::internal::Handle.976", %"class.v8::internal::Handle.976"* %33, i64 %32, i32 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %20, align 8
  %37 = trunc i64 %32 to i32
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #9
  store i32 %37, i32* %23, align 16
  store i64 %36, i64* %25, align 8
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i64 0, i64 0), i64 10, %"class.v8::internal::StringStream::FmtElm"* nonnull %22, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #9
  call void @_ZNK2v88internal6Object10ShortPrintEPNS0_12StringStreamE(%"class.v8::internal::Object"* nonnull %26, %"class.v8::internal::StringStream"* %0) #9
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 1, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #9
  %38 = load i64, i64* %20, align 8
  %39 = and i64 %38, -4294967296
  %40 = add i64 %38, -1
  %41 = inttoptr i64 %40 to i32*
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = zext i32 %42 to i64
  %44 = or i64 %39, %43
  %45 = add i64 %44, 7
  %46 = inttoptr i64 %45 to i16*
  %47 = load atomic i16, i16* %46 monotonic, align 2
  %48 = icmp ugt i16 %47, 188
  %49 = load atomic i32, i32* %41 monotonic, align 4
  %50 = zext i32 %49 to i64
  %51 = or i64 %39, %50
  %52 = add i64 %51, 7
  %53 = inttoptr i64 %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  br i1 %48, label %55, label %115

55:                                               ; preds = %30
  %56 = icmp eq i16 %54, 1041
  br i1 %56, label %57, label %64

57:                                               ; preds = %55
  %58 = add i64 %38, 11
  %59 = inttoptr i64 %58 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i64
  %62 = or i64 %39, %61
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  store i64 %62, i64* %29, align 8
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.26, i64 0, i64 0), i64 23, %"class.v8::internal::StringStream::FmtElm"* nonnull %28, i64 1) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  %63 = load i64, i64* %20, align 8
  br label %64

64:                                               ; preds = %57, %55
  %65 = phi i64 [ %63, %57 ], [ %38, %55 ]
  call void @_ZN2v88internal12StringStream13PrintUsingMapENS0_8JSObjectE(%"class.v8::internal::StringStream"* %0, i64 %65)
  %66 = load i64, i64* %20, align 8
  %67 = and i64 %66, -4294967296
  %68 = add i64 %66, -1
  %69 = inttoptr i64 %68 to i32*
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = zext i32 %70 to i64
  %72 = or i64 %67, %71
  %73 = add i64 %72, 7
  %74 = inttoptr i64 %73 to i16*
  %75 = load atomic i16, i16* %74 monotonic, align 2
  %76 = icmp eq i16 %75, 1085
  br i1 %76, label %77, label %132

77:                                               ; preds = %64
  %78 = load atomic i32, i32* %69 monotonic, align 4
  %79 = zext i32 %78 to i64
  %80 = or i64 %67, %79
  %81 = add i64 %80, 10
  %82 = inttoptr i64 %81 to i8*
  %83 = load i8, i8* %82, align 1
  %84 = and i8 %83, -8
  %85 = icmp eq i8 %84, 8
  br i1 %85, label %86, label %132

86:                                               ; preds = %77
  %87 = add i64 %66, 7
  %88 = inttoptr i64 %87 to i32*
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i64
  %91 = or i64 %67, %90
  %92 = add i64 %91, 3
  %93 = inttoptr i64 %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = ashr i32 %94, 1
  %96 = add i64 %66, 11
  %97 = inttoptr i64 %96 to i32*
  %98 = load i32, i32* %97, align 4
  %99 = zext i32 %98 to i64
  %100 = and i64 %99, 1
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %105

102:                                              ; preds = %86
  %103 = ashr i32 %98, 1
  %104 = sitofp i32 %103 to double
  br label %110

105:                                              ; preds = %86
  %106 = or i64 %67, %99
  %107 = add i64 %106, 3
  %108 = inttoptr i64 %107 to double*
  %109 = load double, double* %108, align 1
  br label %110

110:                                              ; preds = %102, %105
  %111 = phi double [ %104, %102 ], [ %109, %105 ]
  %112 = fptoui double %111 to i32
  %113 = icmp ugt i32 %95, %112
  %114 = select i1 %113, i32 %112, i32 %95
  call void @_ZN2v88internal12StringStream15PrintFixedArrayENS0_10FixedArrayEj(%"class.v8::internal::StringStream"* %0, i64 %91, i32 %114)
  br label %132

115:                                              ; preds = %30
  %116 = icmp eq i16 %54, 132
  br i1 %116, label %117, label %118

117:                                              ; preds = %115
  call void @_ZN2v88internal12StringStream14PrintByteArrayENS0_9ByteArrayE(%"class.v8::internal::StringStream"* %0, i64 %38)
  br label %132

118:                                              ; preds = %115
  %119 = load atomic i32, i32* %41 monotonic, align 4
  %120 = zext i32 %119 to i64
  %121 = or i64 %39, %120
  %122 = add i64 %121, 7
  %123 = inttoptr i64 %122 to i16*
  %124 = load atomic i16, i16* %123 monotonic, align 2
  %125 = add i16 %124, -119
  %126 = icmp ult i16 %125, 13
  br i1 %126, label %127, label %132

127:                                              ; preds = %118
  %128 = add i64 %38, 3
  %129 = inttoptr i64 %128 to i32*
  %130 = load i32, i32* %129, align 4
  %131 = ashr i32 %130, 1
  call void @_ZN2v88internal12StringStream15PrintFixedArrayENS0_10FixedArrayEj(%"class.v8::internal::StringStream"* %0, i64 %38, i32 %131)
  br label %132

132:                                              ; preds = %77, %110, %117, %127, %118, %64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #9
  %133 = add nuw i64 %32, 1
  %134 = load i64, i64* %13, align 8
  %135 = load i64, i64* %15, align 8
  %136 = sub i64 %134, %135
  %137 = ashr exact i64 %136, 3
  %138 = icmp ult i64 %133, %137
  br i1 %138, label %30, label %139

139:                                              ; preds = %132, %9, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12StringStream27PrintSecurityTokenIfChangedENS0_10JSFunctionE(%"class.v8::internal::StringStream"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca [1 x %"class.v8::internal::StringStream::FmtElm"], align 8
  %4 = add i64 %1, 15
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = and i64 %1, -4294967296
  %8 = zext i32 %6 to i64
  %9 = or i64 %7, %8
  %10 = add i64 %9, -1
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %7, %13
  %15 = add i64 %14, 19
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %7, %18
  %20 = add i64 %19, 691
  %21 = inttoptr i64 %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = zext i32 %22 to i64
  %24 = or i64 %7, %23
  %25 = and i64 %1, -262144
  %26 = or i64 %25, 16
  %27 = inttoptr i64 %26 to i64*
  %28 = load i64, i64* %27, align 16
  %29 = add i64 %28, -41416
  %30 = inttoptr i64 %29 to %"class.v8::internal::Isolate"*
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %30, i64 0, i32 93, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = trunc i64 %32 to i32
  %34 = icmp eq i32 %22, %33
  br i1 %34, label %39, label %35

35:                                               ; preds = %2
  %36 = bitcast [1 x %"class.v8::internal::StringStream::FmtElm"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #9
  %37 = getelementptr inbounds [1 x %"class.v8::internal::StringStream::FmtElm"], [1 x %"class.v8::internal::StringStream::FmtElm"]* %3, i64 0, i64 0
  %38 = bitcast [1 x %"class.v8::internal::StringStream::FmtElm"]* %3 to i64*
  store i64 %24, i64* %38, align 8
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.27, i64 0, i64 0), i64 21, %"class.v8::internal::StringStream::FmtElm"* nonnull %37, i64 1) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #9
  store i64 %24, i64* %31, align 8
  br label %39

39:                                               ; preds = %2, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12StringStream13PrintFunctionENS0_10JSFunctionENS0_6ObjectEPNS0_4CodeE(%"class.v8::internal::StringStream"*, i64, i64, %"class.v8::internal::Code"* nocapture) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal12StringStream14PrintPrototypeENS0_10JSFunctionENS0_6ObjectE(%"class.v8::internal::StringStream"* %0, i64 %1, i64 %2)
  %5 = add i64 %1, 23
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i64 %1, -4294967296
  %9 = zext i32 %7 to i64
  %10 = or i64 %8, %9
  %11 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %10, i64* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12StringStream14PrintPrototypeENS0_10JSFunctionENS0_6ObjectE(%"class.v8::internal::StringStream"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca [1 x %"class.v8::internal::StringStream::FmtElm"], align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.v8::internal::Object", align 8
  %7 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %8 = alloca %"class.v8::internal::PrototypeIterator", align 8
  %9 = alloca %"class.v8::internal::JSObject", align 8
  %10 = alloca %"class.v8::internal::String", align 8
  %11 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %12 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %6, i64 0, i32 0, i32 0
  store i64 %2, i64* %12, align 8
  %13 = bitcast %"class.v8::internal::SharedFunctionInfo"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %14 = add i64 %1, 11
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i64 %1, -4294967296
  %18 = zext i32 %16 to i64
  %19 = or i64 %17, %18
  %20 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %19, i64* %20, align 8
  %21 = call i64 @_ZNK2v88internal18SharedFunctionInfo4NameEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %7)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  %22 = and i64 %1, -262144
  %23 = or i64 %22, 16
  %24 = inttoptr i64 %23 to i64*
  %25 = load i64, i64* %24, align 16
  %26 = add i64 %25, -41416
  %27 = inttoptr i64 %26 to %"class.v8::internal::Isolate"*
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %27, i64 0, i32 0, i32 7, i32 0, i64 6
  %29 = load i64, i64* %28, align 8
  %30 = trunc i64 %2 to i32
  %31 = trunc i64 %29 to i32
  %32 = icmp eq i32 %30, %31
  br i1 %32, label %199, label %33

33:                                               ; preds = %3
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %27, i64 0, i32 0, i32 7, i32 0, i64 4
  %35 = load i64, i64* %34, align 8
  %36 = trunc i64 %35 to i32
  %37 = icmp eq i32 %30, %36
  br i1 %37, label %199, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %27, i64 0, i32 0, i32 7, i32 0, i64 5
  %40 = load i64, i64* %39, align 8
  %41 = trunc i64 %40 to i32
  %42 = icmp eq i32 %30, %41
  br i1 %42, label %199, label %43

43:                                               ; preds = %38
  %44 = and i64 %2, 1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %57, label %46

46:                                               ; preds = %43
  %47 = and i64 %2, -4294967296
  %48 = add i64 %2, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = zext i32 %50 to i64
  %52 = or i64 %47, %51
  %53 = add i64 %52, 7
  %54 = inttoptr i64 %53 to i16*
  %55 = load atomic i16, i16* %54 monotonic, align 2
  %56 = icmp eq i16 %55, 188
  br i1 %56, label %199, label %57

57:                                               ; preds = %43, %46
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %27, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i64, i64* %58, align 8
  %60 = trunc i64 %59 to i32
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %199, label %62

62:                                               ; preds = %57
  br i1 %45, label %74, label %63

63:                                               ; preds = %62
  %64 = and i64 %2, -4294967296
  %65 = add i64 %2, -1
  %66 = inttoptr i64 %65 to i32*
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = zext i32 %67 to i64
  %69 = or i64 %64, %68
  %70 = add i64 %69, 7
  %71 = inttoptr i64 %70 to i16*
  %72 = load atomic i16, i16* %71 monotonic, align 2
  %73 = icmp ugt i16 %72, 188
  br i1 %73, label %82, label %74

74:                                               ; preds = %62, %63
  %75 = call i64 @_ZNK2v88internal6Object24GetPrototypeChainRootMapEPNS0_7IsolateE(%"class.v8::internal::Object"* nonnull %6, %"class.v8::internal::Isolate"* %27) #9
  %76 = and i64 %75, -4294967296
  %77 = add i64 %75, 15
  %78 = inttoptr i64 %77 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i64
  %81 = or i64 %76, %80
  store i64 %81, i64* %12, align 8
  br label %82

82:                                               ; preds = %74, %63
  %83 = phi i64 [ %81, %74 ], [ %2, %63 ]
  %84 = bitcast %"class.v8::internal::PrototypeIterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %84) #9
  %85 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %8, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %27, %"class.v8::internal::Isolate"** %85, align 8
  %86 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %8, i64 0, i32 1, i32 0, i32 0
  store i64 %83, i64* %86, align 8
  %87 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %8, i64 0, i32 2, i32 0, i32 0
  store i64* null, i64** %87, align 8
  %88 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %8, i64 0, i32 3
  store i32 0, i32* %88, align 8
  %89 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %8, i64 0, i32 4
  store i8 0, i8* %89, align 4
  %90 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %8, i64 0, i32 6
  store i32 0, i32* %90, align 8
  %91 = bitcast %"class.v8::internal::JSObject"* %9 to i8*
  %92 = getelementptr inbounds %"class.v8::internal::JSObject", %"class.v8::internal::JSObject"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = and i64 %83, -4294967296
  %94 = add i64 %83, -1
  %95 = inttoptr i64 %94 to i32*
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = zext i32 %96 to i64
  %98 = or i64 %93, %97
  %99 = add i64 %98, 7
  %100 = inttoptr i64 %99 to i16*
  %101 = load atomic i16, i16* %100 monotonic, align 2
  %102 = icmp eq i16 %101, 188
  br i1 %102, label %196, label %103

103:                                              ; preds = %82, %184
  %104 = phi i64 [ %185, %184 ], [ %83, %82 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #9
  store i64 %104, i64* %92, align 8
  %105 = call i64 @_ZN2v88internal8JSObject17SlowReverseLookupENS0_6ObjectE(%"class.v8::internal::JSObject"* nonnull %9, i64 %1) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #9
  %106 = load i64, i64* %34, align 8
  %107 = trunc i64 %105 to i32
  %108 = trunc i64 %106 to i32
  %109 = icmp eq i32 %107, %108
  br i1 %109, label %181, label %110

110:                                              ; preds = %103
  %111 = trunc i64 %105 to i32
  %112 = and i64 %21, 1
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %196, label %114

114:                                              ; preds = %110
  %115 = and i64 %21, -4294967296
  %116 = add i64 %21, -1
  %117 = inttoptr i64 %116 to i32*
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = zext i32 %118 to i64
  %120 = or i64 %115, %119
  %121 = add i64 %120, 7
  %122 = inttoptr i64 %121 to i16*
  %123 = load atomic i16, i16* %122 monotonic, align 2
  %124 = icmp ult i16 %123, 64
  %125 = bitcast %"class.v8::internal::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125) #9
  br i1 %124, label %126, label %165

126:                                              ; preds = %114
  %127 = and i64 %105, 1
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %163, label %129

129:                                              ; preds = %126
  %130 = and i64 %105, -4294967296
  %131 = add i64 %105, -1
  %132 = inttoptr i64 %131 to i32*
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = zext i32 %133 to i64
  %135 = or i64 %130, %134
  %136 = add i64 %135, 7
  %137 = inttoptr i64 %136 to i16*
  %138 = load atomic i16, i16* %137 monotonic, align 2
  %139 = icmp ult i16 %138, 64
  br i1 %139, label %140, label %163

140:                                              ; preds = %129
  %141 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %21, i64* %141, align 8
  %142 = trunc i64 %21 to i32
  %143 = icmp eq i32 %111, %142
  br i1 %143, label %144, label %145

144:                                              ; preds = %140
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #9
  br label %166

145:                                              ; preds = %140
  %146 = load atomic i32, i32* %117 monotonic, align 4
  %147 = zext i32 %146 to i64
  %148 = or i64 %115, %147
  %149 = add i64 %148, 7
  %150 = inttoptr i64 %149 to i16*
  %151 = load atomic i16, i16* %150 monotonic, align 2
  %152 = icmp ult i16 %151, 32
  br i1 %152, label %153, label %161

153:                                              ; preds = %145
  %154 = load atomic i32, i32* %132 monotonic, align 4
  %155 = zext i32 %154 to i64
  %156 = or i64 %130, %155
  %157 = add i64 %156, 7
  %158 = inttoptr i64 %157 to i16*
  %159 = load atomic i16, i16* %158 monotonic, align 2
  %160 = icmp ult i16 %159, 32
  br i1 %160, label %163, label %161

161:                                              ; preds = %145, %153
  %162 = call zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"* nonnull %10, i64 %105) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #9
  br i1 %162, label %166, label %164

163:                                              ; preds = %129, %126, %153
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #9
  br label %164

164:                                              ; preds = %163, %161
  br label %166

165:                                              ; preds = %114
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #9
  br label %166

166:                                              ; preds = %161, %144, %164, %165
  %167 = phi i8 [ 1, %165 ], [ 1, %164 ], [ 0, %144 ], [ 0, %161 ]
  %168 = load atomic i32, i32* %117 monotonic, align 4
  %169 = zext i32 %168 to i64
  %170 = or i64 %115, %169
  %171 = add i64 %170, 7
  %172 = inttoptr i64 %171 to i16*
  %173 = load atomic i16, i16* %172 monotonic, align 2
  %174 = icmp ult i16 %173, 64
  br i1 %174, label %175, label %196

175:                                              ; preds = %166
  %176 = add i64 %21, 7
  %177 = inttoptr i64 %176 to i32*
  %178 = load i32, i32* %177, align 4
  %179 = icmp eq i32 %178, 0
  %180 = select i1 %179, i8 0, i8 %167
  br label %196

181:                                              ; preds = %103
  call void @_ZN2v88internal17PrototypeIterator7AdvanceEv(%"class.v8::internal::PrototypeIterator"* nonnull %8)
  %182 = load i8, i8* %89, align 4
  %183 = icmp eq i8 %182, 0
  br i1 %183, label %184, label %196

184:                                              ; preds = %181
  %185 = load i64, i64* %86, align 8
  %186 = and i64 %185, -4294967296
  %187 = add i64 %185, -1
  %188 = inttoptr i64 %187 to i32*
  %189 = load atomic i32, i32* %188 monotonic, align 4
  %190 = zext i32 %189 to i64
  %191 = or i64 %186, %190
  %192 = add i64 %191, 7
  %193 = inttoptr i64 %192 to i16*
  %194 = load atomic i16, i16* %193 monotonic, align 2
  %195 = icmp eq i16 %194, 188
  br i1 %195, label %196, label %103

196:                                              ; preds = %184, %181, %82, %110, %175, %166
  %197 = phi i64 [ %105, %166 ], [ %105, %175 ], [ %105, %110 ], [ %21, %82 ], [ %21, %181 ], [ %21, %184 ]
  %198 = phi i8 [ %167, %166 ], [ %180, %175 ], [ 1, %110 ], [ 0, %82 ], [ 0, %181 ], [ 0, %184 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %84) #9
  br label %199

199:                                              ; preds = %3, %33, %38, %46, %57, %196
  %200 = phi i64 [ %21, %33 ], [ %21, %38 ], [ %21, %46 ], [ %21, %57 ], [ %197, %196 ], [ %21, %3 ]
  %201 = phi i8 [ 1, %33 ], [ 1, %38 ], [ 1, %46 ], [ 0, %57 ], [ %198, %196 ], [ 1, %3 ]
  %202 = and i64 %200, 1
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %223, label %204

204:                                              ; preds = %199
  %205 = and i64 %200, -4294967296
  %206 = add i64 %200, -1
  %207 = inttoptr i64 %206 to i32*
  %208 = load atomic i32, i32* %207 monotonic, align 4
  %209 = zext i32 %208 to i64
  %210 = or i64 %205, %209
  %211 = add i64 %210, 7
  %212 = inttoptr i64 %211 to i16*
  %213 = load atomic i16, i16* %212 monotonic, align 2
  %214 = icmp ult i16 %213, 64
  br i1 %214, label %215, label %223

215:                                              ; preds = %204
  %216 = add i64 %200, 7
  %217 = inttoptr i64 %216 to i32*
  %218 = load i32, i32* %217, align 4
  %219 = icmp sgt i32 %218, 0
  br i1 %219, label %220, label %222

220:                                              ; preds = %215
  %221 = call zeroext i1 @_ZN2v88internal12StringStream3PutENS0_6StringEii(%"class.v8::internal::StringStream"* %0, i64 %200, i32 0, i32 %218) #9
  br label %227

222:                                              ; preds = %215
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i64 0, i64 0), i64 15, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #9
  br label %227

223:                                              ; preds = %204, %199
  %224 = bitcast [1 x %"class.v8::internal::StringStream::FmtElm"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %224) #9
  %225 = getelementptr inbounds [1 x %"class.v8::internal::StringStream::FmtElm"], [1 x %"class.v8::internal::StringStream::FmtElm"]* %4, i64 0, i64 0
  %226 = bitcast [1 x %"class.v8::internal::StringStream::FmtElm"]* %4 to i64*
  store i64 %200, i64* %226, align 8
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0), i64 2, %"class.v8::internal::StringStream::FmtElm"* nonnull %225, i64 1) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %224) #9
  br label %227

227:                                              ; preds = %220, %222, %223
  %228 = and i8 %201, 1
  %229 = icmp eq i8 %228, 0
  br i1 %229, label %329, label %230

230:                                              ; preds = %227
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0), i64 5, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #9
  %231 = bitcast %"class.v8::internal::SharedFunctionInfo"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %231) #9
  %232 = load atomic i32, i32* %15 monotonic, align 4
  %233 = zext i32 %232 to i64
  %234 = or i64 %17, %233
  %235 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %234, i64* %235, align 8
  %236 = call i64 @_ZNK2v88internal18SharedFunctionInfo4NameEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %11)
  %237 = and i64 %236, 1
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %258, label %239

239:                                              ; preds = %230
  %240 = and i64 %236, -4294967296
  %241 = add i64 %236, -1
  %242 = inttoptr i64 %241 to i32*
  %243 = load atomic i32, i32* %242 monotonic, align 4
  %244 = zext i32 %243 to i64
  %245 = or i64 %240, %244
  %246 = add i64 %245, 7
  %247 = inttoptr i64 %246 to i16*
  %248 = load atomic i16, i16* %247 monotonic, align 2
  %249 = icmp ult i16 %248, 64
  br i1 %249, label %250, label %258

250:                                              ; preds = %239
  %251 = add i64 %236, 7
  %252 = inttoptr i64 %251 to i32*
  %253 = load i32, i32* %252, align 4
  %254 = icmp sgt i32 %253, 0
  br i1 %254, label %255, label %257

255:                                              ; preds = %250
  %256 = call zeroext i1 @_ZN2v88internal12StringStream3PutENS0_6StringEii(%"class.v8::internal::StringStream"* %0, i64 %236, i32 0, i32 %253) #9
  br label %262

257:                                              ; preds = %250
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i64 0, i64 0), i64 15, %"class.v8::internal::StringStream::FmtElm"* null, i64 0) #9
  br label %262

258:                                              ; preds = %239, %230
  %259 = bitcast [1 x %"class.v8::internal::StringStream::FmtElm"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %259) #9
  %260 = getelementptr inbounds [1 x %"class.v8::internal::StringStream::FmtElm"], [1 x %"class.v8::internal::StringStream::FmtElm"]* %4, i64 0, i64 0
  %261 = bitcast [1 x %"class.v8::internal::StringStream::FmtElm"]* %4 to i64*
  store i64 %236, i64* %261, align 8
  call void @_ZN2v88internal12StringStream3AddENS0_6VectorIKcEENS2_INS1_6FmtElmEEE(%"class.v8::internal::StringStream"* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0), i64 2, %"class.v8::internal::StringStream::FmtElm"* nonnull %260, i64 1) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %259) #9
  br label %262

262:                                              ; preds = %255, %257, %258
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %231) #9
  %263 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 2
  %264 = load i32, i32* %263, align 4
  %265 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 3
  %266 = load i32, i32* %265, align 8
  %267 = sub i32 %264, %266
  %268 = icmp eq i32 %267, 1
  br i1 %268, label %329, label %269

269:                                              ; preds = %262
  %270 = add i32 %264, -2
  %271 = icmp eq i32 %266, %270
  br i1 %271, label %275, label %272

272:                                              ; preds = %269
  %273 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 4
  %274 = load i8*, i8** %273, align 8
  br label %316

275:                                              ; preds = %269
  %276 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %276) #9
  store i32 %264, i32* %5, align 4
  %277 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 0
  %278 = load %"class.v8::internal::StringAllocator"*, %"class.v8::internal::StringAllocator"** %277, align 8
  %279 = bitcast %"class.v8::internal::StringAllocator"* %278 to i8* (%"class.v8::internal::StringAllocator"*, i32*)***
  %280 = load i8* (%"class.v8::internal::StringAllocator"*, i32*)**, i8* (%"class.v8::internal::StringAllocator"*, i32*)*** %279, align 8
  %281 = getelementptr inbounds i8* (%"class.v8::internal::StringAllocator"*, i32*)*, i8* (%"class.v8::internal::StringAllocator"*, i32*)** %280, i64 3
  %282 = load i8* (%"class.v8::internal::StringAllocator"*, i32*)*, i8* (%"class.v8::internal::StringAllocator"*, i32*)** %281, align 8
  %283 = call i8* %282(%"class.v8::internal::StringAllocator"* %278, i32* nonnull %5) #9
  %284 = load i32, i32* %5, align 4
  %285 = load i32, i32* %263, align 4
  %286 = icmp ugt i32 %284, %285
  br i1 %286, label %287, label %290

287:                                              ; preds = %275
  store i32 %284, i32* %263, align 4
  %288 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 4
  store i8* %283, i8** %288, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %276) #9
  %289 = load i32, i32* %265, align 8
  br label %316

290:                                              ; preds = %275
  %291 = add i32 %285, -1
  store i32 %291, i32* %265, align 8
  %292 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 4
  %293 = load i8*, i8** %292, align 8
  %294 = add i32 %285, -5
  %295 = zext i32 %294 to i64
  %296 = getelementptr inbounds i8, i8* %293, i64 %295
  store i8 46, i8* %296, align 1
  %297 = load i8*, i8** %292, align 8
  %298 = load i32, i32* %265, align 8
  %299 = add i32 %298, -3
  %300 = zext i32 %299 to i64
  %301 = getelementptr inbounds i8, i8* %297, i64 %300
  store i8 46, i8* %301, align 1
  %302 = load i8*, i8** %292, align 8
  %303 = load i32, i32* %265, align 8
  %304 = add i32 %303, -2
  %305 = zext i32 %304 to i64
  %306 = getelementptr inbounds i8, i8* %302, i64 %305
  store i8 46, i8* %306, align 1
  %307 = load i8*, i8** %292, align 8
  %308 = load i32, i32* %265, align 8
  %309 = add i32 %308, -1
  %310 = zext i32 %309 to i64
  %311 = getelementptr inbounds i8, i8* %307, i64 %310
  store i8 10, i8* %311, align 1
  %312 = load i8*, i8** %292, align 8
  %313 = load i32, i32* %265, align 8
  %314 = zext i32 %313 to i64
  %315 = getelementptr inbounds i8, i8* %312, i64 %314
  store i8 0, i8* %315, align 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %276) #9
  br label %329

316:                                              ; preds = %287, %272
  %317 = phi i32 [ %266, %272 ], [ %289, %287 ]
  %318 = phi i8* [ %274, %272 ], [ %283, %287 ]
  %319 = getelementptr inbounds %"class.v8::internal::StringStream", %"class.v8::internal::StringStream"* %0, i64 0, i32 4
  %320 = zext i32 %317 to i64
  %321 = getelementptr inbounds i8, i8* %318, i64 %320
  store i8 41, i8* %321, align 1
  %322 = load i8*, i8** %319, align 8
  %323 = load i32, i32* %265, align 8
  %324 = add i32 %323, 1
  %325 = zext i32 %324 to i64
  %326 = getelementptr inbounds i8, i8* %322, i64 %325
  store i8 0, i8* %326, align 1
  %327 = load i32, i32* %265, align 8
  %328 = add i32 %327, 1
  store i32 %328, i32* %265, align 8
  br label %329

329:                                              ; preds = %316, %290, %262, %227
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK2v88internal18SharedFunctionInfo4NameEv(%"class.v8::internal::SharedFunctionInfo"*) local_unnamed_addr #6 comdat align 2 {
  %2 = alloca %"class.v8::internal::ScopeInfo", align 8
  %3 = alloca %"class.v8::internal::ScopeInfo", align 8
  %4 = alloca %"class.v8::internal::ScopeInfo", align 8
  %5 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -4294967296
  %8 = add i64 %6, 7
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 acquire, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = and i64 %11, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %29, label %15

15:                                               ; preds = %1
  %16 = add i64 %12, -1
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %7, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  %24 = icmp eq i16 %23, 178
  br i1 %24, label %25, label %29

25:                                               ; preds = %15
  %26 = bitcast %"class.v8::internal::ScopeInfo"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #9
  %27 = getelementptr inbounds %"class.v8::internal::ScopeInfo", %"class.v8::internal::ScopeInfo"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %12, i64* %27, align 8
  %28 = call zeroext i1 @_ZNK2v88internal9ScopeInfo21HasSharedFunctionNameEv(%"class.v8::internal::ScopeInfo"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #9
  br i1 %28, label %53, label %31

29:                                               ; preds = %1, %15
  %30 = icmp eq i32 %10, 0
  br i1 %30, label %31, label %53

31:                                               ; preds = %29, %25
  %32 = load i64, i64* %5, align 8
  %33 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %34 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %33, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %33, i64 0, i32 0, i32 1
  %37 = load i8, i8* %36, align 8, !range !3
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %33, i64 0, i32 1, i64 0
  br label %49

41:                                               ; preds = %35, %31
  %42 = and i64 %32, -262144
  %43 = or i64 %42, 16
  %44 = inttoptr i64 %43 to i64*
  %45 = load i64, i64* %44, align 16
  %46 = add i64 %45, -41416
  %47 = inttoptr i64 %46 to %"class.v8::internal::Isolate"*
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %47, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %49

49:                                               ; preds = %39, %41
  %50 = phi i64* [ %48, %41 ], [ %40, %39 ]
  %51 = getelementptr inbounds i64, i64* %50, i64 9
  %52 = load i64, i64* %51, align 8
  br label %103

53:                                               ; preds = %29, %25
  %54 = load i64, i64* %5, align 8
  %55 = and i64 %54, -4294967296
  %56 = add i64 %54, 7
  %57 = inttoptr i64 %56 to i32*
  %58 = load atomic i32, i32* %57 acquire, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %55, %59
  %61 = and i64 %59, 1
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %103, label %63

63:                                               ; preds = %53
  %64 = add i64 %60, -1
  %65 = inttoptr i64 %64 to i32*
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = zext i32 %66 to i64
  %68 = or i64 %55, %67
  %69 = add i64 %68, 7
  %70 = inttoptr i64 %69 to i16*
  %71 = load atomic i16, i16* %70 monotonic, align 2
  %72 = icmp eq i16 %71, 178
  br i1 %72, label %73, label %103

73:                                               ; preds = %63
  %74 = bitcast %"class.v8::internal::ScopeInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #9
  %75 = getelementptr inbounds %"class.v8::internal::ScopeInfo", %"class.v8::internal::ScopeInfo"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %60, i64* %75, align 8
  %76 = call zeroext i1 @_ZNK2v88internal9ScopeInfo15HasFunctionNameEv(%"class.v8::internal::ScopeInfo"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #9
  br i1 %76, label %77, label %81

77:                                               ; preds = %73
  %78 = bitcast %"class.v8::internal::ScopeInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #9
  %79 = getelementptr inbounds %"class.v8::internal::ScopeInfo", %"class.v8::internal::ScopeInfo"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %60, i64* %79, align 8
  %80 = call i64 @_ZNK2v88internal9ScopeInfo12FunctionNameEv(%"class.v8::internal::ScopeInfo"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #9
  br label %103

81:                                               ; preds = %73
  %82 = load i64, i64* %5, align 8
  %83 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %84 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %83, null
  br i1 %84, label %91, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %83, i64 0, i32 0, i32 1
  %87 = load i8, i8* %86, align 8, !range !3
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %91, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %83, i64 0, i32 1, i64 0
  br label %99

91:                                               ; preds = %85, %81
  %92 = and i64 %82, -262144
  %93 = or i64 %92, 16
  %94 = inttoptr i64 %93 to i64*
  %95 = load i64, i64* %94, align 16
  %96 = add i64 %95, -41416
  %97 = inttoptr i64 %96 to %"class.v8::internal::Isolate"*
  %98 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %99

99:                                               ; preds = %89, %91
  %100 = phi i64* [ %98, %91 ], [ %90, %89 ]
  %101 = getelementptr inbounds i64, i64* %100, i64 9
  %102 = load i64, i64* %101, align 8
  br label %103

103:                                              ; preds = %53, %77, %99, %63, %49
  %104 = phi i64 [ %52, %49 ], [ %80, %77 ], [ %102, %99 ], [ %60, %63 ], [ %60, %53 ]
  ret i64 %104
}

declare i64 @_ZNK2v88internal6Object24GetPrototypeChainRootMapEPNS0_7IsolateE(%"class.v8::internal::Object"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #4

declare i64 @_ZN2v88internal8JSObject17SlowReverseLookupENS0_6ObjectE(%"class.v8::internal::JSObject"*, i64) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal17PrototypeIterator7AdvanceEv(%"class.v8::internal::PrototypeIterator"*) local_unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.v8::internal::Handle.976", %"class.v8::internal::Handle.976"* %2, i64 0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %6, label %28

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %47, label %11

11:                                               ; preds = %6
  %12 = and i64 %8, -4294967296
  %13 = add i64 %8, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %12, %16
  %18 = add i64 %17, 7
  %19 = inttoptr i64 %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = icmp eq i16 %20, 188
  br i1 %21, label %22, label %47

22:                                               ; preds = %11
  %23 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 4
  store i8 1, i8* %23, align 4
  %24 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 0
  %25 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %25, i64 0, i32 0, i32 7, i32 0, i64 6
  %27 = load i64, i64* %26, align 8
  store i64 %27, i64* %7, align 8
  br label %104

28:                                               ; preds = %1
  %29 = load i64, i64* %4, align 8
  %30 = and i64 %29, -4294967296
  %31 = add i64 %29, -1
  %32 = inttoptr i64 %31 to i32*
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %30, %34
  %36 = add i64 %35, 7
  %37 = inttoptr i64 %36 to i16*
  %38 = load atomic i16, i16* %37 monotonic, align 2
  %39 = icmp eq i16 %38, 188
  br i1 %39, label %40, label %47

40:                                               ; preds = %28
  %41 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 4
  store i8 1, i8* %41, align 4
  %42 = bitcast %"class.v8::internal::PrototypeIterator"* %0 to %"class.v8::internal::Factory"**
  %43 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %43, i64 176
  %45 = ptrtoint %"class.v8::internal::Factory"* %44 to i64
  %46 = bitcast %"class.v8::internal::Handle.976"* %2 to i64*
  store i64 %45, i64* %46, align 8
  br label %104

47:                                               ; preds = %6, %11, %28
  %48 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 2, i32 0, i32 0
  %49 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 1, i32 0, i32 0
  %50 = select i1 %5, i64* %49, i64* %4
  %51 = load i64, i64* %50, align 8
  %52 = and i64 %51, -4294967296
  %53 = add i64 %51, -1
  %54 = inttoptr i64 %53 to i32*
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = zext i32 %55 to i64
  %57 = or i64 %52, %56
  %58 = add i64 %57, 15
  %59 = inttoptr i64 %58 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i64
  %62 = or i64 %52, %61
  %63 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 0
  %64 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %64, i64 0, i32 0, i32 7, i32 0, i64 6
  %66 = load i64, i64* %65, align 8
  %67 = trunc i64 %66 to i32
  %68 = icmp eq i32 %60, %67
  br i1 %68, label %79, label %69

69:                                               ; preds = %47
  %70 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 3
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %73, label %79

73:                                               ; preds = %69
  %74 = add i64 %57, 7
  %75 = inttoptr i64 %74 to i16*
  %76 = load atomic i16, i16* %75 monotonic, align 2
  %77 = icmp ne i16 %76, 190
  %78 = zext i1 %77 to i8
  br label %79

79:                                               ; preds = %73, %69, %47
  %80 = phi i8 [ 1, %47 ], [ 0, %69 ], [ %78, %73 ]
  %81 = getelementptr inbounds %"class.v8::internal::PrototypeIterator", %"class.v8::internal::PrototypeIterator"* %0, i64 0, i32 4
  store i8 %80, i8* %81, align 4
  br i1 %5, label %82, label %83

82:                                               ; preds = %79
  store i64 %62, i64* %49, align 8
  br label %104

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %64, i64 0, i32 31, i32 4
  %85 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %84, align 8
  %86 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %83
  %88 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %85, i64 %62) #9
  br label %102

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %64, i64 0, i32 31, i32 0
  %91 = load i64*, i64** %90, align 8
  %92 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %64, i64 0, i32 31, i32 1
  %93 = load i64*, i64** %92, align 8
  %94 = icmp eq i64* %91, %93
  br i1 %94, label %95, label %97

95:                                               ; preds = %89
  %96 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %64) #9
  br label %97

97:                                               ; preds = %95, %89
  %98 = phi i64* [ %96, %95 ], [ %91, %89 ]
  %99 = ptrtoint i64* %98 to i64
  %100 = add i64 %99, 8
  %101 = inttoptr i64 %100 to i64*
  store i64* %101, i64** %90, align 8
  store i64 %62, i64* %98, align 8
  br label %102

102:                                              ; preds = %97, %87
  %103 = phi i64* [ %88, %87 ], [ %98, %97 ]
  store i64* %103, i64** %48, align 8
  br label %104

104:                                              ; preds = %102, %82, %40, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN2v88internal19HeapStringAllocator4growEPj(%"class.v8::internal::HeapStringAllocator"* nocapture, i32* nocapture) unnamed_addr #0 align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = shl i32 %3, 1
  %5 = icmp ugt i32 %4, %3
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::HeapStringAllocator", %"class.v8::internal::HeapStringAllocator"* %0, i64 0, i32 1
  %8 = load i8*, i8** %7, align 8
  br label %62

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %10, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #13
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %24

13:                                               ; preds = %9
  %14 = tail call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #9
  %15 = bitcast %"class.v8::Platform"* %14 to void (%"class.v8::Platform"*)***
  %16 = load void (%"class.v8::Platform"*)**, void (%"class.v8::Platform"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %16, i64 3
  %18 = load void (%"class.v8::Platform"*)*, void (%"class.v8::Platform"*)** %17, align 8
  tail call void %18(%"class.v8::Platform"* %14) #9
  %19 = tail call noalias i8* @_ZnamRKSt9nothrow_t(i64 %10, %"struct.std::nothrow_t"* dereferenceable(1) @_ZSt7nothrow) #13
  %20 = icmp eq i8* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %13
  %22 = load i32, i32* %1, align 4
  br label %24

23:                                               ; preds = %13
  tail call void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37, i64 0, i64 0)) #14
  unreachable

24:                                               ; preds = %21, %9
  %25 = phi i32 [ %22, %21 ], [ %3, %9 ]
  %26 = phi i8* [ %19, %21 ], [ %11, %9 ]
  %27 = getelementptr inbounds %"class.v8::internal::HeapStringAllocator", %"class.v8::internal::HeapStringAllocator"* %0, i64 0, i32 1
  %28 = load i8*, i8** %27, align 8
  switch i32 %25, label %55 [
    i32 1, label %29
    i32 2, label %31
    i32 3, label %35
    i32 4, label %36
    i32 5, label %40
    i32 6, label %41
    i32 7, label %42
    i32 8, label %43
    i32 9, label %47
    i32 10, label %48
    i32 11, label %49
    i32 12, label %50
    i32 13, label %51
    i32 14, label %52
    i32 15, label %53
    i32 16, label %54
  ]

29:                                               ; preds = %24
  %30 = load i8, i8* %28, align 1
  store i8 %30, i8* %26, align 1
  br label %57

31:                                               ; preds = %24
  %32 = bitcast i8* %28 to i16*
  %33 = bitcast i8* %26 to i16*
  %34 = load i16, i16* %32, align 1
  store i16 %34, i16* %33, align 1
  br label %57

35:                                               ; preds = %24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 %28, i64 3, i1 false) #9
  br label %57

36:                                               ; preds = %24
  %37 = bitcast i8* %28 to i32*
  %38 = bitcast i8* %26 to i32*
  %39 = load i32, i32* %37, align 1
  store i32 %39, i32* %38, align 1
  br label %57

40:                                               ; preds = %24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 %28, i64 5, i1 false) #9
  br label %57

41:                                               ; preds = %24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 %28, i64 6, i1 false) #9
  br label %57

42:                                               ; preds = %24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 %28, i64 7, i1 false) #9
  br label %57

43:                                               ; preds = %24
  %44 = bitcast i8* %28 to i64*
  %45 = bitcast i8* %26 to i64*
  %46 = load i64, i64* %44, align 1
  store i64 %46, i64* %45, align 1
  br label %57

47:                                               ; preds = %24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 %28, i64 9, i1 false) #9
  br label %57

48:                                               ; preds = %24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 %28, i64 10, i1 false) #9
  br label %57

49:                                               ; preds = %24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 %28, i64 11, i1 false) #9
  br label %57

50:                                               ; preds = %24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 %28, i64 12, i1 false) #9
  br label %57

51:                                               ; preds = %24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 %28, i64 13, i1 false) #9
  br label %57

52:                                               ; preds = %24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 %28, i64 14, i1 false) #9
  br label %57

53:                                               ; preds = %24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 %28, i64 15, i1 false) #9
  br label %57

54:                                               ; preds = %24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 %28, i64 16, i1 false) #9
  br label %57

55:                                               ; preds = %24
  %56 = zext i32 %25 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 %28, i64 %56, i1 false) #9
  br label %57

57:                                               ; preds = %29, %31, %35, %36, %40, %41, %42, %43, %47, %48, %49, %50, %51, %52, %53, %54, %55
  store i32 %4, i32* %1, align 4
  %58 = load i8*, i8** %27, align 8
  %59 = icmp eq i8* %58, null
  br i1 %59, label %61, label %60

60:                                               ; preds = %57
  tail call void @_ZdaPv(i8* nonnull %58) #13
  br label %61

61:                                               ; preds = %57, %60
  store i8* %26, i8** %27, align 8
  br label %62

62:                                               ; preds = %61, %6
  %63 = phi i8* [ %8, %6 ], [ %26, %61 ]
  ret i8* %63
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal19HeapStringAllocatorD2Ev(%"class.v8::internal::HeapStringAllocator"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::HeapStringAllocator", %"class.v8::internal::HeapStringAllocator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal19HeapStringAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::HeapStringAllocator", %"class.v8::internal::HeapStringAllocator"* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %4) #13
  br label %7

7:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal19HeapStringAllocatorD0Ev(%"class.v8::internal::HeapStringAllocator"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::HeapStringAllocator", %"class.v8::internal::HeapStringAllocator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal19HeapStringAllocatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::HeapStringAllocator", %"class.v8::internal::HeapStringAllocator"* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %4) #13
  br label %7

7:                                                ; preds = %1, %6
  %8 = bitcast %"class.v8::internal::HeapStringAllocator"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15StringAllocatorD2Ev(%"class.v8::internal::StringAllocator"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal20FixedStringAllocatorD0Ev(%"class.v8::internal::FixedStringAllocator"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::FixedStringAllocator"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #8

; Function Attrs: nounwind
declare void @llvm.assume(i1) #9

declare i8* @_ZN2v84base6Thread14GetThreadLocalEi(i32) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %"class.v8::internal::LocalHeap"* @_ZN2v88internal9LocalHeap7CurrentEv() local_unnamed_addr #4

declare void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"*) local_unnamed_addr #4

declare void @_ZN2v84base11SharedMutex10LockSharedEv(%"class.v8::base::SharedMutex"*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal6String9VisitFlatINS0_21StringCharacterStreamEEENS0_10ConsStringEPT_S1_iRKNS0_31SharedStringAccessGuardIfNeededE(%"class.v8::internal::StringCharacterStream"*, i64, i32, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16)) local_unnamed_addr #6 comdat align 2 {
  %5 = add i64 %1, 7
  %6 = inttoptr i64 %5 to i32*
  %7 = load i32, i32* %6, align 4
  br label %8

8:                                                ; preds = %137, %4
  %9 = phi i64 [ %1, %4 ], [ %143, %137 ]
  %10 = phi i32 [ %2, %4 ], [ %138, %137 ]
  %11 = and i64 %9, -4294967296
  %12 = add i64 %9, -1
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %11, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = and i16 %19, 15
  %21 = zext i16 %20 to i32
  switch i32 %21, label %136 [
    i32 8, label %22
    i32 0, label %33
    i32 10, label %46
    i32 2, label %87
    i32 11, label %130
    i32 3, label %130
    i32 9, label %144
    i32 1, label %144
    i32 13, label %137
    i32 5, label %137
  ]

22:                                               ; preds = %8
  %23 = add i64 %9, 11
  %24 = inttoptr i64 %23 to i8*
  %25 = sext i32 %10 to i64
  %26 = getelementptr inbounds i8, i8* %24, i64 %25
  %27 = sub nsw i32 %7, %2
  %28 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 1
  store i8 1, i8* %28, align 8
  %29 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 2, i32 0
  store i8* %26, i8** %29, align 8
  %30 = sext i32 %27 to i64
  %31 = getelementptr inbounds i8, i8* %26, i64 %30
  %32 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 3
  store i8* %31, i8** %32, align 8
  br label %144

33:                                               ; preds = %8
  %34 = add i64 %9, 11
  %35 = inttoptr i64 %34 to i16*
  %36 = sext i32 %10 to i64
  %37 = getelementptr inbounds i16, i16* %35, i64 %36
  %38 = sub nsw i32 %7, %2
  %39 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 1
  store i8 0, i8* %39, align 8
  %40 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 2
  %41 = bitcast %union.anon.1143* %40 to i16**
  store i16* %37, i16** %41, align 8
  %42 = sext i32 %38 to i64
  %43 = getelementptr inbounds i16, i16* %37, i64 %42
  %44 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 3
  %45 = bitcast i8** %44 to i16**
  store i16* %43, i16** %45, align 8
  br label %144

46:                                               ; preds = %8
  %47 = inttoptr i64 %12 to i32*
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %11, %49
  %51 = add i64 %50, 7
  %52 = inttoptr i64 %51 to i16*
  %53 = load atomic i16, i16* %52 monotonic, align 2
  %54 = and i16 %53, 16
  %55 = icmp eq i16 %54, 0
  %56 = add i64 %9, 11
  %57 = inttoptr i64 %56 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %55, label %70, label %58

58:                                               ; preds = %46
  %59 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %57, align 1
  %60 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %59, i64 0, i32 0
  %61 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %59 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %62 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %61, align 8
  %63 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %62, i64 2
  %64 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %63, align 8
  %65 = tail call zeroext i1 %64(%"class.v8::String::ExternalStringResourceBase"* %60) #9
  br i1 %65, label %66, label %70

66:                                               ; preds = %58
  %67 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %57, align 1
  tail call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %67) #9
  %68 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %67, i64 0, i32 1
  %69 = load i8*, i8** %68, align 8
  br label %77

70:                                               ; preds = %46, %58
  %71 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %57, align 1
  %72 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %71 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %73 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %72, align 8
  %74 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %73, i64 6
  %75 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %74, align 8
  %76 = tail call i8* %75(%"class.v8::String::ExternalOneByteStringResource"* %71) #9
  br label %77

77:                                               ; preds = %66, %70
  %78 = phi i8* [ %69, %66 ], [ %76, %70 ]
  %79 = sext i32 %10 to i64
  %80 = getelementptr inbounds i8, i8* %78, i64 %79
  %81 = sub nsw i32 %7, %2
  %82 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 1
  store i8 1, i8* %82, align 8
  %83 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 2, i32 0
  store i8* %80, i8** %83, align 8
  %84 = sext i32 %81 to i64
  %85 = getelementptr inbounds i8, i8* %80, i64 %84
  %86 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 3
  store i8* %85, i8** %86, align 8
  br label %144

87:                                               ; preds = %8
  %88 = inttoptr i64 %12 to i32*
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = zext i32 %89 to i64
  %91 = or i64 %11, %90
  %92 = add i64 %91, 7
  %93 = inttoptr i64 %92 to i16*
  %94 = load atomic i16, i16* %93 monotonic, align 2
  %95 = and i16 %94, 16
  %96 = icmp eq i16 %95, 0
  %97 = add i64 %9, 11
  %98 = inttoptr i64 %97 to %"class.v8::String::ExternalStringResource"**
  br i1 %96, label %111, label %99

99:                                               ; preds = %87
  %100 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %98, align 1
  %101 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %100, i64 0, i32 0
  %102 = bitcast %"class.v8::String::ExternalStringResource"* %100 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %103 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %102, align 8
  %104 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %103, i64 2
  %105 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %104, align 8
  %106 = tail call zeroext i1 %105(%"class.v8::String::ExternalStringResourceBase"* %101) #9
  br i1 %106, label %107, label %111

107:                                              ; preds = %99
  %108 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %98, align 1
  tail call void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"* %108) #9
  %109 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %108, i64 0, i32 1
  %110 = load i16*, i16** %109, align 8
  br label %118

111:                                              ; preds = %87, %99
  %112 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %98, align 1
  %113 = bitcast %"class.v8::String::ExternalStringResource"* %112 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %114 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %113, align 8
  %115 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %114, i64 6
  %116 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %115, align 8
  %117 = tail call i16* %116(%"class.v8::String::ExternalStringResource"* %112) #9
  br label %118

118:                                              ; preds = %107, %111
  %119 = phi i16* [ %110, %107 ], [ %117, %111 ]
  %120 = sext i32 %10 to i64
  %121 = getelementptr inbounds i16, i16* %119, i64 %120
  %122 = sub nsw i32 %7, %2
  %123 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 1
  store i8 0, i8* %123, align 8
  %124 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 2
  %125 = bitcast %union.anon.1143* %124 to i16**
  store i16* %121, i16** %125, align 8
  %126 = sext i32 %122 to i64
  %127 = getelementptr inbounds i16, i16* %121, i64 %126
  %128 = getelementptr inbounds %"class.v8::internal::StringCharacterStream", %"class.v8::internal::StringCharacterStream"* %0, i64 0, i32 3
  %129 = bitcast i8** %128 to i16**
  store i16* %127, i16** %129, align 8
  br label %144

130:                                              ; preds = %8, %8
  %131 = add i64 %9, 15
  %132 = inttoptr i64 %131 to i32*
  %133 = load i32, i32* %132, align 4
  %134 = ashr i32 %133, 1
  %135 = add nsw i32 %134, %10
  br label %137

136:                                              ; preds = %8
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)) #14
  unreachable

137:                                              ; preds = %8, %8, %130
  %138 = phi i32 [ %135, %130 ], [ %10, %8 ], [ %10, %8 ]
  %139 = add i64 %9, 11
  %140 = inttoptr i64 %139 to i32*
  %141 = load i32, i32* %140, align 4
  %142 = zext i32 %141 to i64
  %143 = or i64 %11, %142
  br label %8

144:                                              ; preds = %8, %8, %118, %77, %33, %22
  %145 = phi i64 [ 0, %22 ], [ 0, %33 ], [ 0, %77 ], [ 0, %118 ], [ %9, %8 ], [ %9, %8 ]
  ret i64 %145
}

declare void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"*) local_unnamed_addr #4

declare void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"*) local_unnamed_addr #4

declare void @_ZN2v88internal18ConsStringIterator10InitializeENS0_10ConsStringEi(%"class.v8::internal::ConsStringIterator"*, i64, i32) local_unnamed_addr #4

declare i64 @_ZN2v88internal18ConsStringIterator8ContinueEPi(%"class.v8::internal::ConsStringIterator"*, i32*) local_unnamed_addr #4

declare void @_ZN2v88internal6PrintFEPKcz(i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK2v88internal14Representation8MnemonicEv(%"class.v8::internal::Representation"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 1
  %4 = icmp ult i8 %3, 6
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)) #14
  unreachable

6:                                                ; preds = %1
  %7 = sext i8 %3 to i64
  %8 = getelementptr inbounds [6 x i8*], [6 x i8*]* @switch.table._ZNK2v88internal14Representation8MnemonicEv, i64 0, i64 %7
  %9 = load i8*, i8** %8, align 8
  ret i8* %9
}

declare zeroext i1 @_ZNK2v88internal9ScopeInfo15HasFunctionNameEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #4

declare i64 @_ZNK2v88internal9ScopeInfo12FunctionNameEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v88internal9ScopeInfo21HasSharedFunctionNameEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK2v88internal6String10SlowEqualsES1_(%"class.v8::internal::String"*, i64) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #10

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #4

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnamRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #11

declare %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZN2v88internal23FatalProcessOutOfMemoryEPNS0_7IsolateEPKc(%"class.v8::internal::Isolate"*, i8*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }
attributes #15 = { nounwind readonly }
attributes #16 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
