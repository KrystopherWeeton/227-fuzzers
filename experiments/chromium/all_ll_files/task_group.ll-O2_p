; ModuleID = '../../chrome/browser/task_manager/sampling/task_group.cc'
source_filename = "../../chrome/browser/task_manager/sampling/task_group.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"struct.base::TaskTraitsExtensionStorage" = type { i8, %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [8 x i8] }
%"class.task_manager::TaskGroup" = type { i32, i32, i8, %"class.base::RepeatingCallback", %class.scoped_refptr.1, %class.scoped_refptr.10, %"class.std::__1::vector", i64, i64, double, %"class.base::Time", %"class.base::TimeDelta", i64, i64, i64, i64, i64, i32, i32, i32, i8, i8, %"class.base::WeakPtrFactory" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.1 = type { %"class.task_manager::TaskGroupSampler"* }
%"class.task_manager::TaskGroupSampler" = type <{ %"class.base::RefCountedThreadSafe.2", %"class.base::Process", %"class.std::__1::unique_ptr", i8, [7 x i8], %class.scoped_refptr.4, %"class.base::RepeatingCallback.6", %"class.base::RepeatingCallback.7", %"class.base::RepeatingCallback.8", %"class.base::RepeatingCallback.8", %"class.base::RepeatingCallback.9", %"class.base::SequenceCheckerDoNothing", [7 x i8] }>
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::Process" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::ProcessMetrics"* }
%"class.base::ProcessMetrics" = type { i32, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", i64, %"class.base::TimeTicks", i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr.4 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.5" }>
%"class.base::RefCountedThreadSafe.5" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.6" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.7" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.8" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.9" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%class.scoped_refptr.10 = type { %"class.task_manager::SharedSampler"* }
%"class.task_manager::SharedSampler" = type { %"class.base::RefCountedThreadSafe.11" }
%"class.base::RefCountedThreadSafe.11" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.task_manager::Task"**, %"class.task_manager::Task"**, %"class.std::__1::__compressed_pair.16" }
%"class.task_manager::Task" = type { i32 (...)**, i64, i64, i64, i64, i64, i64, i64, %"class.std::__1::basic_string", %"class.gfx::ImageSkia", i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.gfx::ImageSkia" = type { %class.scoped_refptr.15 }
%class.scoped_refptr.15 = type { %"class.gfx::internal::ImageSkiaStorage"* }
%"class.gfx::internal::ImageSkiaStorage" = type opaque
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.task_manager::Task"** }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.21" }
%"class.base::time_internal::TimeBase.21" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.22 }
%class.scoped_refptr.22 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.23", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.23" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.24" }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i8 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.29 }
%class.scoped_refptr.29 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::RepeatingCallback.30" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.31 }
%union.anon.31 = type { %"struct.task_manager::SharedSampler::SamplingResult" }
%"struct.task_manager::SharedSampler::SamplingResult" = type { %"class.base::TimeDelta", i64, i32, %"class.base::Time" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.gpu::VideoMemoryUsageStats" = type { %"class.std::__1::map", i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { i64 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, [4 x i8], %"struct.gpu::VideoMemoryUsageStats::ProcessStats" }
%"struct.gpu::VideoMemoryUsageStats::ProcessStats" = type <{ i64, i8, [7 x i8] }>
%"class.base::OnceCallback.119" = type { %"class.base::internal::CallbackBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.42" = type { %"class.base::internal::CallbackBase" }
%"class.nacl::NaClBrowser" = type { %"class.base::File", %"class.base::FilePath", i32, %"class.nacl::NaClValidationCache", %"class.nacl::NaClValidationCache", %"class.base::FilePath", i8, i8, i32, %"class.base::RepeatingCallback.8", %"class.std::__1::map.75", %"class.base::HashingMRUCache.84", i8, %"class.std::__1::vector.117", %"class.base::circular_deque", %class.scoped_refptr.4 }
%"class.base::File" = type <{ %"class.base::ScopedGeneric", %"class.base::FilePath", %"class.base::FileTracing::ScopedEnabler", [3 x i8], i32, i8, i8, [6 x i8] }>
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::FileTracing::ScopedEnabler" = type { i8 }
%"class.nacl::NaClValidationCache" = type { %"class.base::HashingMRUCache", %"class.std::__1::basic_string.43" }
%"class.base::HashingMRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::unordered_map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.52" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.56", %"class.std::__1::__compressed_pair.64", %"class.std::__1::__compressed_pair.69", %"class.std::__1::__compressed_pair.71", [4 x i8] }>
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58", %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { float }
%"class.std::__1::basic_string.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.46 }
%union.anon.46 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string.43" }
%"class.std::__1::map.75" = type { %"class.std::__1::__tree.76" }
%"class.std::__1::__tree.76" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.77", %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.base::HashingMRUCache.84" = type { %"class.base::MRUCacheBase.85" }
%"class.base::MRUCacheBase.85" = type { i32 (...)**, %"class.std::__1::list.86", %"class.std::__1::unordered_map.93", i64 }
%"class.std::__1::list.86" = type { %"class.std::__1::__list_imp.87" }
%"class.std::__1::__list_imp.87" = type { %"struct.std::__1::__list_node_base.88", %"class.std::__1::__compressed_pair.89" }
%"struct.std::__1::__list_node_base.88" = type { %"struct.std::__1::__list_node_base.88"*, %"struct.std::__1::__list_node_base.88"* }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::unordered_map.93" = type { %"class.std::__1::__hash_table.94" }
%"class.std::__1::__hash_table.94" = type <{ %"class.std::__1::unique_ptr.95", %"class.std::__1::__compressed_pair.105", %"class.std::__1::__compressed_pair.110", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97", %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"struct.std::__1::__hash_node_base.98"** }
%"struct.std::__1::__hash_node_base.98" = type { %"struct.std::__1::__hash_node_base.98"* }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.std::__1::__bucket_list_deallocator.100" }
%"class.std::__1::__bucket_list_deallocator.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"struct.std::__1::__hash_node_base.98" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.std::__1::vector.117" = type { %"class.std::__1::__vector_base.118" }
%"class.std::__1::__vector_base.118" = type { %"class.base::OnceCallback.119"*, %"class.base::OnceCallback.119"*, %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.base::OnceCallback.119"* }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.base::Time"*, i64 }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.content::BrowserTaskTraits" = type { %"class.base::TaskTraits" }
%"class.base::TaskTraits" = type { %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.5", [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string.43", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { i32* }

$_ZN4base8internal7InvokerINS0_9BindStateIMN12task_manager9TaskGroupEFvdEJNS_7WeakPtrIS4_EEEEEFvdEE3RunEPNS0_13BindStateBaseEd = comdat any

$_ZN4base8internal9BindStateIMN12task_manager9TaskGroupEFvdEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN12task_manager9TaskGroupEFvdEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN12task_manager9TaskGroupEFvlEJNS_7WeakPtrIS4_EEEEEFvlEE3RunEPNS0_13BindStateBaseEl = comdat any

$_ZN4base8internal9BindStateIMN12task_manager9TaskGroupEFvlEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN12task_manager9TaskGroupEFvlEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN12task_manager9TaskGroupEFviEJNS_7WeakPtrIS4_EEEEEFviEE3RunEPNS0_13BindStateBaseEi = comdat any

$_ZN4base8internal9BindStateIMN12task_manager9TaskGroupEFviEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN12task_manager9TaskGroupEFviEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN12task_manager9TaskGroupEFvbEJNS_7WeakPtrIS4_EEEEEFvbEE3RunEPNS0_13BindStateBaseEb = comdat any

$_ZN4base8internal9BindStateIMN12task_manager9TaskGroupEFvbEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN12task_manager9TaskGroupEFvbEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN12task_manager9TaskGroupEFvN4absl8optionalINS3_13SharedSampler14SamplingResultEEEEJNS0_17UnretainedWrapperIS4_EEEEEFvS9_EE3RunEPNS0_13BindStateBaseEOS9_ = comdat any

$_ZN4base8internal9BindStateIMN12task_manager9TaskGroupEFvN4absl8optionalINS2_13SharedSampler14SamplingResultEEEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFiiEJiEEEFivEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFiiEJiEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN12task_manager9TaskGroupEFviEJNS_7WeakPtrIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi = comdat any

$_ZN4base8internal20ReturnAsParamAdapterIiEEvNS_12OnceCallbackIFT_vEEEPNSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEE = comdat any

$_ZN4base8internal12ReplyAdapterIiiEEvNS_12OnceCallbackIFvT0_EEEPNSt3__110unique_ptrIT_NS6_14default_deleteIS8_EEEE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFivEEEPNSt3__110unique_ptrIiNS6_14default_deleteIiEEEEEJS5_SB_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFivEEEPNSt3__110unique_ptrIiNS5_14default_deleteIiEEEEEJS4_SA_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFviEEEPNSt3__110unique_ptrIiNS6_14default_deleteIiEEEEEJS5_NS0_12OwnedWrapperISA_NS8_ISA_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFviEEEPNSt3__110unique_ptrIiNS5_14default_deleteIiEEEEEJS4_NS0_12OwnedWrapperIS9_NS7_IS9_EEEEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

@_ZN8features16kProcessHostOnUIE = external global %"struct.base::Feature", align 8
@.ref.tmp = private constant { %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 } { %"struct.base::TaskTraitsExtensionStorage" zeroinitializer, i8 2, i8 1, i8 0, i8 0, i8 0, i8 0 }, align 1
@.str = private unnamed_addr constant [25 x i8] c"RefreshNaClDebugStubPort\00", align 1
@.str.1 = private unnamed_addr constant [57 x i8] c"../../chrome/browser/task_manager/sampling/task_group.cc\00", align 1
@.str.2 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN12task_manager9TaskGroupC1EiibRKN4base17RepeatingCallbackIFvvEEERK13scoped_refptrINS_13SharedSamplerEERKS7_INS1_19SequencedTaskRunnerEE = hidden unnamed_addr alias void (%"class.task_manager::TaskGroup"*, i32, i32, i1, %"class.base::RepeatingCallback"*, %class.scoped_refptr.10*, %class.scoped_refptr.4*), void (%"class.task_manager::TaskGroup"*, i32, i32, i1, %"class.base::RepeatingCallback"*, %class.scoped_refptr.10*, %class.scoped_refptr.4*)* @_ZN12task_manager9TaskGroupC2EiibRKN4base17RepeatingCallbackIFvvEEERK13scoped_refptrINS_13SharedSamplerEERKS7_INS1_19SequencedTaskRunnerEE
@_ZN12task_manager9TaskGroupD1Ev = hidden unnamed_addr alias void (%"class.task_manager::TaskGroup"*), void (%"class.task_manager::TaskGroup"*)* @_ZN12task_manager9TaskGroupD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager9TaskGroupC2EiibRKN4base17RepeatingCallbackIFvvEEERK13scoped_refptrINS_13SharedSamplerEERKS7_INS1_19SequencedTaskRunnerEE(%"class.task_manager::TaskGroup"*, i32, i32, i1 zeroext, %"class.base::RepeatingCallback"* dereferenceable(8), %class.scoped_refptr.10* nocapture readonly dereferenceable(8), %class.scoped_refptr.4* dereferenceable(8)) unnamed_addr #0 align 2 {
  %8 = alloca %"class.base::internal::WeakReference", align 8
  %9 = alloca %"class.base::internal::WeakReference", align 8
  %10 = alloca %"class.base::internal::WeakReference", align 8
  %11 = alloca %"class.base::internal::WeakReference", align 8
  %12 = alloca %"class.base::internal::WeakReference", align 8
  %13 = alloca %"class.base::Process", align 4
  %14 = alloca %"class.base::Process", align 4
  %15 = alloca %"class.base::RepeatingCallback.6", align 8
  %16 = alloca %"class.base::WeakPtr", align 8
  %17 = alloca %"class.base::RepeatingCallback.7", align 8
  %18 = alloca %"class.base::WeakPtr", align 8
  %19 = alloca %"class.base::RepeatingCallback.8", align 8
  %20 = alloca %"class.base::WeakPtr", align 8
  %21 = alloca %"class.base::RepeatingCallback.8", align 8
  %22 = alloca %"class.base::WeakPtr", align 8
  %23 = alloca %"class.base::RepeatingCallback.9", align 8
  %24 = alloca %"class.base::WeakPtr", align 8
  %25 = alloca %"class.base::RepeatingCallback.30", align 8
  %26 = zext i1 %3 to i8
  %27 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 0
  store i32 %1, i32* %27, align 8
  %28 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 1
  store i32 %2, i32* %28, align 4
  %29 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 2
  store i8 %26, i8* %29, align 8
  %30 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 3, i32 0
  %31 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %30, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %31) #13
  %32 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 4
  %33 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %32, i64 0, i32 0
  store %"class.task_manager::TaskGroupSampler"* null, %"class.task_manager::TaskGroupSampler"** %33, align 8
  %34 = getelementptr inbounds %class.scoped_refptr.10, %class.scoped_refptr.10* %5, i64 0, i32 0
  %35 = load %"class.task_manager::SharedSampler"*, %"class.task_manager::SharedSampler"** %34, align 8
  %36 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 5, i32 0
  store %"class.task_manager::SharedSampler"* %35, %"class.task_manager::SharedSampler"** %36, align 8
  %37 = icmp eq %"class.task_manager::SharedSampler"* %35, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %7
  %39 = getelementptr inbounds %"class.task_manager::SharedSampler", %"class.task_manager::SharedSampler"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i32* %39, i32 1 monotonic
  br label %41

41:                                               ; preds = %7, %38
  %42 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 6
  %43 = bitcast %"class.std::__1::vector"* %42 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #13
  %44 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 7
  %45 = bitcast i64* %44 to <2 x i64>*
  store <2 x i64> <i64 25349, i64 0>, <2 x i64>* %45, align 8
  %46 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 9
  store double 0x7FF8000000000000, double* %46, align 8
  %47 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 10, i32 0, i32 0
  %48 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 12
  %49 = bitcast i64* %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false)
  %50 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 16
  %51 = bitcast i64* %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 -1, i64 32, i1 false)
  store i64 0, i64* %50, align 8
  %52 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 17
  store i32 -1, i32* %52, align 8
  %53 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 18
  store i32 -1, i32* %53, align 4
  %54 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 19
  store i32 -1, i32* %54, align 8
  %55 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 20
  store i8 0, i8* %55, align 4
  %56 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 21
  store i8 0, i8* %56, align 1
  %57 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 22
  %58 = getelementptr inbounds %"class.base::WeakPtrFactory", %"class.base::WeakPtrFactory"* %57, i64 0, i32 0
  %59 = ptrtoint %"class.task_manager::TaskGroup"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %58, i64 %59) #13
  %60 = load i32, i32* %28, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %185, label %62

62:                                               ; preds = %41
  %63 = load i8, i8* %29, align 8, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %185

65:                                               ; preds = %62
  %66 = bitcast %"class.base::Process"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %66) #13
  call void @_ZN4base7Process4OpenEi(%"class.base::Process"* nonnull sret %14, i32 %60) #13
  %67 = bitcast %"class.base::RepeatingCallback.6"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #13
  %68 = bitcast %"class.base::WeakPtr"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #13
  %69 = bitcast %"class.base::internal::WeakReference"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #13, !noalias !3
  %70 = getelementptr inbounds %"class.base::WeakPtrFactory", %"class.base::WeakPtrFactory"* %57, i64 0, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %12, %"class.base::internal::WeakReferenceOwner"* %70) #13, !noalias !3
  %71 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 22, i32 0, i32 1
  %72 = load i64, i64* %71, align 8, !noalias !3
  %73 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %16, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %73, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %12, i64 %72) #13
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #13, !noalias !3
  %74 = call i8* @_Znwm(i64 64) #14, !noalias !6
  %75 = bitcast i8* %74 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %75, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, double)* @_ZN4base8internal7InvokerINS0_9BindStateIMN12task_manager9TaskGroupEFvdEJNS_7WeakPtrIS4_EEEEEFvdEE3RunEPNS0_13BindStateBaseEd to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN12task_manager9TaskGroupEFvdEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN12task_manager9TaskGroupEFvdEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #13, !noalias !6
  %76 = getelementptr inbounds i8, i8* %74, i64 32
  %77 = bitcast i8* %76 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.task_manager::TaskGroup"*, double)* @_ZN12task_manager9TaskGroup16OnCpuRefreshDoneEd to i64), i64 0>, <2 x i64>* %77, align 8, !noalias !6
  %78 = getelementptr inbounds i8, i8* %74, i64 48
  %79 = bitcast i8* %78 to %"class.base::internal::WeakReference"*
  %80 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %16, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %79, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %80) #13, !noalias !6
  %81 = getelementptr inbounds i8, i8* %74, i64 56
  %82 = bitcast i8* %81 to i64*
  %83 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %16, i64 0, i32 0, i32 1
  %84 = load i64, i64* %83, align 8, !noalias !6
  store i64 %84, i64* %82, align 8, !noalias !6
  %85 = bitcast %"class.base::RepeatingCallback.6"* %15 to i8**
  store i8* %74, i8** %85, align 8, !alias.scope !6
  %86 = bitcast %"class.base::RepeatingCallback.7"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #13
  %87 = bitcast %"class.base::WeakPtr"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #13
  %88 = bitcast %"class.base::internal::WeakReference"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #13, !noalias !11
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %11, %"class.base::internal::WeakReferenceOwner"* %70) #13, !noalias !11
  %89 = load i64, i64* %71, align 8, !noalias !11
  %90 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %18, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %90, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %11, i64 %89) #13
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #13, !noalias !11
  %91 = call i8* @_Znwm(i64 64) #14, !noalias !14
  %92 = bitcast i8* %91 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %92, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i64)* @_ZN4base8internal7InvokerINS0_9BindStateIMN12task_manager9TaskGroupEFvlEJNS_7WeakPtrIS4_EEEEEFvlEE3RunEPNS0_13BindStateBaseEl to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN12task_manager9TaskGroupEFvlEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN12task_manager9TaskGroupEFvlEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #13, !noalias !14
  %93 = getelementptr inbounds i8, i8* %91, i64 32
  %94 = bitcast i8* %93 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.task_manager::TaskGroup"*, i64)* @_ZN12task_manager9TaskGroup23OnSwappedMemRefreshDoneEl to i64), i64 0>, <2 x i64>* %94, align 8, !noalias !14
  %95 = getelementptr inbounds i8, i8* %91, i64 48
  %96 = bitcast i8* %95 to %"class.base::internal::WeakReference"*
  %97 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %18, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %96, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %97) #13, !noalias !14
  %98 = getelementptr inbounds i8, i8* %91, i64 56
  %99 = bitcast i8* %98 to i64*
  %100 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %18, i64 0, i32 0, i32 1
  %101 = load i64, i64* %100, align 8, !noalias !14
  store i64 %101, i64* %99, align 8, !noalias !14
  %102 = bitcast %"class.base::RepeatingCallback.7"* %17 to i8**
  store i8* %91, i8** %102, align 8, !alias.scope !14
  %103 = bitcast %"class.base::RepeatingCallback.8"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #13
  %104 = bitcast %"class.base::WeakPtr"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #13
  %105 = bitcast %"class.base::internal::WeakReference"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #13, !noalias !19
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %10, %"class.base::internal::WeakReferenceOwner"* %70) #13, !noalias !19
  %106 = load i64, i64* %71, align 8, !noalias !19
  %107 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %20, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %107, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %10, i64 %106) #13
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #13, !noalias !19
  %108 = call i8* @_Znwm(i64 64) #14, !noalias !22
  %109 = bitcast i8* %108 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %109, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN12task_manager9TaskGroupEFviEJNS_7WeakPtrIS4_EEEEEFviEE3RunEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN12task_manager9TaskGroupEFviEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN12task_manager9TaskGroupEFviEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #13, !noalias !22
  %110 = getelementptr inbounds i8, i8* %108, i64 32
  %111 = bitcast i8* %110 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.task_manager::TaskGroup"*, i32)* @_ZN12task_manager9TaskGroup24OnIdleWakeupsRefreshDoneEi to i64), i64 0>, <2 x i64>* %111, align 8, !noalias !22
  %112 = getelementptr inbounds i8, i8* %108, i64 48
  %113 = bitcast i8* %112 to %"class.base::internal::WeakReference"*
  %114 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %20, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %113, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %114) #13, !noalias !22
  %115 = getelementptr inbounds i8, i8* %108, i64 56
  %116 = bitcast i8* %115 to i64*
  %117 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %20, i64 0, i32 0, i32 1
  %118 = load i64, i64* %117, align 8, !noalias !22
  store i64 %118, i64* %116, align 8, !noalias !22
  %119 = bitcast %"class.base::RepeatingCallback.8"* %19 to i8**
  store i8* %108, i8** %119, align 8, !alias.scope !22
  %120 = bitcast %"class.base::RepeatingCallback.8"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #13
  %121 = bitcast %"class.base::WeakPtr"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %121) #13
  %122 = bitcast %"class.base::internal::WeakReference"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #13, !noalias !27
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %9, %"class.base::internal::WeakReferenceOwner"* %70) #13, !noalias !27
  %123 = load i64, i64* %71, align 8, !noalias !27
  %124 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %22, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %124, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %9, i64 %123) #13
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #13, !noalias !27
  %125 = call i8* @_Znwm(i64 64) #14, !noalias !30
  %126 = bitcast i8* %125 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %126, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN12task_manager9TaskGroupEFviEJNS_7WeakPtrIS4_EEEEEFviEE3RunEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN12task_manager9TaskGroupEFviEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN12task_manager9TaskGroupEFviEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #13, !noalias !30
  %127 = getelementptr inbounds i8, i8* %125, i64 32
  %128 = bitcast i8* %127 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.task_manager::TaskGroup"*, i32)* @_ZN12task_manager9TaskGroup24OnOpenFdCountRefreshDoneEi to i64), i64 0>, <2 x i64>* %128, align 8, !noalias !30
  %129 = getelementptr inbounds i8, i8* %125, i64 48
  %130 = bitcast i8* %129 to %"class.base::internal::WeakReference"*
  %131 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %22, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %130, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %131) #13, !noalias !30
  %132 = getelementptr inbounds i8, i8* %125, i64 56
  %133 = bitcast i8* %132 to i64*
  %134 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %22, i64 0, i32 0, i32 1
  %135 = load i64, i64* %134, align 8, !noalias !30
  store i64 %135, i64* %133, align 8, !noalias !30
  %136 = bitcast %"class.base::RepeatingCallback.8"* %21 to i8**
  store i8* %125, i8** %136, align 8, !alias.scope !30
  %137 = bitcast %"class.base::RepeatingCallback.9"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %137) #13
  %138 = bitcast %"class.base::WeakPtr"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %138) #13
  %139 = bitcast %"class.base::internal::WeakReference"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %139) #13, !noalias !35
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %8, %"class.base::internal::WeakReferenceOwner"* %70) #13, !noalias !35
  %140 = load i64, i64* %71, align 8, !noalias !35
  %141 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %24, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %141, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %8, i64 %140) #13
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %139) #13, !noalias !35
  %142 = call i8* @_Znwm(i64 64) #14, !noalias !38
  %143 = bitcast i8* %142 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %143, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i1)* @_ZN4base8internal7InvokerINS0_9BindStateIMN12task_manager9TaskGroupEFvbEJNS_7WeakPtrIS4_EEEEEFvbEE3RunEPNS0_13BindStateBaseEb to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN12task_manager9TaskGroupEFvbEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN12task_manager9TaskGroupEFvbEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #13, !noalias !38
  %144 = getelementptr inbounds i8, i8* %142, i64 32
  %145 = bitcast i8* %144 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.task_manager::TaskGroup"*, i1)* @_ZN12task_manager9TaskGroup21OnProcessPriorityDoneEb to i64), i64 0>, <2 x i64>* %145, align 8, !noalias !38
  %146 = getelementptr inbounds i8, i8* %142, i64 48
  %147 = bitcast i8* %146 to %"class.base::internal::WeakReference"*
  %148 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %24, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %147, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %148) #13, !noalias !38
  %149 = getelementptr inbounds i8, i8* %142, i64 56
  %150 = bitcast i8* %149 to i64*
  %151 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %24, i64 0, i32 0, i32 1
  %152 = load i64, i64* %151, align 8, !noalias !38
  store i64 %152, i64* %150, align 8, !noalias !38
  %153 = bitcast %"class.base::RepeatingCallback.9"* %23 to i8**
  store i8* %142, i8** %153, align 8, !alias.scope !38
  %154 = bitcast %"class.base::Process"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %154)
  %155 = call i8* @_Znwm(i64 80) #14
  %156 = bitcast i8* %155 to %"class.task_manager::TaskGroupSampler"*
  call void @_ZN4base7ProcessC1EOS0_(%"class.base::Process"* nonnull %13, %"class.base::Process"* nonnull dereferenceable(4) %14) #13
  call void @_ZN12task_manager16TaskGroupSamplerC1EN4base7ProcessERK13scoped_refptrINS1_19SequencedTaskRunnerEERKNS1_17RepeatingCallbackIFvdEEERKNS8_IFvlEEERKNS8_IFviEEESK_RKNS8_IFvbEEE(%"class.task_manager::TaskGroupSampler"* nonnull %156, %"class.base::Process"* nonnull %13, %class.scoped_refptr.4* dereferenceable(8) %6, %"class.base::RepeatingCallback.6"* nonnull dereferenceable(8) %15, %"class.base::RepeatingCallback.7"* nonnull dereferenceable(8) %17, %"class.base::RepeatingCallback.8"* nonnull dereferenceable(8) %19, %"class.base::RepeatingCallback.8"* nonnull dereferenceable(8) %21, %"class.base::RepeatingCallback.9"* nonnull dereferenceable(8) %23) #13
  call void @_ZN4base7ProcessD1Ev(%"class.base::Process"* nonnull %13) #13
  %157 = bitcast i8* %155 to i32*
  %158 = atomicrmw add i32* %157, i32 1 monotonic
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %154)
  %159 = ptrtoint i8* %155 to i64
  %160 = bitcast %class.scoped_refptr.1* %32 to i64*
  %161 = load %"class.task_manager::TaskGroupSampler"*, %"class.task_manager::TaskGroupSampler"** %33, align 8
  store i64 %159, i64* %160, align 8
  %162 = icmp eq %"class.task_manager::TaskGroupSampler"* %161, null
  br i1 %162, label %169, label %163

163:                                              ; preds = %65
  %164 = getelementptr inbounds %"class.task_manager::TaskGroupSampler", %"class.task_manager::TaskGroupSampler"* %161, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = atomicrmw sub i32* %164, i32 1 acq_rel
  %166 = icmp eq i32 %165, 1
  br i1 %166, label %167, label %169

167:                                              ; preds = %163
  call void @_ZN12task_manager16TaskGroupSamplerD1Ev(%"class.task_manager::TaskGroupSampler"* nonnull %161) #13
  %168 = bitcast %"class.task_manager::TaskGroupSampler"* %161 to i8*
  call void @_ZdlPv(i8* %168) #14
  br label %169

169:                                              ; preds = %65, %163, %167
  %170 = getelementptr inbounds %"class.base::RepeatingCallback.9", %"class.base::RepeatingCallback.9"* %23, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %170) #13
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %141) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %138) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %137) #13
  %171 = getelementptr inbounds %"class.base::RepeatingCallback.8", %"class.base::RepeatingCallback.8"* %21, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %171) #13
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %124) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %121) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #13
  %172 = getelementptr inbounds %"class.base::RepeatingCallback.8", %"class.base::RepeatingCallback.8"* %19, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %172) #13
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %107) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #13
  %173 = getelementptr inbounds %"class.base::RepeatingCallback.7", %"class.base::RepeatingCallback.7"* %17, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %173) #13
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %90) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #13
  %174 = getelementptr inbounds %"class.base::RepeatingCallback.6", %"class.base::RepeatingCallback.6"* %15, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %174) #13
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %73) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #13
  call void @_ZN4base7ProcessD1Ev(%"class.base::Process"* nonnull %14) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %66) #13
  %175 = load %"class.task_manager::SharedSampler"*, %"class.task_manager::SharedSampler"** %36, align 8
  %176 = load i32, i32* %28, align 4
  %177 = call i8* @_Znwm(i64 56) #14, !noalias !43
  %178 = bitcast i8* %177 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %178, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN12task_manager9TaskGroupEFvN4absl8optionalINS3_13SharedSampler14SamplingResultEEEEJNS0_17UnretainedWrapperIS4_EEEEEFvS9_EE3RunEPNS0_13BindStateBaseEOS9_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN12task_manager9TaskGroupEFvN4absl8optionalINS2_13SharedSampler14SamplingResultEEEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #13, !noalias !43
  %179 = getelementptr inbounds i8, i8* %177, i64 32
  %180 = bitcast i8* %179 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.task_manager::TaskGroup"*, %"class.absl::optional"*)* @_ZN12task_manager9TaskGroup20OnSamplerRefreshDoneEN4absl8optionalINS_13SharedSampler14SamplingResultEEE to i64), i64 0>, <2 x i64>* %180, align 8, !noalias !43
  %181 = getelementptr inbounds i8, i8* %177, i64 48
  %182 = bitcast i8* %181 to i64*
  store i64 %59, i64* %182, align 8, !noalias !43
  %183 = bitcast %"class.base::RepeatingCallback.30"* %25 to i8**
  store i8* %177, i8** %183, align 8, !alias.scope !43
  call void @_ZN12task_manager13SharedSampler16RegisterCallbackEiN4base17RepeatingCallbackIFvN4absl8optionalINS0_14SamplingResultEEEEEE(%"class.task_manager::SharedSampler"* %175, i32 %176, %"class.base::RepeatingCallback.30"* nonnull %25) #13
  %184 = getelementptr inbounds %"class.base::RepeatingCallback.30", %"class.base::RepeatingCallback.30"* %25, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %184) #13
  br label %185

185:                                              ; preds = %62, %41, %169
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base7Process4OpenEi(%"class.base::Process"* sret, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager9TaskGroup16OnCpuRefreshDoneEd(%"class.task_manager::TaskGroup"* nocapture, double) #0 align 2 {
  %3 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 9
  store double %1, double* %3, align 8
  %4 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 8
  %5 = load i64, i64* %4, align 8
  %6 = or i64 %5, 1
  store i64 %6, i64* %4, align 8
  %7 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 7
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, %6
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %11, align 8
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %12, i64 0, i32 1
  %14 = bitcast void ()** %13 to void (%"class.base::internal::BindStateBase"*)**
  %15 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %14, align 8
  tail call void %15(%"class.base::internal::BindStateBase"* %12) #13
  br label %16

16:                                               ; preds = %2, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager9TaskGroup23OnSwappedMemRefreshDoneEl(%"class.task_manager::TaskGroup"* nocapture, i64) #0 align 2 {
  %3 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 12
  store i64 %1, i64* %3, align 8
  %4 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 8
  %5 = load i64, i64* %4, align 8
  %6 = or i64 %5, 4
  store i64 %6, i64* %4, align 8
  %7 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 7
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, %6
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %11, align 8
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %12, i64 0, i32 1
  %14 = bitcast void ()** %13 to void (%"class.base::internal::BindStateBase"*)**
  %15 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %14, align 8
  tail call void %15(%"class.base::internal::BindStateBase"* %12) #13
  br label %16

16:                                               ; preds = %2, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager9TaskGroup24OnIdleWakeupsRefreshDoneEi(%"class.task_manager::TaskGroup"* nocapture, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 19
  store i32 %1, i32* %3, align 8
  %4 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 8
  %5 = load i64, i64* %4, align 8
  %6 = or i64 %5, 512
  store i64 %6, i64* %4, align 8
  %7 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 7
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, %6
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %11, align 8
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %12, i64 0, i32 1
  %14 = bitcast void ()** %13 to void (%"class.base::internal::BindStateBase"*)**
  %15 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %14, align 8
  tail call void %15(%"class.base::internal::BindStateBase"* %12) #13
  br label %16

16:                                               ; preds = %2, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager9TaskGroup24OnOpenFdCountRefreshDoneEi(%"class.task_manager::TaskGroup"* nocapture, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 18
  store i32 %1, i32* %3, align 4
  %4 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 8
  %5 = load i64, i64* %4, align 8
  %6 = or i64 %5, 16384
  store i64 %6, i64* %4, align 8
  %7 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 7
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, %6
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %11, align 8
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %12, i64 0, i32 1
  %14 = bitcast void ()** %13 to void (%"class.base::internal::BindStateBase"*)**
  %15 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %14, align 8
  tail call void %15(%"class.base::internal::BindStateBase"* %12) #13
  br label %16

16:                                               ; preds = %2, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager9TaskGroup21OnProcessPriorityDoneEb(%"class.task_manager::TaskGroup"* nocapture, i1 zeroext) #0 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 21
  store i8 %3, i8* %4, align 1
  %5 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 8
  %6 = load i64, i64* %5, align 8
  %7 = or i64 %6, 8192
  store i64 %7, i64* %5, align 8
  %8 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 7
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, %7
  br i1 %10, label %11, label %17

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %12, align 8
  %14 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %13, i64 0, i32 1
  %15 = bitcast void ()** %14 to void (%"class.base::internal::BindStateBase"*)**
  %16 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %15, align 8
  tail call void %16(%"class.base::internal::BindStateBase"* %13) #13
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base7ProcessD1Ev(%"class.base::Process"*) unnamed_addr #3

declare void @_ZN12task_manager13SharedSampler16RegisterCallbackEiN4base17RepeatingCallbackIFvN4absl8optionalINS0_14SamplingResultEEEEEE(%"class.task_manager::SharedSampler"*, i32, %"class.base::RepeatingCallback.30"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager9TaskGroup20OnSamplerRefreshDoneEN4absl8optionalINS_13SharedSampler14SamplingResultEEE(%"class.task_manager::TaskGroup"* nocapture, %"class.absl::optional"* nocapture readonly byval(%"class.absl::optional") align 8) #0 align 2 {
  %3 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  br label %13

13:                                               ; preds = %2, %6
  %14 = phi i64 [ %8, %6 ], [ 0, %2 ]
  %15 = phi i32 [ %10, %6 ], [ -1, %2 ]
  %16 = phi i64 [ %12, %6 ], [ 0, %2 ]
  %17 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 11, i32 0
  store i64 %14, i64* %17, align 8
  %18 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 19
  store i32 %15, i32* %18, align 8
  %19 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 10, i32 0, i32 0
  store i64 %16, i64* %19, align 8
  %20 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 7
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 5, i32 0
  %23 = load %"class.task_manager::SharedSampler"*, %"class.task_manager::SharedSampler"** %22, align 8
  %24 = tail call i64 @_ZNK12task_manager13SharedSampler17GetSupportedFlagsEv(%"class.task_manager::SharedSampler"* %23) #13
  %25 = and i64 %24, %21
  %26 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 8
  %27 = load i64, i64* %26, align 8
  %28 = or i64 %27, %25
  store i64 %28, i64* %26, align 8
  %29 = load i64, i64* %20, align 8
  %30 = icmp eq i64 %29, %28
  br i1 %30, label %31, label %37

31:                                               ; preds = %13
  %32 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %33 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %32, align 8
  %34 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %33, i64 0, i32 1
  %35 = bitcast void ()** %34 to void (%"class.base::internal::BindStateBase"*)**
  %36 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %35, align 8
  tail call void %36(%"class.base::internal::BindStateBase"* %33) #13
  br label %37

37:                                               ; preds = %13, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager9TaskGroupD2Ev(%"class.task_manager::TaskGroup"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 5, i32 0
  %3 = load %"class.task_manager::SharedSampler"*, %"class.task_manager::SharedSampler"** %2, align 8
  %4 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  tail call void @_ZN12task_manager13SharedSampler18UnregisterCallbackEi(%"class.task_manager::SharedSampler"* %3, i32 %5) #13
  %6 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 22, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %6) #13
  %7 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 6, i32 0, i32 0
  %8 = load %"class.task_manager::Task"**, %"class.task_manager::Task"*** %7, align 8
  %9 = icmp eq %"class.task_manager::Task"** %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = ptrtoint %"class.task_manager::Task"** %8 to i64
  %12 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 6, i32 0, i32 1
  %13 = bitcast %"class.task_manager::Task"*** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast %"class.task_manager::Task"** %8 to i8*
  tail call void @_ZdlPv(i8* %14) #14
  br label %15

15:                                               ; preds = %1, %10
  %16 = load %"class.task_manager::SharedSampler"*, %"class.task_manager::SharedSampler"** %2, align 8
  %17 = icmp eq %"class.task_manager::SharedSampler"* %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.task_manager::SharedSampler", %"class.task_manager::SharedSampler"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw sub i32* %19, i32 1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  tail call void @_ZN12task_manager13SharedSamplerD1Ev(%"class.task_manager::SharedSampler"* nonnull %16) #13
  %23 = bitcast %"class.task_manager::SharedSampler"* %16 to i8*
  tail call void @_ZdlPv(i8* %23) #14
  br label %24

24:                                               ; preds = %15, %18, %22
  %25 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 4, i32 0
  %26 = load %"class.task_manager::TaskGroupSampler"*, %"class.task_manager::TaskGroupSampler"** %25, align 8
  %27 = icmp eq %"class.task_manager::TaskGroupSampler"* %26, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.task_manager::TaskGroupSampler", %"class.task_manager::TaskGroupSampler"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw sub i32* %29, i32 1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %34

32:                                               ; preds = %28
  tail call void @_ZN12task_manager16TaskGroupSamplerD1Ev(%"class.task_manager::TaskGroupSampler"* nonnull %26) #13
  %33 = bitcast %"class.task_manager::TaskGroupSampler"* %26 to i8*
  tail call void @_ZdlPv(i8* %33) #14
  br label %34

34:                                               ; preds = %24, %28, %32
  %35 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 3, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %35) #13
  ret void
}

declare void @_ZN12task_manager13SharedSampler18UnregisterCallbackEi(%"class.task_manager::SharedSampler"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager9TaskGroup7AddTaskEPNS_4TaskE(%"class.task_manager::TaskGroup"*, %"class.task_manager::Task"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.task_manager::Task"* %1 to i64
  %4 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 6
  %5 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 6, i32 0, i32 1
  %6 = load %"class.task_manager::Task"**, %"class.task_manager::Task"*** %5, align 8
  %7 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.task_manager::Task"**, %"class.task_manager::Task"*** %7, align 8
  %9 = icmp eq %"class.task_manager::Task"** %6, %8
  %10 = ptrtoint %"class.task_manager::Task"** %8 to i64
  br i1 %9, label %16, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.task_manager::Task"** %6 to i64*
  store i64 %3, i64* %12, align 8
  %13 = getelementptr inbounds %"class.task_manager::Task"*, %"class.task_manager::Task"** %6, i64 1
  %14 = ptrtoint %"class.task_manager::Task"** %13 to i64
  %15 = bitcast %"class.task_manager::Task"*** %5 to i64*
  store i64 %14, i64* %15, align 8
  br label %73

16:                                               ; preds = %2
  %17 = ptrtoint %"class.task_manager::Task"** %6 to i64
  %18 = bitcast %"class.task_manager::Task"*** %5 to i64*
  %19 = bitcast %"class.std::__1::vector"* %4 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = add nsw i64 %22, 1
  %24 = icmp ugt i64 %23, 2305843009213693951
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #15
  unreachable

27:                                               ; preds = %16
  %28 = bitcast %"class.task_manager::Task"*** %7 to i64*
  %29 = sub i64 %10, %20
  %30 = ashr exact i64 %29, 3
  %31 = icmp ult i64 %30, 1152921504606846975
  br i1 %31, label %32, label %40

32:                                               ; preds = %27
  %33 = ashr exact i64 %29, 2
  %34 = icmp ult i64 %33, %23
  %35 = select i1 %34, i64 %23, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %32
  %38 = icmp ugt i64 %35, 2305843009213693951
  br i1 %38, label %39, label %40

39:                                               ; preds = %37
  tail call void @abort() #15
  unreachable

40:                                               ; preds = %37, %27
  %41 = phi i64 [ %35, %37 ], [ 2305843009213693951, %27 ]
  %42 = shl i64 %41, 3
  %43 = tail call i8* @_Znwm(i64 %42) #14
  %44 = bitcast i8* %43 to %"class.task_manager::Task"**
  br label %45

45:                                               ; preds = %40, %32
  %46 = phi i64 [ %41, %40 ], [ 0, %32 ]
  %47 = phi %"class.task_manager::Task"** [ %44, %40 ], [ null, %32 ]
  %48 = getelementptr inbounds %"class.task_manager::Task"*, %"class.task_manager::Task"** %47, i64 %22
  %49 = getelementptr inbounds %"class.task_manager::Task"*, %"class.task_manager::Task"** %47, i64 %46
  %50 = ptrtoint %"class.task_manager::Task"** %49 to i64
  %51 = bitcast %"class.task_manager::Task"** %48 to i64*
  store i64 %3, i64* %51, align 8
  %52 = getelementptr inbounds %"class.task_manager::Task"*, %"class.task_manager::Task"** %48, i64 1
  %53 = ptrtoint %"class.task_manager::Task"** %52 to i64
  %54 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %55 = load %"class.task_manager::Task"**, %"class.task_manager::Task"*** %54, align 8
  %56 = load i64, i64* %18, align 8
  %57 = ptrtoint %"class.task_manager::Task"** %55 to i64
  %58 = sub i64 %56, %57
  %59 = ashr exact i64 %58, 3
  %60 = sub nsw i64 0, %59
  %61 = getelementptr inbounds %"class.task_manager::Task"*, %"class.task_manager::Task"** %48, i64 %60
  %62 = ptrtoint %"class.task_manager::Task"** %61 to i64
  %63 = icmp sgt i64 %58, 0
  br i1 %63, label %64, label %68

64:                                               ; preds = %45
  %65 = bitcast %"class.task_manager::Task"** %61 to i8*
  %66 = bitcast %"class.task_manager::Task"** %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 %58, i1 false) #13
  %67 = load %"class.task_manager::Task"**, %"class.task_manager::Task"*** %54, align 8
  br label %68

68:                                               ; preds = %64, %45
  %69 = phi %"class.task_manager::Task"** [ %55, %45 ], [ %67, %64 ]
  store i64 %62, i64* %19, align 8
  store i64 %53, i64* %18, align 8
  store i64 %50, i64* %28, align 8
  %70 = icmp eq %"class.task_manager::Task"** %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %68
  %72 = bitcast %"class.task_manager::Task"** %69 to i8*
  tail call void @_ZdlPv(i8* %72) #14
  br label %73

73:                                               ; preds = %11, %68, %71
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN12task_manager9TaskGroup10RemoveTaskEPNS_4TaskE(%"class.task_manager::TaskGroup"* nocapture, %"class.task_manager::Task"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 6, i32 0, i32 0
  %4 = load %"class.task_manager::Task"**, %"class.task_manager::Task"*** %3, align 8
  %5 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 6, i32 0, i32 1
  %6 = load %"class.task_manager::Task"**, %"class.task_manager::Task"*** %5, align 8
  %7 = icmp eq %"class.task_manager::Task"** %4, %6
  %8 = ptrtoint %"class.task_manager::Task"** %6 to i64
  br i1 %7, label %16, label %9

9:                                                ; preds = %2, %13
  %10 = phi %"class.task_manager::Task"** [ %14, %13 ], [ %4, %2 ]
  %11 = load %"class.task_manager::Task"*, %"class.task_manager::Task"** %10, align 8
  %12 = icmp eq %"class.task_manager::Task"* %11, %1
  br i1 %12, label %16, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.task_manager::Task"*, %"class.task_manager::Task"** %10, i64 1
  %15 = icmp eq %"class.task_manager::Task"** %14, %6
  br i1 %15, label %72, label %9

16:                                               ; preds = %9, %2
  %17 = phi %"class.task_manager::Task"** [ %4, %2 ], [ %10, %9 ]
  %18 = ptrtoint %"class.task_manager::Task"** %17 to i64
  %19 = icmp eq %"class.task_manager::Task"** %17, %6
  br i1 %19, label %72, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.task_manager::Task"*, %"class.task_manager::Task"** %17, i64 1
  %22 = icmp eq %"class.task_manager::Task"** %21, %6
  br i1 %22, label %72, label %23

23:                                               ; preds = %20
  %24 = getelementptr %"class.task_manager::Task"*, %"class.task_manager::Task"** %6, i64 -2
  %25 = ptrtoint %"class.task_manager::Task"** %24 to i64
  %26 = sub i64 %25, %18
  %27 = lshr i64 %26, 3
  %28 = add nuw nsw i64 %27, 1
  %29 = and i64 %28, 3
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %48, label %31

31:                                               ; preds = %23, %43
  %32 = phi %"class.task_manager::Task"** [ %45, %43 ], [ %21, %23 ]
  %33 = phi i64 [ %44, %43 ], [ %18, %23 ]
  %34 = phi i64 [ %46, %43 ], [ %29, %23 ]
  %35 = load %"class.task_manager::Task"*, %"class.task_manager::Task"** %32, align 8
  %36 = icmp eq %"class.task_manager::Task"* %35, %1
  br i1 %36, label %43, label %37

37:                                               ; preds = %31
  %38 = ptrtoint %"class.task_manager::Task"* %35 to i64
  %39 = inttoptr i64 %33 to %"class.task_manager::Task"**
  %40 = inttoptr i64 %33 to i64*
  store i64 %38, i64* %40, align 8
  %41 = getelementptr inbounds %"class.task_manager::Task"*, %"class.task_manager::Task"** %39, i64 1
  %42 = ptrtoint %"class.task_manager::Task"** %41 to i64
  br label %43

43:                                               ; preds = %37, %31
  %44 = phi i64 [ %33, %31 ], [ %42, %37 ]
  %45 = getelementptr inbounds %"class.task_manager::Task"*, %"class.task_manager::Task"** %32, i64 1
  %46 = add i64 %34, -1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %31, !llvm.loop !48

48:                                               ; preds = %43, %23
  %49 = phi i64 [ undef, %23 ], [ %44, %43 ]
  %50 = phi %"class.task_manager::Task"** [ %21, %23 ], [ %45, %43 ]
  %51 = phi i64 [ %18, %23 ], [ %44, %43 ]
  %52 = icmp ult i64 %26, 24
  br i1 %52, label %69, label %53

53:                                               ; preds = %48, %107
  %54 = phi %"class.task_manager::Task"** [ %109, %107 ], [ %50, %48 ]
  %55 = phi i64 [ %108, %107 ], [ %51, %48 ]
  %56 = load %"class.task_manager::Task"*, %"class.task_manager::Task"** %54, align 8
  %57 = icmp eq %"class.task_manager::Task"* %56, %1
  br i1 %57, label %64, label %58

58:                                               ; preds = %53
  %59 = ptrtoint %"class.task_manager::Task"* %56 to i64
  %60 = inttoptr i64 %55 to %"class.task_manager::Task"**
  %61 = inttoptr i64 %55 to i64*
  store i64 %59, i64* %61, align 8
  %62 = getelementptr inbounds %"class.task_manager::Task"*, %"class.task_manager::Task"** %60, i64 1
  %63 = ptrtoint %"class.task_manager::Task"** %62 to i64
  br label %64

64:                                               ; preds = %58, %53
  %65 = phi i64 [ %55, %53 ], [ %63, %58 ]
  %66 = getelementptr inbounds %"class.task_manager::Task"*, %"class.task_manager::Task"** %54, i64 1
  %67 = load %"class.task_manager::Task"*, %"class.task_manager::Task"** %66, align 8
  %68 = icmp eq %"class.task_manager::Task"* %67, %1
  br i1 %68, label %85, label %79

69:                                               ; preds = %107, %48
  %70 = phi i64 [ %49, %48 ], [ %108, %107 ]
  %71 = load %"class.task_manager::Task"**, %"class.task_manager::Task"*** %5, align 8
  br label %72

72:                                               ; preds = %13, %69, %20, %16
  %73 = phi %"class.task_manager::Task"** [ %71, %69 ], [ %6, %16 ], [ %6, %20 ], [ %6, %13 ]
  %74 = phi i64 [ %70, %69 ], [ %18, %16 ], [ %18, %20 ], [ %8, %13 ]
  %75 = inttoptr i64 %74 to %"class.task_manager::Task"**
  %76 = icmp eq %"class.task_manager::Task"** %73, %75
  br i1 %76, label %78, label %77

77:                                               ; preds = %72
  store %"class.task_manager::Task"** %75, %"class.task_manager::Task"*** %5, align 8
  br label %78

78:                                               ; preds = %72, %77
  ret void

79:                                               ; preds = %64
  %80 = ptrtoint %"class.task_manager::Task"* %67 to i64
  %81 = inttoptr i64 %65 to %"class.task_manager::Task"**
  %82 = inttoptr i64 %65 to i64*
  store i64 %80, i64* %82, align 8
  %83 = getelementptr inbounds %"class.task_manager::Task"*, %"class.task_manager::Task"** %81, i64 1
  %84 = ptrtoint %"class.task_manager::Task"** %83 to i64
  br label %85

85:                                               ; preds = %79, %64
  %86 = phi i64 [ %65, %64 ], [ %84, %79 ]
  %87 = getelementptr inbounds %"class.task_manager::Task"*, %"class.task_manager::Task"** %54, i64 2
  %88 = load %"class.task_manager::Task"*, %"class.task_manager::Task"** %87, align 8
  %89 = icmp eq %"class.task_manager::Task"* %88, %1
  br i1 %89, label %96, label %90

90:                                               ; preds = %85
  %91 = ptrtoint %"class.task_manager::Task"* %88 to i64
  %92 = inttoptr i64 %86 to %"class.task_manager::Task"**
  %93 = inttoptr i64 %86 to i64*
  store i64 %91, i64* %93, align 8
  %94 = getelementptr inbounds %"class.task_manager::Task"*, %"class.task_manager::Task"** %92, i64 1
  %95 = ptrtoint %"class.task_manager::Task"** %94 to i64
  br label %96

96:                                               ; preds = %90, %85
  %97 = phi i64 [ %86, %85 ], [ %95, %90 ]
  %98 = getelementptr inbounds %"class.task_manager::Task"*, %"class.task_manager::Task"** %54, i64 3
  %99 = load %"class.task_manager::Task"*, %"class.task_manager::Task"** %98, align 8
  %100 = icmp eq %"class.task_manager::Task"* %99, %1
  br i1 %100, label %107, label %101

101:                                              ; preds = %96
  %102 = ptrtoint %"class.task_manager::Task"* %99 to i64
  %103 = inttoptr i64 %97 to %"class.task_manager::Task"**
  %104 = inttoptr i64 %97 to i64*
  store i64 %102, i64* %104, align 8
  %105 = getelementptr inbounds %"class.task_manager::Task"*, %"class.task_manager::Task"** %103, i64 1
  %106 = ptrtoint %"class.task_manager::Task"** %105 to i64
  br label %107

107:                                              ; preds = %101, %96
  %108 = phi i64 [ %97, %96 ], [ %106, %101 ]
  %109 = getelementptr inbounds %"class.task_manager::Task"*, %"class.task_manager::Task"** %54, i64 4
  %110 = icmp eq %"class.task_manager::Task"** %109, %6
  br i1 %110, label %69, label %53
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager9TaskGroup7RefreshERKN3gpu21VideoMemoryUsageStatsEN4base9TimeDeltaEl(%"class.task_manager::TaskGroup"*, %"struct.gpu::VideoMemoryUsageStats"* readonly dereferenceable(32), i64, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::TimeDelta", align 8
  %6 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 0, i32 0
  store i64 %2, i64* %6, align 8
  %7 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 2
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  %10 = and i64 %3, -163838
  %11 = select i1 %9, i64 %3, i64 %10
  %12 = and i64 %11, 25349
  %13 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 7
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 8
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %12, %15
  store i64 %16, i64* %14, align 8
  %17 = trunc i64 %11 to i32
  %18 = tail call zeroext i1 @_ZN12task_manager19TaskManagerObserver24IsResourceRefreshEnabledENS_11RefreshTypeEi(i32 128, i32 %17) #13
  %19 = xor i1 %18, true
  %20 = sext i1 %19 to i64
  %21 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 15
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 16
  store i64 0, i64* %22, align 8
  %23 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 6, i32 0, i32 0
  %24 = load %"class.task_manager::Task"**, %"class.task_manager::Task"*** %23, align 8
  %25 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 6, i32 0, i32 1
  %26 = load %"class.task_manager::Task"**, %"class.task_manager::Task"*** %25, align 8
  %27 = icmp eq %"class.task_manager::Task"** %24, %26
  br i1 %27, label %28, label %30

28:                                               ; preds = %51, %4
  %29 = call zeroext i1 @_ZN12task_manager19TaskManagerObserver24IsResourceRefreshEnabledENS_11RefreshTypeEi(i32 8, i32 %17) #13
  br i1 %29, label %54, label %96

30:                                               ; preds = %4, %51
  %31 = phi %"class.task_manager::Task"** [ %52, %51 ], [ %24, %4 ]
  %32 = load %"class.task_manager::Task"*, %"class.task_manager::Task"** %31, align 8
  %33 = bitcast %"class.task_manager::Task"* %32 to void (%"class.task_manager::Task"*, %"class.base::TimeDelta"*, i64)***
  %34 = load void (%"class.task_manager::Task"*, %"class.base::TimeDelta"*, i64)**, void (%"class.task_manager::Task"*, %"class.base::TimeDelta"*, i64)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.task_manager::Task"*, %"class.base::TimeDelta"*, i64)*, void (%"class.task_manager::Task"*, %"class.base::TimeDelta"*, i64)** %34, i64 5
  %36 = load void (%"class.task_manager::Task"*, %"class.base::TimeDelta"*, i64)*, void (%"class.task_manager::Task"*, %"class.base::TimeDelta"*, i64)** %35, align 8
  call void %36(%"class.task_manager::Task"* %32, %"class.base::TimeDelta"* nonnull dereferenceable(8) %5, i64 %11) #13
  br i1 %18, label %37, label %51

37:                                               ; preds = %30
  %38 = bitcast %"class.task_manager::Task"* %32 to i64 (%"class.task_manager::Task"*)***
  %39 = load i64 (%"class.task_manager::Task"*)**, i64 (%"class.task_manager::Task"*)*** %38, align 8
  %40 = getelementptr inbounds i64 (%"class.task_manager::Task"*)*, i64 (%"class.task_manager::Task"*)** %39, i64 19
  %41 = load i64 (%"class.task_manager::Task"*)*, i64 (%"class.task_manager::Task"*)** %40, align 8
  %42 = call i64 %41(%"class.task_manager::Task"* %32) #13
  %43 = load i64, i64* %21, align 8
  %44 = add nsw i64 %43, %42
  store i64 %44, i64* %21, align 8
  %45 = load i64 (%"class.task_manager::Task"*)**, i64 (%"class.task_manager::Task"*)*** %38, align 8
  %46 = getelementptr inbounds i64 (%"class.task_manager::Task"*)*, i64 (%"class.task_manager::Task"*)** %45, i64 20
  %47 = load i64 (%"class.task_manager::Task"*)*, i64 (%"class.task_manager::Task"*)** %46, align 8
  %48 = call i64 %47(%"class.task_manager::Task"* %32) #13
  %49 = load i64, i64* %22, align 8
  %50 = add nsw i64 %49, %48
  store i64 %50, i64* %22, align 8
  br label %51

51:                                               ; preds = %37, %30
  %52 = getelementptr inbounds %"class.task_manager::Task"*, %"class.task_manager::Task"** %31, i64 1
  %53 = icmp eq %"class.task_manager::Task"** %52, %26
  br i1 %53, label %28, label %30

54:                                               ; preds = %28
  %55 = getelementptr inbounds %"struct.gpu::VideoMemoryUsageStats", %"struct.gpu::VideoMemoryUsageStats"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %56 = bitcast %"class.std::__1::__tree_end_node"* %55 to %"class.std::__1::__tree_node"**
  %57 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node"* %57, null
  br i1 %58, label %83, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 1
  %61 = load i32, i32* %60, align 4
  br label %62

62:                                               ; preds = %62, %59
  %63 = phi %"class.std::__1::__tree_end_node"* [ %55, %59 ], [ %73, %62 ]
  %64 = phi %"class.std::__1::__tree_node"* [ %57, %59 ], [ %74, %62 ]
  %65 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %64, i64 0, i32 2, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp slt i32 %66, %61
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %64, i64 0, i32 0, i32 1
  %69 = bitcast %"class.std::__1::__tree_node_base"** %68 to %"class.std::__1::__tree_node"**
  %70 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %64, i64 0, i32 0, i32 0
  %71 = bitcast %"class.std::__1::__tree_node"* %64 to %"class.std::__1::__tree_node"**
  %72 = select i1 %67, %"class.std::__1::__tree_node"** %69, %"class.std::__1::__tree_node"** %71
  %73 = select i1 %67, %"class.std::__1::__tree_end_node"* %63, %"class.std::__1::__tree_end_node"* %70
  %74 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %72, align 8
  %75 = icmp eq %"class.std::__1::__tree_node"* %74, null
  br i1 %75, label %76, label %62

76:                                               ; preds = %62
  %77 = icmp eq %"class.std::__1::__tree_end_node"* %73, %55
  br i1 %77, label %83, label %78

78:                                               ; preds = %76
  %79 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 4
  %80 = bitcast %"class.std::__1::__tree_end_node"* %79 to i32*
  %81 = load i32, i32* %80, align 4
  %82 = icmp slt i32 %61, %81
  br i1 %82, label %83, label %85

83:                                               ; preds = %78, %76, %54
  %84 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 14
  store i64 -1, i64* %84, align 8
  br label %93

85:                                               ; preds = %78
  %86 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 5
  %87 = bitcast %"class.std::__1::__tree_end_node"* %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 14
  store i64 %88, i64* %89, align 8
  %90 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 6
  %91 = bitcast %"class.std::__1::__tree_end_node"* %90 to i8*
  %92 = load i8, i8* %91, align 8, !range !2
  br label %93

93:                                               ; preds = %83, %85
  %94 = phi i8 [ %92, %85 ], [ 0, %83 ]
  %95 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 20
  store i8 %94, i8* %95, align 4
  br label %96

96:                                               ; preds = %93, %28
  %97 = call zeroext i1 @_ZN12task_manager19TaskManagerObserver24IsResourceRefreshEnabledENS_11RefreshTypeEi(i32 256, i32 %17) #13
  br i1 %97, label %98, label %106

98:                                               ; preds = %96
  %99 = load %"class.task_manager::Task"**, %"class.task_manager::Task"*** %23, align 8
  %100 = load %"class.task_manager::Task"*, %"class.task_manager::Task"** %99, align 8
  %101 = bitcast %"class.task_manager::Task"* %100 to i32 (%"class.task_manager::Task"*)***
  %102 = load i32 (%"class.task_manager::Task"*)**, i32 (%"class.task_manager::Task"*)*** %101, align 8
  %103 = getelementptr inbounds i32 (%"class.task_manager::Task"*)*, i32 (%"class.task_manager::Task"*)** %102, i64 7
  %104 = load i32 (%"class.task_manager::Task"*)*, i32 (%"class.task_manager::Task"*)** %103, align 8
  %105 = call i32 %104(%"class.task_manager::Task"* %100) #13
  call void @_ZN12task_manager9TaskGroup24RefreshNaClDebugStubPortEi(%"class.task_manager::TaskGroup"* %0, i32 %105)
  br label %106

106:                                              ; preds = %98, %96
  %107 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 5, i32 0
  %108 = load %"class.task_manager::SharedSampler"*, %"class.task_manager::SharedSampler"** %107, align 8
  %109 = call i64 @_ZNK12task_manager13SharedSampler17GetSupportedFlagsEv(%"class.task_manager::SharedSampler"* %108) #13
  %110 = and i64 %109, %11
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %117, label %112

112:                                              ; preds = %106
  %113 = load %"class.task_manager::SharedSampler"*, %"class.task_manager::SharedSampler"** %107, align 8
  %114 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 1
  %115 = load i32, i32* %114, align 4
  call void @_ZN12task_manager13SharedSampler7RefreshEil(%"class.task_manager::SharedSampler"* %113, i32 %115, i64 %110) #13
  %116 = xor i64 %110, %11
  br label %117

117:                                              ; preds = %106, %112
  %118 = phi i64 [ %116, %112 ], [ %11, %106 ]
  %119 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 4, i32 0
  %120 = load %"class.task_manager::TaskGroupSampler"*, %"class.task_manager::TaskGroupSampler"** %119, align 8
  %121 = icmp eq %"class.task_manager::TaskGroupSampler"* %120, null
  br i1 %121, label %123, label %122

122:                                              ; preds = %117
  call void @_ZN12task_manager16TaskGroupSampler7RefreshEl(%"class.task_manager::TaskGroupSampler"* nonnull %120, i64 %118) #13
  br label %123

123:                                              ; preds = %117, %122
  ret void
}

declare zeroext i1 @_ZN12task_manager19TaskManagerObserver24IsResourceRefreshEnabledENS_11RefreshTypeEi(i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager9TaskGroup16RefreshGpuMemoryERKN3gpu21VideoMemoryUsageStatsE(%"class.task_manager::TaskGroup"* nocapture, %"struct.gpu::VideoMemoryUsageStats"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.gpu::VideoMemoryUsageStats", %"struct.gpu::VideoMemoryUsageStats"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %31, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  br label %10

10:                                               ; preds = %10, %7
  %11 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %21, %10 ]
  %12 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %22, %10 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 2, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %14, %9
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::__tree_node_base"** %16 to %"class.std::__1::__tree_node"**
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  %19 = bitcast %"class.std::__1::__tree_node"* %12 to %"class.std::__1::__tree_node"**
  %20 = select i1 %15, %"class.std::__1::__tree_node"** %17, %"class.std::__1::__tree_node"** %19
  %21 = select i1 %15, %"class.std::__1::__tree_end_node"* %11, %"class.std::__1::__tree_end_node"* %18
  %22 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %20, align 8
  %23 = icmp eq %"class.std::__1::__tree_node"* %22, null
  br i1 %23, label %24, label %10

24:                                               ; preds = %10
  %25 = icmp eq %"class.std::__1::__tree_end_node"* %21, %3
  br i1 %25, label %31, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 4
  %28 = bitcast %"class.std::__1::__tree_end_node"* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = icmp slt i32 %9, %29
  br i1 %30, label %31, label %33

31:                                               ; preds = %26, %24, %2
  %32 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 14
  store i64 -1, i64* %32, align 8
  br label %41

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 5
  %35 = bitcast %"class.std::__1::__tree_end_node"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 14
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 6
  %39 = bitcast %"class.std::__1::__tree_end_node"* %38 to i8*
  %40 = load i8, i8* %39, align 8, !range !2
  br label %41

41:                                               ; preds = %33, %31
  %42 = phi i8 [ %40, %33 ], [ 0, %31 ]
  %43 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 20
  store i8 %42, i8* %43, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager9TaskGroup24RefreshNaClDebugStubPortEi(%"class.task_manager::TaskGroup"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.119", align 8
  %4 = alloca %"class.base::OnceCallback.119", align 8
  %5 = alloca %"class.base::internal::WeakReference", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.base::OnceCallback.42", align 8
  %9 = alloca %"class.base::WeakPtr", align 8
  %10 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features16kProcessHostOnUIE) #13
  br i1 %10, label %11, label %27

11:                                               ; preds = %2
  %12 = tail call %"class.nacl::NaClBrowser"* @_ZN4nacl11NaClBrowser11GetInstanceEv() #13
  %13 = tail call i32 @_ZN4nacl11NaClBrowser26GetProcessGdbDebugStubPortEi(%"class.nacl::NaClBrowser"* %12, i32 %1) #13
  %14 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 17
  store i32 %13, i32* %14, align 8
  %15 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 8
  %16 = load i64, i64* %15, align 8
  %17 = or i64 %16, 256
  store i64 %17, i64* %15, align 8
  %18 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 7
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, %17
  br i1 %20, label %21, label %95

21:                                               ; preds = %11
  %22 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %23 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %22, align 8
  %24 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %23, i64 0, i32 1
  %25 = bitcast void ()** %24 to void (%"class.base::internal::BindStateBase"*)**
  %26 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %25, align 8
  tail call void %26(%"class.base::internal::BindStateBase"* %23) #13
  br label %95

27:                                               ; preds = %2
  %28 = tail call %"class.base::SingleThreadTaskRunner"* @_ZN7content21GetIOThreadTaskRunnerERKNS_17BrowserTaskTraitsE(%"class.content::BrowserTaskTraits"* dereferenceable(15) bitcast ({ %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 }* @.ref.tmp to %"class.content::BrowserTaskTraits"*)) #13
  %29 = bitcast %"class.base::SingleThreadTaskRunner"* %28 to %"class.base::TaskRunner"*
  %30 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #13
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.1, i64 0, i64 0), i32 313) #13
  %31 = call i8* @_Znwm(i64 48) #14, !noalias !50
  %32 = bitcast i8* %31 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %32, void ()* bitcast (i32 (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFiiEJiEEEFivEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFiiEJiEE7DestroyEPKNS0_13BindStateBaseE) #13, !noalias !50
  %33 = getelementptr inbounds i8, i8* %31, i64 32
  %34 = bitcast i8* %33 to i64*
  store i64 ptrtoint (i32 (i32)* @_ZN12task_manager12_GLOBAL__N_135GetNaClDebugStubPortOnProcessThreadEi to i64), i64* %34, align 8, !noalias !50
  %35 = getelementptr inbounds i8, i8* %31, i64 40
  %36 = bitcast i8* %35 to i32*
  store i32 %1, i32* %36, align 4, !noalias !50
  %37 = bitcast %"class.base::WeakPtr"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #13
  %38 = bitcast %"class.base::internal::WeakReference"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #13, !noalias !55
  %39 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 22, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %5, %"class.base::internal::WeakReferenceOwner"* %39) #13, !noalias !55
  %40 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 22, i32 0, i32 1
  %41 = load i64, i64* %40, align 8, !noalias !55
  %42 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %9, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %42, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %5, i64 %41) #13
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #13, !noalias !55
  %43 = call i8* @_Znwm(i64 64) #14, !noalias !58
  %44 = bitcast i8* %43 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %44, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN12task_manager9TaskGroupEFviEJNS_7WeakPtrIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN12task_manager9TaskGroupEFviEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN12task_manager9TaskGroupEFviEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #13, !noalias !58
  %45 = getelementptr inbounds i8, i8* %43, i64 32
  %46 = bitcast i8* %45 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.task_manager::TaskGroup"*, i32)* @_ZN12task_manager9TaskGroup30OnRefreshNaClDebugStubPortDoneEi to i64), i64 0>, <2 x i64>* %46, align 8, !noalias !58
  %47 = getelementptr inbounds i8, i8* %43, i64 48
  %48 = bitcast i8* %47 to %"class.base::internal::WeakReference"*
  %49 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %9, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %48, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %49) #13, !noalias !58
  %50 = getelementptr inbounds i8, i8* %43, i64 56
  %51 = bitcast i8* %50 to i64*
  %52 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %9, i64 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8, !noalias !58
  store i64 %53, i64* %51, align 8, !noalias !58
  %54 = bitcast %"class.base::OnceCallback.119"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54)
  %55 = bitcast %"class.base::OnceCallback.119"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55)
  %56 = call i8* @_Znwm(i64 8) #14
  %57 = bitcast i8* %56 to i64*
  store i64 0, i64* %57, align 8
  %58 = ptrtoint i8* %56 to i64
  %59 = call i8* @_Znwm(i64 56) #14, !noalias !63
  %60 = bitcast i8* %59 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %60, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFivEEEPNSt3__110unique_ptrIiNS6_14default_deleteIiEEEEEJS5_SB_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFivEEEPNSt3__110unique_ptrIiNS5_14default_deleteIiEEEEEJS4_SA_EE7DestroyEPKNS0_13BindStateBaseE) #13, !noalias !63
  %61 = getelementptr inbounds i8, i8* %59, i64 32
  %62 = bitcast i8* %61 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback"*, %"class.std::__1::unique_ptr.143"*)* @_ZN4base8internal20ReturnAsParamAdapterIiEEvNS_12OnceCallbackIFT_vEEEPNSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEE to i64), i64* %62, align 8, !noalias !63
  %63 = getelementptr inbounds i8, i8* %59, i64 40
  %64 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0, i32 0, i32 0
  %65 = ptrtoint i8* %31 to i64
  %66 = bitcast i8* %63 to i64*
  store i64 %65, i64* %66, align 8, !noalias !63
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %64, align 8, !noalias !63
  %67 = getelementptr inbounds i8, i8* %59, i64 48
  %68 = bitcast i8* %67 to i64*
  store i64 %58, i64* %68, align 8, !noalias !63
  %69 = bitcast %"class.base::OnceCallback.119"* %3 to i8**
  store i8* %59, i8** %69, align 8, !alias.scope !63
  %70 = call i8* @_Znwm(i64 56) #14, !noalias !68
  %71 = bitcast i8* %70 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %71, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFviEEEPNSt3__110unique_ptrIiNS6_14default_deleteIiEEEEEJS5_NS0_12OwnedWrapperISA_NS8_ISA_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFviEEEPNSt3__110unique_ptrIiNS5_14default_deleteIiEEEEEJS4_NS0_12OwnedWrapperIS9_NS7_IS9_EEEEEE7DestroyEPKNS0_13BindStateBaseE) #13, !noalias !68
  %72 = getelementptr inbounds i8, i8* %70, i64 32
  %73 = bitcast i8* %72 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.42"*, %"class.std::__1::unique_ptr.143"*)* @_ZN4base8internal12ReplyAdapterIiiEEvNS_12OnceCallbackIFvT0_EEEPNSt3__110unique_ptrIT_NS6_14default_deleteIS8_EEEE to i64), i64* %73, align 8, !noalias !68
  %74 = getelementptr inbounds i8, i8* %70, i64 40
  %75 = getelementptr inbounds %"class.base::OnceCallback.42", %"class.base::OnceCallback.42"* %8, i64 0, i32 0, i32 0, i32 0
  %76 = ptrtoint i8* %43 to i64
  %77 = bitcast i8* %74 to i64*
  store i64 %76, i64* %77, align 8, !noalias !68
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %75, align 8, !noalias !68
  %78 = getelementptr inbounds i8, i8* %70, i64 48
  %79 = bitcast i8* %78 to i64*
  store i64 %58, i64* %79, align 8, !noalias !68
  %80 = bitcast %"class.base::OnceCallback.119"* %4 to i8**
  store i8* %70, i8** %80, align 8, !alias.scope !68
  %81 = call zeroext i1 @_ZN4base10TaskRunner16PostTaskAndReplyERKNS_8LocationENS_12OnceCallbackIFvvEEES6_(%"class.base::TaskRunner"* %29, %"class.base::Location"* nonnull dereferenceable(32) %6, %"class.base::OnceCallback.119"* nonnull %3, %"class.base::OnceCallback.119"* nonnull %4) #13
  %82 = getelementptr inbounds %"class.base::OnceCallback.119", %"class.base::OnceCallback.119"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %82) #13
  %83 = getelementptr inbounds %"class.base::OnceCallback.119", %"class.base::OnceCallback.119"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %83) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55)
  %84 = getelementptr inbounds %"class.base::OnceCallback.42", %"class.base::OnceCallback.42"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %84) #13
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %42) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #13
  %85 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %85) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #13
  %86 = icmp eq %"class.base::SingleThreadTaskRunner"* %28, null
  br i1 %86, label %95, label %87

87:                                               ; preds = %27
  %88 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %28, i64 0, i32 0, i32 0, i32 1
  %89 = getelementptr inbounds %"class.base::RefCountedThreadSafe.5", %"class.base::RefCountedThreadSafe.5"* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = atomicrmw sub i32* %89, i32 1 acq_rel
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %92, label %95

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.base::RefCountedThreadSafe.5", %"class.base::RefCountedThreadSafe.5"* %88, i64 -2
  %94 = bitcast %"class.base::RefCountedThreadSafe.5"* %93 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %94) #13
  br label %95

95:                                               ; preds = %92, %87, %27, %21, %11
  ret void
}

declare i64 @_ZNK12task_manager13SharedSampler17GetSupportedFlagsEv(%"class.task_manager::SharedSampler"*) local_unnamed_addr #2

declare void @_ZN12task_manager13SharedSampler7RefreshEil(%"class.task_manager::SharedSampler"*, i32, i64) local_unnamed_addr #2

declare void @_ZN12task_manager16TaskGroupSampler7RefreshEl(%"class.task_manager::TaskGroupSampler"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"class.task_manager::Task"* @_ZNK12task_manager9TaskGroup11GetTaskByIdEl(%"class.task_manager::TaskGroup"* nocapture readonly, i64) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 6, i32 0, i32 0
  %4 = load %"class.task_manager::Task"**, %"class.task_manager::Task"*** %3, align 8
  %5 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 6, i32 0, i32 1
  %6 = load %"class.task_manager::Task"**, %"class.task_manager::Task"*** %5, align 8
  %7 = icmp eq %"class.task_manager::Task"** %4, %6
  br i1 %7, label %17, label %10

8:                                                ; preds = %10
  %9 = icmp eq %"class.task_manager::Task"** %16, %6
  br i1 %9, label %17, label %10

10:                                               ; preds = %2, %8
  %11 = phi %"class.task_manager::Task"** [ %16, %8 ], [ %4, %2 ]
  %12 = load %"class.task_manager::Task"*, %"class.task_manager::Task"** %11, align 8
  %13 = getelementptr inbounds %"class.task_manager::Task", %"class.task_manager::Task"* %12, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, %1
  %16 = getelementptr inbounds %"class.task_manager::Task"*, %"class.task_manager::Task"** %11, i64 1
  br i1 %15, label %17, label %8

17:                                               ; preds = %8, %10, %2
  %18 = phi %"class.task_manager::Task"* [ null, %2 ], [ %12, %10 ], [ null, %8 ]
  ret %"class.task_manager::Task"* %18
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN12task_manager9TaskGroup39ClearCurrentBackgroundCalculationsFlagsEv(%"class.task_manager::TaskGroup"* nocapture) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 8
  store i64 0, i64* %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK12task_manager9TaskGroup29AreBackgroundCalculationsDoneEv(%"class.task_manager::TaskGroup"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 7
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 8
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %3, %5
  ret i1 %6
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN12task_manager9TaskGroup21RefreshWindowsHandlesEv(%"class.task_manager::TaskGroup"* nocapture) local_unnamed_addr #8 align 2 {
  ret void
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager9TaskGroup30OnRefreshNaClDebugStubPortDoneEi(%"class.task_manager::TaskGroup"* nocapture, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 17
  store i32 %1, i32* %3, align 8
  %4 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 8
  %5 = load i64, i64* %4, align 8
  %6 = or i64 %5, 256
  store i64 %6, i64* %4, align 8
  %7 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 7
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, %6
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %11, align 8
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %12, i64 0, i32 1
  %14 = bitcast void ()** %13 to void (%"class.base::internal::BindStateBase"*)**
  %15 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %14, align 8
  tail call void %15(%"class.base::internal::BindStateBase"* %12) #13
  br label %16

16:                                               ; preds = %2, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN12task_manager12_GLOBAL__N_135GetNaClDebugStubPortOnProcessThreadEi(i32) #0 {
  %2 = tail call %"class.nacl::NaClBrowser"* @_ZN4nacl11NaClBrowser11GetInstanceEv() #13
  %3 = tail call i32 @_ZN4nacl11NaClBrowser26GetProcessGdbDebugStubPortEi(%"class.nacl::NaClBrowser"* %2, i32 %0) #13
  ret i32 %3
}

declare %"class.base::SingleThreadTaskRunner"* @_ZN7content21GetIOThreadTaskRunnerERKNS_17BrowserTaskTraitsE(%"class.content::BrowserTaskTraits"* dereferenceable(15)) local_unnamed_addr #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12task_manager9TaskGroup31OnBackgroundRefreshTypeFinishedEl(%"class.task_manager::TaskGroup"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 8
  %4 = load i64, i64* %3, align 8
  %5 = or i64 %4, %1
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 7
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, %5
  br i1 %8, label %9, label %15

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.task_manager::TaskGroup", %"class.task_manager::TaskGroup"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %10, align 8
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %11, i64 0, i32 1
  %13 = bitcast void ()** %12 to void (%"class.base::internal::BindStateBase"*)**
  %14 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %13, align 8
  tail call void %14(%"class.base::internal::BindStateBase"* %11) #13
  br label %15

15:                                               ; preds = %9, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #2

declare %"class.nacl::NaClBrowser"* @_ZN4nacl11NaClBrowser11GetInstanceEv() local_unnamed_addr #2

declare i32 @_ZN4nacl11NaClBrowser26GetProcessGdbDebugStubPortEi(%"class.nacl::NaClBrowser"*, i32) local_unnamed_addr #2

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #2

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN12task_manager16TaskGroupSamplerD1Ev(%"class.task_manager::TaskGroupSampler"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN12task_manager13SharedSamplerD1Ev(%"class.task_manager::SharedSampler"*) unnamed_addr #3

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #3

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN12task_manager9TaskGroupEFvdEJNS_7WeakPtrIS4_EEEEEFvdEE3RunEPNS0_13BindStateBaseEd(%"class.base::internal::BindStateBase"*, double) #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %"class.base::internal::WeakReference"*
  %7 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #13
  br i1 %7, label %8, label %43

8:                                                ; preds = %2
  %9 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 1
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to %"class.task_manager::TaskGroup"**
  %11 = load %"class.task_manager::TaskGroup"*, %"class.task_manager::TaskGroup"** %10, align 8
  %12 = icmp eq %"class.task_manager::TaskGroup"* %11, null
  br i1 %12, label %43, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %17 = bitcast void ()** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #13
  br i1 %19, label %23, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0)) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %23

23:                                               ; preds = %20, %13
  %24 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #13
  %25 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = select i1 %24, i8* %26, i8* null
  %28 = getelementptr inbounds i8, i8* %27, i64 %18
  %29 = bitcast i8* %28 to %"class.task_manager::TaskGroup"*
  %30 = and i64 %15, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %23
  %33 = bitcast i8* %28 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = add i64 %15, -1
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = bitcast i8* %36 to void (%"class.task_manager::TaskGroup"*, double)**
  %38 = load void (%"class.task_manager::TaskGroup"*, double)*, void (%"class.task_manager::TaskGroup"*, double)** %37, align 8
  br label %41

39:                                               ; preds = %23
  %40 = inttoptr i64 %15 to void (%"class.task_manager::TaskGroup"*, double)*
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi void (%"class.task_manager::TaskGroup"*, double)* [ %38, %32 ], [ %40, %39 ]
  call void %42(%"class.task_manager::TaskGroup"* %29, double %1) #13
  br label %43

43:                                               ; preds = %2, %8, %41
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN12task_manager9TaskGroupEFvdEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #13
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #14
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN12task_manager9TaskGroupEFvdEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #13
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.task_manager::TaskGroup"**
  %9 = load %"class.task_manager::TaskGroup"*, %"class.task_manager::TaskGroup"** %8, align 8
  %10 = icmp ne %"class.task_manager::TaskGroup"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #13
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #2

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN12task_manager9TaskGroupEFvlEJNS_7WeakPtrIS4_EEEEEFvlEE3RunEPNS0_13BindStateBaseEl(%"class.base::internal::BindStateBase"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %"class.base::internal::WeakReference"*
  %7 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #13
  br i1 %7, label %8, label %43

8:                                                ; preds = %2
  %9 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 1
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to %"class.task_manager::TaskGroup"**
  %11 = load %"class.task_manager::TaskGroup"*, %"class.task_manager::TaskGroup"** %10, align 8
  %12 = icmp eq %"class.task_manager::TaskGroup"* %11, null
  br i1 %12, label %43, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %17 = bitcast void ()** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #13
  br i1 %19, label %23, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0)) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %23

23:                                               ; preds = %20, %13
  %24 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #13
  %25 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = select i1 %24, i8* %26, i8* null
  %28 = getelementptr inbounds i8, i8* %27, i64 %18
  %29 = bitcast i8* %28 to %"class.task_manager::TaskGroup"*
  %30 = and i64 %15, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %23
  %33 = bitcast i8* %28 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = add i64 %15, -1
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = bitcast i8* %36 to void (%"class.task_manager::TaskGroup"*, i64)**
  %38 = load void (%"class.task_manager::TaskGroup"*, i64)*, void (%"class.task_manager::TaskGroup"*, i64)** %37, align 8
  br label %41

39:                                               ; preds = %23
  %40 = inttoptr i64 %15 to void (%"class.task_manager::TaskGroup"*, i64)*
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi void (%"class.task_manager::TaskGroup"*, i64)* [ %38, %32 ], [ %40, %39 ]
  call void %42(%"class.task_manager::TaskGroup"* %29, i64 %1) #13
  br label %43

43:                                               ; preds = %2, %8, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN12task_manager9TaskGroupEFvlEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #13
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #14
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN12task_manager9TaskGroupEFvlEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #13
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.task_manager::TaskGroup"**
  %9 = load %"class.task_manager::TaskGroup"*, %"class.task_manager::TaskGroup"** %8, align 8
  %10 = icmp ne %"class.task_manager::TaskGroup"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #13
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN12task_manager9TaskGroupEFviEJNS_7WeakPtrIS4_EEEEEFviEE3RunEPNS0_13BindStateBaseEi(%"class.base::internal::BindStateBase"*, i32) #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %"class.base::internal::WeakReference"*
  %7 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #13
  br i1 %7, label %8, label %43

8:                                                ; preds = %2
  %9 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 1
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to %"class.task_manager::TaskGroup"**
  %11 = load %"class.task_manager::TaskGroup"*, %"class.task_manager::TaskGroup"** %10, align 8
  %12 = icmp eq %"class.task_manager::TaskGroup"* %11, null
  br i1 %12, label %43, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %17 = bitcast void ()** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #13
  br i1 %19, label %23, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0)) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %23

23:                                               ; preds = %20, %13
  %24 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #13
  %25 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = select i1 %24, i8* %26, i8* null
  %28 = getelementptr inbounds i8, i8* %27, i64 %18
  %29 = bitcast i8* %28 to %"class.task_manager::TaskGroup"*
  %30 = and i64 %15, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %23
  %33 = bitcast i8* %28 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = add i64 %15, -1
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = bitcast i8* %36 to void (%"class.task_manager::TaskGroup"*, i32)**
  %38 = load void (%"class.task_manager::TaskGroup"*, i32)*, void (%"class.task_manager::TaskGroup"*, i32)** %37, align 8
  br label %41

39:                                               ; preds = %23
  %40 = inttoptr i64 %15 to void (%"class.task_manager::TaskGroup"*, i32)*
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi void (%"class.task_manager::TaskGroup"*, i32)* [ %38, %32 ], [ %40, %39 ]
  call void %42(%"class.task_manager::TaskGroup"* %29, i32 %1) #13
  br label %43

43:                                               ; preds = %2, %8, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN12task_manager9TaskGroupEFviEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #13
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #14
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN12task_manager9TaskGroupEFviEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #13
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.task_manager::TaskGroup"**
  %9 = load %"class.task_manager::TaskGroup"*, %"class.task_manager::TaskGroup"** %8, align 8
  %10 = icmp ne %"class.task_manager::TaskGroup"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #13
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN12task_manager9TaskGroupEFvbEJNS_7WeakPtrIS4_EEEEEFvbEE3RunEPNS0_13BindStateBaseEb(%"class.base::internal::BindStateBase"*, i1 zeroext) #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %"class.base::internal::WeakReference"*
  %7 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #13
  br i1 %7, label %8, label %43

8:                                                ; preds = %2
  %9 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 1
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to %"class.task_manager::TaskGroup"**
  %11 = load %"class.task_manager::TaskGroup"*, %"class.task_manager::TaskGroup"** %10, align 8
  %12 = icmp eq %"class.task_manager::TaskGroup"* %11, null
  br i1 %12, label %43, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %17 = bitcast void ()** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #13
  br i1 %19, label %23, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0)) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %23

23:                                               ; preds = %20, %13
  %24 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #13
  %25 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = select i1 %24, i8* %26, i8* null
  %28 = getelementptr inbounds i8, i8* %27, i64 %18
  %29 = bitcast i8* %28 to %"class.task_manager::TaskGroup"*
  %30 = and i64 %15, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %23
  %33 = bitcast i8* %28 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = add i64 %15, -1
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = bitcast i8* %36 to void (%"class.task_manager::TaskGroup"*, i1)**
  %38 = load void (%"class.task_manager::TaskGroup"*, i1)*, void (%"class.task_manager::TaskGroup"*, i1)** %37, align 8
  br label %41

39:                                               ; preds = %23
  %40 = inttoptr i64 %15 to void (%"class.task_manager::TaskGroup"*, i1)*
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi void (%"class.task_manager::TaskGroup"*, i1)* [ %38, %32 ], [ %40, %39 ]
  call void %42(%"class.task_manager::TaskGroup"* %29, i1 zeroext %1) #13
  br label %43

43:                                               ; preds = %2, %8, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN12task_manager9TaskGroupEFvbEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #13
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #14
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN12task_manager9TaskGroupEFvbEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #13
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.task_manager::TaskGroup"**
  %9 = load %"class.task_manager::TaskGroup"*, %"class.task_manager::TaskGroup"** %8, align 8
  %10 = icmp ne %"class.task_manager::TaskGroup"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #13
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base7ProcessC1EOS0_(%"class.base::Process"*, %"class.base::Process"* dereferenceable(4)) unnamed_addr #2

declare void @_ZN12task_manager16TaskGroupSamplerC1EN4base7ProcessERK13scoped_refptrINS1_19SequencedTaskRunnerEERKNS1_17RepeatingCallbackIFvdEEERKNS8_IFvlEEERKNS8_IFviEEESK_RKNS8_IFvbEEE(%"class.task_manager::TaskGroupSampler"*, %"class.base::Process"*, %class.scoped_refptr.4* dereferenceable(8), %"class.base::RepeatingCallback.6"* dereferenceable(8), %"class.base::RepeatingCallback.7"* dereferenceable(8), %"class.base::RepeatingCallback.8"* dereferenceable(8), %"class.base::RepeatingCallback.8"* dereferenceable(8), %"class.base::RepeatingCallback.9"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN12task_manager9TaskGroupEFvN4absl8optionalINS3_13SharedSampler14SamplingResultEEEEJNS0_17UnretainedWrapperIS4_EEEEEFvS9_EE3RunEPNS0_13BindStateBaseEOS9_(%"class.base::internal::BindStateBase"*, %"class.absl::optional"* dereferenceable(40)) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = bitcast i8* %12 to %"class.task_manager::TaskGroup"*
  %14 = and i64 %8, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %8, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.task_manager::TaskGroup"*, %"class.absl::optional"*)**
  %22 = load void (%"class.task_manager::TaskGroup"*, %"class.absl::optional"*)*, void (%"class.task_manager::TaskGroup"*, %"class.absl::optional"*)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %8 to void (%"class.task_manager::TaskGroup"*, %"class.absl::optional"*)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.task_manager::TaskGroup"*, %"class.absl::optional"*)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.task_manager::TaskGroup"* %13, %"class.absl::optional"* nonnull byval(%"class.absl::optional") align 8 %1) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN12task_manager9TaskGroupEFvN4absl8optionalINS2_13SharedSampler14SamplingResultEEEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #14
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN4base8internal7InvokerINS0_9BindStateIPFiiEJiEEEFivEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = bitcast %"class.base::internal::BindStateBase"* %2 to i32 (i32)**
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to i32*
  %6 = load i32 (i32)*, i32 (i32)** %3, align 8
  %7 = load i32, i32* %5, align 4
  %8 = tail call i32 %6(i32 %7) #13
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFiiEJiEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #14
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN12task_manager9TaskGroupEFviEJNS_7WeakPtrIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi(%"class.base::internal::BindStateBase"*, i32) #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %"class.base::internal::WeakReference"*
  %7 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #13
  br i1 %7, label %8, label %43

8:                                                ; preds = %2
  %9 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 1
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to %"class.task_manager::TaskGroup"**
  %11 = load %"class.task_manager::TaskGroup"*, %"class.task_manager::TaskGroup"** %10, align 8
  %12 = icmp eq %"class.task_manager::TaskGroup"* %11, null
  br i1 %12, label %43, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %17 = bitcast void ()** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #13
  br i1 %19, label %23, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0)) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %23

23:                                               ; preds = %20, %13
  %24 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #13
  %25 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = select i1 %24, i8* %26, i8* null
  %28 = getelementptr inbounds i8, i8* %27, i64 %18
  %29 = bitcast i8* %28 to %"class.task_manager::TaskGroup"*
  %30 = and i64 %15, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %23
  %33 = bitcast i8* %28 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = add i64 %15, -1
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = bitcast i8* %36 to void (%"class.task_manager::TaskGroup"*, i32)**
  %38 = load void (%"class.task_manager::TaskGroup"*, i32)*, void (%"class.task_manager::TaskGroup"*, i32)** %37, align 8
  br label %41

39:                                               ; preds = %23
  %40 = inttoptr i64 %15 to void (%"class.task_manager::TaskGroup"*, i32)*
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi void (%"class.task_manager::TaskGroup"*, i32)* [ %38, %32 ], [ %40, %39 ]
  call void %42(%"class.task_manager::TaskGroup"* %29, i32 %1) #13
  br label %43

43:                                               ; preds = %2, %8, %41
  ret void
}

declare zeroext i1 @_ZN4base10TaskRunner16PostTaskAndReplyERKNS_8LocationENS_12OnceCallbackIFvvEEES6_(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback.119"*, %"class.base::OnceCallback.119"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal20ReturnAsParamAdapterIiEEvNS_12OnceCallbackIFT_vEEEPNSt3__110unique_ptrIS3_NS6_14default_deleteIS3_EEEE(%"class.base::OnceCallback"*, %"class.std::__1::unique_ptr.143"*) #0 comdat {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = tail call i8* @_Znwm(i64 4) #14
  %5 = bitcast i8* %4 to i32*
  %6 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.base::OnceCallback"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %12 = inttoptr i64 %9 to %"class.base::internal::BindStateBase"*
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %12, i64 0, i32 1
  %14 = bitcast void ()** %13 to i32 (%"class.base::internal::BindStateBase"*)**
  %15 = load i32 (%"class.base::internal::BindStateBase"*)*, i32 (%"class.base::internal::BindStateBase"*)** %14, align 8
  %16 = tail call i32 %15(%"class.base::internal::BindStateBase"* %12) #13
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  store i32 %16, i32* %5, align 4
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.143"* %1, i64 0, i32 0, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = bitcast %"class.std::__1::unique_ptr.143"* %1 to i8**
  store i8* %4, i8** %19, align 8
  %20 = icmp eq i32* %18, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %2
  %22 = bitcast i32* %18 to i8*
  call void @_ZdlPv(i8* %22) #14
  br label %23

23:                                               ; preds = %2, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12ReplyAdapterIiiEEvNS_12OnceCallbackIFvT0_EEEPNSt3__110unique_ptrIT_NS6_14default_deleteIS8_EEEE(%"class.base::OnceCallback.42"*, %"class.std::__1::unique_ptr.143"*) #0 comdat {
  %3 = alloca %"class.base::OnceCallback.42", align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.143"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = load i32, i32* %5, align 4
  %7 = bitcast %"class.base::OnceCallback.42"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.base::OnceCallback.42", %"class.base::OnceCallback.42"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::OnceCallback.42"* %0 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::OnceCallback.42"* %3 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %12 = getelementptr inbounds %"class.base::OnceCallback.42", %"class.base::OnceCallback.42"* %3, i64 0, i32 0
  %13 = inttoptr i64 %10 to %"class.base::internal::BindStateBase"*
  %14 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %13, i64 0, i32 1
  %15 = bitcast void ()** %14 to void (%"class.base::internal::BindStateBase"*, i32)**
  %16 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %15, align 8
  tail call void %16(%"class.base::internal::BindStateBase"* %13, i32 %6) #13
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFivEEEPNSt3__110unique_ptrIiNS6_14default_deleteIiEEEEEJS5_SB_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%"class.base::OnceCallback"*, %"class.std::__1::unique_ptr.143"*)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %7 = bitcast void ()** %6 to %"class.std::__1::unique_ptr.143"**
  %8 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #13
  %9 = load void (%"class.base::OnceCallback"*, %"class.std::__1::unique_ptr.143"*)*, void (%"class.base::OnceCallback"*, %"class.std::__1::unique_ptr.143"*)** %4, align 8
  %10 = bitcast void ()** %5 to %"class.base::internal::BindStateBase"**
  %11 = bitcast void ()** %5 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = load %"class.std::__1::unique_ptr.143"*, %"class.std::__1::unique_ptr.143"** %7, align 8
  call void %9(%"class.base::OnceCallback"* nonnull %2, %"class.std::__1::unique_ptr.143"* %14) #13
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFivEEEPNSt3__110unique_ptrIiNS5_14default_deleteIiEEEEEJS4_SA_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #13
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #14
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFviEEEPNSt3__110unique_ptrIiNS6_14default_deleteIiEEEEEJS5_NS0_12OwnedWrapperISA_NS8_ISA_EEEEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.42", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%"class.base::OnceCallback.42"*, %"class.std::__1::unique_ptr.143"*)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %7 = bitcast void ()** %6 to %"class.std::__1::unique_ptr.143"**
  %8 = load %"class.std::__1::unique_ptr.143"*, %"class.std::__1::unique_ptr.143"** %7, align 8
  %9 = bitcast %"class.base::OnceCallback.42"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = load void (%"class.base::OnceCallback.42"*, %"class.std::__1::unique_ptr.143"*)*, void (%"class.base::OnceCallback.42"*, %"class.std::__1::unique_ptr.143"*)** %4, align 8
  %11 = bitcast void ()** %5 to %"class.base::internal::BindStateBase"**
  %12 = bitcast void ()** %5 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback.42"* %2 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  call void %10(%"class.base::OnceCallback.42"* nonnull %2, %"class.std::__1::unique_ptr.143"* %8) #13
  %15 = getelementptr inbounds %"class.base::OnceCallback.42", %"class.base::OnceCallback.42"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFviEEEPNSt3__110unique_ptrIiNS5_14default_deleteIiEEEEEJS4_NS0_12OwnedWrapperIS9_NS7_IS9_EEEEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %20, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.std::__1::unique_ptr.143"**
  %6 = load %"class.std::__1::unique_ptr.143"*, %"class.std::__1::unique_ptr.143"** %5, align 8
  store %"class.std::__1::unique_ptr.143"* null, %"class.std::__1::unique_ptr.143"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.143"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.143"* %6, i64 0, i32 0, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  store i32* null, i32** %9, align 8
  %11 = icmp eq i32* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = bitcast i32* %10 to i8*
  tail call void @_ZdlPv(i8* %13) #14
  br label %14

14:                                               ; preds = %12, %8
  %15 = bitcast %"class.std::__1::unique_ptr.143"* %6 to i8*
  tail call void @_ZdlPv(i8* %15) #14
  br label %16

16:                                               ; preds = %3, %14
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %18 = bitcast void ()** %17 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %18) #13
  %19 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #14
  br label %20

20:                                               ; preds = %16, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4base14WeakPtrFactoryIN12task_manager9TaskGroupEE10GetWeakPtrEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4base14WeakPtrFactoryIN12task_manager9TaskGroupEE10GetWeakPtrEv"}
!6 = !{!7, !9}
!7 = distinct !{!7, !8, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN12task_manager9TaskGroupEFvdEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN12task_manager9TaskGroupEFvdEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!9 = distinct !{!9, !10, !"_ZN4base13BindRepeatingIMN12task_manager9TaskGroupEFvdEJNS_7WeakPtrIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!10 = distinct !{!10, !"_ZN4base13BindRepeatingIMN12task_manager9TaskGroupEFvdEJNS_7WeakPtrIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK4base14WeakPtrFactoryIN12task_manager9TaskGroupEE10GetWeakPtrEv: argument 0"}
!13 = distinct !{!13, !"_ZNK4base14WeakPtrFactoryIN12task_manager9TaskGroupEE10GetWeakPtrEv"}
!14 = !{!15, !17}
!15 = distinct !{!15, !16, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN12task_manager9TaskGroupEFvlEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN12task_manager9TaskGroupEFvlEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!17 = distinct !{!17, !18, !"_ZN4base13BindRepeatingIMN12task_manager9TaskGroupEFvlEJNS_7WeakPtrIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!18 = distinct !{!18, !"_ZN4base13BindRepeatingIMN12task_manager9TaskGroupEFvlEJNS_7WeakPtrIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNK4base14WeakPtrFactoryIN12task_manager9TaskGroupEE10GetWeakPtrEv: argument 0"}
!21 = distinct !{!21, !"_ZNK4base14WeakPtrFactoryIN12task_manager9TaskGroupEE10GetWeakPtrEv"}
!22 = !{!23, !25}
!23 = distinct !{!23, !24, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN12task_manager9TaskGroupEFviEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!24 = distinct !{!24, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN12task_manager9TaskGroupEFviEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!25 = distinct !{!25, !26, !"_ZN4base13BindRepeatingIMN12task_manager9TaskGroupEFviEJNS_7WeakPtrIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!26 = distinct !{!26, !"_ZN4base13BindRepeatingIMN12task_manager9TaskGroupEFviEJNS_7WeakPtrIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNK4base14WeakPtrFactoryIN12task_manager9TaskGroupEE10GetWeakPtrEv: argument 0"}
!29 = distinct !{!29, !"_ZNK4base14WeakPtrFactoryIN12task_manager9TaskGroupEE10GetWeakPtrEv"}
!30 = !{!31, !33}
!31 = distinct !{!31, !32, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN12task_manager9TaskGroupEFviEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!32 = distinct !{!32, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN12task_manager9TaskGroupEFviEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!33 = distinct !{!33, !34, !"_ZN4base13BindRepeatingIMN12task_manager9TaskGroupEFviEJNS_7WeakPtrIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!34 = distinct !{!34, !"_ZN4base13BindRepeatingIMN12task_manager9TaskGroupEFviEJNS_7WeakPtrIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNK4base14WeakPtrFactoryIN12task_manager9TaskGroupEE10GetWeakPtrEv: argument 0"}
!37 = distinct !{!37, !"_ZNK4base14WeakPtrFactoryIN12task_manager9TaskGroupEE10GetWeakPtrEv"}
!38 = !{!39, !41}
!39 = distinct !{!39, !40, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN12task_manager9TaskGroupEFvbEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!40 = distinct !{!40, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN12task_manager9TaskGroupEFvbEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!41 = distinct !{!41, !42, !"_ZN4base13BindRepeatingIMN12task_manager9TaskGroupEFvbEJNS_7WeakPtrIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!42 = distinct !{!42, !"_ZN4base13BindRepeatingIMN12task_manager9TaskGroupEFvbEJNS_7WeakPtrIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!43 = !{!44, !46}
!44 = distinct !{!44, !45, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN12task_manager9TaskGroupEFvN4absl8optionalINS3_13SharedSampler14SamplingResultEEEEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!45 = distinct !{!45, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN12task_manager9TaskGroupEFvN4absl8optionalINS3_13SharedSampler14SamplingResultEEEEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!46 = distinct !{!46, !47, !"_ZN4base13BindRepeatingIMN12task_manager9TaskGroupEFvN4absl8optionalINS1_13SharedSampler14SamplingResultEEEEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINSA_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!47 = distinct !{!47, !"_ZN4base13BindRepeatingIMN12task_manager9TaskGroupEFvN4absl8optionalINS1_13SharedSampler14SamplingResultEEEEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINSA_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!48 = distinct !{!48, !49}
!49 = !{!"llvm.loop.unroll.disable"}
!50 = !{!51, !53}
!51 = distinct !{!51, !52, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFiiEJRiEEEDcOT0_DpOT1_: argument 0"}
!52 = distinct !{!52, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFiiEJRiEEEDcOT0_DpOT1_"}
!53 = distinct !{!53, !54, !"_ZN4base8BindOnceIPFiiEJRiEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS7_DpOS8_: argument 0"}
!54 = distinct !{!54, !"_ZN4base8BindOnceIPFiiEJRiEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS7_DpOS8_"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZNK4base14WeakPtrFactoryIN12task_manager9TaskGroupEE10GetWeakPtrEv: argument 0"}
!57 = distinct !{!57, !"_ZNK4base14WeakPtrFactoryIN12task_manager9TaskGroupEE10GetWeakPtrEv"}
!58 = !{!59, !61}
!59 = distinct !{!59, !60, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN12task_manager9TaskGroupEFviEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!60 = distinct !{!60, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN12task_manager9TaskGroupEFviEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!61 = distinct !{!61, !62, !"_ZN4base8BindOnceIMN12task_manager9TaskGroupEFviEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!62 = distinct !{!62, !"_ZN4base8BindOnceIMN12task_manager9TaskGroupEFviEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!63 = !{!64, !66}
!64 = distinct !{!64, !65, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFivEEEPNSt3__110unique_ptrIiNS5_14default_deleteIiEEEEEJS4_RSA_EEEDcOT0_DpOT1_: argument 0"}
!65 = distinct !{!65, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFivEEEPNSt3__110unique_ptrIiNS5_14default_deleteIiEEEEEJS4_RSA_EEEDcOT0_DpOT1_"}
!66 = distinct !{!66, !67, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFivEEEPNSt3__110unique_ptrIiNS4_14default_deleteIiEEEEEJS3_RS9_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!67 = distinct !{!67, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFivEEEPNSt3__110unique_ptrIiNS4_14default_deleteIiEEEEEJS3_RS9_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!68 = !{!69, !71}
!69 = distinct !{!69, !70, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFviEEEPNSt3__110unique_ptrIiNS5_14default_deleteIiEEEEEJS4_NS0_12OwnedWrapperIS9_NS7_IS9_EEEEEEEDcOT0_DpOT1_: argument 0"}
!70 = distinct !{!70, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFviEEEPNSt3__110unique_ptrIiNS5_14default_deleteIiEEEEEJS4_NS0_12OwnedWrapperIS9_NS7_IS9_EEEEEEEDcOT0_DpOT1_"}
!71 = distinct !{!71, !72, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFviEEEPNSt3__110unique_ptrIiNS4_14default_deleteIiEEEEEJS3_NS_8internal12OwnedWrapperIS8_NS6_IS8_EEEEEEENS1_INSC_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!72 = distinct !{!72, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFviEEEPNSt3__110unique_ptrIiNS4_14default_deleteIiEEEEEJS3_NS_8internal12OwnedWrapperIS8_NS6_IS8_EEEEEEENS1_INSC_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
