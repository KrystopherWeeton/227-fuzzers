; ModuleID = '../../third_party/skia/src/core/SkBlitter.cpp'
source_filename = "../../third_party/skia/src/core/SkBlitter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%class.SkBlitter = type { i32 (...)**, %class.SkAutoMalloc }
%class.SkAutoMalloc = type { %"class.std::__1::unique_ptr", i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%class.SkShaderBlitter = type <{ %class.SkRasterBlitter, i32, [4 x i8], %class.SkShader*, %"class.SkShaderBase::Context"*, i8, [7 x i8] }>
%class.SkRasterBlitter = type { %class.SkBlitter, %class.SkPixmap }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.SkShaderBase::Context" = type <{ i32 (...)**, %class.SkShaderBase*, %class.SkMatrix, %class.SkMatrix, i8, [7 x i8] }>
%class.SkShaderBase = type { %class.SkShader.base, %class.SkMatrix, [4 x i8] }
%class.SkShader.base = type { %class.SkFlattenable.base }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkMask = type <{ i8*, %struct.SkIRect, i32, i8, [3 x i8] }>
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.SkAutoSTMalloc = type { i16*, %union.anon }
%union.anon = type { [32 x i32] }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type { %"struct.std::__1::atomic", i32, i32, i32 }
%"class.SkRegion::Cliperator" = type <{ %"class.SkRegion::Iterator", %struct.SkIRect, %struct.SkIRect, i8, [7 x i8] }>
%"class.SkRegion::Iterator" = type <{ %class.SkRegion*, i32*, %struct.SkIRect, i8, [7 x i8] }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, %struct.SkIRect*)* }
%class.SkNullBlitter = type { %class.SkBlitter }
%class.SkRectClipBlitter = type { %class.SkBlitter, %class.SkBlitter*, %struct.SkIRect }
%class.SkRgnClipBlitter = type { %class.SkBlitter, %class.SkBlitter*, %class.SkRegion* }
%"class.SkRegion::Spanerator" = type <{ i32*, i32, i32, i8, [7 x i8] }>
%class.SkBlitterClipper = type { %class.SkNullBlitter, %class.SkRectClipBlitter, %class.SkRgnClipBlitter }
%class.SkPaint = type <{ %class.sk_sp.7, %class.sk_sp.8, %class.sk_sp.9, %class.sk_sp.10, %class.sk_sp.11, %struct.SkRGBA4f, float, float, %union.anon.12, [4 x i8] }>
%class.sk_sp.7 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.8 = type { %class.SkShader* }
%class.sk_sp.9 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.10 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.11 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon.12 = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkMaskFilterBase = type { %class.SkMaskFilter.base, [4 x i8] }
%class.SkMaskFilter.base = type { %class.SkFlattenable.base }
%class.SkMatrixProvider = type { i32 (...)**, %class.SkM44, %class.SkMatrix }
%class.SkM44 = type { [16 x float] }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%class.SkTCopyOnFirstWrite = type { %class.SkPaint*, %class.SkTLazy }
%class.SkTLazy = type { [72 x i8], %class.SkPaint* }
%class.anon.13 = type { %class.SkPixmap*, %class.SkTCopyOnFirstWrite*, %class.SkMatrixProvider*, %class.SkArenaAlloc**, %class.sk_sp.8* }
%"struct.SkShaderBase::ContextRec" = type <{ %class.SkMatrix*, %class.SkMatrix*, i32, [4 x i8], %class.SkColorSpace*, i8, i8, [6 x i8] }>
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkA8_Coverage_Blitter = type { %class.SkRasterBlitter }
%class.SkARGB32_Shader_Blitter = type <{ %class.SkShaderBlitter.base, [7 x i8], %class.SkXfermode*, i32*, void (i32*, i32*, i32, i32)*, void (i32*, i32*, i32, i32)*, i8, [7 x i8] }>
%class.SkShaderBlitter.base = type <{ %class.SkRasterBlitter, i32, [4 x i8], %class.SkShader*, %"class.SkShaderBase::Context"*, i8 }>
%class.SkXfermode = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkARGB32_Blitter = type { %class.SkRasterBlitter, i32, i32, i32, i32, i32, i32 }
%class.SkRGB565_Shader_Blitter = type { %class.SkShaderBlitter.base, i32*, void (i16*, i32*, i32, i8)*, void (i16*, i32*, i32, i8)* }
%class.SkARGB32_Black_Blitter = type { %class.SkARGB32_Opaque_Blitter }
%class.SkARGB32_Opaque_Blitter = type { %class.SkARGB32_Blitter }

$_ZN9SkBlitter10blitAntiH2Eiijj = comdat any

$_ZN9SkBlitter10blitAntiV2Eiijj = comdat any

$_ZNK9SkBlitter20requestRowsPreservedEv = comdat any

$_ZN9SkBlitter15allocBlitMemoryEm = comdat any

$_ZN13SkNullBlitterD0Ev = comdat any

$_ZN17SkRectClipBlitterD0Ev = comdat any

$_ZNK17SkRectClipBlitter20requestRowsPreservedEv = comdat any

$_ZN17SkRectClipBlitter15allocBlitMemoryEm = comdat any

$_ZN16SkRgnClipBlitterD0Ev = comdat any

$_ZNK16SkRgnClipBlitter20requestRowsPreservedEv = comdat any

$_ZN16SkRgnClipBlitter15allocBlitMemoryEm = comdat any

$_ZN15SkRasterBlitterD2Ev = comdat any

$_ZN15SkRasterBlitterD0Ev = comdat any

$_ZZN12SkArenaAlloc4makeIZNS_4makeI13SkNullBlitterJEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS3_ENUlPcE_8__invokeESC_ = comdat any

$_ZZN12SkArenaAlloc4makeIZNS_4makeI21SkA8_Coverage_BlitterJRK8SkPixmapRK7SkPaintEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS9_ENUlPcE_8__invokeESI_ = comdat any

$_ZZN12SkArenaAlloc4makeIZNS_4makeI23SkARGB32_Shader_BlitterJRK8SkPixmapRK7SkPaintRPN12SkShaderBase7ContextEEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOSD_ENUlPcE_8__invokeESM_ = comdat any

$_ZZN12SkArenaAlloc4makeIZNS_4makeI22SkARGB32_Black_BlitterJRK8SkPixmapRK7SkPaintEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS9_ENUlPcE_8__invokeESI_ = comdat any

$_ZZN12SkArenaAlloc4makeIZNS_4makeI23SkARGB32_Opaque_BlitterJRK8SkPixmapRK7SkPaintEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS9_ENUlPcE_8__invokeESI_ = comdat any

$_ZZN12SkArenaAlloc4makeIZNS_4makeI16SkARGB32_BlitterJRK8SkPixmapRK7SkPaintEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS9_ENUlPcE_8__invokeESI_ = comdat any

$_ZZN12SkArenaAlloc4makeIZNS_4makeI23SkRGB565_Shader_BlitterJRK8SkPixmapRK7SkPaintRPN12SkShaderBase7ContextEEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOSD_ENUlPcE_8__invokeESM_ = comdat any

$_ZTV15SkRasterBlitter = comdat any

@gUseSkVMBlitter = hidden local_unnamed_addr global i8 0, align 1
@gSkForceRasterPipelineBlitter = hidden local_unnamed_addr global i8 0, align 1
@_ZTV9SkBlitter = hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkBlitter*)* @_ZN9SkBlitterD2Ev to i8*), i8* bitcast (void (%class.SkBlitter*)* @_ZN9SkBlitterD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i8)* @_ZN9SkBlitter5blitVEiiih to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter8blitRectEiiii to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)* @_ZN9SkBlitter12blitAntiRectEiiiihh to i8*), i8* bitcast (void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)* @_ZN9SkBlitter8blitMaskERK6SkMaskRK7SkIRect to i8*), i8* bitcast (%class.SkPixmap* (%class.SkBlitter*, i32*)* @_ZN9SkBlitter17justAnOpaqueColorEPj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiH2Eiijj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiV2Eiijj to i8*), i8* bitcast (i1 (%class.SkBlitter*)* @_ZNK9SkBlitter13isNullBlitterEv to i8*), i8* bitcast (i32 (%class.SkBlitter*)* @_ZNK9SkBlitter20requestRowsPreservedEv to i8*), i8* bitcast (i8* (%class.SkBlitter*, i64)* @_ZN9SkBlitter15allocBlitMemoryEm to i8*)] }, align 8
@_ZTV15SkShaderBlitter = hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkShaderBlitter*)* @_ZN15SkShaderBlitterD2Ev to i8*), i8* bitcast (void (%class.SkShaderBlitter*)* @_ZN15SkShaderBlitterD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i8)* @_ZN9SkBlitter5blitVEiiih to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter8blitRectEiiii to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)* @_ZN9SkBlitter12blitAntiRectEiiiihh to i8*), i8* bitcast (void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)* @_ZN9SkBlitter8blitMaskERK6SkMaskRK7SkIRect to i8*), i8* bitcast (%class.SkPixmap* (%class.SkBlitter*, i32*)* @_ZN9SkBlitter17justAnOpaqueColorEPj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiH2Eiijj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiV2Eiijj to i8*), i8* bitcast (i1 (%class.SkBlitter*)* @_ZNK9SkBlitter13isNullBlitterEv to i8*), i8* bitcast (i32 (%class.SkBlitter*)* @_ZNK9SkBlitter20requestRowsPreservedEv to i8*), i8* bitcast (i8* (%class.SkBlitter*, i64)* @_ZN9SkBlitter15allocBlitMemoryEm to i8*)] }, align 8
@_ZTV13SkNullBlitter = hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkBlitter*)* @_ZN9SkBlitterD2Ev to i8*), i8* bitcast (void (%class.SkNullBlitter*)* @_ZN13SkNullBlitterD0Ev to i8*), i8* bitcast (void (%class.SkNullBlitter*, i32, i32, i32)* @_ZN13SkNullBlitter5blitHEiii to i8*), i8* bitcast (void (%class.SkNullBlitter*, i32, i32, i8*, i16*)* @_ZN13SkNullBlitter9blitAntiHEiiPKhPKs to i8*), i8* bitcast (void (%class.SkNullBlitter*, i32, i32, i32, i8)* @_ZN13SkNullBlitter5blitVEiiih to i8*), i8* bitcast (void (%class.SkNullBlitter*, i32, i32, i32, i32)* @_ZN13SkNullBlitter8blitRectEiiii to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)* @_ZN9SkBlitter12blitAntiRectEiiiihh to i8*), i8* bitcast (void (%class.SkNullBlitter*, %struct.SkMask*, %struct.SkIRect*)* @_ZN13SkNullBlitter8blitMaskERK6SkMaskRK7SkIRect to i8*), i8* bitcast (%class.SkPixmap* (%class.SkNullBlitter*, i32*)* @_ZN13SkNullBlitter17justAnOpaqueColorEPj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiH2Eiijj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiV2Eiijj to i8*), i8* bitcast (i1 (%class.SkNullBlitter*)* @_ZNK13SkNullBlitter13isNullBlitterEv to i8*), i8* bitcast (i32 (%class.SkBlitter*)* @_ZNK9SkBlitter20requestRowsPreservedEv to i8*), i8* bitcast (i8* (%class.SkBlitter*, i64)* @_ZN9SkBlitter15allocBlitMemoryEm to i8*)] }, align 8
@_ZTV17SkRectClipBlitter = hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkBlitter*)* @_ZN9SkBlitterD2Ev to i8*), i8* bitcast (void (%class.SkRectClipBlitter*)* @_ZN17SkRectClipBlitterD0Ev to i8*), i8* bitcast (void (%class.SkRectClipBlitter*, i32, i32, i32)* @_ZN17SkRectClipBlitter5blitHEiii to i8*), i8* bitcast (void (%class.SkRectClipBlitter*, i32, i32, i8*, i16*)* @_ZN17SkRectClipBlitter9blitAntiHEiiPKhPKs to i8*), i8* bitcast (void (%class.SkRectClipBlitter*, i32, i32, i32, i8)* @_ZN17SkRectClipBlitter5blitVEiiih to i8*), i8* bitcast (void (%class.SkRectClipBlitter*, i32, i32, i32, i32)* @_ZN17SkRectClipBlitter8blitRectEiiii to i8*), i8* bitcast (void (%class.SkRectClipBlitter*, i32, i32, i32, i32, i8, i8)* @_ZN17SkRectClipBlitter12blitAntiRectEiiiihh to i8*), i8* bitcast (void (%class.SkRectClipBlitter*, %struct.SkMask*, %struct.SkIRect*)* @_ZN17SkRectClipBlitter8blitMaskERK6SkMaskRK7SkIRect to i8*), i8* bitcast (%class.SkPixmap* (%class.SkRectClipBlitter*, i32*)* @_ZN17SkRectClipBlitter17justAnOpaqueColorEPj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiH2Eiijj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiV2Eiijj to i8*), i8* bitcast (i1 (%class.SkBlitter*)* @_ZNK9SkBlitter13isNullBlitterEv to i8*), i8* bitcast (i32 (%class.SkRectClipBlitter*)* @_ZNK17SkRectClipBlitter20requestRowsPreservedEv to i8*), i8* bitcast (i8* (%class.SkRectClipBlitter*, i64)* @_ZN17SkRectClipBlitter15allocBlitMemoryEm to i8*)] }, align 8
@_ZTV16SkRgnClipBlitter = hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkBlitter*)* @_ZN9SkBlitterD2Ev to i8*), i8* bitcast (void (%class.SkRgnClipBlitter*)* @_ZN16SkRgnClipBlitterD0Ev to i8*), i8* bitcast (void (%class.SkRgnClipBlitter*, i32, i32, i32)* @_ZN16SkRgnClipBlitter5blitHEiii to i8*), i8* bitcast (void (%class.SkRgnClipBlitter*, i32, i32, i8*, i16*)* @_ZN16SkRgnClipBlitter9blitAntiHEiiPKhPKs to i8*), i8* bitcast (void (%class.SkRgnClipBlitter*, i32, i32, i32, i8)* @_ZN16SkRgnClipBlitter5blitVEiiih to i8*), i8* bitcast (void (%class.SkRgnClipBlitter*, i32, i32, i32, i32)* @_ZN16SkRgnClipBlitter8blitRectEiiii to i8*), i8* bitcast (void (%class.SkRgnClipBlitter*, i32, i32, i32, i32, i8, i8)* @_ZN16SkRgnClipBlitter12blitAntiRectEiiiihh to i8*), i8* bitcast (void (%class.SkRgnClipBlitter*, %struct.SkMask*, %struct.SkIRect*)* @_ZN16SkRgnClipBlitter8blitMaskERK6SkMaskRK7SkIRect to i8*), i8* bitcast (%class.SkPixmap* (%class.SkRgnClipBlitter*, i32*)* @_ZN16SkRgnClipBlitter17justAnOpaqueColorEPj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiH2Eiijj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiV2Eiijj to i8*), i8* bitcast (i1 (%class.SkBlitter*)* @_ZNK9SkBlitter13isNullBlitterEv to i8*), i8* bitcast (i32 (%class.SkRgnClipBlitter*)* @_ZNK16SkRgnClipBlitter20requestRowsPreservedEv to i8*), i8* bitcast (i8* (%class.SkRgnClipBlitter*, i64)* @_ZN16SkRgnClipBlitter15allocBlitMemoryEm to i8*)] }, align 8
@_ZN6SkOpts8memset16E = external local_unnamed_addr global void (i16*, i16, i32)*, align 8
@_ZTV15SkRasterBlitter = linkonce_odr hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRasterBlitter*)* @_ZN15SkRasterBlitterD2Ev to i8*), i8* bitcast (void (%class.SkRasterBlitter*)* @_ZN15SkRasterBlitterD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i8)* @_ZN9SkBlitter5blitVEiiih to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter8blitRectEiiii to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)* @_ZN9SkBlitter12blitAntiRectEiiiihh to i8*), i8* bitcast (void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)* @_ZN9SkBlitter8blitMaskERK6SkMaskRK7SkIRect to i8*), i8* bitcast (%class.SkPixmap* (%class.SkBlitter*, i32*)* @_ZN9SkBlitter17justAnOpaqueColorEPj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiH2Eiijj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiV2Eiijj to i8*), i8* bitcast (i1 (%class.SkBlitter*)* @_ZNK9SkBlitter13isNullBlitterEv to i8*), i8* bitcast (i32 (%class.SkBlitter*)* @_ZNK9SkBlitter20requestRowsPreservedEv to i8*), i8* bitcast (i8* (%class.SkBlitter*, i64)* @_ZN9SkBlitter15allocBlitMemoryEm to i8*)] }, comdat, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN9SkBlitter10blitRegionERK8SkRegionE3$_0FvRK7SkIRectEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@_ZTV22SkARGB32_Black_Blitter = external unnamed_addr constant { [16 x i8*] }, align 8
@_ZTV23SkARGB32_Opaque_Blitter = external unnamed_addr constant { [16 x i8*] }, align 8

@_ZN9SkBlitterD1Ev = hidden unnamed_addr alias void (%class.SkBlitter*), void (%class.SkBlitter*)* @_ZN9SkBlitterD2Ev
@_ZN15SkShaderBlitterD1Ev = hidden unnamed_addr alias void (%class.SkShaderBlitter*), void (%class.SkShaderBlitter*)* @_ZN15SkShaderBlitterD2Ev

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN9SkBlitterD0Ev(%class.SkBlitter* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK9SkBlitter13isNullBlitterEv(%class.SkBlitter* nocapture readnone) unnamed_addr #2 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %class.SkPixmap* @_ZN9SkBlitter17justAnOpaqueColorEPj(%class.SkBlitter* nocapture readnone, i32* nocapture readnone) unnamed_addr #2 align 2 {
  ret %class.SkPixmap* null
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkBlitter15blitFatAntiRectERK6SkRect(%class.SkBlitter*, %struct.SkRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = tail call float @llvm.floor.f32(float %4) #11
  %6 = fcmp olt float %5, 0x41DFFFFFE0000000
  %7 = select i1 %6, float %5, float 0x41DFFFFFE0000000
  %8 = fcmp ogt float %7, 0xC1DFFFFFE0000000
  %9 = select i1 %8, float %7, float 0xC1DFFFFFE0000000
  %10 = fptosi float %9 to i32
  %11 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %12 = load float, float* %11, align 4
  %13 = tail call float @llvm.floor.f32(float %12) #11
  %14 = fcmp olt float %13, 0x41DFFFFFE0000000
  %15 = select i1 %14, float %13, float 0x41DFFFFFE0000000
  %16 = fcmp ogt float %15, 0xC1DFFFFFE0000000
  %17 = select i1 %16, float %15, float 0xC1DFFFFFE0000000
  %18 = fptosi float %17 to i32
  %19 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %20 = load float, float* %19, align 4
  %21 = tail call float @llvm.ceil.f32(float %20) #11
  %22 = fcmp olt float %21, 0x41DFFFFFE0000000
  %23 = select i1 %22, float %21, float 0x41DFFFFFE0000000
  %24 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %25 = load float, float* %24, align 4
  %26 = tail call float @llvm.ceil.f32(float %25) #11
  %27 = fcmp olt float %26, 0x41DFFFFFE0000000
  %28 = select i1 %27, float %26, float 0x41DFFFFFE0000000
  %29 = fcmp ogt float %28, 0xC1DFFFFFE0000000
  %30 = select i1 %29, float %28, float 0xC1DFFFFFE0000000
  %31 = fptosi float %30 to i32
  %32 = sub i32 %31, %18
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %152, label %34

34:                                               ; preds = %2
  %35 = fcmp ogt float %23, 0xC1DFFFFFE0000000
  %36 = select i1 %35, float %23, float 0xC1DFFFFFE0000000
  %37 = fptosi float %36 to i32
  %38 = sub i32 %37, %10
  %39 = add nsw i32 %38, 1
  %40 = sext i32 %39 to i64
  %41 = mul nsw i64 %40, 3
  %42 = bitcast %class.SkBlitter* %0 to i8* (%class.SkBlitter*, i64)***
  %43 = load i8* (%class.SkBlitter*, i64)**, i8* (%class.SkBlitter*, i64)*** %42, align 8
  %44 = getelementptr inbounds i8* (%class.SkBlitter*, i64)*, i8* (%class.SkBlitter*, i64)** %43, i64 13
  %45 = load i8* (%class.SkBlitter*, i64)*, i8* (%class.SkBlitter*, i64)** %44, align 8
  %46 = tail call i8* %45(%class.SkBlitter* %0, i64 %41) #11
  %47 = bitcast i8* %46 to i16*
  %48 = getelementptr inbounds i16, i16* %47, i64 %40
  %49 = bitcast i16* %48 to i8*
  store i16 1, i16* %47, align 2
  %50 = trunc i32 %38 to i16
  %51 = add i16 %50, -2
  %52 = getelementptr inbounds i8, i8* %46, i64 2
  %53 = bitcast i8* %52 to i16*
  store i16 %51, i16* %53, align 2
  %54 = add nsw i32 %38, -1
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i16, i16* %47, i64 %55
  store i16 1, i16* %56, align 2
  %57 = sext i32 %38 to i64
  %58 = getelementptr inbounds i16, i16* %47, i64 %57
  store i16 0, i16* %58, align 2
  %59 = add nsw i32 %10, 1
  %60 = sitofp i32 %59 to float
  %61 = load float, float* %19, align 4
  %62 = add nsw i32 %37, -1
  %63 = sitofp i32 %62 to float
  %64 = fsub float %61, %63
  %65 = add nsw i32 %18, 1
  %66 = sitofp i32 %65 to float
  %67 = bitcast %struct.SkRect* %1 to <2 x float>*
  %68 = load <2 x float>, <2 x float>* %67, align 4
  %69 = load float, float* %24, align 4
  %70 = add nsw i32 %31, -1
  %71 = sitofp i32 %70 to float
  %72 = fsub float %69, %71
  %73 = icmp eq i32 %32, 1
  %74 = select i1 %73, float %69, float %66
  %75 = insertelement <2 x float> undef, float %60, i32 0
  %76 = insertelement <2 x float> %75, float %74, i32 1
  %77 = fsub <2 x float> %76, %68
  %78 = extractelement <2 x float> %77, i32 0
  %79 = extractelement <2 x float> %77, i32 1
  %80 = fmul float %78, %79
  %81 = fmul float %80, 2.550000e+02
  %82 = fptoui float %81 to i8
  %83 = icmp ugt i8 %82, -9
  %84 = icmp ult i8 %82, 8
  %85 = select i1 %84, i8 0, i8 %82
  %86 = select i1 %83, i8 -1, i8 %85
  store i8 %86, i8* %49, align 1
  %87 = fmul float %79, 2.550000e+02
  %88 = fptoui float %87 to i8
  %89 = icmp ugt i8 %88, -9
  %90 = icmp ult i8 %88, 8
  %91 = select i1 %90, i8 0, i8 %88
  %92 = select i1 %89, i8 -1, i8 %91
  %93 = getelementptr inbounds i8, i8* %49, i64 1
  store i8 %92, i8* %93, align 1
  %94 = fmul float %64, %79
  %95 = fmul float %94, 2.550000e+02
  %96 = fptoui float %95 to i8
  %97 = icmp ugt i8 %96, -9
  %98 = icmp ult i8 %96, 8
  %99 = select i1 %98, i8 0, i8 %96
  %100 = select i1 %97, i8 -1, i8 %99
  %101 = getelementptr inbounds i8, i8* %49, i64 %55
  store i8 %100, i8* %101, align 1
  %102 = bitcast %class.SkBlitter* %0 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %103 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %102, align 8
  %104 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %103, i64 3
  %105 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %104, align 8
  tail call void %105(%class.SkBlitter* %0, i32 %10, i32 %18, i8* %49, i16* %47) #11
  %106 = icmp sgt i32 %32, 2
  br i1 %106, label %107, label %126

107:                                              ; preds = %34
  %108 = add nsw i32 %38, -2
  %109 = add nsw i32 %32, -2
  %110 = fmul float %78, 2.550000e+02
  %111 = fptoui float %110 to i8
  %112 = icmp ugt i8 %111, -9
  %113 = icmp ult i8 %111, 8
  %114 = select i1 %113, i8 0, i8 %111
  %115 = select i1 %112, i8 -1, i8 %114
  %116 = fmul float %64, 2.550000e+02
  %117 = fptoui float %116 to i8
  %118 = icmp ugt i8 %117, -9
  %119 = icmp ult i8 %117, 8
  %120 = select i1 %119, i8 0, i8 %117
  %121 = select i1 %118, i8 -1, i8 %120
  %122 = bitcast %class.SkBlitter* %0 to void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)***
  %123 = load void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)**, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*** %122, align 8
  %124 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)** %123, i64 6
  %125 = load void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)** %124, align 8
  tail call void %125(%class.SkBlitter* %0, i32 %10, i32 %65, i32 %108, i32 %109, i8 zeroext %115, i8 zeroext %121) #11
  br label %128

126:                                              ; preds = %34
  %127 = icmp eq i32 %32, 2
  br i1 %127, label %128, label %152

128:                                              ; preds = %107, %126
  %129 = fmul float %78, %72
  %130 = fmul float %129, 2.550000e+02
  %131 = fptoui float %130 to i8
  %132 = icmp ugt i8 %131, -9
  %133 = icmp ult i8 %131, 8
  %134 = select i1 %133, i8 0, i8 %131
  %135 = select i1 %132, i8 -1, i8 %134
  store i8 %135, i8* %49, align 1
  %136 = fmul float %72, 2.550000e+02
  %137 = fptoui float %136 to i8
  %138 = icmp ugt i8 %137, -9
  %139 = icmp ult i8 %137, 8
  %140 = select i1 %139, i8 0, i8 %137
  %141 = select i1 %138, i8 -1, i8 %140
  store i8 %141, i8* %93, align 1
  %142 = fmul float %64, %72
  %143 = fmul float %142, 2.550000e+02
  %144 = fptoui float %143 to i8
  %145 = icmp ugt i8 %144, -9
  %146 = icmp ult i8 %144, 8
  %147 = select i1 %146, i8 0, i8 %144
  %148 = select i1 %145, i8 -1, i8 %147
  store i8 %148, i8* %101, align 1
  %149 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %102, align 8
  %150 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %149, i64 3
  %151 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %150, align 8
  tail call void %151(%class.SkBlitter* %0, i32 %10, i32 %70, i8* %49, i16* %47) #11
  br label %152

152:                                              ; preds = %126, %128, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkBlitter5blitVEiiih(%class.SkBlitter*, i32, i32, i32, i8 zeroext) unnamed_addr #3 align 2 {
  %6 = alloca i8, align 1
  %7 = alloca [2 x i16], align 2
  store i8 %4, i8* %6, align 1
  %8 = icmp eq i8 %4, -1
  br i1 %8, label %9, label %14

9:                                                ; preds = %5
  %10 = bitcast %class.SkBlitter* %0 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %11 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %10, align 8
  %12 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %11, i64 5
  %13 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %12, align 8
  tail call void %13(%class.SkBlitter* %0, i32 %1, i32 %2, i32 1, i32 %3) #11
  br label %31

14:                                               ; preds = %5
  %15 = bitcast [2 x i16]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #11
  %16 = getelementptr inbounds [2 x i16], [2 x i16]* %7, i64 0, i64 0
  %17 = getelementptr inbounds [2 x i16], [2 x i16]* %7, i64 0, i64 1
  store i16 1, i16* %16, align 2
  store i16 0, i16* %17, align 2
  %18 = icmp sgt i32 %3, 0
  br i1 %18, label %19, label %30

19:                                               ; preds = %14
  %20 = bitcast %class.SkBlitter* %0 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  br label %21

21:                                               ; preds = %19, %21
  %22 = phi i32 [ %3, %19 ], [ %24, %21 ]
  %23 = phi i32 [ %2, %19 ], [ %25, %21 ]
  %24 = add nsw i32 %22, -1
  %25 = add nsw i32 %23, 1
  %26 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %20, align 8
  %27 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %26, i64 3
  %28 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %27, align 8
  call void %28(%class.SkBlitter* %0, i32 %1, i32 %23, i8* nonnull %6, i16* nonnull %16) #11
  %29 = icmp sgt i32 %24, 0
  br i1 %29, label %21, label %30

30:                                               ; preds = %21, %14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #11
  br label %31

31:                                               ; preds = %30, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkBlitter8blitRectEiiii(%class.SkBlitter*, i32, i32, i32, i32) unnamed_addr #3 align 2 {
  %6 = icmp sgt i32 %4, 0
  br i1 %6, label %7, label %18

7:                                                ; preds = %5
  %8 = bitcast %class.SkBlitter* %0 to void (%class.SkBlitter*, i32, i32, i32)***
  br label %9

9:                                                ; preds = %7, %9
  %10 = phi i32 [ %4, %7 ], [ %12, %9 ]
  %11 = phi i32 [ %2, %7 ], [ %13, %9 ]
  %12 = add nsw i32 %10, -1
  %13 = add nsw i32 %11, 1
  %14 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %8, align 8
  %15 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %14, i64 2
  %16 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %15, align 8
  tail call void %16(%class.SkBlitter* %0, i32 %1, i32 %11, i32 %3) #11
  %17 = icmp sgt i32 %12, 0
  br i1 %17, label %9, label %18

18:                                               ; preds = %9, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkBlitter12blitAntiRectEiiiihh(%class.SkBlitter*, i32, i32, i32, i32, i8 zeroext, i8 zeroext) unnamed_addr #3 align 2 {
  %8 = icmp eq i8 %5, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %7
  %10 = bitcast %class.SkBlitter* %0 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %11 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %10, align 8
  %12 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %11, i64 4
  %13 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %12, align 8
  tail call void %13(%class.SkBlitter* %0, i32 %1, i32 %2, i32 %4, i8 zeroext %5) #11
  br label %14

14:                                               ; preds = %7, %9
  %15 = add nsw i32 %1, 1
  %16 = icmp sgt i32 %3, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %14
  %18 = bitcast %class.SkBlitter* %0 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %19 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %18, align 8
  %20 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %19, i64 5
  %21 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %20, align 8
  tail call void %21(%class.SkBlitter* %0, i32 %15, i32 %2, i32 %3, i32 %4) #11
  %22 = add nsw i32 %15, %3
  br label %23

23:                                               ; preds = %17, %14
  %24 = phi i32 [ %22, %17 ], [ %15, %14 ]
  %25 = icmp eq i8 %6, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %23
  %27 = bitcast %class.SkBlitter* %0 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %28 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %27, align 8
  %29 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %28, i64 4
  %30 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %29, align 8
  tail call void %30(%class.SkBlitter* %0, i32 %24, i32 %2, i32 %4, i8 zeroext %6) #11
  br label %31

31:                                               ; preds = %23, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkBlitter8blitMaskERK6SkMaskRK7SkIRect(%class.SkBlitter*, %struct.SkMask* nocapture readonly dereferenceable(32), %struct.SkIRect* nocapture readonly dereferenceable(16)) unnamed_addr #3 align 2 {
  %4 = alloca %class.SkAutoSTMalloc, align 8
  %5 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 3
  %6 = load i8, i8* %5, align 4
  switch i8 %6, label %186 [
    i8 4, label %264
    i8 0, label %7
  ]

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = sub i32 %17, %11
  %19 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = sub nsw i32 %9, %13
  %22 = ashr i32 %21, 3
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i8, i8* %20, i64 %23
  %25 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 1, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = sub nsw i32 %11, %26
  %28 = mul i32 %27, %15
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %24, i64 %29
  %31 = icmp eq i32 %9, %13
  %32 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 2
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %112

34:                                               ; preds = %7
  %35 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 1, i32 2
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %33, %36
  br i1 %37, label %38, label %112

38:                                               ; preds = %34
  %39 = icmp sgt i32 %18, 0
  br i1 %39, label %40, label %264

40:                                               ; preds = %38
  %41 = bitcast %class.SkBlitter* %0 to void (%class.SkBlitter*, i32, i32, i32)***
  %42 = sext i32 %15 to i64
  br label %43

43:                                               ; preds = %107, %40
  %44 = phi i32 [ %9, %40 ], [ %111, %107 ]
  %45 = phi i32 [ %33, %40 ], [ %110, %107 ]
  %46 = phi i32 [ %11, %40 ], [ %108, %107 ]
  %47 = phi i32 [ %18, %40 ], [ %49, %107 ]
  %48 = phi i8* [ %30, %40 ], [ %109, %107 ]
  %49 = add nsw i32 %47, -1
  %50 = xor i32 %44, -1
  %51 = add i32 %45, %50
  %52 = and i32 %51, 7
  %53 = lshr i32 32640, %52
  %54 = trunc i32 %53 to i8
  %55 = icmp sgt i32 %51, -1
  br i1 %55, label %56, label %105

56:                                               ; preds = %43
  %57 = lshr i32 %51, 3
  %58 = add nuw nsw i32 %57, 1
  %59 = zext i32 %58 to i64
  br label %63

60:                                               ; preds = %92
  %61 = getelementptr inbounds i8, i8* %68, i64 1
  %62 = icmp sgt i64 %69, 0
  br i1 %62, label %63, label %98

63:                                               ; preds = %60, %56
  %64 = phi i64 [ %59, %56 ], [ %69, %60 ]
  %65 = phi i32 [ 0, %56 ], [ %94, %60 ]
  %66 = phi i32 [ 0, %56 ], [ %93, %60 ]
  %67 = phi i32 [ %9, %56 ], [ %95, %60 ]
  %68 = phi i8* [ %48, %56 ], [ %61, %60 ]
  %69 = add nsw i64 %64, -1
  %70 = load i8, i8* %68, align 1
  %71 = icmp eq i64 %69, 0
  %72 = select i1 %71, i8 %54, i8 -1
  %73 = and i8 %70, %72
  %74 = zext i8 %73 to i32
  br label %75

75:                                               ; preds = %92, %63
  %76 = phi i32 [ 128, %63 ], [ %96, %92 ]
  %77 = phi i32 [ %65, %63 ], [ %94, %92 ]
  %78 = phi i32 [ %66, %63 ], [ %93, %92 ]
  %79 = phi i32 [ %67, %63 ], [ %95, %92 ]
  %80 = and i32 %76, %74
  %81 = icmp eq i32 %80, 0
  %82 = icmp ne i32 %78, 0
  br i1 %81, label %86, label %83

83:                                               ; preds = %75
  %84 = select i1 %82, i32 %78, i32 1
  %85 = select i1 %82, i32 %77, i32 %79
  br label %92

86:                                               ; preds = %75
  br i1 %82, label %87, label %92

87:                                               ; preds = %86
  %88 = sub nsw i32 %79, %77
  %89 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %41, align 8
  %90 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %89, i64 2
  %91 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %90, align 8
  tail call void %91(%class.SkBlitter* %0, i32 %77, i32 %46, i32 %88) #11
  br label %92

92:                                               ; preds = %87, %86, %83
  %93 = phi i32 [ 0, %87 ], [ 0, %86 ], [ %84, %83 ]
  %94 = phi i32 [ %77, %87 ], [ %77, %86 ], [ %85, %83 ]
  %95 = add nsw i32 %79, 1
  %96 = lshr i32 %76, 1
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %60, label %75

98:                                               ; preds = %60
  %99 = icmp eq i32 %93, 0
  br i1 %99, label %105, label %100

100:                                              ; preds = %98
  %101 = sub nsw i32 %95, %94
  %102 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %41, align 8
  %103 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %102, i64 2
  %104 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %103, align 8
  tail call void %104(%class.SkBlitter* %0, i32 %94, i32 %46, i32 %101) #11
  br label %105

105:                                              ; preds = %43, %98, %100
  %106 = icmp sgt i32 %49, 0
  br i1 %106, label %107, label %264

107:                                              ; preds = %105
  %108 = add nsw i32 %46, 1
  %109 = getelementptr inbounds i8, i8* %48, i64 %42
  %110 = load i32, i32* %35, align 4
  %111 = load i32, i32* %12, align 4
  br label %43

112:                                              ; preds = %7, %34
  %113 = and i32 %21, 7
  %114 = sub nsw i32 %9, %113
  %115 = xor i32 %114, -1
  %116 = add i32 %33, %115
  %117 = ashr i32 %116, 3
  %118 = and i32 %116, 7
  %119 = lshr i32 32640, %118
  %120 = trunc i32 %119 to i8
  %121 = add nsw i32 %117, 1
  %122 = sext i32 %121 to i64
  %123 = icmp sgt i32 %18, 0
  br i1 %123, label %124, label %264

124:                                              ; preds = %112
  %125 = lshr i32 255, %113
  %126 = icmp sgt i32 %116, -1
  %127 = trunc i32 %125 to i8
  %128 = bitcast %class.SkBlitter* %0 to void (%class.SkBlitter*, i32, i32, i32)***
  %129 = sext i32 %15 to i64
  br label %130

130:                                              ; preds = %124, %182
  %131 = phi i32 [ %11, %124 ], [ %184, %182 ]
  %132 = phi i32 [ %18, %124 ], [ %134, %182 ]
  %133 = phi i8* [ %30, %124 ], [ %183, %182 ]
  %134 = add nsw i32 %132, -1
  br i1 %126, label %138, label %182

135:                                              ; preds = %169
  %136 = getelementptr inbounds i8, i8* %144, i64 1
  %137 = icmp sgt i64 %145, 0
  br i1 %137, label %138, label %175

138:                                              ; preds = %130, %135
  %139 = phi i64 [ %145, %135 ], [ %122, %130 ]
  %140 = phi i32 [ %171, %135 ], [ 0, %130 ]
  %141 = phi i32 [ %170, %135 ], [ 0, %130 ]
  %142 = phi i32 [ %172, %135 ], [ %114, %130 ]
  %143 = phi i8 [ -1, %135 ], [ %127, %130 ]
  %144 = phi i8* [ %136, %135 ], [ %133, %130 ]
  %145 = add nsw i64 %139, -1
  %146 = load i8, i8* %144, align 1
  %147 = icmp eq i64 %145, 0
  %148 = select i1 %147, i8 %120, i8 -1
  %149 = and i8 %143, %148
  %150 = and i8 %149, %146
  %151 = zext i8 %150 to i32
  br label %152

152:                                              ; preds = %169, %138
  %153 = phi i32 [ 128, %138 ], [ %173, %169 ]
  %154 = phi i32 [ %140, %138 ], [ %171, %169 ]
  %155 = phi i32 [ %141, %138 ], [ %170, %169 ]
  %156 = phi i32 [ %142, %138 ], [ %172, %169 ]
  %157 = and i32 %153, %151
  %158 = icmp eq i32 %157, 0
  %159 = icmp ne i32 %155, 0
  br i1 %158, label %163, label %160

160:                                              ; preds = %152
  %161 = select i1 %159, i32 %155, i32 1
  %162 = select i1 %159, i32 %154, i32 %156
  br label %169

163:                                              ; preds = %152
  br i1 %159, label %164, label %169

164:                                              ; preds = %163
  %165 = sub nsw i32 %156, %154
  %166 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %128, align 8
  %167 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %166, i64 2
  %168 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %167, align 8
  tail call void %168(%class.SkBlitter* %0, i32 %154, i32 %131, i32 %165) #11
  br label %169

169:                                              ; preds = %164, %163, %160
  %170 = phi i32 [ 0, %164 ], [ 0, %163 ], [ %161, %160 ]
  %171 = phi i32 [ %154, %164 ], [ %154, %163 ], [ %162, %160 ]
  %172 = add nsw i32 %156, 1
  %173 = lshr i32 %153, 1
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %135, label %152

175:                                              ; preds = %135
  %176 = icmp eq i32 %170, 0
  br i1 %176, label %182, label %177

177:                                              ; preds = %175
  %178 = sub nsw i32 %172, %171
  %179 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %128, align 8
  %180 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %179, i64 2
  %181 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %180, align 8
  tail call void %181(%class.SkBlitter* %0, i32 %171, i32 %131, i32 %178) #11
  br label %182

182:                                              ; preds = %130, %175, %177
  %183 = getelementptr inbounds i8, i8* %133, i64 %129
  %184 = add nsw i32 %131, 1
  %185 = icmp sgt i32 %134, 0
  br i1 %185, label %130, label %264

186:                                              ; preds = %3
  %187 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 2
  %188 = load i32, i32* %187, align 4
  %189 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 0
  %190 = load i32, i32* %189, align 4
  %191 = sub i32 %188, %190
  %192 = bitcast %class.SkAutoSTMalloc* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %192) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %192, i8 -86, i64 136, i1 false)
  %193 = add nsw i32 %191, 1
  %194 = icmp ugt i32 %193, 64
  br i1 %194, label %195, label %201

195:                                              ; preds = %186
  %196 = sext i32 %193 to i64
  %197 = tail call i8* @_Z15sk_malloc_throwmm(i64 %196, i64 2) #11
  %198 = bitcast %class.SkAutoSTMalloc* %4 to i8**
  store i8* %197, i8** %198, align 8
  %199 = bitcast i8* %197 to i16*
  %200 = load i32, i32* %189, align 4
  br label %209

201:                                              ; preds = %186
  %202 = icmp eq i32 %193, 0
  br i1 %202, label %207, label %203

203:                                              ; preds = %201
  %204 = getelementptr inbounds %class.SkAutoSTMalloc, %class.SkAutoSTMalloc* %4, i64 0, i32 1
  %205 = bitcast %class.SkAutoSTMalloc* %4 to %union.anon**
  store %union.anon* %204, %union.anon** %205, align 8
  %206 = bitcast %union.anon* %204 to i16*
  br label %209

207:                                              ; preds = %201
  %208 = getelementptr inbounds %class.SkAutoSTMalloc, %class.SkAutoSTMalloc* %4, i64 0, i32 0
  store i16* null, i16** %208, align 8
  br label %209

209:                                              ; preds = %195, %203, %207
  %210 = phi i32 [ %200, %195 ], [ %190, %203 ], [ %190, %207 ]
  %211 = phi i16* [ %199, %195 ], [ %206, %203 ], [ null, %207 ]
  %212 = getelementptr inbounds %class.SkAutoSTMalloc, %class.SkAutoSTMalloc* %4, i64 0, i32 0
  %213 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 1
  %214 = load i32, i32* %213, align 4
  %215 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 0
  %216 = load i8*, i8** %215, align 8
  %217 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 1, i32 0
  %218 = load i32, i32* %217, align 8
  %219 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 1, i32 1
  %220 = load i32, i32* %219, align 4
  %221 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 2
  %222 = load i32, i32* %221, align 8
  %223 = load void (i16*, i16, i32)*, void (i16*, i16, i32)** @_ZN6SkOpts8memset16E, align 8
  call void %223(i16* %211, i16 zeroext 1, i32 %191) #11
  %224 = sext i32 %191 to i64
  %225 = getelementptr inbounds i16, i16* %211, i64 %224
  store i16 0, i16* %225, align 2
  %226 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 3
  %227 = load i32, i32* %226, align 4
  %228 = load i32, i32* %213, align 4
  %229 = sub i32 %227, %228
  %230 = icmp sgt i32 %229, 0
  br i1 %230, label %231, label %256

231:                                              ; preds = %209
  %232 = sext i32 %210 to i64
  %233 = getelementptr inbounds i8, i8* %216, i64 %232
  %234 = sext i32 %218 to i64
  %235 = sub nsw i64 0, %234
  %236 = getelementptr inbounds i8, i8* %233, i64 %235
  %237 = sub nsw i32 %214, %220
  %238 = mul i32 %237, %222
  %239 = zext i32 %238 to i64
  %240 = getelementptr inbounds i8, i8* %236, i64 %239
  %241 = bitcast %class.SkBlitter* %0 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  br label %242

242:                                              ; preds = %231, %242
  %243 = phi i32 [ %228, %231 ], [ %254, %242 ]
  %244 = phi i32 [ %229, %231 ], [ %246, %242 ]
  %245 = phi i8* [ %240, %231 ], [ %253, %242 ]
  %246 = add nsw i32 %244, -1
  %247 = load i32, i32* %189, align 4
  %248 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %241, align 8
  %249 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %248, i64 3
  %250 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %249, align 8
  call void %250(%class.SkBlitter* %0, i32 %247, i32 %243, i8* %245, i16* %211) #11
  %251 = load i32, i32* %221, align 8
  %252 = zext i32 %251 to i64
  %253 = getelementptr inbounds i8, i8* %245, i64 %252
  %254 = add nsw i32 %243, 1
  %255 = icmp sgt i32 %246, 0
  br i1 %255, label %242, label %256

256:                                              ; preds = %242, %209
  %257 = load i16*, i16** %212, align 8
  %258 = getelementptr inbounds %class.SkAutoSTMalloc, %class.SkAutoSTMalloc* %4, i64 0, i32 1
  %259 = bitcast %union.anon* %258 to i16*
  %260 = icmp eq i16* %257, %259
  br i1 %260, label %263, label %261

261:                                              ; preds = %256
  %262 = bitcast i16* %257 to i8*
  call void @_Z7sk_freePv(i8* %262) #11
  br label %263

263:                                              ; preds = %256, %261
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %192) #11
  br label %264

264:                                              ; preds = %182, %105, %112, %38, %3, %263
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkBlitter14blitMaskRegionERK6SkMaskRK8SkRegion(%class.SkBlitter*, %struct.SkMask* dereferenceable(32), %class.SkRegion* dereferenceable(24)) local_unnamed_addr #3 align 2 {
  %4 = alloca %struct.SkIRect, align 4
  %5 = alloca %"class.SkRegion::Cliperator", align 8
  %6 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 1
  %7 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %2, i64 0, i32 1
  %8 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %7, align 8
  %9 = icmp eq %"struct.SkRegion::RunHead"* %8, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  br i1 %9, label %51, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 1, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = sext i32 %15 to i64
  %17 = sub nsw i64 %13, %16
  %18 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 1, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 1, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = sext i32 %22 to i64
  %24 = sub nsw i64 %20, %23
  %25 = icmp slt i64 %17, 1
  %26 = icmp slt i64 %24, 1
  %27 = or i1 %25, %26
  br i1 %27, label %51, label %28

28:                                               ; preds = %10
  %29 = or i64 %24, %17
  %30 = add nsw i64 %29, 2147483648
  %31 = icmp ugt i64 %30, 4294967295
  br i1 %31, label %51, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %2, i64 0, i32 0
  %34 = bitcast %struct.SkIRect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %34, i8 -86, i64 16, i1 false) #11
  %35 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %4, %struct.SkIRect* dereferenceable(16) %33, %struct.SkIRect* dereferenceable(16) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #11
  br i1 %35, label %36, label %51

36:                                               ; preds = %32
  %37 = bitcast %"class.SkRegion::Cliperator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %37) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 80, i1 false)
  call void @_ZN8SkRegion10CliperatorC1ERKS_RK7SkIRect(%"class.SkRegion::Cliperator"* nonnull %5, %class.SkRegion* dereferenceable(24) %2, %struct.SkIRect* dereferenceable(16) %6) #11
  %38 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %5, i64 0, i32 3
  %39 = load i8, i8* %38, align 8, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %50

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %5, i64 0, i32 2
  %43 = bitcast %class.SkBlitter* %0 to void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)***
  br label %44

44:                                               ; preds = %41, %44
  %45 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)**, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*** %43, align 8
  %46 = getelementptr inbounds void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %45, i64 7
  %47 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %46, align 8
  call void %47(%class.SkBlitter* %0, %struct.SkMask* dereferenceable(32) %1, %struct.SkIRect* dereferenceable(16) %42) #11
  call void @_ZN8SkRegion10Cliperator4nextEv(%"class.SkRegion::Cliperator"* nonnull %5) #11
  %48 = load i8, i8* %38, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %44, label %50

50:                                               ; preds = %44, %36
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %37) #11
  br label %51

51:                                               ; preds = %32, %10, %3, %28, %50
  ret void
}

declare void @_ZN8SkRegion10CliperatorC1ERKS_RK7SkIRect(%"class.SkRegion::Cliperator"*, %class.SkRegion* dereferenceable(24), %struct.SkIRect* dereferenceable(16)) unnamed_addr #5

declare void @_ZN8SkRegion10Cliperator4nextEv(%"class.SkRegion::Cliperator"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkBlitter14blitRectRegionERK7SkIRectRK8SkRegion(%class.SkBlitter*, %struct.SkIRect* dereferenceable(16), %class.SkRegion* dereferenceable(24)) local_unnamed_addr #3 align 2 {
  %4 = alloca %"class.SkRegion::Cliperator", align 8
  %5 = bitcast %"class.SkRegion::Cliperator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %5) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 80, i1 false)
  call void @_ZN8SkRegion10CliperatorC1ERKS_RK7SkIRect(%"class.SkRegion::Cliperator"* nonnull %4, %class.SkRegion* dereferenceable(24) %2, %struct.SkIRect* dereferenceable(16) %1) #11
  %6 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %4, i64 0, i32 3
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %27

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %4, i64 0, i32 2, i32 0
  %11 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %4, i64 0, i32 2, i32 1
  %12 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %4, i64 0, i32 2, i32 2
  %13 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %4, i64 0, i32 2, i32 3
  %14 = bitcast %class.SkBlitter* %0 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  br label %15

15:                                               ; preds = %9, %15
  %16 = load i32, i32* %10, align 8
  %17 = load i32, i32* %11, align 4
  %18 = load i32, i32* %12, align 8
  %19 = sub i32 %18, %16
  %20 = load i32, i32* %13, align 4
  %21 = sub i32 %20, %17
  %22 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %14, align 8
  %23 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %22, i64 5
  %24 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %23, align 8
  call void %24(%class.SkBlitter* %0, i32 %16, i32 %17, i32 %19, i32 %21) #11
  call void @_ZN8SkRegion10Cliperator4nextEv(%"class.SkRegion::Cliperator"* nonnull %4) #11
  %25 = load i8, i8* %6, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %15, label %27

27:                                               ; preds = %15, %3
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkBlitter10blitRegionERK8SkRegion(%class.SkBlitter*, %class.SkRegion* dereferenceable(24)) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.std::__1::function", align 8
  %4 = bitcast %"class.std::__1::function"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #11
  %5 = ptrtoint %class.SkBlitter* %0 to i64
  %6 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %struct.SkIRect*)* @"_ZNSt3__110__function16__policy_invokerIFvRK7SkIRectEE11__call_implINS0_20__default_alloc_funcIZN9SkBlitter10blitRegionERK8SkRegionE3$_0S5_EEEEvPKNS0_16__policy_storageES4_", void (%"union.std::__1::__function::__policy_storage"*, %struct.SkIRect*)** %6, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN9SkBlitter10blitRegionERK8SkRegionE3$_0FvRK7SkIRectEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %7, align 8
  %8 = bitcast %"class.std::__1::function"* %3 to i64*
  store i64 %5, i64* %8, align 8
  call void @_ZN12SkRegionPriv10VisitSpansERK8SkRegionRKNSt3__18functionIFvRK7SkIRectEEE(%class.SkRegion* dereferenceable(24) %1, %"class.std::__1::function"* nonnull dereferenceable(32) %3) #11
  %9 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %7, align 8
  %10 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %9, i64 0, i32 1
  %11 = load void (i8*)*, void (i8*)** %10, align 8
  %12 = icmp eq void (i8*)* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  call void %11(i8* %15) #11
  br label %16

16:                                               ; preds = %2, %13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #11
  ret void
}

declare void @_ZN12SkRegionPriv10VisitSpansERK8SkRegionRKNSt3__18functionIFvRK7SkIRectEEE(%class.SkRegion* dereferenceable(24), %"class.std::__1::function"* dereferenceable(32)) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN13SkNullBlitter5blitHEiii(%class.SkNullBlitter* nocapture, i32, i32, i32) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN13SkNullBlitter9blitAntiHEiiPKhPKs(%class.SkNullBlitter* nocapture, i32, i32, i8* nocapture, i16* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN13SkNullBlitter5blitVEiiih(%class.SkNullBlitter* nocapture, i32, i32, i32, i8 zeroext) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN13SkNullBlitter8blitRectEiiii(%class.SkNullBlitter* nocapture, i32, i32, i32, i32) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN13SkNullBlitter8blitMaskERK6SkMaskRK7SkIRect(%class.SkNullBlitter* nocapture, %struct.SkMask* nocapture dereferenceable(32), %struct.SkIRect* nocapture dereferenceable(16)) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %class.SkPixmap* @_ZN13SkNullBlitter17justAnOpaqueColorEPj(%class.SkNullBlitter* nocapture readnone, i32* nocapture readnone) unnamed_addr #2 align 2 {
  ret %class.SkPixmap* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK13SkNullBlitter13isNullBlitterEv(%class.SkNullBlitter* nocapture readnone) unnamed_addr #2 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkRectClipBlitter5blitHEiii(%class.SkRectClipBlitter* nocapture readonly, i32, i32, i32) unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %class.SkRectClipBlitter, %class.SkRectClipBlitter* %0, i64 0, i32 2, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = sub nsw i32 %2, %6
  %8 = getelementptr inbounds %class.SkRectClipBlitter, %class.SkRectClipBlitter* %0, i64 0, i32 2, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = sub i32 %9, %6
  %11 = icmp ult i32 %7, %10
  br i1 %11, label %12, label %31

12:                                               ; preds = %4
  %13 = add nsw i32 %3, %1
  %14 = getelementptr inbounds %class.SkRectClipBlitter, %class.SkRectClipBlitter* %0, i64 0, i32 2, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp sgt i32 %15, %1
  %17 = select i1 %16, i32 %15, i32 %1
  %18 = getelementptr inbounds %class.SkRectClipBlitter, %class.SkRectClipBlitter* %0, i64 0, i32 2, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = icmp sgt i32 %13, %19
  %21 = select i1 %20, i32 %19, i32 %13
  %22 = sub nsw i32 %21, %17
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %24, label %31

24:                                               ; preds = %12
  %25 = getelementptr inbounds %class.SkRectClipBlitter, %class.SkRectClipBlitter* %0, i64 0, i32 1
  %26 = load %class.SkBlitter*, %class.SkBlitter** %25, align 8
  %27 = bitcast %class.SkBlitter* %26 to void (%class.SkBlitter*, i32, i32, i32)***
  %28 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %27, align 8
  %29 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %28, i64 2
  %30 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %29, align 8
  tail call void %30(%class.SkBlitter* %26, i32 %17, i32 %2, i32 %22) #11
  br label %31

31:                                               ; preds = %12, %24, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkRectClipBlitter9blitAntiHEiiPKhPKs(%class.SkRectClipBlitter* nocapture readonly, i32, i32, i8*, i16*) unnamed_addr #3 align 2 {
  %6 = getelementptr inbounds %class.SkRectClipBlitter, %class.SkRectClipBlitter* %0, i64 0, i32 2, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = sub nsw i32 %2, %7
  %9 = getelementptr inbounds %class.SkRectClipBlitter, %class.SkRectClipBlitter* %0, i64 0, i32 2, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = sub i32 %10, %7
  %12 = icmp ult i32 %8, %11
  br i1 %12, label %13, label %103

13:                                               ; preds = %5
  %14 = getelementptr inbounds %class.SkRectClipBlitter, %class.SkRectClipBlitter* %0, i64 0, i32 2, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = icmp sgt i32 %15, %1
  br i1 %16, label %17, label %103

17:                                               ; preds = %13, %17
  %18 = phi i16* [ %24, %17 ], [ %4, %13 ]
  %19 = phi i32 [ %25, %17 ], [ 0, %13 ]
  %20 = load i16, i16* %18, align 2
  %21 = icmp eq i16 %20, 0
  %22 = sext i16 %20 to i32
  %23 = sext i16 %20 to i64
  %24 = getelementptr inbounds i16, i16* %18, i64 %23
  %25 = add nsw i32 %19, %22
  br i1 %21, label %26, label %17

26:                                               ; preds = %17
  %27 = add nsw i32 %25, %1
  %28 = getelementptr inbounds %class.SkRectClipBlitter, %class.SkRectClipBlitter* %0, i64 0, i32 2, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = icmp sgt i32 %27, %29
  br i1 %30, label %31, label %103

31:                                               ; preds = %26
  %32 = icmp sgt i32 %29, %1
  br i1 %32, label %33, label %64

33:                                               ; preds = %31
  %34 = sub nsw i32 %29, %1
  %35 = icmp sgt i32 %34, 0
  br i1 %35, label %36, label %58

36:                                               ; preds = %33, %52
  %37 = phi i32 [ %56, %52 ], [ %34, %33 ]
  %38 = phi i8* [ %55, %52 ], [ %3, %33 ]
  %39 = phi i16* [ %54, %52 ], [ %4, %33 ]
  %40 = load i16, i16* %39, align 2
  %41 = sext i16 %40 to i32
  %42 = icmp slt i32 %37, %41
  br i1 %42, label %43, label %52

43:                                               ; preds = %36
  %44 = load i8, i8* %38, align 1
  %45 = sext i32 %37 to i64
  %46 = getelementptr inbounds i8, i8* %38, i64 %45
  store i8 %44, i8* %46, align 1
  %47 = trunc i32 %37 to i16
  store i16 %47, i16* %39, align 2
  %48 = sub i16 %40, %47
  %49 = getelementptr inbounds i16, i16* %39, i64 %45
  store i16 %48, i16* %49, align 2
  %50 = load i32, i32* %28, align 8
  %51 = load i32, i32* %14, align 8
  br label %58

52:                                               ; preds = %36
  %53 = sext i16 %40 to i64
  %54 = getelementptr inbounds i16, i16* %39, i64 %53
  %55 = getelementptr inbounds i8, i8* %38, i64 %53
  %56 = sub nsw i32 %37, %41
  %57 = icmp sgt i32 %56, 0
  br i1 %57, label %36, label %58

58:                                               ; preds = %52, %33, %43
  %59 = phi i32 [ %15, %33 ], [ %51, %43 ], [ %15, %52 ]
  %60 = phi i32 [ %29, %33 ], [ %50, %43 ], [ %29, %52 ]
  %61 = sext i32 %34 to i64
  %62 = getelementptr inbounds i16, i16* %4, i64 %61
  %63 = getelementptr inbounds i8, i8* %3, i64 %61
  br label %64

64:                                               ; preds = %58, %31
  %65 = phi i32 [ %59, %58 ], [ %15, %31 ]
  %66 = phi i16* [ %62, %58 ], [ %4, %31 ]
  %67 = phi i32 [ %60, %58 ], [ %1, %31 ]
  %68 = phi i8* [ %63, %58 ], [ %3, %31 ]
  %69 = icmp sgt i32 %27, %65
  br i1 %69, label %70, label %96

70:                                               ; preds = %64
  %71 = sub nsw i32 %65, %67
  %72 = icmp sgt i32 %71, 0
  br i1 %72, label %73, label %93

73:                                               ; preds = %70, %87
  %74 = phi i32 [ %91, %87 ], [ %71, %70 ]
  %75 = phi i8* [ %90, %87 ], [ %68, %70 ]
  %76 = phi i16* [ %89, %87 ], [ %66, %70 ]
  %77 = load i16, i16* %76, align 2
  %78 = sext i16 %77 to i32
  %79 = icmp slt i32 %74, %78
  br i1 %79, label %80, label %87

80:                                               ; preds = %73
  %81 = load i8, i8* %75, align 1
  %82 = sext i32 %74 to i64
  %83 = getelementptr inbounds i8, i8* %75, i64 %82
  store i8 %81, i8* %83, align 1
  %84 = trunc i32 %74 to i16
  store i16 %84, i16* %76, align 2
  %85 = sub i16 %77, %84
  %86 = getelementptr inbounds i16, i16* %76, i64 %82
  store i16 %85, i16* %86, align 2
  br label %93

87:                                               ; preds = %73
  %88 = sext i16 %77 to i64
  %89 = getelementptr inbounds i16, i16* %76, i64 %88
  %90 = getelementptr inbounds i8, i8* %75, i64 %88
  %91 = sub nsw i32 %74, %78
  %92 = icmp sgt i32 %91, 0
  br i1 %92, label %73, label %93

93:                                               ; preds = %87, %70, %80
  %94 = sext i32 %71 to i64
  %95 = getelementptr inbounds i16, i16* %66, i64 %94
  store i16 0, i16* %95, align 2
  br label %96

96:                                               ; preds = %93, %64
  %97 = getelementptr inbounds %class.SkRectClipBlitter, %class.SkRectClipBlitter* %0, i64 0, i32 1
  %98 = load %class.SkBlitter*, %class.SkBlitter** %97, align 8
  %99 = bitcast %class.SkBlitter* %98 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %100 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %99, align 8
  %101 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %100, i64 3
  %102 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %101, align 8
  tail call void %102(%class.SkBlitter* %98, i32 %67, i32 %2, i8* %68, i16* %66) #11
  br label %103

103:                                              ; preds = %96, %26, %13, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkRectClipBlitter5blitVEiiih(%class.SkRectClipBlitter* nocapture readonly, i32, i32, i32, i8 zeroext) unnamed_addr #3 align 2 {
  %6 = getelementptr inbounds %class.SkRectClipBlitter, %class.SkRectClipBlitter* %0, i64 0, i32 2, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = sub nsw i32 %1, %7
  %9 = getelementptr inbounds %class.SkRectClipBlitter, %class.SkRectClipBlitter* %0, i64 0, i32 2, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = sub i32 %10, %7
  %12 = icmp ult i32 %8, %11
  br i1 %12, label %13, label %32

13:                                               ; preds = %5
  %14 = add nsw i32 %3, %2
  %15 = getelementptr inbounds %class.SkRectClipBlitter, %class.SkRectClipBlitter* %0, i64 0, i32 2, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %16, %2
  %18 = select i1 %17, i32 %16, i32 %2
  %19 = getelementptr inbounds %class.SkRectClipBlitter, %class.SkRectClipBlitter* %0, i64 0, i32 2, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %14, %20
  %22 = select i1 %21, i32 %20, i32 %14
  %23 = icmp sgt i32 %22, %18
  br i1 %23, label %24, label %32

24:                                               ; preds = %13
  %25 = getelementptr inbounds %class.SkRectClipBlitter, %class.SkRectClipBlitter* %0, i64 0, i32 1
  %26 = load %class.SkBlitter*, %class.SkBlitter** %25, align 8
  %27 = sub nsw i32 %22, %18
  %28 = bitcast %class.SkBlitter* %26 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %29 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %28, align 8
  %30 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %29, i64 4
  %31 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %30, align 8
  tail call void %31(%class.SkBlitter* %26, i32 %1, i32 %18, i32 %27, i8 zeroext %4) #11
  br label %32

32:                                               ; preds = %13, %24, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkRectClipBlitter8blitRectEiiii(%class.SkRectClipBlitter*, i32, i32, i32, i32) unnamed_addr #3 align 2 {
  %6 = alloca %struct.SkIRect, align 4
  %7 = bitcast %struct.SkIRect* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 0
  %9 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 1
  %10 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 2
  %11 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 3
  %12 = add nsw i32 %3, %1
  %13 = add nsw i32 %4, %2
  store i32 %1, i32* %8, align 4
  store i32 %2, i32* %9, align 4
  store i32 %12, i32* %10, align 4
  store i32 %13, i32* %11, align 4
  %14 = getelementptr inbounds %class.SkRectClipBlitter, %class.SkRectClipBlitter* %0, i64 0, i32 2
  %15 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %6, %struct.SkIRect* nonnull dereferenceable(16) %6, %struct.SkIRect* dereferenceable(16) %14) #11
  br i1 %15, label %16, label %29

16:                                               ; preds = %5
  %17 = getelementptr inbounds %class.SkRectClipBlitter, %class.SkRectClipBlitter* %0, i64 0, i32 1
  %18 = load %class.SkBlitter*, %class.SkBlitter** %17, align 8
  %19 = load i32, i32* %8, align 4
  %20 = load i32, i32* %9, align 4
  %21 = load i32, i32* %10, align 4
  %22 = sub i32 %21, %19
  %23 = load i32, i32* %11, align 4
  %24 = sub i32 %23, %20
  %25 = bitcast %class.SkBlitter* %18 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %26 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %25, align 8
  %27 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %26, i64 5
  %28 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %27, align 8
  call void %28(%class.SkBlitter* %18, i32 %19, i32 %20, i32 %22, i32 %24) #11
  br label %29

29:                                               ; preds = %16, %5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkRectClipBlitter12blitAntiRectEiiiihh(%class.SkRectClipBlitter*, i32, i32, i32, i32, i8 zeroext, i8 zeroext) unnamed_addr #3 align 2 {
  %8 = alloca %struct.SkIRect, align 4
  %9 = bitcast %struct.SkIRect* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  %10 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 0
  %11 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 1
  %12 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 2
  %13 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 3
  %14 = add i32 %1, 2
  %15 = add i32 %14, %3
  %16 = add nsw i32 %4, %2
  store i32 %1, i32* %10, align 4
  store i32 %2, i32* %11, align 4
  store i32 %15, i32* %12, align 4
  store i32 %16, i32* %13, align 4
  %17 = getelementptr inbounds %class.SkRectClipBlitter, %class.SkRectClipBlitter* %0, i64 0, i32 2
  %18 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %8, %struct.SkIRect* nonnull dereferenceable(16) %8, %struct.SkIRect* dereferenceable(16) %17) #11
  br i1 %18, label %19, label %62

19:                                               ; preds = %7
  %20 = load i32, i32* %10, align 4
  %21 = icmp eq i32 %20, %1
  %22 = select i1 %21, i8 %5, i8 -1
  %23 = load i32, i32* %12, align 4
  %24 = icmp eq i32 %23, %15
  %25 = select i1 %24, i8 %6, i8 -1
  %26 = and i8 %25, %22
  %27 = icmp eq i8 %26, -1
  br i1 %27, label %28, label %39

28:                                               ; preds = %19
  %29 = getelementptr inbounds %class.SkRectClipBlitter, %class.SkRectClipBlitter* %0, i64 0, i32 1
  %30 = load %class.SkBlitter*, %class.SkBlitter** %29, align 8
  %31 = load i32, i32* %11, align 4
  %32 = sub i32 %23, %20
  %33 = load i32, i32* %13, align 4
  %34 = sub i32 %33, %31
  %35 = bitcast %class.SkBlitter* %30 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %36 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %35, align 8
  %37 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %36, i64 5
  %38 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %37, align 8
  call void %38(%class.SkBlitter* %30, i32 %20, i32 %31, i32 %32, i32 %34) #11
  br label %62

39:                                               ; preds = %19
  %40 = sub i32 %23, %20
  %41 = icmp eq i32 %40, 1
  %42 = getelementptr inbounds %class.SkRectClipBlitter, %class.SkRectClipBlitter* %0, i64 0, i32 1
  %43 = load %class.SkBlitter*, %class.SkBlitter** %42, align 8
  %44 = load i32, i32* %11, align 4
  br i1 %41, label %45, label %54

45:                                               ; preds = %39
  %46 = load i32, i32* %13, align 4
  %47 = sub i32 %46, %44
  %48 = bitcast %class.SkBlitter* %43 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %49 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %48, align 8
  %50 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %49, i64 4
  %51 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %50, align 8
  br i1 %21, label %52, label %53

52:                                               ; preds = %45
  call void %51(%class.SkBlitter* %43, i32 %1, i32 %44, i32 %47, i8 zeroext %22) #11
  br label %62

53:                                               ; preds = %45
  call void %51(%class.SkBlitter* %43, i32 %20, i32 %44, i32 %47, i8 zeroext %25) #11
  br label %62

54:                                               ; preds = %39
  %55 = add nsw i32 %40, -2
  %56 = load i32, i32* %13, align 4
  %57 = sub i32 %56, %44
  %58 = bitcast %class.SkBlitter* %43 to void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)***
  %59 = load void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)**, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*** %58, align 8
  %60 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)** %59, i64 6
  %61 = load void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)** %60, align 8
  call void %61(%class.SkBlitter* %43, i32 %20, i32 %44, i32 %55, i32 %57, i8 zeroext %22, i8 zeroext %25) #11
  br label %62

62:                                               ; preds = %28, %52, %53, %54, %7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkRectClipBlitter8blitMaskERK6SkMaskRK7SkIRect(%class.SkRectClipBlitter*, %struct.SkMask* dereferenceable(32), %struct.SkIRect* nocapture readonly dereferenceable(16)) unnamed_addr #3 align 2 {
  %4 = alloca %struct.SkIRect, align 4
  %5 = bitcast %struct.SkIRect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #11
  %6 = bitcast %struct.SkIRect* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %5, i8* align 4 %6, i64 16, i1 false)
  %7 = getelementptr inbounds %class.SkRectClipBlitter, %class.SkRectClipBlitter* %0, i64 0, i32 2
  %8 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %4, %struct.SkIRect* nonnull dereferenceable(16) %4, %struct.SkIRect* dereferenceable(16) %7) #11
  br i1 %8, label %9, label %16

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.SkRectClipBlitter, %class.SkRectClipBlitter* %0, i64 0, i32 1
  %11 = load %class.SkBlitter*, %class.SkBlitter** %10, align 8
  %12 = bitcast %class.SkBlitter* %11 to void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)***
  %13 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)**, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %13, i64 7
  %15 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %14, align 8
  call void %15(%class.SkBlitter* %11, %struct.SkMask* dereferenceable(32) %1, %struct.SkIRect* nonnull dereferenceable(16) %4) #11
  br label %16

16:                                               ; preds = %9, %3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkPixmap* @_ZN17SkRectClipBlitter17justAnOpaqueColorEPj(%class.SkRectClipBlitter* nocapture readonly, i32*) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.SkRectClipBlitter, %class.SkRectClipBlitter* %0, i64 0, i32 1
  %4 = load %class.SkBlitter*, %class.SkBlitter** %3, align 8
  %5 = bitcast %class.SkBlitter* %4 to %class.SkPixmap* (%class.SkBlitter*, i32*)***
  %6 = load %class.SkPixmap* (%class.SkBlitter*, i32*)**, %class.SkPixmap* (%class.SkBlitter*, i32*)*** %5, align 8
  %7 = getelementptr inbounds %class.SkPixmap* (%class.SkBlitter*, i32*)*, %class.SkPixmap* (%class.SkBlitter*, i32*)** %6, i64 8
  %8 = load %class.SkPixmap* (%class.SkBlitter*, i32*)*, %class.SkPixmap* (%class.SkBlitter*, i32*)** %7, align 8
  %9 = tail call %class.SkPixmap* %8(%class.SkBlitter* %4, i32* %1) #11
  ret %class.SkPixmap* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkRgnClipBlitter5blitHEiii(%class.SkRgnClipBlitter* nocapture readonly, i32, i32, i32) unnamed_addr #3 align 2 {
  %5 = alloca %"class.SkRegion::Spanerator", align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = bitcast %"class.SkRegion::Spanerator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  %9 = getelementptr inbounds %class.SkRgnClipBlitter, %class.SkRgnClipBlitter* %0, i64 0, i32 2
  %10 = bitcast %"class.SkRegion::Spanerator"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  %11 = load %class.SkRegion*, %class.SkRegion** %9, align 8
  %12 = add nsw i32 %3, %1
  call void @_ZN8SkRegion10SpaneratorC1ERKS_iii(%"class.SkRegion::Spanerator"* nonnull %5, %class.SkRegion* dereferenceable(24) %11, i32 %2, i32 %1, i32 %12) #11
  %13 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #11
  store i32 -1431655766, i32* %6, align 4
  %14 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #11
  store i32 -1431655766, i32* %7, align 4
  %15 = call zeroext i1 @_ZN8SkRegion10Spanerator4nextEPiS1_(%"class.SkRegion::Spanerator"* nonnull %5, i32* nonnull %6, i32* nonnull %7) #11
  br i1 %15, label %16, label %28

16:                                               ; preds = %4
  %17 = getelementptr inbounds %class.SkRgnClipBlitter, %class.SkRgnClipBlitter* %0, i64 0, i32 1
  br label %18

18:                                               ; preds = %16, %18
  %19 = load %class.SkBlitter*, %class.SkBlitter** %17, align 8
  %20 = load i32, i32* %6, align 4
  %21 = load i32, i32* %7, align 4
  %22 = sub nsw i32 %21, %20
  %23 = bitcast %class.SkBlitter* %19 to void (%class.SkBlitter*, i32, i32, i32)***
  %24 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %23, align 8
  %25 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %24, i64 2
  %26 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %25, align 8
  call void %26(%class.SkBlitter* %19, i32 %20, i32 %2, i32 %22) #11
  %27 = call zeroext i1 @_ZN8SkRegion10Spanerator4nextEPiS1_(%"class.SkRegion::Spanerator"* nonnull %5, i32* nonnull %6, i32* nonnull %7) #11
  br i1 %27, label %18, label %28

28:                                               ; preds = %18, %4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  ret void
}

declare void @_ZN8SkRegion10SpaneratorC1ERKS_iii(%"class.SkRegion::Spanerator"*, %class.SkRegion* dereferenceable(24), i32, i32, i32) unnamed_addr #5

declare zeroext i1 @_ZN8SkRegion10Spanerator4nextEPiS1_(%"class.SkRegion::Spanerator"*, i32*, i32*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkRgnClipBlitter9blitAntiHEiiPKhPKs(%class.SkRgnClipBlitter* nocapture readonly, i32, i32, i8*, i16*) unnamed_addr #3 align 2 {
  %6 = alloca %"class.SkRegion::Spanerator", align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  br label %9

9:                                                ; preds = %9, %5
  %10 = phi i16* [ %4, %5 ], [ %16, %9 ]
  %11 = phi i32 [ 0, %5 ], [ %17, %9 ]
  %12 = load i16, i16* %10, align 2
  %13 = icmp eq i16 %12, 0
  %14 = sext i16 %12 to i32
  %15 = sext i16 %12 to i64
  %16 = getelementptr inbounds i16, i16* %10, i64 %15
  %17 = add nsw i32 %11, %14
  br i1 %13, label %18, label %9

18:                                               ; preds = %9
  %19 = bitcast %"class.SkRegion::Spanerator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  %20 = getelementptr inbounds %class.SkRgnClipBlitter, %class.SkRgnClipBlitter* %0, i64 0, i32 2
  %21 = bitcast %"class.SkRegion::Spanerator"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  %22 = load %class.SkRegion*, %class.SkRegion** %20, align 8
  %23 = add nsw i32 %17, %1
  call void @_ZN8SkRegion10SpaneratorC1ERKS_iii(%"class.SkRegion::Spanerator"* nonnull %6, %class.SkRegion* dereferenceable(24) %22, i32 %2, i32 %1, i32 %23) #11
  %24 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #11
  store i32 -1431655766, i32* %7, align 4
  %25 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #11
  store i32 -1431655766, i32* %8, align 4
  %26 = call zeroext i1 @_ZN8SkRegion10Spanerator4nextEPiS1_(%"class.SkRegion::Spanerator"* nonnull %6, i32* nonnull %7, i32* nonnull %8) #11
  br i1 %26, label %27, label %124

27:                                               ; preds = %18, %97
  %28 = phi i32 [ %98, %97 ], [ %1, %18 ]
  %29 = load i32, i32* %7, align 4
  %30 = sub nsw i32 %29, %1
  %31 = load i32, i32* %8, align 4
  %32 = sub nsw i32 %31, %29
  %33 = sext i32 %30 to i64
  %34 = getelementptr inbounds i16, i16* %4, i64 %33
  %35 = getelementptr inbounds i8, i8* %3, i64 %33
  %36 = icmp sgt i32 %30, 0
  br i1 %36, label %37, label %57

37:                                               ; preds = %27, %51
  %38 = phi i16* [ %53, %51 ], [ %4, %27 ]
  %39 = phi i32 [ %55, %51 ], [ %30, %27 ]
  %40 = phi i8* [ %54, %51 ], [ %3, %27 ]
  %41 = load i16, i16* %38, align 2
  %42 = sext i16 %41 to i32
  %43 = icmp slt i32 %39, %42
  br i1 %43, label %44, label %51

44:                                               ; preds = %37
  %45 = load i8, i8* %40, align 1
  %46 = sext i32 %39 to i64
  %47 = getelementptr inbounds i8, i8* %40, i64 %46
  store i8 %45, i8* %47, align 1
  %48 = trunc i32 %39 to i16
  store i16 %48, i16* %38, align 2
  %49 = sub i16 %41, %48
  %50 = getelementptr inbounds i16, i16* %38, i64 %46
  store i16 %49, i16* %50, align 2
  br label %57

51:                                               ; preds = %37
  %52 = sext i16 %41 to i64
  %53 = getelementptr inbounds i16, i16* %38, i64 %52
  %54 = getelementptr inbounds i8, i8* %40, i64 %52
  %55 = sub nsw i32 %39, %42
  %56 = icmp sgt i32 %55, 0
  br i1 %56, label %37, label %57

57:                                               ; preds = %51, %44, %27
  %58 = load i16, i16* %34, align 2
  %59 = sext i16 %58 to i32
  %60 = icmp slt i32 %32, %59
  br i1 %60, label %61, label %72

61:                                               ; preds = %80, %57
  %62 = phi i8* [ %35, %57 ], [ %83, %80 ]
  %63 = phi i32 [ %32, %57 ], [ %78, %80 ]
  %64 = phi i16* [ %34, %57 ], [ %82, %80 ]
  %65 = phi i16 [ %58, %57 ], [ %84, %80 ]
  %66 = load i8, i8* %62, align 1
  %67 = sext i32 %63 to i64
  %68 = getelementptr inbounds i8, i8* %62, i64 %67
  store i8 %66, i8* %68, align 1
  %69 = trunc i32 %63 to i16
  store i16 %69, i16* %64, align 2
  %70 = sub i16 %65, %69
  %71 = getelementptr inbounds i16, i16* %64, i64 %67
  store i16 %70, i16* %71, align 2
  br label %87

72:                                               ; preds = %57, %80
  %73 = phi i32 [ %85, %80 ], [ %59, %57 ]
  %74 = phi i16 [ %84, %80 ], [ %58, %57 ]
  %75 = phi i16* [ %82, %80 ], [ %34, %57 ]
  %76 = phi i32 [ %78, %80 ], [ %32, %57 ]
  %77 = phi i8* [ %83, %80 ], [ %35, %57 ]
  %78 = sub nsw i32 %76, %73
  %79 = icmp slt i32 %78, 1
  br i1 %79, label %87, label %80

80:                                               ; preds = %72
  %81 = sext i16 %74 to i64
  %82 = getelementptr inbounds i16, i16* %75, i64 %81
  %83 = getelementptr inbounds i8, i8* %77, i64 %81
  %84 = load i16, i16* %82, align 2
  %85 = sext i16 %84 to i32
  %86 = icmp slt i32 %78, %85
  br i1 %86, label %61, label %72

87:                                               ; preds = %72, %61
  %88 = load i32, i32* %7, align 4
  %89 = icmp sgt i32 %88, %28
  br i1 %89, label %90, label %97

90:                                               ; preds = %87
  %91 = sub nsw i32 %28, %1
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds i8, i8* %3, i64 %92
  store i8 0, i8* %93, align 1
  %94 = sub nsw i32 %88, %28
  %95 = trunc i32 %94 to i16
  %96 = getelementptr inbounds i16, i16* %4, i64 %92
  store i16 %95, i16* %96, align 2
  br label %97

97:                                               ; preds = %90, %87
  %98 = load i32, i32* %8, align 4
  %99 = call zeroext i1 @_ZN8SkRegion10Spanerator4nextEPiS1_(%"class.SkRegion::Spanerator"* nonnull %6, i32* nonnull %7, i32* nonnull %8) #11
  br i1 %99, label %27, label %100

100:                                              ; preds = %97
  %101 = icmp sgt i32 %98, %1
  br i1 %101, label %102, label %124

102:                                              ; preds = %100
  %103 = sub nsw i32 %98, %1
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds i16, i16* %4, i64 %104
  store i16 0, i16* %105, align 2
  %106 = icmp slt i32 %1, 0
  br i1 %106, label %107, label %114

107:                                              ; preds = %102
  %108 = load i16, i16* %4, align 2
  %109 = sext i16 %108 to i32
  %110 = sext i16 %108 to i64
  %111 = getelementptr inbounds i8, i8* %3, i64 %110
  %112 = getelementptr inbounds i16, i16* %4, i64 %110
  %113 = add nsw i32 %109, %1
  br label %114

114:                                              ; preds = %107, %102
  %115 = phi i16* [ %112, %107 ], [ %4, %102 ]
  %116 = phi i8* [ %111, %107 ], [ %3, %102 ]
  %117 = phi i32 [ %113, %107 ], [ %1, %102 ]
  %118 = getelementptr inbounds %class.SkRgnClipBlitter, %class.SkRgnClipBlitter* %0, i64 0, i32 1
  %119 = load %class.SkBlitter*, %class.SkBlitter** %118, align 8
  %120 = bitcast %class.SkBlitter* %119 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %121 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %120, align 8
  %122 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %121, i64 3
  %123 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %122, align 8
  call void %123(%class.SkBlitter* %119, i32 %117, i32 %2, i8* %116, i16* %115) #11
  br label %124

124:                                              ; preds = %18, %114, %100
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkRgnClipBlitter5blitVEiiih(%class.SkRgnClipBlitter* nocapture readonly, i32, i32, i32, i8 zeroext) unnamed_addr #3 align 2 {
  %6 = alloca %struct.SkIRect, align 4
  %7 = alloca %"class.SkRegion::Cliperator", align 8
  %8 = bitcast %struct.SkIRect* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #11
  %9 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 0
  %10 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 1
  %11 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 2
  %12 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 3
  store i32 %1, i32* %9, align 4
  store i32 %2, i32* %10, align 4
  %13 = sext i32 %1 to i64
  %14 = icmp slt i64 %13, 2147483646
  %15 = select i1 %14, i64 %13, i64 2147483646
  %16 = icmp sgt i64 %15, -2147483648
  %17 = select i1 %16, i64 %15, i64 -2147483648
  %18 = trunc i64 %17 to i32
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* %11, align 4
  %20 = sext i32 %2 to i64
  %21 = sext i32 %3 to i64
  %22 = add nsw i64 %21, %20
  %23 = icmp slt i64 %22, 2147483647
  %24 = select i1 %23, i64 %22, i64 2147483647
  %25 = icmp sgt i64 %24, -2147483647
  %26 = select i1 %25, i64 %24, i64 -2147483647
  %27 = trunc i64 %26 to i32
  store i32 %27, i32* %12, align 4
  %28 = bitcast %"class.SkRegion::Cliperator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %28) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 80, i1 false)
  %29 = getelementptr inbounds %class.SkRgnClipBlitter, %class.SkRgnClipBlitter* %0, i64 0, i32 2
  %30 = load %class.SkRegion*, %class.SkRegion** %29, align 8
  call void @_ZN8SkRegion10CliperatorC1ERKS_RK7SkIRect(%"class.SkRegion::Cliperator"* nonnull %7, %class.SkRegion* dereferenceable(24) %30, %struct.SkIRect* nonnull dereferenceable(16) %6) #11
  %31 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %7, i64 0, i32 3
  %32 = load i8, i8* %31, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %49

34:                                               ; preds = %5
  %35 = getelementptr inbounds %class.SkRgnClipBlitter, %class.SkRgnClipBlitter* %0, i64 0, i32 1
  %36 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %7, i64 0, i32 2, i32 1
  %37 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %7, i64 0, i32 2, i32 3
  br label %38

38:                                               ; preds = %34, %38
  %39 = load %class.SkBlitter*, %class.SkBlitter** %35, align 8
  %40 = load i32, i32* %36, align 4
  %41 = load i32, i32* %37, align 4
  %42 = sub i32 %41, %40
  %43 = bitcast %class.SkBlitter* %39 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %44 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %43, align 8
  %45 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %44, i64 4
  %46 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %45, align 8
  call void %46(%class.SkBlitter* %39, i32 %1, i32 %40, i32 %42, i8 zeroext %4) #11
  call void @_ZN8SkRegion10Cliperator4nextEv(%"class.SkRegion::Cliperator"* nonnull %7) #11
  %47 = load i8, i8* %31, align 8, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %38, label %49

49:                                               ; preds = %38, %5
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkRgnClipBlitter8blitRectEiiii(%class.SkRgnClipBlitter* nocapture readonly, i32, i32, i32, i32) unnamed_addr #3 align 2 {
  %6 = alloca %struct.SkIRect, align 4
  %7 = alloca %"class.SkRegion::Cliperator", align 8
  %8 = bitcast %struct.SkIRect* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #11
  %9 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 0
  %10 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 1
  %11 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 2
  %12 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 3
  store i32 %1, i32* %9, align 4
  store i32 %2, i32* %10, align 4
  %13 = sext i32 %1 to i64
  %14 = sext i32 %3 to i64
  %15 = add nsw i64 %14, %13
  %16 = icmp slt i64 %15, 2147483647
  %17 = select i1 %16, i64 %15, i64 2147483647
  %18 = icmp sgt i64 %17, -2147483647
  %19 = select i1 %18, i64 %17, i64 -2147483647
  %20 = trunc i64 %19 to i32
  store i32 %20, i32* %11, align 4
  %21 = sext i32 %2 to i64
  %22 = sext i32 %4 to i64
  %23 = add nsw i64 %22, %21
  %24 = icmp slt i64 %23, 2147483647
  %25 = select i1 %24, i64 %23, i64 2147483647
  %26 = icmp sgt i64 %25, -2147483647
  %27 = select i1 %26, i64 %25, i64 -2147483647
  %28 = trunc i64 %27 to i32
  store i32 %28, i32* %12, align 4
  %29 = bitcast %"class.SkRegion::Cliperator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %29) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 80, i1 false)
  %30 = getelementptr inbounds %class.SkRgnClipBlitter, %class.SkRgnClipBlitter* %0, i64 0, i32 2
  %31 = load %class.SkRegion*, %class.SkRegion** %30, align 8
  call void @_ZN8SkRegion10CliperatorC1ERKS_RK7SkIRect(%"class.SkRegion::Cliperator"* nonnull %7, %class.SkRegion* dereferenceable(24) %31, %struct.SkIRect* nonnull dereferenceable(16) %6) #11
  %32 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %7, i64 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %55

35:                                               ; preds = %5
  %36 = getelementptr inbounds %class.SkRgnClipBlitter, %class.SkRgnClipBlitter* %0, i64 0, i32 1
  %37 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %7, i64 0, i32 2, i32 0
  %38 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %7, i64 0, i32 2, i32 1
  %39 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %7, i64 0, i32 2, i32 2
  %40 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %7, i64 0, i32 2, i32 3
  br label %41

41:                                               ; preds = %35, %41
  %42 = load %class.SkBlitter*, %class.SkBlitter** %36, align 8
  %43 = load i32, i32* %37, align 8
  %44 = load i32, i32* %38, align 4
  %45 = load i32, i32* %39, align 8
  %46 = sub i32 %45, %43
  %47 = load i32, i32* %40, align 4
  %48 = sub i32 %47, %44
  %49 = bitcast %class.SkBlitter* %42 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %50 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %49, align 8
  %51 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %50, i64 5
  %52 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %51, align 8
  call void %52(%class.SkBlitter* %42, i32 %43, i32 %44, i32 %46, i32 %48) #11
  call void @_ZN8SkRegion10Cliperator4nextEv(%"class.SkRegion::Cliperator"* nonnull %7) #11
  %53 = load i8, i8* %32, align 8, !range !2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %41, label %55

55:                                               ; preds = %41, %5
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %29) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkRgnClipBlitter12blitAntiRectEiiiihh(%class.SkRgnClipBlitter* nocapture readonly, i32, i32, i32, i32, i8 zeroext, i8 zeroext) unnamed_addr #3 align 2 {
  %8 = alloca %struct.SkIRect, align 4
  %9 = alloca %"class.SkRegion::Cliperator", align 8
  %10 = bitcast %struct.SkIRect* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #11
  %11 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 0
  %12 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 1
  %13 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 2
  %14 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %8, i64 0, i32 3
  %15 = add i32 %3, 2
  store i32 %1, i32* %11, align 4
  store i32 %2, i32* %12, align 4
  %16 = sext i32 %1 to i64
  %17 = sext i32 %15 to i64
  %18 = add nsw i64 %17, %16
  %19 = icmp slt i64 %18, 2147483647
  %20 = select i1 %19, i64 %18, i64 2147483647
  %21 = icmp sgt i64 %20, -2147483647
  %22 = select i1 %21, i64 %20, i64 -2147483647
  %23 = trunc i64 %22 to i32
  store i32 %23, i32* %13, align 4
  %24 = sext i32 %2 to i64
  %25 = sext i32 %4 to i64
  %26 = add nsw i64 %25, %24
  %27 = icmp slt i64 %26, 2147483647
  %28 = select i1 %27, i64 %26, i64 2147483647
  %29 = icmp sgt i64 %28, -2147483647
  %30 = select i1 %29, i64 %28, i64 -2147483647
  %31 = trunc i64 %30 to i32
  store i32 %31, i32* %14, align 4
  %32 = bitcast %"class.SkRegion::Cliperator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %32) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 80, i1 false)
  %33 = getelementptr inbounds %class.SkRgnClipBlitter, %class.SkRgnClipBlitter* %0, i64 0, i32 2
  %34 = load %class.SkRegion*, %class.SkRegion** %33, align 8
  call void @_ZN8SkRegion10CliperatorC1ERKS_RK7SkIRect(%"class.SkRegion::Cliperator"* nonnull %9, %class.SkRegion* dereferenceable(24) %34, %struct.SkIRect* nonnull dereferenceable(16) %8) #11
  %35 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %9, i64 0, i32 3
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %89

38:                                               ; preds = %7
  %39 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %9, i64 0, i32 2, i32 0
  %40 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %9, i64 0, i32 2, i32 2
  %41 = add i32 %15, %1
  %42 = getelementptr inbounds %class.SkRgnClipBlitter, %class.SkRgnClipBlitter* %0, i64 0, i32 1
  %43 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %9, i64 0, i32 2, i32 1
  %44 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %9, i64 0, i32 2, i32 3
  br label %45

45:                                               ; preds = %38, %86
  %46 = load i32, i32* %39, align 8
  %47 = icmp eq i32 %46, %1
  %48 = select i1 %47, i8 %5, i8 -1
  %49 = load i32, i32* %40, align 8
  %50 = icmp eq i32 %49, %41
  %51 = select i1 %50, i8 %6, i8 -1
  %52 = and i8 %51, %48
  %53 = icmp eq i8 %52, -1
  br i1 %53, label %54, label %64

54:                                               ; preds = %45
  %55 = load %class.SkBlitter*, %class.SkBlitter** %42, align 8
  %56 = load i32, i32* %43, align 4
  %57 = sub i32 %49, %46
  %58 = load i32, i32* %44, align 4
  %59 = sub i32 %58, %56
  %60 = bitcast %class.SkBlitter* %55 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %61 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %60, align 8
  %62 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %61, i64 5
  %63 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %62, align 8
  call void %63(%class.SkBlitter* %55, i32 %46, i32 %56, i32 %57, i32 %59) #11
  br label %86

64:                                               ; preds = %45
  %65 = sub i32 %49, %46
  %66 = icmp eq i32 %65, 1
  %67 = load %class.SkBlitter*, %class.SkBlitter** %42, align 8
  %68 = load i32, i32* %43, align 4
  br i1 %66, label %69, label %78

69:                                               ; preds = %64
  %70 = load i32, i32* %44, align 4
  %71 = sub i32 %70, %68
  %72 = bitcast %class.SkBlitter* %67 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %73 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %72, align 8
  %74 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %73, i64 4
  %75 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %74, align 8
  br i1 %47, label %76, label %77

76:                                               ; preds = %69
  call void %75(%class.SkBlitter* %67, i32 %1, i32 %68, i32 %71, i8 zeroext %48) #11
  br label %86

77:                                               ; preds = %69
  call void %75(%class.SkBlitter* %67, i32 %46, i32 %68, i32 %71, i8 zeroext %51) #11
  br label %86

78:                                               ; preds = %64
  %79 = add nsw i32 %65, -2
  %80 = load i32, i32* %44, align 4
  %81 = sub i32 %80, %68
  %82 = bitcast %class.SkBlitter* %67 to void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)***
  %83 = load void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)**, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*** %82, align 8
  %84 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)** %83, i64 6
  %85 = load void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)** %84, align 8
  call void %85(%class.SkBlitter* %67, i32 %46, i32 %68, i32 %79, i32 %81, i8 zeroext %48, i8 zeroext %51) #11
  br label %86

86:                                               ; preds = %78, %77, %76, %54
  call void @_ZN8SkRegion10Cliperator4nextEv(%"class.SkRegion::Cliperator"* nonnull %9) #11
  %87 = load i8, i8* %35, align 8, !range !2
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %45, label %89

89:                                               ; preds = %86, %7
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %32) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkRgnClipBlitter8blitMaskERK6SkMaskRK7SkIRect(%class.SkRgnClipBlitter* nocapture readonly, %struct.SkMask* dereferenceable(32), %struct.SkIRect* dereferenceable(16)) unnamed_addr #3 align 2 {
  %4 = alloca %"class.SkRegion::Cliperator", align 8
  %5 = bitcast %"class.SkRegion::Cliperator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %5) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 80, i1 false)
  %6 = getelementptr inbounds %class.SkRgnClipBlitter, %class.SkRgnClipBlitter* %0, i64 0, i32 2
  %7 = load %class.SkRegion*, %class.SkRegion** %6, align 8
  call void @_ZN8SkRegion10CliperatorC1ERKS_RK7SkIRect(%"class.SkRegion::Cliperator"* nonnull %4, %class.SkRegion* dereferenceable(24) %7, %struct.SkIRect* dereferenceable(16) %2) #11
  %8 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %4, i64 0, i32 2
  %9 = getelementptr inbounds %class.SkRgnClipBlitter, %class.SkRgnClipBlitter* %0, i64 0, i32 1
  %10 = load %class.SkBlitter*, %class.SkBlitter** %9, align 8
  %11 = getelementptr inbounds %"class.SkRegion::Cliperator", %"class.SkRegion::Cliperator"* %4, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %22

14:                                               ; preds = %3
  %15 = bitcast %class.SkBlitter* %10 to void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)***
  br label %16

16:                                               ; preds = %14, %16
  %17 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)**, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*** %15, align 8
  %18 = getelementptr inbounds void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %17, i64 7
  %19 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %18, align 8
  call void %19(%class.SkBlitter* %10, %struct.SkMask* dereferenceable(32) %1, %struct.SkIRect* dereferenceable(16) %8) #11
  call void @_ZN8SkRegion10Cliperator4nextEv(%"class.SkRegion::Cliperator"* nonnull %4) #11
  %20 = load i8, i8* %11, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %16, label %22

22:                                               ; preds = %16, %3
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkPixmap* @_ZN16SkRgnClipBlitter17justAnOpaqueColorEPj(%class.SkRgnClipBlitter* nocapture readonly, i32*) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.SkRgnClipBlitter, %class.SkRgnClipBlitter* %0, i64 0, i32 1
  %4 = load %class.SkBlitter*, %class.SkBlitter** %3, align 8
  %5 = bitcast %class.SkBlitter* %4 to %class.SkPixmap* (%class.SkBlitter*, i32*)***
  %6 = load %class.SkPixmap* (%class.SkBlitter*, i32*)**, %class.SkPixmap* (%class.SkBlitter*, i32*)*** %5, align 8
  %7 = getelementptr inbounds %class.SkPixmap* (%class.SkBlitter*, i32*)*, %class.SkPixmap* (%class.SkBlitter*, i32*)** %6, i64 8
  %8 = load %class.SkPixmap* (%class.SkBlitter*, i32*)*, %class.SkPixmap* (%class.SkBlitter*, i32*)** %7, align 8
  %9 = tail call %class.SkPixmap* %8(%class.SkBlitter* %4, i32* %1) #11
  ret %class.SkPixmap* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkBlitter* @_ZN16SkBlitterClipper5applyEP9SkBlitterPK8SkRegionPK7SkIRect(%class.SkBlitterClipper*, %class.SkBlitter*, %class.SkRegion*, %struct.SkIRect*) local_unnamed_addr #3 align 2 {
  %5 = alloca %struct.SkIRect, align 4
  %6 = icmp eq %class.SkRegion* %2, null
  br i1 %6, label %88, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %2, i64 0, i32 0
  %9 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %2, i64 0, i32 1
  %10 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %9, align 8
  %11 = icmp eq %"struct.SkRegion::RunHead"* %10, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  br i1 %11, label %17, label %12

12:                                               ; preds = %7
  %13 = icmp eq %struct.SkIRect* %3, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %12
  %15 = bitcast %struct.SkIRect* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %15, i8 -86, i64 16, i1 false) #11
  %16 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %5, %struct.SkIRect* dereferenceable(16) %8, %struct.SkIRect* nonnull dereferenceable(16) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #11
  br i1 %16, label %19, label %17

17:                                               ; preds = %14, %7
  %18 = getelementptr inbounds %class.SkBlitterClipper, %class.SkBlitterClipper* %0, i64 0, i32 0, i32 0
  br label %88

19:                                               ; preds = %14
  %20 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %9, align 8
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi %"struct.SkRegion::RunHead"* [ %20, %19 ], [ %10, %12 ]
  %23 = icmp eq %"struct.SkRegion::RunHead"* %22, null
  br i1 %23, label %24, label %84

24:                                               ; preds = %21
  br i1 %13, label %78, label %25

25:                                               ; preds = %24
  %26 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = sext i32 %30 to i64
  %32 = sub nsw i64 %28, %31
  %33 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 3
  %34 = load i32, i32* %33, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = sext i32 %37 to i64
  %39 = sub nsw i64 %35, %38
  %40 = icmp slt i64 %32, 1
  %41 = icmp slt i64 %39, 1
  %42 = or i1 %40, %41
  br i1 %42, label %78, label %43

43:                                               ; preds = %25
  %44 = or i64 %39, %32
  %45 = add nsw i64 %44, 2147483648
  %46 = icmp ugt i64 %45, 4294967295
  br i1 %46, label %78, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %2, i64 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %2, i64 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = sext i32 %52 to i64
  %54 = sub nsw i64 %50, %53
  %55 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %2, i64 0, i32 0, i32 3
  %56 = load i32, i32* %55, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %2, i64 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = sext i32 %59 to i64
  %61 = sub nsw i64 %57, %60
  %62 = icmp slt i64 %54, 1
  %63 = icmp slt i64 %61, 1
  %64 = or i1 %62, %63
  br i1 %64, label %78, label %65

65:                                               ; preds = %47
  %66 = or i64 %61, %54
  %67 = add nsw i64 %66, 2147483648
  %68 = icmp ugt i64 %67, 4294967295
  %69 = icmp sgt i32 %52, %30
  %70 = or i1 %69, %68
  %71 = icmp sgt i32 %59, %37
  %72 = or i1 %71, %70
  %73 = icmp slt i32 %49, %27
  %74 = or i1 %73, %72
  %75 = icmp sge i32 %56, %34
  %76 = xor i1 %74, true
  %77 = and i1 %75, %76
  br i1 %77, label %88, label %78

78:                                               ; preds = %25, %43, %47, %65, %24
  %79 = getelementptr inbounds %class.SkBlitterClipper, %class.SkBlitterClipper* %0, i64 0, i32 1, i32 1
  store %class.SkBlitter* %1, %class.SkBlitter** %79, align 8
  %80 = getelementptr inbounds %class.SkBlitterClipper, %class.SkBlitterClipper* %0, i64 0, i32 1, i32 2
  %81 = bitcast %struct.SkIRect* %80 to i8*
  %82 = bitcast %class.SkRegion* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* nonnull align 4 %82, i64 16, i1 false) #11
  %83 = getelementptr inbounds %class.SkBlitterClipper, %class.SkBlitterClipper* %0, i64 0, i32 1, i32 0
  br label %88

84:                                               ; preds = %21
  %85 = getelementptr inbounds %class.SkBlitterClipper, %class.SkBlitterClipper* %0, i64 0, i32 2, i32 1
  store %class.SkBlitter* %1, %class.SkBlitter** %85, align 8
  %86 = getelementptr inbounds %class.SkBlitterClipper, %class.SkBlitterClipper* %0, i64 0, i32 2, i32 2
  store %class.SkRegion* %2, %class.SkRegion** %86, align 8
  %87 = getelementptr inbounds %class.SkBlitterClipper, %class.SkBlitterClipper* %0, i64 0, i32 2, i32 0
  br label %88

88:                                               ; preds = %17, %65, %78, %84, %4
  %89 = phi %class.SkBlitter* [ %1, %4 ], [ %18, %17 ], [ %83, %78 ], [ %1, %65 ], [ %87, %84 ]
  ret %class.SkBlitter* %89
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9SkBlitter24UseRasterPipelineBlitterERK8SkPixmapRK7SkPaintRK8SkMatrix(%class.SkPixmap* nocapture readonly dereferenceable(40), %class.SkPaint* nocapture readonly dereferenceable(72), %class.SkMatrix* nocapture readnone dereferenceable(40)) local_unnamed_addr #3 align 2 {
  %4 = load i8, i8* @gSkForceRasterPipelineBlitter, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %69

6:                                                ; preds = %3
  %7 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 2, i32 0
  %8 = bitcast %class.SkMaskFilter** %7 to %class.SkMaskFilterBase**
  %9 = load %class.SkMaskFilterBase*, %class.SkMaskFilterBase** %8, align 8
  %10 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %0, i64 0, i32 2, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 3
  br i1 %12, label %69, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 8, i32 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 261120
  %17 = icmp ugt i32 %16, 14336
  br i1 %17, label %69, label %18

18:                                               ; preds = %13
  %19 = icmp eq %class.SkMaskFilterBase* %9, null
  br i1 %19, label %27, label %20

20:                                               ; preds = %18
  %21 = bitcast %class.SkMaskFilterBase* %9 to i8 (%class.SkMaskFilterBase*)***
  %22 = load i8 (%class.SkMaskFilterBase*)**, i8 (%class.SkMaskFilterBase*)*** %21, align 8
  %23 = getelementptr inbounds i8 (%class.SkMaskFilterBase*)*, i8 (%class.SkMaskFilterBase*)** %22, i64 7
  %24 = load i8 (%class.SkMaskFilterBase*)*, i8 (%class.SkMaskFilterBase*)** %23, align 8
  %25 = tail call zeroext i8 %24(%class.SkMaskFilterBase* nonnull %9) #11
  %26 = icmp eq i8 %25, 2
  br i1 %26, label %69, label %27

27:                                               ; preds = %18, %20
  %28 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 1, i32 0
  %29 = load %class.SkShader*, %class.SkShader** %28, align 8
  %30 = icmp eq %class.SkShader* %29, null
  br i1 %30, label %31, label %64

31:                                               ; preds = %27
  %32 = load i32, i32* %14, align 8
  %33 = and i32 %32, 261120
  %34 = icmp eq i32 %33, 3072
  br i1 %34, label %35, label %69

35:                                               ; preds = %31
  %36 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %37 = load %class.SkColorSpace*, %class.SkColorSpace** %36, align 8
  %38 = icmp eq %class.SkColorSpace* %37, null
  %39 = xor i1 %30, true
  %40 = or i1 %38, %39
  br i1 %40, label %64, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 5
  %43 = bitcast %struct.SkRGBA4f* %42 to <2 x float>*
  %44 = load <2 x float>, <2 x float>* %43, align 8
  %45 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %1, i64 0, i32 5, i32 2
  %46 = bitcast float* %45 to <2 x float>*
  %47 = load <2 x float>, <2 x float>* %46, align 8
  %48 = extractelement <2 x float> %44, i32 0
  %49 = fcmp ult float %48, 0.000000e+00
  %50 = fcmp ugt float %48, 1.000000e+00
  %51 = or i1 %49, %50
  br i1 %51, label %69, label %52

52:                                               ; preds = %41
  %53 = extractelement <2 x float> %44, i32 1
  %54 = fcmp ult float %53, 0.000000e+00
  %55 = fcmp ugt float %53, 1.000000e+00
  %56 = or i1 %54, %55
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = extractelement <2 x float> %47, i32 0
  %59 = fcmp oge float %58, 0.000000e+00
  %60 = fcmp ole float %58, 1.000000e+00
  %61 = and i1 %59, %60
  br i1 %61, label %62, label %69

62:                                               ; preds = %57
  %63 = tail call zeroext i1 @_ZNK12SkColorSpace6isSRGBEv(%class.SkColorSpace* nonnull %37) #11
  br i1 %63, label %64, label %69

64:                                               ; preds = %27, %35, %62
  %65 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %0, i64 0, i32 2, i32 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = or i32 %66, 4
  %68 = icmp ne i32 %67, 6
  ret i1 %68

69:                                               ; preds = %57, %41, %52, %20, %13, %6, %31, %62, %3
  ret i1 true
}

declare zeroext i1 @_ZNK12SkColorSpace6isSRGBEv(%class.SkColorSpace*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkBlitter* @_ZN9SkBlitter6ChooseERK8SkPixmapRK16SkMatrixProviderRK7SkPaintP12SkArenaAllocb5sk_spI8SkShaderE(%class.SkPixmap* dereferenceable(40), %class.SkMatrixProvider* dereferenceable(112), %class.SkPaint* dereferenceable(72), %class.SkArenaAlloc*, i1 zeroext, %class.sk_sp.8*) local_unnamed_addr #3 align 2 {
  %7 = alloca %class.SkArenaAlloc*, align 8
  %8 = alloca %class.SkTCopyOnFirstWrite, align 8
  %9 = alloca %class.sk_sp.8, align 8
  %10 = alloca %class.sk_sp.10, align 8
  %11 = alloca %class.sk_sp.8, align 8
  %12 = alloca %class.anon.13, align 8
  %13 = alloca %class.SkMatrix, align 4
  %14 = alloca %"struct.SkShaderBase::ContextRec", align 8
  store %class.SkArenaAlloc* %3, %class.SkArenaAlloc** %7, align 8
  %15 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %0, i64 0, i32 2, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %6
  %19 = tail call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %3, i32 33, i32 8) #11
  %20 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %3, i64 0, i32 1
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = ptrtoint i8* %19 to i64
  %24 = sub i64 %23, %22
  %25 = trunc i64 %24 to i32
  %26 = getelementptr inbounds i8, i8* %19, i64 24
  store i8* %26, i8** %20, align 8
  tail call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %3, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZNS_4makeI13SkNullBlitterJEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS3_ENUlPcE_8__invokeESC_, i32 %25) #11
  %27 = bitcast i8* %19 to i32 (...)***
  %28 = getelementptr inbounds i8, i8* %19, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV13SkNullBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %29 = bitcast i8* %19 to %class.SkBlitter*
  br label %382

30:                                               ; preds = %6
  %31 = bitcast %class.SkTCopyOnFirstWrite* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %31) #11
  %32 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %8, i64 0, i32 1, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 72, i1 false)
  %33 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %8, i64 0, i32 0
  store %class.SkPaint* %2, %class.SkPaint** %33, align 8
  %34 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %8, i64 0, i32 1, i32 1
  store %class.SkPaint* null, %class.SkPaint** %34, align 8
  %35 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 8, i32 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, 261120
  %38 = icmp eq i32 %37, 3072
  br i1 %38, label %66, label %39

39:                                               ; preds = %30
  %40 = tail call zeroext i1 @_Z25SkColorTypeIsAlwaysOpaque11SkColorType(i32 %16) #11
  %41 = tail call i32 @_Z19SkInterpretXfermodeRK7SkPaintb(%class.SkPaint* dereferenceable(72) %2, i1 zeroext %40) #11
  switch i32 %41, label %66 [
    i32 1, label %42
    i32 2, label %54
  ]

42:                                               ; preds = %39
  %43 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %8, i64 0, i32 1
  %44 = bitcast %class.SkTLazy* %43 to %class.SkPaint*
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %44, %class.SkPaint* dereferenceable(72) %2) #11
  %45 = bitcast %class.SkPaint** %34 to %class.SkTLazy**
  store %class.SkTLazy* %43, %class.SkTLazy** %45, align 8
  %46 = ptrtoint %class.SkTLazy* %43 to i64
  %47 = bitcast %class.SkTCopyOnFirstWrite* %8 to i64*
  store i64 %46, i64* %47, align 8
  %48 = bitcast %class.SkTLazy* %43 to %class.SkPaint*
  %49 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %8, i64 0, i32 1, i32 0, i64 64
  %50 = bitcast i8* %49 to i32*
  %51 = load i32, i32* %50, align 8
  %52 = and i32 %51, -261121
  %53 = or i32 %52, 3072
  store i32 %53, i32* %50, align 8
  br label %66

54:                                               ; preds = %39
  %55 = tail call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %3, i32 33, i32 8) #11
  %56 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %3, i64 0, i32 1
  %57 = bitcast i8** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = ptrtoint i8* %55 to i64
  %60 = sub i64 %59, %58
  %61 = trunc i64 %60 to i32
  %62 = getelementptr inbounds i8, i8* %55, i64 24
  store i8* %62, i8** %56, align 8
  tail call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %3, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZNS_4makeI13SkNullBlitterJEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS3_ENUlPcE_8__invokeESC_, i32 %61) #11
  %63 = bitcast i8* %55 to i32 (...)***
  %64 = getelementptr inbounds i8, i8* %55, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 16, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV13SkNullBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %63, align 8
  %65 = bitcast i8* %55 to %class.SkBlitter*
  br label %376

66:                                               ; preds = %30, %42, %39
  %67 = phi %class.SkPaint* [ %2, %30 ], [ %48, %42 ], [ %2, %39 ]
  %68 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %67, i64 0, i32 8, i32 0, i32 0
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, 261120
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %116

72:                                               ; preds = %66
  %73 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %8, i64 0, i32 1
  %74 = load %class.SkPaint*, %class.SkPaint** %34, align 8
  %75 = icmp eq %class.SkPaint* %74, null
  br i1 %75, label %76, label %81

76:                                               ; preds = %72
  %77 = bitcast %class.SkTLazy* %73 to %class.SkPaint*
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %77, %class.SkPaint* dereferenceable(72) %67) #11
  %78 = bitcast %class.SkPaint** %34 to %class.SkTLazy**
  store %class.SkTLazy* %73, %class.SkTLazy** %78, align 8
  %79 = ptrtoint %class.SkTLazy* %73 to i64
  %80 = bitcast %class.SkTCopyOnFirstWrite* %8 to i64*
  store i64 %79, i64* %80, align 8
  br label %81

81:                                               ; preds = %72, %76
  %82 = phi %class.SkPaint* [ %77, %76 ], [ %67, %72 ]
  %83 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %9, i64 0, i32 0
  store %class.SkShader* null, %class.SkShader** %83, align 8
  call void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint* %82, %class.sk_sp.8* nonnull %9) #11
  %84 = load %class.SkShader*, %class.SkShader** %83, align 8
  %85 = icmp eq %class.SkShader* %84, null
  br i1 %85, label %96, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds %class.SkShader, %class.SkShader* %84, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = atomicrmw add i32* %87, i32 -1 acq_rel
  %89 = icmp eq i32 %88, 1
  br i1 %89, label %90, label %96

90:                                               ; preds = %86
  %91 = bitcast %class.SkShader* %84 to %class.SkRefCntBase*
  %92 = bitcast %class.SkShader* %84 to void (%class.SkRefCntBase*)***
  %93 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %92, align 8
  %94 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %93, i64 2
  %95 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %94, align 8
  call void %95(%class.SkRefCntBase* nonnull %91) #11
  br label %96

96:                                               ; preds = %81, %86, %90
  %97 = getelementptr inbounds %class.sk_sp.10, %class.sk_sp.10* %10, i64 0, i32 0
  store %class.SkColorFilter* null, %class.SkColorFilter** %97, align 8
  call void @_ZN7SkPaint14setColorFilterE5sk_spI13SkColorFilterE(%class.SkPaint* %82, %class.sk_sp.10* nonnull %10) #11
  %98 = load %class.SkColorFilter*, %class.SkColorFilter** %97, align 8
  %99 = icmp eq %class.SkColorFilter* %98, null
  br i1 %99, label %110, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %98, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = atomicrmw add i32* %101, i32 -1 acq_rel
  %103 = icmp eq i32 %102, 1
  br i1 %103, label %104, label %110

104:                                              ; preds = %100
  %105 = bitcast %class.SkColorFilter* %98 to %class.SkRefCntBase*
  %106 = bitcast %class.SkColorFilter* %98 to void (%class.SkRefCntBase*)***
  %107 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %106, align 8
  %108 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %107, i64 2
  %109 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %108, align 8
  call void %109(%class.SkRefCntBase* nonnull %105) #11
  br label %110

110:                                              ; preds = %96, %100, %104
  %111 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %82, i64 0, i32 8, i32 0, i32 0
  %112 = load i32, i32* %111, align 8
  %113 = and i32 %112, -261121
  %114 = or i32 %113, 1024
  store i32 %114, i32* %111, align 8
  call void @_ZN7SkPaint8setColorEj(%class.SkPaint* %82, i32 0) #11
  %115 = load %class.SkPaint*, %class.SkPaint** %33, align 8
  br label %116

116:                                              ; preds = %110, %66
  %117 = phi %class.SkPaint* [ %115, %110 ], [ %67, %66 ]
  %118 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %117, i64 0, i32 3, i32 0
  %119 = load %class.SkColorFilter*, %class.SkColorFilter** %118, align 8
  %120 = icmp eq %class.SkColorFilter* %119, null
  br i1 %120, label %134, label %121

121:                                              ; preds = %116
  %122 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %8, i64 0, i32 1
  %123 = load %class.SkPaint*, %class.SkPaint** %34, align 8
  %124 = icmp eq %class.SkPaint* %123, null
  br i1 %124, label %125, label %130

125:                                              ; preds = %121
  %126 = bitcast %class.SkTLazy* %122 to %class.SkPaint*
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %126, %class.SkPaint* dereferenceable(72) %117) #11
  %127 = bitcast %class.SkPaint** %34 to %class.SkTLazy**
  store %class.SkTLazy* %122, %class.SkTLazy** %127, align 8
  %128 = ptrtoint %class.SkTLazy* %122 to i64
  %129 = bitcast %class.SkTCopyOnFirstWrite* %8 to i64*
  store i64 %128, i64* %129, align 8
  br label %130

130:                                              ; preds = %121, %125
  %131 = phi %class.SkPaint* [ %126, %125 ], [ %117, %121 ]
  %132 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %133 = load %class.SkColorSpace*, %class.SkColorSpace** %132, align 8
  call void @_ZN11SkPaintPriv17RemoveColorFilterEP7SkPaintP12SkColorSpace(%class.SkPaint* %131, %class.SkColorSpace* %133) #11
  br label %134

134:                                              ; preds = %116, %130
  br i1 %4, label %135, label %163

135:                                              ; preds = %134
  %136 = load i32, i32* %15, align 8
  %137 = icmp eq i32 %136, 1
  %138 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %7, align 8
  br i1 %137, label %139, label %151

139:                                              ; preds = %135
  %140 = load %class.SkPaint*, %class.SkPaint** %33, align 8
  %141 = call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %138, i32 73, i32 8) #11
  %142 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %138, i64 0, i32 1
  %143 = bitcast i8** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = ptrtoint i8* %141 to i64
  %146 = sub i64 %145, %144
  %147 = trunc i64 %146 to i32
  %148 = getelementptr inbounds i8, i8* %141, i64 64
  store i8* %148, i8** %142, align 8
  call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %138, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZNS_4makeI21SkA8_Coverage_BlitterJRK8SkPixmapRK7SkPaintEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS9_ENUlPcE_8__invokeESI_, i32 %147) #11
  %149 = bitcast i8* %141 to %class.SkA8_Coverage_Blitter*
  call void @_ZN21SkA8_Coverage_BlitterC1ERK8SkPixmapRK7SkPaint(%class.SkA8_Coverage_Blitter* %149, %class.SkPixmap* dereferenceable(40) %0, %class.SkPaint* dereferenceable(72) %140) #11
  %150 = bitcast i8* %141 to %class.SkBlitter*
  br label %376

151:                                              ; preds = %135
  %152 = call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %138, i32 33, i32 8) #11
  %153 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %138, i64 0, i32 1
  %154 = bitcast i8** %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = ptrtoint i8* %152 to i64
  %157 = sub i64 %156, %155
  %158 = trunc i64 %157 to i32
  %159 = getelementptr inbounds i8, i8* %152, i64 24
  store i8* %159, i8** %153, align 8
  call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %138, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZNS_4makeI13SkNullBlitterJEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS3_ENUlPcE_8__invokeESC_, i32 %158) #11
  %160 = bitcast i8* %152 to i32 (...)***
  %161 = getelementptr inbounds i8, i8* %152, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %161, i8 0, i64 16, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV13SkNullBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %160, align 8
  %162 = bitcast i8* %152 to %class.SkBlitter*
  br label %376

163:                                              ; preds = %134
  %164 = load %class.SkPaint*, %class.SkPaint** %33, align 8
  %165 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %164, i64 0, i32 8, i32 0, i32 0
  %166 = load i32, i32* %165, align 8
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %187, label %169

169:                                              ; preds = %163
  %170 = load i32, i32* %15, align 8
  %171 = call zeroext i1 @_ZN11SkPaintPriv12ShouldDitherERK7SkPaint11SkColorType(%class.SkPaint* dereferenceable(72) %164, i32 %170) #11
  br i1 %171, label %187, label %172

172:                                              ; preds = %169
  %173 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %8, i64 0, i32 1
  %174 = load %class.SkPaint*, %class.SkPaint** %34, align 8
  %175 = icmp eq %class.SkPaint* %174, null
  %176 = load %class.SkPaint*, %class.SkPaint** %33, align 8
  br i1 %175, label %177, label %182

177:                                              ; preds = %172
  %178 = bitcast %class.SkTLazy* %173 to %class.SkPaint*
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* %178, %class.SkPaint* dereferenceable(72) %176) #11
  %179 = bitcast %class.SkPaint** %34 to %class.SkTLazy**
  store %class.SkTLazy* %173, %class.SkTLazy** %179, align 8
  %180 = ptrtoint %class.SkTLazy* %173 to i64
  %181 = bitcast %class.SkTCopyOnFirstWrite* %8 to i64*
  store i64 %180, i64* %181, align 8
  br label %182

182:                                              ; preds = %172, %177
  %183 = phi %class.SkPaint* [ %178, %177 ], [ %176, %172 ]
  %184 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %183, i64 0, i32 8, i32 0, i32 0
  %185 = load i32, i32* %184, align 8
  %186 = and i32 %185, -3
  store i32 %186, i32* %184, align 8
  br label %187

187:                                              ; preds = %163, %182, %169
  %188 = load i8, i8* @gUseSkVMBlitter, align 1, !range !2
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %216, label %190

190:                                              ; preds = %187
  %191 = load %class.SkPaint*, %class.SkPaint** %33, align 8
  %192 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %7, align 8
  %193 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %11, i64 0, i32 0
  %194 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %5, i64 0, i32 0
  %195 = load %class.SkShader*, %class.SkShader** %194, align 8
  %196 = icmp eq %class.SkShader* %195, null
  br i1 %196, label %200, label %197

197:                                              ; preds = %190
  %198 = getelementptr inbounds %class.SkShader, %class.SkShader* %195, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = atomicrmw add i32* %198, i32 1 monotonic
  br label %200

200:                                              ; preds = %190, %197
  store %class.SkShader* %195, %class.SkShader** %193, align 8
  %201 = call %class.SkBlitter* @_Z19SkCreateSkVMBlitterRK8SkPixmapRK7SkPaintRK16SkMatrixProviderP12SkArenaAlloc5sk_spI8SkShaderE(%class.SkPixmap* dereferenceable(40) %0, %class.SkPaint* dereferenceable(72) %191, %class.SkMatrixProvider* dereferenceable(112) %1, %class.SkArenaAlloc* %192, %class.sk_sp.8* nonnull %11) #11
  %202 = load %class.SkShader*, %class.SkShader** %193, align 8
  %203 = icmp eq %class.SkShader* %202, null
  br i1 %203, label %214, label %204

204:                                              ; preds = %200
  %205 = getelementptr inbounds %class.SkShader, %class.SkShader* %202, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %206 = atomicrmw add i32* %205, i32 -1 acq_rel
  %207 = icmp eq i32 %206, 1
  br i1 %207, label %208, label %214

208:                                              ; preds = %204
  %209 = bitcast %class.SkShader* %202 to %class.SkRefCntBase*
  %210 = bitcast %class.SkShader* %202 to void (%class.SkRefCntBase*)***
  %211 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %210, align 8
  %212 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %211, i64 2
  %213 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %212, align 8
  call void %213(%class.SkRefCntBase* nonnull %209) #11
  br label %214

214:                                              ; preds = %200, %204, %208
  %215 = icmp eq %class.SkBlitter* %201, null
  br i1 %215, label %216, label %376

216:                                              ; preds = %187, %214
  %217 = bitcast %class.anon.13* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %217) #11
  %218 = getelementptr inbounds %class.anon.13, %class.anon.13* %12, i64 0, i32 0
  %219 = getelementptr inbounds %class.anon.13, %class.anon.13* %12, i64 0, i32 1
  %220 = getelementptr inbounds %class.anon.13, %class.anon.13* %12, i64 0, i32 2
  %221 = getelementptr inbounds %class.anon.13, %class.anon.13* %12, i64 0, i32 3
  %222 = getelementptr inbounds %class.anon.13, %class.anon.13* %12, i64 0, i32 4
  store %class.SkPixmap* %0, %class.SkPixmap** %218, align 8
  store %class.SkTCopyOnFirstWrite* %8, %class.SkTCopyOnFirstWrite** %219, align 8
  store %class.SkMatrixProvider* %1, %class.SkMatrixProvider** %220, align 8
  store %class.SkArenaAlloc** %7, %class.SkArenaAlloc*** %221, align 8
  store %class.sk_sp.8* %5, %class.sk_sp.8** %222, align 8
  %223 = bitcast %class.SkMatrix* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %223) #11
  %224 = getelementptr inbounds %class.SkMatrixProvider, %class.SkMatrixProvider* %1, i64 0, i32 2
  %225 = bitcast %class.SkMatrix* %224 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %223, i8* align 4 %225, i64 40, i1 false)
  %226 = load %class.SkPaint*, %class.SkPaint** %33, align 8
  %227 = call zeroext i1 @_ZN9SkBlitter24UseRasterPipelineBlitterERK8SkPixmapRK7SkPaintRK8SkMatrix(%class.SkPixmap* dereferenceable(40) %0, %class.SkPaint* dereferenceable(72) %226, %class.SkMatrix* dereferenceable(40) undef)
  br i1 %227, label %232, label %228

228:                                              ; preds = %216
  %229 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %5, i64 0, i32 0
  %230 = load %class.SkShader*, %class.SkShader** %229, align 8
  %231 = icmp eq %class.SkShader* %230, null
  br i1 %231, label %234, label %232

232:                                              ; preds = %228, %216
  %233 = call fastcc %class.SkBlitter* @"_ZZN9SkBlitter6ChooseERK8SkPixmapRK16SkMatrixProviderRK7SkPaintP12SkArenaAllocb5sk_spI8SkShaderEENK3$_1clEv"(%class.anon.13* nonnull %12)
  br label %374

234:                                              ; preds = %228
  %235 = load %class.SkPaint*, %class.SkPaint** %33, align 8
  %236 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %235, i64 0, i32 1, i32 0
  %237 = load %class.SkShader*, %class.SkShader** %236, align 8
  %238 = icmp eq %class.SkShader* %237, null
  br i1 %238, label %274, label %239

239:                                              ; preds = %234
  %240 = bitcast %class.SkShader* %237 to %class.SkShaderBase*
  %241 = bitcast %"struct.SkShaderBase::ContextRec"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %241) #11
  %242 = load i32, i32* %15, align 8
  %243 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %244 = bitcast %class.SkColorSpace** %243 to i64*
  %245 = load i64, i64* %244, align 8
  %246 = getelementptr inbounds %"struct.SkShaderBase::ContextRec", %"struct.SkShaderBase::ContextRec"* %14, i64 0, i32 0
  store %class.SkMatrix* %13, %class.SkMatrix** %246, align 8
  %247 = getelementptr inbounds %"struct.SkShaderBase::ContextRec", %"struct.SkShaderBase::ContextRec"* %14, i64 0, i32 1
  store %class.SkMatrix* null, %class.SkMatrix** %247, align 8
  %248 = getelementptr inbounds %"struct.SkShaderBase::ContextRec", %"struct.SkShaderBase::ContextRec"* %14, i64 0, i32 2
  store i32 %242, i32* %248, align 8
  %249 = getelementptr inbounds %"struct.SkShaderBase::ContextRec", %"struct.SkShaderBase::ContextRec"* %14, i64 0, i32 4
  %250 = bitcast %class.SkColorSpace** %249 to i64*
  store i64 %245, i64* %250, align 8
  %251 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %235, i64 0, i32 5, i32 3
  %252 = load float, float* %251, align 4
  %253 = fmul float %252, 2.550000e+02
  %254 = fadd float %253, 5.000000e-01
  %255 = call float @llvm.floor.f32(float %254) #11
  %256 = fcmp olt float %255, 0x41DFFFFFE0000000
  %257 = select i1 %256, float %255, float 0x41DFFFFFE0000000
  %258 = fcmp ogt float %257, 0xC1DFFFFFE0000000
  %259 = select i1 %258, float %257, float 0xC1DFFFFFE0000000
  %260 = fptosi float %259 to i32
  %261 = trunc i32 %260 to i8
  %262 = getelementptr inbounds %"struct.SkShaderBase::ContextRec", %"struct.SkShaderBase::ContextRec"* %14, i64 0, i32 5
  store i8 %261, i8* %262, align 8
  %263 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %235, i64 0, i32 8, i32 0, i32 0
  %264 = load i32, i32* %263, align 8
  %265 = getelementptr inbounds %"struct.SkShaderBase::ContextRec", %"struct.SkShaderBase::ContextRec"* %14, i64 0, i32 6
  %266 = lshr i32 %264, 1
  %267 = trunc i32 %266 to i8
  %268 = and i8 %267, 1
  store i8 %268, i8* %265, align 1
  %269 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %7, align 8
  %270 = call %"class.SkShaderBase::Context"* @_ZNK12SkShaderBase11makeContextERKNS_10ContextRecEP12SkArenaAlloc(%class.SkShaderBase* nonnull %240, %"struct.SkShaderBase::ContextRec"* nonnull dereferenceable(40) %14, %class.SkArenaAlloc* %269) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %241) #11
  %271 = icmp eq %"class.SkShaderBase::Context"* %270, null
  br i1 %271, label %272, label %274

272:                                              ; preds = %239
  %273 = call fastcc %class.SkBlitter* @"_ZZN9SkBlitter6ChooseERK8SkPixmapRK16SkMatrixProviderRK7SkPaintP12SkArenaAllocb5sk_spI8SkShaderEENK3$_1clEv"(%class.anon.13* nonnull %12)
  br label %374

274:                                              ; preds = %239, %234
  %275 = phi %"class.SkShaderBase::Context"* [ null, %234 ], [ %270, %239 ]
  %276 = load i32, i32* %15, align 8
  switch i32 %276, label %361 [
    i32 6, label %277
    i32 2, label %341
  ]

277:                                              ; preds = %274
  %278 = icmp eq %"class.SkShaderBase::Context"* %275, null
  br i1 %278, label %292, label %279

279:                                              ; preds = %277
  %280 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %7, align 8
  %281 = load %class.SkPaint*, %class.SkPaint** %33, align 8
  %282 = call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %280, i32 145, i32 8) #11
  %283 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %280, i64 0, i32 1
  %284 = bitcast i8** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = ptrtoint i8* %282 to i64
  %287 = sub i64 %286, %285
  %288 = trunc i64 %287 to i32
  %289 = getelementptr inbounds i8, i8* %282, i64 136
  store i8* %289, i8** %283, align 8
  call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %280, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZNS_4makeI23SkARGB32_Shader_BlitterJRK8SkPixmapRK7SkPaintRPN12SkShaderBase7ContextEEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOSD_ENUlPcE_8__invokeESM_, i32 %288) #11
  %290 = bitcast i8* %282 to %class.SkARGB32_Shader_Blitter*
  call void @_ZN23SkARGB32_Shader_BlitterC1ERK8SkPixmapRK7SkPaintPN12SkShaderBase7ContextE(%class.SkARGB32_Shader_Blitter* %290, %class.SkPixmap* dereferenceable(40) %0, %class.SkPaint* dereferenceable(72) %281, %"class.SkShaderBase::Context"* nonnull %275) #11
  %291 = bitcast i8* %282 to %class.SkBlitter*
  br label %374

292:                                              ; preds = %277
  %293 = load %class.SkPaint*, %class.SkPaint** %33, align 8
  %294 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %293, i64 0, i32 5
  %295 = call i32 @_ZNK8SkRGBA4fIL11SkAlphaType3EE9toSkColorEv(%struct.SkRGBA4f* %294) #11
  %296 = icmp eq i32 %295, -16777216
  br i1 %296, label %297, label %311

297:                                              ; preds = %292
  %298 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %7, align 8
  %299 = load %class.SkPaint*, %class.SkPaint** %33, align 8
  %300 = call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %298, i32 97, i32 8) #11
  %301 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %298, i64 0, i32 1
  %302 = bitcast i8** %301 to i64*
  %303 = load i64, i64* %302, align 8
  %304 = ptrtoint i8* %300 to i64
  %305 = sub i64 %304, %303
  %306 = trunc i64 %305 to i32
  %307 = getelementptr inbounds i8, i8* %300, i64 88
  store i8* %307, i8** %301, align 8
  call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %298, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZNS_4makeI22SkARGB32_Black_BlitterJRK8SkPixmapRK7SkPaintEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS9_ENUlPcE_8__invokeESI_, i32 %306) #11
  %308 = bitcast i8* %300 to %class.SkARGB32_Blitter*
  call void @_ZN16SkARGB32_BlitterC2ERK8SkPixmapRK7SkPaint(%class.SkARGB32_Blitter* %308, %class.SkPixmap* dereferenceable(40) %0, %class.SkPaint* dereferenceable(72) %299) #11
  %309 = bitcast i8* %300 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV22SkARGB32_Black_Blitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %309, align 8
  %310 = bitcast i8* %300 to %class.SkBlitter*
  br label %374

311:                                              ; preds = %292
  %312 = load %class.SkPaint*, %class.SkPaint** %33, align 8
  %313 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %312, i64 0, i32 5, i32 3
  %314 = load float, float* %313, align 4
  %315 = fmul float %314, 2.550000e+02
  %316 = fadd float %315, 5.000000e-01
  %317 = call float @llvm.floor.f32(float %316) #11
  %318 = fcmp olt float %317, 0x41DFFFFFE0000000
  %319 = select i1 %318, float %317, float 0x41DFFFFFE0000000
  %320 = fcmp ogt float %319, 0xC1DFFFFFE0000000
  %321 = select i1 %320, float %319, float 0xC1DFFFFFE0000000
  %322 = fptosi float %321 to i32
  %323 = trunc i32 %322 to i8
  %324 = icmp eq i8 %323, -1
  %325 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %7, align 8
  %326 = call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %325, i32 97, i32 8) #11
  %327 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %325, i64 0, i32 1
  %328 = bitcast i8** %327 to i64*
  %329 = load i64, i64* %328, align 8
  %330 = ptrtoint i8* %326 to i64
  %331 = sub i64 %330, %329
  %332 = trunc i64 %331 to i32
  %333 = getelementptr inbounds i8, i8* %326, i64 88
  store i8* %333, i8** %327, align 8
  br i1 %324, label %334, label %338

334:                                              ; preds = %311
  call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %325, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZNS_4makeI23SkARGB32_Opaque_BlitterJRK8SkPixmapRK7SkPaintEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS9_ENUlPcE_8__invokeESI_, i32 %332) #11
  %335 = bitcast i8* %326 to %class.SkARGB32_Blitter*
  call void @_ZN16SkARGB32_BlitterC2ERK8SkPixmapRK7SkPaint(%class.SkARGB32_Blitter* %335, %class.SkPixmap* dereferenceable(40) %0, %class.SkPaint* dereferenceable(72) %312) #11
  %336 = bitcast i8* %326 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV23SkARGB32_Opaque_Blitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %336, align 8
  %337 = bitcast i8* %326 to %class.SkBlitter*
  br label %374

338:                                              ; preds = %311
  call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %325, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZNS_4makeI16SkARGB32_BlitterJRK8SkPixmapRK7SkPaintEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS9_ENUlPcE_8__invokeESI_, i32 %332) #11
  %339 = bitcast i8* %326 to %class.SkARGB32_Blitter*
  call void @_ZN16SkARGB32_BlitterC1ERK8SkPixmapRK7SkPaint(%class.SkARGB32_Blitter* %339, %class.SkPixmap* dereferenceable(40) %0, %class.SkPaint* dereferenceable(72) %312) #11
  %340 = bitcast i8* %326 to %class.SkBlitter*
  br label %374

341:                                              ; preds = %274
  %342 = icmp eq %"class.SkShaderBase::Context"* %275, null
  br i1 %342, label %359, label %343

343:                                              ; preds = %341
  %344 = load %class.SkPaint*, %class.SkPaint** %33, align 8
  %345 = call zeroext i1 @_ZN23SkRGB565_Shader_Blitter8SupportsERK8SkPixmapRK7SkPaint(%class.SkPixmap* dereferenceable(40) %0, %class.SkPaint* dereferenceable(72) %344) #11
  br i1 %345, label %346, label %359

346:                                              ; preds = %343
  %347 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %7, align 8
  %348 = load %class.SkPaint*, %class.SkPaint** %33, align 8
  %349 = call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %347, i32 129, i32 8) #11
  %350 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %347, i64 0, i32 1
  %351 = bitcast i8** %350 to i64*
  %352 = load i64, i64* %351, align 8
  %353 = ptrtoint i8* %349 to i64
  %354 = sub i64 %353, %352
  %355 = trunc i64 %354 to i32
  %356 = getelementptr inbounds i8, i8* %349, i64 120
  store i8* %356, i8** %350, align 8
  call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %347, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZNS_4makeI23SkRGB565_Shader_BlitterJRK8SkPixmapRK7SkPaintRPN12SkShaderBase7ContextEEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOSD_ENUlPcE_8__invokeESM_, i32 %355) #11
  %357 = bitcast i8* %349 to %class.SkRGB565_Shader_Blitter*
  call void @_ZN23SkRGB565_Shader_BlitterC1ERK8SkPixmapRK7SkPaintPN12SkShaderBase7ContextE(%class.SkRGB565_Shader_Blitter* %357, %class.SkPixmap* dereferenceable(40) %0, %class.SkPaint* dereferenceable(72) %348, %"class.SkShaderBase::Context"* nonnull %275) #11
  %358 = bitcast i8* %349 to %class.SkBlitter*
  br label %374

359:                                              ; preds = %341, %343
  %360 = call fastcc %class.SkBlitter* @"_ZZN9SkBlitter6ChooseERK8SkPixmapRK16SkMatrixProviderRK7SkPaintP12SkArenaAllocb5sk_spI8SkShaderEENK3$_1clEv"(%class.anon.13* nonnull %12)
  br label %374

361:                                              ; preds = %274
  %362 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %7, align 8
  %363 = call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %362, i32 33, i32 8) #11
  %364 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %362, i64 0, i32 1
  %365 = bitcast i8** %364 to i64*
  %366 = load i64, i64* %365, align 8
  %367 = ptrtoint i8* %363 to i64
  %368 = sub i64 %367, %366
  %369 = trunc i64 %368 to i32
  %370 = getelementptr inbounds i8, i8* %363, i64 24
  store i8* %370, i8** %364, align 8
  call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %362, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZNS_4makeI13SkNullBlitterJEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS3_ENUlPcE_8__invokeESC_, i32 %369) #11
  %371 = bitcast i8* %363 to i32 (...)***
  %372 = getelementptr inbounds i8, i8* %363, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %372, i8 0, i64 16, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV13SkNullBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %371, align 8
  %373 = bitcast i8* %363 to %class.SkBlitter*
  br label %374

374:                                              ; preds = %272, %279, %297, %334, %338, %346, %359, %361, %232
  %375 = phi %class.SkBlitter* [ %233, %232 ], [ %373, %361 ], [ %358, %346 ], [ %360, %359 ], [ %291, %279 ], [ %310, %297 ], [ %337, %334 ], [ %340, %338 ], [ %273, %272 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %223) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %217) #11
  br label %376

376:                                              ; preds = %214, %374, %151, %139, %54
  %377 = phi %class.SkBlitter* [ %150, %139 ], [ %162, %151 ], [ %375, %374 ], [ %201, %214 ], [ %65, %54 ]
  %378 = load %class.SkPaint*, %class.SkPaint** %34, align 8
  %379 = icmp eq %class.SkPaint* %378, null
  br i1 %379, label %381, label %380

380:                                              ; preds = %376
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %378) #11
  store %class.SkPaint* null, %class.SkPaint** %34, align 8
  br label %381

381:                                              ; preds = %376, %380
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %31) #11
  br label %382

382:                                              ; preds = %381, %18
  %383 = phi %class.SkBlitter* [ %29, %18 ], [ %377, %381 ]
  ret %class.SkBlitter* %383
}

declare i32 @_Z19SkInterpretXfermodeRK7SkPaintb(%class.SkPaint* dereferenceable(72), i1 zeroext) local_unnamed_addr #5

declare zeroext i1 @_Z25SkColorTypeIsAlwaysOpaque11SkColorType(i32) local_unnamed_addr #5

declare void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint*, %class.sk_sp.8*) local_unnamed_addr #5

declare void @_ZN7SkPaint14setColorFilterE5sk_spI13SkColorFilterE(%class.SkPaint*, %class.sk_sp.10*) local_unnamed_addr #5

declare void @_ZN7SkPaint8setColorEj(%class.SkPaint*, i32) local_unnamed_addr #5

declare void @_ZN11SkPaintPriv17RemoveColorFilterEP7SkPaintP12SkColorSpace(%class.SkPaint*, %class.SkColorSpace*) local_unnamed_addr #5

declare zeroext i1 @_ZN11SkPaintPriv12ShouldDitherERK7SkPaint11SkColorType(%class.SkPaint* dereferenceable(72), i32) local_unnamed_addr #5

declare %class.SkBlitter* @_Z19SkCreateSkVMBlitterRK8SkPixmapRK7SkPaintRK16SkMatrixProviderP12SkArenaAlloc5sk_spI8SkShaderE(%class.SkPixmap* dereferenceable(40), %class.SkPaint* dereferenceable(72), %class.SkMatrixProvider* dereferenceable(112), %class.SkArenaAlloc*, %class.sk_sp.8*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc %class.SkBlitter* @"_ZZN9SkBlitter6ChooseERK8SkPixmapRK16SkMatrixProviderRK7SkPaintP12SkArenaAllocb5sk_spI8SkShaderEENK3$_1clEv"(%class.anon.13* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = alloca %class.sk_sp.8, align 8
  %3 = alloca %class.sk_sp.8, align 8
  %4 = getelementptr inbounds %class.anon.13, %class.anon.13* %0, i64 0, i32 0
  %5 = load %class.SkPixmap*, %class.SkPixmap** %4, align 8
  %6 = getelementptr inbounds %class.anon.13, %class.anon.13* %0, i64 0, i32 1
  %7 = load %class.SkTCopyOnFirstWrite*, %class.SkTCopyOnFirstWrite** %6, align 8
  %8 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %7, i64 0, i32 0
  %9 = load %class.SkPaint*, %class.SkPaint** %8, align 8
  %10 = getelementptr inbounds %class.anon.13, %class.anon.13* %0, i64 0, i32 2
  %11 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %10, align 8
  %12 = getelementptr inbounds %class.anon.13, %class.anon.13* %0, i64 0, i32 3
  %13 = load %class.SkArenaAlloc**, %class.SkArenaAlloc*** %12, align 8
  %14 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %13, align 8
  %15 = getelementptr inbounds %class.anon.13, %class.anon.13* %0, i64 0, i32 4
  %16 = load %class.sk_sp.8*, %class.sk_sp.8** %15, align 8
  %17 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %2, i64 0, i32 0
  %18 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %16, i64 0, i32 0
  %19 = load %class.SkShader*, %class.SkShader** %18, align 8
  %20 = icmp eq %class.SkShader* %19, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %1
  %22 = getelementptr inbounds %class.SkShader, %class.SkShader* %19, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 1 monotonic
  br label %24

24:                                               ; preds = %1, %21
  store %class.SkShader* %19, %class.SkShader** %17, align 8
  %25 = call %class.SkBlitter* @_Z29SkCreateRasterPipelineBlitterRK8SkPixmapRK7SkPaintRK16SkMatrixProviderP12SkArenaAlloc5sk_spI8SkShaderE(%class.SkPixmap* dereferenceable(40) %5, %class.SkPaint* dereferenceable(72) %9, %class.SkMatrixProvider* dereferenceable(112) %11, %class.SkArenaAlloc* %14, %class.sk_sp.8* nonnull %2) #11
  %26 = load %class.SkShader*, %class.SkShader** %17, align 8
  %27 = icmp eq %class.SkShader* %26, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %class.SkShader, %class.SkShader* %26, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 -1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %38

32:                                               ; preds = %28
  %33 = bitcast %class.SkShader* %26 to %class.SkRefCntBase*
  %34 = bitcast %class.SkShader* %26 to void (%class.SkRefCntBase*)***
  %35 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %34, align 8
  %36 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %35, i64 2
  %37 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %36, align 8
  call void %37(%class.SkRefCntBase* nonnull %33) #11
  br label %38

38:                                               ; preds = %24, %28, %32
  %39 = icmp eq %class.SkBlitter* %25, null
  br i1 %39, label %40, label %86

40:                                               ; preds = %38
  %41 = load %class.SkPixmap*, %class.SkPixmap** %4, align 8
  %42 = load %class.SkTCopyOnFirstWrite*, %class.SkTCopyOnFirstWrite** %6, align 8
  %43 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %42, i64 0, i32 0
  %44 = load %class.SkPaint*, %class.SkPaint** %43, align 8
  %45 = load %class.SkMatrixProvider*, %class.SkMatrixProvider** %10, align 8
  %46 = load %class.SkArenaAlloc**, %class.SkArenaAlloc*** %12, align 8
  %47 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %46, align 8
  %48 = load %class.sk_sp.8*, %class.sk_sp.8** %15, align 8
  %49 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %3, i64 0, i32 0
  %50 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %48, i64 0, i32 0
  %51 = load %class.SkShader*, %class.SkShader** %50, align 8
  %52 = icmp eq %class.SkShader* %51, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %40
  %54 = getelementptr inbounds %class.SkShader, %class.SkShader* %51, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw add i32* %54, i32 1 monotonic
  br label %56

56:                                               ; preds = %40, %53
  store %class.SkShader* %51, %class.SkShader** %49, align 8
  %57 = call %class.SkBlitter* @_Z19SkCreateSkVMBlitterRK8SkPixmapRK7SkPaintRK16SkMatrixProviderP12SkArenaAlloc5sk_spI8SkShaderE(%class.SkPixmap* dereferenceable(40) %41, %class.SkPaint* dereferenceable(72) %44, %class.SkMatrixProvider* dereferenceable(112) %45, %class.SkArenaAlloc* %47, %class.sk_sp.8* nonnull %3) #11
  %58 = load %class.SkShader*, %class.SkShader** %49, align 8
  %59 = icmp eq %class.SkShader* %58, null
  br i1 %59, label %70, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %class.SkShader, %class.SkShader* %58, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw add i32* %61, i32 -1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %70

64:                                               ; preds = %60
  %65 = bitcast %class.SkShader* %58 to %class.SkRefCntBase*
  %66 = bitcast %class.SkShader* %58 to void (%class.SkRefCntBase*)***
  %67 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %66, align 8
  %68 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %67, i64 2
  %69 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %68, align 8
  call void %69(%class.SkRefCntBase* nonnull %65) #11
  br label %70

70:                                               ; preds = %56, %60, %64
  %71 = icmp eq %class.SkBlitter* %57, null
  br i1 %71, label %72, label %86

72:                                               ; preds = %70
  %73 = load %class.SkArenaAlloc**, %class.SkArenaAlloc*** %12, align 8
  %74 = load %class.SkArenaAlloc*, %class.SkArenaAlloc** %73, align 8
  %75 = call i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc* %74, i32 33, i32 8) #11
  %76 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %74, i64 0, i32 1
  %77 = bitcast i8** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = ptrtoint i8* %75 to i64
  %80 = sub i64 %79, %78
  %81 = trunc i64 %80 to i32
  %82 = getelementptr inbounds i8, i8* %75, i64 24
  store i8* %82, i8** %76, align 8
  call void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc* %74, i8* (i8*)* nonnull @_ZZN12SkArenaAlloc4makeIZNS_4makeI13SkNullBlitterJEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS3_ENUlPcE_8__invokeESC_, i32 %81) #11
  %83 = bitcast i8* %75 to i32 (...)***
  %84 = getelementptr inbounds i8, i8* %75, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 16, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV13SkNullBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %83, align 8
  %85 = bitcast i8* %75 to %class.SkBlitter*
  br label %86

86:                                               ; preds = %70, %38, %72
  %87 = phi %class.SkBlitter* [ %85, %72 ], [ %57, %70 ], [ %25, %38 ]
  ret %class.SkBlitter* %87
}

declare %"class.SkShaderBase::Context"* @_ZNK12SkShaderBase11makeContextERKNS_10ContextRecEP12SkArenaAlloc(%class.SkShaderBase*, %"struct.SkShaderBase::ContextRec"* dereferenceable(40), %class.SkArenaAlloc*) local_unnamed_addr #5

declare zeroext i1 @_ZN23SkRGB565_Shader_Blitter8SupportsERK8SkPixmapRK7SkPaint(%class.SkPixmap* dereferenceable(40), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkShaderBlitterC2ERK8SkPixmapRK7SkPaintPN12SkShaderBase7ContextE(%class.SkShaderBlitter* nocapture, %class.SkPixmap* nocapture readonly dereferenceable(40), %class.SkPaint* nocapture readonly dereferenceable(72), %"class.SkShaderBase::Context"*) unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %class.SkShaderBlitter, %class.SkShaderBlitter* %0, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %class.SkShaderBlitter, %class.SkShaderBlitter* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %class.SkAutoMalloc* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV15SkRasterBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %8 = getelementptr inbounds %class.SkShaderBlitter, %class.SkShaderBlitter* %0, i64 0, i32 0, i32 1
  %9 = bitcast %class.SkPixmap* %8 to i8*
  %10 = bitcast %class.SkPixmap* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 16, i1 false) #11
  %11 = getelementptr inbounds %class.SkShaderBlitter, %class.SkShaderBlitter* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %13 = load %class.SkColorSpace*, %class.SkColorSpace** %12, align 8
  %14 = icmp eq %class.SkColorSpace* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 1 monotonic
  br label %18

18:                                               ; preds = %4, %15
  store %class.SkColorSpace* %13, %class.SkColorSpace** %11, align 8
  %19 = getelementptr inbounds %class.SkShaderBlitter, %class.SkShaderBlitter* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 1
  %20 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 0, i32 1
  %21 = bitcast i32* %20 to i64*
  %22 = bitcast i32* %19 to i64*
  %23 = load i64, i64* %21, align 8
  store i64 %23, i64* %22, align 8
  %24 = getelementptr inbounds %class.SkShaderBlitter, %class.SkShaderBlitter* %0, i64 0, i32 0, i32 1, i32 2, i32 1
  %25 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 0, i32 2, i32 1
  %26 = bitcast %struct.SkISize* %25 to i64*
  %27 = bitcast %struct.SkISize* %24 to i64*
  %28 = load i64, i64* %26, align 8
  store i64 %28, i64* %27, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV15SkShaderBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %29 = getelementptr inbounds %class.SkShaderBlitter, %class.SkShaderBlitter* %0, i64 0, i32 3
  %30 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 1, i32 0
  %31 = load %class.SkShader*, %class.SkShader** %30, align 8
  store %class.SkShader* %31, %class.SkShader** %29, align 8
  %32 = getelementptr inbounds %class.SkShaderBlitter, %class.SkShaderBlitter* %0, i64 0, i32 4
  store %"class.SkShaderBase::Context"* %3, %"class.SkShaderBase::Context"** %32, align 8
  %33 = getelementptr inbounds %class.SkShader, %class.SkShader* %31, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 1 monotonic
  %35 = load %"class.SkShaderBase::Context"*, %"class.SkShaderBase::Context"** %32, align 8
  %36 = bitcast %"class.SkShaderBase::Context"* %35 to i32 (%"class.SkShaderBase::Context"*)***
  %37 = load i32 (%"class.SkShaderBase::Context"*)**, i32 (%"class.SkShaderBase::Context"*)*** %36, align 8
  %38 = getelementptr inbounds i32 (%"class.SkShaderBase::Context"*)*, i32 (%"class.SkShaderBase::Context"*)** %37, i64 2
  %39 = load i32 (%"class.SkShaderBase::Context"*)*, i32 (%"class.SkShaderBase::Context"*)** %38, align 8
  %40 = tail call i32 %39(%"class.SkShaderBase::Context"* %35) #11
  %41 = getelementptr inbounds %class.SkShaderBlitter, %class.SkShaderBlitter* %0, i64 0, i32 1
  store i32 %40, i32* %41, align 8
  %42 = getelementptr inbounds %class.SkShaderBlitter, %class.SkShaderBlitter* %0, i64 0, i32 5
  %43 = lshr i32 %40, 1
  %44 = trunc i32 %43 to i8
  %45 = and i8 %44, 1
  store i8 %45, i8* %42, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkShaderBlitterD2Ev(%class.SkShaderBlitter* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.SkShaderBlitter, %class.SkShaderBlitter* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV15SkShaderBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkShaderBlitter, %class.SkShaderBlitter* %0, i64 0, i32 3
  %4 = bitcast %class.SkShader** %3 to %class.SkRefCntBase**
  %5 = load %class.SkRefCntBase*, %class.SkRefCntBase** %4, align 8
  %6 = getelementptr inbounds %class.SkRefCntBase, %class.SkRefCntBase* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 -1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %14

9:                                                ; preds = %1
  %10 = bitcast %class.SkRefCntBase* %5 to void (%class.SkRefCntBase*)***
  %11 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %10, align 8
  %12 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %11, i64 2
  %13 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %12, align 8
  tail call void %13(%class.SkRefCntBase* %5) #11
  br label %14

14:                                               ; preds = %1, %9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV15SkRasterBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %15 = getelementptr inbounds %class.SkShaderBlitter, %class.SkShaderBlitter* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %16 = load %class.SkColorSpace*, %class.SkColorSpace** %15, align 8
  %17 = icmp eq %class.SkColorSpace* %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 -1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  %23 = bitcast %class.SkColorSpace* %16 to i8*
  tail call void @_ZdlPv(i8* %23) #12
  br label %24

24:                                               ; preds = %22, %18, %14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV9SkBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %25 = getelementptr inbounds %class.SkShaderBlitter, %class.SkShaderBlitter* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  store i8* null, i8** %25, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %24
  tail call void @_Z7sk_freePv(i8* nonnull %26) #11
  br label %29

29:                                               ; preds = %24, %28
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN15SkShaderBlitterD0Ev(%class.SkShaderBlitter* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9SkBlitter10blitAntiH2Eiijj(%class.SkBlitter*, i32, i32, i32, i32) unnamed_addr #3 comdat align 2 {
  %6 = alloca [3 x i16], align 2
  %7 = alloca [2 x i8], align 1
  %8 = bitcast [3 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %8) #11
  %9 = getelementptr inbounds [3 x i16], [3 x i16]* %6, i64 0, i64 0
  %10 = getelementptr inbounds [3 x i16], [3 x i16]* %6, i64 0, i64 1
  %11 = getelementptr inbounds [3 x i16], [3 x i16]* %6, i64 0, i64 2
  %12 = getelementptr inbounds [2 x i8], [2 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %12) #11
  %13 = getelementptr inbounds [2 x i8], [2 x i8]* %7, i64 0, i64 1
  store i16 1, i16* %9, align 2
  store i16 1, i16* %10, align 2
  store i16 0, i16* %11, align 2
  %14 = trunc i32 %3 to i8
  store i8 %14, i8* %12, align 1
  %15 = trunc i32 %4 to i8
  store i8 %15, i8* %13, align 1
  %16 = bitcast %class.SkBlitter* %0 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %17 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %17, i64 3
  %19 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %18, align 8
  call void %19(%class.SkBlitter* %0, i32 %1, i32 %2, i8* nonnull %12, i16* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9SkBlitter10blitAntiV2Eiijj(%class.SkBlitter*, i32, i32, i32, i32) unnamed_addr #3 comdat align 2 {
  %6 = alloca [2 x i16], align 2
  %7 = alloca [1 x i8], align 1
  %8 = bitcast [2 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #11
  %9 = getelementptr inbounds [2 x i16], [2 x i16]* %6, i64 0, i64 0
  %10 = getelementptr inbounds [2 x i16], [2 x i16]* %6, i64 0, i64 1
  %11 = getelementptr inbounds [1 x i8], [1 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #11
  store i16 1, i16* %9, align 2
  store i16 0, i16* %10, align 2
  %12 = trunc i32 %3 to i8
  store i8 %12, i8* %11, align 1
  %13 = bitcast %class.SkBlitter* %0 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %14 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %13, align 8
  %15 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %14, i64 3
  %16 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %15, align 8
  call void %16(%class.SkBlitter* %0, i32 %1, i32 %2, i8* nonnull %11, i16* nonnull %9) #11
  store i16 1, i16* %9, align 2
  store i16 0, i16* %10, align 2
  %17 = trunc i32 %4 to i8
  store i8 %17, i8* %11, align 1
  %18 = add nsw i32 %2, 1
  %19 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %13, align 8
  %20 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %19, i64 3
  %21 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %20, align 8
  call void %21(%class.SkBlitter* %0, i32 %1, i32 %18, i8* nonnull %11, i16* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK9SkBlitter20requestRowsPreservedEv(%class.SkBlitter*) unnamed_addr #3 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN9SkBlitter15allocBlitMemoryEm(%class.SkBlitter*, i64) unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %class.SkBlitter, %class.SkBlitter* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.SkBlitter, %class.SkBlitter* %0, i64 0, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %5, %1
  br i1 %6, label %7, label %14

7:                                                ; preds = %2
  %8 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %1, i32 2) #11
  %9 = getelementptr inbounds %class.SkAutoMalloc, %class.SkAutoMalloc* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  store i8* %8, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %7
  tail call void @_Z7sk_freePv(i8* nonnull %10) #11
  br label %13

13:                                               ; preds = %12, %7
  store i64 %1, i64* %4, align 8
  br label %14

14:                                               ; preds = %2, %13
  %15 = getelementptr inbounds %class.SkAutoMalloc, %class.SkAutoMalloc* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  ret i8* %16
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkNullBlitterD0Ev(%class.SkNullBlitter*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.SkNullBlitter, %class.SkNullBlitter* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV9SkBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkNullBlitter, %class.SkNullBlitter* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  store i8* null, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_Z7sk_freePv(i8* nonnull %4) #11
  br label %7

7:                                                ; preds = %1, %6
  %8 = bitcast %class.SkNullBlitter* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17SkRectClipBlitterD0Ev(%class.SkRectClipBlitter*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.SkRectClipBlitter, %class.SkRectClipBlitter* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV9SkBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkRectClipBlitter, %class.SkRectClipBlitter* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  store i8* null, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_Z7sk_freePv(i8* nonnull %4) #11
  br label %7

7:                                                ; preds = %1, %6
  %8 = bitcast %class.SkRectClipBlitter* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK17SkRectClipBlitter20requestRowsPreservedEv(%class.SkRectClipBlitter*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %class.SkRectClipBlitter, %class.SkRectClipBlitter* %0, i64 0, i32 1
  %3 = load %class.SkBlitter*, %class.SkBlitter** %2, align 8
  %4 = bitcast %class.SkBlitter* %3 to i32 (%class.SkBlitter*)***
  %5 = load i32 (%class.SkBlitter*)**, i32 (%class.SkBlitter*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%class.SkBlitter*)*, i32 (%class.SkBlitter*)** %5, i64 12
  %7 = load i32 (%class.SkBlitter*)*, i32 (%class.SkBlitter*)** %6, align 8
  %8 = tail call i32 %7(%class.SkBlitter* %3) #11
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN17SkRectClipBlitter15allocBlitMemoryEm(%class.SkRectClipBlitter*, i64) unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %class.SkRectClipBlitter, %class.SkRectClipBlitter* %0, i64 0, i32 1
  %4 = load %class.SkBlitter*, %class.SkBlitter** %3, align 8
  %5 = bitcast %class.SkBlitter* %4 to i8* (%class.SkBlitter*, i64)***
  %6 = load i8* (%class.SkBlitter*, i64)**, i8* (%class.SkBlitter*, i64)*** %5, align 8
  %7 = getelementptr inbounds i8* (%class.SkBlitter*, i64)*, i8* (%class.SkBlitter*, i64)** %6, i64 13
  %8 = load i8* (%class.SkBlitter*, i64)*, i8* (%class.SkBlitter*, i64)** %7, align 8
  %9 = tail call i8* %8(%class.SkBlitter* %4, i64 %1) #11
  ret i8* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkBlitterD2Ev(%class.SkBlitter* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.SkBlitter, %class.SkBlitter* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV9SkBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkBlitter, %class.SkBlitter* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  store i8* null, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_Z7sk_freePv(i8* nonnull %4) #11
  br label %7

7:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkRgnClipBlitterD0Ev(%class.SkRgnClipBlitter*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.SkRgnClipBlitter, %class.SkRgnClipBlitter* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV9SkBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkRgnClipBlitter, %class.SkRgnClipBlitter* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  store i8* null, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_Z7sk_freePv(i8* nonnull %4) #11
  br label %7

7:                                                ; preds = %1, %6
  %8 = bitcast %class.SkRgnClipBlitter* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK16SkRgnClipBlitter20requestRowsPreservedEv(%class.SkRgnClipBlitter*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %class.SkRgnClipBlitter, %class.SkRgnClipBlitter* %0, i64 0, i32 1
  %3 = load %class.SkBlitter*, %class.SkBlitter** %2, align 8
  %4 = bitcast %class.SkBlitter* %3 to i32 (%class.SkBlitter*)***
  %5 = load i32 (%class.SkBlitter*)**, i32 (%class.SkBlitter*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%class.SkBlitter*)*, i32 (%class.SkBlitter*)** %5, i64 12
  %7 = load i32 (%class.SkBlitter*)*, i32 (%class.SkBlitter*)** %6, align 8
  %8 = tail call i32 %7(%class.SkBlitter* %3) #11
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN16SkRgnClipBlitter15allocBlitMemoryEm(%class.SkRgnClipBlitter*, i64) unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %class.SkRgnClipBlitter, %class.SkRgnClipBlitter* %0, i64 0, i32 1
  %4 = load %class.SkBlitter*, %class.SkBlitter** %3, align 8
  %5 = bitcast %class.SkBlitter* %4 to i8* (%class.SkBlitter*, i64)***
  %6 = load i8* (%class.SkBlitter*, i64)**, i8* (%class.SkBlitter*, i64)*** %5, align 8
  %7 = getelementptr inbounds i8* (%class.SkBlitter*, i64)*, i8* (%class.SkBlitter*, i64)** %6, i64 13
  %8 = load i8* (%class.SkBlitter*, i64)*, i8* (%class.SkBlitter*, i64)** %7, align 8
  %9 = tail call i8* %8(%class.SkBlitter* %4, i64 %1) #11
  ret i8* %9
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #7

declare zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #5

declare %class.SkBlitter* @_Z29SkCreateRasterPipelineBlitterRK8SkPixmapRK7SkPaintRK16SkMatrixProviderP12SkArenaAlloc5sk_spI8SkShaderE(%class.SkPixmap* dereferenceable(40), %class.SkPaint* dereferenceable(72), %class.SkMatrixProvider* dereferenceable(112), %class.SkArenaAlloc*, %class.sk_sp.8*) local_unnamed_addr #5

declare i32 @_ZNK8SkRGBA4fIL11SkAlphaType3EE9toSkColorEv(%struct.SkRGBA4f*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15SkRasterBlitterD2Ev(%class.SkRasterBlitter*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.SkRasterBlitter, %class.SkRasterBlitter* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV15SkRasterBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkRasterBlitter, %class.SkRasterBlitter* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %4 = load %class.SkColorSpace*, %class.SkColorSpace** %3, align 8
  %5 = icmp eq %class.SkColorSpace* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = bitcast %class.SkColorSpace* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #12
  br label %12

12:                                               ; preds = %1, %6, %10
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV9SkBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %13 = getelementptr inbounds %class.SkRasterBlitter, %class.SkRasterBlitter* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  store i8* null, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %12
  tail call void @_Z7sk_freePv(i8* nonnull %14) #11
  br label %17

17:                                               ; preds = %12, %16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15SkRasterBlitterD0Ev(%class.SkRasterBlitter*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

declare i8* @_Z15sk_malloc_flagsmj(i64, i32) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvRK7SkIRectEE11__call_implINS0_20__default_alloc_funcIZN9SkBlitter10blitRegionERK8SkRegionE3$_0S5_EEEEvPKNS0_16__policy_storageES4_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %struct.SkIRect* nocapture readonly dereferenceable(16)) #3 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %class.SkBlitter**
  %4 = load %class.SkBlitter*, %class.SkBlitter** %3, align 8
  %5 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = sub i32 %10, %6
  %12 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = sub i32 %13, %8
  %15 = bitcast %class.SkBlitter* %4 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %16 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %15, align 8
  %17 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %16, i64 5
  %18 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %17, align 8
  tail call void %18(%class.SkBlitter* %4, i32 %6, i32 %8, i32 %11, i32 %14) #11
  ret void
}

declare i8* @_ZN12SkArenaAlloc21allocObjectWithFooterEjj(%class.SkArenaAlloc*, i32, i32) local_unnamed_addr #5

declare void @_ZN12SkArenaAlloc13installFooterEPFPcS0_Ej(%class.SkArenaAlloc*, i8* (i8*)*, i32) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZZN12SkArenaAlloc4makeIZNS_4makeI13SkNullBlitterJEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS3_ENUlPcE_8__invokeESC_(i8*) #6 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -33
  %3 = bitcast i8* %2 to %class.SkNullBlitter*
  %4 = bitcast i8* %2 to void (%class.SkNullBlitter*)***
  %5 = load void (%class.SkNullBlitter*)**, void (%class.SkNullBlitter*)*** %4, align 8
  %6 = load void (%class.SkNullBlitter*)*, void (%class.SkNullBlitter*)** %5, align 8
  tail call void %6(%class.SkNullBlitter* %3) #11
  ret i8* %2
}

declare void @_ZN7SkPaintC1ERKS_(%class.SkPaint*, %class.SkPaint* dereferenceable(72)) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZZN12SkArenaAlloc4makeIZNS_4makeI21SkA8_Coverage_BlitterJRK8SkPixmapRK7SkPaintEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS9_ENUlPcE_8__invokeESI_(i8*) #6 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -73
  %3 = bitcast i8* %2 to %class.SkA8_Coverage_Blitter*
  %4 = bitcast i8* %2 to void (%class.SkA8_Coverage_Blitter*)***
  %5 = load void (%class.SkA8_Coverage_Blitter*)**, void (%class.SkA8_Coverage_Blitter*)*** %4, align 8
  %6 = load void (%class.SkA8_Coverage_Blitter*)*, void (%class.SkA8_Coverage_Blitter*)** %5, align 8
  tail call void %6(%class.SkA8_Coverage_Blitter* %3) #11
  ret i8* %2
}

declare void @_ZN21SkA8_Coverage_BlitterC1ERK8SkPixmapRK7SkPaint(%class.SkA8_Coverage_Blitter*, %class.SkPixmap* dereferenceable(40), %class.SkPaint* dereferenceable(72)) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZZN12SkArenaAlloc4makeIZNS_4makeI23SkARGB32_Shader_BlitterJRK8SkPixmapRK7SkPaintRPN12SkShaderBase7ContextEEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOSD_ENUlPcE_8__invokeESM_(i8*) #6 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -145
  %3 = bitcast i8* %2 to %class.SkARGB32_Shader_Blitter*
  %4 = bitcast i8* %2 to void (%class.SkARGB32_Shader_Blitter*)***
  %5 = load void (%class.SkARGB32_Shader_Blitter*)**, void (%class.SkARGB32_Shader_Blitter*)*** %4, align 8
  %6 = load void (%class.SkARGB32_Shader_Blitter*)*, void (%class.SkARGB32_Shader_Blitter*)** %5, align 8
  tail call void %6(%class.SkARGB32_Shader_Blitter* %3) #11
  ret i8* %2
}

declare void @_ZN23SkARGB32_Shader_BlitterC1ERK8SkPixmapRK7SkPaintPN12SkShaderBase7ContextE(%class.SkARGB32_Shader_Blitter*, %class.SkPixmap* dereferenceable(40), %class.SkPaint* dereferenceable(72), %"class.SkShaderBase::Context"*) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZZN12SkArenaAlloc4makeIZNS_4makeI22SkARGB32_Black_BlitterJRK8SkPixmapRK7SkPaintEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS9_ENUlPcE_8__invokeESI_(i8*) #6 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -97
  %3 = bitcast i8* %2 to %class.SkARGB32_Black_Blitter*
  %4 = bitcast i8* %2 to void (%class.SkARGB32_Black_Blitter*)***
  %5 = load void (%class.SkARGB32_Black_Blitter*)**, void (%class.SkARGB32_Black_Blitter*)*** %4, align 8
  %6 = load void (%class.SkARGB32_Black_Blitter*)*, void (%class.SkARGB32_Black_Blitter*)** %5, align 8
  tail call void %6(%class.SkARGB32_Black_Blitter* %3) #11
  ret i8* %2
}

declare void @_ZN16SkARGB32_BlitterC2ERK8SkPixmapRK7SkPaint(%class.SkARGB32_Blitter*, %class.SkPixmap* dereferenceable(40), %class.SkPaint* dereferenceable(72)) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZZN12SkArenaAlloc4makeIZNS_4makeI23SkARGB32_Opaque_BlitterJRK8SkPixmapRK7SkPaintEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS9_ENUlPcE_8__invokeESI_(i8*) #6 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -97
  %3 = bitcast i8* %2 to %class.SkARGB32_Opaque_Blitter*
  %4 = bitcast i8* %2 to void (%class.SkARGB32_Opaque_Blitter*)***
  %5 = load void (%class.SkARGB32_Opaque_Blitter*)**, void (%class.SkARGB32_Opaque_Blitter*)*** %4, align 8
  %6 = load void (%class.SkARGB32_Opaque_Blitter*)*, void (%class.SkARGB32_Opaque_Blitter*)** %5, align 8
  tail call void %6(%class.SkARGB32_Opaque_Blitter* %3) #11
  ret i8* %2
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZZN12SkArenaAlloc4makeIZNS_4makeI16SkARGB32_BlitterJRK8SkPixmapRK7SkPaintEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOS9_ENUlPcE_8__invokeESI_(i8*) #6 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -97
  %3 = bitcast i8* %2 to %class.SkARGB32_Blitter*
  %4 = bitcast i8* %2 to void (%class.SkARGB32_Blitter*)***
  %5 = load void (%class.SkARGB32_Blitter*)**, void (%class.SkARGB32_Blitter*)*** %4, align 8
  %6 = load void (%class.SkARGB32_Blitter*)*, void (%class.SkARGB32_Blitter*)** %5, align 8
  tail call void %6(%class.SkARGB32_Blitter* %3) #11
  ret i8* %2
}

declare void @_ZN16SkARGB32_BlitterC1ERK8SkPixmapRK7SkPaint(%class.SkARGB32_Blitter*, %class.SkPixmap* dereferenceable(40), %class.SkPaint* dereferenceable(72)) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZZN12SkArenaAlloc4makeIZNS_4makeI23SkRGB565_Shader_BlitterJRK8SkPixmapRK7SkPaintRPN12SkShaderBase7ContextEEEEPT_DpOT0_EUlPvE_EEDTclfp_LDnEEEOSD_ENUlPcE_8__invokeESM_(i8*) #6 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -129
  %3 = bitcast i8* %2 to %class.SkRGB565_Shader_Blitter*
  %4 = bitcast i8* %2 to void (%class.SkRGB565_Shader_Blitter*)***
  %5 = load void (%class.SkRGB565_Shader_Blitter*)**, void (%class.SkRGB565_Shader_Blitter*)*** %4, align 8
  %6 = load void (%class.SkRGB565_Shader_Blitter*)*, void (%class.SkRGB565_Shader_Blitter*)** %5, align 8
  tail call void %6(%class.SkRGB565_Shader_Blitter* %3) #11
  ret i8* %2
}

declare void @_ZN23SkRGB565_Shader_BlitterC1ERK8SkPixmapRK7SkPaintPN12SkShaderBase7ContextE(%class.SkRGB565_Shader_Blitter*, %class.SkPixmap* dereferenceable(40), %class.SkPaint* dereferenceable(72), %"class.SkShaderBase::Context"*) unnamed_addr #5

attributes #0 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { cold noreturn nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
