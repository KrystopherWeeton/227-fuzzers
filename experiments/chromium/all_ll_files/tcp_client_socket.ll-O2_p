; ModuleID = '../../net/socket/tcp_client_socket.cc'
source_filename = "../../net/socket/tcp_client_socket.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"struct.base::FeatureParam" = type { %"struct.base::Feature"*, i8*, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"struct.base::FeatureParam.188" = type { %"struct.base::Feature"*, i8*, double }
%"class.net::TCPClientSocket" = type { %"class.net::TransportClientSocket", %"class.base::PowerSuspendObserver", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.35", %"class.net::AddressList", i32, %"class.base::OnceCallback", %"class.base::OnceCallback", %"class.base::OnceCallback", i32, i8, %"class.std::__1::vector.48", i64, %"class.base::RepeatingCallback", i8, i8, %"class.absl::optional", %"class.net::NetworkQualityEstimator"*, %"class.base::OneShotTimer", %"class.base::WeakPtrFactory.168" }
%"class.net::TransportClientSocket" = type { %"class.net::StreamSocket" }
%"class.net::StreamSocket" = type { %"class.net::Socket" }
%"class.net::Socket" = type { i32 (...)**, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.base::PowerSuspendObserver" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.net::TCPSocketPosix"* }
%"class.net::TCPSocketPosix" = type <{ i32 (...)**, %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.12", i8, [7 x i8], %"class.net::NetLogWithSource", %"class.net::SocketTag", [7 x i8] }>
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.net::SocketPosix"* }
%"class.net::SocketPosix" = type opaque
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.net::SocketPerformanceWatcher"* }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.net::SocketTag" = type { i8 }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.net::IPEndPoint"* }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.net::AddressList" = type { %"class.std::__1::vector.41", %"class.std::__1::vector" }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*, %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector.48" = type { %"class.std::__1::__vector_base.49" }
%"class.std::__1::__vector_base.49" = type { %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"*, %"class.std::__1::__compressed_pair.50" }
%"struct.net::ConnectionAttempt" = type { %"class.net::IPEndPoint", i32 }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"struct.net::ConnectionAttempt"* }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.55 }
%union.anon.55 = type { %"class.base::TimeTicks" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.167" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.165, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.166" }
%class.scoped_refptr.165 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.108" }>
%"class.base::RefCountedThreadSafe.108" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.166" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.148 }
%class.scoped_refptr.148 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.149", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.149" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.150" }
%"struct.std::__1::atomic.150" = type { %"struct.std::__1::__atomic_base.151" }
%"struct.std::__1::__atomic_base.151" = type { %"struct.std::__1::__atomic_base.152" }
%"struct.std::__1::__atomic_base.152" = type { %"struct.std::__1::__cxx_atomic_impl.153" }
%"struct.std::__1::__cxx_atomic_impl.153" = type { %"struct.std::__1::__cxx_atomic_base_impl.154" }
%"struct.std::__1::__cxx_atomic_base_impl.154" = type { i8 }
%"class.base::OnceCallback.167" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.168" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.net::SocketPerformanceWatcher" = type { i32 (...)** }
%"class.net::NetworkQualityEstimator" = type { %"class.net::NetworkChangeNotifier::ConnectionTypeObserver", %"class.base::ObserverList", %"class.base::ObserverList.64", %"class.base::ObserverList.68", %"class.std::__1::unique_ptr.72", i64, i32, %"class.absl::optional", i8, i8, %"class.base::TickClock"*, %"class.base::TimeTicks", %"struct.net::nqe::internal::NetworkID", %"class.net::nqe::internal::ObservationBuffer", [3 x %"class.net::nqe::internal::ObservationBuffer"], %"class.base::TimeTicks", %"class.net::nqe::internal::NetworkQuality", i32, [4 x i8], %"class.base::ObserverList.96", %"class.base::ObserverList.100", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.114", %"class.base::TimeDelta", %"class.base::TimeTicks", i64, i64, i64, i64, i64, %"class.net::nqe::internal::NetworkQuality", %"class.absl::optional.120", i32, %"class.absl::optional.125", %"class.absl::optional.125", %"class.std::__1::unique_ptr.130", i8, %"class.net::NetLogWithSource", %"class.net::nqe::internal::EventCreator", %"class.base::TimeTicks", %"class.absl::optional", %"class.std::__1::unique_ptr.158", %"class.base::WeakPtrFactory.164" }
%"class.net::NetworkChangeNotifier::ConnectionTypeObserver" = type { i32 (...)**, %class.scoped_refptr.56 }
%class.scoped_refptr.56 = type { %"class.base::ObserverListThreadSafe"* }
%"class.base::ObserverListThreadSafe" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.57", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.57" = type { %"class.std::__1::__vector_base.58" }
%"class.std::__1::__vector_base.58" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.59" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::ObserverList.64" = type <{ %"class.std::__1::vector.57", %"class.base::LinkedList.65", i64, i32, [4 x i8] }>
%"class.base::LinkedList.65" = type { %"class.base::LinkNode.66" }
%"class.base::LinkNode.66" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ObserverList.68" = type <{ %"class.std::__1::vector.57", %"class.base::LinkedList.69", i64, i32, [4 x i8] }>
%"class.base::LinkedList.69" = type { %"class.base::LinkNode.70" }
%"class.base::LinkNode.70" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.net::NetworkQualityEstimatorParams"* }
%"class.net::NetworkQualityEstimatorParams" = type { %"class.std::__1::map", i64, i32, double, double, double, %"class.absl::optional.83", i8, i8, %"class.base::TimeDelta", double, double, i32, i32, %"class.base::TimeDelta", i64, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i32, %"class.base::TimeDelta", i8, %"class.base::TimeDelta", i8, i8, double, i8, %"class.base::TimeDelta", i8, i8, [6 x i8], [9 x %"class.net::nqe::internal::NetworkQuality"], [6 x %"class.net::nqe::internal::NetworkQuality"], [6 x %"class.net::nqe::internal::NetworkQuality"] }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.75", %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { i64 }
%"class.absl::optional.83" = type { %"class.absl::optional_internal::optional_data.84" }
%"class.absl::optional_internal::optional_data.84" = type { %"class.absl::optional_internal::optional_data_base.85" }
%"class.absl::optional_internal::optional_data_base.85" = type { %"class.absl::optional_internal::optional_data_dtor_base.86" }
%"class.absl::optional_internal::optional_data_dtor_base.86" = type { i8, %union.anon.87 }
%union.anon.87 = type { i32 }
%"struct.net::nqe::internal::NetworkID" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.net::nqe::internal::ObservationBuffer" = type { %"class.net::NetworkQualityEstimatorParams"*, %"class.base::circular_deque", double, double, %"class.base::TickClock"* }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.net::nqe::internal::Observation"*, i64 }
%"class.net::nqe::internal::Observation" = type { i32, %"class.base::TimeTicks", i32, i32, %"class.absl::optional.91" }
%"class.absl::optional.91" = type { %"class.absl::optional_internal::optional_data.92" }
%"class.absl::optional_internal::optional_data.92" = type { %"class.absl::optional_internal::optional_data_base.93" }
%"class.absl::optional_internal::optional_data_base.93" = type { %"class.absl::optional_internal::optional_data_dtor_base.94" }
%"class.absl::optional_internal::optional_data_dtor_base.94" = type { i8, %union.anon.95 }
%union.anon.95 = type { i64 }
%"class.base::ObserverList.96" = type <{ %"class.std::__1::vector.57", %"class.base::LinkedList.97", i64, i32, [4 x i8] }>
%"class.base::LinkedList.97" = type { %"class.base::LinkNode.98" }
%"class.base::LinkNode.98" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ObserverList.100" = type <{ %"class.std::__1::vector.57", %"class.base::LinkedList.101", i64, i32, [4 x i8] }>
%"class.base::LinkedList.101" = type { %"class.base::LinkNode.102" }
%"class.base::LinkNode.102" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.net::nqe::internal::SocketWatcherFactory"* }
%"class.net::nqe::internal::SocketWatcherFactory" = type { %"class.net::SocketPerformanceWatcherFactory", %class.scoped_refptr.107, %"class.base::TimeDelta", i8, %"class.base::RepeatingCallback.109", %"class.base::RepeatingCallback.110", %"class.base::TickClock"* }
%"class.net::SocketPerformanceWatcherFactory" = type { i32 (...)** }
%class.scoped_refptr.107 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::RepeatingCallback.109" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.110" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.net::nqe::internal::ThroughputAnalyzer"* }
%"class.net::nqe::internal::ThroughputAnalyzer" = type opaque
%"class.net::nqe::internal::NetworkQuality" = type <{ %"class.base::TimeDelta", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.absl::optional.120" = type { %"class.absl::optional_internal::optional_data.121" }
%"class.absl::optional_internal::optional_data.121" = type { %"class.absl::optional_internal::optional_data_base.122" }
%"class.absl::optional_internal::optional_data_base.122" = type { %"class.absl::optional_internal::optional_data_dtor_base.123" }
%"class.absl::optional_internal::optional_data_dtor_base.123" = type { i8, %union.anon.124 }
%union.anon.124 = type { %"class.base::TimeDelta" }
%"class.absl::optional.125" = type { %"class.absl::optional_internal::optional_data.126" }
%"class.absl::optional_internal::optional_data.126" = type { %"class.absl::optional_internal::optional_data_base.127" }
%"class.absl::optional_internal::optional_data_base.127" = type { %"class.absl::optional_internal::optional_data_dtor_base.128" }
%"class.absl::optional_internal::optional_data_dtor_base.128" = type { i8, %union.anon.129 }
%union.anon.129 = type { i32 }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.net::nqe::internal::NetworkQualityStore"* }
%"class.net::nqe::internal::NetworkQualityStore" = type { %"class.std::__1::map.133", %"class.base::ObserverList.144", %"class.base::WeakPtrFactory" }
%"class.std::__1::map.133" = type { %"class.std::__1::__tree.134" }
%"class.std::__1::__tree.134" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.135", %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"class.base::ObserverList.144" = type <{ %"class.std::__1::vector.57", %"class.base::LinkedList.145", i64, i32, [4 x i8] }>
%"class.base::LinkedList.145" = type { %"class.base::LinkNode.146" }
%"class.base::LinkNode.146" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.net::nqe::internal::EventCreator" = type { %"class.net::NetLogWithSource", i32, [4 x i8], %"class.net::nqe::internal::NetworkQuality" }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.net::ConnectivityMonitor"* }
%"class.net::ConnectivityMonitor" = type opaque
%"class.base::WeakPtrFactory.164" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector.18", %"class.std::__1::vector.25" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.20" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.27" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.175", i8* }
%"class.base::RefCountedThreadSafe.175" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.183", [4 x i8] }>
%"struct.std::__1::atomic.183" = type { %"struct.std::__1::__atomic_base.184" }
%"struct.std::__1::__atomic_base.184" = type { %"struct.std::__1::__atomic_base.185" }
%"struct.std::__1::__atomic_base.185" = type { %"struct.std::__1::__cxx_atomic_impl.186" }
%"struct.std::__1::__cxx_atomic_impl.186" = type { %"struct.std::__1::__cxx_atomic_base_impl.187" }
%"struct.std::__1::__cxx_atomic_base_impl.187" = type { i32 }
%"class.net::SSLInfo" = type opaque
%"struct.net::NetworkTrafficAnnotationTag" = type { i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.177 }
%class.scoped_refptr.177 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.net::SSLCertRequestInfo" = type opaque
%"struct.net::StreamSocket::SocketMemoryStats" = type { i64, i64, i64, i64 }

$_ZNSt3__16vectorIN3net17ConnectionAttemptENS_9allocatorIS2_EEE6insertINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISC_E9referenceEEE5valueENS7_IPS2_EEE4typeESA_SC_SC_ = comdat any

$_ZNK3net12StreamSocket15DumpMemoryStatsEPNS0_17SocketMemoryStatsE = comdat any

$_ZN4base20PowerSuspendObserver8OnResumeEv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net15TCPClientSocketEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi = comdat any

$_ZN4base8internal9BindStateIMN3net15TCPClientSocketEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net15TCPClientSocketEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net15TCPClientSocketEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__16vectorIN3net17ConnectionAttemptENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZNSt3__16vectorIN3net17ConnectionAttemptENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

@_ZTVN3net15TCPClientSocketE = hidden unnamed_addr constant { [38 x i8*], [6 x i8*] } { [38 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::TCPClientSocket"*)* @_ZN3net15TCPClientSocketD2Ev to i8*), i8* bitcast (void (%"class.net::TCPClientSocket"*)* @_ZN3net15TCPClientSocketD0Ev to i8*), i8* bitcast (i32 (%"class.net::TCPClientSocket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)* @_ZN3net15TCPClientSocket4ReadEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (i32 (%"class.net::TCPClientSocket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)* @_ZN3net15TCPClientSocket11ReadIfReadyEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (i32 (%"class.net::TCPClientSocket"*)* @_ZN3net15TCPClientSocket17CancelReadIfReadyEv to i8*), i8* bitcast (i32 (%"class.net::TCPClientSocket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"*)* @_ZN3net15TCPClientSocket5WriteEPNS_8IOBufferEiN4base12OnceCallbackIFviEEERKNS_27NetworkTrafficAnnotationTagE to i8*), i8* bitcast (i32 (%"class.net::TCPClientSocket"*, i32)* @_ZN3net15TCPClientSocket20SetReceiveBufferSizeEi to i8*), i8* bitcast (i32 (%"class.net::TCPClientSocket"*, i32)* @_ZN3net15TCPClientSocket17SetSendBufferSizeEi to i8*), i8* bitcast (void (%"class.net::Socket"*, %"class.std::__1::vector"*)* @_ZN3net6Socket13SetDnsAliasesENSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE to i8*), i8* bitcast (%"class.std::__1::vector"* (%"class.net::Socket"*)* @_ZNK3net6Socket13GetDnsAliasesEv to i8*), i8* bitcast (void (%"class.net::TCPClientSocket"*, %"class.base::RepeatingCallback"*)* @_ZN3net15TCPClientSocket24SetBeforeConnectCallbackERKN4base17RepeatingCallbackIFivEEE to i8*), i8* bitcast (i32 (%"class.net::TCPClientSocket"*, %"class.base::OnceCallback"*)* @_ZN3net15TCPClientSocket7ConnectEN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (i32 (%"class.net::StreamSocket"*, %"class.base::OnceCallback"*)* @_ZN3net12StreamSocket16ConfirmHandshakeEN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (void (%"class.net::TCPClientSocket"*)* @_ZN3net15TCPClientSocket10DisconnectEv to i8*), i8* bitcast (i1 (%"class.net::TCPClientSocket"*)* @_ZNK3net15TCPClientSocket11IsConnectedEv to i8*), i8* bitcast (i1 (%"class.net::TCPClientSocket"*)* @_ZNK3net15TCPClientSocket18IsConnectedAndIdleEv to i8*), i8* bitcast (i32 (%"class.net::TCPClientSocket"*, %"class.net::IPEndPoint"*)* @_ZNK3net15TCPClientSocket14GetPeerAddressEPNS_10IPEndPointE to i8*), i8* bitcast (i32 (%"class.net::TCPClientSocket"*, %"class.net::IPEndPoint"*)* @_ZNK3net15TCPClientSocket15GetLocalAddressEPNS_10IPEndPointE to i8*), i8* bitcast (%"class.net::NetLogWithSource"* (%"class.net::TCPClientSocket"*)* @_ZNK3net15TCPClientSocket6NetLogEv to i8*), i8* bitcast (i1 (%"class.net::TCPClientSocket"*)* @_ZNK3net15TCPClientSocket11WasEverUsedEv to i8*), i8* bitcast (i1 (%"class.net::TCPClientSocket"*)* @_ZNK3net15TCPClientSocket17WasAlpnNegotiatedEv to i8*), i8* bitcast (i32 (%"class.net::TCPClientSocket"*)* @_ZNK3net15TCPClientSocket21GetNegotiatedProtocolEv to i8*), i8* bitcast (void ()* @_ZNK3net12StreamSocket26GetPeerApplicationSettingsEv to i8*), i8* bitcast (i1 (%"class.net::TCPClientSocket"*, %"class.net::SSLInfo"*)* @_ZN3net15TCPClientSocket10GetSSLInfoEPNS_7SSLInfoE to i8*), i8* bitcast (void (%"class.net::StreamSocket"*, %"class.net::SSLCertRequestInfo"*)* @_ZNK3net12StreamSocket21GetSSLCertRequestInfoEPNS_18SSLCertRequestInfoE to i8*), i8* bitcast (void (%"class.net::TCPClientSocket"*, %"class.std::__1::vector.48"*)* @_ZNK3net15TCPClientSocket21GetConnectionAttemptsEPNSt3__16vectorINS_17ConnectionAttemptENS1_9allocatorIS3_EEEE to i8*), i8* bitcast (void (%"class.net::TCPClientSocket"*)* @_ZN3net15TCPClientSocket23ClearConnectionAttemptsEv to i8*), i8* bitcast (void (%"class.net::TCPClientSocket"*, %"class.std::__1::vector.48"*)* @_ZN3net15TCPClientSocket21AddConnectionAttemptsERKNSt3__16vectorINS_17ConnectionAttemptENS1_9allocatorIS3_EEEE to i8*), i8* bitcast (i64 (%"class.net::TCPClientSocket"*)* @_ZNK3net15TCPClientSocket21GetTotalReceivedBytesEv to i8*), i8* bitcast (void (%"class.net::StreamSocket"*, %"struct.net::StreamSocket::SocketMemoryStats"*)* @_ZNK3net12StreamSocket15DumpMemoryStatsEPNS0_17SocketMemoryStatsE to i8*), i8* bitcast (void (%"class.net::TCPClientSocket"*, %"class.net::SocketTag"*)* @_ZN3net15TCPClientSocket14ApplySocketTagERKNS_9SocketTagE to i8*), i8* bitcast (i32 (%"class.net::TCPClientSocket"*, %"class.net::IPEndPoint"*)* @_ZN3net15TCPClientSocket4BindERKNS_10IPEndPointE to i8*), i8* bitcast (i1 (%"class.net::TCPClientSocket"*, i1)* @_ZN3net15TCPClientSocket10SetNoDelayEb to i8*), i8* bitcast (i1 (%"class.net::TCPClientSocket"*, i1, i32)* @_ZN3net15TCPClientSocket12SetKeepAliveEbi to i8*), i8* bitcast (void (%"class.net::TCPClientSocket"*)* @_ZN3net15TCPClientSocket9OnSuspendEv to i8*), i8* bitcast (i32 (%"class.net::TCPClientSocket"*, %"class.net::IPEndPoint"*)* @_ZN3net15TCPClientSocket15ConnectInternalERKNS_10IPEndPointE to i8*)], [6 x i8*] [i8* inttoptr (i64 -32 to i8*), i8* null, i8* bitcast (void (%"class.net::TCPClientSocket"*)* @_ZThn32_N3net15TCPClientSocket9OnSuspendEv to i8*), i8* bitcast (void (%"class.base::PowerSuspendObserver"*)* @_ZN4base20PowerSuspendObserver8OnResumeEv to i8*), i8* bitcast (void (%"class.net::TCPClientSocket"*)* @_ZThn32_N3net15TCPClientSocketD1Ev to i8*), i8* bitcast (void (%"class.net::TCPClientSocket"*)* @_ZThn32_N3net15TCPClientSocketD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [10 x i8] c"DoConnect\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"../../net/socket/tcp_client_socket.cc\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"Net.TcpRtt.AtDisconnect\00", align 1
@.str.3 = private unnamed_addr constant [38 x i8] c"Net.TcpConnectAttempt.Latency.Success\00", align 1
@.str.4 = private unnamed_addr constant [36 x i8] c"Net.TcpConnectAttempt.Latency.Error\00", align 1
@.str.5 = private unnamed_addr constant [48 x i8] c"Net.TcpConnectAttempt.LatencyPercentRTT.Success\00", align 1
@.str.6 = private unnamed_addr constant [46 x i8] c"Net.TcpConnectAttempt.LatencyPercentRTT.Error\00", align 1
@_ZN3net8features25kTimeoutTcpConnectAttemptE = external global %"struct.base::Feature", align 8
@_ZN3net8features28kTimeoutTcpConnectAttemptMinE = external global %"struct.base::FeatureParam", align 8
@_ZN3net8features28kTimeoutTcpConnectAttemptMaxE = external global %"struct.base::FeatureParam", align 8
@_ZN3net8features38kTimeoutTcpConnectAttemptRTTMultiplierE = external global %"struct.base::FeatureParam.188", align 8
@_ZZN3net15TCPClientSocket36EmitTCPMetricsHistogramsOnDisconnectEvE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net15TCPClientSocket28EmitConnectAttemptHistogramsEiE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net15TCPClientSocket28EmitConnectAttemptHistogramsEiE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net15TCPClientSocket28EmitConnectAttemptHistogramsEiE24atomic_histogram_pointer_1.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net15TCPClientSocket28EmitConnectAttemptHistogramsEiE24atomic_histogram_pointer_2.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN3net15TCPClientSocketC1ERKNS_11AddressListENSt3__110unique_ptrINS_24SocketPerformanceWatcherENS4_14default_deleteIS6_EEEEPNS_23NetworkQualityEstimatorEPNS_6NetLogERKNS_12NetLogSourceE = hidden unnamed_addr alias void (%"class.net::TCPClientSocket"*, %"class.net::AddressList"*, %"class.net::SocketPerformanceWatcher"*, %"class.net::NetworkQualityEstimator"*, %"class.net::NetLog"*, %"struct.net::NetLogSource"*), void (%"class.net::TCPClientSocket"*, %"class.net::AddressList"*, %"class.net::SocketPerformanceWatcher"*, %"class.net::NetworkQualityEstimator"*, %"class.net::NetLog"*, %"struct.net::NetLogSource"*)* @_ZN3net15TCPClientSocketC2ERKNS_11AddressListENSt3__110unique_ptrINS_24SocketPerformanceWatcherENS4_14default_deleteIS6_EEEEPNS_23NetworkQualityEstimatorEPNS_6NetLogERKNS_12NetLogSourceE
@_ZN3net15TCPClientSocketC1ENSt3__110unique_ptrINS_14TCPSocketPosixENS1_14default_deleteIS3_EEEERKNS_10IPEndPointE = hidden unnamed_addr alias void (%"class.net::TCPClientSocket"*, %"class.net::TCPSocketPosix"*, %"class.net::IPEndPoint"*), void (%"class.net::TCPClientSocket"*, %"class.net::TCPSocketPosix"*, %"class.net::IPEndPoint"*)* @_ZN3net15TCPClientSocketC2ENSt3__110unique_ptrINS_14TCPSocketPosixENS1_14default_deleteIS3_EEEERKNS_10IPEndPointE
@_ZN3net15TCPClientSocketD1Ev = hidden unnamed_addr alias void (%"class.net::TCPClientSocket"*), void (%"class.net::TCPClientSocket"*)* @_ZN3net15TCPClientSocketD2Ev
@_ZN3net15TCPClientSocketC1ENSt3__110unique_ptrINS_14TCPSocketPosixENS1_14default_deleteIS3_EEEERKNS_11AddressListEiNS2_INS_10IPEndPointENS4_ISA_EEEEPNS_23NetworkQualityEstimatorE = hidden unnamed_addr alias void (%"class.net::TCPClientSocket"*, %"class.net::TCPSocketPosix"*, %"class.net::AddressList"*, i32, %"class.net::IPEndPoint"*, %"class.net::NetworkQualityEstimator"*), void (%"class.net::TCPClientSocket"*, %"class.net::TCPSocketPosix"*, %"class.net::AddressList"*, i32, %"class.net::IPEndPoint"*, %"class.net::NetworkQualityEstimator"*)* @_ZN3net15TCPClientSocketC2ENSt3__110unique_ptrINS_14TCPSocketPosixENS1_14default_deleteIS3_EEEERKNS_11AddressListEiNS2_INS_10IPEndPointENS4_ISA_EEEEPNS_23NetworkQualityEstimatorE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15TCPClientSocketC2ERKNS_11AddressListENSt3__110unique_ptrINS_24SocketPerformanceWatcherENS4_14default_deleteIS6_EEEEPNS_23NetworkQualityEstimatorEPNS_6NetLogERKNS_12NetLogSourceE(%"class.net::TCPClientSocket"*, %"class.net::AddressList"* dereferenceable(48), %"class.net::SocketPerformanceWatcher"*, %"class.net::NetworkQualityEstimator"*, %"class.net::NetLog"*, %"struct.net::NetLogSource"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %7 = tail call i8* @_Znwm(i64 72) #10
  %8 = bitcast i8* %7 to %"class.net::TCPSocketPosix"*
  tail call void @_ZN3net14TCPSocketPosixC1ENSt3__110unique_ptrINS_24SocketPerformanceWatcherENS1_14default_deleteIS3_EEEEPNS_6NetLogERKNS_12NetLogSourceE(%"class.net::TCPSocketPosix"* nonnull %8, %"class.net::SocketPerformanceWatcher"* %2, %"class.net::NetLog"* %4, %"struct.net::NetLogSource"* dereferenceable(16) %5) #11
  tail call void @_ZN3net15TCPClientSocketC2ENSt3__110unique_ptrINS_14TCPSocketPosixENS1_14default_deleteIS3_EEEERKNS_11AddressListEiNS2_INS_10IPEndPointENS4_ISA_EEEEPNS_23NetworkQualityEstimatorE(%"class.net::TCPClientSocket"* %0, %"class.net::TCPSocketPosix"* nonnull %8, %"class.net::AddressList"* dereferenceable(48) %1, i32 undef, %"class.net::IPEndPoint"* null, %"class.net::NetworkQualityEstimator"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15TCPClientSocketC2ENSt3__110unique_ptrINS_14TCPSocketPosixENS1_14default_deleteIS3_EEEERKNS_11AddressListEiNS2_INS_10IPEndPointENS4_ISA_EEEEPNS_23NetworkQualityEstimatorE(%"class.net::TCPClientSocket"*, %"class.net::TCPSocketPosix"*, %"class.net::AddressList"* dereferenceable(48), i32, %"class.net::IPEndPoint"*, %"class.net::NetworkQualityEstimator"*) unnamed_addr #0 align 2 {
  %7 = ptrtoint %"class.net::TCPSocketPosix"* %1 to i64
  %8 = ptrtoint %"class.net::IPEndPoint"* %4 to i64
  %9 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 0
  tail call void @_ZN3net21TransportClientSocketC2Ev(%"class.net::TransportClientSocket"* %9) #11
  %10 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.base::PowerSuspendObserver", %"class.base::PowerSuspendObserver"* %10, i64 0, i32 0
  %12 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [38 x i8*], [6 x i8*] }, { [38 x i8*], [6 x i8*] }* @_ZTVN3net15TCPClientSocketE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [38 x i8*], [6 x i8*] }, { [38 x i8*], [6 x i8*] }* @_ZTVN3net15TCPClientSocketE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %13 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 2
  %14 = bitcast %"class.std::__1::unique_ptr"* %13 to i64*
  store i64 %7, i64* %14, align 8
  %15 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 3
  %16 = bitcast %"class.std::__1::unique_ptr.35"* %15 to i64*
  store i64 %8, i64* %16, align 8
  %17 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 4
  tail call void @_ZN3net11AddressListC1ERKS0_(%"class.net::AddressList"* %17, %"class.net::AddressList"* dereferenceable(48) %2) #11
  %18 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 5
  store i32 -1, i32* %18, align 8
  %19 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 9
  %21 = bitcast %"class.base::internal::BindStateBase"** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false)
  store i32 2, i32* %20, align 8
  %22 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 10
  store i8 0, i8* %22, align 4
  %23 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 11
  %24 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %24, align 8
  %25 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 17
  %26 = bitcast %"class.std::__1::vector.48"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 42, i1 false)
  store %"class.net::NetworkQualityEstimator"* %5, %"class.net::NetworkQualityEstimator"** %25, align 8
  %27 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 18
  tail call void @_ZN4base12OneShotTimerC1Ev(%"class.base::OneShotTimer"* %27) #11
  %28 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 19, i32 0
  %29 = ptrtoint %"class.net::TCPClientSocket"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %28, i64 %29) #11
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %30, align 8
  %32 = tail call zeroext i1 @_ZNK3net14TCPSocketPosix7IsValidEv(%"class.net::TCPSocketPosix"* %31) #11
  br i1 %32, label %33, label %35

33:                                               ; preds = %6
  %34 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %30, align 8
  tail call void @_ZN3net14TCPSocketPosix26SetDefaultOptionsForClientEv(%"class.net::TCPSocketPosix"* %34) #11
  br label %35

35:                                               ; preds = %33, %6
  tail call void @_ZN4base12PowerMonitor23AddPowerSuspendObserverEPNS_20PowerSuspendObserverE(%"class.base::PowerSuspendObserver"* %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15TCPClientSocketC2ENSt3__110unique_ptrINS_14TCPSocketPosixENS1_14default_deleteIS3_EEEERKNS_10IPEndPointE(%"class.net::TCPClientSocket"*, %"class.net::TCPSocketPosix"*, %"class.net::IPEndPoint"* dereferenceable(20)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.net::AddressList", align 8
  %5 = bitcast %"class.net::AddressList"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #11
  call void @_ZN3net11AddressListC1ERKNS_10IPEndPointE(%"class.net::AddressList"* nonnull %4, %"class.net::IPEndPoint"* dereferenceable(20) %2) #11
  call void @_ZN3net15TCPClientSocketC2ENSt3__110unique_ptrINS_14TCPSocketPosixENS1_14default_deleteIS3_EEEERKNS_11AddressListEiNS2_INS_10IPEndPointENS4_ISA_EEEEPNS_23NetworkQualityEstimatorE(%"class.net::TCPClientSocket"* %0, %"class.net::TCPSocketPosix"* %1, %"class.net::AddressList"* nonnull dereferenceable(48) %4, i32 undef, %"class.net::IPEndPoint"* null, %"class.net::NetworkQualityEstimator"* null)
  call void @_ZN3net11AddressListD1Ev(%"class.net::AddressList"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN3net11AddressListC1ERKNS_10IPEndPointE(%"class.net::AddressList"*, %"class.net::IPEndPoint"* dereferenceable(20)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net11AddressListD1Ev(%"class.net::AddressList"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15TCPClientSocketD2Ev(%"class.net::TCPClientSocket"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [38 x i8*], [6 x i8*] }, { [38 x i8*], [6 x i8*] }* @_ZTVN3net15TCPClientSocketE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.base::PowerSuspendObserver", %"class.base::PowerSuspendObserver"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [38 x i8*], [6 x i8*] }, { [38 x i8*], [6 x i8*] }* @_ZTVN3net15TCPClientSocketE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  tail call void @_ZN3net15TCPClientSocket12DoDisconnectEv(%"class.net::TCPClientSocket"* %0) #11
  %5 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 5
  store i32 -1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %7 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %6, align 8
  store %"class.net::IPEndPoint"* null, %"class.net::IPEndPoint"** %6, align 8
  %8 = icmp eq %"class.net::IPEndPoint"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %7) #11
  %10 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %10) #10
  br label %11

11:                                               ; preds = %1, %9
  %12 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 15
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 6, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %13) #11
  %14 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 7, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %14) #11
  %15 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 8, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %15) #11
  tail call void @_ZN4base12PowerMonitor26RemovePowerSuspendObserverEPNS_20PowerSuspendObserverE(%"class.base::PowerSuspendObserver"* %3) #11
  %16 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 19, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %16) #11
  %17 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 18
  tail call void @_ZN4base12OneShotTimerD1Ev(%"class.base::OneShotTimer"* %17) #11
  %18 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 13, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %18) #11
  %19 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 11, i32 0, i32 0
  %20 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %19, align 8
  %21 = icmp eq %"struct.net::ConnectionAttempt"* %20, null
  br i1 %21, label %36, label %22

22:                                               ; preds = %11
  %23 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 11, i32 0, i32 1
  %24 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %23, align 8
  %25 = icmp eq %"struct.net::ConnectionAttempt"* %24, %20
  br i1 %25, label %33, label %26

26:                                               ; preds = %22, %26
  %27 = phi %"struct.net::ConnectionAttempt"* [ %28, %26 ], [ %24, %22 ]
  %28 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %27, i64 -1
  %29 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %28, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %29) #11
  %30 = icmp eq %"struct.net::ConnectionAttempt"* %28, %20
  br i1 %30, label %31, label %26

31:                                               ; preds = %26
  %32 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %19, align 8
  br label %33

33:                                               ; preds = %31, %22
  %34 = phi %"struct.net::ConnectionAttempt"* [ %32, %31 ], [ %20, %22 ]
  store %"struct.net::ConnectionAttempt"* %20, %"struct.net::ConnectionAttempt"** %23, align 8
  %35 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %35) #10
  br label %36

36:                                               ; preds = %11, %33
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %15) #11
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %14) #11
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %13) #11
  %37 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 4
  tail call void @_ZN3net11AddressListD1Ev(%"class.net::AddressList"* %37) #11
  %38 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %6, align 8
  store %"class.net::IPEndPoint"* null, %"class.net::IPEndPoint"** %6, align 8
  %39 = icmp eq %"class.net::IPEndPoint"* %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %36
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %38) #11
  %41 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %41) #10
  br label %42

42:                                               ; preds = %36, %40
  %43 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %44 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %43, align 8
  store %"class.net::TCPSocketPosix"* null, %"class.net::TCPSocketPosix"** %43, align 8
  %45 = icmp eq %"class.net::TCPSocketPosix"* %44, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %42
  %47 = bitcast %"class.net::TCPSocketPosix"* %44 to void (%"class.net::TCPSocketPosix"*)***
  %48 = load void (%"class.net::TCPSocketPosix"*)**, void (%"class.net::TCPSocketPosix"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.net::TCPSocketPosix"*)*, void (%"class.net::TCPSocketPosix"*)** %48, i64 1
  %50 = load void (%"class.net::TCPSocketPosix"*)*, void (%"class.net::TCPSocketPosix"*)** %49, align 8
  tail call void %50(%"class.net::TCPSocketPosix"* nonnull %44) #11
  br label %51

51:                                               ; preds = %42, %46
  %52 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 0
  tail call void @_ZN3net21TransportClientSocketD2Ev(%"class.net::TransportClientSocket"* %52) #11
  ret void
}

declare void @_ZN4base12PowerMonitor26RemovePowerSuspendObserverEPNS_20PowerSuspendObserverE(%"class.base::PowerSuspendObserver"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base12OneShotTimerD1Ev(%"class.base::OneShotTimer"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net21TransportClientSocketD2Ev(%"class.net::TransportClientSocket"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N3net15TCPClientSocketD1Ev(%"class.net::TCPClientSocket"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 -1, i32 18, i32 0, i32 10, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.net::TCPClientSocket"*
  tail call void @_ZN3net15TCPClientSocketD2Ev(%"class.net::TCPClientSocket"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15TCPClientSocketD0Ev(%"class.net::TCPClientSocket"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3net15TCPClientSocketD2Ev(%"class.net::TCPClientSocket"* %0) #11
  %2 = bitcast %"class.net::TCPClientSocket"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N3net15TCPClientSocketD0Ev(%"class.net::TCPClientSocket"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 -1, i32 18, i32 0, i32 10, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.net::TCPClientSocket"*
  tail call void @_ZN3net15TCPClientSocketD2Ev(%"class.net::TCPClientSocket"* %3) #11
  %4 = bitcast i64* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.net::TCPClientSocket"* @_ZN3net15TCPClientSocket21CreateFromBoundSocketENSt3__110unique_ptrINS_14TCPSocketPosixENS1_14default_deleteIS3_EEEERKNS_11AddressListERKNS_10IPEndPointEPNS_23NetworkQualityEstimatorE(%"class.net::TCPSocketPosix"*, %"class.net::AddressList"* dereferenceable(48), %"class.net::IPEndPoint"* dereferenceable(20), %"class.net::NetworkQualityEstimator"*) local_unnamed_addr #0 align 2 {
  %5 = tail call i8* @_Znwm(i64 360) #10
  %6 = bitcast i8* %5 to %"class.net::TCPClientSocket"*
  %7 = tail call i8* @_Znwm(i64 20) #10
  %8 = bitcast i8* %7 to %"class.net::IPEndPoint"*
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* nonnull %8, %"class.net::IPEndPoint"* dereferenceable(20) %2) #11
  tail call void @_ZN3net15TCPClientSocketC2ENSt3__110unique_ptrINS_14TCPSocketPosixENS1_14default_deleteIS3_EEEERKNS_11AddressListEiNS2_INS_10IPEndPointENS4_ISA_EEEEPNS_23NetworkQualityEstimatorE(%"class.net::TCPClientSocket"* nonnull %6, %"class.net::TCPSocketPosix"* %0, %"class.net::AddressList"* dereferenceable(48) %1, i32 undef, %"class.net::IPEndPoint"* nonnull %8, %"class.net::NetworkQualityEstimator"* %3)
  ret %"class.net::TCPClientSocket"* %6
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15TCPClientSocket4BindERKNS_10IPEndPointE(%"class.net::TCPClientSocket"* nocapture, %"class.net::IPEndPoint"* dereferenceable(20)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, -1
  br i1 %5, label %35, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.35"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %8, align 8
  %10 = icmp eq %"class.net::IPEndPoint"* %9, null
  br i1 %10, label %11, label %35

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %13 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %12, align 8
  %14 = tail call zeroext i1 @_ZNK3net14TCPSocketPosix7IsValidEv(%"class.net::TCPSocketPosix"* %13) #11
  br i1 %14, label %22, label %15

15:                                               ; preds = %11
  %16 = tail call i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"* %1) #11
  %17 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %12, align 8
  %18 = tail call i32 @_ZN3net14TCPSocketPosix4OpenENS_13AddressFamilyE(%"class.net::TCPSocketPosix"* %17, i32 %16) #11
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %35

20:                                               ; preds = %15
  %21 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %12, align 8
  tail call void @_ZN3net14TCPSocketPosix26SetDefaultOptionsForClientEv(%"class.net::TCPSocketPosix"* %21) #11
  br label %22

22:                                               ; preds = %20, %11
  %23 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %12, align 8
  %24 = tail call i32 @_ZN3net14TCPSocketPosix4BindERKNS_10IPEndPointE(%"class.net::TCPSocketPosix"* %23, %"class.net::IPEndPoint"* dereferenceable(20) %1) #11
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %35

26:                                               ; preds = %22
  %27 = tail call i8* @_Znwm(i64 20) #10
  %28 = bitcast i8* %27 to %"class.net::IPEndPoint"*
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* nonnull %28, %"class.net::IPEndPoint"* dereferenceable(20) %1) #11
  %29 = ptrtoint i8* %27 to i64
  %30 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %8, align 8
  %31 = bitcast %"class.std::__1::unique_ptr.35"* %7 to i64*
  store i64 %29, i64* %31, align 8
  %32 = icmp eq %"class.net::IPEndPoint"* %30, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %26
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %30) #11
  %34 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %34) #10
  br label %35

35:                                               ; preds = %6, %26, %33, %15, %22, %2
  %36 = phi i32 [ -9, %6 ], [ -9, %2 ], [ %24, %22 ], [ %18, %15 ], [ 0, %33 ], [ 0, %26 ]
  ret i32 %36
}

declare zeroext i1 @_ZNK3net14TCPSocketPosix7IsValidEv(%"class.net::TCPSocketPosix"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15TCPClientSocket10OpenSocketENS_13AddressFamilyE(%"class.net::TCPClientSocket"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %3, align 8
  %5 = tail call i32 @_ZN3net14TCPSocketPosix4OpenENS_13AddressFamilyE(%"class.net::TCPSocketPosix"* %4, i32 %1) #11
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %3, align 8
  tail call void @_ZN3net14TCPSocketPosix26SetDefaultOptionsForClientEv(%"class.net::TCPSocketPosix"* %8) #11
  br label %9

9:                                                ; preds = %2, %7
  ret i32 %5
}

declare i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"*) local_unnamed_addr #2

declare i32 @_ZN3net14TCPSocketPosix4BindERKNS_10IPEndPointE(%"class.net::TCPSocketPosix"*, %"class.net::IPEndPoint"* dereferenceable(20)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net15TCPClientSocket12SetKeepAliveEbi(%"class.net::TCPClientSocket"* nocapture readonly, i1 zeroext, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %4, align 8
  %6 = tail call zeroext i1 @_ZN3net14TCPSocketPosix12SetKeepAliveEbi(%"class.net::TCPSocketPosix"* %5, i1 zeroext %1, i32 %2) #11
  ret i1 %6
}

declare zeroext i1 @_ZN3net14TCPSocketPosix12SetKeepAliveEbi(%"class.net::TCPSocketPosix"*, i1 zeroext, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net15TCPClientSocket10SetNoDelayEb(%"class.net::TCPClientSocket"* nocapture readonly, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %3, align 8
  %5 = tail call zeroext i1 @_ZN3net14TCPSocketPosix10SetNoDelayEb(%"class.net::TCPSocketPosix"* %4, i1 zeroext %1) #11
  ret i1 %5
}

declare zeroext i1 @_ZN3net14TCPSocketPosix10SetNoDelayEb(%"class.net::TCPSocketPosix"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15TCPClientSocket24SetBeforeConnectCallbackERKN4base17RepeatingCallbackIFivEEE(%"class.net::TCPClientSocket"*, %"class.base::RepeatingCallback"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 13, i32 0
  %4 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSERKS1_(%"class.base::internal::CallbackBaseCopyable"* %3, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15TCPClientSocket7ConnectEN4base12OnceCallbackIFviEEE(%"class.net::TCPClientSocket"*, %"class.base::OnceCallback"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %3, align 8
  %5 = tail call zeroext i1 @_ZNK3net14TCPSocketPosix7IsValidEv(%"class.net::TCPSocketPosix"* %4) #11
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 5
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, -1
  br i1 %9, label %44, label %10

10:                                               ; preds = %6, %2
  %11 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 15
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.net::TCPClientSocket"* %0 to void (%"class.net::TCPClientSocket"*)***
  %16 = load void (%"class.net::TCPClientSocket"*)**, void (%"class.net::TCPClientSocket"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.net::TCPClientSocket"*)*, void (%"class.net::TCPClientSocket"*)** %16, i64 13
  %18 = load void (%"class.net::TCPClientSocket"*)*, void (%"class.net::TCPClientSocket"*)** %17, align 8
  tail call void %18(%"class.net::TCPClientSocket"* %0) #11
  store i8 0, i8* %11, align 1
  br label %19

19:                                               ; preds = %10, %14
  %20 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %3, align 8
  %21 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 4
  tail call void @_ZN3net14TCPSocketPosix35StartLoggingMultipleConnectAttemptsERKNS_11AddressListE(%"class.net::TCPSocketPosix"* %20, %"class.net::AddressList"* dereferenceable(48) %21) #11
  %22 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 9
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 5
  store i32 0, i32* %23, align 8
  br label %24

24:                                               ; preds = %34, %19
  %25 = phi i32 [ 0, %19 ], [ %35, %34 ]
  %26 = phi i32 [ 0, %19 ], [ %32, %34 ]
  store i32 2, i32* %22, align 8
  switch i32 %25, label %41 [
    i32 0, label %27
    i32 1, label %29
  ]

27:                                               ; preds = %24
  %28 = tail call i32 @_ZN3net15TCPClientSocket9DoConnectEv(%"class.net::TCPClientSocket"* %0) #11
  br label %31

29:                                               ; preds = %24
  %30 = tail call i32 @_ZN3net15TCPClientSocket17DoConnectCompleteEi(%"class.net::TCPClientSocket"* %0, i32 %26) #11
  br label %31

31:                                               ; preds = %29, %27
  %32 = phi i32 [ %30, %29 ], [ %28, %27 ]
  %33 = icmp eq i32 %32, -1
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  %35 = load i32, i32* %22, align 8
  %36 = icmp eq i32 %35, 2
  br i1 %36, label %41, label %24

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 6, i32 0
  %39 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0
  %40 = tail call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %38, %"class.base::internal::CallbackBase"* dereferenceable(8) %39) #11
  br label %44

41:                                               ; preds = %34, %24
  %42 = phi i32 [ -9, %24 ], [ %32, %34 ]
  %43 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %3, align 8
  tail call void @_ZN3net14TCPSocketPosix33EndLoggingMultipleConnectAttemptsEi(%"class.net::TCPSocketPosix"* %43, i32 %42) #11
  br label %44

44:                                               ; preds = %37, %41, %6
  %45 = phi i32 [ 0, %6 ], [ %42, %41 ], [ -1, %37 ]
  ret i32 %45
}

declare void @_ZN3net14TCPSocketPosix35StartLoggingMultipleConnectAttemptsERKNS_11AddressListE(%"class.net::TCPSocketPosix"*, %"class.net::AddressList"* dereferenceable(48)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15TCPClientSocket13DoConnectLoopEi(%"class.net::TCPClientSocket"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 9
  %4 = load i32, i32* %3, align 8
  br label %5

5:                                                ; preds = %15, %2
  %6 = phi i32 [ %4, %2 ], [ %16, %15 ]
  %7 = phi i32 [ %1, %2 ], [ %13, %15 ]
  store i32 2, i32* %3, align 8
  switch i32 %6, label %18 [
    i32 0, label %8
    i32 1, label %10
  ]

8:                                                ; preds = %5
  %9 = tail call i32 @_ZN3net15TCPClientSocket9DoConnectEv(%"class.net::TCPClientSocket"* %0)
  br label %12

10:                                               ; preds = %5
  %11 = tail call i32 @_ZN3net15TCPClientSocket17DoConnectCompleteEi(%"class.net::TCPClientSocket"* %0, i32 %7)
  br label %12

12:                                               ; preds = %10, %8
  %13 = phi i32 [ %11, %10 ], [ %9, %8 ]
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %18, label %15

15:                                               ; preds = %12
  %16 = load i32, i32* %3, align 8
  %17 = icmp eq i32 %16, 2
  br i1 %17, label %18, label %5

18:                                               ; preds = %5, %15, %12
  %19 = phi i32 [ %13, %15 ], [ -1, %12 ], [ -9, %5 ]
  ret i32 %19
}

declare void @_ZN3net14TCPSocketPosix33EndLoggingMultipleConnectAttemptsEi(%"class.net::TCPSocketPosix"*, i32) local_unnamed_addr #2

declare void @_ZN3net21TransportClientSocketC2Ev(%"class.net::TransportClientSocket"*) unnamed_addr #2

declare void @_ZN3net11AddressListC1ERKS0_(%"class.net::AddressList"*, %"class.net::AddressList"* dereferenceable(48)) unnamed_addr #2

declare void @_ZN4base12OneShotTimerC1Ev(%"class.base::OneShotTimer"*) unnamed_addr #2

declare void @_ZN3net14TCPSocketPosix26SetDefaultOptionsForClientEv(%"class.net::TCPSocketPosix"*) local_unnamed_addr #2

declare void @_ZN4base12PowerMonitor23AddPowerSuspendObserverEPNS_20PowerSuspendObserverE(%"class.base::PowerSuspendObserver"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15TCPClientSocket10ReadCommonEPNS_8IOBufferEiN4base12OnceCallbackIFviEEEb(%"class.net::TCPClientSocket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 15
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %51

12:                                               ; preds = %5
  %13 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  %15 = ptrtoint %"class.net::TCPClientSocket"* %0 to i64
  %16 = tail call i8* @_Znwm(i64 56) #10, !noalias !3
  %17 = bitcast i8* %16 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %17, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net15TCPClientSocketEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net15TCPClientSocketEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !3
  %18 = getelementptr inbounds i8, i8* %16, i64 32
  %19 = bitcast i8* %18 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::TCPClientSocket"*, i32)* @_ZN3net15TCPClientSocket15DidCompleteReadEi to i64), i64 0>, <2 x i64>* %19, align 8, !noalias !3
  %20 = getelementptr inbounds i8, i8* %16, i64 48
  %21 = bitcast i8* %20 to i64*
  store i64 %15, i64* %21, align 8, !noalias !3
  %22 = bitcast %"class.base::OnceCallback"* %6 to i8**
  store i8* %16, i8** %22, align 8, !alias.scope !3
  %23 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %24 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %23, align 8
  %25 = ptrtoint i8* %16 to i64
  br i1 %4, label %29, label %26

26:                                               ; preds = %12
  %27 = bitcast %"class.base::OnceCallback"* %8 to i64*
  store i64 %25, i64* %27, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %14, align 8
  %28 = call i32 @_ZN3net14TCPSocketPosix4ReadEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.net::TCPSocketPosix"* %24, %"class.net::IOBuffer"* %1, i32 %2, %"class.base::OnceCallback"* nonnull %8) #11
  br label %32

29:                                               ; preds = %12
  %30 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %25, i64* %30, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %14, align 8
  %31 = call i32 @_ZN3net14TCPSocketPosix11ReadIfReadyEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.net::TCPSocketPosix"* %24, %"class.net::IOBuffer"* %1, i32 %2, %"class.base::OnceCallback"* nonnull %7) #11
  br label %32

32:                                               ; preds = %26, %29
  %33 = phi %"class.base::OnceCallback"* [ %8, %26 ], [ %7, %29 ]
  %34 = phi i32 [ %28, %26 ], [ %31, %29 ]
  %35 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %33, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %35) #11
  %36 = icmp eq i32 %34, -1
  br i1 %36, label %37, label %41

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 7, i32 0
  %39 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %40 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %38, %"class.base::internal::CallbackBase"* dereferenceable(8) %39) #11
  br label %49

41:                                               ; preds = %32
  %42 = icmp sgt i32 %34, 0
  br i1 %42, label %43, label %49

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 14
  store i8 1, i8* %44, align 8
  %45 = sext i32 %34 to i64
  %46 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 12
  %47 = load i64, i64* %46, align 8
  %48 = add nsw i64 %47, %45
  store i64 %48, i64* %46, align 8
  br label %49

49:                                               ; preds = %41, %43, %37
  %50 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %50) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  br label %51

51:                                               ; preds = %5, %49
  %52 = phi i32 [ %34, %49 ], [ -331, %5 ]
  ret i32 %52
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15TCPClientSocket15DidCompleteReadEi(%"class.net::TCPClientSocket"* nocapture, i32) #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = icmp sgt i32 %1, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 7
  %8 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::OnceCallback"* %7 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  br label %23

12:                                               ; preds = %2
  %13 = sext i32 %1 to i64
  %14 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 12
  %15 = load i64, i64* %14, align 8
  %16 = add nsw i64 %15, %13
  store i64 %16, i64* %14, align 8
  %17 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 7
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.base::OnceCallback"* %17 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %20, i64* %21, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %18, align 8
  %22 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 14
  store i8 1, i8* %22, align 8
  br label %23

23:                                               ; preds = %6, %12
  %24 = phi i64 [ %10, %6 ], [ %20, %12 ]
  %25 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #11
  %26 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %24, i64* %27, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %26, align 8
  %28 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %29 = inttoptr i64 %24 to %"class.base::internal::BindStateBase"*
  %30 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %29, i64 0, i32 1
  %31 = bitcast void ()** %30 to void (%"class.base::internal::BindStateBase"*, i32)**
  %32 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %31, align 8
  tail call void %32(%"class.base::internal::BindStateBase"* %29, i32 %1) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #11
  %33 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %33) #11
  ret void
}

declare i32 @_ZN3net14TCPSocketPosix11ReadIfReadyEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.net::TCPSocketPosix"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*) local_unnamed_addr #2

declare i32 @_ZN3net14TCPSocketPosix4ReadEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.net::TCPSocketPosix"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15TCPClientSocket9DoConnectEv(%"class.net::TCPClientSocket"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Location", align 8
  %3 = alloca %"class.base::OnceCallback.167", align 8
  %4 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 5
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %8 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %7, align 8
  %9 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %8, i64 %6
  %10 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 10
  %11 = load i8, i8* %10, align 4, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %26, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 14
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 11, i32 0, i32 0
  %16 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %15, align 8
  %17 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 11, i32 0, i32 1
  %18 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %17, align 8
  %19 = icmp eq %"struct.net::ConnectionAttempt"* %18, %16
  br i1 %19, label %25, label %20

20:                                               ; preds = %13, %20
  %21 = phi %"struct.net::ConnectionAttempt"* [ %22, %20 ], [ %18, %13 ]
  %22 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %21, i64 -1
  %23 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %22, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %23) #11
  %24 = icmp eq %"struct.net::ConnectionAttempt"* %22, %16
  br i1 %24, label %25, label %20

25:                                               ; preds = %20, %13
  store %"struct.net::ConnectionAttempt"* %16, %"struct.net::ConnectionAttempt"** %17, align 8
  store i8 0, i8* %10, align 4
  br label %26

26:                                               ; preds = %1, %25
  %27 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 9
  store i32 1, i32* %27, align 8
  %28 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %29 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %28, align 8
  %30 = tail call zeroext i1 @_ZNK3net14TCPSocketPosix7IsValidEv(%"class.net::TCPSocketPosix"* %29) #11
  br i1 %30, label %47, label %31

31:                                               ; preds = %26
  %32 = tail call i32 @_ZNK3net10IPEndPoint9GetFamilyEv(%"class.net::IPEndPoint"* %9) #11
  %33 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %28, align 8
  %34 = tail call i32 @_ZN3net14TCPSocketPosix4OpenENS_13AddressFamilyE(%"class.net::TCPSocketPosix"* %33, i32 %32) #11
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %98

36:                                               ; preds = %31
  %37 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %28, align 8
  tail call void @_ZN3net14TCPSocketPosix26SetDefaultOptionsForClientEv(%"class.net::TCPSocketPosix"* %37) #11
  %38 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %39 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %38, align 8
  %40 = icmp eq %"class.net::IPEndPoint"* %39, null
  br i1 %40, label %47, label %41

41:                                               ; preds = %36
  %42 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %28, align 8
  %43 = tail call i32 @_ZN3net14TCPSocketPosix4BindERKNS_10IPEndPointE(%"class.net::TCPSocketPosix"* %42, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %39) #11
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %41
  %46 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %28, align 8
  tail call void @_ZN3net14TCPSocketPosix5CloseEv(%"class.net::TCPSocketPosix"* %46) #11
  br label %98

47:                                               ; preds = %36, %41, %26
  %48 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %48, align 8
  %50 = icmp eq %"class.base::internal::BindStateBase"* %49, null
  br i1 %50, label %57, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %49, i64 0, i32 1
  %53 = bitcast void ()** %52 to i32 (%"class.base::internal::BindStateBase"*)**
  %54 = load i32 (%"class.base::internal::BindStateBase"*)*, i32 (%"class.base::internal::BindStateBase"*)** %53, align 8
  %55 = tail call i32 %54(%"class.base::internal::BindStateBase"* nonnull %49) #11
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %98

57:                                               ; preds = %47, %51
  %58 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %28, align 8
  %59 = getelementptr inbounds %"class.net::TCPSocketPosix", %"class.net::TCPSocketPosix"* %58, i64 0, i32 3, i32 0, i32 0, i32 0
  %60 = load %"class.net::SocketPerformanceWatcher"*, %"class.net::SocketPerformanceWatcher"** %59, align 8
  %61 = icmp eq %"class.net::SocketPerformanceWatcher"* %60, null
  br i1 %61, label %70, label %62

62:                                               ; preds = %57
  %63 = load i32, i32* %4, align 8
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %70, label %65

65:                                               ; preds = %62
  %66 = bitcast %"class.net::SocketPerformanceWatcher"* %60 to void (%"class.net::SocketPerformanceWatcher"*)***
  %67 = load void (%"class.net::SocketPerformanceWatcher"*)**, void (%"class.net::SocketPerformanceWatcher"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.net::SocketPerformanceWatcher"*)*, void (%"class.net::SocketPerformanceWatcher"*)** %67, i64 4
  %69 = load void (%"class.net::SocketPerformanceWatcher"*)*, void (%"class.net::SocketPerformanceWatcher"*)** %68, align 8
  tail call void %69(%"class.net::SocketPerformanceWatcher"* nonnull %60) #11
  br label %70

70:                                               ; preds = %62, %57, %65
  %71 = tail call i64 @_ZN4base9TimeTicks3NowEv() #11
  %72 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  %73 = load i8, i8* %72, align 8, !range !2
  %74 = icmp eq i8 %73, 0
  %75 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i64 %71, i64* %75, align 8
  br i1 %74, label %76, label %77

76:                                               ; preds = %70
  store i8 1, i8* %72, align 8
  br label %77

77:                                               ; preds = %70, %76
  %78 = tail call i64 @_ZN3net15TCPClientSocket24GetConnectAttemptTimeoutEv(%"class.net::TCPClientSocket"* %0)
  %79 = icmp eq i64 %78, 9223372036854775807
  br i1 %79, label %92, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 18
  %82 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %82) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i32 270) #11
  %83 = ptrtoint %"class.net::TCPClientSocket"* %0 to i64
  %84 = call i8* @_Znwm(i64 56) #10, !noalias !8
  %85 = bitcast i8* %84 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %85, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net15TCPClientSocketEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net15TCPClientSocketEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !8
  %86 = getelementptr inbounds i8, i8* %84, i64 32
  %87 = bitcast i8* %86 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::TCPClientSocket"*)* @_ZN3net15TCPClientSocket23OnConnectAttemptTimeoutEv to i64), i64 0>, <2 x i64>* %87, align 8, !noalias !8
  %88 = getelementptr inbounds i8, i8* %84, i64 48
  %89 = bitcast i8* %88 to i64*
  store i64 %83, i64* %89, align 8, !noalias !8
  %90 = bitcast %"class.base::OnceCallback.167"* %3 to i8**
  store i8* %84, i8** %90, align 8, !alias.scope !8
  call void @_ZN4base12OneShotTimer5StartERKNS_8LocationENS_9TimeDeltaENS_12OnceCallbackIFvvEEE(%"class.base::OneShotTimer"* %81, %"class.base::Location"* nonnull dereferenceable(32) %2, i64 %78, %"class.base::OnceCallback.167"* nonnull %3) #11
  %91 = getelementptr inbounds %"class.base::OnceCallback.167", %"class.base::OnceCallback.167"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %91) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %82) #11
  br label %92

92:                                               ; preds = %80, %77
  %93 = bitcast %"class.net::TCPClientSocket"* %0 to i32 (%"class.net::TCPClientSocket"*, %"class.net::IPEndPoint"*)***
  %94 = load i32 (%"class.net::TCPClientSocket"*, %"class.net::IPEndPoint"*)**, i32 (%"class.net::TCPClientSocket"*, %"class.net::IPEndPoint"*)*** %93, align 8
  %95 = getelementptr inbounds i32 (%"class.net::TCPClientSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::TCPClientSocket"*, %"class.net::IPEndPoint"*)** %94, i64 35
  %96 = load i32 (%"class.net::TCPClientSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::TCPClientSocket"*, %"class.net::IPEndPoint"*)** %95, align 8
  %97 = call i32 %96(%"class.net::TCPClientSocket"* %0, %"class.net::IPEndPoint"* dereferenceable(20) %9) #11
  br label %98

98:                                               ; preds = %45, %31, %51, %92
  %99 = phi i32 [ %97, %92 ], [ %55, %51 ], [ %43, %45 ], [ %34, %31 ]
  ret i32 %99
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15TCPClientSocket17DoConnectCompleteEi(%"class.net::TCPClientSocket"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.net::ConnectionAttempt", align 4
  %4 = alloca %"class.net::IPEndPoint", align 2
  %5 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  tail call void @_ZN3net15TCPClientSocket28EmitConnectAttemptHistogramsEi(%"class.net::TCPClientSocket"* %0, i32 %1)
  store i8 0, i8* %5, align 8
  %9 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 18, i32 0
  tail call void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"* %9) #11
  br label %10

10:                                               ; preds = %2, %8
  %11 = icmp eq i32 %1, 0
  br i1 %11, label %53, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 4
  %15 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 5
  %16 = load i32, i32* %15, align 8
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds %"class.net::AddressList", %"class.net::AddressList"* %14, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %18, align 8
  %20 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %19, i64 %17
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* nonnull %4, %"class.net::IPEndPoint"* dereferenceable(20) %20) #11
  %21 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %3, i64 0, i32 0
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* nonnull %21, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %4) #11
  %22 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %3, i64 0, i32 1
  store i32 %1, i32* %22, align 4
  %23 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 11, i32 0, i32 1
  %24 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %23, align 8
  %25 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %26 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %25, align 8
  %27 = icmp ult %"struct.net::ConnectionAttempt"* %24, %26
  br i1 %27, label %28, label %35

28:                                               ; preds = %12
  %29 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %24, i64 0, i32 0
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %29, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %21) #11
  %30 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %24, i64 0, i32 1
  %31 = load i32, i32* %22, align 4
  store i32 %31, i32* %30, align 4
  %32 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %24, i64 1
  %33 = ptrtoint %"struct.net::ConnectionAttempt"* %32 to i64
  %34 = bitcast %"struct.net::ConnectionAttempt"** %23 to i64*
  store i64 %33, i64* %34, align 8
  br label %37

35:                                               ; preds = %12
  %36 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 11
  call void @_ZNSt3__16vectorIN3net17ConnectionAttemptENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.48"* %36, %"struct.net::ConnectionAttempt"* nonnull dereferenceable(24) %3) #11
  br label %37

37:                                               ; preds = %28, %35
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %21) #11
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #11
  %38 = icmp eq i32 %1, -331
  br i1 %38, label %53, label %39

39:                                               ; preds = %37
  call void @_ZN3net15TCPClientSocket12DoDisconnectEv(%"class.net::TCPClientSocket"* %0)
  %40 = load i32, i32* %15, align 8
  %41 = add nsw i32 %40, 1
  %42 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %43 = bitcast %"class.net::IPEndPoint"** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.net::AddressList"* %14 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %44, %46
  %48 = sdiv exact i64 %47, 20
  %49 = trunc i64 %48 to i32
  %50 = icmp slt i32 %41, %49
  br i1 %50, label %51, label %53

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 9
  store i32 0, i32* %52, align 8
  store i32 %41, i32* %15, align 8
  br label %53

53:                                               ; preds = %39, %37, %10, %51
  %54 = phi i32 [ 0, %51 ], [ 0, %10 ], [ -331, %37 ], [ %1, %39 ]
  ret i32 %54
}

declare void @_ZN3net14TCPSocketPosix5CloseEv(%"class.net::TCPSocketPosix"*) local_unnamed_addr #2

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN3net15TCPClientSocket24GetConnectAttemptTimeoutEv(%"class.net::TCPClientSocket"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN3net8features25kTimeoutTcpConnectAttemptE) #11
  br i1 %2, label %3, label %42

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 17
  %5 = load %"class.net::NetworkQualityEstimator"*, %"class.net::NetworkQualityEstimator"** %4, align 8
  %6 = icmp eq %"class.net::NetworkQualityEstimator"* %5, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %3
  %8 = bitcast %"class.net::NetworkQualityEstimator"* %5 to { i8, i64 } (%"class.net::NetworkQualityEstimator"*)***
  %9 = load { i8, i64 } (%"class.net::NetworkQualityEstimator"*)**, { i8, i64 } (%"class.net::NetworkQualityEstimator"*)*** %8, align 8
  %10 = getelementptr inbounds { i8, i64 } (%"class.net::NetworkQualityEstimator"*)*, { i8, i64 } (%"class.net::NetworkQualityEstimator"*)** %9, i64 5
  %11 = load { i8, i64 } (%"class.net::NetworkQualityEstimator"*)*, { i8, i64 } (%"class.net::NetworkQualityEstimator"*)** %10, align 8
  %12 = tail call { i8, i64 } %11(%"class.net::NetworkQualityEstimator"* nonnull %5) #11
  %13 = extractvalue { i8, i64 } %12, 0
  %14 = extractvalue { i8, i64 } %12, 1
  %15 = icmp ne i8 %13, 0
  br label %16

16:                                               ; preds = %3, %7
  %17 = phi i64 [ -6148914691236517206, %3 ], [ %14, %7 ]
  %18 = phi i1 [ false, %3 ], [ %15, %7 ]
  %19 = tail call i64 @_ZNK4base12FeatureParamINS_9TimeDeltaELb0EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZN3net8features28kTimeoutTcpConnectAttemptMinE) #11
  %20 = tail call i64 @_ZNK4base12FeatureParamINS_9TimeDeltaELb0EE3GetEv(%"struct.base::FeatureParam"* nonnull @_ZN3net8features28kTimeoutTcpConnectAttemptMaxE) #11
  br i1 %18, label %21, label %42

21:                                               ; preds = %16
  %22 = tail call double @_ZNK4base12FeatureParamIdLb0EE3GetEv(%"struct.base::FeatureParam.188"* nonnull @_ZN3net8features38kTimeoutTcpConnectAttemptRTTMultiplierE) #11
  %23 = sitofp i64 %17 to double
  %24 = fmul double %22, %23
  %25 = fcmp oge double %24, 0xC3E0000000000000
  %26 = fcmp ole double %24, 0x43DFFFFFFFFFFFFF
  %27 = and i1 %26, %25
  %28 = fptosi double %24 to i64
  br i1 %27, label %36, label %29

29:                                               ; preds = %21
  %30 = lshr i64 %17, 63
  %31 = trunc i64 %30 to i32
  %32 = fcmp olt double %22, 0.000000e+00
  %33 = zext i1 %32 to i32
  %34 = icmp eq i32 %31, %33
  %35 = select i1 %34, i64 9223372036854775807, i64 -9223372036854775808
  br label %36

36:                                               ; preds = %21, %29
  %37 = phi i64 [ %28, %21 ], [ %35, %29 ]
  %38 = icmp sgt i64 %37, %19
  br i1 %38, label %39, label %42

39:                                               ; preds = %36
  %40 = icmp slt i64 %37, %20
  %41 = select i1 %40, i64 %37, i64 %20
  br label %42

42:                                               ; preds = %16, %39, %36, %1
  %43 = phi i64 [ 9223372036854775807, %1 ], [ %20, %16 ], [ %19, %36 ], [ %41, %39 ]
  ret i64 %43
}

declare void @_ZN4base12OneShotTimer5StartERKNS_8LocationENS_9TimeDeltaENS_12OnceCallbackIFvvEEE(%"class.base::OneShotTimer"*, %"class.base::Location"* dereferenceable(32), i64, %"class.base::OnceCallback.167"*) unnamed_addr #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15TCPClientSocket23OnConnectAttemptTimeoutEv(%"class.net::TCPClientSocket"*) #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 9
  %4 = load i32, i32* %3, align 8
  br label %5

5:                                                ; preds = %15, %1
  %6 = phi i32 [ %4, %1 ], [ %16, %15 ]
  %7 = phi i32 [ -7, %1 ], [ %13, %15 ]
  store i32 2, i32* %3, align 8
  switch i32 %6, label %18 [
    i32 0, label %8
    i32 1, label %10
  ]

8:                                                ; preds = %5
  %9 = tail call i32 @_ZN3net15TCPClientSocket9DoConnectEv(%"class.net::TCPClientSocket"* %0) #11
  br label %12

10:                                               ; preds = %5
  %11 = tail call i32 @_ZN3net15TCPClientSocket17DoConnectCompleteEi(%"class.net::TCPClientSocket"* %0, i32 %7) #11
  br label %12

12:                                               ; preds = %10, %8
  %13 = phi i32 [ %11, %10 ], [ %9, %8 ]
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %33, label %15

15:                                               ; preds = %12
  %16 = load i32, i32* %3, align 8
  %17 = icmp eq i32 %16, 2
  br i1 %17, label %18, label %5

18:                                               ; preds = %15, %5
  %19 = phi i32 [ -9, %5 ], [ %13, %15 ]
  %20 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %21 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %20, align 8
  tail call void @_ZN3net14TCPSocketPosix33EndLoggingMultipleConnectAttemptsEi(%"class.net::TCPSocketPosix"* %21, i32 %19) #11
  %22 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 6
  %23 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #11
  %24 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %22, i64 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.base::OnceCallback"* %22 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %26, i64* %27, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %24, align 8
  %28 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %29 = inttoptr i64 %26 to %"class.base::internal::BindStateBase"*
  %30 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %29, i64 0, i32 1
  %31 = bitcast void ()** %30 to void (%"class.base::internal::BindStateBase"*, i32)**
  %32 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %31, align 8
  tail call void %32(%"class.base::internal::BindStateBase"* %29, i32 %19) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #11
  br label %33

33:                                               ; preds = %12, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15TCPClientSocket28EmitConnectAttemptHistogramsEi(%"class.net::TCPClientSocket"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = alloca %"class.absl::optional.120", align 8
  %5 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 -6148914691236517206, i64* %6, align 8
  %7 = tail call i64 @_ZN4base9TimeTicks3NowEv() #11
  %8 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #12
  unreachable

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = sub nsw i64 %7, %14
  store i64 %15, i64* %6, align 8
  %16 = icmp eq i32 %1, 0
  br i1 %16, label %17, label %24

17:                                               ; preds = %12
  %18 = load atomic i64, i64* @_ZZN3net15TCPClientSocket28EmitConnectAttemptHistogramsEiE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %19 = inttoptr i64 %18 to %"class.base::HistogramBase"*
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %21, label %31

21:                                               ; preds = %17
  %22 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0), i64 10000, i64 180000000, i32 50, i32 1) #11
  %23 = ptrtoint %"class.base::HistogramBase"* %22 to i64
  store atomic i64 %23, i64* @_ZZN3net15TCPClientSocket28EmitConnectAttemptHistogramsEiE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %31

24:                                               ; preds = %12
  %25 = load atomic i64, i64* @_ZZN3net15TCPClientSocket28EmitConnectAttemptHistogramsEiE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %26 = inttoptr i64 %25 to %"class.base::HistogramBase"*
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %24
  %29 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4, i64 0, i64 0), i64 10000, i64 180000000, i32 50, i32 1) #11
  %30 = ptrtoint %"class.base::HistogramBase"* %29 to i64
  store atomic i64 %30, i64* @_ZZN3net15TCPClientSocket28EmitConnectAttemptHistogramsEiE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %31

31:                                               ; preds = %28, %24, %21, %17
  %32 = phi %"class.base::HistogramBase"* [ %19, %17 ], [ %22, %21 ], [ %26, %24 ], [ %29, %28 ]
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %32, %"class.base::TimeDelta"* nonnull dereferenceable(8) %3) #11
  %33 = getelementptr inbounds %"class.absl::optional.120", %"class.absl::optional.120"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 16, i1 false)
  store i8 0, i8* %33, align 8
  %34 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 17
  %35 = load %"class.net::NetworkQualityEstimator"*, %"class.net::NetworkQualityEstimator"** %34, align 8
  %36 = icmp eq %"class.net::NetworkQualityEstimator"* %35, null
  br i1 %36, label %94, label %37

37:                                               ; preds = %31
  %38 = bitcast %"class.net::NetworkQualityEstimator"* %35 to { i8, i64 } (%"class.net::NetworkQualityEstimator"*)***
  %39 = load { i8, i64 } (%"class.net::NetworkQualityEstimator"*)**, { i8, i64 } (%"class.net::NetworkQualityEstimator"*)*** %38, align 8
  %40 = getelementptr inbounds { i8, i64 } (%"class.net::NetworkQualityEstimator"*)*, { i8, i64 } (%"class.net::NetworkQualityEstimator"*)** %39, i64 5
  %41 = load { i8, i64 } (%"class.net::NetworkQualityEstimator"*)*, { i8, i64 } (%"class.net::NetworkQualityEstimator"*)** %40, align 8
  %42 = call { i8, i64 } %41(%"class.net::NetworkQualityEstimator"* nonnull %35) #11
  %43 = extractvalue { i8, i64 } %42, 0
  %44 = extractvalue { i8, i64 } %42, 1
  store i8 %43, i8* %33, align 8
  %45 = getelementptr inbounds %"class.absl::optional.120", %"class.absl::optional.120"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i64 %44, i64* %45, align 8
  %46 = icmp eq i8 %43, 0
  br i1 %46, label %94, label %47

47:                                               ; preds = %37
  %48 = getelementptr inbounds %"class.absl::optional.120", %"class.absl::optional.120"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %49 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* %48) #11
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %66, label %51

51:                                               ; preds = %47
  %52 = call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* nonnull %3) #11
  %53 = load i8, i8* %33, align 8, !range !2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %51
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #12
  unreachable

56:                                               ; preds = %51
  %57 = call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* %48) #11
  %58 = fdiv double %52, %57
  %59 = fmul double %58, 1.000000e+02
  %60 = fptrunc double %59 to float
  %61 = fcmp ogt float %60, 1.000000e+05
  br i1 %61, label %66, label %62

62:                                               ; preds = %56
  %63 = fcmp ogt float %60, 0.000000e+00
  br i1 %63, label %64, label %66

64:                                               ; preds = %62
  %65 = fptosi float %60 to i32
  br label %66

66:                                               ; preds = %64, %62, %56, %47
  %67 = phi i32 [ 0, %47 ], [ %65, %64 ], [ 0, %62 ], [ 100000, %56 ]
  br i1 %16, label %68, label %81

68:                                               ; preds = %66
  %69 = load atomic i64, i64* @_ZZN3net15TCPClientSocket28EmitConnectAttemptHistogramsEiE24atomic_histogram_pointer_1.0.0.0.0.0 acquire, align 8
  %70 = inttoptr i64 %69 to %"class.base::HistogramBase"*
  %71 = icmp eq i64 %69, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %68
  %73 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.5, i64 0, i64 0), i32 1, i32 100000, i32 50, i32 1) #11
  %74 = ptrtoint %"class.base::HistogramBase"* %73 to i64
  store atomic i64 %74, i64* @_ZZN3net15TCPClientSocket28EmitConnectAttemptHistogramsEiE24atomic_histogram_pointer_1.0.0.0.0.0 release, align 8
  br label %75

75:                                               ; preds = %68, %72
  %76 = phi %"class.base::HistogramBase"* [ %70, %68 ], [ %73, %72 ]
  %77 = bitcast %"class.base::HistogramBase"* %76 to void (%"class.base::HistogramBase"*, i32)***
  %78 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %78, i64 6
  %80 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %79, align 8
  call void %80(%"class.base::HistogramBase"* %76, i32 %67) #11
  br label %94

81:                                               ; preds = %66
  %82 = load atomic i64, i64* @_ZZN3net15TCPClientSocket28EmitConnectAttemptHistogramsEiE24atomic_histogram_pointer_2.0.0.0.0.0 acquire, align 8
  %83 = inttoptr i64 %82 to %"class.base::HistogramBase"*
  %84 = icmp eq i64 %82, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %81
  %86 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.6, i64 0, i64 0), i32 1, i32 100000, i32 50, i32 1) #11
  %87 = ptrtoint %"class.base::HistogramBase"* %86 to i64
  store atomic i64 %87, i64* @_ZZN3net15TCPClientSocket28EmitConnectAttemptHistogramsEiE24atomic_histogram_pointer_2.0.0.0.0.0 release, align 8
  br label %88

88:                                               ; preds = %81, %85
  %89 = phi %"class.base::HistogramBase"* [ %83, %81 ], [ %86, %85 ]
  %90 = bitcast %"class.base::HistogramBase"* %89 to void (%"class.base::HistogramBase"*, i32)***
  %91 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %91, i64 6
  %93 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %92, align 8
  call void %93(%"class.base::HistogramBase"* %89, i32 %67) #11
  br label %94

94:                                               ; preds = %37, %31, %75, %88
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  ret void
}

declare void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"*) unnamed_addr #2

declare void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"*, %"class.net::IPEndPoint"* dereferenceable(20)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15TCPClientSocket12DoDisconnectEv(%"class.net::TCPClientSocket"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeDelta", align 8
  %3 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN3net15TCPClientSocket28EmitConnectAttemptHistogramsEi(%"class.net::TCPClientSocket"* %0, i32 -3)
  store i8 0, i8* %3, align 8
  %7 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 18, i32 0
  tail call void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 12
  store i64 0, i64* %9, align 8
  %10 = bitcast %"class.base::TimeDelta"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %13 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %12, align 8
  %14 = call zeroext i1 @_ZNK3net14TCPSocketPosix25GetEstimatedRoundTripTimeEPN4base9TimeDeltaE(%"class.net::TCPSocketPosix"* %13, %"class.base::TimeDelta"* nonnull %2) #11
  br i1 %14, label %15, label %24

15:                                               ; preds = %8
  %16 = load atomic i64, i64* @_ZZN3net15TCPClientSocket36EmitTCPMetricsHistogramsOnDisconnectEvE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %17 = inttoptr i64 %16 to %"class.base::HistogramBase"*
  %18 = icmp eq i64 %16, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %15
  %20 = call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0), i64 1000, i64 600000000, i32 100, i32 1) #11
  %21 = ptrtoint %"class.base::HistogramBase"* %20 to i64
  store atomic i64 %21, i64* @_ZZN3net15TCPClientSocket36EmitTCPMetricsHistogramsOnDisconnectEvE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %22

22:                                               ; preds = %19, %15
  %23 = phi %"class.base::HistogramBase"* [ %17, %15 ], [ %20, %19 ]
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %23, %"class.base::TimeDelta"* nonnull dereferenceable(8) %2) #11
  br label %24

24:                                               ; preds = %8, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  %25 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %12, align 8
  %26 = call zeroext i1 @_ZNK3net14TCPSocketPosix7IsValidEv(%"class.net::TCPSocketPosix"* %25) #11
  br i1 %26, label %27, label %33

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 5
  %29 = load i32, i32* %28, align 8
  %30 = lshr i32 %29, 31
  %31 = trunc i32 %30 to i8
  %32 = xor i8 %31, 1
  br label %33

33:                                               ; preds = %27, %24
  %34 = phi i8 [ 0, %24 ], [ %32, %27 ]
  %35 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 10
  store i8 %34, i8* %35, align 4
  %36 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %12, align 8
  call void @_ZN3net14TCPSocketPosix5CloseEv(%"class.net::TCPSocketPosix"* %36) #11
  %37 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 19, i32 0, i32 0
  call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %37) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15TCPClientSocket18DidCompleteConnectEi(%"class.net::TCPClientSocket"*, i32) #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 9
  %5 = load i32, i32* %4, align 8
  br label %6

6:                                                ; preds = %16, %2
  %7 = phi i32 [ %5, %2 ], [ %17, %16 ]
  %8 = phi i32 [ %1, %2 ], [ %14, %16 ]
  store i32 2, i32* %4, align 8
  switch i32 %7, label %19 [
    i32 0, label %9
    i32 1, label %11
  ]

9:                                                ; preds = %6
  %10 = tail call i32 @_ZN3net15TCPClientSocket9DoConnectEv(%"class.net::TCPClientSocket"* %0) #11
  br label %13

11:                                               ; preds = %6
  %12 = tail call i32 @_ZN3net15TCPClientSocket17DoConnectCompleteEi(%"class.net::TCPClientSocket"* %0, i32 %8) #11
  br label %13

13:                                               ; preds = %11, %9
  %14 = phi i32 [ %12, %11 ], [ %10, %9 ]
  %15 = icmp eq i32 %14, -1
  br i1 %15, label %34, label %16

16:                                               ; preds = %13
  %17 = load i32, i32* %4, align 8
  %18 = icmp eq i32 %17, 2
  br i1 %18, label %19, label %6

19:                                               ; preds = %16, %6
  %20 = phi i32 [ -9, %6 ], [ %14, %16 ]
  %21 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %22 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %21, align 8
  tail call void @_ZN3net14TCPSocketPosix33EndLoggingMultipleConnectAttemptsEi(%"class.net::TCPSocketPosix"* %22, i32 %20) #11
  %23 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 6
  %24 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  %25 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %23, i64 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.base::OnceCallback"* %23 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %27, i64* %28, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %25, align 8
  %29 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %30 = inttoptr i64 %27 to %"class.base::internal::BindStateBase"*
  %31 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %30, i64 0, i32 1
  %32 = bitcast void ()** %31 to void (%"class.base::internal::BindStateBase"*, i32)**
  %33 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %32, align 8
  tail call void %33(%"class.base::internal::BindStateBase"* %30, i32 %20) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %29) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  br label %34

34:                                               ; preds = %13, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15TCPClientSocket15ConnectInternalERKNS_10IPEndPointE(%"class.net::TCPClientSocket"*, %"class.net::IPEndPoint"* dereferenceable(20)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %4, align 8
  %6 = ptrtoint %"class.net::TCPClientSocket"* %0 to i64
  %7 = tail call i8* @_Znwm(i64 56) #10, !noalias !13
  %8 = bitcast i8* %7 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %8, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net15TCPClientSocketEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net15TCPClientSocketEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !13
  %9 = getelementptr inbounds i8, i8* %7, i64 32
  %10 = bitcast i8* %9 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::TCPClientSocket"*, i32)* @_ZN3net15TCPClientSocket18DidCompleteConnectEi to i64), i64 0>, <2 x i64>* %10, align 8, !noalias !13
  %11 = getelementptr inbounds i8, i8* %7, i64 48
  %12 = bitcast i8* %11 to i64*
  store i64 %6, i64* %12, align 8, !noalias !13
  %13 = bitcast %"class.base::OnceCallback"* %3 to i8**
  store i8* %7, i8** %13, align 8, !alias.scope !13
  %14 = call i32 @_ZN3net14TCPSocketPosix7ConnectERKNS_10IPEndPointEN4base12OnceCallbackIFviEEE(%"class.net::TCPSocketPosix"* %5, %"class.net::IPEndPoint"* dereferenceable(20) %1, %"class.base::OnceCallback"* nonnull %3) #11
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #11
  ret i32 %14
}

declare i32 @_ZN3net14TCPSocketPosix7ConnectERKNS_10IPEndPointEN4base12OnceCallbackIFviEEE(%"class.net::TCPSocketPosix"*, %"class.net::IPEndPoint"* dereferenceable(20), %"class.base::OnceCallback"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15TCPClientSocket10DisconnectEv(%"class.net::TCPClientSocket"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3net15TCPClientSocket12DoDisconnectEv(%"class.net::TCPClientSocket"* %0)
  %2 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 5
  store i32 -1, i32* %2, align 8
  %3 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %3, align 8
  store %"class.net::IPEndPoint"* null, %"class.net::IPEndPoint"** %3, align 8
  %5 = icmp eq %"class.net::IPEndPoint"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %4) #11
  %7 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 15
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 6, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %10) #11
  %11 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 7, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %11) #11
  %12 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 8, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %12) #11
  ret void
}

declare void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15TCPClientSocket36EmitTCPMetricsHistogramsOnDisconnectEv(%"class.net::TCPClientSocket"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeDelta", align 8
  %3 = bitcast %"class.base::TimeDelta"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #11
  %4 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %5, align 8
  %7 = call zeroext i1 @_ZNK3net14TCPSocketPosix25GetEstimatedRoundTripTimeEPN4base9TimeDeltaE(%"class.net::TCPSocketPosix"* %6, %"class.base::TimeDelta"* nonnull %2) #11
  br i1 %7, label %8, label %17

8:                                                ; preds = %1
  %9 = load atomic i64, i64* @_ZZN3net15TCPClientSocket36EmitTCPMetricsHistogramsOnDisconnectEvE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %10 = inttoptr i64 %9 to %"class.base::HistogramBase"*
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %8
  %13 = call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0), i64 1000, i64 600000000, i32 100, i32 1) #11
  %14 = ptrtoint %"class.base::HistogramBase"* %13 to i64
  store atomic i64 %14, i64* @_ZZN3net15TCPClientSocket36EmitTCPMetricsHistogramsOnDisconnectEvE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %15

15:                                               ; preds = %8, %12
  %16 = phi %"class.base::HistogramBase"* [ %10, %8 ], [ %13, %12 ]
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %16, %"class.base::TimeDelta"* nonnull dereferenceable(8) %2) #11
  br label %17

17:                                               ; preds = %15, %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net15TCPClientSocket11IsConnectedEv(%"class.net::TCPClientSocket"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %2, align 8
  %4 = tail call zeroext i1 @_ZNK3net14TCPSocketPosix11IsConnectedEv(%"class.net::TCPSocketPosix"* %3) #11
  ret i1 %4
}

declare zeroext i1 @_ZNK3net14TCPSocketPosix11IsConnectedEv(%"class.net::TCPSocketPosix"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net15TCPClientSocket18IsConnectedAndIdleEv(%"class.net::TCPClientSocket"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %2, align 8
  %4 = tail call zeroext i1 @_ZNK3net14TCPSocketPosix18IsConnectedAndIdleEv(%"class.net::TCPSocketPosix"* %3) #11
  ret i1 %4
}

declare zeroext i1 @_ZNK3net14TCPSocketPosix18IsConnectedAndIdleEv(%"class.net::TCPSocketPosix"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3net15TCPClientSocket14GetPeerAddressEPNS_10IPEndPointE(%"class.net::TCPClientSocket"* nocapture readonly, %"class.net::IPEndPoint"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %3, align 8
  %5 = tail call i32 @_ZNK3net14TCPSocketPosix14GetPeerAddressEPNS_10IPEndPointE(%"class.net::TCPSocketPosix"* %4, %"class.net::IPEndPoint"* %1) #11
  ret i32 %5
}

declare i32 @_ZNK3net14TCPSocketPosix14GetPeerAddressEPNS_10IPEndPointE(%"class.net::TCPSocketPosix"*, %"class.net::IPEndPoint"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3net15TCPClientSocket15GetLocalAddressEPNS_10IPEndPointE(%"class.net::TCPClientSocket"* nocapture readonly, %"class.net::IPEndPoint"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %3, align 8
  %5 = tail call zeroext i1 @_ZNK3net14TCPSocketPosix7IsValidEv(%"class.net::TCPSocketPosix"* %4) #11
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %7, align 8
  %9 = icmp eq %"class.net::IPEndPoint"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %12 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %11, i8* align 2 %12, i64 20, i1 false)
  br label %16

13:                                               ; preds = %2
  %14 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %3, align 8
  %15 = tail call i32 @_ZNK3net14TCPSocketPosix15GetLocalAddressEPNS_10IPEndPointE(%"class.net::TCPSocketPosix"* %14, %"class.net::IPEndPoint"* %1) #11
  br label %16

16:                                               ; preds = %6, %13, %10
  %17 = phi i32 [ %15, %13 ], [ 0, %10 ], [ -15, %6 ]
  ret i32 %17
}

declare i32 @_ZNK3net14TCPSocketPosix15GetLocalAddressEPNS_10IPEndPointE(%"class.net::TCPSocketPosix"*, %"class.net::IPEndPoint"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(24) %"class.net::NetLogWithSource"* @_ZNK3net15TCPClientSocket6NetLogEv(%"class.net::TCPClientSocket"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %2, align 8
  %4 = getelementptr inbounds %"class.net::TCPSocketPosix", %"class.net::TCPSocketPosix"* %3, i64 0, i32 6
  ret %"class.net::NetLogWithSource"* %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net15TCPClientSocket11WasEverUsedEv(%"class.net::TCPClientSocket"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 14
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK3net15TCPClientSocket17WasAlpnNegotiatedEv(%"class.net::TCPClientSocket"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK3net15TCPClientSocket21GetNegotiatedProtocolEv(%"class.net::TCPClientSocket"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN3net15TCPClientSocket10GetSSLInfoEPNS_7SSLInfoE(%"class.net::TCPClientSocket"* nocapture readnone, %"class.net::SSLInfo"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15TCPClientSocket4ReadEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.net::TCPClientSocket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %8, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  %10 = call i32 @_ZN3net15TCPClientSocket10ReadCommonEPNS_8IOBufferEiN4base12OnceCallbackIFviEEEb(%"class.net::TCPClientSocket"* %0, %"class.net::IOBuffer"* %1, i32 %2, %"class.base::OnceCallback"* nonnull %5, i1 zeroext false)
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %11) #11
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15TCPClientSocket11ReadIfReadyEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.net::TCPClientSocket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %8, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  %10 = call i32 @_ZN3net15TCPClientSocket10ReadCommonEPNS_8IOBufferEiN4base12OnceCallbackIFviEEEb(%"class.net::TCPClientSocket"* %0, %"class.net::IOBuffer"* %1, i32 %2, %"class.base::OnceCallback"* nonnull %5, i1 zeroext true)
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %11) #11
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15TCPClientSocket17CancelReadIfReadyEv(%"class.net::TCPClientSocket"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 7, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %2) #11
  %3 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %3, align 8
  %5 = tail call i32 @_ZN3net14TCPSocketPosix17CancelReadIfReadyEv(%"class.net::TCPSocketPosix"* %4) #11
  ret i32 %5
}

declare i32 @_ZN3net14TCPSocketPosix17CancelReadIfReadyEv(%"class.net::TCPSocketPosix"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15TCPClientSocket5WriteEPNS_8IOBufferEiN4base12OnceCallbackIFviEEERKNS_27NetworkTrafficAnnotationTagE(%"class.net::TCPClientSocket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"* dereferenceable(4)) unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 15
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %38

11:                                               ; preds = %5
  %12 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #11
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  %14 = ptrtoint %"class.net::TCPClientSocket"* %0 to i64
  %15 = tail call i8* @_Znwm(i64 56) #10, !noalias !18
  %16 = bitcast i8* %15 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %16, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net15TCPClientSocketEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net15TCPClientSocketEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !18
  %17 = getelementptr inbounds i8, i8* %15, i64 32
  %18 = bitcast i8* %17 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::TCPClientSocket"*, i32)* @_ZN3net15TCPClientSocket16DidCompleteWriteEi to i64), i64 0>, <2 x i64>* %18, align 8, !noalias !18
  %19 = getelementptr inbounds i8, i8* %15, i64 48
  %20 = bitcast i8* %19 to i64*
  store i64 %14, i64* %20, align 8, !noalias !18
  %21 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %22 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %21, align 8
  %23 = ptrtoint i8* %15 to i64
  %24 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %23, i64* %24, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8
  %25 = call i32 @_ZN3net14TCPSocketPosix5WriteEPNS_8IOBufferEiN4base12OnceCallbackIFviEEERKNS_27NetworkTrafficAnnotationTagE(%"class.net::TCPSocketPosix"* %22, %"class.net::IOBuffer"* %1, i32 %2, %"class.base::OnceCallback"* nonnull %7, %"struct.net::NetworkTrafficAnnotationTag"* dereferenceable(4) %4) #11
  %26 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %26) #11
  %27 = icmp eq i32 %25, -1
  br i1 %27, label %28, label %32

28:                                               ; preds = %11
  %29 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 8, i32 0
  %30 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %31 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %29, %"class.base::internal::CallbackBase"* dereferenceable(8) %30) #11
  br label %36

32:                                               ; preds = %11
  %33 = icmp sgt i32 %25, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 14
  store i8 1, i8* %35, align 8
  br label %36

36:                                               ; preds = %32, %34, %28
  %37 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %37) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #11
  br label %38

38:                                               ; preds = %5, %36
  %39 = phi i32 [ %25, %36 ], [ -331, %5 ]
  ret i32 %39
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15TCPClientSocket16DidCompleteWriteEi(%"class.net::TCPClientSocket"* nocapture, i32) #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 8
  %6 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.base::OnceCallback"* %5 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %8, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  %10 = icmp sgt i32 %1, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 14
  store i8 1, i8* %12, align 8
  br label %13

13:                                               ; preds = %2, %11
  %14 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %8, i64* %16, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %15, align 8
  %17 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %18 = inttoptr i64 %8 to %"class.base::internal::BindStateBase"*
  %19 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %18, i64 0, i32 1
  %20 = bitcast void ()** %19 to void (%"class.base::internal::BindStateBase"*, i32)**
  %21 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %20, align 8
  tail call void %21(%"class.base::internal::BindStateBase"* %18, i32 %1) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  %22 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #11
  ret void
}

declare i32 @_ZN3net14TCPSocketPosix5WriteEPNS_8IOBufferEiN4base12OnceCallbackIFviEEERKNS_27NetworkTrafficAnnotationTagE(%"class.net::TCPSocketPosix"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"* dereferenceable(4)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15TCPClientSocket20SetReceiveBufferSizeEi(%"class.net::TCPClientSocket"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %3, align 8
  %5 = tail call i32 @_ZN3net14TCPSocketPosix20SetReceiveBufferSizeEi(%"class.net::TCPSocketPosix"* %4, i32 %1) #11
  ret i32 %5
}

declare i32 @_ZN3net14TCPSocketPosix20SetReceiveBufferSizeEi(%"class.net::TCPSocketPosix"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15TCPClientSocket17SetSendBufferSizeEi(%"class.net::TCPClientSocket"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %3, align 8
  %5 = tail call i32 @_ZN3net14TCPSocketPosix17SetSendBufferSizeEi(%"class.net::TCPSocketPosix"* %4, i32 %1) #11
  ret i32 %5
}

declare i32 @_ZN3net14TCPSocketPosix17SetSendBufferSizeEi(%"class.net::TCPSocketPosix"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3net15TCPClientSocket26SocketDescriptorForTestingEv(%"class.net::TCPClientSocket"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %2, align 8
  %4 = tail call i32 @_ZNK3net14TCPSocketPosix26SocketDescriptorForTestingEv(%"class.net::TCPSocketPosix"* %3) #11
  ret i32 %4
}

declare i32 @_ZNK3net14TCPSocketPosix26SocketDescriptorForTestingEv(%"class.net::TCPSocketPosix"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net15TCPClientSocket21GetConnectionAttemptsEPNSt3__16vectorINS_17ConnectionAttemptENS1_9allocatorIS3_EEEE(%"class.net::TCPClientSocket"* readonly, %"class.std::__1::vector.48"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 11
  %4 = icmp eq %"class.std::__1::vector.48"* %3, %1
  br i1 %4, label %10, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %3, i64 0, i32 0, i32 0
  %7 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %6, align 8
  %8 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 11, i32 0, i32 1
  %9 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %8, align 8
  tail call void @_ZNSt3__16vectorIN3net17ConnectionAttemptENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.48"* %1, %"struct.net::ConnectionAttempt"* %7, %"struct.net::ConnectionAttempt"* %9) #11
  br label %10

10:                                               ; preds = %2, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15TCPClientSocket23ClearConnectionAttemptsEv(%"class.net::TCPClientSocket"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 11, i32 0, i32 0
  %3 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %2, align 8
  %4 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 11, i32 0, i32 1
  %5 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %4, align 8
  %6 = icmp eq %"struct.net::ConnectionAttempt"* %5, %3
  br i1 %6, label %12, label %7

7:                                                ; preds = %1, %7
  %8 = phi %"struct.net::ConnectionAttempt"* [ %9, %7 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %8, i64 -1
  %10 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %9, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %10) #11
  %11 = icmp eq %"struct.net::ConnectionAttempt"* %9, %3
  br i1 %11, label %12, label %7

12:                                               ; preds = %7, %1
  store %"struct.net::ConnectionAttempt"* %3, %"struct.net::ConnectionAttempt"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15TCPClientSocket21AddConnectionAttemptsERKNSt3__16vectorINS_17ConnectionAttemptENS1_9allocatorIS3_EEEE(%"class.net::TCPClientSocket"*, %"class.std::__1::vector.48"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 11
  %4 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %1, i64 0, i32 0, i32 0
  %7 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %1, i64 0, i32 0, i32 1
  %9 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %8, align 8
  %10 = tail call %"struct.net::ConnectionAttempt"* @_ZNSt3__16vectorIN3net17ConnectionAttemptENS_9allocatorIS2_EEE6insertINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISC_E9referenceEEE5valueENS7_IPS2_EEE4typeESA_SC_SC_(%"class.std::__1::vector.48"* %3, %"struct.net::ConnectionAttempt"* %5, %"struct.net::ConnectionAttempt"* %7, %"struct.net::ConnectionAttempt"* %9)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.net::ConnectionAttempt"* @_ZNSt3__16vectorIN3net17ConnectionAttemptENS_9allocatorIS2_EEE6insertINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISC_E9referenceEEE5valueENS7_IPS2_EEE4typeESA_SC_SC_(%"class.std::__1::vector.48"*, %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.net::ConnectionAttempt"* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %0, i64 0, i32 0, i32 0
  %7 = ptrtoint %"struct.net::ConnectionAttempt"* %2 to i64
  %8 = ptrtoint %"struct.net::ConnectionAttempt"* %3 to i64
  %9 = sub i64 %8, %7
  %10 = sdiv exact i64 %9, 24
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %180

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"struct.net::ConnectionAttempt"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %0, i64 0, i32 0, i32 1
  %17 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %16, align 8
  %18 = ptrtoint %"struct.net::ConnectionAttempt"* %17 to i64
  %19 = sub i64 %15, %18
  %20 = sdiv exact i64 %19, 24
  %21 = icmp sgt i64 %10, %20
  %22 = bitcast %"struct.net::ConnectionAttempt"** %16 to i64*
  br i1 %21, label %85, label %23

23:                                               ; preds = %12
  %24 = sub i64 %18, %5
  %25 = sdiv exact i64 %24, 24
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %48

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %2, i64 %25
  %29 = icmp eq %"struct.net::ConnectionAttempt"* %28, %3
  br i1 %29, label %43, label %30

30:                                               ; preds = %27, %30
  %31 = phi %"struct.net::ConnectionAttempt"* [ %39, %30 ], [ %17, %27 ]
  %32 = phi %"struct.net::ConnectionAttempt"* [ %38, %30 ], [ %28, %27 ]
  %33 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %31, i64 0, i32 0
  %34 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %32, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %33, %"class.net::IPEndPoint"* dereferenceable(20) %34) #11
  %35 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %31, i64 0, i32 1
  %36 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %32, i64 0, i32 1
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %35, align 4
  %38 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %32, i64 1
  %39 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %31, i64 1
  %40 = icmp eq %"struct.net::ConnectionAttempt"* %38, %3
  br i1 %40, label %41, label %30

41:                                               ; preds = %30
  %42 = ptrtoint %"struct.net::ConnectionAttempt"* %39 to i64
  br label %43

43:                                               ; preds = %41, %27
  %44 = phi i64 [ %18, %27 ], [ %42, %41 ]
  store i64 %44, i64* %22, align 8
  %45 = icmp sgt i64 %24, 0
  br i1 %45, label %46, label %180

46:                                               ; preds = %43
  %47 = inttoptr i64 %44 to %"struct.net::ConnectionAttempt"*
  br label %48

48:                                               ; preds = %46, %23
  %49 = phi i64 [ %44, %46 ], [ %18, %23 ]
  %50 = phi %"struct.net::ConnectionAttempt"* [ %47, %46 ], [ %17, %23 ]
  %51 = phi %"struct.net::ConnectionAttempt"* [ %28, %46 ], [ %3, %23 ]
  %52 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %1, i64 %10
  %53 = ptrtoint %"struct.net::ConnectionAttempt"* %52 to i64
  %54 = sub i64 %49, %53
  %55 = sdiv exact i64 %54, 24
  %56 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %1, i64 %55
  %57 = icmp ult %"struct.net::ConnectionAttempt"* %56, %17
  br i1 %57, label %67, label %60

58:                                               ; preds = %67
  %59 = ptrtoint %"struct.net::ConnectionAttempt"* %76 to i64
  br label %60

60:                                               ; preds = %58, %48
  %61 = phi i64 [ %59, %58 ], [ %49, %48 ]
  store i64 %61, i64* %22, align 8
  %62 = icmp eq i64 %54, 0
  br i1 %62, label %78, label %63

63:                                               ; preds = %60
  %64 = sdiv exact i64 %54, -24
  %65 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %50, i64 %64, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %66 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %65, i8* align 4 %66, i64 %54, i1 false) #11
  br label %78

67:                                               ; preds = %48, %67
  %68 = phi %"struct.net::ConnectionAttempt"* [ %76, %67 ], [ %50, %48 ]
  %69 = phi %"struct.net::ConnectionAttempt"* [ %75, %67 ], [ %56, %48 ]
  %70 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %68, i64 0, i32 0
  %71 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %69, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %70, %"class.net::IPEndPoint"* dereferenceable(20) %71) #11
  %72 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %68, i64 0, i32 1
  %73 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %69, i64 0, i32 1
  %74 = load i32, i32* %73, align 4
  store i32 %74, i32* %72, align 4
  %75 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %69, i64 1
  %76 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %68, i64 1
  %77 = icmp ult %"struct.net::ConnectionAttempt"* %75, %17
  br i1 %77, label %67, label %58

78:                                               ; preds = %60, %63
  %79 = ptrtoint %"struct.net::ConnectionAttempt"* %51 to i64
  %80 = sub i64 %79, %7
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %180, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %84 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %83, i8* align 4 %84, i64 %80, i1 false) #11
  br label %180

85:                                               ; preds = %12
  %86 = bitcast %"class.std::__1::vector.48"* %0 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = sub i64 %18, %87
  %89 = sdiv exact i64 %88, 24
  %90 = add nsw i64 %89, %10
  %91 = icmp ugt i64 %90, 768614336404564650
  br i1 %91, label %92, label %94

92:                                               ; preds = %85
  %93 = bitcast %"class.std::__1::vector.48"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %93) #12
  unreachable

94:                                               ; preds = %85
  %95 = sub i64 %15, %87
  %96 = sdiv exact i64 %95, 24
  %97 = icmp ult i64 %96, 384307168202282325
  br i1 %97, label %101, label %98

98:                                               ; preds = %94
  %99 = sub i64 %5, %87
  %100 = sdiv exact i64 %99, 24
  br label %108

101:                                              ; preds = %94
  %102 = shl nsw i64 %96, 1
  %103 = icmp ult i64 %102, %90
  %104 = select i1 %103, i64 %90, i64 %102
  %105 = sub i64 %5, %87
  %106 = sdiv exact i64 %105, 24
  %107 = icmp eq i64 %104, 0
  br i1 %107, label %114, label %108

108:                                              ; preds = %101, %98
  %109 = phi i64 [ %100, %98 ], [ %106, %101 ]
  %110 = phi i64 [ 768614336404564650, %98 ], [ %104, %101 ]
  %111 = mul i64 %110, 24
  %112 = tail call i8* @_Znwm(i64 %111) #10
  %113 = bitcast i8* %112 to %"struct.net::ConnectionAttempt"*
  br label %114

114:                                              ; preds = %108, %101
  %115 = phi i64 [ %109, %108 ], [ %106, %101 ]
  %116 = phi i64 [ %110, %108 ], [ 0, %101 ]
  %117 = phi %"struct.net::ConnectionAttempt"* [ %113, %108 ], [ null, %101 ]
  %118 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %117, i64 %115
  %119 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %117, i64 %116
  %120 = ptrtoint %"struct.net::ConnectionAttempt"* %119 to i64
  %121 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %118, i64 %10
  br label %122

122:                                              ; preds = %114, %122
  %123 = phi %"struct.net::ConnectionAttempt"* [ %130, %122 ], [ %118, %114 ]
  %124 = phi %"struct.net::ConnectionAttempt"* [ %131, %122 ], [ %2, %114 ]
  %125 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %123, i64 0, i32 0
  %126 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %124, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %125, %"class.net::IPEndPoint"* dereferenceable(20) %126) #11
  %127 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %123, i64 0, i32 1
  %128 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %124, i64 0, i32 1
  %129 = load i32, i32* %128, align 4
  store i32 %129, i32* %127, align 4
  %130 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %123, i64 1
  %131 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %124, i64 1
  %132 = icmp eq %"struct.net::ConnectionAttempt"* %121, %130
  br i1 %132, label %133, label %122

133:                                              ; preds = %122
  %134 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %6, align 8
  %135 = icmp eq %"struct.net::ConnectionAttempt"* %134, %1
  br i1 %135, label %147, label %136

136:                                              ; preds = %133, %136
  %137 = phi %"struct.net::ConnectionAttempt"* [ %145, %136 ], [ %118, %133 ]
  %138 = phi %"struct.net::ConnectionAttempt"* [ %139, %136 ], [ %1, %133 ]
  %139 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %138, i64 -1
  %140 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %137, i64 -1, i32 0
  %141 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %139, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %140, %"class.net::IPEndPoint"* dereferenceable(20) %141) #11
  %142 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %137, i64 -1, i32 1
  %143 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %138, i64 -1, i32 1
  %144 = load i32, i32* %143, align 4
  store i32 %144, i32* %142, align 4
  %145 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %137, i64 -1
  %146 = icmp eq %"struct.net::ConnectionAttempt"* %139, %134
  br i1 %146, label %147, label %136

147:                                              ; preds = %136, %133
  %148 = phi %"struct.net::ConnectionAttempt"* [ %118, %133 ], [ %145, %136 ]
  %149 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %16, align 8
  %150 = icmp eq %"struct.net::ConnectionAttempt"* %149, %1
  br i1 %150, label %164, label %151

151:                                              ; preds = %147, %151
  %152 = phi %"struct.net::ConnectionAttempt"* [ %160, %151 ], [ %121, %147 ]
  %153 = phi %"struct.net::ConnectionAttempt"* [ %159, %151 ], [ %1, %147 ]
  %154 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %152, i64 0, i32 0
  %155 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %153, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %154, %"class.net::IPEndPoint"* dereferenceable(20) %155) #11
  %156 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %152, i64 0, i32 1
  %157 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %153, i64 0, i32 1
  %158 = load i32, i32* %157, align 4
  store i32 %158, i32* %156, align 4
  %159 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %153, i64 1
  %160 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %152, i64 1
  %161 = icmp eq %"struct.net::ConnectionAttempt"* %159, %149
  br i1 %161, label %162, label %151

162:                                              ; preds = %151
  %163 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %16, align 8
  br label %164

164:                                              ; preds = %147, %162
  %165 = phi %"struct.net::ConnectionAttempt"* [ %163, %162 ], [ %1, %147 ]
  %166 = phi %"struct.net::ConnectionAttempt"* [ %160, %162 ], [ %121, %147 ]
  %167 = ptrtoint %"struct.net::ConnectionAttempt"* %148 to i64
  %168 = ptrtoint %"struct.net::ConnectionAttempt"* %166 to i64
  %169 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %6, align 8
  store i64 %167, i64* %86, align 8
  store i64 %168, i64* %22, align 8
  store i64 %120, i64* %14, align 8
  %170 = icmp eq %"struct.net::ConnectionAttempt"* %165, %169
  br i1 %170, label %176, label %171

171:                                              ; preds = %164, %171
  %172 = phi %"struct.net::ConnectionAttempt"* [ %173, %171 ], [ %165, %164 ]
  %173 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %172, i64 -1
  %174 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %173, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %174) #11
  %175 = icmp eq %"struct.net::ConnectionAttempt"* %173, %169
  br i1 %175, label %176, label %171

176:                                              ; preds = %171, %164
  %177 = icmp eq %"struct.net::ConnectionAttempt"* %169, null
  br i1 %177, label %180, label %178

178:                                              ; preds = %176
  %179 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %169, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %179) #10
  br label %180

180:                                              ; preds = %178, %176, %43, %78, %82, %4
  %181 = phi %"struct.net::ConnectionAttempt"* [ %1, %4 ], [ %1, %82 ], [ %1, %78 ], [ %1, %43 ], [ %118, %176 ], [ %118, %178 ]
  ret %"struct.net::ConnectionAttempt"* %181
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK3net15TCPClientSocket21GetTotalReceivedBytesEv(%"class.net::TCPClientSocket"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 12
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15TCPClientSocket14ApplySocketTagERKNS_9SocketTagE(%"class.net::TCPClientSocket"* nocapture readonly, %"class.net::SocketTag"* dereferenceable(1)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %3, align 8
  tail call void @_ZN3net14TCPSocketPosix14ApplySocketTagERKNS_9SocketTagE(%"class.net::TCPSocketPosix"* %4, %"class.net::SocketTag"* dereferenceable(1) %1) #11
  ret void
}

declare void @_ZN3net14TCPSocketPosix14ApplySocketTagERKNS_9SocketTagE(%"class.net::TCPSocketPosix"*, %"class.net::SocketTag"* dereferenceable(1)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15TCPClientSocket9OnSuspendEv(%"class.net::TCPClientSocket"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::internal::WeakReference", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::WeakPtr", align 8
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 9
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 2
  %12 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %13 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %12, align 8
  br i1 %11, label %43, label %14

14:                                               ; preds = %1
  tail call void @_ZN3net14TCPSocketPosix5CloseEv(%"class.net::TCPSocketPosix"* %13) #11
  %15 = load i32, i32* %9, align 8
  br label %16

16:                                               ; preds = %26, %14
  %17 = phi i32 [ %15, %14 ], [ %27, %26 ]
  %18 = phi i32 [ -331, %14 ], [ %24, %26 ]
  store i32 2, i32* %9, align 8
  switch i32 %17, label %29 [
    i32 0, label %19
    i32 1, label %21
  ]

19:                                               ; preds = %16
  %20 = tail call i32 @_ZN3net15TCPClientSocket9DoConnectEv(%"class.net::TCPClientSocket"* %0) #11
  br label %23

21:                                               ; preds = %16
  %22 = tail call i32 @_ZN3net15TCPClientSocket17DoConnectCompleteEi(%"class.net::TCPClientSocket"* %0, i32 %18) #11
  br label %23

23:                                               ; preds = %21, %19
  %24 = phi i32 [ %22, %21 ], [ %20, %19 ]
  %25 = icmp eq i32 %24, -1
  br i1 %25, label %98, label %26

26:                                               ; preds = %23
  %27 = load i32, i32* %9, align 8
  %28 = icmp eq i32 %27, 2
  br i1 %28, label %29, label %16

29:                                               ; preds = %26, %16
  %30 = phi i32 [ -9, %16 ], [ %24, %26 ]
  %31 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %12, align 8
  tail call void @_ZN3net14TCPSocketPosix33EndLoggingMultipleConnectAttemptsEi(%"class.net::TCPSocketPosix"* %31, i32 %30) #11
  %32 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 6
  %33 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  %34 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = bitcast %"class.base::OnceCallback"* %32 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %36, i64* %37, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %34, align 8
  %38 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  %39 = inttoptr i64 %36 to %"class.base::internal::BindStateBase"*
  %40 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %39, i64 0, i32 1
  %41 = bitcast void ()** %40 to void (%"class.base::internal::BindStateBase"*, i32)**
  %42 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %41, align 8
  tail call void %42(%"class.base::internal::BindStateBase"* %39, i32 %30) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %38) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  br label %98

43:                                               ; preds = %1
  %44 = tail call zeroext i1 @_ZNK3net14TCPSocketPosix7IsValidEv(%"class.net::TCPSocketPosix"* %13) #11
  br i1 %44, label %45, label %98

45:                                               ; preds = %43
  %46 = load %"class.net::TCPSocketPosix"*, %"class.net::TCPSocketPosix"** %12, align 8
  tail call void @_ZN3net14TCPSocketPosix5CloseEv(%"class.net::TCPSocketPosix"* %46) #11
  %47 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 15
  store i8 1, i8* %47, align 1
  %48 = bitcast %"class.base::WeakPtr"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #11
  %49 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %7, i64 0, i32 0, i32 1
  %50 = bitcast %"class.base::internal::WeakReference"* %4 to i8*
  %51 = bitcast %"class.base::WeakPtr"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #11, !noalias !23
  %52 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 19, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %4, %"class.base::internal::WeakReferenceOwner"* %52) #11, !noalias !23
  %53 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 19, i32 0, i32 1
  %54 = load i64, i64* %53, align 8, !noalias !23
  %55 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %7, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %55, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %4, i64 %54) #11
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #11, !noalias !23
  %56 = bitcast %"class.base::OnceCallback"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11
  %57 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 8
  %59 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = bitcast %"class.base::OnceCallback"* %58 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"class.base::OnceCallback"* %8 to i64*
  store i64 %61, i64* %62, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %59, align 8
  %63 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %64 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %63, align 8
  %65 = icmp eq %"class.base::internal::BindStateBase"* %64, null
  br i1 %65, label %78, label %66

66:                                               ; preds = %45
  %67 = ptrtoint %"class.base::internal::BindStateBase"* %64 to i64
  %68 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68)
  %69 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %69, align 8
  %70 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #11
  %71 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %72 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %67, i64* %72, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %71, align 8
  %73 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %74 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %64, i64 0, i32 1
  %75 = bitcast void ()** %74 to void (%"class.base::internal::BindStateBase"*, i32)**
  %76 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %75, align 8
  call void %76(%"class.base::internal::BindStateBase"* nonnull %64, i32 -331) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %73) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #11
  %77 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %77) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68)
  br label %78

78:                                               ; preds = %45, %66
  %79 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %7, i64 0, i32 0, i32 0
  %80 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* nonnull %79) #11
  br i1 %80, label %81, label %96

81:                                               ; preds = %78
  %82 = bitcast i64* %49 to %"class.net::TCPClientSocket"**
  %83 = load %"class.net::TCPClientSocket"*, %"class.net::TCPClientSocket"** %82, align 8
  %84 = icmp eq %"class.net::TCPClientSocket"* %83, null
  br i1 %84, label %96, label %85

85:                                               ; preds = %81
  %86 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %57, align 8
  %87 = icmp eq %"class.base::internal::BindStateBase"* %86, null
  br i1 %87, label %96, label %88

88:                                               ; preds = %85
  %89 = ptrtoint %"class.base::internal::BindStateBase"* %86 to i64
  %90 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #11
  %91 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %89, i64* %91, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %57, align 8
  %92 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  %93 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %86, i64 0, i32 1
  %94 = bitcast void ()** %93 to void (%"class.base::internal::BindStateBase"*, i32)**
  %95 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %94, align 8
  call void %95(%"class.base::internal::BindStateBase"* nonnull %86, i32 -331) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %92) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #11
  br label %96

96:                                               ; preds = %85, %81, %78, %88
  %97 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %97) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %55) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #11
  br label %98

98:                                               ; preds = %23, %29, %43, %96
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N3net15TCPClientSocket9OnSuspendEv(%"class.net::TCPClientSocket"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 -1, i32 18, i32 0, i32 10, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.net::TCPClientSocket"*
  tail call void @_ZN3net15TCPClientSocket9OnSuspendEv(%"class.net::TCPClientSocket"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15TCPClientSocket20DidCompleteReadWriteEN4base12OnceCallbackIFviEEEi(%"class.net::TCPClientSocket"* nocapture, %"class.base::OnceCallback"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = icmp sgt i32 %2, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.net::TCPClientSocket", %"class.net::TCPClientSocket"* %0, i64 0, i32 14
  store i8 1, i8* %7, align 8
  br label %8

8:                                                ; preds = %6, %3
  %9 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %15 = inttoptr i64 %12 to %"class.base::internal::BindStateBase"*
  %16 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %15, i64 0, i32 1
  %17 = bitcast void ()** %16 to void (%"class.base::internal::BindStateBase"*, i32)**
  %18 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %17, align 8
  tail call void %18(%"class.base::internal::BindStateBase"* %15, i32 %2) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  ret void
}

declare i32 @_ZN3net14TCPSocketPosix4OpenENS_13AddressFamilyE(%"class.net::TCPSocketPosix"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK3net14TCPSocketPosix25GetEstimatedRoundTripTimeEPN4base9TimeDeltaE(%"class.net::TCPSocketPosix"*, %"class.base::TimeDelta"*) local_unnamed_addr #2

declare %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8*, i64, i64, i32, i32) local_unnamed_addr #2

declare void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"*, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #2

declare i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"*) local_unnamed_addr #2

declare double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"*) local_unnamed_addr #2

declare %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #2

declare i64 @_ZNK4base12FeatureParamINS_9TimeDeltaELb0EE3GetEv(%"struct.base::FeatureParam"*) local_unnamed_addr #2

declare double @_ZNK4base12FeatureParamIdLb0EE3GetEv(%"struct.base::FeatureParam.188"*) local_unnamed_addr #2

declare void @_ZN3net6Socket13SetDnsAliasesENSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE(%"class.net::Socket"*, %"class.std::__1::vector"*) unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::vector"* @_ZNK3net6Socket13GetDnsAliasesEv(%"class.net::Socket"*) unnamed_addr #2

declare i32 @_ZN3net12StreamSocket16ConfirmHandshakeEN4base12OnceCallbackIFviEEE(%"class.net::StreamSocket"*, %"class.base::OnceCallback"*) unnamed_addr #2

declare void @_ZNK3net12StreamSocket26GetPeerApplicationSettingsEv() unnamed_addr

declare void @_ZNK3net12StreamSocket21GetSSLCertRequestInfoEPNS_18SSLCertRequestInfoE(%"class.net::StreamSocket"*, %"class.net::SSLCertRequestInfo"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3net12StreamSocket15DumpMemoryStatsEPNS0_17SocketMemoryStatsE(%"class.net::StreamSocket"*, %"struct.net::StreamSocket::SocketMemoryStats"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base20PowerSuspendObserver8OnResumeEv(%"class.base::PowerSuspendObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #2

declare void @_ZN3net14TCPSocketPosixC1ENSt3__110unique_ptrINS_24SocketPerformanceWatcherENS1_14default_deleteIS3_EEEEPNS_6NetLogERKNS_12NetLogSourceE(%"class.net::TCPSocketPosix"*, %"class.net::SocketPerformanceWatcher"*, %"class.net::NetLog"*, %"struct.net::NetLogSource"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net15TCPClientSocketEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi(%"class.base::internal::BindStateBase"*, i32) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = bitcast i8* %12 to %"class.net::TCPClientSocket"*
  %14 = and i64 %8, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %8, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.net::TCPClientSocket"*, i32)**
  %22 = load void (%"class.net::TCPClientSocket"*, i32)*, void (%"class.net::TCPClientSocket"*, i32)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %8 to void (%"class.net::TCPClientSocket"*, i32)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.net::TCPClientSocket"*, i32)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.net::TCPClientSocket"* %13, i32 %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net15TCPClientSocketEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net15TCPClientSocketEFvvEJNS0_17UnretainedWrapperIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %"class.net::TCPClientSocket"*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.net::TCPClientSocket"*)**
  %21 = load void (%"class.net::TCPClientSocket"*)*, void (%"class.net::TCPClientSocket"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%"class.net::TCPClientSocket"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.net::TCPClientSocket"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.net::TCPClientSocket"* %12) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net15TCPClientSocketEFvvEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net17ConnectionAttemptENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.48"*, %"struct.net::ConnectionAttempt"* dereferenceable(24)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.net::ConnectionAttempt"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.48"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.48"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.net::ConnectionAttempt"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"struct.net::ConnectionAttempt"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.net::ConnectionAttempt"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %33, i64 %32
  %36 = ptrtoint %"struct.net::ConnectionAttempt"* %35 to i64
  %37 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %1, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %37, %"class.net::IPEndPoint"* dereferenceable(20) %38) #11
  %39 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %33, i64 %9, i32 1
  %40 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %1, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  store i32 %41, i32* %39, align 4
  %42 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %34, i64 1
  %43 = ptrtoint %"struct.net::ConnectionAttempt"* %42 to i64
  %44 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %0, i64 0, i32 0, i32 0
  %45 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %44, align 8
  %46 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %3, align 8
  %47 = icmp eq %"struct.net::ConnectionAttempt"* %46, %45
  br i1 %47, label %48, label %50

48:                                               ; preds = %31
  %49 = ptrtoint %"struct.net::ConnectionAttempt"* %34 to i64
  store i64 %49, i64* %6, align 8
  store i64 %43, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  br label %71

50:                                               ; preds = %31, %50
  %51 = phi %"struct.net::ConnectionAttempt"* [ %59, %50 ], [ %34, %31 ]
  %52 = phi %"struct.net::ConnectionAttempt"* [ %53, %50 ], [ %46, %31 ]
  %53 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %52, i64 -1
  %54 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %51, i64 -1, i32 0
  %55 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %53, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %54, %"class.net::IPEndPoint"* dereferenceable(20) %55) #11
  %56 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %51, i64 -1, i32 1
  %57 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %52, i64 -1, i32 1
  %58 = load i32, i32* %57, align 4
  store i32 %58, i32* %56, align 4
  %59 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %51, i64 -1
  %60 = icmp eq %"struct.net::ConnectionAttempt"* %53, %45
  br i1 %60, label %61, label %50

61:                                               ; preds = %50
  %62 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %44, align 8
  %63 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %3, align 8
  %64 = ptrtoint %"struct.net::ConnectionAttempt"* %59 to i64
  store i64 %64, i64* %6, align 8
  store i64 %43, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %65 = icmp eq %"struct.net::ConnectionAttempt"* %63, %62
  br i1 %65, label %71, label %66

66:                                               ; preds = %61, %66
  %67 = phi %"struct.net::ConnectionAttempt"* [ %68, %66 ], [ %63, %61 ]
  %68 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %67, i64 -1
  %69 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %68, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %69) #11
  %70 = icmp eq %"struct.net::ConnectionAttempt"* %68, %62
  br i1 %70, label %71, label %66

71:                                               ; preds = %66, %48, %61
  %72 = phi %"struct.net::ConnectionAttempt"* [ %45, %48 ], [ %62, %61 ], [ %62, %66 ]
  %73 = icmp eq %"struct.net::ConnectionAttempt"* %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %75) #10
  br label %76

76:                                               ; preds = %71, %74
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

declare void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net17ConnectionAttemptENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.48"*, %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.net::ConnectionAttempt"* %2 to i64
  %5 = ptrtoint %"struct.net::ConnectionAttempt"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 24
  %8 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.net::ConnectionAttempt"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.48"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 24
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.net::ConnectionAttempt"*
  br i1 %15, label %64, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.net::ConnectionAttempt"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 24
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %1, i64 %22
  %25 = select i1 %23, %"struct.net::ConnectionAttempt"* %24, %"struct.net::ConnectionAttempt"* %2
  %26 = ptrtoint %"struct.net::ConnectionAttempt"* %25 to i64
  %27 = sub i64 %26, %5
  %28 = sdiv exact i64 %27, 24
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %32 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #11
  br label %33

33:                                               ; preds = %17, %30
  %34 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %16, i64 %28
  br i1 %23, label %35, label %55

35:                                               ; preds = %33
  %36 = load i64, i64* %19, align 8
  %37 = icmp eq %"struct.net::ConnectionAttempt"* %25, %2
  br i1 %37, label %53, label %38

38:                                               ; preds = %35
  %39 = inttoptr i64 %36 to %"struct.net::ConnectionAttempt"*
  br label %40

40:                                               ; preds = %40, %38
  %41 = phi %"struct.net::ConnectionAttempt"* [ %49, %40 ], [ %39, %38 ]
  %42 = phi %"struct.net::ConnectionAttempt"* [ %48, %40 ], [ %24, %38 ]
  %43 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %41, i64 0, i32 0
  %44 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %42, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %43, %"class.net::IPEndPoint"* dereferenceable(20) %44) #11
  %45 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %41, i64 0, i32 1
  %46 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %42, i64 0, i32 1
  %47 = load i32, i32* %46, align 4
  store i32 %47, i32* %45, align 4
  %48 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %42, i64 1
  %49 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %41, i64 1
  %50 = icmp eq %"struct.net::ConnectionAttempt"* %48, %2
  br i1 %50, label %51, label %40

51:                                               ; preds = %40
  %52 = ptrtoint %"struct.net::ConnectionAttempt"* %49 to i64
  br label %53

53:                                               ; preds = %35, %51
  %54 = phi i64 [ %36, %35 ], [ %52, %51 ]
  store i64 %54, i64* %19, align 8
  br label %121

55:                                               ; preds = %33
  %56 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %18, align 8
  %57 = icmp eq %"struct.net::ConnectionAttempt"* %56, %34
  br i1 %57, label %63, label %58

58:                                               ; preds = %55, %58
  %59 = phi %"struct.net::ConnectionAttempt"* [ %60, %58 ], [ %56, %55 ]
  %60 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %59, i64 -1
  %61 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %60, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %61) #11
  %62 = icmp eq %"struct.net::ConnectionAttempt"* %60, %34
  br i1 %62, label %63, label %58

63:                                               ; preds = %58, %55
  store %"struct.net::ConnectionAttempt"* %34, %"struct.net::ConnectionAttempt"** %18, align 8
  br label %121

64:                                               ; preds = %3
  %65 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %0, i64 0, i32 0, i32 0
  %66 = icmp eq i64 %12, 0
  br i1 %66, label %82, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %0, i64 0, i32 0, i32 1
  %69 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %68, align 8
  %70 = icmp eq %"struct.net::ConnectionAttempt"* %69, %16
  br i1 %70, label %78, label %71

71:                                               ; preds = %67, %71
  %72 = phi %"struct.net::ConnectionAttempt"* [ %73, %71 ], [ %69, %67 ]
  %73 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %72, i64 -1
  %74 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %73, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %74) #11
  %75 = icmp eq %"struct.net::ConnectionAttempt"* %73, %16
  br i1 %75, label %76, label %71

76:                                               ; preds = %71
  %77 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %65, align 8
  br label %78

78:                                               ; preds = %76, %67
  %79 = phi %"struct.net::ConnectionAttempt"* [ %77, %76 ], [ %16, %67 ]
  store %"struct.net::ConnectionAttempt"* %16, %"struct.net::ConnectionAttempt"** %68, align 8
  %80 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %80) #10
  %81 = bitcast %"class.std::__1::vector.48"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 24, i1 false) #11
  br label %82

82:                                               ; preds = %64, %78
  %83 = phi i64 [ %10, %64 ], [ 0, %78 ]
  %84 = icmp ugt i64 %7, 768614336404564650
  br i1 %84, label %85, label %87

85:                                               ; preds = %82
  %86 = bitcast %"class.std::__1::vector.48"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %86) #12
  unreachable

87:                                               ; preds = %82
  %88 = sdiv exact i64 %83, 24
  %89 = icmp ult i64 %88, 384307168202282325
  br i1 %89, label %90, label %94

90:                                               ; preds = %87
  %91 = shl nsw i64 %88, 1
  %92 = icmp ult i64 %91, %7
  %93 = select i1 %92, i64 %7, i64 %91
  br label %94

94:                                               ; preds = %90, %87
  %95 = phi i64 [ %93, %90 ], [ 768614336404564650, %87 ]
  %96 = mul i64 %95, 24
  %97 = tail call i8* @_Znwm(i64 %96) #10
  %98 = bitcast i8* %97 to %"struct.net::ConnectionAttempt"*
  %99 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %0, i64 0, i32 0, i32 1
  %100 = bitcast %"struct.net::ConnectionAttempt"** %99 to i8**
  store i8* %97, i8** %100, align 8
  %101 = bitcast %"class.std::__1::vector.48"* %0 to i8**
  store i8* %97, i8** %101, align 8
  %102 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %98, i64 %95
  store %"struct.net::ConnectionAttempt"* %102, %"struct.net::ConnectionAttempt"** %8, align 8
  %103 = bitcast %"struct.net::ConnectionAttempt"** %99 to i64*
  %104 = ptrtoint i8* %97 to i64
  %105 = icmp eq %"struct.net::ConnectionAttempt"* %1, %2
  br i1 %105, label %119, label %106

106:                                              ; preds = %94, %106
  %107 = phi %"struct.net::ConnectionAttempt"* [ %115, %106 ], [ %98, %94 ]
  %108 = phi %"struct.net::ConnectionAttempt"* [ %114, %106 ], [ %1, %94 ]
  %109 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %107, i64 0, i32 0
  %110 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %108, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %109, %"class.net::IPEndPoint"* dereferenceable(20) %110) #11
  %111 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %107, i64 0, i32 1
  %112 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %108, i64 0, i32 1
  %113 = load i32, i32* %112, align 4
  store i32 %113, i32* %111, align 4
  %114 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %108, i64 1
  %115 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %107, i64 1
  %116 = icmp eq %"struct.net::ConnectionAttempt"* %114, %2
  br i1 %116, label %117, label %106

117:                                              ; preds = %106
  %118 = ptrtoint %"struct.net::ConnectionAttempt"* %115 to i64
  br label %119

119:                                              ; preds = %94, %117
  %120 = phi i64 [ %104, %94 ], [ %118, %117 ]
  store i64 %120, i64* %103, align 8
  br label %121

121:                                              ; preds = %53, %63, %119
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #3

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #2

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net15TCPClientSocketEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!5 = distinct !{!5, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net15TCPClientSocketEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!6 = distinct !{!6, !7, !"_ZN4base8BindOnceIMN3net15TCPClientSocketEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8BindOnceIMN3net15TCPClientSocketEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net15TCPClientSocketEFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net15TCPClientSocketEFvvEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!11 = distinct !{!11, !12, !"_ZN4base8BindOnceIMN3net15TCPClientSocketEFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!12 = distinct !{!12, !"_ZN4base8BindOnceIMN3net15TCPClientSocketEFvvEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!13 = !{!14, !16}
!14 = distinct !{!14, !15, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net15TCPClientSocketEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!15 = distinct !{!15, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net15TCPClientSocketEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!16 = distinct !{!16, !17, !"_ZN4base8BindOnceIMN3net15TCPClientSocketEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!17 = distinct !{!17, !"_ZN4base8BindOnceIMN3net15TCPClientSocketEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!18 = !{!19, !21}
!19 = distinct !{!19, !20, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net15TCPClientSocketEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!20 = distinct !{!20, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net15TCPClientSocketEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!21 = distinct !{!21, !22, !"_ZN4base8BindOnceIMN3net15TCPClientSocketEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!22 = distinct !{!22, !"_ZN4base8BindOnceIMN3net15TCPClientSocketEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK4base14WeakPtrFactoryIN3net15TCPClientSocketEE10GetWeakPtrEv: argument 0"}
!25 = distinct !{!25, !"_ZNK4base14WeakPtrFactoryIN3net15TCPClientSocketEE10GetWeakPtrEv"}
