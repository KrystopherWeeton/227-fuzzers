; ModuleID = '../../base/version.cc'
source_filename = "../../base/version.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.base::Version" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.8" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.base::BasicStringPiece"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [3 x i8] c".*\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN4base7VersionC1Ev = hidden unnamed_addr alias void (%"class.base::Version"*), void (%"class.base::Version"*)* @_ZN4base7VersionC2Ev
@_ZN4base7VersionC1ERKS0_ = hidden unnamed_addr alias void (%"class.base::Version"*, %"class.base::Version"*), void (%"class.base::Version"*, %"class.base::Version"*)* @_ZN4base7VersionC2ERKS0_
@_ZN4base7VersionD1Ev = hidden unnamed_addr alias void (%"class.base::Version"*), void (%"class.base::Version"*)* @_ZN4base7VersionD2Ev
@_ZN4base7VersionC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE = hidden unnamed_addr alias void (%"class.base::Version"*, i8*, i64), void (%"class.base::Version"*, i8*, i64)* @_ZN4base7VersionC2ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE
@_ZN4base7VersionC1ENSt3__16vectorIjNS1_9allocatorIjEEEE = hidden unnamed_addr alias void (%"class.base::Version"*, %"class.std::__1::vector"*), void (%"class.base::Version"*, %"class.std::__1::vector"*)* @_ZN4base7VersionC2ENSt3__16vectorIjNS1_9allocatorIjEEEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base7VersionC2Ev(%"class.base::Version"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.base::Version"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base7VersionC2ERKS0_(%"class.base::Version"*, %"class.base::Version"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.base::Version"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #10
  %4 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %1, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast i32** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.base::Version"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %39, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 4611686018427387903
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"class.base::Version"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #11
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #12
  %18 = bitcast i8* %17 to i32*
  %19 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %0, i64 0, i32 0, i32 0, i32 1
  %20 = bitcast i32** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"class.base::Version"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds i32, i32* %18, i64 %10
  %23 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i32* %22, i32** %23, align 8
  %24 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %1, i64 0, i32 0, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = load i64, i64* %5, align 8
  %27 = bitcast i32** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = ptrtoint i32* %25 to i64
  %30 = sub i64 %26, %29
  %31 = icmp sgt i64 %30, 0
  br i1 %31, label %32, label %37

32:                                               ; preds = %16
  %33 = lshr exact i64 %30, 2
  %34 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %17, i8* align 4 %34, i64 %30, i1 false) #10
  %35 = getelementptr inbounds i32, i32* %18, i64 %33
  %36 = ptrtoint i32* %35 to i64
  br label %37

37:                                               ; preds = %32, %16
  %38 = phi i64 [ %36, %32 ], [ %28, %16 ]
  store i64 %38, i64* %27, align 8
  br label %39

39:                                               ; preds = %2, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base7VersionD2Ev(%"class.base::Version"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i32* %3 to i64
  %7 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast i32** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast i32* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #12
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base7VersionC2ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Version"* nocapture, i8*, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector", align 16
  %5 = bitcast %"class.base::Version"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #10
  %6 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 0, i64 24, i1 false) #10
  %8 = call fastcc zeroext i1 @_ZN4base12_GLOBAL__N_119ParseVersionNumbersENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_6vectorIjNS2_9allocatorIjEEEE(i8* %1, i64 %2, %"class.std::__1::vector"* nonnull %4)
  br i1 %8, label %12, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %11 = load i32*, i32** %10, align 16
  br label %27

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.std::__1::vector"* %4 to <2 x i64>*
  %15 = load <2 x i64>, <2 x i64>* %14, align 16
  %16 = bitcast %"class.base::Version"* %0 to <2 x i64>*
  %17 = load <2 x i64>, <2 x i64>* %16, align 8
  %18 = bitcast %"class.base::Version"* %0 to <2 x i64>*
  store <2 x i64> %15, <2 x i64>* %18, align 8
  %19 = bitcast %"class.std::__1::vector"* %4 to <2 x i64>*
  store <2 x i64> %17, <2 x i64>* %19, align 16
  %20 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast i32** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast i32** %13 to i64*
  %24 = load i64, i64* %23, align 16
  store i64 %24, i64* %21, align 8
  store i64 %22, i64* %23, align 16
  %25 = extractelement <2 x i64> %17, i32 0
  %26 = inttoptr i64 %25 to i32*
  br label %27

27:                                               ; preds = %9, %12
  %28 = phi i32* [ %11, %9 ], [ %26, %12 ]
  %29 = icmp eq i32* %28, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %27
  %31 = ptrtoint i32* %28 to i64
  %32 = bitcast i32** %7 to i64*
  store i64 %31, i64* %32, align 8
  %33 = bitcast i32* %28 to i8*
  call void @_ZdlPv(i8* %33) #12
  br label %34

34:                                               ; preds = %27, %30
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN4base12_GLOBAL__N_119ParseVersionNumbersENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_6vectorIjNS2_9allocatorIjEEEE(i8*, i64, %"class.std::__1::vector"*) unnamed_addr #0 {
  %4 = alloca %"class.std::__1::vector.6", align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.std::__1::vector.6"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %4, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %4, i64 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::vector.6"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.6"* nonnull sret %4, i8* %0, i64 %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1, i32 0, i32 0) #10
  %11 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %8, align 8
  %12 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %13 = icmp eq %"class.base::BasicStringPiece"* %11, %12
  br i1 %13, label %131, label %14

14:                                               ; preds = %3
  %15 = bitcast i32* %5 to i8*
  %16 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %17 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %23 = bitcast i32** %21 to i64*
  %24 = bitcast %"class.std::__1::vector"* %2 to i64*
  %25 = bitcast i32** %22 to i64*
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  br label %27

27:                                               ; preds = %14, %124
  %28 = phi %"class.base::BasicStringPiece"* [ %11, %14 ], [ %125, %124 ]
  %29 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %28, i64 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %28, i64 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %30, i64 %32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1, i32 0) #10
  br i1 %33, label %128, label %34

34:                                               ; preds = %27
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #10
  store i32 -1431655766, i32* %5, align 4
  %35 = load i8*, i8** %29, align 8
  %36 = load i64, i64* %31, align 8
  %37 = call zeroext i1 @_ZN4base12StringToUintENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPj(i8* %35, i64 %36, i32* nonnull %5) #10
  br i1 %37, label %38, label %123

38:                                               ; preds = %34
  %39 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %8, align 8
  %40 = icmp eq %"class.base::BasicStringPiece"* %28, %39
  br i1 %40, label %41, label %61

41:                                               ; preds = %38
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #10
  %42 = load i32, i32* %5, align 4
  call void @_ZN4base14NumberToStringEj(%"class.std::__1::basic_string"* nonnull sret %6, i32 %42) #10
  %43 = load i8, i8* %18, align 1
  %44 = icmp slt i8 %43, 0
  %45 = load i64, i64* %19, align 8
  %46 = zext i8 %43 to i64
  %47 = select i1 %44, i64 %45, i64 %46
  %48 = load i64, i64* %31, align 8
  %49 = icmp eq i64 %47, %48
  br i1 %49, label %50, label %56

50:                                               ; preds = %41
  %51 = load i8*, i8** %29, align 8
  %52 = load i8*, i8** %20, align 8
  %53 = select i1 %44, i8* %52, i8* %16
  %54 = call i32 @bcmp(i8* %53, i8* %51, i64 %47) #10
  %55 = icmp ne i32 %54, 0
  br label %56

56:                                               ; preds = %41, %50
  %57 = phi i1 [ %55, %50 ], [ true, %41 ]
  br i1 %44, label %58, label %60

58:                                               ; preds = %56
  %59 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %59) #12
  br label %60

60:                                               ; preds = %58, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #10
  br i1 %57, label %123, label %61

61:                                               ; preds = %38, %60
  %62 = load i32*, i32** %21, align 8
  %63 = load i32*, i32** %22, align 8
  %64 = icmp eq i32* %62, %63
  %65 = ptrtoint i32* %63 to i64
  br i1 %64, label %70, label %66

66:                                               ; preds = %61
  %67 = load i32, i32* %5, align 4
  store i32 %67, i32* %62, align 4
  %68 = getelementptr inbounds i32, i32* %62, i64 1
  %69 = ptrtoint i32* %68 to i64
  store i64 %69, i64* %23, align 8
  br label %124

70:                                               ; preds = %61
  %71 = ptrtoint i32* %62 to i64
  %72 = load i64, i64* %24, align 8
  %73 = sub i64 %71, %72
  %74 = ashr exact i64 %73, 2
  %75 = add nsw i64 %74, 1
  %76 = icmp ugt i64 %75, 4611686018427387903
  br i1 %76, label %77, label %79

77:                                               ; preds = %70
  %78 = bitcast %"class.std::__1::vector"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %78) #11
  unreachable

79:                                               ; preds = %70
  %80 = sub i64 %65, %72
  %81 = ashr exact i64 %80, 2
  %82 = icmp ult i64 %81, 2305843009213693951
  br i1 %82, label %83, label %91

83:                                               ; preds = %79
  %84 = ashr exact i64 %80, 1
  %85 = icmp ult i64 %84, %75
  %86 = select i1 %85, i64 %75, i64 %84
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %96, label %88

88:                                               ; preds = %83
  %89 = icmp ugt i64 %86, 4611686018427387903
  br i1 %89, label %90, label %91

90:                                               ; preds = %88
  call void @abort() #11
  unreachable

91:                                               ; preds = %88, %79
  %92 = phi i64 [ %86, %88 ], [ 4611686018427387903, %79 ]
  %93 = shl i64 %92, 2
  %94 = call i8* @_Znwm(i64 %93) #12
  %95 = bitcast i8* %94 to i32*
  br label %96

96:                                               ; preds = %91, %83
  %97 = phi i64 [ %92, %91 ], [ 0, %83 ]
  %98 = phi i32* [ %95, %91 ], [ null, %83 ]
  %99 = getelementptr inbounds i32, i32* %98, i64 %74
  %100 = getelementptr inbounds i32, i32* %98, i64 %97
  %101 = ptrtoint i32* %100 to i64
  %102 = load i32, i32* %5, align 4
  store i32 %102, i32* %99, align 4
  %103 = getelementptr inbounds i32, i32* %99, i64 1
  %104 = ptrtoint i32* %103 to i64
  %105 = load i32*, i32** %26, align 8
  %106 = load i64, i64* %23, align 8
  %107 = ptrtoint i32* %105 to i64
  %108 = sub i64 %106, %107
  %109 = ashr exact i64 %108, 2
  %110 = sub nsw i64 0, %109
  %111 = getelementptr inbounds i32, i32* %99, i64 %110
  %112 = ptrtoint i32* %111 to i64
  %113 = icmp sgt i64 %108, 0
  br i1 %113, label %114, label %118

114:                                              ; preds = %96
  %115 = bitcast i32* %111 to i8*
  %116 = bitcast i32* %105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %115, i8* align 4 %116, i64 %108, i1 false) #10
  %117 = load i32*, i32** %26, align 8
  br label %118

118:                                              ; preds = %114, %96
  %119 = phi i32* [ %105, %96 ], [ %117, %114 ]
  store i64 %112, i64* %24, align 8
  store i64 %104, i64* %23, align 8
  store i64 %101, i64* %25, align 8
  %120 = icmp eq i32* %119, null
  br i1 %120, label %124, label %121

121:                                              ; preds = %118
  %122 = bitcast i32* %119 to i8*
  call void @_ZdlPv(i8* %122) #12
  br label %124

123:                                              ; preds = %60, %34
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #10
  br label %128

124:                                              ; preds = %66, %118, %121
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #10
  %125 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %28, i64 1
  %126 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %9, align 8
  %127 = icmp eq %"class.base::BasicStringPiece"* %125, %126
  br i1 %127, label %128, label %27

128:                                              ; preds = %27, %124, %123
  %129 = phi i1 [ false, %123 ], [ false, %27 ], [ true, %124 ]
  %130 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %8, align 8
  br label %131

131:                                              ; preds = %128, %3
  %132 = phi %"class.base::BasicStringPiece"* [ %130, %128 ], [ %11, %3 ]
  %133 = phi i1 [ %129, %128 ], [ false, %3 ]
  %134 = icmp eq %"class.base::BasicStringPiece"* %132, null
  br i1 %134, label %139, label %135

135:                                              ; preds = %131
  %136 = ptrtoint %"class.base::BasicStringPiece"* %132 to i64
  %137 = bitcast %"class.base::BasicStringPiece"** %9 to i64*
  store i64 %136, i64* %137, align 8
  %138 = bitcast %"class.base::BasicStringPiece"* %132 to i8*
  call void @_ZdlPv(i8* %138) #12
  br label %139

139:                                              ; preds = %131, %135
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #10
  ret i1 %133
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base7VersionC2ENSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.base::Version"* nocapture, %"class.std::__1::vector"* nocapture) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.base::Version"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #10
  %4 = bitcast %"class.std::__1::vector"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.base::Version"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %8 = bitcast i32** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast i32** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast i32** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast i32** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"class.std::__1::vector"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #10
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4base7Version7IsValidEv(%"class.base::Version"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32*, i32** %4, align 8
  %6 = icmp ne i32* %3, %5
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base7Version21IsValidWildcardStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  %7 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  store i8* %0, i8** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = tail call zeroext i1 @_ZN4base8EndsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %0, i64 %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i64 2, i32 0) #10
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = add i64 %1, -2
  %11 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %4, i64 0, i64 %10)
  %12 = extractvalue { i8*, i64 } %11, 0
  %13 = extractvalue { i8*, i64 } %11, 1
  store i8* %12, i8** %6, align 8
  store i64 %13, i64* %7, align 8
  br label %14

14:                                               ; preds = %9, %2
  %15 = phi i64 [ %13, %9 ], [ %1, %2 ]
  %16 = phi i8* [ %12, %9 ], [ %0, %2 ]
  %17 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 24, i1 false) #10
  %19 = call fastcc zeroext i1 @_ZN4base12_GLOBAL__N_119ParseVersionNumbersENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_6vectorIjNS2_9allocatorIjEEEE(i8* %16, i64 %15, %"class.std::__1::vector"* nonnull %3) #10
  br i1 %19, label %29, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %22 = load i32*, i32** %21, align 8
  %23 = icmp eq i32* %22, null
  br i1 %23, label %28, label %24

24:                                               ; preds = %20
  %25 = ptrtoint i32* %22 to i64
  %26 = bitcast i32** %18 to i64*
  store i64 %25, i64* %26, align 8
  %27 = bitcast i32* %22 to i8*
  call void @_ZdlPv(i8* %27) #12
  br label %28

28:                                               ; preds = %20, %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #10
  br label %38

29:                                               ; preds = %14
  %30 = bitcast %"class.std::__1::vector"* %3 to i64*
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  store i64 0, i64* %30, align 8
  %33 = load i32*, i32** %18, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #10
  %34 = icmp ne i32* %32, %33
  %35 = icmp eq i32* %32, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %29
  %37 = bitcast i32* %32 to i8*
  call void @_ZdlPv(i8* %37) #12
  br label %38

38:                                               ; preds = %28, %29, %36
  %39 = phi i1 [ false, %28 ], [ %34, %29 ], [ %34, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #10
  ret i1 %39
}

declare zeroext i1 @_ZN4base8EndsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"*, i64, i64) local_unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK4base7Version23CompareToWildcardStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Version"* nocapture readonly, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  store i8* %1, i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  store i64 %2, i64* %8, align 8
  %9 = tail call zeroext i1 @_ZN4base8EndsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %1, i64 %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i64 2, i32 0) #10
  br i1 %9, label %81, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #10
  %13 = call fastcc zeroext i1 @_ZN4base12_GLOBAL__N_119ParseVersionNumbersENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_6vectorIjNS2_9allocatorIjEEEE(i8* %1, i64 %2, %"class.std::__1::vector"* nonnull %4) #10
  br i1 %13, label %14, label %20

14:                                               ; preds = %10
  %15 = bitcast %"class.std::__1::vector"* %4 to i64*
  %16 = load i64, i64* %15, align 8
  store i64 0, i64* %15, align 8
  %17 = bitcast i32** %12 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast i32** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false)
  br label %28

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %22 = load i32*, i32** %21, align 8
  %23 = icmp eq i32* %22, null
  br i1 %23, label %28, label %24

24:                                               ; preds = %20
  %25 = ptrtoint i32* %22 to i64
  %26 = bitcast i32** %12 to i64*
  store i64 %25, i64* %26, align 8
  %27 = bitcast i32* %22 to i8*
  call void @_ZdlPv(i8* %27) #12
  br label %28

28:                                               ; preds = %14, %20, %24
  %29 = phi i64 [ %16, %14 ], [ 0, %20 ], [ 0, %24 ]
  %30 = phi i64 [ %18, %14 ], [ 0, %20 ], [ 0, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #10
  %31 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %0, i64 0, i32 0, i32 0, i32 1
  %32 = bitcast i32** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.base::Version"* %0 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %33, %35
  %37 = ashr exact i64 %36, 2
  %38 = sub i64 %30, %29
  %39 = ashr exact i64 %38, 2
  %40 = icmp ult i64 %39, %37
  %41 = select i1 %40, i64 %39, i64 %37
  %42 = icmp eq i64 %41, 0
  %43 = inttoptr i64 %35 to i32*
  %44 = inttoptr i64 %29 to i32*
  br i1 %42, label %57, label %47

45:                                               ; preds = %54
  %46 = icmp ult i64 %56, %41
  br i1 %46, label %47, label %57

47:                                               ; preds = %28, %45
  %48 = phi i64 [ %56, %45 ], [ 0, %28 ]
  %49 = getelementptr inbounds i32, i32* %43, i64 %48
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds i32, i32* %44, i64 %48
  %52 = load i32, i32* %51, align 4
  %53 = icmp ugt i32 %50, %52
  br i1 %53, label %76, label %54

54:                                               ; preds = %47
  %55 = icmp ult i32 %50, %52
  %56 = add nuw i64 %48, 1
  br i1 %55, label %76, label %45

57:                                               ; preds = %45, %28
  br i1 %40, label %60, label %66

58:                                               ; preds = %60
  %59 = icmp eq i64 %65, %37
  br i1 %59, label %76, label %60

60:                                               ; preds = %57, %58
  %61 = phi i64 [ %65, %58 ], [ %39, %57 ]
  %62 = getelementptr inbounds i32, i32* %43, i64 %61
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  %65 = add i64 %61, 1
  br i1 %64, label %58, label %76

66:                                               ; preds = %57
  %67 = icmp ult i64 %37, %39
  br i1 %67, label %70, label %76

68:                                               ; preds = %70
  %69 = icmp eq i64 %75, %39
  br i1 %69, label %76, label %70

70:                                               ; preds = %66, %68
  %71 = phi i64 [ %75, %68 ], [ %37, %66 ]
  %72 = getelementptr inbounds i32, i32* %44, i64 %71
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  %75 = add i64 %71, 1
  br i1 %74, label %68, label %76

76:                                               ; preds = %47, %54, %68, %70, %58, %60, %66
  %77 = phi i32 [ 0, %66 ], [ 1, %60 ], [ 0, %58 ], [ -1, %70 ], [ 0, %68 ], [ 1, %47 ], [ -1, %54 ]
  %78 = icmp eq i64 %29, 0
  br i1 %78, label %155, label %79

79:                                               ; preds = %76
  %80 = inttoptr i64 %29 to i8*
  call void @_ZdlPv(i8* %80) #12
  br label %155

81:                                               ; preds = %3
  %82 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #10
  %83 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 0, i64 24, i1 false) #10
  %84 = add i64 %2, -2
  %85 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %5, i64 0, i64 %84)
  %86 = extractvalue { i8*, i64 } %85, 0
  %87 = extractvalue { i8*, i64 } %85, 1
  %88 = call fastcc zeroext i1 @_ZN4base12_GLOBAL__N_119ParseVersionNumbersENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_6vectorIjNS2_9allocatorIjEEEE(i8* %86, i64 %87, %"class.std::__1::vector"* nonnull %6)
  %89 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %0, i64 0, i32 0, i32 0, i32 1
  %90 = bitcast i32** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.base::Version"* %0 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = sub i64 %91, %93
  %95 = ashr exact i64 %94, 2
  %96 = bitcast i32** %83 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.std::__1::vector"* %6 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = sub i64 %97, %99
  %101 = ashr exact i64 %100, 2
  %102 = icmp ult i64 %101, %95
  %103 = select i1 %102, i64 %101, i64 %95
  %104 = icmp eq i64 %103, 0
  %105 = inttoptr i64 %93 to i32*
  %106 = inttoptr i64 %99 to i32*
  br i1 %104, label %119, label %109

107:                                              ; preds = %116
  %108 = icmp ult i64 %118, %103
  br i1 %108, label %109, label %119

109:                                              ; preds = %81, %107
  %110 = phi i64 [ %118, %107 ], [ 0, %81 ]
  %111 = getelementptr inbounds i32, i32* %105, i64 %110
  %112 = load i32, i32* %111, align 4
  %113 = getelementptr inbounds i32, i32* %106, i64 %110
  %114 = load i32, i32* %113, align 4
  %115 = icmp ugt i32 %112, %114
  br i1 %115, label %138, label %116

116:                                              ; preds = %109
  %117 = icmp ult i32 %112, %114
  %118 = add nuw i64 %110, 1
  br i1 %117, label %149, label %107

119:                                              ; preds = %107, %81
  br i1 %102, label %122, label %128

120:                                              ; preds = %122
  %121 = icmp eq i64 %127, %95
  br i1 %121, label %149, label %122

122:                                              ; preds = %119, %120
  %123 = phi i64 [ %127, %120 ], [ %101, %119 ]
  %124 = getelementptr inbounds i32, i32* %105, i64 %123
  %125 = load i32, i32* %124, align 4
  %126 = icmp eq i32 %125, 0
  %127 = add i64 %123, 1
  br i1 %126, label %120, label %138

128:                                              ; preds = %119
  %129 = icmp ult i64 %95, %101
  br i1 %129, label %132, label %149

130:                                              ; preds = %132
  %131 = icmp eq i64 %137, %101
  br i1 %131, label %149, label %132

132:                                              ; preds = %128, %130
  %133 = phi i64 [ %137, %130 ], [ %95, %128 ]
  %134 = getelementptr inbounds i32, i32* %106, i64 %133
  %135 = load i32, i32* %134, align 4
  %136 = icmp eq i32 %135, 0
  %137 = add i64 %133, 1
  br i1 %136, label %130, label %149

138:                                              ; preds = %109, %122
  br i1 %104, label %149, label %141

139:                                              ; preds = %141
  %140 = icmp ult i64 %148, %103
  br i1 %140, label %141, label %149

141:                                              ; preds = %138, %139
  %142 = phi i64 [ %148, %139 ], [ 0, %138 ]
  %143 = getelementptr inbounds i32, i32* %105, i64 %142
  %144 = load i32, i32* %143, align 4
  %145 = getelementptr inbounds i32, i32* %106, i64 %142
  %146 = load i32, i32* %145, align 4
  %147 = icmp eq i32 %144, %146
  %148 = add nuw i64 %142, 1
  br i1 %147, label %139, label %149

149:                                              ; preds = %116, %132, %130, %120, %141, %139, %128, %138
  %150 = phi i32 [ 0, %128 ], [ 0, %138 ], [ 1, %141 ], [ 0, %139 ], [ 0, %120 ], [ -1, %132 ], [ 0, %130 ], [ -1, %116 ]
  %151 = icmp eq i64 %99, 0
  br i1 %151, label %154, label %152

152:                                              ; preds = %149
  store i64 %99, i64* %96, align 8
  %153 = inttoptr i64 %99 to i8*
  call void @_ZdlPv(i8* %153) #12
  br label %154

154:                                              ; preds = %149, %152
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #10
  br label %155

155:                                              ; preds = %79, %76, %154
  %156 = phi i32 [ %150, %154 ], [ %77, %76 ], [ %77, %79 ]
  ret i32 %156
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK4base7Version9CompareToERKS0_(%"class.base::Version"* nocapture readonly, %"class.base::Version"* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.base::Version"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 2
  %10 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %1, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast i32** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::Version"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 2
  %17 = icmp ult i64 %16, %9
  %18 = select i1 %17, i64 %16, i64 %9
  %19 = icmp eq i64 %18, 0
  %20 = inttoptr i64 %7 to i32*
  %21 = inttoptr i64 %14 to i32*
  br i1 %19, label %34, label %24

22:                                               ; preds = %31
  %23 = icmp ult i64 %33, %18
  br i1 %23, label %24, label %34

24:                                               ; preds = %2, %22
  %25 = phi i64 [ %33, %22 ], [ 0, %2 ]
  %26 = getelementptr inbounds i32, i32* %20, i64 %25
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds i32, i32* %21, i64 %25
  %29 = load i32, i32* %28, align 4
  %30 = icmp ugt i32 %27, %29
  br i1 %30, label %53, label %31

31:                                               ; preds = %24
  %32 = icmp ult i32 %27, %29
  %33 = add nuw i64 %25, 1
  br i1 %32, label %53, label %22

34:                                               ; preds = %22, %2
  br i1 %17, label %37, label %43

35:                                               ; preds = %37
  %36 = icmp eq i64 %42, %9
  br i1 %36, label %53, label %37

37:                                               ; preds = %34, %35
  %38 = phi i64 [ %42, %35 ], [ %16, %34 ]
  %39 = getelementptr inbounds i32, i32* %20, i64 %38
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  %42 = add i64 %38, 1
  br i1 %41, label %35, label %53

43:                                               ; preds = %34
  %44 = icmp ult i64 %9, %16
  br i1 %44, label %47, label %53

45:                                               ; preds = %47
  %46 = icmp eq i64 %52, %16
  br i1 %46, label %53, label %47

47:                                               ; preds = %43, %45
  %48 = phi i64 [ %52, %45 ], [ %9, %43 ]
  %49 = getelementptr inbounds i32, i32* %21, i64 %48
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  %52 = add i64 %48, 1
  br i1 %51, label %45, label %53

53:                                               ; preds = %24, %31, %45, %47, %35, %37, %43
  %54 = phi i32 [ 0, %43 ], [ 0, %35 ], [ 1, %37 ], [ 0, %45 ], [ -1, %47 ], [ -1, %31 ], [ 1, %24 ]
  ret i32 %54
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base7Version9GetStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.base::Version"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #10
  %6 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %1, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::Version"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = ashr exact i64 %11, 2
  %13 = add nsw i64 %12, -1
  %14 = icmp eq i64 %13, 0
  %15 = inttoptr i64 %10 to i32*
  br i1 %14, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %18 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %1, i64 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %45

23:                                               ; preds = %62, %2
  %24 = phi i32* [ %15, %2 ], [ %66, %62 ]
  %25 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #10
  %26 = getelementptr inbounds i32, i32* %24, i64 %13
  %27 = load i32, i32* %26, align 4
  call void @_ZN4base14NumberToStringEj(%"class.std::__1::basic_string"* nonnull sret %4, i32 %27) #10
  %28 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = zext i8 %30 to i64
  %37 = select i1 %31, i8* %33, i8* %25
  %38 = select i1 %31, i64 %35, i64 %36
  %39 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %37, i64 %38) #10
  %40 = load i8, i8* %29, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %23
  %43 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %43) #12
  br label %44

44:                                               ; preds = %23, %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #10
  ret void

45:                                               ; preds = %62, %16
  %46 = phi i32* [ %15, %16 ], [ %66, %62 ]
  %47 = phi i64 [ 0, %16 ], [ %64, %62 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #10
  %48 = getelementptr inbounds i32, i32* %46, i64 %47
  %49 = load i32, i32* %48, align 4
  call void @_ZN4base14NumberToStringEj(%"class.std::__1::basic_string"* nonnull sret %3, i32 %49) #10
  %50 = load i8, i8* %20, align 1
  %51 = icmp slt i8 %50, 0
  %52 = load i8*, i8** %21, align 8
  %53 = load i64, i64* %22, align 8
  %54 = zext i8 %50 to i64
  %55 = select i1 %51, i8* %52, i8* %17
  %56 = select i1 %51, i64 %53, i64 %54
  %57 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %55, i64 %56) #10
  %58 = load i8, i8* %20, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %45
  %61 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %61) #12
  br label %62

62:                                               ; preds = %45, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #10
  %63 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #10
  %64 = add nuw i64 %47, 1
  %65 = icmp eq i64 %64, %13
  %66 = load i32*, i32** %18, align 8
  br i1 %65, label %23, label %45
}

declare void @_ZN4base14NumberToStringEj(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #3

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4baseeqERKNS_7VersionES2_(%"class.base::Version"* nocapture readonly dereferenceable(24), %"class.base::Version"* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.base::Version"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 2
  %10 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %1, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast i32** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::Version"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 2
  %17 = icmp ult i64 %16, %9
  %18 = select i1 %17, i64 %16, i64 %9
  %19 = icmp eq i64 %18, 0
  %20 = inttoptr i64 %7 to i32*
  %21 = inttoptr i64 %14 to i32*
  br i1 %19, label %34, label %24

22:                                               ; preds = %31
  %23 = icmp ult i64 %33, %18
  br i1 %23, label %24, label %34

24:                                               ; preds = %2, %22
  %25 = phi i64 [ %33, %22 ], [ 0, %2 ]
  %26 = getelementptr inbounds i32, i32* %20, i64 %25
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds i32, i32* %21, i64 %25
  %29 = load i32, i32* %28, align 4
  %30 = icmp ugt i32 %27, %29
  br i1 %30, label %53, label %31

31:                                               ; preds = %24
  %32 = icmp ult i32 %27, %29
  %33 = add nuw i64 %25, 1
  br i1 %32, label %53, label %22

34:                                               ; preds = %22, %2
  br i1 %17, label %37, label %43

35:                                               ; preds = %37
  %36 = icmp eq i64 %42, %9
  br i1 %36, label %53, label %37

37:                                               ; preds = %34, %35
  %38 = phi i64 [ %42, %35 ], [ %16, %34 ]
  %39 = getelementptr inbounds i32, i32* %20, i64 %38
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  %42 = add i64 %38, 1
  br i1 %41, label %35, label %53

43:                                               ; preds = %34
  %44 = icmp ult i64 %9, %16
  br i1 %44, label %47, label %53

45:                                               ; preds = %47
  %46 = icmp eq i64 %52, %16
  br i1 %46, label %53, label %47

47:                                               ; preds = %43, %45
  %48 = phi i64 [ %52, %45 ], [ %9, %43 ]
  %49 = getelementptr inbounds i32, i32* %21, i64 %48
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  %52 = add i64 %48, 1
  br i1 %51, label %45, label %53

53:                                               ; preds = %24, %31, %45, %47, %35, %37, %43
  %54 = phi i1 [ true, %43 ], [ false, %37 ], [ true, %35 ], [ false, %47 ], [ true, %45 ], [ false, %31 ], [ false, %24 ]
  ret i1 %54
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4baseneERKNS_7VersionES2_(%"class.base::Version"* nocapture readonly dereferenceable(24), %"class.base::Version"* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.base::Version"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 2
  %10 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %1, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast i32** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::Version"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 2
  %17 = icmp ult i64 %16, %9
  %18 = select i1 %17, i64 %16, i64 %9
  %19 = icmp eq i64 %18, 0
  %20 = inttoptr i64 %7 to i32*
  %21 = inttoptr i64 %14 to i32*
  br i1 %19, label %34, label %24

22:                                               ; preds = %31
  %23 = icmp ult i64 %33, %18
  br i1 %23, label %24, label %34

24:                                               ; preds = %2, %22
  %25 = phi i64 [ %33, %22 ], [ 0, %2 ]
  %26 = getelementptr inbounds i32, i32* %20, i64 %25
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds i32, i32* %21, i64 %25
  %29 = load i32, i32* %28, align 4
  %30 = icmp ugt i32 %27, %29
  br i1 %30, label %53, label %31

31:                                               ; preds = %24
  %32 = icmp ult i32 %27, %29
  %33 = add nuw i64 %25, 1
  br i1 %32, label %53, label %22

34:                                               ; preds = %22, %2
  br i1 %17, label %37, label %43

35:                                               ; preds = %37
  %36 = icmp eq i64 %42, %9
  br i1 %36, label %53, label %37

37:                                               ; preds = %34, %35
  %38 = phi i64 [ %42, %35 ], [ %16, %34 ]
  %39 = getelementptr inbounds i32, i32* %20, i64 %38
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  %42 = add i64 %38, 1
  br i1 %41, label %35, label %53

43:                                               ; preds = %34
  %44 = icmp ult i64 %9, %16
  br i1 %44, label %47, label %53

45:                                               ; preds = %47
  %46 = icmp eq i64 %52, %16
  br i1 %46, label %53, label %47

47:                                               ; preds = %43, %45
  %48 = phi i64 [ %52, %45 ], [ %9, %43 ]
  %49 = getelementptr inbounds i32, i32* %21, i64 %48
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  %52 = add i64 %48, 1
  br i1 %51, label %45, label %53

53:                                               ; preds = %24, %31, %45, %47, %35, %37, %43
  %54 = phi i1 [ false, %43 ], [ false, %35 ], [ true, %37 ], [ false, %45 ], [ true, %47 ], [ true, %31 ], [ true, %24 ]
  ret i1 %54
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4baseltERKNS_7VersionES2_(%"class.base::Version"* nocapture readonly dereferenceable(24), %"class.base::Version"* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.base::Version"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 2
  %10 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %1, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast i32** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::Version"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 2
  %17 = icmp ult i64 %16, %9
  %18 = select i1 %17, i64 %16, i64 %9
  %19 = icmp eq i64 %18, 0
  %20 = inttoptr i64 %7 to i32*
  %21 = inttoptr i64 %14 to i32*
  br i1 %19, label %34, label %24

22:                                               ; preds = %31
  %23 = icmp ult i64 %33, %18
  br i1 %23, label %24, label %34

24:                                               ; preds = %2, %22
  %25 = phi i64 [ %33, %22 ], [ 0, %2 ]
  %26 = getelementptr inbounds i32, i32* %20, i64 %25
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds i32, i32* %21, i64 %25
  %29 = load i32, i32* %28, align 4
  %30 = icmp ugt i32 %27, %29
  br i1 %30, label %46, label %31

31:                                               ; preds = %24
  %32 = icmp ult i32 %27, %29
  %33 = add nuw i64 %25, 1
  br i1 %32, label %46, label %22

34:                                               ; preds = %22, %2
  %35 = xor i1 %17, true
  %36 = icmp ult i64 %9, %16
  %37 = and i1 %36, %35
  br i1 %37, label %40, label %46

38:                                               ; preds = %40
  %39 = icmp eq i64 %45, %16
  br i1 %39, label %46, label %40

40:                                               ; preds = %34, %38
  %41 = phi i64 [ %45, %38 ], [ %9, %34 ]
  %42 = getelementptr inbounds i32, i32* %21, i64 %41
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  %45 = add i64 %41, 1
  br i1 %44, label %38, label %46

46:                                               ; preds = %24, %31, %38, %40, %34
  %47 = phi i1 [ false, %34 ], [ true, %40 ], [ false, %38 ], [ false, %24 ], [ true, %31 ]
  ret i1 %47
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4baseleERKNS_7VersionES2_(%"class.base::Version"* nocapture readonly dereferenceable(24), %"class.base::Version"* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.base::Version"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 2
  %10 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %1, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast i32** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::Version"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 2
  %17 = icmp ult i64 %16, %9
  %18 = select i1 %17, i64 %16, i64 %9
  %19 = icmp eq i64 %18, 0
  %20 = inttoptr i64 %7 to i32*
  %21 = inttoptr i64 %14 to i32*
  br i1 %19, label %34, label %24

22:                                               ; preds = %31
  %23 = icmp ult i64 %33, %18
  br i1 %23, label %24, label %34

24:                                               ; preds = %2, %22
  %25 = phi i64 [ %33, %22 ], [ 0, %2 ]
  %26 = getelementptr inbounds i32, i32* %20, i64 %25
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds i32, i32* %21, i64 %25
  %29 = load i32, i32* %28, align 4
  %30 = icmp ugt i32 %27, %29
  br i1 %30, label %43, label %31

31:                                               ; preds = %24
  %32 = icmp ult i32 %27, %29
  %33 = add nuw i64 %25, 1
  br i1 %32, label %43, label %22

34:                                               ; preds = %22, %2
  br i1 %17, label %37, label %43

35:                                               ; preds = %37
  %36 = icmp eq i64 %42, %9
  br i1 %36, label %43, label %37

37:                                               ; preds = %34, %35
  %38 = phi i64 [ %42, %35 ], [ %16, %34 ]
  %39 = getelementptr inbounds i32, i32* %20, i64 %38
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  %42 = add i64 %38, 1
  br i1 %41, label %35, label %43

43:                                               ; preds = %24, %31, %35, %37, %34
  %44 = phi i1 [ true, %34 ], [ false, %37 ], [ true, %35 ], [ false, %24 ], [ true, %31 ]
  ret i1 %44
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4basegtERKNS_7VersionES2_(%"class.base::Version"* nocapture readonly dereferenceable(24), %"class.base::Version"* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.base::Version"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 2
  %10 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %1, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast i32** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::Version"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 2
  %17 = icmp ult i64 %16, %9
  %18 = select i1 %17, i64 %16, i64 %9
  %19 = icmp eq i64 %18, 0
  %20 = inttoptr i64 %7 to i32*
  %21 = inttoptr i64 %14 to i32*
  br i1 %19, label %34, label %24

22:                                               ; preds = %31
  %23 = icmp ult i64 %33, %18
  br i1 %23, label %24, label %34

24:                                               ; preds = %2, %22
  %25 = phi i64 [ %33, %22 ], [ 0, %2 ]
  %26 = getelementptr inbounds i32, i32* %20, i64 %25
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds i32, i32* %21, i64 %25
  %29 = load i32, i32* %28, align 4
  %30 = icmp ugt i32 %27, %29
  br i1 %30, label %43, label %31

31:                                               ; preds = %24
  %32 = icmp ult i32 %27, %29
  %33 = add nuw i64 %25, 1
  br i1 %32, label %43, label %22

34:                                               ; preds = %22, %2
  br i1 %17, label %37, label %43

35:                                               ; preds = %37
  %36 = icmp eq i64 %42, %9
  br i1 %36, label %43, label %37

37:                                               ; preds = %34, %35
  %38 = phi i64 [ %42, %35 ], [ %16, %34 ]
  %39 = getelementptr inbounds i32, i32* %20, i64 %38
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  %42 = add i64 %38, 1
  br i1 %41, label %35, label %43

43:                                               ; preds = %24, %31, %35, %37, %34
  %44 = phi i1 [ false, %34 ], [ true, %37 ], [ false, %35 ], [ true, %24 ], [ false, %31 ]
  ret i1 %44
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4basegeERKNS_7VersionES2_(%"class.base::Version"* nocapture readonly dereferenceable(24), %"class.base::Version"* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.base::Version"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 2
  %10 = getelementptr inbounds %"class.base::Version", %"class.base::Version"* %1, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast i32** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::Version"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 2
  %17 = icmp ult i64 %16, %9
  %18 = select i1 %17, i64 %16, i64 %9
  %19 = icmp eq i64 %18, 0
  %20 = inttoptr i64 %7 to i32*
  %21 = inttoptr i64 %14 to i32*
  br i1 %19, label %34, label %24

22:                                               ; preds = %31
  %23 = icmp ult i64 %33, %18
  br i1 %23, label %24, label %34

24:                                               ; preds = %2, %22
  %25 = phi i64 [ %33, %22 ], [ 0, %2 ]
  %26 = getelementptr inbounds i32, i32* %20, i64 %25
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds i32, i32* %21, i64 %25
  %29 = load i32, i32* %28, align 4
  %30 = icmp ugt i32 %27, %29
  br i1 %30, label %46, label %31

31:                                               ; preds = %24
  %32 = icmp ult i32 %27, %29
  %33 = add nuw i64 %25, 1
  br i1 %32, label %46, label %22

34:                                               ; preds = %22, %2
  %35 = xor i1 %17, true
  %36 = icmp ult i64 %9, %16
  %37 = and i1 %36, %35
  br i1 %37, label %40, label %46

38:                                               ; preds = %40
  %39 = icmp eq i64 %45, %16
  br i1 %39, label %46, label %40

40:                                               ; preds = %34, %38
  %41 = phi i64 [ %45, %38 ], [ %9, %34 ]
  %42 = getelementptr inbounds i32, i32* %21, i64 %41
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  %45 = add i64 %41, 1
  br i1 %44, label %38, label %46

46:                                               ; preds = %24, %31, %38, %40, %34
  %47 = phi i1 [ true, %34 ], [ false, %40 ], [ true, %38 ], [ true, %24 ], [ false, %31 ]
  ret i1 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4baselsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_7VersionE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.base::Version"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  call void @_ZNK4base7Version9GetStringEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.base::Version"* %1)
  %5 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = zext i8 %7 to i64
  %14 = select i1 %8, i8* %10, i8* %4
  %15 = select i1 %8, i64 %12, i64 %13
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* %14, i64 %15) #10
  %17 = load i8, i8* %6, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %2
  %20 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %2, %19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #10
  ret %"class.std::__1::basic_ostream"* %16
}

declare void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.6"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #3

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #3

declare zeroext i1 @_ZN4base12StringToUintENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPj(i8*, i64, i32*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #12
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #10
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #8

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #8

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
