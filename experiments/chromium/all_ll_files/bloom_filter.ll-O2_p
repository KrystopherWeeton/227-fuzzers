; ModuleID = '../../components/optimization_guide/core/bloom_filter.cc'
source_filename = "../../components/optimization_guide/core/bloom_filter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.optimization_guide::BloomFilter" = type { i32, i32, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

@.str = private unnamed_addr constant [35 x i8] c"filter_data.size() * 8 >= num_bits\00", align 1
@.str.1 = private unnamed_addr constant [57 x i8] c"../../components/optimization_guide/core/bloom_filter.cc\00", align 1

@_ZN18optimization_guide11BloomFilterC1Ejj = hidden unnamed_addr alias void (%"class.optimization_guide::BloomFilter"*, i32, i32), void (%"class.optimization_guide::BloomFilter"*, i32, i32)* @_ZN18optimization_guide11BloomFilterC2Ejj
@_ZN18optimization_guide11BloomFilterC1EjjNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE = hidden unnamed_addr alias void (%"class.optimization_guide::BloomFilter"*, i32, i32, %"class.std::__1::basic_string"*), void (%"class.optimization_guide::BloomFilter"*, i32, i32, %"class.std::__1::basic_string"*)* @_ZN18optimization_guide11BloomFilterC2EjjNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
@_ZN18optimization_guide11BloomFilterD1Ev = hidden unnamed_addr alias void (%"class.optimization_guide::BloomFilter"*), void (%"class.optimization_guide::BloomFilter"*)* @_ZN18optimization_guide11BloomFilterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18optimization_guide11BloomFilterC2Ejj(%"class.optimization_guide::BloomFilter"* nocapture, i32, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.optimization_guide::BloomFilter", %"class.optimization_guide::BloomFilter"* %0, i64 0, i32 0
  store i32 %1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.optimization_guide::BloomFilter", %"class.optimization_guide::BloomFilter"* %0, i64 0, i32 1
  store i32 %2, i32* %5, align 4
  %6 = getelementptr inbounds %"class.optimization_guide::BloomFilter", %"class.optimization_guide::BloomFilter"* %0, i64 0, i32 2
  %7 = add i32 %2, 7
  %8 = lshr i32 %7, 3
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #7
  %11 = icmp eq i32 %8, 0
  br i1 %11, label %20, label %12

12:                                               ; preds = %3
  %13 = tail call i8* @_Znwm(i64 %9) #8
  %14 = getelementptr inbounds %"class.optimization_guide::BloomFilter", %"class.optimization_guide::BloomFilter"* %0, i64 0, i32 2, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  store i8* %13, i8** %15, align 8
  %16 = getelementptr inbounds i8, i8* %13, i64 %9
  %17 = getelementptr inbounds %"class.optimization_guide::BloomFilter", %"class.optimization_guide::BloomFilter"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store i8* %16, i8** %17, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %13, i8 0, i64 %9, i1 false)
  %18 = bitcast i8** %14 to i64*
  %19 = ptrtoint i8* %16 to i64
  store i64 %19, i64* %18, align 8
  br label %20

20:                                               ; preds = %3, %12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18optimization_guide11BloomFilterC2EjjNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.optimization_guide::BloomFilter"*, i32, i32, %"class.std::__1::basic_string"* nocapture readonly) unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.optimization_guide::BloomFilter", %"class.optimization_guide::BloomFilter"* %0, i64 0, i32 0
  store i32 %1, i32* %8, align 8
  %9 = getelementptr inbounds %"class.optimization_guide::BloomFilter", %"class.optimization_guide::BloomFilter"* %0, i64 0, i32 1
  store i32 %2, i32* %9, align 4
  %10 = getelementptr inbounds %"class.optimization_guide::BloomFilter", %"class.optimization_guide::BloomFilter"* %0, i64 0, i32 2
  %11 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  br label %20

18:                                               ; preds = %4
  %19 = zext i8 %13 to i64
  br label %20

20:                                               ; preds = %15, %18
  %21 = phi i64 [ %17, %15 ], [ %19, %18 ]
  %22 = bitcast %"class.std::__1::vector"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #7
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %40, label %24

24:                                               ; preds = %20
  %25 = icmp slt i64 %21, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::vector"* %10 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %27) #9
  unreachable

28:                                               ; preds = %24
  %29 = tail call i8* @_Znwm(i64 %21) #8
  %30 = getelementptr inbounds %"class.optimization_guide::BloomFilter", %"class.optimization_guide::BloomFilter"* %0, i64 0, i32 2, i32 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 0
  store i8* %29, i8** %31, align 8
  %32 = getelementptr inbounds i8, i8* %29, i64 %21
  %33 = getelementptr inbounds %"class.optimization_guide::BloomFilter", %"class.optimization_guide::BloomFilter"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store i8* %32, i8** %33, align 8
  %34 = bitcast i8** %30 to i64*
  %35 = ptrtoint i8* %29 to i64
  %36 = sub i64 %21, %35
  %37 = getelementptr i8, i8* %29, i64 %36
  %38 = ptrtoint i8* %37 to i64
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %29, i8 0, i64 %38, i1 false) #7
  %39 = ptrtoint i8* %32 to i64
  store i64 %39, i64* %34, align 8
  br label %40

40:                                               ; preds = %20, %28
  %41 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #7
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %42, align 8
  %43 = load i8, i8* %12, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  br label %50

48:                                               ; preds = %40
  %49 = zext i8 %43 to i64
  br label %50

50:                                               ; preds = %45, %48
  %51 = phi i64 [ %47, %45 ], [ %49, %48 ]
  %52 = shl i64 %51, 3
  %53 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53)
  %54 = zext i32 %2 to i64
  %55 = icmp ult i64 %52, %54
  br i1 %55, label %57, label %56

56:                                               ; preds = %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53)
  store i8* null, i8** %42, align 8
  br label %66

57:                                               ; preds = %50
  %58 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %52) #7
  %59 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %2) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0), i8* %58, i8* %59) #7
  %60 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %61 = load i8*, i8** %60, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53)
  store i8* %61, i8** %42, align 8
  %62 = icmp eq i8* %61, null
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.1, i64 0, i64 0), i32 50, %"class.logging::CheckOpResult"* nonnull %6) #7
  %65 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #7
  br label %66

66:                                               ; preds = %56, %57, %63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #7
  %67 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  %69 = load i8, i8* %12, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %76

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %75 = load i64, i64* %74, align 8
  br label %79

76:                                               ; preds = %66
  %77 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %78 = zext i8 %69 to i64
  br label %79

79:                                               ; preds = %71, %76
  %80 = phi i8* [ %73, %71 ], [ %77, %76 ]
  %81 = phi i64 [ %75, %71 ], [ %78, %76 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %68, i8* align 1 %80, i64 %81, i1 false)
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18optimization_guide11BloomFilterD2Ev(%"class.optimization_guide::BloomFilter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.optimization_guide::BloomFilter", %"class.optimization_guide::BloomFilter"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i8* %3 to i64
  %7 = getelementptr inbounds %"class.optimization_guide::BloomFilter", %"class.optimization_guide::BloomFilter"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = bitcast i8** %7 to i64*
  store i64 %6, i64* %8, align 8
  tail call void @_ZdlPv(i8* nonnull %3) #8
  br label %9

9:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK18optimization_guide11BloomFilter8ContainsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.optimization_guide::BloomFilter"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca [2 x i64], align 16
  %4 = getelementptr inbounds %"class.optimization_guide::BloomFilter", %"class.optimization_guide::BloomFilter"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %47, label %7

7:                                                ; preds = %2
  %8 = bitcast [2 x i64]* %3 to i8*
  %9 = getelementptr inbounds [2 x i64], [2 x i64]* %3, i64 0, i64 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %15 = getelementptr inbounds %"class.optimization_guide::BloomFilter", %"class.optimization_guide::BloomFilter"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.optimization_guide::BloomFilter", %"class.optimization_guide::BloomFilter"* %0, i64 0, i32 2, i32 0, i32 0
  br label %21

17:                                               ; preds = %21
  %18 = load i32, i32* %4, align 8
  %19 = zext i32 %18 to i64
  %20 = icmp ult i64 %46, %19
  br i1 %20, label %21, label %47

21:                                               ; preds = %7, %17
  %22 = phi i64 [ 0, %7 ], [ %46, %17 ]
  %23 = trunc i64 %22 to i32
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 16, i1 false) #7
  %24 = load i8, i8* %11, align 1
  %25 = icmp slt i8 %24, 0
  %26 = load i8*, i8** %12, align 8
  %27 = load i64, i64* %13, align 8
  %28 = zext i8 %24 to i64
  %29 = select i1 %25, i8* %26, i8* %14
  %30 = select i1 %25, i64 %27, i64 %28
  %31 = trunc i64 %30 to i32
  call void @_Z19MurmurHash3_x64_128PKvijPv(i8* %29, i32 %31, i32 %23, i8* nonnull %8) #7
  %32 = load i64, i64* %9, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #7
  %33 = load i32, i32* %15, align 4
  %34 = zext i32 %33 to i64
  %35 = urem i64 %32, %34
  %36 = lshr i64 %35, 3
  %37 = trunc i64 %35 to i32
  %38 = and i32 %37, 7
  %39 = load i8*, i8** %16, align 8
  %40 = getelementptr inbounds i8, i8* %39, i64 %36
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = shl i32 1, %38
  %44 = and i32 %43, %42
  %45 = icmp eq i32 %44, 0
  %46 = add nuw nsw i64 %22, 1
  br i1 %45, label %47, label %17

47:                                               ; preds = %17, %21, %2
  %48 = phi i1 [ true, %2 ], [ false, %21 ], [ true, %17 ]
  ret i1 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18optimization_guide11BloomFilter3AddERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.optimization_guide::BloomFilter"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca [2 x i64], align 16
  %4 = getelementptr inbounds %"class.optimization_guide::BloomFilter", %"class.optimization_guide::BloomFilter"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %17, label %7

7:                                                ; preds = %2
  %8 = bitcast [2 x i64]* %3 to i8*
  %9 = getelementptr inbounds [2 x i64], [2 x i64]* %3, i64 0, i64 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %15 = getelementptr inbounds %"class.optimization_guide::BloomFilter", %"class.optimization_guide::BloomFilter"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.optimization_guide::BloomFilter", %"class.optimization_guide::BloomFilter"* %0, i64 0, i32 2, i32 0, i32 0
  br label %18

17:                                               ; preds = %18, %2
  ret void

18:                                               ; preds = %7, %18
  %19 = phi i64 [ 0, %7 ], [ %42, %18 ]
  %20 = trunc i64 %19 to i32
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 16, i1 false) #7
  %21 = load i8, i8* %11, align 1
  %22 = icmp slt i8 %21, 0
  %23 = load i8*, i8** %12, align 8
  %24 = load i64, i64* %13, align 8
  %25 = zext i8 %21 to i64
  %26 = select i1 %22, i8* %23, i8* %14
  %27 = select i1 %22, i64 %24, i64 %25
  %28 = trunc i64 %27 to i32
  call void @_Z19MurmurHash3_x64_128PKvijPv(i8* %26, i32 %28, i32 %20, i8* nonnull %8) #7
  %29 = load i64, i64* %9, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #7
  %30 = load i32, i32* %15, align 4
  %31 = zext i32 %30 to i64
  %32 = urem i64 %29, %31
  %33 = lshr i64 %32, 3
  %34 = trunc i64 %32 to i32
  %35 = and i32 %34, 7
  %36 = shl i32 1, %35
  %37 = load i8*, i8** %16, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %33
  %39 = load i8, i8* %38, align 1
  %40 = trunc i32 %36 to i8
  %41 = or i8 %39, %40
  store i8 %41, i8* %38, align 1
  %42 = add nuw nsw i64 %19, 1
  %43 = load i32, i32* %4, align 8
  %44 = zext i32 %43 to i64
  %45 = icmp ult i64 %42, %44
  br i1 %45, label %18, label %17
}

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_Z19MurmurHash3_x64_128PKvijPv(i8*, i32, i32, i8*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
