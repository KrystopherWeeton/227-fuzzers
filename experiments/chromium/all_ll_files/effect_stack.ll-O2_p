; ModuleID = '../../third_party/blink/renderer/core/animation/effect_stack.cc'
source_filename = "../../third_party/blink/renderer/core/animation/effect_stack.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.216", i32, [4 x i8], %"class.std::__1::unique_ptr.352", %"class.std::__1::unique_ptr.352", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.368", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.380", %"class.std::__1::unique_ptr.386", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.393", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.237", %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.267", %"class.std::__1::unique_ptr.267", %"class.std::__1::unique_ptr.274", %"class.std::__1::unique_ptr.281", %"class.std::__1::unique_ptr.288", %"class.std::__1::unique_ptr.288", %"class.std::__1::unique_ptr.295", %"class.std::__1::unique_ptr.302", %"class.std::__1::unique_ptr.309", %"class.std::__1::unique_ptr.332", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.252" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.252" = type { %"struct.std::__1::__atomic_base.253" }
%"struct.std::__1::__atomic_base.253" = type { %"struct.std::__1::__atomic_base.254" }
%"struct.std::__1::__atomic_base.254" = type { %"struct.std::__1::__cxx_atomic_impl.255" }
%"struct.std::__1::__cxx_atomic_impl.255" = type { %"struct.std::__1::__cxx_atomic_base_impl.256" }
%"struct.std::__1::__cxx_atomic_base_impl.256" = type { i64 }
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.blink::Worklist.263"* }
%"class.blink::Worklist.263" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.252" }
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.blink::Worklist.270"* }
%"class.blink::Worklist.270" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.252" }
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.blink::Worklist.277"* }
%"class.blink::Worklist.277" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.252" }
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.blink::Worklist.284"* }
%"class.blink::Worklist.284" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.252" }
%"class.std::__1::unique_ptr.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.blink::Worklist.291"* }
%"class.blink::Worklist.291" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.252" }
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.blink::Worklist.298"* }
%"class.blink::Worklist.298" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.252" }
%"class.std::__1::unique_ptr.302" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.blink::Worklist.305"* }
%"class.blink::Worklist.305" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.252" }
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.312", %"class.std::__1::__compressed_pair.319", %"class.std::__1::__compressed_pair.324", %"class.std::__1::__compressed_pair.326", [4 x i8] }>
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314", %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { i64 }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { float }
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.335", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.344" }
%"class.WTF::Vector.344" = type { %"class.WTF::VectorBuffer.345" }
%"class.WTF::VectorBuffer.345" = type { %"class.WTF::VectorBufferBase.346" }
%"class.WTF::VectorBufferBase.346" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.352" = type { %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.360" }
%"class.WTF::VectorBuffer.360" = type { %"class.WTF::VectorBufferBase.361" }
%"class.WTF::VectorBufferBase.361" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.368" = type { %"class.std::__1::__compressed_pair.369" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.370" }
%"struct.std::__1::__compressed_pair_elem.370" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.374" }
%"class.std::__1::unique_ptr.374" = type { %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.263"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.270"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.277"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.284"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.291"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.624" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.386" = type { %"class.std::__1::__compressed_pair.387" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.388" }
%"struct.std::__1::__compressed_pair_elem.388" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.392 }
%class.scoped_refptr.392 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.393" = type { %"struct.std::__1::__atomic_base.394" }
%"struct.std::__1::__atomic_base.394" = type { %"struct.std::__1::__cxx_atomic_impl.395" }
%"struct.std::__1::__cxx_atomic_impl.395" = type { %"struct.std::__1::__cxx_atomic_base_impl.396" }
%"struct.std::__1::__cxx_atomic_base_impl.396" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::EffectStack" = type { %"class.blink::HeapVector.812" }
%"class.blink::HeapVector.812" = type { %"class.WTF::Vector.815" }
%"class.WTF::Vector.815" = type { %"class.WTF::VectorBuffer.816" }
%"class.WTF::VectorBuffer.816" = type { %"class.WTF::VectorBufferBase.817" }
%"class.WTF::VectorBufferBase.817" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::SampledEffect"* }
%"class.blink::SampledEffect" = type { %"class.blink::WeakMember", %"class.blink::HeapVector", i32, i32 }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.0" }
%"class.blink::MemberBase.0" = type { %"class.blink::KeyframeEffect"* }
%"class.blink::KeyframeEffect" = type { %"class.blink::AnimationEffect", %"class.blink::Member.26", %"class.blink::Member.26", %"class.WTF::String", %"class.blink::Member.60", %"class.blink::Member", i32, %"class.WTF::Vector.105", i8, %"class.absl::optional.110" }
%"class.blink::AnimationEffect" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.9", %"struct.blink::Timing", %"class.blink::Member.12", %"struct.blink::Timing::CalculatedTiming", i8, %"class.absl::optional", %"class.absl::optional.21", %"class.blink::AnimationTimeDelta" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.9" = type { %"class.blink::MemberBase.10" }
%"class.blink::MemberBase.10" = type { %"class.blink::AnimationEffectOwner"* }
%"class.blink::AnimationEffectOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"struct.blink::Timing" = type <{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, %"class.absl::optional", i32, [4 x i8], %class.scoped_refptr, i16, [6 x i8] }>
%class.scoped_refptr = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.blink::Member.12" = type { %"class.blink::MemberBase.13" }
%"class.blink::MemberBase.13" = type { %"class.blink::AnimationEffect::EventDelegate"* }
%"class.blink::AnimationEffect::EventDelegate" = type { i32 (...)** }
%"struct.blink::Timing::CalculatedTiming" = type { i32, %"class.absl::optional.16", %"class.absl::optional.16", i8, i8, i8, %"class.absl::optional", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.16" = type { %"class.absl::optional_internal::optional_data.17" }
%"class.absl::optional_internal::optional_data.17" = type { %"class.absl::optional_internal::optional_data_base.18" }
%"class.absl::optional_internal::optional_data_base.18" = type { %"class.absl::optional_internal::optional_data_dtor_base.19" }
%"class.absl::optional_internal::optional_data_dtor_base.19" = type { i8, %union.anon.20 }
%union.anon.20 = type { double }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.21" = type { %"class.absl::optional_internal::optional_data.22" }
%"class.absl::optional_internal::optional_data.22" = type { %"class.absl::optional_internal::optional_data_base.23" }
%"class.absl::optional_internal::optional_data_base.23" = type { %"class.absl::optional_internal::optional_data_dtor_base.24" }
%"class.absl::optional_internal::optional_data_dtor_base.24" = type { i8, %union.anon.25 }
%union.anon.25 = type { i32 }
%"class.blink::AnimationTimeDelta" = type { double }
%"class.blink::Member.26" = type { %"class.blink::MemberBase.27" }
%"class.blink::MemberBase.27" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.43" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.28", %"class.blink::Member.28" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.28", %"class.blink::Member.30", %"class.blink::Member.28", %"class.blink::Member.28", %"class.blink::Member.32" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.115", %"class.blink::Member.117", %"class.blink::Member.30", %"class.blink::Member.119", %"class.blink::Member.119", %"class.blink::Member.141", %"class.blink::Member.143", %"class.blink::Member.145", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.150", %"class.blink::HeapVector.152" }
%"class.blink::Member.115" = type { %"class.blink::MemberBase.116" }
%"class.blink::MemberBase.116" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.117" = type { %"class.blink::MemberBase.118" }
%"class.blink::MemberBase.118" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.168", %"class.WTF::Vector.168", i8, i32, %"class.blink::Member.175", %"class.blink::Member.177", %"class.blink::Member.179", %"class.blink::Member.181", %"class.blink::Member.183", %"class.blink::Member.185", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.188", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.194", %"class.blink::Member.196", %"class.blink::Member.158", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.199", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.134", %"class.blink::Member.26", %"class.blink::Member.409", %"class.blink::Member.26", %"class.blink::Member.26", %"class.blink::Member.26", %"class.blink::UserActionElementSet", %"class.blink::Member.418", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.425", i16, i8, %"class.blink::Member.432", %"class.blink::Member.434", %"class.blink::Member.436", %"class.blink::Member.438", %"class.blink::TextLinkColors", %"class.blink::Member.440", i8, [7 x i8], %"class.blink::HeapHashMap.442", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.26", %"class.WTF::Vector.449", %"class.blink::Member.454", %"class.blink::Member.456", i8, %"class.blink::Member.26", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.458", %"class.blink::HeapVector.460", %"class.std::__1::unique_ptr.468", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.474", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.487", %"class.WTF::Vector.489", i8, i8, %"class.std::__1::unique_ptr.494", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.134", %"class.blink::HeapVector.500", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.508", i8, i32, %"class.blink::Member.510", %"class.blink::Member.512", %"class.blink::Member.514", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.516", %"class.WTF::HashMap.518", %"class.blink::Member.523", %"class.blink::Member.525", %"class.blink::Member.527", %"class.blink::Member.529", %"class.blink::Member.117", %"class.blink::Member.117", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.531", i8, i32, %"class.blink::Member.538", %"class.blink::Member.540", i32, %"class.blink::Member.542", %"class.blink::Member.544", %"class.blink::Member.546", %"class.std::__1::unique_ptr.548", i64, %"class.std::__1::unique_ptr.554", i32, i32, %"class.blink::Member.560", %"class.blink::Member.562", %"class.blink::Member.564", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.566", %"class.WTF::Vector.568", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.573", %"class.blink::Member.580", %"class.std::__1::unique_ptr.582", %"class.blink::Member.588", i8, i8, %"class.WTF::String", %"class.blink::Member.590", i8, [7 x i8], %"class.blink::HeapHashMap.592", %"class.blink::HeapObserverSet", %"class.blink::Member.606", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.608", i32, i8, i8, %"class.blink::WeakMember.610", %"class.blink::Member.611" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.161" }
%"class.blink::HeapHashMap.161" = type { %"class.WTF::HashMap.164" }
%"class.WTF::HashMap.164" = type { %"class.WTF::HashTable.165" }
%"class.WTF::HashTable.165" = type <{ %"struct.WTF::KeyValuePair.167"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.167" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.168" = type { %"class.WTF::VectorBuffer.169" }
%"class.WTF::VectorBuffer.169" = type { %"class.WTF::VectorBufferBase.170" }
%"class.WTF::VectorBufferBase.170" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.171 }
%class.scoped_refptr.171 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.172", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.172" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.175" = type { %"class.blink::MemberBase.176" }
%"class.blink::MemberBase.176" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.177" = type { %"class.blink::MemberBase.178" }
%"class.blink::MemberBase.178" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.629", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.670", i32, i8, [3 x i8], %"class.blink::HeapVector.672", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.680", %"class.blink::Member.682", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.691", %"class.blink::Member.697", %"class.blink::Member.699", i8, [7 x i8] }>
%"class.blink::Supplementable.629" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.630" }
%"class.blink::HeapHashMap.630" = type { %"class.WTF::HashMap.633" }
%"class.WTF::HashMap.633" = type { %"class.WTF::HashTable.634" }
%"class.WTF::HashTable.634" = type <{ %"struct.WTF::KeyValuePair.636"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.636" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.645" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.637" }
%"class.blink::HeapObserverSet.637" = type { i32, [4 x i8], %"class.blink::HeapHashSet.638" }
%"class.blink::HeapHashSet.638" = type { %"class.WTF::HashSet.641" }
%"class.WTF::HashSet.641" = type { %"class.WTF::HashTable.642" }
%"class.WTF::HashTable.642" = type <{ %"class.blink::WeakMember.644"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.644" = type opaque
%"class.blink::Supplementable.645" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.646" }
%"class.blink::HeapHashMap.646" = type { %"class.WTF::HashMap.649" }
%"class.WTF::HashMap.649" = type { %"class.WTF::HashTable.650" }
%"class.WTF::HashTable.650" = type <{ %"struct.WTF::KeyValuePair.652"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.652" = type { i8*, %"class.blink::Member.855" }
%"class.blink::Member.855" = type { %"class.blink::MemberBase.856" }
%"class.blink::MemberBase.856" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.857" }
%"class.blink::Member.857" = type { %"class.blink::MemberBase.858" }
%"class.blink::MemberBase.858" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.653, %"class.std::__1::unique_ptr.654", %"class.std::__1::unique_ptr.654", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.660", %"class.blink::Member.177", i32, [4 x i8], %"class.WTF::HashSet.666", i32, i32 }
%class.scoped_refptr.653 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.654" = type { %"class.std::__1::__compressed_pair.655" }
%"class.std::__1::__compressed_pair.655" = type { %"struct.std::__1::__compressed_pair_elem.656" }
%"struct.std::__1::__compressed_pair_elem.656" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.666" = type { %"class.WTF::HashTable.667" }
%"class.WTF::HashTable.667" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.670" = type { %"class.blink::MemberBase.671" }
%"class.blink::MemberBase.671" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.672" = type { %"class.WTF::Vector.675" }
%"class.WTF::Vector.675" = type { %"class.WTF::VectorBuffer.676" }
%"class.WTF::VectorBuffer.676" = type { %"class.WTF::VectorBufferBase.677" }
%"class.WTF::VectorBufferBase.677" = type { %"class.blink::Member.678"*, i32, i32 }
%"class.blink::Member.678" = type opaque
%"class.blink::Member.680" = type { %"class.blink::MemberBase.681" }
%"class.blink::MemberBase.681" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.682" = type { %"class.blink::MemberBase.683" }
%"class.blink::MemberBase.683" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.684", i32, i32 }
%"class.blink::HeapHashMap.684" = type { %"class.WTF::HashMap.687" }
%"class.WTF::HashMap.687" = type { %"class.WTF::HashTable.688" }
%"class.WTF::HashTable.688" = type <{ %"struct.WTF::KeyValuePair.690"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.690" = type opaque
%"class.std::__1::unique_ptr.691" = type { %"class.std::__1::__compressed_pair.692" }
%"class.std::__1::__compressed_pair.692" = type { %"struct.std::__1::__compressed_pair_elem.693" }
%"struct.std::__1::__compressed_pair_elem.693" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.697" = type { %"class.blink::MemberBase.698" }
%"class.blink::MemberBase.698" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.699" = type { %"class.blink::MemberBase.700" }
%"class.blink::MemberBase.700" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.179" = type { %"class.blink::MemberBase.180" }
%"class.blink::MemberBase.180" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.181" = type { %"class.blink::MemberBase.182" }
%"class.blink::MemberBase.182" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.183" = type { %"class.blink::MemberBase.184" }
%"class.blink::MemberBase.184" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.185" = type { %"class.blink::MemberBase.186" }
%"class.blink::MemberBase.186" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.194" = type { %"class.blink::MemberBase.195" }
%"class.blink::MemberBase.195" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.196" = type { %"class.blink::MemberBase.197" }
%"class.blink::MemberBase.197" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.158" = type { %"class.blink::MemberBase.159" }
%"class.blink::MemberBase.159" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.198 }
%class.scoped_refptr.198 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.199" = type { %"class.WTF::VectorBuffer.200" }
%"class.WTF::VectorBuffer.200" = type { %"class.WTF::VectorBufferBase.201" }
%"class.WTF::VectorBufferBase.201" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.202 }
%class.scoped_refptr.202 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.203", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.203" = type { %"class.base::RefCounted.204" }
%"class.base::RefCounted.204" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.207" }
%"class.blink::HeapHashMap.207" = type { %"class.WTF::HashMap.210" }
%"class.WTF::HashMap.210" = type { %"class.WTF::HashTable.211" }
%"class.WTF::HashTable.211" = type <{ %"struct.WTF::KeyValuePair.213"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.213" = type { %"class.blink::WeakMember.214", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.214" = type { %"class.blink::MemberBase.215" }
%"class.blink::MemberBase.215" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.409" = type { %"class.blink::MemberBase.410" }
%"class.blink::MemberBase.410" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.411" }
%"class.blink::HeapHashMap.411" = type { %"class.WTF::HashMap.414" }
%"class.WTF::HashMap.414" = type { %"class.WTF::HashTable.415" }
%"class.WTF::HashTable.415" = type <{ %"struct.WTF::KeyValuePair.417"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.417" = type opaque
%"class.blink::Member.418" = type { %"class.blink::MemberBase.419" }
%"class.blink::MemberBase.419" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.422" }
%"class.WTF::HashTable.422" = type <{ %"class.blink::WeakMember.424"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.424" = type opaque
%"class.blink::HeapHashSet.425" = type { %"class.WTF::HashSet.428" }
%"class.WTF::HashSet.428" = type { %"class.WTF::HashTable.429" }
%"class.WTF::HashTable.429" = type <{ %"class.blink::WeakMember.431"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.431" = type opaque
%"class.blink::Member.432" = type { %"class.blink::MemberBase.433" }
%"class.blink::MemberBase.433" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.434" = type { %"class.blink::MemberBase.435" }
%"class.blink::MemberBase.435" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.436" = type { %"class.blink::MemberBase.437" }
%"class.blink::MemberBase.437" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.440" = type { %"class.blink::MemberBase.441" }
%"class.blink::MemberBase.441" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.442" = type { %"class.WTF::HashMap.445" }
%"class.WTF::HashMap.445" = type { %"class.WTF::HashTable.446" }
%"class.WTF::HashTable.446" = type <{ %"struct.WTF::KeyValuePair.448"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.448" = type opaque
%"class.WTF::Vector.449" = type { %"class.WTF::VectorBuffer.450" }
%"class.WTF::VectorBuffer.450" = type { %"class.WTF::VectorBufferBase.451" }
%"class.WTF::VectorBufferBase.451" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.454" = type { %"class.blink::MemberBase.455" }
%"class.blink::MemberBase.455" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.456" = type { %"class.blink::MemberBase.457" }
%"class.blink::MemberBase.457" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.458" = type { %"class.blink::MemberBase.459" }
%"class.blink::MemberBase.459" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.460" = type { %"class.WTF::Vector.463" }
%"class.WTF::Vector.463" = type { %"class.WTF::VectorBuffer.464" }
%"class.WTF::VectorBuffer.464" = type { %"class.WTF::VectorBufferBase.465" }
%"class.WTF::VectorBufferBase.465" = type { %"class.blink::Member.466"*, i32, i32 }
%"class.blink::Member.466" = type opaque
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.474" = type { %"class.WTF::HashSet.477" }
%"class.WTF::HashSet.477" = type { %"class.WTF::HashTable.478" }
%"class.WTF::HashTable.478" = type <{ %"class.blink::WeakMember.480"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.480" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.481", i32, [4 x i8] }>
%"class.WTF::Vector.481" = type { %"class.WTF::VectorBuffer.482" }
%"class.WTF::VectorBuffer.482" = type { %"class.WTF::VectorBufferBase.483" }
%"class.WTF::VectorBufferBase.483" = type { %"struct.std::__1::pair.484"*, i32, i32 }
%"struct.std::__1::pair.484" = type opaque
%"class.blink::Member.487" = type { %"class.blink::MemberBase.488" }
%"class.blink::MemberBase.488" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.489" = type { %"class.WTF::VectorBuffer.490" }
%"class.WTF::VectorBuffer.490" = type { %"class.WTF::VectorBufferBase.491" }
%"class.WTF::VectorBufferBase.491" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.494" = type { %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.134" = type { %"class.WTF::Vector.137" }
%"class.WTF::Vector.137" = type { %"class.WTF::VectorBuffer.138" }
%"class.WTF::VectorBuffer.138" = type { %"class.WTF::VectorBufferBase.139" }
%"class.WTF::VectorBufferBase.139" = type { %"class.blink::Member.26"*, i32, i32 }
%"class.blink::HeapVector.500" = type { %"class.WTF::Vector.503" }
%"class.WTF::Vector.503" = type { %"class.WTF::VectorBuffer.504" }
%"class.WTF::VectorBuffer.504" = type { %"class.WTF::VectorBufferBase.505" }
%"class.WTF::VectorBufferBase.505" = type { %"class.blink::Member.506"*, i32, i32 }
%"class.blink::Member.506" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.117" }
%"class.blink::Member.508" = type { %"class.blink::MemberBase.509" }
%"class.blink::MemberBase.509" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.510" = type { %"class.blink::MemberBase.511" }
%"class.blink::MemberBase.511" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.514" = type { %"class.blink::MemberBase.515" }
%"class.blink::MemberBase.515" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.516" = type { %"class.blink::MemberBase.517" }
%"class.blink::MemberBase.517" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.518" = type { %"class.WTF::HashTable.519" }
%"class.WTF::HashTable.519" = type <{ %"struct.WTF::KeyValuePair.522"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.522" = type opaque
%"class.blink::Member.523" = type { %"class.blink::MemberBase.524" }
%"class.blink::MemberBase.524" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.525" = type { %"class.blink::MemberBase.526" }
%"class.blink::MemberBase.526" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.527" = type { %"class.blink::MemberBase.528" }
%"class.blink::MemberBase.528" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.529" = type { %"class.blink::MemberBase.530" }
%"class.blink::MemberBase.530" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.408", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.399, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.399 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.400" }>
%"class.base::RefCountedThreadSafe.400" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.401 }
%class.scoped_refptr.401 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.402", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.402" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.403" }
%"struct.std::__1::atomic.403" = type { %"struct.std::__1::__atomic_base.404" }
%"struct.std::__1::__atomic_base.404" = type { %"struct.std::__1::__atomic_base.405" }
%"struct.std::__1::__atomic_base.405" = type { %"struct.std::__1::__cxx_atomic_impl.406" }
%"struct.std::__1::__cxx_atomic_impl.406" = type { %"struct.std::__1::__cxx_atomic_base_impl.407" }
%"struct.std::__1::__cxx_atomic_base_impl.407" = type { i8 }
%"class.blink::WeakMember.408" = type { %"class.blink::MemberBase.118" }
%"class.blink::HeapHashSet.531" = type { %"class.WTF::HashSet.534" }
%"class.WTF::HashSet.534" = type { %"class.WTF::HashTable.535" }
%"class.WTF::HashTable.535" = type <{ %"class.blink::Member.537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.537" = type opaque
%"class.blink::Member.538" = type { %"class.blink::MemberBase.539" }
%"class.blink::MemberBase.539" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.540" = type { %"class.blink::MemberBase.541" }
%"class.blink::MemberBase.541" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.542" = type { %"class.blink::MemberBase.543" }
%"class.blink::MemberBase.543" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.544" = type { %"class.blink::MemberBase.545" }
%"class.blink::MemberBase.545" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.546" = type { %"class.blink::MemberBase.547" }
%"class.blink::MemberBase.547" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.554" = type { %"class.std::__1::__compressed_pair.555" }
%"class.std::__1::__compressed_pair.555" = type { %"struct.std::__1::__compressed_pair_elem.556" }
%"struct.std::__1::__compressed_pair_elem.556" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.560" = type { %"class.blink::MemberBase.561" }
%"class.blink::MemberBase.561" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.562" = type { %"class.blink::MemberBase.563" }
%"class.blink::MemberBase.563" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.564" = type { %"class.blink::MemberBase.565" }
%"class.blink::MemberBase.565" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.566" = type { %"class.blink::MemberBase.567" }
%"class.blink::MemberBase.567" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.568" = type { %"class.WTF::VectorBuffer.569" }
%"class.WTF::VectorBuffer.569" = type { %"class.WTF::VectorBufferBase.570" }
%"class.WTF::VectorBufferBase.570" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.573" = type { %"class.WTF::HashMap.576" }
%"class.WTF::HashMap.576" = type { %"class.WTF::HashTable.577" }
%"class.WTF::HashTable.577" = type <{ %"struct.WTF::KeyValuePair.579"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.579" = type opaque
%"class.blink::Member.580" = type { %"class.blink::MemberBase.581" }
%"class.blink::MemberBase.581" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.588" = type { %"class.blink::MemberBase.589" }
%"class.blink::MemberBase.589" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.590" = type { %"class.blink::MemberBase.591" }
%"class.blink::MemberBase.591" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.592" = type { %"class.WTF::HashMap.595" }
%"class.WTF::HashMap.595" = type { %"class.WTF::HashTable.596" }
%"class.WTF::HashTable.596" = type <{ %"struct.WTF::KeyValuePair.598"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.598" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.599" }
%"class.blink::HeapHashSet.599" = type { %"class.WTF::HashSet.602" }
%"class.WTF::HashSet.602" = type { %"class.WTF::HashTable.603" }
%"class.WTF::HashTable.603" = type <{ %"class.blink::WeakMember.605"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.605" = type opaque
%"class.blink::Member.606" = type { %"class.blink::MemberBase.607" }
%"class.blink::MemberBase.607" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.608" = type { %"class.blink::MemberBase.609" }
%"class.blink::MemberBase.609" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.117", %"class.blink::HeapHashSet.615", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.622", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.615" = type { %"class.WTF::HashSet.618" }
%"class.WTF::HashSet.618" = type { %"class.WTF::HashTable.619" }
%"class.WTF::HashTable.619" = type <{ %"class.blink::Member.621"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.621" = type opaque
%"class.blink::HeapTaskRunnerTimer.622" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.623", { i64, i64 } }
%"class.blink::WeakMember.623" = type { %"class.blink::MemberBase.609" }
%"class.blink::WeakMember.610" = type { %"class.blink::MemberBase.29" }
%"class.blink::MemberBase.29" = type { %"class.blink::Node"* }
%"class.blink::Member.611" = type { %"class.blink::MemberBase.612" }
%"class.blink::MemberBase.612" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.119" = type { %"class.blink::MemberBase.120" }
%"class.blink::MemberBase.120" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.123" }
%"class.blink::HeapHashMap.123" = type { %"class.WTF::HashMap.126" }
%"class.WTF::HashMap.126" = type { %"class.WTF::HashTable.127" }
%"class.WTF::HashTable.127" = type <{ %"struct.WTF::KeyValuePair.129"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.129" = type { %"class.WTF::AtomicString", %"class.blink::Member.130" }
%"class.blink::Member.130" = type { %"class.blink::MemberBase.131" }
%"class.blink::MemberBase.131" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.26", i32, %"class.blink::HeapVector.134" }
%"class.blink::Member.141" = type { %"class.blink::MemberBase.142" }
%"class.blink::MemberBase.142" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.143" = type { %"class.blink::MemberBase.144" }
%"class.blink::MemberBase.144" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.145" = type { %"class.blink::MemberBase.146" }
%"class.blink::MemberBase.146" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.147" }
%"class.blink::Member.147" = type { %"class.blink::MemberBase.148" }
%"class.blink::MemberBase.148" = type { %"class.blink::HeapHashMap.149"* }
%"class.blink::HeapHashMap.149" = type opaque
%"class.blink::Member.150" = type { %"class.blink::MemberBase.151" }
%"class.blink::MemberBase.151" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.152" = type { %"class.WTF::Vector.155" }
%"class.WTF::Vector.155" = type { %"class.WTF::VectorBuffer.156" }
%"class.WTF::VectorBuffer.156" = type { %"class.WTF::VectorBufferBase.157" }
%"class.WTF::VectorBufferBase.157" = type { %"class.blink::Member.158"*, i32, i32 }
%"class.blink::Member.32" = type { %"class.blink::MemberBase.33" }
%"class.blink::MemberBase.33" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.28" = type { %"class.blink::MemberBase.29" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.36 }
%class.scoped_refptr.36 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.43" = type { %"class.blink::MemberBase.44" }
%"class.blink::MemberBase.44" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.47", %"class.blink::Member.49", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.47" = type { %"class.WTF::SingleThreadedBitField.48" }
%"class.WTF::SingleThreadedBitField.48" = type { i32 }
%"class.blink::Member.49" = type { %"class.blink::MemberBase.50" }
%"class.blink::MemberBase.50" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.53 }
%class.scoped_refptr.53 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.54", %"class.WTF::AtomicString", %"class.WTF::Vector.56" }
%"class.WTF::RefCounted.54" = type { %"class.base::RefCounted.55" }
%"class.base::RefCounted.55" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.56" = type { %"class.WTF::VectorBuffer.57" }
%"class.WTF::VectorBuffer.57" = type { %"class.WTF::VectorBufferBase.58", [32 x i8] }
%"class.WTF::VectorBufferBase.58" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr.37 }
%class.scoped_refptr.37 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.38" }
%"struct.std::__1::atomic.38" = type { %"struct.std::__1::__atomic_base.39" }
%"struct.std::__1::__atomic_base.39" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__cxx_atomic_impl.41" }
%"struct.std::__1::__cxx_atomic_impl.41" = type { %"struct.std::__1::__cxx_atomic_base_impl.42" }
%"struct.std::__1::__cxx_atomic_base_impl.42" = type { i32 }
%"class.blink::Member.60" = type { %"class.blink::MemberBase.61" }
%"class.blink::MemberBase.61" = type { %"class.blink::KeyframeEffectModelBase"* }
%"class.blink::KeyframeEffectModelBase" = type <{ %"class.blink::EffectModel", %"class.blink::HeapVector.64", %"class.blink::Member.72", %"class.blink::Member.93", i32, [4 x i8], double, %"class.blink::AnimationTimeDelta", i32, [4 x i8], %class.scoped_refptr, i8, i8, i8, [5 x i8] }>
%"class.blink::EffectModel" = type { i32 (...)** }
%"class.blink::HeapVector.64" = type { %"class.WTF::Vector.67" }
%"class.WTF::Vector.67" = type { %"class.WTF::VectorBuffer.68" }
%"class.WTF::VectorBuffer.68" = type { %"class.WTF::VectorBufferBase.69" }
%"class.WTF::VectorBufferBase.69" = type { %"class.blink::Member.70"*, i32, i32 }
%"class.blink::Member.70" = type { %"class.blink::MemberBase.862" }
%"class.blink::MemberBase.862" = type { %"class.blink::Keyframe"* }
%"class.blink::Keyframe" = type { i32 (...)**, %"class.absl::optional.16", %"class.absl::optional.865", %class.scoped_refptr }
%"class.absl::optional.865" = type { %"class.absl::optional_internal::optional_data.866" }
%"class.absl::optional_internal::optional_data.866" = type { %"class.absl::optional_internal::optional_data_base.867" }
%"class.absl::optional_internal::optional_data_base.867" = type { %"class.absl::optional_internal::optional_data_dtor_base.868" }
%"class.absl::optional_internal::optional_data_dtor_base.868" = type { i8, %union.anon.869 }
%union.anon.869 = type { i32 }
%"class.blink::Member.72" = type { %"class.blink::MemberBase.73" }
%"class.blink::MemberBase.73" = type { %"class.blink::HeapHashMap"* }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::PropertyHandle", %"class.blink::Member.78" }
%"class.blink::PropertyHandle" = type { i32, %union.anon.77, %"class.WTF::AtomicString" }
%union.anon.77 = type { %"class.blink::CSSProperty"* }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.blink::Member.78" = type { %"class.blink::MemberBase.79" }
%"class.blink::MemberBase.79" = type { %"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup"* }
%"class.blink::KeyframeEffectModelBase::PropertySpecificKeyframeGroup" = type { %"class.blink::HeapVector.82" }
%"class.blink::HeapVector.82" = type { %"class.WTF::Vector.85" }
%"class.WTF::Vector.85" = type { %"class.WTF::VectorBuffer.86" }
%"class.WTF::VectorBuffer.86" = type { %"class.WTF::VectorBufferBase.87" }
%"class.WTF::VectorBufferBase.87" = type { %"class.blink::Member.88"*, i32, i32 }
%"class.blink::Member.88" = type { %"class.blink::MemberBase.89" }
%"class.blink::MemberBase.89" = type { %"class.blink::Keyframe::PropertySpecificKeyframe"* }
%"class.blink::Keyframe::PropertySpecificKeyframe" = type <{ i32 (...)**, double, %class.scoped_refptr, i32, [4 x i8] }>
%"class.blink::Member.93" = type { %"class.blink::MemberBase.94" }
%"class.blink::MemberBase.94" = type { %"class.blink::InterpolationEffect"* }
%"class.blink::InterpolationEffect" = type { i8, %"class.blink::HeapVector.97" }
%"class.blink::HeapVector.97" = type { %"class.WTF::Vector.100" }
%"class.WTF::Vector.100" = type { %"class.WTF::VectorBuffer.101" }
%"class.WTF::VectorBuffer.101" = type { %"class.WTF::VectorBufferBase.102" }
%"class.WTF::VectorBufferBase.102" = type { %"class.blink::Member.103"*, i32, i32 }
%"class.blink::Member.103" = type { %"class.blink::MemberBase.859" }
%"class.blink::MemberBase.859" = type { %"class.blink::InterpolationEffect::InterpolationRecord"* }
%"class.blink::InterpolationEffect::InterpolationRecord" = type { %"class.blink::Member.3", %class.scoped_refptr, double, double, double, double }
%"class.blink::Member.3" = type { %"class.blink::MemberBase.4" }
%"class.blink::MemberBase.4" = type { %"class.blink::Interpolation"* }
%"class.blink::Interpolation" = type { i32 (...)** }
%"class.WTF::Vector.105" = type { %"class.WTF::VectorBuffer.106" }
%"class.WTF::VectorBuffer.106" = type { %"class.WTF::VectorBufferBase.107" }
%"class.WTF::VectorBufferBase.107" = type { i32*, i32, i32 }
%"class.absl::optional.110" = type { %"class.absl::optional_internal::optional_data.111" }
%"class.absl::optional_internal::optional_data.111" = type { %"class.absl::optional_internal::optional_data_base.112" }
%"class.absl::optional_internal::optional_data_base.112" = type { %"class.absl::optional_internal::optional_data_dtor_base.113" }
%"class.absl::optional_internal::optional_data_dtor_base.113" = type { i8, %union.anon.114 }
%union.anon.114 = type { %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member.3"*, i32, i32 }
%"class.blink::Animation" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::CompositorAnimationDelegate", %"class.blink::CompositorAnimationClient", %"class.blink::AnimationEffectOwner", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.WTF::String", i32, [4 x i8], double, %"class.absl::optional.16", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.724", %"class.absl::optional", i8, [3 x i8], i32, %"class.blink::Member.729", %"class.blink::Member.729", %"class.blink::Member.731", %"class.blink::Member.117", %"class.blink::Member.733", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.blink::Member.793", %"class.blink::Member.793", %"class.blink::Member.793", %"class.std::__1::unique_ptr.795", i8, [3 x i8], i32, %"class.blink::Member.801", i8, [7 x i8], %"class.base::TimeTicks", i8, i8, i8, [5 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.715" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.703" }
%"class.blink::HeapVector.703" = type { %"class.WTF::Vector.706" }
%"class.WTF::Vector.706" = type { %"class.WTF::VectorBuffer.707" }
%"class.WTF::VectorBuffer.707" = type { %"class.WTF::VectorBufferBase.708", [32 x i8] }
%"class.WTF::VectorBufferBase.708" = type { %"struct.std::__1::pair.709"*, i32, i32 }
%"struct.std::__1::pair.709" = type { %"class.WTF::AtomicString", %"class.blink::Member.710" }
%"class.blink::Member.710" = type { %"class.blink::MemberBase.711" }
%"class.blink::MemberBase.711" = type { %"class.blink::HeapVector.712"* }
%"class.blink::HeapVector.712" = type opaque
%"class.std::__1::unique_ptr.715" = type { %"class.std::__1::__compressed_pair.716" }
%"class.std::__1::__compressed_pair.716" = type { %"struct.std::__1::__compressed_pair_elem.717" }
%"struct.std::__1::__compressed_pair_elem.717" = type { %"class.WTF::Vector.718"* }
%"class.WTF::Vector.718" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.722" }
%"class.blink::WeakMember.722" = type { %"class.blink::MemberBase.723" }
%"class.blink::MemberBase.723" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::CompositorAnimationDelegate" = type { i32 (...)** }
%"class.blink::CompositorAnimationClient" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.absl::optional.724" = type { %"class.absl::optional_internal::optional_data.725" }
%"class.absl::optional_internal::optional_data.725" = type { %"class.absl::optional_internal::optional_data_base.726" }
%"class.absl::optional_internal::optional_data_base.726" = type { %"class.absl::optional_internal::optional_data_dtor_base.727" }
%"class.absl::optional_internal::optional_data_dtor_base.727" = type { i8, %union.anon.728 }
%union.anon.728 = type { i32 }
%"class.blink::Member.729" = type { %"class.blink::MemberBase.730" }
%"class.blink::MemberBase.730" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.blink::Member.731" = type { %"class.blink::MemberBase.732" }
%"class.blink::MemberBase.732" = type { %"class.blink::AnimationEffect"* }
%"class.blink::Member.733" = type { %"class.blink::MemberBase.734" }
%"class.blink::MemberBase.734" = type { %"class.blink::AnimationTimeline"* }
%"class.blink::AnimationTimeline" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.117", i32, [4 x i8], %"class.blink::HeapHashSet.735", %"class.blink::HeapHashSet.743", %"class.std::__1::unique_ptr.750", %"class.absl::optional.783" }
%"class.blink::HeapHashSet.735" = type { %"class.WTF::HashSet.738" }
%"class.WTF::HashSet.738" = type { %"class.WTF::HashTable.739" }
%"class.WTF::HashTable.739" = type <{ %"class.blink::Member.741"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.741" = type { %"class.blink::MemberBase.742" }
%"class.blink::MemberBase.742" = type { %"class.blink::Animation"* }
%"class.blink::HeapHashSet.743" = type { %"class.WTF::HashSet.746" }
%"class.WTF::HashSet.746" = type { %"class.WTF::HashTable.747" }
%"class.WTF::HashTable.747" = type <{ %"class.blink::WeakMember.749"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.749" = type opaque
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::CompositorAnimationTimeline"* }
%"class.blink::CompositorAnimationTimeline" = type { %class.scoped_refptr.753 }
%class.scoped_refptr.753 = type { %"class.cc::AnimationTimeline"* }
%"class.cc::AnimationTimeline" = type <{ i32 (...)**, %"class.base::RefCounted.754", [4 x i8], %"class.std::__1::unordered_map", i32, [4 x i8], %"class.cc::AnimationHost"*, i8, i8, [6 x i8] }>
%"class.base::RefCounted.754" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.755" }
%"class.std::__1::__hash_table.755" = type <{ %"class.std::__1::unique_ptr.756", %"class.std::__1::__compressed_pair.766", %"class.std::__1::__compressed_pair.771", %"class.std::__1::__compressed_pair.775", [4 x i8] }>
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758", %"struct.std::__1::__compressed_pair_elem.760" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"struct.std::__1::__hash_node_base.759"** }
%"struct.std::__1::__hash_node_base.759" = type { %"struct.std::__1::__hash_node_base.759"* }
%"struct.std::__1::__compressed_pair_elem.760" = type { %"class.std::__1::__bucket_list_deallocator.761" }
%"class.std::__1::__bucket_list_deallocator.761" = type { %"class.std::__1::__compressed_pair.762" }
%"class.std::__1::__compressed_pair.762" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"struct.std::__1::__hash_node_base.759" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"class.std::__1::__compressed_pair.775" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"class.cc::AnimationHost" = type opaque
%"class.absl::optional.783" = type { %"class.absl::optional_internal::optional_data.784" }
%"class.absl::optional_internal::optional_data.784" = type { %"class.absl::optional_internal::optional_data_base.785" }
%"class.absl::optional_internal::optional_data_base.785" = type { %"class.absl::optional_internal::optional_data_dtor_base.786" }
%"class.absl::optional_internal::optional_data_dtor_base.786" = type { i8, %union.anon.787 }
%union.anon.787 = type { %"struct.blink::AnimationTimeline::PhaseAndTime" }
%"struct.blink::AnimationTimeline::PhaseAndTime" = type { i32, %"class.absl::optional.788" }
%"class.absl::optional.788" = type { %"class.absl::optional_internal::optional_data.789" }
%"class.absl::optional_internal::optional_data.789" = type { %"class.absl::optional_internal::optional_data_base.790" }
%"class.absl::optional_internal::optional_data_base.790" = type { %"class.absl::optional_internal::optional_data_dtor_base.791" }
%"class.absl::optional_internal::optional_data_dtor_base.791" = type { i8, %union.anon.792 }
%union.anon.792 = type { %"class.base::TimeDelta" }
%"class.blink::Member.793" = type { %"class.blink::MemberBase.794" }
%"class.blink::MemberBase.794" = type { %"class.blink::Event"* }
%"class.blink::Event" = type opaque
%"class.std::__1::unique_ptr.795" = type { %"class.std::__1::__compressed_pair.796" }
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"class.blink::Animation::CompositorState"* }
%"class.blink::Animation::CompositorState" = type { %"class.absl::optional.16", %"class.absl::optional.16", double, i8, i32 }
%"class.blink::Member.801" = type { %"class.blink::MemberBase.802" }
%"class.blink::MemberBase.802" = type { %"class.blink::Animation::CompositorAnimationHolder"* }
%"class.blink::Animation::CompositorAnimationHolder" = type { %"class.blink::ThreadState::PrefinalizerRegistration.805", %"class.std::__1::unique_ptr.806", %"class.blink::Member.741" }
%"class.blink::ThreadState::PrefinalizerRegistration.805" = type { i8 }
%"class.std::__1::unique_ptr.806" = type { %"class.std::__1::__compressed_pair.807" }
%"class.std::__1::__compressed_pair.807" = type { %"struct.std::__1::__compressed_pair_elem.808" }
%"struct.std::__1::__compressed_pair_elem.808" = type { %"class.blink::CompositorAnimation"* }
%"class.blink::CompositorAnimation" = type opaque
%"class.blink::CSSBitsetBase" = type { [10 x i64] }
%"class.blink::HeapHashMap.835" = type { %"class.WTF::HashMap.838" }
%"class.WTF::HashMap.838" = type { %"class.WTF::HashTable.839" }
%"class.WTF::HashTable.839" = type <{ %"struct.WTF::KeyValuePair.841"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.841" = type { %"class.blink::PropertyHandle", %"class.blink::Member.842" }
%"class.blink::Member.842" = type { %"class.blink::MemberBase.843" }
%"class.blink::MemberBase.843" = type { %"class.blink::HeapVector.844"* }
%"class.blink::HeapVector.844" = type { %"class.WTF::Vector.847" }
%"class.WTF::Vector.847" = type { %"class.WTF::VectorBuffer.848" }
%"class.WTF::VectorBuffer.848" = type { %"class.WTF::VectorBufferBase", [8 x i8] }
%"class.blink::HeapVector.819" = type { %"class.WTF::Vector.822" }
%"class.WTF::Vector.822" = type { %"class.WTF::VectorBuffer.823" }
%"class.WTF::VectorBuffer.823" = type { %"class.WTF::VectorBufferBase.824" }
%"class.WTF::VectorBufferBase.824" = type { %"class.blink::Member.825"*, i32, i32 }
%"class.blink::Member.825" = type { %"class.blink::MemberBase.826" }
%"class.blink::MemberBase.826" = type { %"class.blink::InertEffect"* }
%"class.blink::InertEffect" = type { %"class.blink::AnimationEffect", %"class.blink::Member.60", i8, %"class.absl::optional", %"class.absl::optional.724" }
%"class.blink::HeapHashSet.828" = type { %"class.WTF::HashSet.831" }
%"class.WTF::HashSet.831" = type { %"class.WTF::HashTable.832" }
%"class.WTF::HashTable.832" = type <{ %"class.blink::Member.834"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.834" = type { %"class.blink::MemberBase.870" }
%"class.blink::MemberBase.870" = type { %"class.blink::Animation"* }
%"class.WTF::HashSet.851" = type { %"class.WTF::HashTable.852" }
%"class.WTF::HashTable.852" = type <{ %"class.blink::PropertyHandle"*, i32, i32, i32, [4 x i8] }>
%"class.blink::InvalidatableInterpolation" = type { %"class.blink::Interpolation", %"class.blink::PropertyHandle", %"class.WTF::Vector.871"*, i64, %"class.blink::Member.88", %"class.blink::Member.88", double, i8, %"class.std::__1::unique_ptr.872", %"class.WTF::Vector.878", %"class.std::__1::unique_ptr.889" }
%"class.WTF::Vector.871" = type opaque
%"class.std::__1::unique_ptr.872" = type { %"class.std::__1::__compressed_pair.873" }
%"class.std::__1::__compressed_pair.873" = type { %"struct.std::__1::__compressed_pair_elem.874" }
%"struct.std::__1::__compressed_pair_elem.874" = type { %"class.blink::PrimitiveInterpolation"* }
%"class.blink::PrimitiveInterpolation" = type { i32 (...)** }
%"class.WTF::Vector.878" = type { %"class.WTF::VectorBuffer.879" }
%"class.WTF::VectorBuffer.879" = type { %"class.WTF::VectorBufferBase.880" }
%"class.WTF::VectorBufferBase.880" = type { %"class.std::__1::unique_ptr.881"*, i32, i32 }
%"class.std::__1::unique_ptr.881" = type { %"class.std::__1::__compressed_pair.882" }
%"class.std::__1::__compressed_pair.882" = type { %"struct.std::__1::__compressed_pair_elem.883" }
%"struct.std::__1::__compressed_pair_elem.883" = type { %"class.blink::InterpolationType::ConversionChecker"* }
%"class.blink::InterpolationType::ConversionChecker" = type { i32 (...)**, %"class.blink::InterpolationType"* }
%"class.blink::InterpolationType" = type { i32 (...)**, %"class.blink::PropertyHandle" }
%"class.std::__1::unique_ptr.889" = type { %"class.std::__1::__compressed_pair.890" }
%"class.std::__1::__compressed_pair.890" = type { %"struct.std::__1::__compressed_pair_elem.891" }
%"struct.std::__1::__compressed_pair_elem.891" = type { %"class.blink::TypedInterpolationValue"* }
%"class.blink::TypedInterpolationValue" = type { %"class.blink::InterpolationType"*, %"struct.blink::InterpolationValue" }
%"struct.blink::InterpolationValue" = type { %"class.std::__1::unique_ptr.892", %class.scoped_refptr.898 }
%"class.std::__1::unique_ptr.892" = type { %"class.std::__1::__compressed_pair.893" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.894" }
%"struct.std::__1::__compressed_pair_elem.894" = type { %"class.blink::InterpolableValue"* }
%"class.blink::InterpolableValue" = type { i32 (...)** }
%class.scoped_refptr.898 = type { %"class.blink::NonInterpolableValue"* }
%"class.blink::NonInterpolableValue" = type <{ i32 (...)**, %"class.WTF::RefCounted.899", [4 x i8] }>
%"class.WTF::RefCounted.899" = type { %"class.base::RefCounted.900" }
%"class.base::RefCounted.900" = type { %"class.base::subtle::RefCountedBase" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.904" }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.906 }
%union.anon.906 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::internal::ConcurrentBucket" = type { [24 x i8], %"class.blink::Member.842"* }
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_10HeapVectorINS4_INS1_13InterpolationEEELj1EEEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_IS9_EEEESH_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISJ_SE_SK_EERS2_PS8_EENS_18HashTableAddResultISL_SA_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_10HeapVectorINS4_INS1_13InterpolationEEELj1EEEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_IS9_EEEESH_NS1_13HeapAllocatorEE6ExpandEPSA_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_10HeapVectorINS4_INS1_13InterpolationEEELj1EEEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_IS9_EEEESH_NS1_13HeapAllocatorEE12ExpandBufferEjPSA_Rb = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_10HeapVectorINS4_INS1_13InterpolationEEELj1EEEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_IS9_EEEESH_NS1_13HeapAllocatorEE8RehashToEPSA_jSM_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_13InterpolationEEELj1EEEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSI_ISB_EEEESJ_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS1_12KeyValuePairIS3_NS_6MemberINS_10HeapVectorINS5_INS_13InterpolationEEELj1EEEEEEENS1_24KeyValuePairKeyExtractorENS1_11DefaultHashIS3_E4HashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSH_ISA_EEEESI_NS_13HeapAllocatorEEEE14AllocateObjectISN_EEPvm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_13InterpolationEEELj1EEEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSI_ISB_EEEESJ_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS3_12KeyValuePairIS5_NS_6MemberINS_10HeapVectorINS7_INS_13InterpolationEEELj1EEEEEEENS3_24KeyValuePairKeyExtractorENS3_11DefaultHashIS5_E4HashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSJ_ISC_EEEESK_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_13InterpolationEEELj1EEEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSI_ISB_EEEESJ_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS4_NS3_6MemberINS3_10HeapVectorINS6_INS3_13InterpolationEEELj1EEEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS4_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSI_ISB_EEEESJ_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_13InterpolationEEELj1EEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13InterpolationEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_13InterpolationEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS1_12KeyValuePairIS3_NS_6MemberINS_10HeapVectorINS5_INS_13InterpolationEEELj1EEEEEEENS1_24KeyValuePairKeyExtractorENS1_11DefaultHashIS3_E4HashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSH_ISA_EEEESI_NS_13HeapAllocatorEEEE8FinalizeEv = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_10HeapVectorINS4_INS1_13InterpolationEEELj1EEEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_IS9_EEEESH_NS1_13HeapAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorISE_SJ_SK_EES2_EENSt3__14pairIPSA_bEERKT0_ = comdat any

$_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_10HeapVectorINS4_INS1_13InterpolationEEELj1EEEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_IS9_EEEESH_NS1_13HeapAllocatorEE29DeleteAllBucketsAndDeallocateEPSA_j = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberINS_13InterpolationEEELj1EEEEEPhm = comdat any

$_ZN5blink8internal14FinalizerTraitINS_10HeapVectorINS_6MemberINS_13InterpolationEEELj1EEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_13InterpolationEEELj1EEEE7GetNameEPKv = comdat any

$_ZN3WTF12VectorBufferIN5blink6MemberINS1_13InterpolationEEELj1ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS4_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13InterpolationEEELj1ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13InterpolationEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13InterpolationEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_13InterpolationEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13InterpolationEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13InterpolationEEELj1ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13InterpolationEEELj1ENS1_13HeapAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13InterpolationEEELj1ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZNSt3__16__sortIRPFbRKN5blink6MemberINS1_13SampledEffectEEES6_EPS4_EEvT0_SB_T_ = comdat any

$_ZNSt3__17__sort3IRPFbRKN5blink6MemberINS1_13SampledEffectEEES6_EPS4_EEjT0_SB_SB_T_ = comdat any

$_ZNSt3__17__sort4IRPFbRKN5blink6MemberINS1_13SampledEffectEEES6_EPS4_EEjT0_SB_SB_SB_T_ = comdat any

$_ZNSt3__17__sort5IRPFbRKN5blink6MemberINS1_13SampledEffectEEES6_EPS4_EEjT0_SB_SB_SB_SB_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRPFbRKN5blink6MemberINS1_13SampledEffectEEES6_EPS4_EEbT0_SB_T_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13SampledEffectEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13SampledEffectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_13SampledEffectEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_13InterpolationEEELj1EEEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSI_ISB_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_13InterpolationEEELj1EEEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSI_ISB_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_13InterpolationEEELj1EEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_13InterpolationEEELj1EEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13InterpolationEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13InterpolationEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.3 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.4 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.6 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_13InterpolationEEELj1EEEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSI_ISB_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_13InterpolationEEELj1EEEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSI_ISB_EEEESJ_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS3_12KeyValuePairIS5_NS_6MemberINS_10HeapVectorINS7_INS_13InterpolationEEELj1EEEEEEENS3_24KeyValuePairKeyExtractorENS3_11DefaultHashIS5_E4HashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSJ_ISC_EEEESK_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_13InterpolationEEELj1EEEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSI_ISB_EEEESJ_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_13InterpolationEEELj1EEEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSI_ISB_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.7 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_14PropertyHandleENS_12KeyValuePairIS4_NS1_6MemberINS1_10HeapVectorINS6_INS1_13InterpolationEEELj1EEEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS4_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSI_ISB_EEEESJ_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [532 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::PropertyHandle, WTF::KeyValuePair<blink::PropertyHandle, blink::Member<blink::HeapVector<blink::Member<blink::Interpolation>, 1> > >, WTF::KeyValuePairKeyExtractor, WTF::DefaultHash<blink::PropertyHandle>::Hash, WTF::HashMapValueTraits<WTF::HashTraits<blink::PropertyHandle>, WTF::HashTraits<blink::Member<blink::HeapVector<blink::Member<blink::Interpolation>, 1> > > >, WTF::HashTraits<blink::PropertyHandle>, blink::HeapAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10HeapVectorINS1_6MemberINS1_13InterpolationEEELj1EEEEEPKcv = private unnamed_addr constant [105 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVector<blink::Member<blink::Interpolation>, 1>]\00", align 1
@_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_13InterpolationEEELj1EEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_13InterpolationEEELj1EEEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_10HeapVectorINS_6MemberINS_13InterpolationEEELj1EEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_13InterpolationEEELj1EEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_13InterpolationEEELj1EEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink26RuntimeEnabledFeaturesBase30is_web_animations_api_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase29is_animation_worklet_enabled_E = external local_unnamed_addr global i8, align 1
@.str.8 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.9 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.10 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13InterpolationEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13InterpolationEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13InterpolationEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13InterpolationEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13InterpolationEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [167 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::Interpolation>, WTF::VectorTraits<blink::Member<blink::Interpolation> > >]\00", align 1
@.str.11 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.12 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1

@_ZN5blink11EffectStackC1Ev = hidden unnamed_addr alias void (%"class.blink::EffectStack"*), void (%"class.blink::EffectStack"*)* @_ZN5blink11EffectStackC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink11EffectStack21CompareSampledEffectsERKNS_6MemberINS_13SampledEffectEEES5_(%"class.blink::Member"* nocapture readonly dereferenceable(8), %"class.blink::Member"* nocapture readonly dereferenceable(8)) #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.blink::SampledEffect"*, %"class.blink::SampledEffect"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::SampledEffect", %"class.blink::SampledEffect"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::KeyframeEffect"*, %"class.blink::KeyframeEffect"** %5, align 8
  %7 = icmp eq %"class.blink::KeyframeEffect"* %6, null
  br i1 %7, label %29, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.blink::SampledEffect"*, %"class.blink::SampledEffect"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::SampledEffect", %"class.blink::SampledEffect"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::KeyframeEffect"*, %"class.blink::KeyframeEffect"** %11, align 8
  %13 = icmp eq %"class.blink::KeyframeEffect"* %12, null
  br i1 %13, label %29, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.blink::KeyframeEffect", %"class.blink::KeyframeEffect"* %6, i64 0, i32 0
  %16 = tail call %"class.blink::Animation"* @_ZN5blink15AnimationEffect12GetAnimationEv(%"class.blink::AnimationEffect"* %15) #8
  %17 = load %"class.blink::SampledEffect"*, %"class.blink::SampledEffect"** %9, align 8
  %18 = getelementptr inbounds %"class.blink::SampledEffect", %"class.blink::SampledEffect"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::KeyframeEffect"*, %"class.blink::KeyframeEffect"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::KeyframeEffect", %"class.blink::KeyframeEffect"* %19, i64 0, i32 0
  %21 = tail call %"class.blink::Animation"* @_ZN5blink15AnimationEffect12GetAnimationEv(%"class.blink::AnimationEffect"* %20) #8
  %22 = icmp ne %"class.blink::Animation"* %16, null
  %23 = icmp ne %"class.blink::Animation"* %21, null
  %24 = and i1 %22, %23
  br i1 %24, label %27, label %25

25:                                               ; preds = %14
  %26 = load %"class.blink::SampledEffect"*, %"class.blink::SampledEffect"** %3, align 8
  br label %29

27:                                               ; preds = %14
  %28 = tail call zeroext i1 @_ZN5blink9Animation25HasLowerCompositeOrderingEPKS0_S2_NS0_25CompareAnimationsOrderingE(%"class.blink::Animation"* nonnull %16, %"class.blink::Animation"* nonnull %21, i32 1) #8
  br label %38

29:                                               ; preds = %25, %8, %2
  %30 = phi %"class.blink::SampledEffect"* [ %26, %25 ], [ %4, %8 ], [ %4, %2 ]
  %31 = getelementptr inbounds %"class.blink::SampledEffect", %"class.blink::SampledEffect"* %30, i64 0, i32 2
  %32 = load i32, i32* %31, align 8
  %33 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1, i64 0, i32 0, i32 0
  %34 = load %"class.blink::SampledEffect"*, %"class.blink::SampledEffect"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::SampledEffect", %"class.blink::SampledEffect"* %34, i64 0, i32 2
  %36 = load i32, i32* %35, align 8
  %37 = icmp ult i32 %32, %36
  br label %38

38:                                               ; preds = %27, %29
  %39 = phi i1 [ %37, %29 ], [ %28, %27 ]
  ret i1 %39
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::Animation"* @_ZN5blink15AnimationEffect12GetAnimationEv(%"class.blink::AnimationEffect"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink9Animation25HasLowerCompositeOrderingEPKS0_S2_NS0_25CompareAnimationsOrderingE(%"class.blink::Animation"*, %"class.blink::Animation"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11EffectStackC2Ev(%"class.blink::EffectStack"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::EffectStack"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink11EffectStack31HasActiveAnimationsOnCompositorERKNS_14PropertyHandleE(%"class.blink::EffectStack"* nocapture readonly, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::EffectStack", %"class.blink::EffectStack"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Member"*, %"class.blink::Member"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::EffectStack", %"class.blink::EffectStack"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %27, label %10

10:                                               ; preds = %2, %24
  %11 = phi %"class.blink::Member"* [ %25, %24 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.blink::SampledEffect"*, %"class.blink::SampledEffect"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::SampledEffect", %"class.blink::SampledEffect"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::KeyframeEffect"*, %"class.blink::KeyframeEffect"** %14, align 8
  %16 = icmp eq %"class.blink::KeyframeEffect"* %15, null
  br i1 %16, label %24, label %17

17:                                               ; preds = %10
  %18 = tail call zeroext i1 @_ZNK5blink14KeyframeEffect19HasPlayingAnimationEv(%"class.blink::KeyframeEffect"* nonnull %15) #8
  br i1 %18, label %19, label %24

19:                                               ; preds = %17
  %20 = load %"class.blink::SampledEffect"*, %"class.blink::SampledEffect"** %12, align 8
  %21 = getelementptr inbounds %"class.blink::SampledEffect", %"class.blink::SampledEffect"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.blink::KeyframeEffect"*, %"class.blink::KeyframeEffect"** %21, align 8
  %23 = tail call zeroext i1 @_ZNK5blink14KeyframeEffect31HasActiveAnimationsOnCompositorERKNS_14PropertyHandleE(%"class.blink::KeyframeEffect"* %22, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #8
  br i1 %23, label %27, label %24

24:                                               ; preds = %17, %19, %10
  %25 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %11, i64 1
  %26 = icmp eq %"class.blink::Member"* %25, %8
  br i1 %26, label %27, label %10

27:                                               ; preds = %19, %24, %2
  %28 = phi i1 [ false, %2 ], [ false, %24 ], [ true, %19 ]
  ret i1 %28
}

declare zeroext i1 @_ZNK5blink14KeyframeEffect19HasPlayingAnimationEv(%"class.blink::KeyframeEffect"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink14KeyframeEffect31HasActiveAnimationsOnCompositorERKNS_14PropertyHandleE(%"class.blink::KeyframeEffect"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink11EffectStack17AffectsPropertiesEPFbRKNS_14PropertyHandleEE(%"class.blink::EffectStack"* nocapture readonly, i1 (%"class.blink::PropertyHandle"*)* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::EffectStack", %"class.blink::EffectStack"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Member"*, %"class.blink::Member"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::EffectStack", %"class.blink::EffectStack"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %37, label %10

10:                                               ; preds = %2, %34
  %11 = phi %"class.blink::Member"* [ %35, %34 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.blink::SampledEffect"*, %"class.blink::SampledEffect"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::SampledEffect", %"class.blink::SampledEffect"* %13, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::Member.3"*, %"class.blink::Member.3"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::SampledEffect", %"class.blink::SampledEffect"* %13, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.3", %"class.blink::Member.3"* %15, i64 %18
  %20 = icmp eq i32 %17, 0
  br i1 %20, label %34, label %23

21:                                               ; preds = %23
  %22 = icmp eq %"class.blink::Member.3"* %33, %19
  br i1 %22, label %34, label %23

23:                                               ; preds = %10, %21
  %24 = phi %"class.blink::Member.3"* [ %33, %21 ], [ %15, %10 ]
  %25 = getelementptr inbounds %"class.blink::Member.3", %"class.blink::Member.3"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.blink::Interpolation"*, %"class.blink::Interpolation"** %25, align 8
  %27 = bitcast %"class.blink::Interpolation"* %26 to %"class.blink::PropertyHandle"* (%"class.blink::Interpolation"*)***
  %28 = load %"class.blink::PropertyHandle"* (%"class.blink::Interpolation"*)**, %"class.blink::PropertyHandle"* (%"class.blink::Interpolation"*)*** %27, align 8
  %29 = getelementptr inbounds %"class.blink::PropertyHandle"* (%"class.blink::Interpolation"*)*, %"class.blink::PropertyHandle"* (%"class.blink::Interpolation"*)** %28, i64 5
  %30 = load %"class.blink::PropertyHandle"* (%"class.blink::Interpolation"*)*, %"class.blink::PropertyHandle"* (%"class.blink::Interpolation"*)** %29, align 8
  %31 = tail call dereferenceable(24) %"class.blink::PropertyHandle"* %30(%"class.blink::Interpolation"* %26) #8
  %32 = tail call zeroext i1 %1(%"class.blink::PropertyHandle"* dereferenceable(24) %31) #8
  %33 = getelementptr inbounds %"class.blink::Member.3", %"class.blink::Member.3"* %24, i64 1
  br i1 %32, label %37, label %21

34:                                               ; preds = %21, %10
  %35 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %11, i64 1
  %36 = icmp eq %"class.blink::Member"* %35, %8
  br i1 %36, label %37, label %10

37:                                               ; preds = %34, %23, %2
  %38 = phi i1 [ false, %2 ], [ true, %23 ], [ false, %34 ]
  ret i1 %38
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink11EffectStack17AffectsPropertiesERKNS_13CSSBitsetBaseILm624EEENS_14KeyframeEffect8PriorityE(%"class.blink::EffectStack"* nocapture readonly, %"class.blink::CSSBitsetBase"* nocapture readonly dereferenceable(80), i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::EffectStack", %"class.blink::EffectStack"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::Member"*, %"class.blink::Member"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::EffectStack", %"class.blink::EffectStack"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %5, i64 %8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %60, label %11

11:                                               ; preds = %3, %57
  %12 = phi %"class.blink::Member"* [ %58, %57 ], [ %5, %3 ]
  %13 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %12, i64 0, i32 0, i32 0
  %14 = load %"class.blink::SampledEffect"*, %"class.blink::SampledEffect"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::SampledEffect", %"class.blink::SampledEffect"* %14, i64 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, %2
  br i1 %17, label %18, label %57

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::SampledEffect", %"class.blink::SampledEffect"* %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.3"*, %"class.blink::Member.3"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::SampledEffect", %"class.blink::SampledEffect"* %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"class.blink::Member.3", %"class.blink::Member.3"* %20, i64 %23
  %25 = icmp eq i32 %22, 0
  br i1 %25, label %57, label %26

26:                                               ; preds = %18, %54
  %27 = phi %"class.blink::Member.3"* [ %55, %54 ], [ %20, %18 ]
  %28 = getelementptr inbounds %"class.blink::Member.3", %"class.blink::Member.3"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.blink::Interpolation"*, %"class.blink::Interpolation"** %28, align 8
  %30 = bitcast %"class.blink::Interpolation"* %29 to %"class.blink::PropertyHandle"* (%"class.blink::Interpolation"*)***
  %31 = load %"class.blink::PropertyHandle"* (%"class.blink::Interpolation"*)**, %"class.blink::PropertyHandle"* (%"class.blink::Interpolation"*)*** %30, align 8
  %32 = getelementptr inbounds %"class.blink::PropertyHandle"* (%"class.blink::Interpolation"*)*, %"class.blink::PropertyHandle"* (%"class.blink::Interpolation"*)** %31, i64 5
  %33 = load %"class.blink::PropertyHandle"* (%"class.blink::Interpolation"*)*, %"class.blink::PropertyHandle"* (%"class.blink::Interpolation"*)** %32, align 8
  %34 = tail call dereferenceable(24) %"class.blink::PropertyHandle"* %33(%"class.blink::Interpolation"* %29) #8
  %35 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %34, i64 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = icmp ne i32 %36, 3
  %38 = or i32 %36, 1
  %39 = icmp eq i32 %38, 3
  %40 = and i1 %37, %39
  br i1 %40, label %41, label %54

41:                                               ; preds = %26
  %42 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %34, i64 0, i32 1, i32 0
  %43 = load %"class.blink::CSSProperty"*, %"class.blink::CSSProperty"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %43, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = sext i32 %45 to i64
  %47 = lshr i64 %46, 6
  %48 = getelementptr inbounds %"class.blink::CSSBitsetBase", %"class.blink::CSSBitsetBase"* %1, i64 0, i32 0, i64 %47
  %49 = load i64, i64* %48, align 8
  %50 = and i64 %46, 63
  %51 = shl i64 1, %50
  %52 = and i64 %51, %49
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %60

54:                                               ; preds = %41, %26
  %55 = getelementptr inbounds %"class.blink::Member.3", %"class.blink::Member.3"* %27, i64 1
  %56 = icmp eq %"class.blink::Member.3"* %55, %24
  br i1 %56, label %57, label %26

57:                                               ; preds = %54, %18, %11
  %58 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %12, i64 1
  %59 = icmp eq %"class.blink::Member"* %58, %9
  br i1 %59, label %60, label %11

60:                                               ; preds = %57, %41, %3
  %61 = phi i1 [ false, %3 ], [ true, %41 ], [ false, %57 ]
  ret i1 %61
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink11EffectStack9HasRevertEv(%"class.blink::EffectStack"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::EffectStack", %"class.blink::EffectStack"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Member"*, %"class.blink::Member"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EffectStack", %"class.blink::EffectStack"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %1, %18
  %10 = phi %"class.blink::Member"* [ %19, %18 ], [ %3, %1 ]
  %11 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.blink::SampledEffect"*, %"class.blink::SampledEffect"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::SampledEffect", %"class.blink::SampledEffect"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::KeyframeEffect"*, %"class.blink::KeyframeEffect"** %13, align 8
  %15 = icmp eq %"class.blink::KeyframeEffect"* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %9
  %17 = tail call zeroext i1 @_ZNK5blink14KeyframeEffect9HasRevertEv(%"class.blink::KeyframeEffect"* nonnull %14) #8
  br i1 %17, label %21, label %18

18:                                               ; preds = %16, %9
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %10, i64 1
  %20 = icmp eq %"class.blink::Member"* %19, %7
  br i1 %20, label %21, label %9

21:                                               ; preds = %16, %18, %1
  %22 = phi i1 [ false, %1 ], [ false, %18 ], [ true, %16 ]
  ret i1 %22
}

declare zeroext i1 @_ZNK5blink14KeyframeEffect9HasRevertEv(%"class.blink::KeyframeEffect"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11EffectStack20ActiveInterpolationsEPS0_PKNS_10HeapVectorINS_6MemberIKNS_11InertEffectEEELj0EEEPKNS_11HeapHashSetINS3_IKNS_9AnimationEEEN3WTF10MemberHashISC_EENSE_10HashTraitsISD_EEEENS_14KeyframeEffect8PriorityEPFbRKNS_14PropertyHandleEEPSM_(%"class.blink::HeapHashMap.835"* noalias sret, %"class.blink::EffectStack"*, %"class.blink::HeapVector.819"* readonly, %"class.blink::HeapHashSet.828"* readonly, i32, i1 (%"class.blink::PropertyHandle"*)*, %"class.blink::KeyframeEffect"* readnone) local_unnamed_addr #0 align 2 {
  %8 = alloca i1 (%"class.blink::Member"*, %"class.blink::Member"*)*, align 8
  %9 = alloca %"class.blink::HeapVector", align 8
  %10 = bitcast %"class.blink::HeapHashMap.835"* %0 to i8*
  %11 = bitcast %"class.blink::HeapHashMap.835"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 -86, i64 24, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 20, i1 false) #8
  %12 = icmp eq %"class.blink::EffectStack"* %1, null
  br i1 %12, label %127, label %13

13:                                               ; preds = %7
  tail call void @_ZN5blink11EffectStack29RemoveRedundantSampledEffectsEv(%"class.blink::EffectStack"* nonnull %1)
  %14 = getelementptr inbounds %"class.blink::EffectStack", %"class.blink::EffectStack"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::Member"*, %"class.blink::Member"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::EffectStack", %"class.blink::EffectStack"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %15, i64 %18
  %20 = bitcast i1 (%"class.blink::Member"*, %"class.blink::Member"*)** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20)
  store i1 (%"class.blink::Member"*, %"class.blink::Member"*)* @_ZN5blink11EffectStack21CompareSampledEffectsERKNS_6MemberINS_13SampledEffectEEES5_, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** %8, align 8
  call void @_ZNSt3__16__sortIRPFbRKN5blink6MemberINS1_13SampledEffectEEES6_EPS4_EEvT0_SB_T_(%"class.blink::Member"* %15, %"class.blink::Member"* %19, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** nonnull dereferenceable(8) %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  %21 = load %"class.blink::Member"*, %"class.blink::Member"** %14, align 8
  %22 = load i32, i32* %16, align 4
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %21, i64 %23
  %25 = icmp eq i32 %22, 0
  br i1 %25, label %127, label %26

26:                                               ; preds = %13
  %27 = icmp eq %"class.blink::KeyframeEffect"* %6, null
  %28 = icmp eq %"class.blink::HeapHashSet.828"* %3, null
  %29 = getelementptr inbounds %"class.blink::HeapHashSet.828", %"class.blink::HeapHashSet.828"* %3, i64 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.blink::HeapHashSet.828", %"class.blink::HeapHashSet.828"* %3, i64 0, i32 0, i32 0, i32 1
  br label %31

31:                                               ; preds = %26, %121
  %32 = phi %"class.blink::Member"* [ %21, %26 ], [ %122, %121 ]
  %33 = phi i8 [ 0, %26 ], [ %42, %121 ]
  %34 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %32, i64 0, i32 0, i32 0
  %35 = load %"class.blink::SampledEffect"*, %"class.blink::SampledEffect"** %34, align 8
  br i1 %27, label %41, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::SampledEffect", %"class.blink::SampledEffect"* %35, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::KeyframeEffect"*, %"class.blink::KeyframeEffect"** %37, align 8
  %39 = icmp eq %"class.blink::KeyframeEffect"* %38, %6
  %40 = select i1 %39, i8 1, i8 %33
  br label %41

41:                                               ; preds = %31, %36
  %42 = phi i8 [ %40, %36 ], [ %33, %31 ]
  %43 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %32, i64 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.blink::SampledEffect", %"class.blink::SampledEffect"* %35, i64 0, i32 3
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, %4
  br i1 %46, label %47, label %121

47:                                               ; preds = %41
  br i1 %28, label %118, label %48

48:                                               ; preds = %47
  %49 = getelementptr inbounds %"class.blink::SampledEffect", %"class.blink::SampledEffect"* %35, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::KeyframeEffect"*, %"class.blink::KeyframeEffect"** %49, align 8
  %51 = icmp eq %"class.blink::KeyframeEffect"* %50, null
  br i1 %51, label %118, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.blink::KeyframeEffect", %"class.blink::KeyframeEffect"* %50, i64 0, i32 0
  %54 = call %"class.blink::Animation"* @_ZN5blink15AnimationEffect12GetAnimationEv(%"class.blink::AnimationEffect"* %53) #8
  %55 = ptrtoint %"class.blink::Animation"* %54 to i64
  %56 = load %"class.blink::Member.834"*, %"class.blink::Member.834"** %29, align 8
  %57 = icmp eq %"class.blink::Member.834"* %56, null
  br i1 %57, label %118, label %58

58:                                               ; preds = %52
  %59 = load i32, i32* %30, align 8
  %60 = add i32 %59, -1
  %61 = zext i32 %60 to i64
  %62 = shl i64 %55, 32
  %63 = xor i64 %62, -1
  %64 = add i64 %63, %55
  %65 = lshr i64 %64, 22
  %66 = xor i64 %65, %64
  %67 = shl i64 %66, 13
  %68 = xor i64 %67, -1
  %69 = add i64 %66, %68
  %70 = lshr i64 %69, 8
  %71 = xor i64 %70, %69
  %72 = mul i64 %71, 9
  %73 = lshr i64 %72, 15
  %74 = xor i64 %73, %72
  %75 = shl i64 %74, 27
  %76 = xor i64 %75, -1
  %77 = add i64 %74, %76
  %78 = lshr i64 %77, 31
  %79 = xor i64 %78, %77
  %80 = trunc i64 %79 to i32
  %81 = and i32 %60, %80
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.blink::Member.834", %"class.blink::Member.834"* %56, i64 %82
  %84 = getelementptr inbounds %"class.blink::Member.834", %"class.blink::Member.834"* %83, i64 0, i32 0, i32 0
  %85 = load %"class.blink::Animation"*, %"class.blink::Animation"** %84, align 8
  %86 = icmp eq %"class.blink::Animation"* %85, %54
  br i1 %86, label %115, label %87

87:                                               ; preds = %58
  %88 = xor i32 %80, -1
  %89 = lshr i32 %80, 23
  %90 = add i32 %89, %88
  %91 = shl i32 %90, 12
  %92 = xor i32 %91, %90
  %93 = lshr i32 %92, 7
  %94 = xor i32 %93, %92
  %95 = shl i32 %94, 2
  %96 = xor i32 %95, %94
  %97 = lshr i32 %96, 20
  %98 = xor i32 %97, %96
  %99 = or i32 %98, 1
  %100 = zext i32 %99 to i64
  br label %101

101:                                              ; preds = %106, %87
  %102 = phi %"class.blink::Animation"* [ %85, %87 ], [ %113, %106 ]
  %103 = phi i64 [ %82, %87 ], [ %110, %106 ]
  %104 = phi i64 [ 0, %87 ], [ %108, %106 ]
  %105 = icmp eq %"class.blink::Animation"* %102, null
  br i1 %105, label %118, label %106

106:                                              ; preds = %101
  %107 = icmp eq i64 %104, 0
  %108 = select i1 %107, i64 %100, i64 %104
  %109 = add i64 %108, %103
  %110 = and i64 %109, %61
  %111 = getelementptr inbounds %"class.blink::Member.834", %"class.blink::Member.834"* %56, i64 %110
  %112 = getelementptr inbounds %"class.blink::Member.834", %"class.blink::Member.834"* %111, i64 0, i32 0, i32 0
  %113 = load %"class.blink::Animation"*, %"class.blink::Animation"** %112, align 8
  %114 = icmp eq %"class.blink::Animation"* %113, %54
  br i1 %114, label %115, label %101

115:                                              ; preds = %106, %58
  %116 = phi %"class.blink::Member.834"* [ %83, %58 ], [ %111, %106 ]
  %117 = icmp eq %"class.blink::Member.834"* %116, null
  br i1 %117, label %118, label %121

118:                                              ; preds = %101, %115, %52, %48, %47
  %119 = load %"class.blink::SampledEffect"*, %"class.blink::SampledEffect"** %43, align 8
  %120 = getelementptr inbounds %"class.blink::SampledEffect", %"class.blink::SampledEffect"* %119, i64 0, i32 1
  call fastcc void @_ZN5blink12_GLOBAL__N_129CopyToActiveInterpolationsMapERKNS_10HeapVectorINS_6MemberINS_13InterpolationEEELj0EEEPFbRKNS_14PropertyHandleEERNS_11HeapHashMapIS8_NS2_INS1_IS4_Lj1EEEEEN3WTF11DefaultHashIS8_E4HashENSG_10HashTraitsIS8_EENSK_ISF_EEEE(%"class.blink::HeapVector"* dereferenceable(16) %120, i1 (%"class.blink::PropertyHandle"*)* %5, %"class.blink::HeapHashMap.835"* dereferenceable(24) %0)
  br label %121

121:                                              ; preds = %115, %118, %41
  %122 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %32, i64 1
  %123 = icmp ne %"class.blink::Member"* %122, %24
  %124 = and i8 %42, 1
  %125 = icmp eq i8 %124, 0
  %126 = and i1 %123, %125
  br i1 %126, label %31, label %127

127:                                              ; preds = %121, %13, %7
  %128 = icmp eq %"class.blink::HeapVector.819"* %2, null
  br i1 %128, label %150, label %129

129:                                              ; preds = %127
  %130 = getelementptr inbounds %"class.blink::HeapVector.819", %"class.blink::HeapVector.819"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %131 = load %"class.blink::Member.825"*, %"class.blink::Member.825"** %130, align 8
  %132 = getelementptr inbounds %"class.blink::HeapVector.819", %"class.blink::HeapVector.819"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %133 = load i32, i32* %132, align 4
  %134 = zext i32 %133 to i64
  %135 = getelementptr inbounds %"class.blink::Member.825", %"class.blink::Member.825"* %131, i64 %134
  %136 = icmp eq i32 %133, 0
  br i1 %136, label %150, label %137

137:                                              ; preds = %129
  %138 = bitcast %"class.blink::HeapVector"* %9 to i8*
  %139 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %9, i64 0, i32 0, i32 0, i32 0, i32 2
  br label %140

140:                                              ; preds = %147, %137
  %141 = phi %"class.blink::Member.825"* [ %131, %137 ], [ %148, %147 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %138) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %138, i8 0, i64 16, i1 false) #8
  %142 = getelementptr inbounds %"class.blink::Member.825", %"class.blink::Member.825"* %141, i64 0, i32 0, i32 0
  %143 = load %"class.blink::InertEffect"*, %"class.blink::InertEffect"** %142, align 8
  call void @_ZNK5blink11InertEffect6SampleERNS_10HeapVectorINS_6MemberINS_13InterpolationEEELj0EEE(%"class.blink::InertEffect"* %143, %"class.blink::HeapVector"* nonnull dereferenceable(16) %9) #8
  %144 = load i32, i32* %139, align 4
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %147, label %146

146:                                              ; preds = %140
  call fastcc void @_ZN5blink12_GLOBAL__N_129CopyToActiveInterpolationsMapERKNS_10HeapVectorINS_6MemberINS_13InterpolationEEELj0EEEPFbRKNS_14PropertyHandleEERNS_11HeapHashMapIS8_NS2_INS1_IS4_Lj1EEEEEN3WTF11DefaultHashIS8_E4HashENSG_10HashTraitsIS8_EENSK_ISF_EEEE(%"class.blink::HeapVector"* nonnull dereferenceable(16) %9, i1 (%"class.blink::PropertyHandle"*)* %5, %"class.blink::HeapHashMap.835"* dereferenceable(24) %0) #8
  br label %147

147:                                              ; preds = %146, %140
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %138) #8
  %148 = getelementptr inbounds %"class.blink::Member.825", %"class.blink::Member.825"* %141, i64 1
  %149 = icmp eq %"class.blink::Member.825"* %148, %135
  br i1 %149, label %150, label %140

150:                                              ; preds = %147, %129, %127
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11EffectStack29RemoveRedundantSampledEffectsEv(%"class.blink::EffectStack"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::HashSet.851", align 8
  %3 = bitcast %"class.WTF::HashSet.851"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8
  %4 = getelementptr inbounds %"class.WTF::HashSet.851", %"class.WTF::HashSet.851"* %2, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::HashSet.851", %"class.WTF::HashSet.851"* %2, i64 0, i32 0, i32 1
  %6 = bitcast %"class.WTF::HashSet.851"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 20, i1 false) #8
  %7 = getelementptr inbounds %"class.blink::EffectStack", %"class.blink::EffectStack"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::EffectStack", %"class.blink::EffectStack"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %21

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::EffectStack", %"class.blink::EffectStack"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::Member"*, %"class.blink::Member"** %12, align 8
  br label %35

14:                                               ; preds = %29
  %15 = load i32, i32* %8, align 4
  %16 = getelementptr inbounds %"class.blink::EffectStack", %"class.blink::EffectStack"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::Member"*, %"class.blink::Member"** %16, align 8
  %18 = zext i32 %15 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %17, i64 %18
  %20 = icmp eq i32 %15, 0
  br i1 %20, label %35, label %81

21:                                               ; preds = %1, %29
  %22 = phi i32 [ %23, %29 ], [ %9, %1 ]
  %23 = add i32 %22, -1
  %24 = call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_13SampledEffectEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.815"* %7, i32 %23) #8
  %25 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.blink::SampledEffect"*, %"class.blink::SampledEffect"** %25, align 8
  %27 = call zeroext i1 @_ZNK5blink13SampledEffect15WillNeverChangeEv(%"class.blink::SampledEffect"* %26) #8
  br i1 %27, label %28, label %29

28:                                               ; preds = %21
  call void @_ZN5blink13SampledEffect28RemoveReplacedInterpolationsERKN3WTF7HashSetINS_14PropertyHandleENS1_11DefaultHashIS3_E4HashENS1_10HashTraitsIS3_EENS1_18PartitionAllocatorEEE(%"class.blink::SampledEffect"* %26, %"class.WTF::HashSet.851"* nonnull dereferenceable(24) %2) #8
  call void @_ZN5blink13SampledEffect24UpdateReplacedPropertiesERN3WTF7HashSetINS_14PropertyHandleENS1_11DefaultHashIS3_E4HashENS1_10HashTraitsIS3_EENS1_18PartitionAllocatorEEE(%"class.blink::SampledEffect"* %26, %"class.WTF::HashSet.851"* nonnull dereferenceable(24) %2) #8
  br label %29

29:                                               ; preds = %28, %21
  %30 = icmp eq i32 %23, 0
  br i1 %30, label %14, label %21

31:                                               ; preds = %114
  %32 = load %"class.blink::Member"*, %"class.blink::Member"** %16, align 8
  %33 = load i32, i32* %8, align 4
  %34 = zext i32 %33 to i64
  br label %35

35:                                               ; preds = %11, %31, %14
  %36 = phi i64 [ 0, %14 ], [ %34, %31 ], [ 0, %11 ]
  %37 = phi %"class.blink::Member"* [ %17, %14 ], [ %32, %31 ], [ %13, %11 ]
  %38 = phi i32 [ 0, %14 ], [ %115, %31 ], [ 0, %11 ]
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %37, i64 %39
  %41 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %37, i64 %36
  %42 = bitcast %"class.blink::Member"* %40 to i8*
  %43 = ptrtoint %"class.blink::Member"* %41 to i64
  %44 = ptrtoint %"class.blink::Member"* %40 to i64
  %45 = sub i64 %43, %44
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %42, i64 %45) #8
  store i32 %38, i32* %8, align 4
  %46 = load %"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"** %4, align 8
  %47 = icmp eq %"class.blink::PropertyHandle"* %46, null
  br i1 %47, label %80, label %48, !prof !2

48:                                               ; preds = %35
  %49 = load i32, i32* %5, align 8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %78, label %51

51:                                               ; preds = %48
  %52 = zext i32 %49 to i64
  br label %53

53:                                               ; preds = %75, %51
  %54 = phi i64 [ 0, %51 ], [ %76, %75 ]
  %55 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %46, i64 %54, i32 0
  %56 = load i32, i32* %55, align 8
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %75, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %46, i64 %54, i32 2, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #8
  br label %75

75:                                               ; preds = %74, %71, %58, %53
  %76 = add nuw nsw i64 %54, 1
  %77 = icmp eq i64 %76, %52
  br i1 %77, label %78, label %53

78:                                               ; preds = %75, %48
  %79 = bitcast %"class.blink::PropertyHandle"* %46 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %79) #8
  store %"class.blink::PropertyHandle"* null, %"class.blink::PropertyHandle"** %4, align 8
  br label %80

80:                                               ; preds = %35, %78
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8
  ret void

81:                                               ; preds = %14, %114
  %82 = phi %"class.blink::Member"* [ %116, %114 ], [ %17, %14 ]
  %83 = phi i32 [ %115, %114 ], [ 0, %14 ]
  %84 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %82, i64 0, i32 0, i32 0
  %85 = load %"class.blink::SampledEffect"*, %"class.blink::SampledEffect"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::SampledEffect", %"class.blink::SampledEffect"* %85, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %109, label %89

89:                                               ; preds = %81
  %90 = add i32 %83, 1
  %91 = call dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_13SampledEffectEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.815"* %7, i32 %83) #8
  %92 = bitcast %"class.blink::Member"* %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.blink::Member"* %82 to i64*
  %95 = load i64, i64* %94, align 8
  store atomic i64 %95, i64* %92 monotonic, align 8
  store atomic i64 %93, i64* %94 monotonic, align 8
  %96 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %102, label %98

98:                                               ; preds = %89
  %99 = bitcast %"class.blink::Member"* %91 to i8**
  %100 = load i8*, i8** %99, align 8
  %101 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %100) #8
  br label %102

102:                                              ; preds = %98, %89
  %103 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %114, label %105

105:                                              ; preds = %102
  %106 = bitcast %"class.blink::Member"* %82 to i8**
  %107 = load i8*, i8** %106, align 8
  %108 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %107) #8
  br label %114

109:                                              ; preds = %81
  %110 = getelementptr inbounds %"class.blink::SampledEffect", %"class.blink::SampledEffect"* %85, i64 0, i32 0, i32 0, i32 0
  %111 = load %"class.blink::KeyframeEffect"*, %"class.blink::KeyframeEffect"** %110, align 8
  %112 = icmp eq %"class.blink::KeyframeEffect"* %111, null
  br i1 %112, label %114, label %113

113:                                              ; preds = %109
  call void @_ZN5blink14KeyframeEffect41NotifySampledEffectRemovedFromEffectStackEv(%"class.blink::KeyframeEffect"* nonnull %111) #8
  br label %114

114:                                              ; preds = %105, %102, %109, %113
  %115 = phi i32 [ %83, %113 ], [ %83, %109 ], [ %90, %102 ], [ %90, %105 ]
  %116 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %82, i64 1
  %117 = icmp eq %"class.blink::Member"* %116, %19
  br i1 %117, label %31, label %81
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_129CopyToActiveInterpolationsMapERKNS_10HeapVectorINS_6MemberINS_13InterpolationEEELj0EEEPFbRKNS_14PropertyHandleEERNS_11HeapHashMapIS8_NS2_INS1_IS4_Lj1EEEEEN3WTF11DefaultHashIS8_E4HashENSG_10HashTraitsIS8_EENSK_ISF_EEEE(%"class.blink::HeapVector"* nocapture readonly dereferenceable(16), i1 (%"class.blink::PropertyHandle"*)*, %"class.blink::HeapHashMap.835"* dereferenceable(24)) unnamed_addr #0 {
  %4 = alloca %"class.blink::PropertyHandle", align 8
  %5 = alloca %"class.blink::HeapVector.844"*, align 8
  %6 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member.3"*, %"class.blink::Member.3"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::Member.3", %"class.blink::Member.3"* %7, i64 %10
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %21, label %13

13:                                               ; preds = %3
  %14 = bitcast %"class.blink::PropertyHandle"* %4 to i8*
  %15 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %16 = icmp eq i1 (%"class.blink::PropertyHandle"*)* %1, null
  %17 = bitcast %"class.blink::HeapVector.844"** %5 to i8*
  %18 = bitcast %"class.blink::HeapVector.844"** %5 to i8**
  %19 = getelementptr inbounds %"class.blink::HeapHashMap.835", %"class.blink::HeapHashMap.835"* %2, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 0
  br label %22

21:                                               ; preds = %174, %3
  ret void

22:                                               ; preds = %13, %174
  %23 = phi %"class.blink::Member.3"* [ %7, %13 ], [ %175, %174 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  %24 = getelementptr inbounds %"class.blink::Member.3", %"class.blink::Member.3"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.blink::Interpolation"*, %"class.blink::Interpolation"** %24, align 8
  %26 = bitcast %"class.blink::Interpolation"* %25 to %"class.blink::PropertyHandle"* (%"class.blink::Interpolation"*)***
  %27 = load %"class.blink::PropertyHandle"* (%"class.blink::Interpolation"*)**, %"class.blink::PropertyHandle"* (%"class.blink::Interpolation"*)*** %26, align 8
  %28 = getelementptr inbounds %"class.blink::PropertyHandle"* (%"class.blink::Interpolation"*)*, %"class.blink::PropertyHandle"* (%"class.blink::Interpolation"*)** %27, i64 5
  %29 = load %"class.blink::PropertyHandle"* (%"class.blink::Interpolation"*)*, %"class.blink::PropertyHandle"* (%"class.blink::Interpolation"*)** %28, align 8
  %30 = call dereferenceable(24) %"class.blink::PropertyHandle"* %29(%"class.blink::Interpolation"* %25) #8
  %31 = bitcast %"class.blink::PropertyHandle"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 %31, i64 16, i1 false) #8
  %32 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %30, i64 0, i32 2, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  store %"class.WTF::StringImpl"* %33, %"class.WTF::StringImpl"** %15, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %52, label %35

35:                                               ; preds = %22
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #8
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !3

49:                                               ; preds = %40
  call void @llvm.trap() #8
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %52

52:                                               ; preds = %22, %35, %50
  br i1 %16, label %55, label %53

53:                                               ; preds = %52
  %54 = call zeroext i1 %1(%"class.blink::PropertyHandle"* nonnull dereferenceable(24) %4) #8
  br i1 %54, label %55, label %158

55:                                               ; preds = %52, %53
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  %56 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberINS_13InterpolationEEELj1EEEEEPhm(i64 24) #8
  %57 = getelementptr inbounds i8, i8* %56, i64 16
  %58 = bitcast i8* %56 to i8**
  store i8* %57, i8** %58, align 8
  %59 = getelementptr inbounds i8, i8* %56, i64 8
  %60 = bitcast i8* %59 to i32*
  store i32 1, i32* %60, align 8
  %61 = bitcast i8* %57 to i64*
  store i64 0, i64* %61, align 8
  %62 = getelementptr inbounds i8, i8* %56, i64 12
  %63 = bitcast i8* %62 to i32*
  store i32 0, i32* %63, align 4
  %64 = getelementptr inbounds i8, i8* %56, i64 -4
  %65 = bitcast i8* %64 to i16*
  %66 = load atomic i16, i16* %65 monotonic, align 2
  %67 = or i16 %66, 1
  store atomic i16 %67, i16* %65 release, align 2
  store i8* %56, i8** %18, align 8
  %68 = call { %"struct.WTF::KeyValuePair.841"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_10HeapVectorINS4_INS1_13InterpolationEEELj1EEEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_IS9_EEEESH_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISJ_SE_SK_EERS2_PS8_EENS_18HashTableAddResultISL_SA_EEOT0_OT1_(%"class.WTF::HashTable.839"* %19, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %4, %"class.blink::HeapVector.844"** nonnull dereferenceable(8) %5) #8
  %69 = extractvalue { %"struct.WTF::KeyValuePair.841"*, i8 } %68, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %69, i64 0, i32 1, i32 0, i32 0
  %71 = load %"class.blink::HeapVector.844"*, %"class.blink::HeapVector.844"** %70, align 8
  %72 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase29is_animation_worklet_enabled_E, align 1, !range !4
  %73 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase30is_web_animations_api_enabled_E, align 1
  %74 = or i8 %73, %72
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %82

76:                                               ; preds = %55
  %77 = load i32, i32* %20, align 8
  %78 = or i32 %77, 1
  %79 = icmp ne i32 %78, 3
  %80 = icmp eq i32 %77, 4
  %81 = or i1 %80, %79
  br label %82

82:                                               ; preds = %55, %76
  %83 = phi i1 [ true, %55 ], [ %81, %76 ]
  %84 = load %"class.blink::Interpolation"*, %"class.blink::Interpolation"** %24, align 8
  %85 = bitcast %"class.blink::Interpolation"* %84 to i1 (%"class.blink::Interpolation"*)***
  %86 = load i1 (%"class.blink::Interpolation"*)**, i1 (%"class.blink::Interpolation"*)*** %85, align 8
  %87 = getelementptr inbounds i1 (%"class.blink::Interpolation"*)*, i1 (%"class.blink::Interpolation"*)** %86, i64 3
  %88 = load i1 (%"class.blink::Interpolation"*)*, i1 (%"class.blink::Interpolation"*)** %87, align 8
  %89 = call zeroext i1 %88(%"class.blink::Interpolation"* %84) #8
  br i1 %89, label %90, label %95

90:                                               ; preds = %82
  %91 = bitcast %"class.blink::Member.3"* %23 to %"class.blink::InvalidatableInterpolation"**
  %92 = load %"class.blink::InvalidatableInterpolation"*, %"class.blink::InvalidatableInterpolation"** %91, align 8
  %93 = call zeroext i1 @_ZNK5blink26InvalidatableInterpolation24DependsOnUnderlyingValueEv(%"class.blink::InvalidatableInterpolation"* %92) #8
  %94 = and i1 %83, %93
  br i1 %94, label %118, label %95

95:                                               ; preds = %90, %82
  %96 = getelementptr inbounds %"class.blink::HeapVector.844", %"class.blink::HeapVector.844"* %71, i64 0, i32 0, i32 0, i32 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %118, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.blink::HeapVector.844", %"class.blink::HeapVector.844"* %71, i64 0, i32 0, i32 0, i32 0, i32 2
  %101 = load i32, i32* %100, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %108, label %103

103:                                              ; preds = %99
  %104 = bitcast %"class.blink::HeapVector.844"* %71 to i8**
  %105 = load i8*, i8** %104, align 8
  %106 = zext i32 %101 to i64
  %107 = shl nuw nsw i64 %106, 3
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %105, i64 %107) #8
  store i32 0, i32* %100, align 4
  br label %108

108:                                              ; preds = %103, %99
  %109 = getelementptr inbounds %"class.blink::HeapVector.844", %"class.blink::HeapVector.844"* %71, i64 0, i32 0, i32 0, i32 0, i32 0
  %110 = load %"class.blink::Member.3"*, %"class.blink::Member.3"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::HeapVector.844", %"class.blink::HeapVector.844"* %71, i64 0, i32 0, i32 0, i32 1, i64 0
  %112 = ptrtoint i8* %111 to i64
  %113 = bitcast %"class.blink::HeapVector.844"* %71 to i64*
  store atomic i64 %112, i64* %113 monotonic, align 8
  store i32 1, i32* %96, align 8
  %114 = bitcast i8* %111 to %"class.blink::Member.3"*
  %115 = icmp eq %"class.blink::Member.3"* %110, %114
  br i1 %115, label %118, label %116, !prof !2

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"class.blink::HeapVector.844", %"class.blink::HeapVector.844"* %71, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_13InterpolationEEELj1ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.848"* %117, %"class.blink::Member.3"* %110) #8
  br label %118

118:                                              ; preds = %90, %116, %108, %95
  %119 = getelementptr inbounds %"class.blink::HeapVector.844", %"class.blink::HeapVector.844"* %71, i64 0, i32 0, i32 0, i32 0, i32 2
  %120 = load i32, i32* %119, align 4
  %121 = getelementptr inbounds %"class.blink::HeapVector.844", %"class.blink::HeapVector.844"* %71, i64 0, i32 0, i32 0, i32 0, i32 1
  %122 = load i32, i32* %121, align 8
  %123 = icmp eq i32 %120, %122
  br i1 %123, label %140, label %124, !prof !3

124:                                              ; preds = %118
  %125 = getelementptr inbounds %"class.blink::HeapVector.844", %"class.blink::HeapVector.844"* %71, i64 0, i32 0, i32 0, i32 0, i32 0
  %126 = load %"class.blink::Member.3"*, %"class.blink::Member.3"** %125, align 8
  %127 = zext i32 %120 to i64
  %128 = getelementptr inbounds %"class.blink::Member.3", %"class.blink::Member.3"* %126, i64 %127
  %129 = bitcast %"class.blink::Member.3"* %23 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"class.blink::Member.3"* %128 to i64*
  store atomic i64 %130, i64* %131 monotonic, align 8
  %132 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %137, label %134

134:                                              ; preds = %124
  %135 = inttoptr i64 %130 to i8*
  %136 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %135) #8
  br label %137

137:                                              ; preds = %134, %124
  %138 = load i32, i32* %119, align 4
  %139 = add i32 %138, 1
  store i32 %139, i32* %119, align 4
  br label %142

140:                                              ; preds = %118
  %141 = getelementptr inbounds %"class.blink::HeapVector.844", %"class.blink::HeapVector.844"* %71, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13InterpolationEEELj1ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS4_EEvOT_(%"class.WTF::Vector.847"* %141, %"class.blink::Member.3"* dereferenceable(8) %23) #8
  br label %142

142:                                              ; preds = %137, %140
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %174, label %145

145:                                              ; preds = %142
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  br i1 %149, label %152, label %154

152:                                              ; preds = %145
  %153 = add i32 %151, -1
  store i32 %153, i32* %150, align 4
  br label %154

154:                                              ; preds = %152, %145
  %155 = phi i32 [ %153, %152 ], [ %151, %145 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %174

157:                                              ; preds = %154
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %143) #8
  br label %174

158:                                              ; preds = %53
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %160 = icmp eq %"class.WTF::StringImpl"* %159, null
  br i1 %160, label %174, label %161

161:                                              ; preds = %158
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load atomic i32, i32* %162 monotonic, align 4
  %164 = and i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 0
  %167 = load i32, i32* %166, align 4
  br i1 %165, label %168, label %170

168:                                              ; preds = %161
  %169 = add i32 %167, -1
  store i32 %169, i32* %166, align 4
  br label %170

170:                                              ; preds = %168, %161
  %171 = phi i32 [ %169, %168 ], [ %167, %161 ]
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %170
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %159) #8
  br label %174

174:                                              ; preds = %173, %170, %158, %157, %154, %142
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #8
  %175 = getelementptr inbounds %"class.blink::Member.3", %"class.blink::Member.3"* %23, i64 1
  %176 = icmp eq %"class.blink::Member.3"* %175, %11
  br i1 %176, label %21, label %22
}

declare zeroext i1 @_ZNK5blink13SampledEffect15WillNeverChangeEv(%"class.blink::SampledEffect"*) local_unnamed_addr #2

declare void @_ZN5blink13SampledEffect28RemoveReplacedInterpolationsERKN3WTF7HashSetINS_14PropertyHandleENS1_11DefaultHashIS3_E4HashENS1_10HashTraitsIS3_EENS1_18PartitionAllocatorEEE(%"class.blink::SampledEffect"*, %"class.WTF::HashSet.851"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN5blink13SampledEffect24UpdateReplacedPropertiesERN3WTF7HashSetINS_14PropertyHandleENS1_11DefaultHashIS3_E4HashENS1_10HashTraitsIS3_EENS1_18PartitionAllocatorEEE(%"class.blink::SampledEffect"*, %"class.WTF::HashSet.851"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN5blink14KeyframeEffect41NotifySampledEffectRemovedFromEffectStackEv(%"class.blink::KeyframeEffect"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11EffectStack5TraceEPNS_7VisitorE(%"class.blink::EffectStack"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::EffectStack"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  %6 = bitcast %"class.blink::EffectStack"* %0 to i8**
  %7 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %1, i8** %6) #8
  br i1 %5, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %1, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13SampledEffectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #8
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZNK5blink26InvalidatableInterpolation24DependsOnUnderlyingValueEv(%"class.blink::InvalidatableInterpolation"*) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.841"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_10HeapVectorINS4_INS1_13InterpolationEEELj1EEEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_IS9_EEEESH_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISJ_SE_SK_EERS2_PS8_EENS_18HashTableAddResultISL_SA_EEOT0_OT1_(%"class.WTF::HashTable.839"*, %"class.blink::PropertyHandle"* dereferenceable(24), %"class.blink::HeapVector.844"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.blink::PropertyHandle", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.839", %"class.WTF::HashTable.839"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.841"*, %"struct.WTF::KeyValuePair.841"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.841"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call %"struct.WTF::KeyValuePair.841"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_10HeapVectorINS4_INS1_13InterpolationEEELj1EEEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_IS9_EEEESH_NS1_13HeapAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.839"* %0, %"struct.WTF::KeyValuePair.841"* null)
  %10 = load %"struct.WTF::KeyValuePair.841"*, %"struct.WTF::KeyValuePair.841"** %5, align 8
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi %"struct.WTF::KeyValuePair.841"* [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.WTF::HashTable.839", %"class.WTF::HashTable.839"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = tail call i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"* %1) #8
  %18 = and i32 %17, %15
  %19 = zext i32 %18 to i64
  %20 = bitcast %"class.blink::PropertyHandle"* %4 to i8*
  %21 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 0
  %22 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 1
  %23 = bitcast %union.anon.77* %22 to i8*
  %24 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %25 = xor i32 %17, -1
  %26 = lshr i32 %17, 23
  %27 = add i32 %26, %25
  %28 = shl i32 %27, 12
  %29 = xor i32 %28, %27
  %30 = lshr i32 %29, 7
  %31 = xor i32 %30, %29
  %32 = shl i32 %31, 2
  %33 = xor i32 %32, %31
  %34 = lshr i32 %33, 20
  %35 = xor i32 %34, %33
  %36 = or i32 %35, 1
  %37 = zext i32 %36 to i64
  br label %38

38:                                               ; preds = %63, %11
  %39 = phi i64 [ 0, %11 ], [ %69, %63 ]
  %40 = phi i64 [ %19, %11 ], [ %71, %63 ]
  %41 = phi %"struct.WTF::KeyValuePair.841"* [ null, %11 ], [ %67, %63 ]
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %12, i64 %40
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %42, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #8
  store i32 0, i32* %21, align 8, !alias.scope !5
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #8, !alias.scope !5
  %44 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %43, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %4) #8
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #8
  br label %60

60:                                               ; preds = %38, %56, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #8
  br i1 %44, label %72, label %61

61:                                               ; preds = %60
  %62 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %43, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #8
  br i1 %62, label %186, label %63

63:                                               ; preds = %61
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %42, i64 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, 1
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.841"* %42, %"struct.WTF::KeyValuePair.841"* %41
  %68 = icmp eq i64 %39, 0
  %69 = select i1 %68, i64 %37, i64 %39
  %70 = add i64 %69, %40
  %71 = and i64 %70, %16
  br label %38

72:                                               ; preds = %60
  %73 = icmp eq %"struct.WTF::KeyValuePair.841"* %41, null
  br i1 %73, label %74, label %76

74:                                               ; preds = %72
  %75 = bitcast %"struct.WTF::KeyValuePair.841"* %42 to i8*
  br label %84

76:                                               ; preds = %72
  %77 = bitcast %"struct.WTF::KeyValuePair.841"* %41 to i8*
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %77, i64 32) #8
  %78 = getelementptr inbounds %"class.WTF::HashTable.839", %"class.WTF::HashTable.839"* %0, i64 0, i32 3
  %79 = load i32, i32* %78, align 8
  %80 = add i32 %79, 2147483647
  %81 = and i32 %80, 2147483647
  %82 = and i32 %79, -2147483648
  %83 = or i32 %81, %82
  store i32 %83, i32* %78, align 8
  br label %84

84:                                               ; preds = %74, %76
  %85 = phi i8* [ %75, %74 ], [ %77, %76 ]
  %86 = phi %"struct.WTF::KeyValuePair.841"* [ %42, %74 ], [ %41, %76 ]
  %87 = bitcast %"class.blink::PropertyHandle"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %87, i64 16, i1 false) #8
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %86, i64 0, i32 0, i32 2
  %89 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %109, label %92

92:                                               ; preds = %84
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %109

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = zext i32 %99 to i33
  %101 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %100, i33 1) #8
  %102 = extractvalue { i33, i1 } %101, 1
  %103 = extractvalue { i33, i1 } %101, 0
  %104 = icmp slt i33 %103, 0
  %105 = or i1 %102, %104
  br i1 %105, label %106, label %107, !prof !3

106:                                              ; preds = %97
  call void @llvm.trap() #8
  unreachable

107:                                              ; preds = %97
  %108 = trunc i33 %103 to i32
  store i32 %108, i32* %98, align 4
  br label %109

109:                                              ; preds = %107, %92, %84
  %110 = ptrtoint %"class.WTF::StringImpl"* %90 to i64
  %111 = bitcast %"class.WTF::AtomicString"* %88 to i64*
  %112 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %88, i64 0, i32 0, i32 0, i32 0
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  store i64 %110, i64* %111, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %128, label %115

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  br i1 %119, label %122, label %124

122:                                              ; preds = %115
  %123 = add i32 %121, -1
  store i32 %123, i32* %120, align 4
  br label %124

124:                                              ; preds = %122, %115
  %125 = phi i32 [ %123, %122 ], [ %121, %115 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #8
  br label %128

128:                                              ; preds = %127, %124, %109
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %86, i64 0, i32 1
  %130 = load %"class.blink::HeapVector.844"*, %"class.blink::HeapVector.844"** %2, align 8
  %131 = ptrtoint %"class.blink::HeapVector.844"* %130 to i64
  %132 = bitcast %"class.blink::Member.842"* %129 to i64*
  store atomic i64 %131, i64* %132 monotonic, align 8
  %133 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %138, label %135

135:                                              ; preds = %128
  %136 = bitcast %"class.blink::HeapVector.844"* %130 to i8*
  %137 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %136) #8
  br label %138

138:                                              ; preds = %128, %135
  %139 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %174, label %141

141:                                              ; preds = %138
  %142 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %143 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %142, i64 0, i32 1
  %144 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %143) #8
  %145 = icmp eq i8* %144, null
  br i1 %145, label %146, label %148, !prof !3

146:                                              ; preds = %141
  %147 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %143, i8* %147) #8
  br label %148

148:                                              ; preds = %146, %141
  %149 = phi i8* [ %147, %146 ], [ %144, %141 ]
  %150 = bitcast i8* %149 to %"class.blink::ThreadState"**
  %151 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %150, align 8
  %152 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %151, i64 0, i32 9
  %153 = load i8, i8* %152, align 1, !range !4
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %174, label %155

155:                                              ; preds = %148
  %156 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %151, i64 0, i32 13
  %157 = load i64, i64* %156, align 8
  %158 = add i64 %157, 1
  store i64 %158, i64* %156, align 8
  %159 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %151, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %160 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %159, align 8
  %161 = load atomic i64, i64* %132 monotonic, align 8
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %171, label %163

163:                                              ; preds = %155
  %164 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %160, i64 0, i32 0, i32 0
  %165 = inttoptr i64 %161 to i8*
  %166 = bitcast %"class.blink::MarkingVisitor"* %160 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %167 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %166, align 8
  %168 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %167, i64 5
  %169 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %168, align 8
  call void %169(%"class.blink::Visitor"* %164, i8* nonnull %165, i8* %165, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_13InterpolationEEELj1EEEE5TraceEPNS_7VisitorEPKv) #8
  %170 = load i64, i64* %156, align 8
  br label %171

171:                                              ; preds = %163, %155
  %172 = phi i64 [ %158, %155 ], [ %170, %163 ]
  %173 = add i64 %172, -1
  store i64 %173, i64* %156, align 8
  br label %174

174:                                              ; preds = %138, %148, %171
  %175 = getelementptr inbounds %"class.WTF::HashTable.839", %"class.WTF::HashTable.839"* %0, i64 0, i32 2
  %176 = load i32, i32* %175, align 4
  %177 = add i32 %176, 1
  store i32 %177, i32* %175, align 4
  %178 = getelementptr inbounds %"class.WTF::HashTable.839", %"class.WTF::HashTable.839"* %0, i64 0, i32 3
  %179 = load i32, i32* %178, align 8
  %180 = add i32 %179, %177
  %181 = shl i32 %180, 1
  %182 = load i32, i32* %13, align 8
  %183 = icmp ult i32 %181, %182
  br i1 %183, label %186, label %184

184:                                              ; preds = %174
  %185 = call %"struct.WTF::KeyValuePair.841"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_10HeapVectorINS4_INS1_13InterpolationEEELj1EEEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_IS9_EEEESH_NS1_13HeapAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.839"* %0, %"struct.WTF::KeyValuePair.841"* %86)
  br label %186

186:                                              ; preds = %61, %174, %184
  %187 = phi i8 [ 1, %174 ], [ 1, %184 ], [ 0, %61 ]
  %188 = phi %"struct.WTF::KeyValuePair.841"* [ %86, %174 ], [ %185, %184 ], [ %42, %61 ]
  %189 = insertvalue { %"struct.WTF::KeyValuePair.841"*, i8 } undef, %"struct.WTF::KeyValuePair.841"* %188, 0
  %190 = insertvalue { %"struct.WTF::KeyValuePair.841"*, i8 } %189, i8 %187, 1
  ret { %"struct.WTF::KeyValuePair.841"*, i8 } %190
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.841"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_10HeapVectorINS4_INS1_13InterpolationEEELj1EEEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_IS9_EEEESH_NS1_13HeapAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.839"*, %"struct.WTF::KeyValuePair.841"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.839", %"class.WTF::HashTable.839"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.839", %"class.WTF::HashTable.839"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #8
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %23, i8* %24) #8
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #8
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #8
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.841"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_10HeapVectorINS4_INS1_13InterpolationEEELj1EEEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_IS9_EEEESH_NS1_13HeapAllocatorEE12ExpandBufferEjPSA_Rb(%"class.WTF::HashTable.839"* %0, i32 %35, %"struct.WTF::KeyValuePair.841"* %1, i8* nonnull dereferenceable(1) %4) #8
  %37 = load i8, i8* %4, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #8
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_13InterpolationEEELj1EEEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSI_ISB_EEEESJ_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #8
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"struct.WTF::KeyValuePair.841"*
  %44 = call %"struct.WTF::KeyValuePair.841"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_10HeapVectorINS4_INS1_13InterpolationEEELj1EEEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_IS9_EEEESH_NS1_13HeapAllocatorEE8RehashToEPSA_jSM_(%"class.WTF::HashTable.839"* %0, %"struct.WTF::KeyValuePair.841"* %43, i32 %40, %"struct.WTF::KeyValuePair.841"* %1) #8
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.841"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.841"* %46
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.841"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_10HeapVectorINS4_INS1_13InterpolationEEELj1EEEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_IS9_EEEESH_NS1_13HeapAllocatorEE12ExpandBufferEjPSA_Rb(%"class.WTF::HashTable.839"*, i32, %"struct.WTF::KeyValuePair.841"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::PropertyHandle", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !3

11:                                               ; preds = %4
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #8
  br label %13

13:                                               ; preds = %11, %4
  %14 = phi i8* [ %12, %11 ], [ %9, %4 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 6
  %18 = load i8, i8* %17, align 8, !range !4
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 16
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %28, label %24

24:                                               ; preds = %13, %20
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 13
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %20, %24
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0)) #8
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  br label %31

31:                                               ; preds = %24, %28
  %32 = getelementptr inbounds %"class.WTF::HashTable.839", %"class.WTF::HashTable.839"* %0, i64 0, i32 0
  %33 = load %"struct.WTF::KeyValuePair.841"*, %"struct.WTF::KeyValuePair.841"** %32, align 8
  %34 = icmp eq %"struct.WTF::KeyValuePair.841"* %33, null
  br i1 %34, label %150, label %35

35:                                               ; preds = %31
  %36 = zext i32 %1 to i64
  %37 = shl nuw nsw i64 %36, 5
  %38 = bitcast %"struct.WTF::KeyValuePair.841"* %33 to i8*
  %39 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %38, i64 %37) #8
  br i1 %39, label %40, label %150

40:                                               ; preds = %35
  store i8 1, i8* %3, align 1
  %41 = getelementptr inbounds %"class.WTF::HashTable.839", %"class.WTF::HashTable.839"* %0, i64 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = load %"struct.WTF::KeyValuePair.841"*, %"struct.WTF::KeyValuePair.841"** %32, align 8
  %44 = zext i32 %42 to i64
  %45 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_13InterpolationEEELj1EEEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSI_ISB_EEEESJ_NS_13HeapAllocatorEEEEEE4CallEm(i64 %44) #8
  %46 = bitcast %"class.blink::HeapHashTableBacking"* %45 to %"struct.WTF::KeyValuePair.841"*
  %47 = icmp eq i32 %42, 0
  br i1 %47, label %54, label %48

48:                                               ; preds = %40
  %49 = bitcast %"class.blink::PropertyHandle"* %5 to i8*
  %50 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 0
  %51 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 1
  %52 = bitcast %union.anon.77* %51 to i8*
  %53 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %65

54:                                               ; preds = %147, %40
  %55 = phi %"struct.WTF::KeyValuePair.841"* [ null, %40 ], [ %72, %147 ]
  %56 = bitcast %"class.WTF::HashTable.839"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %45, %"class.blink::HeapHashTableBacking"** %56, align 8
  %57 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %45, i64 0, i32 0
  %61 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %60) #8
  br label %62

62:                                               ; preds = %54, %59
  %63 = bitcast %"struct.WTF::KeyValuePair.841"* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 %37, i1 false)
  %64 = call %"struct.WTF::KeyValuePair.841"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_10HeapVectorINS4_INS1_13InterpolationEEELj1EEEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_IS9_EEEESH_NS1_13HeapAllocatorEE8RehashToEPSA_jSM_(%"class.WTF::HashTable.839"* %0, %"struct.WTF::KeyValuePair.841"* %43, i32 %1, %"struct.WTF::KeyValuePair.841"* %55)
  br label %150

65:                                               ; preds = %147, %48
  %66 = phi i64 [ 0, %48 ], [ %148, %147 ]
  %67 = phi %"struct.WTF::KeyValuePair.841"* [ null, %48 ], [ %72, %147 ]
  %68 = load %"struct.WTF::KeyValuePair.841"*, %"struct.WTF::KeyValuePair.841"** %32, align 8
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %68, i64 %66
  %70 = icmp eq %"struct.WTF::KeyValuePair.841"* %69, %2
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %46, i64 %66
  %72 = select i1 %70, %"struct.WTF::KeyValuePair.841"* %71, %"struct.WTF::KeyValuePair.841"* %67
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %69, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #8
  store i32 0, i32* %50, align 8, !alias.scope !10
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 16, i1 false) #8, !alias.scope !10
  %74 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %73, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %5) #8
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %65
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #8
  br label %90

90:                                               ; preds = %65, %86, %89
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %69, i64 0, i32 0, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = icmp eq i32 %92, 1
  %94 = or i1 %74, %93
  br i1 %94, label %95, label %97

95:                                               ; preds = %90
  %96 = bitcast %"struct.WTF::KeyValuePair.841"* %71 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 32, i1 false)
  br label %147

97:                                               ; preds = %90
  %98 = load %"struct.WTF::KeyValuePair.841"*, %"struct.WTF::KeyValuePair.841"** %32, align 8
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %98, i64 %66
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %46, i64 %66, i32 0, i32 2, i32 0, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %116, label %103

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  br i1 %107, label %110, label %112

110:                                              ; preds = %103
  %111 = add i32 %109, -1
  store i32 %111, i32* %108, align 4
  br label %112

112:                                              ; preds = %110, %103
  %113 = phi i32 [ %111, %110 ], [ %109, %103 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %101) #8
  br label %116

116:                                              ; preds = %97, %112, %115
  %117 = bitcast %"struct.WTF::KeyValuePair.841"* %71 to i8*
  %118 = bitcast %"struct.WTF::KeyValuePair.841"* %99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %118, i64 16, i1 false) #8
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %46, i64 %66, i32 0, i32 2
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %98, i64 %66, i32 0, i32 2
  %121 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %120, i64 0, i32 0, i32 0, i32 0
  %122 = bitcast %"class.WTF::AtomicString"* %120 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.WTF::AtomicString"* %119 to i64*
  store i64 %123, i64* %124, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %121, align 8
  %125 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %46, i64 %66, i32 1
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %98, i64 %66, i32 1
  %127 = bitcast %"class.blink::Member.842"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.blink::Member.842"* %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = load %"struct.WTF::KeyValuePair.841"*, %"struct.WTF::KeyValuePair.841"** %32, align 8
  %131 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %130, i64 %66, i32 0, i32 2, i32 0, i32 0, i32 0
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %116
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #8
  br label %147

147:                                              ; preds = %146, %143, %116, %95
  %148 = add nuw nsw i64 %66, 1
  %149 = icmp eq i64 %148, %44
  br i1 %149, label %54, label %65

150:                                              ; preds = %35, %31, %62
  %151 = phi %"struct.WTF::KeyValuePair.841"* [ %64, %62 ], [ null, %31 ], [ null, %35 ]
  ret %"struct.WTF::KeyValuePair.841"* %151
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.841"* @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_10HeapVectorINS4_INS1_13InterpolationEEELj1EEEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_IS9_EEEESH_NS1_13HeapAllocatorEE8RehashToEPSA_jSM_(%"class.WTF::HashTable.839"*, %"struct.WTF::KeyValuePair.841"*, i32, %"struct.WTF::KeyValuePair.841"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::PropertyHandle", align 8
  %6 = alloca %"class.WTF::HashTable.839", align 8
  %7 = bitcast %"class.WTF::HashTable.839"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.WTF::HashTable.839", %"class.WTF::HashTable.839"* %6, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.839", %"class.WTF::HashTable.839"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.WTF::HashTable.839", %"class.WTF::HashTable.839"* %6, i64 0, i32 2
  %11 = getelementptr inbounds %"class.WTF::HashTable.839", %"class.WTF::HashTable.839"* %6, i64 0, i32 3
  %12 = bitcast %"class.WTF::HashTable.839"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.841"* %1, %"struct.WTF::KeyValuePair.841"** %8, align 8
  store i32 %2, i32* %9, align 8
  store i32 0, i32* %10, align 4
  store i32 0, i32* %11, align 8
  %13 = getelementptr inbounds %"class.WTF::HashTable.839", %"class.WTF::HashTable.839"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.841"* %1 to i64
  %18 = bitcast %"struct.WTF::KeyValuePair.841"* %1 to i8*
  br label %30

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"class.WTF::HashTable.839", %"class.WTF::HashTable.839"* %0, i64 0, i32 0
  %21 = bitcast %"class.blink::PropertyHandle"* %5 to i8*
  %22 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 0
  %23 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 1
  %24 = bitcast %union.anon.77* %23 to i8*
  %25 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %62

26:                                               ; preds = %130
  %27 = bitcast %"class.WTF::HashTable.839"* %6 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = ptrtoint i8* %28 to i64
  br label %30

30:                                               ; preds = %16, %26
  %31 = phi i64 [ %17, %16 ], [ %29, %26 ]
  %32 = phi i32 [ 0, %16 ], [ %132, %26 ]
  %33 = phi i8* [ %18, %16 ], [ %28, %26 ]
  %34 = phi %"struct.WTF::KeyValuePair.841"* [ null, %16 ], [ %131, %26 ]
  %35 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %30
  %38 = bitcast %"class.WTF::HashTable.839"* %6 to i64*
  br label %43

39:                                               ; preds = %30
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %33) #8
  %40 = load i32, i32* %13, align 8
  %41 = bitcast %"class.WTF::HashTable.839"* %6 to i64*
  %42 = load i64, i64* %41, align 8
  br label %43

43:                                               ; preds = %37, %39
  %44 = phi i64* [ %38, %37 ], [ %41, %39 ]
  %45 = phi i64 [ %31, %37 ], [ %42, %39 ]
  %46 = phi i32 [ %32, %37 ], [ %40, %39 ]
  %47 = bitcast %"class.WTF::HashTable.839"* %0 to i64*
  %48 = load i64, i64* %47, align 8
  store atomic i64 %45, i64* %47 monotonic, align 8
  %49 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %43
  %52 = inttoptr i64 %45 to i8*
  %53 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %52) #8
  br label %54

54:                                               ; preds = %43, %51
  store i32 %2, i32* %13, align 8
  store i64 %48, i64* %44, align 8
  store i32 %46, i32* %9, align 8
  %55 = icmp eq i64 %48, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = inttoptr i64 %48 to %"struct.WTF::KeyValuePair.841"*
  call void @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_10HeapVectorINS4_INS1_13InterpolationEEELj1EEEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_IS9_EEEESH_NS1_13HeapAllocatorEE29DeleteAllBucketsAndDeallocateEPSA_j(%"struct.WTF::KeyValuePair.841"* nonnull %57, i32 %46) #8
  store atomic i64 0, i64* %44 monotonic, align 8
  store i32 0, i32* %9, align 8
  store i32 0, i32* %10, align 4
  br label %58

58:                                               ; preds = %54, %56
  %59 = getelementptr inbounds %"class.WTF::HashTable.839", %"class.WTF::HashTable.839"* %0, i64 0, i32 3
  %60 = load i32, i32* %59, align 8
  %61 = and i32 %60, -2147483648
  store i32 %61, i32* %59, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8
  ret %"struct.WTF::KeyValuePair.841"* %34

62:                                               ; preds = %19, %130
  %63 = phi %"struct.WTF::KeyValuePair.841"* [ null, %19 ], [ %131, %130 ]
  %64 = phi i32 [ 0, %19 ], [ %132, %130 ]
  %65 = load %"struct.WTF::KeyValuePair.841"*, %"struct.WTF::KeyValuePair.841"** %20, align 8
  %66 = zext i32 %64 to i64
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %65, i64 %66
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %67, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #8
  store i32 0, i32* %22, align 8, !alias.scope !15
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #8, !alias.scope !15
  %69 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %68, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %5) #8
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %62
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %81

79:                                               ; preds = %72
  %80 = add i32 %78, -1
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %79, %72
  %82 = phi i32 [ %80, %79 ], [ %78, %72 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #8
  br label %85

85:                                               ; preds = %62, %81, %84
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #8
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %67, i64 0, i32 0, i32 0
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, 1
  %89 = or i1 %69, %88
  br i1 %89, label %130, label %90

90:                                               ; preds = %85
  %91 = load %"struct.WTF::KeyValuePair.841"*, %"struct.WTF::KeyValuePair.841"** %20, align 8
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %91, i64 %66
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %92, i64 0, i32 0
  %94 = call { %"struct.WTF::KeyValuePair.841"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_10HeapVectorINS4_INS1_13InterpolationEEELj1EEEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_IS9_EEEESH_NS1_13HeapAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorISE_SJ_SK_EES2_EENSt3__14pairIPSA_bEERKT0_(%"class.WTF::HashTable.839"* nonnull %6, %"class.blink::PropertyHandle"* dereferenceable(24) %93) #8
  %95 = extractvalue { %"struct.WTF::KeyValuePair.841"*, i8 } %94, 0
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %95, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %90
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #8
  br label %112

112:                                              ; preds = %90, %108, %111
  %113 = bitcast %"struct.WTF::KeyValuePair.841"* %95 to i8*
  %114 = bitcast %"struct.WTF::KeyValuePair.841"* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 16, i1 false) #8
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %95, i64 0, i32 0, i32 2
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %91, i64 %66, i32 0, i32 2
  %117 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.WTF::AtomicString"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.WTF::AtomicString"* %115 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %117, align 8
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %95, i64 0, i32 1
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %91, i64 %66, i32 1
  %123 = bitcast %"class.blink::Member.842"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.blink::Member.842"* %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = load %"struct.WTF::KeyValuePair.841"*, %"struct.WTF::KeyValuePair.841"** %20, align 8
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %126, i64 %66
  %128 = icmp eq %"struct.WTF::KeyValuePair.841"* %127, %3
  %129 = select i1 %128, %"struct.WTF::KeyValuePair.841"* %95, %"struct.WTF::KeyValuePair.841"* %63
  br label %130

130:                                              ; preds = %85, %112
  %131 = phi %"struct.WTF::KeyValuePair.841"* [ %63, %85 ], [ %129, %112 ]
  %132 = add i32 %64, 1
  %133 = load i32, i32* %13, align 8
  %134 = icmp eq i32 %132, %133
  br i1 %134, label %26, label %62
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_13InterpolationEEELj1EEEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSI_ISB_EEEESJ_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.4, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 5
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS1_12KeyValuePairIS3_NS_6MemberINS_10HeapVectorINS5_INS_13InterpolationEEELj1EEEEEEENS1_24KeyValuePairKeyExtractorENS1_11DefaultHashIS3_E4HashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSH_ISA_EEEESI_NS_13HeapAllocatorEEEE14AllocateObjectISN_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS1_12KeyValuePairIS3_NS_6MemberINS_10HeapVectorINS5_INS_13InterpolationEEELj1EEEEEEENS1_24KeyValuePairKeyExtractorENS1_11DefaultHashIS3_E4HashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSH_ISA_EEEESI_NS_13HeapAllocatorEEEE14AllocateObjectISN_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_13InterpolationEEELj1EEEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSI_ISB_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_13InterpolationEEELj1EEEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSI_ISB_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.38"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_13InterpolationEEELj1EEEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSI_ISB_EEEESJ_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.38"*)) #8
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([532 x i8], [532 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_14PropertyHandleENS_12KeyValuePairIS4_NS1_6MemberINS1_10HeapVectorINS6_INS1_13InterpolationEEELj1EEEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS4_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSI_ISB_EEEESJ_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #6 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #8
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %21, i8* %22) #8
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #8
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #8
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_13InterpolationEEELj1EEEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSI_ISB_EEEESJ_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_13InterpolationEEELj1EEEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSI_ISB_EEEESJ_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #8
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS4_NS3_6MemberINS3_10HeapVectorINS6_INS3_13InterpolationEEELj1EEEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS4_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSI_ISB_EEEESJ_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #8
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS3_12KeyValuePairIS5_NS_6MemberINS_10HeapVectorINS7_INS_13InterpolationEEELj1EEEEEEENS3_24KeyValuePairKeyExtractorENS3_11DefaultHashIS5_E4HashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSJ_ISC_EEEESK_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::HeapHashTableBacking"*
  tail call void @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS1_12KeyValuePairIS3_NS_6MemberINS_10HeapVectorINS5_INS_13InterpolationEEELj1EEEEEEENS1_24KeyValuePairKeyExtractorENS1_11DefaultHashIS3_E4HashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSH_ISA_EEEESI_NS_13HeapAllocatorEEEE8FinalizeEv(%"class.blink::HeapHashTableBacking"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS2_12KeyValuePairIS4_NS_6MemberINS_10HeapVectorINS6_INS_13InterpolationEEELj1EEEEEEENS2_24KeyValuePairKeyExtractorENS2_11DefaultHashIS4_E4HashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSI_ISB_EEEESJ_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.38"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS4_NS3_6MemberINS3_10HeapVectorINS6_INS3_13InterpolationEEELj1EEEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS4_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSI_ISB_EEEESJ_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = alloca %"class.blink::PropertyHandle", align 8
  %5 = alloca %"class.WTF::internal::ConcurrentBucket", align 8
  %6 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.841"*
  %7 = getelementptr inbounds i8, i8* %1, i64 -2
  %8 = bitcast i8* %7 to i16*
  %9 = load i16, i16* %8, align 2
  %10 = lshr i16 %9, 2
  %11 = icmp eq i16 %10, 0
  br i1 %11, label %12, label %20, !prof !3

12:                                               ; preds = %2
  %13 = getelementptr inbounds i8, i8* %1, i64 -8
  %14 = ptrtoint i8* %13 to i64
  %15 = and i64 %14, -131072
  %16 = inttoptr i64 %15 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 4144
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 16
  br label %23

20:                                               ; preds = %2
  %21 = zext i16 %10 to i64
  %22 = shl nuw nsw i64 %21, 3
  br label %23

23:                                               ; preds = %12, %20
  %24 = phi i64 [ %19, %12 ], [ %22, %20 ]
  %25 = add i64 %24, -8
  %26 = lshr i64 %25, 5
  %27 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %28 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %27, align 8
  %29 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %28, i64 3
  %30 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.blink::Visitor"* %0) #8
  %32 = icmp eq i64 %26, 0
  br i1 %32, label %56, label %33

33:                                               ; preds = %23
  %34 = bitcast %"class.blink::PropertyHandle"* %4 to i8*
  %35 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 0
  %36 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 1
  %37 = bitcast %union.anon.77* %36 to i8*
  %38 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %39 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %40 = getelementptr inbounds %"class.WTF::internal::ConcurrentBucket", %"class.WTF::internal::ConcurrentBucket"* %5, i64 0, i32 0, i64 0
  %41 = getelementptr inbounds %"class.WTF::internal::ConcurrentBucket", %"class.WTF::internal::ConcurrentBucket"* %5, i64 0, i32 0, i64 8
  %42 = getelementptr inbounds %"class.WTF::internal::ConcurrentBucket", %"class.WTF::internal::ConcurrentBucket"* %5, i64 0, i32 0, i64 16
  %43 = getelementptr inbounds %"class.WTF::internal::ConcurrentBucket", %"class.WTF::internal::ConcurrentBucket"* %5, i64 0, i32 1
  %44 = bitcast %"class.WTF::internal::ConcurrentBucket"* %5 to i64*
  %45 = bitcast i8* %41 to i64*
  %46 = bitcast i8* %42 to i64*
  %47 = bitcast %"class.WTF::internal::ConcurrentBucket"* %5 to %"class.blink::PropertyHandle"*
  %48 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %49 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %50 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %51 = bitcast %union.anon.77* %50 to i8*
  %52 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %53 = bitcast %"class.WTF::internal::ConcurrentBucket"* %5 to i32*
  %54 = getelementptr inbounds %"class.WTF::internal::ConcurrentBucket", %"class.WTF::internal::ConcurrentBucket"* %5, i64 0, i32 0, i64 24
  %55 = bitcast i8* %54 to i64**
  br label %57

56:                                               ; preds = %134, %23
  ret void

57:                                               ; preds = %134, %33
  %58 = phi i64 [ 0, %33 ], [ %135, %134 ]
  br i1 %31, label %59, label %100

59:                                               ; preds = %57
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %40) #8
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %6, i64 %58
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %6, i64 %58, i32 1
  store %"class.blink::Member.842"* %61, %"class.blink::Member.842"** %43, align 8
  %62 = bitcast %"struct.WTF::KeyValuePair.841"* %60 to i64*
  %63 = load atomic i64, i64* %62 monotonic, align 8
  store i64 %63, i64* %44, align 8
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %6, i64 %58, i32 0, i32 1
  %65 = bitcast %union.anon.77* %64 to i64*
  %66 = load atomic i64, i64* %65 monotonic, align 8
  store i64 %66, i64* %45, align 8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %6, i64 %58, i32 0, i32 2
  %68 = bitcast %"class.WTF::AtomicString"* %67 to i64*
  %69 = load atomic i64, i64* %68 monotonic, align 8
  store i64 %69, i64* %46, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #8
  store i32 0, i32* %49, align 8, !alias.scope !20
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 16, i1 false) #8, !alias.scope !20
  %70 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* nonnull %47, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #8
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %59
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #8
  br label %86

86:                                               ; preds = %59, %82, %85
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #8
  %87 = load i32, i32* %53, align 8
  %88 = icmp eq i32 %87, 1
  %89 = or i1 %70, %88
  br i1 %89, label %99, label %90

90:                                               ; preds = %86
  %91 = load i64*, i64** %55, align 8
  %92 = load atomic i64, i64* %91 monotonic, align 8
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %99, label %94

94:                                               ; preds = %90
  %95 = inttoptr i64 %92 to i8*
  %96 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %39, align 8
  %97 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %96, i64 5
  %98 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %97, align 8
  call void %98(%"class.blink::Visitor"* %0, i8* nonnull %95, i8* nonnull %95, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_13InterpolationEEELj1EEEE5TraceEPNS_7VisitorEPKv) #8
  br label %99

99:                                               ; preds = %94, %90, %86
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %40) #8
  br label %134

100:                                              ; preds = %57
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %6, i64 %58
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %101, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #8
  store i32 0, i32* %35, align 8, !alias.scope !25
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false) #8, !alias.scope !25
  %103 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %102, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %4) #8
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #8
  br label %119

119:                                              ; preds = %100, %115, %118
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #8
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %101, i64 0, i32 0, i32 0
  %121 = load i32, i32* %120, align 8
  %122 = icmp eq i32 %121, 1
  %123 = or i1 %103, %122
  br i1 %123, label %134, label %124

124:                                              ; preds = %119
  %125 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %6, i64 %58, i32 1
  %126 = bitcast %"class.blink::Member.842"* %125 to i64*
  %127 = load atomic i64, i64* %126 monotonic, align 8
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %134, label %129

129:                                              ; preds = %124
  %130 = inttoptr i64 %127 to i8*
  %131 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %39, align 8
  %132 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %131, i64 5
  %133 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %132, align 8
  call void %133(%"class.blink::Visitor"* %0, i8* nonnull %130, i8* nonnull %130, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_13InterpolationEEELj1EEEE5TraceEPNS_7VisitorEPKv) #8
  br label %134

134:                                              ; preds = %129, %124, %99, %119
  %135 = add nuw nsw i64 %58, 1
  %136 = icmp eq i64 %135, %26
  br i1 %136, label %56, label %57
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_13InterpolationEEELj1EEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = bitcast i8* %1 to i8**
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8** %7) #8
  br label %38

12:                                               ; preds = %2
  %13 = inttoptr i64 %4 to %"class.blink::Member.3"*
  %14 = getelementptr inbounds i8, i8* %1, i64 16
  %15 = bitcast i8* %14 to %"class.blink::Member.3"*
  %16 = icmp eq %"class.blink::Member.3"* %15, %13
  %17 = bitcast i8* %1 to i8**
  %18 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %19 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %19, i64 11
  %21 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %20, align 8
  tail call void %21(%"class.blink::Visitor"* %0, i8** %17) #8
  br i1 %16, label %28, label %22

22:                                               ; preds = %12
  %23 = inttoptr i64 %4 to i8*
  %24 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %25 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %25, i64 5
  %27 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, align 8
  tail call void %27(%"class.blink::Visitor"* %0, i8* nonnull %23, i8* nonnull %23, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13InterpolationEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #8
  br label %38

28:                                               ; preds = %12
  %29 = inttoptr i64 %4 to i64*
  %30 = load atomic i64, i64* %29 monotonic, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %38, label %32

32:                                               ; preds = %28
  %33 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %34 = inttoptr i64 %30 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %33, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13InterpolationEE5TraceEPNS_7VisitorEPKv) #8
  br label %38

38:                                               ; preds = %6, %22, %28, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13InterpolationEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.3"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.3", %"class.blink::Member.3"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.3"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13InterpolationEE5TraceEPNS_7VisitorEPKv) #8
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13InterpolationEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Interpolation"*
  %4 = bitcast i8* %1 to void (%"class.blink::Interpolation"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Interpolation"*, %"class.blink::Visitor"*)**, void (%"class.blink::Interpolation"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Interpolation"*, %"class.blink::Visitor"*)*, void (%"class.blink::Interpolation"*, %"class.blink::Visitor"*)** %5, i64 7
  %7 = load void (%"class.blink::Interpolation"*, %"class.blink::Visitor"*)*, void (%"class.blink::Interpolation"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Interpolation"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_14PropertyHandleENS1_12KeyValuePairIS3_NS_6MemberINS_10HeapVectorINS5_INS_13InterpolationEEELj1EEEEEEENS1_24KeyValuePairKeyExtractorENS1_11DefaultHashIS3_E4HashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSH_ISA_EEEESI_NS_13HeapAllocatorEEEE8FinalizeEv(%"class.blink::HeapHashTableBacking"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::PropertyHandle", align 8
  %3 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %0, i64 -8, i32 0
  %4 = getelementptr inbounds i8, i8* %3, i64 6
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %16, !prof !3

9:                                                ; preds = %1
  %10 = ptrtoint i8* %3 to i64
  %11 = and i64 %10, -131072
  %12 = inttoptr i64 %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 4144
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 16
  br label %19

16:                                               ; preds = %1
  %17 = zext i16 %7 to i64
  %18 = shl nuw nsw i64 %17, 3
  br label %19

19:                                               ; preds = %9, %16
  %20 = phi i64 [ %15, %9 ], [ %18, %16 ]
  %21 = add i64 %20, -8
  %22 = lshr i64 %21, 5
  %23 = bitcast %"class.blink::HeapHashTableBacking"* %0 to %"struct.WTF::KeyValuePair.841"*
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %19
  %26 = bitcast %"class.blink::PropertyHandle"* %2 to i8*
  %27 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 0
  %28 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 1
  %29 = bitcast %union.anon.77* %28 to i8*
  %30 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %32

31:                                               ; preds = %75, %19
  ret void

32:                                               ; preds = %25, %75
  %33 = phi i64 [ 0, %25 ], [ %77, %75 ]
  %34 = phi i32 [ 0, %25 ], [ %76, %75 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %23, i64 %33
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %35, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #8
  store i32 0, i32* %27, align 8, !alias.scope !30
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #8, !alias.scope !30
  %37 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %36, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %2) #8
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #8
  br label %53

53:                                               ; preds = %32, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #8
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %35, i64 0, i32 0, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, 1
  %57 = or i1 %37, %56
  br i1 %57, label %75, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %23, i64 %33, i32 0, i32 2, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #8
  br label %75

75:                                               ; preds = %74, %71, %58, %53
  %76 = add i32 %34, 1
  %77 = zext i32 %76 to i64
  %78 = icmp ugt i64 %22, %77
  br i1 %78, label %32, label %31
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.841"*, i8 } @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_10HeapVectorINS4_INS1_13InterpolationEEELj1EEEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_IS9_EEEESH_NS1_13HeapAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorISE_SJ_SK_EES2_EENSt3__14pairIPSA_bEERKT0_(%"class.WTF::HashTable.839"*, %"class.blink::PropertyHandle"* dereferenceable(24)) local_unnamed_addr #6 comdat align 2 {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable.839", %"class.WTF::HashTable.839"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.841"*, %"struct.WTF::KeyValuePair.841"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.839", %"class.WTF::HashTable.839"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, -1
  %9 = zext i32 %8 to i64
  %10 = tail call i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"* %1) #8
  %11 = and i32 %10, %8
  %12 = zext i32 %11 to i64
  %13 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %14 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %16 = bitcast %union.anon.77* %15 to i8*
  %17 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %18 = xor i32 %10, -1
  %19 = lshr i32 %10, 23
  %20 = add i32 %19, %18
  %21 = shl i32 %20, 12
  %22 = xor i32 %21, %20
  %23 = lshr i32 %22, 7
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 2
  %26 = xor i32 %25, %24
  %27 = lshr i32 %26, 20
  %28 = xor i32 %27, %26
  %29 = or i32 %28, 1
  %30 = zext i32 %29 to i64
  br label %31

31:                                               ; preds = %61, %2
  %32 = phi i64 [ 0, %2 ], [ %65, %61 ]
  %33 = phi i64 [ 0, %2 ], [ %67, %61 ]
  %34 = phi i64 [ %12, %2 ], [ %69, %61 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %5, i64 %34
  %36 = ptrtoint %"struct.WTF::KeyValuePair.841"* %35 to i64
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %35, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #8
  store i32 0, i32* %14, align 8, !alias.scope !35
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #8, !alias.scope !35
  %38 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %37, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #8
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %31
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #8
  br label %54

54:                                               ; preds = %31, %50, %53
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #8
  br i1 %38, label %55, label %59

55:                                               ; preds = %54
  %56 = ptrtoint %"struct.WTF::KeyValuePair.841"* %35 to i64
  %57 = icmp eq i64 %32, 0
  %58 = select i1 %57, i64 %56, i64 %32
  br label %72

59:                                               ; preds = %54
  %60 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %37, %"class.blink::PropertyHandle"* dereferenceable(24) %1) #8
  br i1 %60, label %70, label %61

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %35, i64 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = icmp eq i32 %63, 1
  %65 = select i1 %64, i64 %36, i64 %32
  %66 = icmp eq i64 %33, 0
  %67 = select i1 %66, i64 %30, i64 %33
  %68 = add i64 %67, %34
  %69 = and i64 %68, %9
  br label %31

70:                                               ; preds = %59
  %71 = ptrtoint %"struct.WTF::KeyValuePair.841"* %35 to i64
  br label %72

72:                                               ; preds = %70, %55
  %73 = phi i64 [ %58, %55 ], [ %71, %70 ]
  %74 = phi i8 [ 0, %55 ], [ 1, %70 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.841"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.841"*, i8 } undef, %"struct.WTF::KeyValuePair.841"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.841"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.841"*, i8 } %77
}

declare i32 @_ZNK5blink14PropertyHandle7GetHashEv(%"class.blink::PropertyHandle"*) local_unnamed_addr #2

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink14PropertyHandleENS_12KeyValuePairIS2_NS1_6MemberINS1_10HeapVectorINS4_INS1_13InterpolationEEELj1EEEEEEENS_24KeyValuePairKeyExtractorENS_11DefaultHashIS2_E4HashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_IS9_EEEESH_NS1_13HeapAllocatorEE29DeleteAllBucketsAndDeallocateEPSA_j(%"struct.WTF::KeyValuePair.841"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::PropertyHandle", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %12, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.blink::PropertyHandle"* %3 to i8*
  %7 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 1
  %9 = bitcast %union.anon.77* %8 to i8*
  %10 = getelementptr inbounds %"class.blink::PropertyHandle", %"class.blink::PropertyHandle"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %11 = zext i32 %1 to i64
  br label %14

12:                                               ; preds = %61, %2
  %13 = bitcast %"struct.WTF::KeyValuePair.841"* %0 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* %13) #8
  ret void

14:                                               ; preds = %61, %5
  %15 = phi i64 [ 0, %5 ], [ %62, %61 ]
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %0, i64 %15
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %16, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  store i32 0, i32* %7, align 8, !alias.scope !40
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #8, !alias.scope !40
  %18 = call zeroext i1 @_ZNK5blink14PropertyHandleeqERKS0_(%"class.blink::PropertyHandle"* %17, %"class.blink::PropertyHandle"* nonnull dereferenceable(24) %3) #8
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %21
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i32 [ %29, %28 ], [ %27, %21 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #8
  br label %34

34:                                               ; preds = %14, %30, %33
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %16, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 1
  %38 = or i1 %18, %37
  br i1 %38, label %61, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %0, i64 %15, i32 0, i32 2, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #8
  br label %56

56:                                               ; preds = %39, %52, %55
  store i32 1, i32* %35, align 8, !alias.scope !45
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %0, i64 %15, i32 0, i32 1
  %58 = bitcast %union.anon.77* %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 16, i1 false) #8, !alias.scope !45
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.841", %"struct.WTF::KeyValuePair.841"* %0, i64 %15, i32 1
  %60 = bitcast %"class.blink::Member.842"* %59 to i64*
  store atomic i64 0, i64* %60 monotonic, align 8
  br label %61

61:                                               ; preds = %34, %56
  %62 = add nuw nsw i64 %15, 1
  %63 = icmp eq i64 %62, %11
  br i1 %63, label %12, label %14
}

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberINS_13InterpolationEEELj1EEEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_13InterpolationEEELj1EEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_13InterpolationEEELj1EEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.38"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_13InterpolationEEELj1EEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.38"*)) #8
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([105 x i8], [105 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10HeapVectorINS1_6MemberINS1_13InterpolationEEELj1EEEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_10HeapVectorINS_6MemberINS_13InterpolationEEELj1EEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 12
  %3 = bitcast i8* %2 to i32*
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  %6 = bitcast i8* %0 to %"class.blink::Member.3"**
  %7 = load %"class.blink::Member.3"*, %"class.blink::Member.3"** %6, align 8
  br i1 %5, label %15, label %8, !prof !3

8:                                                ; preds = %1
  %9 = icmp ne %"class.blink::Member.3"* %7, null
  %10 = getelementptr inbounds i8, i8* %0, i64 16
  %11 = bitcast i8* %10 to %"class.blink::Member.3"*
  %12 = icmp ne %"class.blink::Member.3"* %7, %11
  %13 = and i1 %9, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %8
  store i32 0, i32* %3, align 4
  br label %15

15:                                               ; preds = %1, %14, %8
  %16 = getelementptr inbounds i8, i8* %0, i64 16
  %17 = bitcast i8* %16 to %"class.blink::Member.3"*
  %18 = icmp eq %"class.blink::Member.3"* %7, %17
  br i1 %18, label %21, label %19, !prof !2

19:                                               ; preds = %15
  %20 = bitcast i8* %0 to %"class.WTF::VectorBuffer.848"*
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_13InterpolationEEELj1ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.848"* %20, %"class.blink::Member.3"* %7) #8
  br label %21

21:                                               ; preds = %15, %19
  store %"class.blink::Member.3"* null, %"class.blink::Member.3"** %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_13InterpolationEEELj1EEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_13InterpolationEEELj1ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.848"*, %"class.blink::Member.3"*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast %"class.blink::Member.3"* %1 to i8*
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %3) #8
  ret void
}

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13InterpolationEEELj1ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.847"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 2
  br i1 %3, label %4, label %43

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.847", %"class.WTF::Vector.847"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Member.3"*, %"class.blink::Member.3"** %5, align 8
  %7 = icmp eq %"class.blink::Member.3"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.847", %"class.WTF::Vector.847"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::Member.3"*
  %10 = icmp eq %"class.blink::Member.3"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.847"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.847", %"class.WTF::Vector.847"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %15, align 8
  br label %102

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.847", %"class.WTF::Vector.847"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.WTF::Vector.847", %"class.WTF::Vector.847"* %0, i64 0, i32 0
  %21 = ptrtoint i8* %8 to i64
  %22 = bitcast %"class.WTF::Vector.847"* %0 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.847", %"class.WTF::Vector.847"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %23, align 8
  %24 = icmp eq i8* %8, null
  %25 = bitcast %"class.blink::Member.3"* %6 to i8*
  %26 = shl nuw nsw i64 %19, 3
  br i1 %24, label %42, label %27, !prof !3

27:                                               ; preds = %16
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %8, i8* nonnull %25, i64 %26) #8
  %28 = icmp eq i32 %18, 0
  br i1 %28, label %42, label %29

29:                                               ; preds = %27, %39
  %30 = phi i64 [ %32, %39 ], [ %19, %27 ]
  %31 = phi %"class.blink::Member.3"* [ %40, %39 ], [ %9, %27 ]
  %32 = add nsw i64 %30, -1
  %33 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.blink::Member.3"* %31 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %37) #8
  br label %39

39:                                               ; preds = %35, %29
  %40 = getelementptr inbounds %"class.blink::Member.3", %"class.blink::Member.3"* %31, i64 1
  %41 = icmp eq i64 %32, 0
  br i1 %41, label %42, label %29

42:                                               ; preds = %39, %16, %27
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %25, i64 %26) #8
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_13InterpolationEEELj1ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.848"* %20, %"class.blink::Member.3"* %6) #8
  br label %102

43:                                               ; preds = %2
  %44 = zext i32 %1 to i64
  %45 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13InterpolationEEEEEmm(i64 %44) #8
  %46 = lshr i64 %45, 3
  %47 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13InterpolationEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %46) #8
  %48 = ptrtoint %"class.blink::HeapVectorBacking"* %47 to i64
  %49 = getelementptr inbounds %"class.WTF::Vector.847", %"class.WTF::Vector.847"* %0, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::Member.3"*, %"class.blink::Member.3"** %49, align 8
  %51 = getelementptr inbounds %"class.WTF::Vector.847", %"class.WTF::Vector.847"* %0, i64 0, i32 0, i32 0, i32 2
  %52 = icmp ne %"class.blink::HeapVectorBacking"* %47, null
  %53 = icmp ne %"class.blink::Member.3"* %50, null
  %54 = and i1 %52, %53
  br i1 %54, label %55, label %81, !prof !2

55:                                               ; preds = %43
  %56 = getelementptr inbounds %"class.WTF::Vector.847", %"class.WTF::Vector.847"* %0, i64 0, i32 0, i32 1, i64 0
  %57 = bitcast i8* %56 to %"class.blink::Member.3"*
  %58 = icmp ne %"class.blink::Member.3"* %50, %57
  %59 = load i32, i32* %51, align 4
  %60 = zext i32 %59 to i64
  %61 = bitcast %"class.blink::Member.3"* %50 to i8*
  %62 = shl nuw nsw i64 %60, 3
  %63 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %47, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %63, i8* nonnull %61, i64 %62) #8
  %64 = icmp eq i32 %59, 0
  %65 = or i1 %58, %64
  br i1 %65, label %81, label %66

66:                                               ; preds = %55
  %67 = bitcast %"class.blink::HeapVectorBacking"* %47 to %"class.blink::Member.3"*
  br label %68

68:                                               ; preds = %66, %78
  %69 = phi i64 [ %71, %78 ], [ %60, %66 ]
  %70 = phi %"class.blink::Member.3"* [ %79, %78 ], [ %67, %66 ]
  %71 = add nsw i64 %69, -1
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %68
  %75 = bitcast %"class.blink::Member.3"* %70 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %76) #8
  br label %78

78:                                               ; preds = %74, %68
  %79 = getelementptr inbounds %"class.blink::Member.3", %"class.blink::Member.3"* %70, i64 1
  %80 = icmp eq i64 %71, 0
  br i1 %80, label %81, label %68

81:                                               ; preds = %78, %43, %55
  %82 = bitcast %"class.WTF::Vector.847"* %0 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = load i32, i32* %51, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %83, i64 %86) #8
  %87 = load %"class.blink::Member.3"*, %"class.blink::Member.3"** %49, align 8
  %88 = getelementptr inbounds %"class.WTF::Vector.847", %"class.WTF::Vector.847"* %0, i64 0, i32 0, i32 1, i64 0
  %89 = bitcast i8* %88 to %"class.blink::Member.3"*
  %90 = icmp eq %"class.blink::Member.3"* %87, %89
  br i1 %90, label %93, label %91, !prof !2

91:                                               ; preds = %81
  %92 = getelementptr inbounds %"class.WTF::Vector.847", %"class.WTF::Vector.847"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_13InterpolationEEELj1ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.848"* %92, %"class.blink::Member.3"* %87) #8
  br label %93

93:                                               ; preds = %81, %91
  %94 = bitcast %"class.WTF::Vector.847"* %0 to i64*
  store atomic i64 %48, i64* %94 monotonic, align 8
  %95 = trunc i64 %46 to i32
  %96 = getelementptr inbounds %"class.WTF::Vector.847", %"class.WTF::Vector.847"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %95, i32* %96, align 8
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %47, i64 0, i32 0
  %101 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %100) #8
  br label %102

102:                                              ; preds = %99, %93, %42, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13InterpolationEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.9, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  ret i64 %20
}

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13InterpolationEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.10, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13InterpolationEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13InterpolationEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13InterpolationEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13InterpolationEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.38"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13InterpolationEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.38"*)) #8
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([167 x i8], [167 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13InterpolationEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13InterpolationEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13InterpolationEEELj1ENS1_13HeapAllocatorEE14AppendSlowCaseIRKS4_EEvOT_(%"class.WTF::Vector.847"*, %"class.blink::Member.3"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.847", %"class.WTF::Vector.847"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.847", %"class.WTF::Vector.847"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member.3"*, %"class.blink::Member.3"** %6, align 8
  %8 = icmp ugt %"class.blink::Member.3"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::Member.3", %"class.blink::Member.3"* %7, i64 %10
  %12 = icmp ugt %"class.blink::Member.3"* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_13InterpolationEEELj1ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.847"* %0, i32 %5) #8
  %14 = load %"class.blink::Member.3"*, %"class.blink::Member.3"** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"class.blink::Member.3"* %1 to i64
  %17 = ptrtoint %"class.blink::Member.3"* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 3
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_13InterpolationEEELj1ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.847"* %0, i32 %5) #8
  %20 = load %"class.blink::Member.3"*, %"class.blink::Member.3"** %6, align 8
  %21 = getelementptr inbounds %"class.blink::Member.3", %"class.blink::Member.3"* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"class.blink::Member.3"* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"class.blink::Member.3"* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::Member.3", %"class.blink::Member.3"* %23, i64 %26
  %28 = bitcast %"class.blink::Member.3"* %24 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.blink::Member.3"* %27 to i64*
  store atomic i64 %29, i64* %30 monotonic, align 8
  %31 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %22
  %34 = inttoptr i64 %29 to i8*
  %35 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %34) #8
  br label %36

36:                                               ; preds = %22, %33
  %37 = load i32, i32* %3, align 4
  %38 = add i32 %37, 1
  store i32 %38, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13InterpolationEEELj1ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.847"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.847", %"class.WTF::Vector.847"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #8
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.11, i64 0, i64 0), i8* %15, i8* %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #8
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13InterpolationEEELj1ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.847"* %0, i32 %27)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13InterpolationEEELj1ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.847"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.847", %"class.WTF::Vector.847"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %75, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.847", %"class.WTF::Vector.847"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.3"*, %"class.blink::Member.3"** %8, align 8
  %10 = icmp eq %"class.blink::Member.3"* %9, null
  br i1 %10, label %11, label %30

11:                                               ; preds = %7
  %12 = icmp ugt i32 %1, 1
  br i1 %12, label %13, label %26

13:                                               ; preds = %11
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13InterpolationEEEEEmm(i64 %14) #8
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13InterpolationEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #8
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = bitcast %"class.WTF::Vector.847"* %0 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = trunc i64 %16 to i32
  store i32 %20, i32* %4, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %75, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %24) #8
  br label %75

26:                                               ; preds = %11
  %27 = getelementptr inbounds %"class.WTF::Vector.847", %"class.WTF::Vector.847"* %0, i64 0, i32 0, i32 1, i64 0
  %28 = ptrtoint i8* %27 to i64
  %29 = bitcast %"class.WTF::Vector.847"* %0 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  store i32 1, i32* %4, align 8
  br label %75

30:                                               ; preds = %7
  %31 = getelementptr inbounds %"class.WTF::Vector.847", %"class.WTF::Vector.847"* %0, i64 0, i32 0, i32 1, i64 0
  %32 = bitcast i8* %31 to %"class.blink::Member.3"*
  %33 = icmp eq %"class.blink::Member.3"* %9, %32
  br i1 %33, label %49, label %34

34:                                               ; preds = %30
  %35 = icmp ult i32 %1, 2
  br i1 %35, label %41, label %36

36:                                               ; preds = %34
  %37 = zext i32 %1 to i64
  %38 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13InterpolationEEEEEmm(i64 %37) #8
  %39 = load %"class.blink::Member.3"*, %"class.blink::Member.3"** %8, align 8
  %40 = icmp eq %"class.blink::Member.3"* %39, null
  br i1 %40, label %49, label %41

41:                                               ; preds = %34, %36
  %42 = phi i64 [ %38, %36 ], [ 8, %34 ]
  %43 = phi %"class.blink::Member.3"* [ %39, %36 ], [ %9, %34 ]
  %44 = bitcast %"class.blink::Member.3"* %43 to i8*
  %45 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %44, i64 %42) #8
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = lshr i64 %42, 3
  %48 = trunc i64 %47 to i32
  store i32 %48, i32* %4, align 8
  br label %75

49:                                               ; preds = %30, %36, %41
  %50 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %51 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %50, i64 0, i32 1
  %52 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %51) #8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %56, !prof !3

54:                                               ; preds = %49
  %55 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %51, i8* %55) #8
  br label %56

56:                                               ; preds = %54, %49
  %57 = phi i8* [ %55, %54 ], [ %52, %49 ]
  %58 = bitcast i8* %57 to %"class.blink::ThreadState"**
  %59 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 6
  %61 = load i8, i8* %60, align 8, !range !4
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 16
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %71, label %67

67:                                               ; preds = %56, %63
  %68 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 13
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %63, %67
  %72 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0)) #8
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #8
  br label %74

74:                                               ; preds = %67, %71
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13InterpolationEEELj1ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.847"* %0, i32 %1)
  br label %75

75:                                               ; preds = %46, %26, %23, %13, %2, %74
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZNK5blink11InertEffect6SampleERNS_10HeapVectorINS_6MemberINS_13InterpolationEEELj0EEE(%"class.blink::InertEffect"*, %"class.blink::HeapVector"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRPFbRKN5blink6MemberINS1_13SampledEffectEEES6_EPS4_EEvT0_SB_T_(%"class.blink::Member"*, %"class.blink::Member"*, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.blink::Member", align 8
  br label %5

5:                                                ; preds = %297, %3
  %6 = phi %"class.blink::Member"* [ %1, %3 ], [ %264, %297 ]
  %7 = phi %"class.blink::Member"* [ %0, %3 ], [ %16, %297 ]
  %8 = ptrtoint %"class.blink::Member"* %6 to i64
  %9 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %6, i64 -1
  %10 = bitcast %"class.blink::Member"* %9 to i64*
  %11 = bitcast %"class.blink::Member"* %9 to i8**
  %12 = ptrtoint %"class.blink::Member"* %6 to i64
  br label %13

13:                                               ; preds = %306, %5
  %14 = phi %"class.blink::Member"* [ %7, %5 ], [ %307, %306 ]
  br label %15

15:                                               ; preds = %172, %13
  %16 = phi %"class.blink::Member"* [ %14, %13 ], [ %163, %172 ]
  %17 = ptrtoint %"class.blink::Member"* %16 to i64
  %18 = sub i64 %8, %17
  %19 = ashr exact i64 %18, 3
  switch i64 %19, label %57 [
    i64 0, label %310
    i64 1, label %310
    i64 2, label %20
    i64 3, label %42
    i64 4, label %46
    i64 5, label %51
  ]

20:                                               ; preds = %15
  %21 = load i1 (%"class.blink::Member"*, %"class.blink::Member"*)*, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** %2, align 8
  %22 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %6, i64 -1
  %23 = tail call zeroext i1 %21(%"class.blink::Member"* dereferenceable(8) %22, %"class.blink::Member"* dereferenceable(8) %16) #8
  br i1 %23, label %24, label %310

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::Member"* %16 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.blink::Member"* %22 to i64*
  %28 = load i64, i64* %27, align 8
  store atomic i64 %28, i64* %25 monotonic, align 8
  store atomic i64 %26, i64* %27 monotonic, align 8
  %29 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %35, label %31

31:                                               ; preds = %24
  %32 = bitcast %"class.blink::Member"* %16 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %33) #8
  br label %35

35:                                               ; preds = %31, %24
  %36 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %310, label %38

38:                                               ; preds = %35
  %39 = bitcast %"class.blink::Member"* %22 to i8**
  %40 = load i8*, i8** %39, align 8
  %41 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %40) #8
  br label %310

42:                                               ; preds = %15
  %43 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 1
  %44 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %6, i64 -1
  %45 = tail call i32 @_ZNSt3__17__sort3IRPFbRKN5blink6MemberINS1_13SampledEffectEEES6_EPS4_EEjT0_SB_SB_T_(%"class.blink::Member"* %16, %"class.blink::Member"* %43, %"class.blink::Member"* %44, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** dereferenceable(8) %2)
  br label %310

46:                                               ; preds = %15
  %47 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 1
  %48 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 2
  %49 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %6, i64 -1
  %50 = tail call i32 @_ZNSt3__17__sort4IRPFbRKN5blink6MemberINS1_13SampledEffectEEES6_EPS4_EEjT0_SB_SB_SB_T_(%"class.blink::Member"* %16, %"class.blink::Member"* %47, %"class.blink::Member"* %48, %"class.blink::Member"* %49, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** dereferenceable(8) %2)
  br label %310

51:                                               ; preds = %15
  %52 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 1
  %53 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 2
  %54 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 3
  %55 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %6, i64 -1
  %56 = tail call i32 @_ZNSt3__17__sort5IRPFbRKN5blink6MemberINS1_13SampledEffectEEES6_EPS4_EEjT0_SB_SB_SB_SB_T_(%"class.blink::Member"* %16, %"class.blink::Member"* %52, %"class.blink::Member"* %53, %"class.blink::Member"* %54, %"class.blink::Member"* %55, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** dereferenceable(8) %2)
  br label %310

57:                                               ; preds = %15
  %58 = icmp slt i64 %18, 56
  br i1 %58, label %59, label %106

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 2
  %61 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 1
  %62 = tail call i32 @_ZNSt3__17__sort3IRPFbRKN5blink6MemberINS1_13SampledEffectEEES6_EPS4_EEjT0_SB_SB_T_(%"class.blink::Member"* %16, %"class.blink::Member"* %61, %"class.blink::Member"* %60, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** dereferenceable(8) %2) #8
  %63 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 3
  %64 = icmp eq %"class.blink::Member"* %63, %6
  br i1 %64, label %310, label %65

65:                                               ; preds = %59
  %66 = bitcast %"class.blink::Member"* %4 to i8*
  %67 = bitcast %"class.blink::Member"* %4 to i64*
  br label %68

68:                                               ; preds = %103, %65
  %69 = phi %"class.blink::Member"* [ %63, %65 ], [ %104, %103 ]
  %70 = phi %"class.blink::Member"* [ %60, %65 ], [ %69, %103 ]
  %71 = load i1 (%"class.blink::Member"*, %"class.blink::Member"*)*, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** %2, align 8
  %72 = call zeroext i1 %71(%"class.blink::Member"* dereferenceable(8) %69, %"class.blink::Member"* dereferenceable(8) %70) #8
  br i1 %72, label %73, label %103

73:                                               ; preds = %68
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #8
  %74 = bitcast %"class.blink::Member"* %69 to i64*
  %75 = load i64, i64* %74, align 8
  store i64 %75, i64* %67, align 8
  br label %76

76:                                               ; preds = %89, %73
  %77 = phi %"class.blink::Member"* [ %69, %73 ], [ %78, %89 ]
  %78 = phi %"class.blink::Member"* [ %70, %73 ], [ %91, %89 ]
  %79 = bitcast %"class.blink::Member"* %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast %"class.blink::Member"* %77 to i64*
  store atomic i64 %80, i64* %81 monotonic, align 8
  %82 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %87, label %84

84:                                               ; preds = %76
  %85 = inttoptr i64 %80 to i8*
  %86 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %85) #8
  br label %87

87:                                               ; preds = %84, %76
  %88 = icmp eq %"class.blink::Member"* %78, %16
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = load i1 (%"class.blink::Member"*, %"class.blink::Member"*)*, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** %2, align 8
  %91 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %78, i64 -1
  %92 = call zeroext i1 %90(%"class.blink::Member"* nonnull dereferenceable(8) %4, %"class.blink::Member"* dereferenceable(8) %91) #8
  br i1 %92, label %76, label %93

93:                                               ; preds = %87, %89
  %94 = phi %"class.blink::Member"* [ %78, %89 ], [ %16, %87 ]
  %95 = bitcast %"class.blink::Member"* %94 to i64*
  %96 = load i64, i64* %67, align 8
  store atomic i64 %96, i64* %95 monotonic, align 8
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %93
  %100 = inttoptr i64 %96 to i8*
  %101 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %100) #8
  br label %102

102:                                              ; preds = %99, %93
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #8
  br label %103

103:                                              ; preds = %102, %68
  %104 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %69, i64 1
  %105 = icmp eq %"class.blink::Member"* %104, %6
  br i1 %105, label %310, label %68

106:                                              ; preds = %57
  %107 = icmp sgt i64 %18, 7992
  %108 = sdiv i64 %19, 2
  %109 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 %108
  br i1 %107, label %110, label %115

110:                                              ; preds = %106
  %111 = sdiv i64 %19, 4
  %112 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 %111
  %113 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %109, i64 %111
  %114 = tail call i32 @_ZNSt3__17__sort5IRPFbRKN5blink6MemberINS1_13SampledEffectEEES6_EPS4_EEjT0_SB_SB_SB_SB_T_(%"class.blink::Member"* %16, %"class.blink::Member"* %112, %"class.blink::Member"* %109, %"class.blink::Member"* %113, %"class.blink::Member"* %9, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** dereferenceable(8) %2)
  br label %117

115:                                              ; preds = %106
  %116 = tail call i32 @_ZNSt3__17__sort3IRPFbRKN5blink6MemberINS1_13SampledEffectEEES6_EPS4_EEjT0_SB_SB_T_(%"class.blink::Member"* %16, %"class.blink::Member"* %109, %"class.blink::Member"* %9, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** dereferenceable(8) %2)
  br label %117

117:                                              ; preds = %115, %110
  %118 = phi i32 [ %114, %110 ], [ %116, %115 ]
  %119 = load i1 (%"class.blink::Member"*, %"class.blink::Member"*)*, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** %2, align 8
  %120 = tail call zeroext i1 %119(%"class.blink::Member"* dereferenceable(8) %16, %"class.blink::Member"* dereferenceable(8) %109) #8
  br i1 %120, label %216, label %121

121:                                              ; preds = %117, %193
  %122 = phi %"class.blink::Member"* [ %123, %193 ], [ %9, %117 ]
  %123 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %122, i64 -1
  %124 = icmp eq %"class.blink::Member"* %16, %123
  br i1 %124, label %125, label %193

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 1
  %127 = load i1 (%"class.blink::Member"*, %"class.blink::Member"*)*, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** %2, align 8
  %128 = tail call zeroext i1 %127(%"class.blink::Member"* dereferenceable(8) %16, %"class.blink::Member"* dereferenceable(8) %9) #8
  br i1 %128, label %156, label %129

129:                                              ; preds = %125
  %130 = icmp eq %"class.blink::Member"* %126, %9
  br i1 %130, label %310, label %131

131:                                              ; preds = %129, %153
  %132 = phi %"class.blink::Member"* [ %154, %153 ], [ %126, %129 ]
  %133 = load i1 (%"class.blink::Member"*, %"class.blink::Member"*)*, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** %2, align 8
  %134 = tail call zeroext i1 %133(%"class.blink::Member"* dereferenceable(8) %16, %"class.blink::Member"* dereferenceable(8) %132) #8
  br i1 %134, label %135, label %153

135:                                              ; preds = %131
  %136 = bitcast %"class.blink::Member"* %132 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = load i64, i64* %10, align 8
  store atomic i64 %138, i64* %136 monotonic, align 8
  store atomic i64 %137, i64* %10 monotonic, align 8
  %139 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %145, label %141

141:                                              ; preds = %135
  %142 = bitcast %"class.blink::Member"* %132 to i8**
  %143 = load i8*, i8** %142, align 8
  %144 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %143) #8
  br label %145

145:                                              ; preds = %141, %135
  %146 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %151, label %148

148:                                              ; preds = %145
  %149 = load i8*, i8** %11, align 8
  %150 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %149) #8
  br label %151

151:                                              ; preds = %145, %148
  %152 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %132, i64 1
  br label %156

153:                                              ; preds = %131
  %154 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %132, i64 1
  %155 = icmp eq %"class.blink::Member"* %154, %9
  br i1 %155, label %310, label %131

156:                                              ; preds = %151, %125
  %157 = phi %"class.blink::Member"* [ %126, %125 ], [ %152, %151 ]
  %158 = icmp eq %"class.blink::Member"* %157, %9
  br i1 %158, label %310, label %159

159:                                              ; preds = %156, %188
  %160 = phi %"class.blink::Member"* [ %166, %188 ], [ %157, %156 ]
  %161 = phi %"class.blink::Member"* [ %170, %188 ], [ %9, %156 ]
  br label %162

162:                                              ; preds = %162, %159
  %163 = phi %"class.blink::Member"* [ %160, %159 ], [ %166, %162 ]
  %164 = load i1 (%"class.blink::Member"*, %"class.blink::Member"*)*, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** %2, align 8
  %165 = tail call zeroext i1 %164(%"class.blink::Member"* dereferenceable(8) %16, %"class.blink::Member"* dereferenceable(8) %163) #8
  %166 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %163, i64 1
  br i1 %165, label %167, label %162

167:                                              ; preds = %162, %167
  %168 = phi %"class.blink::Member"* [ %170, %167 ], [ %161, %162 ]
  %169 = load i1 (%"class.blink::Member"*, %"class.blink::Member"*)*, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** %2, align 8
  %170 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %168, i64 -1
  %171 = tail call zeroext i1 %169(%"class.blink::Member"* dereferenceable(8) %16, %"class.blink::Member"* dereferenceable(8) %170) #8
  br i1 %171, label %167, label %172

172:                                              ; preds = %167
  %173 = icmp ult %"class.blink::Member"* %163, %170
  br i1 %173, label %174, label %15

174:                                              ; preds = %172
  %175 = bitcast %"class.blink::Member"* %163 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = bitcast %"class.blink::Member"* %170 to i64*
  %178 = load i64, i64* %177, align 8
  store atomic i64 %178, i64* %175 monotonic, align 8
  store atomic i64 %176, i64* %177 monotonic, align 8
  %179 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %185, label %181

181:                                              ; preds = %174
  %182 = bitcast %"class.blink::Member"* %163 to i8**
  %183 = load i8*, i8** %182, align 8
  %184 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %183) #8
  br label %185

185:                                              ; preds = %181, %174
  %186 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %188, label %189

188:                                              ; preds = %185, %189
  br label %159

189:                                              ; preds = %185
  %190 = bitcast %"class.blink::Member"* %170 to i8**
  %191 = load i8*, i8** %190, align 8
  %192 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %191) #8
  br label %188

193:                                              ; preds = %121
  %194 = load i1 (%"class.blink::Member"*, %"class.blink::Member"*)*, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** %2, align 8
  %195 = tail call zeroext i1 %194(%"class.blink::Member"* dereferenceable(8) %123, %"class.blink::Member"* dereferenceable(8) %109) #8
  br i1 %195, label %196, label %121

196:                                              ; preds = %193
  %197 = bitcast %"class.blink::Member"* %16 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = bitcast %"class.blink::Member"* %123 to i64*
  %200 = load i64, i64* %199, align 8
  store atomic i64 %200, i64* %197 monotonic, align 8
  store atomic i64 %198, i64* %199 monotonic, align 8
  %201 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %207, label %203

203:                                              ; preds = %196
  %204 = bitcast %"class.blink::Member"* %16 to i8**
  %205 = load i8*, i8** %204, align 8
  %206 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %205) #8
  br label %207

207:                                              ; preds = %203, %196
  %208 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %214, label %210

210:                                              ; preds = %207
  %211 = bitcast %"class.blink::Member"* %123 to i8**
  %212 = load i8*, i8** %211, align 8
  %213 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %212) #8
  br label %214

214:                                              ; preds = %207, %210
  %215 = add i32 %118, 1
  br label %216

216:                                              ; preds = %117, %214
  %217 = phi i32 [ %215, %214 ], [ %118, %117 ]
  %218 = phi %"class.blink::Member"* [ %123, %214 ], [ %9, %117 ]
  %219 = ptrtoint %"class.blink::Member"* %16 to i64
  %220 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 1
  %221 = icmp ult %"class.blink::Member"* %220, %218
  br i1 %221, label %222, label %261

222:                                              ; preds = %216, %257
  %223 = phi %"class.blink::Member"* [ %260, %257 ], [ %109, %216 ]
  %224 = phi i32 [ %258, %257 ], [ %217, %216 ]
  %225 = phi %"class.blink::Member"* [ %231, %257 ], [ %220, %216 ]
  %226 = phi %"class.blink::Member"* [ %235, %257 ], [ %218, %216 ]
  br label %227

227:                                              ; preds = %227, %222
  %228 = phi %"class.blink::Member"* [ %225, %222 ], [ %231, %227 ]
  %229 = load i1 (%"class.blink::Member"*, %"class.blink::Member"*)*, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** %2, align 8
  %230 = tail call zeroext i1 %229(%"class.blink::Member"* dereferenceable(8) %228, %"class.blink::Member"* dereferenceable(8) %223) #8
  %231 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %228, i64 1
  br i1 %230, label %227, label %232

232:                                              ; preds = %227, %232
  %233 = phi %"class.blink::Member"* [ %235, %232 ], [ %226, %227 ]
  %234 = load i1 (%"class.blink::Member"*, %"class.blink::Member"*)*, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** %2, align 8
  %235 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %233, i64 -1
  %236 = tail call zeroext i1 %234(%"class.blink::Member"* dereferenceable(8) %235, %"class.blink::Member"* dereferenceable(8) %223) #8
  br i1 %236, label %237, label %232

237:                                              ; preds = %232
  %238 = icmp ugt %"class.blink::Member"* %228, %235
  br i1 %238, label %261, label %239

239:                                              ; preds = %237
  %240 = bitcast %"class.blink::Member"* %228 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = bitcast %"class.blink::Member"* %235 to i64*
  %243 = load i64, i64* %242, align 8
  store atomic i64 %243, i64* %240 monotonic, align 8
  store atomic i64 %241, i64* %242 monotonic, align 8
  %244 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %250, label %246

246:                                              ; preds = %239
  %247 = bitcast %"class.blink::Member"* %228 to i8**
  %248 = load i8*, i8** %247, align 8
  %249 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %248) #8
  br label %250

250:                                              ; preds = %246, %239
  %251 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %257, label %253

253:                                              ; preds = %250
  %254 = bitcast %"class.blink::Member"* %235 to i8**
  %255 = load i8*, i8** %254, align 8
  %256 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %255) #8
  br label %257

257:                                              ; preds = %250, %253
  %258 = add i32 %224, 1
  %259 = icmp eq %"class.blink::Member"* %223, %228
  %260 = select i1 %259, %"class.blink::Member"* %235, %"class.blink::Member"* %223
  br label %222

261:                                              ; preds = %237, %216
  %262 = phi %"class.blink::Member"* [ %109, %216 ], [ %223, %237 ]
  %263 = phi i32 [ %217, %216 ], [ %224, %237 ]
  %264 = phi %"class.blink::Member"* [ %220, %216 ], [ %228, %237 ]
  %265 = icmp eq %"class.blink::Member"* %264, %262
  br i1 %265, label %289, label %266

266:                                              ; preds = %261
  %267 = load i1 (%"class.blink::Member"*, %"class.blink::Member"*)*, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** %2, align 8
  %268 = tail call zeroext i1 %267(%"class.blink::Member"* dereferenceable(8) %262, %"class.blink::Member"* dereferenceable(8) %264) #8
  br i1 %268, label %269, label %289

269:                                              ; preds = %266
  %270 = bitcast %"class.blink::Member"* %264 to i64*
  %271 = load i64, i64* %270, align 8
  %272 = bitcast %"class.blink::Member"* %262 to i64*
  %273 = load i64, i64* %272, align 8
  store atomic i64 %273, i64* %270 monotonic, align 8
  store atomic i64 %271, i64* %272 monotonic, align 8
  %274 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %280, label %276

276:                                              ; preds = %269
  %277 = bitcast %"class.blink::Member"* %264 to i8**
  %278 = load i8*, i8** %277, align 8
  %279 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %278) #8
  br label %280

280:                                              ; preds = %276, %269
  %281 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %287, label %283

283:                                              ; preds = %280
  %284 = bitcast %"class.blink::Member"* %262 to i8**
  %285 = load i8*, i8** %284, align 8
  %286 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %285) #8
  br label %287

287:                                              ; preds = %280, %283
  %288 = add i32 %263, 1
  br label %289

289:                                              ; preds = %261, %287, %266
  %290 = phi i32 [ %288, %287 ], [ %263, %266 ], [ %263, %261 ]
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %299

292:                                              ; preds = %289
  %293 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKN5blink6MemberINS1_13SampledEffectEEES6_EPS4_EEbT0_SB_T_(%"class.blink::Member"* %16, %"class.blink::Member"* %264, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** dereferenceable(8) %2)
  %294 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %264, i64 1
  %295 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKN5blink6MemberINS1_13SampledEffectEEES6_EPS4_EEbT0_SB_T_(%"class.blink::Member"* %294, %"class.blink::Member"* %6, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** dereferenceable(8) %2)
  br i1 %295, label %296, label %298

296:                                              ; preds = %292
  br i1 %293, label %310, label %297

297:                                              ; preds = %296, %308
  br label %5

298:                                              ; preds = %292
  br i1 %293, label %306, label %299

299:                                              ; preds = %298, %289
  %300 = ptrtoint %"class.blink::Member"* %264 to i64
  %301 = sub i64 %300, %219
  %302 = sub i64 %12, %300
  %303 = icmp slt i64 %301, %302
  br i1 %303, label %304, label %308

304:                                              ; preds = %299
  tail call void @_ZNSt3__16__sortIRPFbRKN5blink6MemberINS1_13SampledEffectEEES6_EPS4_EEvT0_SB_T_(%"class.blink::Member"* %16, %"class.blink::Member"* %264, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** dereferenceable(8) %2)
  %305 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %264, i64 1
  br label %306

306:                                              ; preds = %304, %298
  %307 = phi %"class.blink::Member"* [ %294, %298 ], [ %305, %304 ]
  br label %13

308:                                              ; preds = %299
  %309 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %264, i64 1
  tail call void @_ZNSt3__16__sortIRPFbRKN5blink6MemberINS1_13SampledEffectEEES6_EPS4_EEvT0_SB_T_(%"class.blink::Member"* %309, %"class.blink::Member"* %6, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** dereferenceable(8) %2)
  br label %297

310:                                              ; preds = %296, %156, %15, %15, %129, %153, %103, %59, %38, %35, %20, %42, %46, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort3IRPFbRKN5blink6MemberINS1_13SampledEffectEEES6_EPS4_EEjT0_SB_SB_T_(%"class.blink::Member"*, %"class.blink::Member"*, %"class.blink::Member"*, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %5 = load i1 (%"class.blink::Member"*, %"class.blink::Member"*)*, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** %3, align 8
  %6 = tail call zeroext i1 %5(%"class.blink::Member"* dereferenceable(8) %1, %"class.blink::Member"* dereferenceable(8) %0) #8
  %7 = load i1 (%"class.blink::Member"*, %"class.blink::Member"*)*, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** %3, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::Member"* dereferenceable(8) %2, %"class.blink::Member"* dereferenceable(8) %1) #8
  br i1 %6, label %48, label %9

9:                                                ; preds = %4
  br i1 %8, label %10, label %103

10:                                               ; preds = %9
  %11 = bitcast %"class.blink::Member"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.blink::Member"* %2 to i64*
  %14 = load i64, i64* %13, align 8
  store atomic i64 %14, i64* %11 monotonic, align 8
  store atomic i64 %12, i64* %13 monotonic, align 8
  %15 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %10
  %18 = bitcast %"class.blink::Member"* %1 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %19) #8
  br label %21

21:                                               ; preds = %17, %10
  %22 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %21
  %25 = bitcast %"class.blink::Member"* %2 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #8
  br label %28

28:                                               ; preds = %21, %24
  %29 = load i1 (%"class.blink::Member"*, %"class.blink::Member"*)*, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** %3, align 8
  %30 = tail call zeroext i1 %29(%"class.blink::Member"* dereferenceable(8) %1, %"class.blink::Member"* dereferenceable(8) %0) #8
  br i1 %30, label %31, label %103

31:                                               ; preds = %28
  %32 = bitcast %"class.blink::Member"* %0 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = load i64, i64* %11, align 8
  store atomic i64 %34, i64* %32 monotonic, align 8
  store atomic i64 %33, i64* %11 monotonic, align 8
  %35 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %31
  %38 = bitcast %"class.blink::Member"* %0 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %39) #8
  br label %41

41:                                               ; preds = %37, %31
  %42 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %103, label %44

44:                                               ; preds = %41
  %45 = bitcast %"class.blink::Member"* %1 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %46) #8
  br label %103

48:                                               ; preds = %4
  %49 = bitcast %"class.blink::Member"* %0 to i64*
  %50 = load i64, i64* %49, align 8
  br i1 %8, label %51, label %67

51:                                               ; preds = %48
  %52 = bitcast %"class.blink::Member"* %2 to i64*
  %53 = load i64, i64* %52, align 8
  store atomic i64 %53, i64* %49 monotonic, align 8
  store atomic i64 %50, i64* %52 monotonic, align 8
  %54 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %51
  %57 = bitcast %"class.blink::Member"* %0 to i8**
  %58 = load i8*, i8** %57, align 8
  %59 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %58) #8
  br label %60

60:                                               ; preds = %56, %51
  %61 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %103, label %63

63:                                               ; preds = %60
  %64 = bitcast %"class.blink::Member"* %2 to i8**
  %65 = load i8*, i8** %64, align 8
  %66 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %65) #8
  br label %103

67:                                               ; preds = %48
  %68 = bitcast %"class.blink::Member"* %1 to i64*
  %69 = load i64, i64* %68, align 8
  store atomic i64 %69, i64* %49 monotonic, align 8
  store atomic i64 %50, i64* %68 monotonic, align 8
  %70 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %76, label %72

72:                                               ; preds = %67
  %73 = bitcast %"class.blink::Member"* %0 to i8**
  %74 = load i8*, i8** %73, align 8
  %75 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %74) #8
  br label %76

76:                                               ; preds = %72, %67
  %77 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %83, label %79

79:                                               ; preds = %76
  %80 = bitcast %"class.blink::Member"* %1 to i8**
  %81 = load i8*, i8** %80, align 8
  %82 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %81) #8
  br label %83

83:                                               ; preds = %76, %79
  %84 = load i1 (%"class.blink::Member"*, %"class.blink::Member"*)*, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** %3, align 8
  %85 = tail call zeroext i1 %84(%"class.blink::Member"* dereferenceable(8) %2, %"class.blink::Member"* dereferenceable(8) %1) #8
  br i1 %85, label %86, label %103

86:                                               ; preds = %83
  %87 = load i64, i64* %68, align 8
  %88 = bitcast %"class.blink::Member"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  store atomic i64 %89, i64* %68 monotonic, align 8
  store atomic i64 %87, i64* %88 monotonic, align 8
  %90 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %96, label %92

92:                                               ; preds = %86
  %93 = bitcast %"class.blink::Member"* %1 to i8**
  %94 = load i8*, i8** %93, align 8
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #8
  br label %96

96:                                               ; preds = %92, %86
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member"* %2 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #8
  br label %103

103:                                              ; preds = %99, %96, %63, %60, %44, %41, %83, %28, %9
  %104 = phi i32 [ 0, %9 ], [ 1, %28 ], [ 1, %83 ], [ 2, %41 ], [ 2, %44 ], [ 1, %60 ], [ 1, %63 ], [ 2, %96 ], [ 2, %99 ]
  ret i32 %104
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRPFbRKN5blink6MemberINS1_13SampledEffectEEES6_EPS4_EEjT0_SB_SB_SB_T_(%"class.blink::Member"*, %"class.blink::Member"*, %"class.blink::Member"*, %"class.blink::Member"*, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %6 = tail call i32 @_ZNSt3__17__sort3IRPFbRKN5blink6MemberINS1_13SampledEffectEEES6_EPS4_EEjT0_SB_SB_T_(%"class.blink::Member"* %0, %"class.blink::Member"* %1, %"class.blink::Member"* %2, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** dereferenceable(8) %4)
  %7 = load i1 (%"class.blink::Member"*, %"class.blink::Member"*)*, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** %4, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::Member"* dereferenceable(8) %3, %"class.blink::Member"* dereferenceable(8) %2) #8
  br i1 %8, label %9, label %71

9:                                                ; preds = %5
  %10 = bitcast %"class.blink::Member"* %2 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.blink::Member"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  store atomic i64 %13, i64* %10 monotonic, align 8
  store atomic i64 %11, i64* %12 monotonic, align 8
  %14 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %9
  %17 = bitcast %"class.blink::Member"* %2 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %18) #8
  br label %20

20:                                               ; preds = %16, %9
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %27, label %23

23:                                               ; preds = %20
  %24 = bitcast %"class.blink::Member"* %3 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %25) #8
  br label %27

27:                                               ; preds = %20, %23
  %28 = add i32 %6, 1
  %29 = load i1 (%"class.blink::Member"*, %"class.blink::Member"*)*, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** %4, align 8
  %30 = tail call zeroext i1 %29(%"class.blink::Member"* dereferenceable(8) %2, %"class.blink::Member"* dereferenceable(8) %1) #8
  br i1 %30, label %31, label %71

31:                                               ; preds = %27
  %32 = bitcast %"class.blink::Member"* %1 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = load i64, i64* %10, align 8
  store atomic i64 %34, i64* %32 monotonic, align 8
  store atomic i64 %33, i64* %10 monotonic, align 8
  %35 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %31
  %38 = bitcast %"class.blink::Member"* %1 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %39) #8
  br label %41

41:                                               ; preds = %37, %31
  %42 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %41
  %45 = bitcast %"class.blink::Member"* %2 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %46) #8
  br label %48

48:                                               ; preds = %41, %44
  %49 = add i32 %6, 2
  %50 = load i1 (%"class.blink::Member"*, %"class.blink::Member"*)*, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** %4, align 8
  %51 = tail call zeroext i1 %50(%"class.blink::Member"* dereferenceable(8) %1, %"class.blink::Member"* dereferenceable(8) %0) #8
  br i1 %51, label %52, label %71

52:                                               ; preds = %48
  %53 = bitcast %"class.blink::Member"* %0 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = load i64, i64* %32, align 8
  store atomic i64 %55, i64* %53 monotonic, align 8
  store atomic i64 %54, i64* %32 monotonic, align 8
  %56 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %62, label %58

58:                                               ; preds = %52
  %59 = bitcast %"class.blink::Member"* %0 to i8**
  %60 = load i8*, i8** %59, align 8
  %61 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %60) #8
  br label %62

62:                                               ; preds = %58, %52
  %63 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %69, label %65

65:                                               ; preds = %62
  %66 = bitcast %"class.blink::Member"* %1 to i8**
  %67 = load i8*, i8** %66, align 8
  %68 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %67) #8
  br label %69

69:                                               ; preds = %62, %65
  %70 = add i32 %6, 3
  br label %71

71:                                               ; preds = %27, %69, %48, %5
  %72 = phi i32 [ %70, %69 ], [ %49, %48 ], [ %28, %27 ], [ %6, %5 ]
  ret i32 %72
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRPFbRKN5blink6MemberINS1_13SampledEffectEEES6_EPS4_EEjT0_SB_SB_SB_SB_T_(%"class.blink::Member"*, %"class.blink::Member"*, %"class.blink::Member"*, %"class.blink::Member"*, %"class.blink::Member"*, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %7 = tail call i32 @_ZNSt3__17__sort4IRPFbRKN5blink6MemberINS1_13SampledEffectEEES6_EPS4_EEjT0_SB_SB_SB_T_(%"class.blink::Member"* %0, %"class.blink::Member"* %1, %"class.blink::Member"* %2, %"class.blink::Member"* %3, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** dereferenceable(8) %5)
  %8 = load i1 (%"class.blink::Member"*, %"class.blink::Member"*)*, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** %5, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::Member"* dereferenceable(8) %4, %"class.blink::Member"* dereferenceable(8) %3) #8
  br i1 %9, label %10, label %93

10:                                               ; preds = %6
  %11 = bitcast %"class.blink::Member"* %3 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.blink::Member"* %4 to i64*
  %14 = load i64, i64* %13, align 8
  store atomic i64 %14, i64* %11 monotonic, align 8
  store atomic i64 %12, i64* %13 monotonic, align 8
  %15 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %10
  %18 = bitcast %"class.blink::Member"* %3 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %19) #8
  br label %21

21:                                               ; preds = %17, %10
  %22 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %21
  %25 = bitcast %"class.blink::Member"* %4 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #8
  br label %28

28:                                               ; preds = %21, %24
  %29 = add i32 %7, 1
  %30 = load i1 (%"class.blink::Member"*, %"class.blink::Member"*)*, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** %5, align 8
  %31 = tail call zeroext i1 %30(%"class.blink::Member"* dereferenceable(8) %3, %"class.blink::Member"* dereferenceable(8) %2) #8
  br i1 %31, label %32, label %93

32:                                               ; preds = %28
  %33 = bitcast %"class.blink::Member"* %2 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = load i64, i64* %11, align 8
  store atomic i64 %35, i64* %33 monotonic, align 8
  store atomic i64 %34, i64* %11 monotonic, align 8
  %36 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %32
  %39 = bitcast %"class.blink::Member"* %2 to i8**
  %40 = load i8*, i8** %39, align 8
  %41 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %40) #8
  br label %42

42:                                               ; preds = %38, %32
  %43 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %42
  %46 = bitcast %"class.blink::Member"* %3 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #8
  br label %49

49:                                               ; preds = %42, %45
  %50 = add i32 %7, 2
  %51 = load i1 (%"class.blink::Member"*, %"class.blink::Member"*)*, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** %5, align 8
  %52 = tail call zeroext i1 %51(%"class.blink::Member"* dereferenceable(8) %2, %"class.blink::Member"* dereferenceable(8) %1) #8
  br i1 %52, label %53, label %93

53:                                               ; preds = %49
  %54 = bitcast %"class.blink::Member"* %1 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = load i64, i64* %33, align 8
  store atomic i64 %56, i64* %54 monotonic, align 8
  store atomic i64 %55, i64* %33 monotonic, align 8
  %57 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %63, label %59

59:                                               ; preds = %53
  %60 = bitcast %"class.blink::Member"* %1 to i8**
  %61 = load i8*, i8** %60, align 8
  %62 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %61) #8
  br label %63

63:                                               ; preds = %59, %53
  %64 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %70, label %66

66:                                               ; preds = %63
  %67 = bitcast %"class.blink::Member"* %2 to i8**
  %68 = load i8*, i8** %67, align 8
  %69 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %68) #8
  br label %70

70:                                               ; preds = %63, %66
  %71 = add i32 %7, 3
  %72 = load i1 (%"class.blink::Member"*, %"class.blink::Member"*)*, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** %5, align 8
  %73 = tail call zeroext i1 %72(%"class.blink::Member"* dereferenceable(8) %1, %"class.blink::Member"* dereferenceable(8) %0) #8
  br i1 %73, label %74, label %93

74:                                               ; preds = %70
  %75 = bitcast %"class.blink::Member"* %0 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = load i64, i64* %54, align 8
  store atomic i64 %77, i64* %75 monotonic, align 8
  store atomic i64 %76, i64* %54 monotonic, align 8
  %78 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %84, label %80

80:                                               ; preds = %74
  %81 = bitcast %"class.blink::Member"* %0 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %82) #8
  br label %84

84:                                               ; preds = %80, %74
  %85 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %91, label %87

87:                                               ; preds = %84
  %88 = bitcast %"class.blink::Member"* %1 to i8**
  %89 = load i8*, i8** %88, align 8
  %90 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %89) #8
  br label %91

91:                                               ; preds = %84, %87
  %92 = add i32 %7, 4
  br label %93

93:                                               ; preds = %28, %70, %91, %49, %6
  %94 = phi i32 [ %92, %91 ], [ %71, %70 ], [ %50, %49 ], [ %29, %28 ], [ %7, %6 ]
  ret i32 %94
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRKN5blink6MemberINS1_13SampledEffectEEES6_EPS4_EEbT0_SB_T_(%"class.blink::Member"*, %"class.blink::Member"*, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.blink::Member", align 8
  %5 = ptrtoint %"class.blink::Member"* %1 to i64
  %6 = ptrtoint %"class.blink::Member"* %0 to i64
  %7 = sub i64 %5, %6
  %8 = ashr exact i64 %7, 3
  switch i64 %8, label %46 [
    i64 0, label %100
    i64 1, label %100
    i64 2, label %9
    i64 3, label %31
    i64 4, label %35
    i64 5, label %40
  ]

9:                                                ; preds = %3
  %10 = load i1 (%"class.blink::Member"*, %"class.blink::Member"*)*, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** %2, align 8
  %11 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1, i64 -1
  %12 = tail call zeroext i1 %10(%"class.blink::Member"* dereferenceable(8) %11, %"class.blink::Member"* dereferenceable(8) %0) #8
  br i1 %12, label %13, label %100

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::Member"* %0 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.blink::Member"* %11 to i64*
  %17 = load i64, i64* %16, align 8
  store atomic i64 %17, i64* %14 monotonic, align 8
  store atomic i64 %15, i64* %16 monotonic, align 8
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.blink::Member"* %0 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #8
  br label %24

24:                                               ; preds = %20, %13
  %25 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %100, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member"* %11 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %29) #8
  br label %100

31:                                               ; preds = %3
  %32 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 1
  %33 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1, i64 -1
  %34 = tail call i32 @_ZNSt3__17__sort3IRPFbRKN5blink6MemberINS1_13SampledEffectEEES6_EPS4_EEjT0_SB_SB_T_(%"class.blink::Member"* %0, %"class.blink::Member"* %32, %"class.blink::Member"* %33, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** dereferenceable(8) %2)
  br label %100

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 1
  %37 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 2
  %38 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1, i64 -1
  %39 = tail call i32 @_ZNSt3__17__sort4IRPFbRKN5blink6MemberINS1_13SampledEffectEEES6_EPS4_EEjT0_SB_SB_SB_T_(%"class.blink::Member"* %0, %"class.blink::Member"* %36, %"class.blink::Member"* %37, %"class.blink::Member"* %38, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** dereferenceable(8) %2)
  br label %100

40:                                               ; preds = %3
  %41 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 1
  %42 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 2
  %43 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 3
  %44 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1, i64 -1
  %45 = tail call i32 @_ZNSt3__17__sort5IRPFbRKN5blink6MemberINS1_13SampledEffectEEES6_EPS4_EEjT0_SB_SB_SB_SB_T_(%"class.blink::Member"* %0, %"class.blink::Member"* %41, %"class.blink::Member"* %42, %"class.blink::Member"* %43, %"class.blink::Member"* %44, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** dereferenceable(8) %2)
  br label %100

46:                                               ; preds = %3
  %47 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 2
  %48 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 1
  %49 = tail call i32 @_ZNSt3__17__sort3IRPFbRKN5blink6MemberINS1_13SampledEffectEEES6_EPS4_EEjT0_SB_SB_T_(%"class.blink::Member"* %0, %"class.blink::Member"* %48, %"class.blink::Member"* %47, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** dereferenceable(8) %2)
  %50 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %0, i64 3
  %51 = icmp eq %"class.blink::Member"* %50, %1
  br i1 %51, label %100, label %52

52:                                               ; preds = %46
  %53 = bitcast %"class.blink::Member"* %4 to i8*
  %54 = bitcast %"class.blink::Member"* %4 to i64*
  br label %55

55:                                               ; preds = %52, %93
  %56 = phi %"class.blink::Member"* [ %50, %52 ], [ %95, %93 ]
  %57 = phi i32 [ 0, %52 ], [ %94, %93 ]
  %58 = phi %"class.blink::Member"* [ %47, %52 ], [ %56, %93 ]
  %59 = load i1 (%"class.blink::Member"*, %"class.blink::Member"*)*, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** %2, align 8
  %60 = call zeroext i1 %59(%"class.blink::Member"* dereferenceable(8) %56, %"class.blink::Member"* dereferenceable(8) %58) #8
  br i1 %60, label %61, label %93

61:                                               ; preds = %55
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #8
  %62 = bitcast %"class.blink::Member"* %56 to i64*
  %63 = load i64, i64* %62, align 8
  store i64 %63, i64* %54, align 8
  br label %64

64:                                               ; preds = %77, %61
  %65 = phi %"class.blink::Member"* [ %56, %61 ], [ %66, %77 ]
  %66 = phi %"class.blink::Member"* [ %58, %61 ], [ %79, %77 ]
  %67 = bitcast %"class.blink::Member"* %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"class.blink::Member"* %65 to i64*
  store atomic i64 %68, i64* %69 monotonic, align 8
  %70 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %64
  %73 = inttoptr i64 %68 to i8*
  %74 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %73) #8
  br label %75

75:                                               ; preds = %64, %72
  %76 = icmp eq %"class.blink::Member"* %66, %0
  br i1 %76, label %81, label %77

77:                                               ; preds = %75
  %78 = load i1 (%"class.blink::Member"*, %"class.blink::Member"*)*, i1 (%"class.blink::Member"*, %"class.blink::Member"*)** %2, align 8
  %79 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %66, i64 -1
  %80 = call zeroext i1 %78(%"class.blink::Member"* nonnull dereferenceable(8) %4, %"class.blink::Member"* dereferenceable(8) %79) #8
  br i1 %80, label %64, label %81

81:                                               ; preds = %75, %77
  %82 = phi %"class.blink::Member"* [ %66, %77 ], [ %0, %75 ]
  %83 = bitcast %"class.blink::Member"* %82 to i64*
  %84 = load i64, i64* %54, align 8
  store atomic i64 %84, i64* %83 monotonic, align 8
  %85 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %90, label %87

87:                                               ; preds = %81
  %88 = inttoptr i64 %84 to i8*
  %89 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %88) #8
  br label %90

90:                                               ; preds = %81, %87
  %91 = add i32 %57, 1
  %92 = icmp eq i32 %91, 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #8
  br i1 %92, label %97, label %93

93:                                               ; preds = %90, %55
  %94 = phi i32 [ %91, %90 ], [ %57, %55 ]
  %95 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %56, i64 1
  %96 = icmp eq %"class.blink::Member"* %95, %1
  br i1 %96, label %100, label %55

97:                                               ; preds = %90
  %98 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %56, i64 1
  %99 = icmp eq %"class.blink::Member"* %98, %1
  br label %100

100:                                              ; preds = %93, %97, %46, %27, %24, %9, %3, %3, %40, %35, %31
  %101 = phi i1 [ true, %40 ], [ true, %35 ], [ true, %31 ], [ true, %3 ], [ true, %3 ], [ true, %9 ], [ true, %24 ], [ true, %27 ], [ true, %46 ], [ %99, %97 ], [ true, %93 ]
  ret i1 %101
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member"* @_ZN3WTF6VectorIN5blink6MemberINS1_13SampledEffectEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.815"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.815", %"class.WTF::Vector.815"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector.815", %"class.WTF::Vector.815"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member"*, %"class.blink::Member"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %24, i64 %25
  ret %"class.blink::Member"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13SampledEffectEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13SampledEffectEE5TraceEPNS_7VisitorEPKv) #8
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13SampledEffectEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SampledEffect"*
  tail call void @_ZNK5blink13SampledEffect5TraceEPNS_7VisitorE(%"class.blink::SampledEffect"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

declare void @_ZNK5blink13SampledEffect5TraceEPNS_7VisitorE(%"class.blink::SampledEffect"*, %"class.blink::Visitor"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!7 = distinct !{!7, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!8 = distinct !{!8, !9, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!9 = distinct !{!9, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!10 = !{!11, !13}
!11 = distinct !{!11, !12, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!12 = distinct !{!12, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!13 = distinct !{!13, !14, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!14 = distinct !{!14, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!15 = !{!16, !18}
!16 = distinct !{!16, !17, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!17 = distinct !{!17, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!18 = distinct !{!18, !19, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!19 = distinct !{!19, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!20 = !{!21, !23}
!21 = distinct !{!21, !22, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!22 = distinct !{!22, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!23 = distinct !{!23, !24, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!24 = distinct !{!24, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!25 = !{!26, !28}
!26 = distinct !{!26, !27, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!27 = distinct !{!27, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!28 = distinct !{!28, !29, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!29 = distinct !{!29, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!30 = !{!31, !33}
!31 = distinct !{!31, !32, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!32 = distinct !{!32, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!33 = distinct !{!33, !34, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!34 = distinct !{!34, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!35 = !{!36, !38}
!36 = distinct !{!36, !37, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!37 = distinct !{!37, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!38 = distinct !{!38, !39, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!39 = distinct !{!39, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!40 = !{!41, !43}
!41 = distinct !{!41, !42, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv: argument 0"}
!42 = distinct !{!42, !"_ZN5blink14PropertyHandle23EmptyValueForHashTraitsEv"}
!43 = distinct !{!43, !44, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv: argument 0"}
!44 = distinct !{!44, !"_ZN3WTF10HashTraitsIN5blink14PropertyHandleEE10EmptyValueEv"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZN5blink14PropertyHandle25DeletedValueForHashTraitsEv: argument 0"}
!47 = distinct !{!47, !"_ZN5blink14PropertyHandle25DeletedValueForHashTraitsEv"}
