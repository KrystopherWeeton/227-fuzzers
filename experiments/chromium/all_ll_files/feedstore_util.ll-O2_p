; ModuleID = '../../components/feed/core/v2/feedstore_util.cc'
source_filename = "../../components/feed/core/v2/feedstore_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.feedstore::Metadata_SessionIDDefaultTypeInternal" = type opaque
%"class.google::protobuf::internal::ExplicitlyConstructed" = type { %"union.google::protobuf::internal::ExplicitlyConstructed<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::AlignedUnion" }
%"union.google::protobuf::internal::ExplicitlyConstructed<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::AlignedUnion" = type { i64, [16 x i8] }
%"struct.std::nothrow_t" = type { i8 }
%"class.feed::StreamType" = type { i32 }
%"class.base::TimeDelta" = type { i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.feedstore::StreamData" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::RepeatedPtrField", %"class.google::protobuf::RepeatedField", %"struct.std::__1::atomic.5", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"class.feedwire::ContentId"*, i64, i8, i8, i8, %"class.google::protobuf::internal::CachedSize" }
%"class.google::protobuf::MessageLite" = type { i32 (...)**, %"class.google::protobuf::internal::InternalMetadata" }
%"class.google::protobuf::internal::InternalMetadata" = type { i8* }
%"class.google::protobuf::RepeatedPtrField" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::internal::RepeatedPtrFieldBase" = type { %"class.google::protobuf::Arena"*, i32, i32, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* }
%"class.google::protobuf::Arena" = type { %"class.google::protobuf::internal::ArenaImpl", void (%"class.std::type_info"*, i64, i8*)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, i8* }
%"class.google::protobuf::internal::ArenaImpl" = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic.0", %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, %"struct.google::protobuf::internal::ArenaImpl::Options" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.google::protobuf::internal::ArenaImpl::SerialArena"* }
%"class.google::protobuf::internal::ArenaImpl::SerialArena" = type { %"class.google::protobuf::internal::ArenaImpl"*, i8*, %"class.google::protobuf::internal::ArenaImpl::Block"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, %"class.google::protobuf::internal::ArenaImpl::SerialArena"*, i8*, i8*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"* }
%"struct.google::protobuf::internal::ArenaImpl::CleanupChunk" = type { i64, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, [1 x %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"] }
%"struct.google::protobuf::internal::ArenaImpl::CleanupNode" = type { i8*, void (i8*)* }
%"struct.std::__1::atomic.0" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl.3" }
%"struct.std::__1::__cxx_atomic_impl.3" = type { %"struct.std::__1::__cxx_atomic_base_impl.4" }
%"struct.std::__1::__cxx_atomic_base_impl.4" = type { i64 }
%"class.google::protobuf::internal::ArenaImpl::Block" = type { %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, i64 }
%"struct.google::protobuf::internal::ArenaImpl::Options" = type { i64, i64, i8*, i64, i8* (i64)*, void (i8*, i64)* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep" = type { i32, [268435454 x i8*] }
%"class.google::protobuf::RepeatedField" = type { i32, i32, i8* }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i32 }
%"struct.google::protobuf::internal::ArenaStringPtr" = type { %"class.std::__1::basic_string"* }
%"class.feedwire::ContentId" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"struct.google::protobuf::internal::ArenaStringPtr", i64, i32, [4 x i8] }>
%"class.google::protobuf::internal::HasBits" = type { [1 x i32] }
%"class.google::protobuf::internal::CachedSize" = type { %"struct.std::__1::atomic.5" }
%"class.feedstore::Metadata" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::RepeatedPtrField.11", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"class.feedstore::Metadata_SessionID"*, i32, i32, %"class.google::protobuf::internal::CachedSize", [4 x i8] }>
%"class.google::protobuf::RepeatedPtrField.11" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.feedstore::Metadata_SessionID" = type <{ %"class.google::protobuf::MessageLite", %"struct.google::protobuf::internal::ArenaStringPtr", i64, %"class.google::protobuf::internal::CachedSize", [4 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.google::protobuf::internal::InternalMetadata::ContainerBase" = type { %"class.google::protobuf::Arena"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, [7 x i8], %union.anon.12 }
%union.anon.12 = type { %"class.feedstore::Metadata" }
%"class.absl::optional.13" = type { %"class.absl::optional_internal::optional_data.14" }
%"class.absl::optional_internal::optional_data.14" = type { %"class.absl::optional_internal::optional_data_base.15" }
%"class.absl::optional_internal::optional_data_base.15" = type { %"class.absl::optional_internal::optional_data_dtor_base.16" }
%"class.absl::optional_internal::optional_data_dtor_base.16" = type { i8, %union.anon.17 }
%union.anon.17 = type { %"class.std::__1::basic_string" }
%"struct.feed::Config" = type { i32, i32, i32, i32, i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i32, %"class.base::TimeDelta", i64, %"class.base::TimeDelta", i32, i32, i8, i8, %"class.base::TimeDelta", i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i32, i64, i32, i8, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { i32* }
%"class.feedstore::Metadata_StreamMetadata" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::RepeatedField", %"struct.std::__1::atomic.5", %"struct.google::protobuf::internal::ArenaStringPtr", i8, %"class.google::protobuf::internal::CachedSize" }
%"class.feed::ContentIdSet" = type { %"class.base::internal::flat_tree.23" }
%"class.base::internal::flat_tree.23" = type { %"class.std::__1::vector.24" }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { i64*, i64*, %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { i64* }
%"struct.std::__1::less" = type { i8 }
%"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN4base8internal9flat_treeIlNS_8identityENSt3__14lessIvEENS3_6vectorIlNS3_9allocatorIlEEEEEC2IPKlEET_SE_RKS5_ = comdat any

$_ZN6google8protobuf8internal14ArenaStringPtr14CreateInstanceEPNS0_5ArenaEPKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE = comdat any

$_ZN6google8protobuf8internal21arena_destruct_objectINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEvPv = comdat any

$_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl = comdat any

$_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE = comdat any

$_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl = comdat any

@.str = private unnamed_addr constant [2 x i8] c"i\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.3 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@_ZN9feedstore37_Metadata_SessionID_default_instance_E = external local_unnamed_addr global %"class.feedstore::Metadata_SessionIDDefaultTypeInternal", align 1
@_ZN6google8protobuf8internal26fixed_address_empty_stringE = external global %"class.google::protobuf::internal::ExplicitlyConstructed", align 8
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i8*, i64 } @_ZN9feedstore8StreamIdERKN4feed10StreamTypeE(%"class.feed::StreamType"* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.feed::StreamType", %"class.feed::StreamType"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 1
  %5 = select i1 %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)
  %6 = insertvalue { i8*, i64 } undef, i8* %5, 0
  %7 = insertvalue { i8*, i64 } %6, i64 1, 1
  ret { i8*, i64 } %7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN9feedstore16StreamTypeFromIdEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* nocapture readonly, i64) local_unnamed_addr #2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %4, label %10

4:                                                ; preds = %2
  %5 = load i8, i8* %0, align 1
  %6 = icmp eq i8 %5, 105
  br i1 %6, label %11, label %7

7:                                                ; preds = %4
  %8 = load i8, i8* %0, align 1
  %9 = icmp eq i8 %8, 119
  br i1 %9, label %11, label %10

10:                                               ; preds = %2, %7
  br label %11

11:                                               ; preds = %7, %4, %10
  %12 = phi i32 [ 0, %10 ], [ 1, %4 ], [ 2, %7 ]
  ret i32 %12
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN9feedstore17ToTimestampMillisEN4base4TimeE(i64) local_unnamed_addr #3 {
  %2 = alloca %"class.base::TimeDelta", align 8
  %3 = bitcast %"class.base::TimeDelta"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #14
  %4 = tail call i64 @_ZN4base4Time9UnixEpochEv() #14
  %5 = sub nsw i64 %0, %4
  %6 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  store i64 %5, i64* %6, align 8
  %7 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %2) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #14
  ret i64 %7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i64 @_ZN4base4Time9UnixEpochEv() local_unnamed_addr #4

declare i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN9feedstore19FromTimestampMillisEl(i64) local_unnamed_addr #3 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = tail call i64 @_ZN4base4Time9UnixEpochEv() #14
  %4 = icmp slt i64 %0, 0
  %5 = select i1 %4, i64 -9223372036854775808, i64 9223372036854775807
  %6 = tail call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %0, i64 1000) #14
  %7 = extractvalue { i64, i1 } %6, 1
  %8 = extractvalue { i64, i1 } %6, 0
  %9 = select i1 %7, i64 %5, i64 %8, !prof !2
  %10 = add i64 %9, -9223372036854775807
  %11 = icmp ult i64 %10, 2
  br i1 %11, label %19, label %12

12:                                               ; preds = %1
  %13 = icmp slt i64 %9, 0
  %14 = select i1 %13, i64 -9223372036854775808, i64 9223372036854775807
  %15 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %3, i64 %9) #14
  %16 = extractvalue { i64, i1 } %15, 1
  %17 = extractvalue { i64, i1 } %15, 0
  %18 = select i1 %16, i64 %14, i64 %17, !prof !2
  br label %27

19:                                               ; preds = %1
  %20 = add i64 %3, -9223372036854775807
  %21 = icmp ugt i64 %20, 1
  %22 = icmp eq i64 %3, %9
  %23 = or i1 %22, %21
  br i1 %23, label %27, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #14
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #14
  br label %27

27:                                               ; preds = %12, %19, %24
  %28 = phi i64 [ %18, %12 ], [ %9, %19 ], [ %9, %24 ]
  ret i64 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9feedstore16SetLastAddedTimeEN4base4TimeERNS_10StreamDataE(i64, %"class.feedstore::StreamData"* nocapture dereferenceable(104)) local_unnamed_addr #3 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #14
  %5 = tail call i64 @_ZN4base4Time9UnixEpochEv() #14
  %6 = sub nsw i64 %0, %5
  %7 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 %6, i64* %7, align 8
  %8 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #14
  %9 = getelementptr inbounds %"class.feedstore::StreamData", %"class.feedstore::StreamData"* %1, i64 0, i32 7
  store i64 %8, i64* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN9feedstore16GetLastAddedTimeERKNS_10StreamDataE(%"class.feedstore::StreamData"* nocapture readonly dereferenceable(104)) local_unnamed_addr #3 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.feedstore::StreamData", %"class.feedstore::StreamData"* %0, i64 0, i32 7
  %4 = load i64, i64* %3, align 8
  %5 = tail call i64 @_ZN4base4Time9UnixEpochEv() #14
  %6 = icmp slt i64 %4, 0
  %7 = select i1 %6, i64 -9223372036854775808, i64 9223372036854775807
  %8 = tail call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %4, i64 1000) #14
  %9 = extractvalue { i64, i1 } %8, 1
  %10 = extractvalue { i64, i1 } %8, 0
  %11 = select i1 %9, i64 %7, i64 %10, !prof !2
  %12 = add i64 %11, -9223372036854775807
  %13 = icmp ult i64 %12, 2
  br i1 %13, label %21, label %14

14:                                               ; preds = %1
  %15 = icmp slt i64 %11, 0
  %16 = select i1 %15, i64 -9223372036854775808, i64 9223372036854775807
  %17 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %5, i64 %11) #14
  %18 = extractvalue { i64, i1 } %17, 1
  %19 = extractvalue { i64, i1 } %17, 0
  %20 = select i1 %18, i64 %16, i64 %19, !prof !2
  br label %29

21:                                               ; preds = %1
  %22 = add i64 %5, -9223372036854775807
  %23 = icmp ugt i64 %22, 1
  %24 = icmp eq i64 %5, %11
  %25 = or i1 %23, %24
  br i1 %25, label %29, label %26

26:                                               ; preds = %21
  %27 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #14
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #14
  br label %29

29:                                               ; preds = %14, %21, %26
  %30 = phi i64 [ %20, %14 ], [ %11, %21 ], [ %11, %26 ]
  ret i64 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN9feedstore22GetSessionIdExpiryTimeERKNS_8MetadataE(%"class.feedstore::Metadata"* nocapture readonly dereferenceable(80)) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %"class.feedstore::Metadata", %"class.feedstore::Metadata"* %0, i64 0, i32 4
  %3 = load %"class.feedstore::Metadata_SessionID"*, %"class.feedstore::Metadata_SessionID"** %2, align 8
  %4 = icmp eq %"class.feedstore::Metadata_SessionID"* %3, null
  %5 = select i1 %4, %"class.feedstore::Metadata_SessionID"* bitcast (%"class.feedstore::Metadata_SessionIDDefaultTypeInternal"* @_ZN9feedstore37_Metadata_SessionID_default_instance_E to %"class.feedstore::Metadata_SessionID"*), %"class.feedstore::Metadata_SessionID"* %3
  %6 = getelementptr inbounds %"class.feedstore::Metadata_SessionID", %"class.feedstore::Metadata_SessionID"* %5, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = icmp slt i64 %7, 0
  %9 = select i1 %8, i64 -9223372036854775808, i64 9223372036854775807
  %10 = tail call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %7, i64 1000) #14
  %11 = extractvalue { i64, i1 } %10, 1
  %12 = extractvalue { i64, i1 } %10, 0
  %13 = select i1 %11, i64 %9, i64 %12, !prof !2
  %14 = tail call i64 @_ZN4base4Time26FromDeltaSinceWindowsEpochENS_9TimeDeltaE(i64 %13) #14
  ret i64 %14
}

declare i64 @_ZN4base4Time26FromDeltaSinceWindowsEpochENS_9TimeDeltaE(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9feedstore12SetSessionIdERNS_8MetadataENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN4base4TimeE(%"class.feedstore::Metadata"* nocapture dereferenceable(80), %"class.std::__1::basic_string"*, i64) local_unnamed_addr #3 {
  %4 = alloca %"class.base::Time", align 8
  %5 = alloca %"class.base::TimeDelta", align 8
  %6 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %4, i64 0, i32 0, i32 0
  store i64 %2, i64* %6, align 8
  %7 = getelementptr inbounds %"class.feedstore::Metadata", %"class.feedstore::Metadata"* %0, i64 0, i32 4
  %8 = load %"class.feedstore::Metadata_SessionID"*, %"class.feedstore::Metadata_SessionID"** %7, align 8
  %9 = icmp eq %"class.feedstore::Metadata_SessionID"* %8, null
  br i1 %9, label %10, label %26

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.feedstore::Metadata", %"class.feedstore::Metadata"* %0, i64 0, i32 0, i32 1
  %12 = bitcast %"class.google::protobuf::internal::InternalMetadata"* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = and i64 %13, 1
  %15 = icmp eq i64 %14, 0
  %16 = and i64 %13, -2
  br i1 %15, label %21, label %17, !prof !3

17:                                               ; preds = %10
  %18 = inttoptr i64 %16 to %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"*
  %19 = getelementptr inbounds %"struct.google::protobuf::internal::InternalMetadata::ContainerBase", %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"* %18, i64 0, i32 0
  %20 = load %"class.google::protobuf::Arena"*, %"class.google::protobuf::Arena"** %19, align 8
  br label %23

21:                                               ; preds = %10
  %22 = inttoptr i64 %16 to %"class.google::protobuf::Arena"*
  br label %23

23:                                               ; preds = %21, %17
  %24 = phi %"class.google::protobuf::Arena"* [ %20, %17 ], [ %22, %21 ]
  %25 = tail call %"class.feedstore::Metadata_SessionID"* @_ZN6google8protobuf5Arena18CreateMaybeMessageIN9feedstore18Metadata_SessionIDEJEEEPT_PS1_DpOT0_(%"class.google::protobuf::Arena"* %24) #14
  store %"class.feedstore::Metadata_SessionID"* %25, %"class.feedstore::Metadata_SessionID"** %7, align 8
  br label %26

26:                                               ; preds = %3, %23
  %27 = phi %"class.feedstore::Metadata_SessionID"* [ %25, %23 ], [ %8, %3 ]
  %28 = getelementptr inbounds %"class.feedstore::Metadata_SessionID", %"class.feedstore::Metadata_SessionID"* %27, i64 0, i32 1
  %29 = getelementptr inbounds %"class.feedstore::Metadata_SessionID", %"class.feedstore::Metadata_SessionID"* %27, i64 0, i32 0, i32 1
  %30 = bitcast %"class.google::protobuf::internal::InternalMetadata"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = and i64 %31, 1
  %33 = icmp eq i64 %32, 0
  %34 = and i64 %31, -2
  br i1 %33, label %39, label %35, !prof !3

35:                                               ; preds = %26
  %36 = inttoptr i64 %34 to %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"*
  %37 = getelementptr inbounds %"struct.google::protobuf::internal::InternalMetadata::ContainerBase", %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"* %36, i64 0, i32 0
  %38 = load %"class.google::protobuf::Arena"*, %"class.google::protobuf::Arena"** %37, align 8
  br label %41

39:                                               ; preds = %26
  %40 = inttoptr i64 %34 to %"class.google::protobuf::Arena"*
  br label %41

41:                                               ; preds = %39, %35
  %42 = phi %"class.google::protobuf::Arena"* [ %38, %35 ], [ %40, %39 ]
  %43 = getelementptr inbounds %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr"* %28, i64 0, i32 0
  %44 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %43, align 8
  %45 = icmp eq %"class.std::__1::basic_string"* %44, bitcast (%"class.google::protobuf::internal::ExplicitlyConstructed"* @_ZN6google8protobuf8internal26fixed_address_empty_stringE to %"class.std::__1::basic_string"*)
  br i1 %45, label %46, label %47

46:                                               ; preds = %41
  tail call void @_ZN6google8protobuf8internal14ArenaStringPtr14CreateInstanceEPNS0_5ArenaEPKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"struct.google::protobuf::internal::ArenaStringPtr"* %28, %"class.google::protobuf::Arena"* %42, %"class.std::__1::basic_string"* %1) #14
  br label %78

47:                                               ; preds = %41
  %48 = icmp eq %"class.std::__1::basic_string"* %44, %1
  br i1 %48, label %78, label %49

49:                                               ; preds = %47
  %50 = bitcast %"class.std::__1::basic_string"* %44 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %53, label %68, label %58

58:                                               ; preds = %49
  br i1 %57, label %62, label %59

59:                                               ; preds = %58
  %60 = bitcast %"class.std::__1::basic_string"* %44 to i8*
  %61 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 24, i1 false) #14
  br label %78

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %44, i8* %64, i64 %66) #14
  br label %78

68:                                               ; preds = %49
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %74 = zext i8 %56 to i64
  %75 = select i1 %57, i8* %70, i8* %73
  %76 = select i1 %57, i64 %72, i64 %74
  %77 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %44, i8* %75, i64 %76) #14
  br label %78

78:                                               ; preds = %46, %47, %59, %62, %68
  %79 = bitcast %"class.base::TimeDelta"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #14
  %80 = call i64 @_ZNK4base4Time24ToDeltaSinceWindowsEpochEv(%"class.base::Time"* nonnull %4) #14
  %81 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 0, i32 0
  store i64 %80, i64* %81, align 8
  %82 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %5) #14
  %83 = getelementptr inbounds %"class.feedstore::Metadata_SessionID", %"class.feedstore::Metadata_SessionID"* %27, i64 0, i32 2
  store i64 %82, i64* %83, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #14
  ret void
}

declare i64 @_ZNK4base4Time24ToDeltaSinceWindowsEpochEv(%"class.base::Time"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9feedstore20MaybeUpdateSessionIdERKNS_8MetadataEN4absl8optionalINSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEE(%"class.absl::optional"* noalias sret, %"class.feedstore::Metadata"* dereferenceable(80), %"class.absl::optional.13"* nocapture readonly) local_unnamed_addr #3 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.feedstore::Metadata", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.absl::optional.13", %"class.absl::optional.13"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !4
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %152, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.feedstore::Metadata", %"class.feedstore::Metadata"* %1, i64 0, i32 4
  %12 = load %"class.feedstore::Metadata_SessionID"*, %"class.feedstore::Metadata_SessionID"** %11, align 8
  %13 = icmp eq %"class.feedstore::Metadata_SessionID"* %12, null
  %14 = select i1 %13, %"class.feedstore::Metadata_SessionID"* bitcast (%"class.feedstore::Metadata_SessionIDDefaultTypeInternal"* @_ZN9feedstore37_Metadata_SessionID_default_instance_E to %"class.feedstore::Metadata_SessionID"*), %"class.feedstore::Metadata_SessionID"* %12
  %15 = getelementptr inbounds %"class.feedstore::Metadata_SessionID", %"class.feedstore::Metadata_SessionID"* %14, i64 0, i32 1, i32 0
  %16 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %15, align 8
  %17 = getelementptr inbounds %"class.absl::optional.13", %"class.absl::optional.13"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %18 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = zext i8 %20 to i64
  %25 = select i1 %21, i64 %23, i64 %24
  %26 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.absl::optional.13", %"class.absl::optional.13"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp eq i64 %25, %33
  br i1 %34, label %35, label %67

35:                                               ; preds = %10
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %39 = select i1 %21, i8* %37, i8* %38
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %43 = select i1 %29, i8* %41, i8* %42
  %44 = icmp eq i64 %25, 0
  br i1 %21, label %51, label %45

45:                                               ; preds = %35
  br i1 %44, label %152, label %46

46:                                               ; preds = %45
  %47 = ptrtoint i8* %37 to i64
  %48 = trunc i64 %47 to i8
  %49 = load i8, i8* %43, align 1
  %50 = icmp eq i8 %49, %48
  br i1 %50, label %52, label %67

51:                                               ; preds = %35
  br i1 %44, label %152, label %64

52:                                               ; preds = %46, %59
  %53 = phi i64 [ %56, %59 ], [ %24, %46 ]
  %54 = phi i8* [ %57, %59 ], [ %38, %46 ]
  %55 = phi i8* [ %60, %59 ], [ %43, %46 ]
  %56 = add i64 %53, -1
  %57 = getelementptr inbounds i8, i8* %54, i64 1
  %58 = icmp eq i64 %56, 0
  br i1 %58, label %152, label %59

59:                                               ; preds = %52
  %60 = getelementptr inbounds i8, i8* %55, i64 1
  %61 = load i8, i8* %57, align 1
  %62 = load i8, i8* %60, align 1
  %63 = icmp eq i8 %61, %62
  br i1 %63, label %52, label %67

64:                                               ; preds = %51
  %65 = tail call i32 @bcmp(i8* %39, i8* %43, i64 %25) #14
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %152, label %67

67:                                               ; preds = %59, %46, %64, %10
  %68 = icmp eq i64 %33, 0
  br i1 %68, label %91, label %69

69:                                               ; preds = %67
  %70 = tail call i64 @_ZN4base4Time3NowEv() #14
  %71 = tail call dereferenceable(200) %"struct.feed::Config"* @_ZN4feed13GetFeedConfigEv() #14
  %72 = getelementptr inbounds %"struct.feed::Config", %"struct.feed::Config"* %71, i64 0, i32 17, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %73, -9223372036854775807
  %75 = icmp ult i64 %74, 2
  br i1 %75, label %83, label %76

76:                                               ; preds = %69
  %77 = icmp slt i64 %73, 0
  %78 = select i1 %77, i64 -9223372036854775808, i64 9223372036854775807
  %79 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %70, i64 %73) #14
  %80 = extractvalue { i64, i1 } %79, 1
  %81 = extractvalue { i64, i1 } %79, 0
  %82 = select i1 %80, i64 %78, i64 %81, !prof !2
  br label %91

83:                                               ; preds = %69
  %84 = add i64 %70, -9223372036854775807
  %85 = icmp ugt i64 %84, 1
  %86 = icmp eq i64 %70, %73
  %87 = or i1 %85, %86
  br i1 %87, label %91, label %88

88:                                               ; preds = %83
  %89 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #14
  %90 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #14
  br label %91

91:                                               ; preds = %88, %83, %76, %67
  %92 = phi i64 [ 0, %67 ], [ %82, %76 ], [ %73, %83 ], [ %73, %88 ]
  %93 = bitcast %"class.feedstore::Metadata"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %93) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 -86, i64 80, i1 false)
  call void @_ZN9feedstore8MetadataC1ERKS0_(%"class.feedstore::Metadata"* nonnull %5, %"class.feedstore::Metadata"* dereferenceable(80) %1) #14
  %94 = load i8, i8* %7, align 8, !range !4
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %96, label %97, !prof !2

96:                                               ; preds = %91
  call void @llvm.trap() #14
  unreachable

97:                                               ; preds = %91
  %98 = load i8, i8* %27, align 1
  %99 = icmp slt i8 %98, 0
  br i1 %99, label %103, label %100

100:                                              ; preds = %97
  %101 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %102 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %101, i8* align 8 %102, i64 24, i1 false) #14
  br label %107

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load i8*, i8** %104, align 8
  %106 = load i64, i64* %30, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %6, i8* %105, i64 %106) #14
  br label %107

107:                                              ; preds = %100, %103
  call void @_ZN9feedstore12SetSessionIdERNS_8MetadataENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN4base4TimeE(%"class.feedstore::Metadata"* nonnull dereferenceable(80) %5, %"class.std::__1::basic_string"* nonnull %6, i64 %92)
  %108 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %110 = load i8, i8* %109, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %112, label %115

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load i8*, i8** %113, align 8
  call void @_ZdlPv(i8* %114) #15
  br label %115

115:                                              ; preds = %107, %112
  %116 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %116, align 8
  %117 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN9feedstore8MetadataC2EPN6google8protobuf5ArenaE(%"class.feedstore::Metadata"* %117, %"class.google::protobuf::Arena"* null) #14
  %118 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 1
  %119 = bitcast %"class.google::protobuf::internal::InternalMetadata"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = and i64 %120, 1
  %122 = icmp eq i64 %121, 0
  %123 = and i64 %120, -2
  br i1 %122, label %128, label %124, !prof !3

124:                                              ; preds = %115
  %125 = inttoptr i64 %123 to %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"*
  %126 = getelementptr inbounds %"struct.google::protobuf::internal::InternalMetadata::ContainerBase", %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"* %125, i64 0, i32 0
  %127 = load %"class.google::protobuf::Arena"*, %"class.google::protobuf::Arena"** %126, align 8
  br label %130

128:                                              ; preds = %115
  %129 = inttoptr i64 %123 to %"class.google::protobuf::Arena"*
  br label %130

130:                                              ; preds = %128, %124
  %131 = phi %"class.google::protobuf::Arena"* [ %127, %124 ], [ %129, %128 ]
  %132 = getelementptr inbounds %"class.feedstore::Metadata", %"class.feedstore::Metadata"* %5, i64 0, i32 0, i32 1
  %133 = bitcast %"class.google::protobuf::internal::InternalMetadata"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = and i64 %134, 1
  %136 = icmp eq i64 %135, 0
  %137 = and i64 %134, -2
  br i1 %136, label %142, label %138, !prof !3

138:                                              ; preds = %130
  %139 = inttoptr i64 %137 to %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"*
  %140 = getelementptr inbounds %"struct.google::protobuf::internal::InternalMetadata::ContainerBase", %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"* %139, i64 0, i32 0
  %141 = load %"class.google::protobuf::Arena"*, %"class.google::protobuf::Arena"** %140, align 8
  br label %144

142:                                              ; preds = %130
  %143 = inttoptr i64 %137 to %"class.google::protobuf::Arena"*
  br label %144

144:                                              ; preds = %142, %138
  %145 = phi %"class.google::protobuf::Arena"* [ %141, %138 ], [ %143, %142 ]
  %146 = icmp eq %"class.google::protobuf::Arena"* %131, %145
  br i1 %146, label %147, label %150

147:                                              ; preds = %144
  %148 = icmp eq %"class.feedstore::Metadata"* %117, %5
  br i1 %148, label %151, label %149

149:                                              ; preds = %147
  call void @_ZN9feedstore8Metadata12InternalSwapEPS0_(%"class.feedstore::Metadata"* %117, %"class.feedstore::Metadata"* nonnull %5) #14
  br label %151

150:                                              ; preds = %144
  call void @_ZN9feedstore8Metadata8CopyFromERKS0_(%"class.feedstore::Metadata"* %117, %"class.feedstore::Metadata"* nonnull dereferenceable(80) %5) #14
  br label %151

151:                                              ; preds = %147, %149, %150
  call void @_ZN9feedstore8MetadataD1Ev(%"class.feedstore::Metadata"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %93) #14
  br label %156

152:                                              ; preds = %52, %64, %3, %45, %51
  %153 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %153, align 8
  %154 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %155 = bitcast %union.anon.12* %154 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %155, i8 0, i64 80, i1 false) #14
  br label %156

156:                                              ; preds = %152, %151
  ret void
}

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #4

declare dereferenceable(200) %"struct.feed::Config"* @_ZN4feed13GetFeedConfigEv() local_unnamed_addr #4

declare void @_ZN9feedstore8MetadataC1ERKS0_(%"class.feedstore::Metadata"*, %"class.feedstore::Metadata"* dereferenceable(80)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9feedstore8MetadataD1Ev(%"class.feedstore::Metadata"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN9feedstore15GetNextActionIdERNS_8MetadataE(%"class.feedstore::Metadata"* nocapture dereferenceable(80)) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %"class.feedstore::Metadata", %"class.feedstore::Metadata"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  %5 = select i1 %4, i32 1, i32 %3
  %6 = add i32 %5, 1
  store i32 %6, i32* %2, align 8
  ret i32 %5
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"class.feedstore::Metadata_StreamMetadata"* @_ZN9feedstore21FindMetadataForStreamERKNS_8MetadataERKN4feed10StreamTypeE(%"class.feedstore::Metadata"* nocapture readonly dereferenceable(80), %"class.feed::StreamType"* nocapture readonly dereferenceable(4)) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"class.feedstore::Metadata", %"class.feedstore::Metadata"* %0, i64 0, i32 1, i32 0, i32 3
  %4 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %3, align 8
  %5 = icmp eq %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %4, null
  %6 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %4, i64 0, i32 1, i64 0
  %7 = select i1 %5, i8** null, i8** %6
  %8 = getelementptr inbounds %"class.feedstore::Metadata", %"class.feedstore::Metadata"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds i8*, i8** %7, i64 %10
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %43, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.feed::StreamType", %"class.feed::StreamType"* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 1
  %17 = select i1 %16, i8 105, i8 119
  br label %18

18:                                               ; preds = %13, %40
  %19 = phi i8** [ %41, %40 ], [ %7, %13 ]
  %20 = bitcast i8** %19 to %"class.feedstore::Metadata_StreamMetadata"**
  %21 = load %"class.feedstore::Metadata_StreamMetadata"*, %"class.feedstore::Metadata_StreamMetadata"** %20, align 8
  %22 = getelementptr inbounds %"class.feedstore::Metadata_StreamMetadata", %"class.feedstore::Metadata_StreamMetadata"* %21, i64 0, i32 3, i32 0
  %23 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %22, align 8
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp eq i64 %31, 1
  br i1 %32, label %33, label %40

33:                                               ; preds = %18
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  %37 = select i1 %27, i8* %35, i8* %36
  %38 = load i8, i8* %37, align 1
  %39 = icmp eq i8 %38, %17
  br i1 %39, label %43, label %40

40:                                               ; preds = %18, %33
  %41 = getelementptr inbounds i8*, i8** %19, i64 1
  %42 = icmp eq i8** %41, %11
  br i1 %42, label %43, label %18

43:                                               ; preds = %33, %40, %2
  %44 = phi %"class.feedstore::Metadata_StreamMetadata"* [ null, %2 ], [ null, %40 ], [ %21, %33 ]
  ret %"class.feedstore::Metadata_StreamMetadata"* %44
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(56) %"class.feedstore::Metadata_StreamMetadata"* @_ZN9feedstore17MetadataForStreamERNS_8MetadataERKN4feed10StreamTypeE(%"class.feedstore::Metadata"* dereferenceable(80), %"class.feed::StreamType"* nocapture readonly dereferenceable(4)) local_unnamed_addr #3 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.feedstore::Metadata", %"class.feedstore::Metadata"* %0, i64 0, i32 1, i32 0, i32 3
  %5 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %4, align 8
  %6 = icmp eq %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %5, null
  %7 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %5, i64 0, i32 1, i64 0
  %8 = select i1 %6, i8** null, i8** %7
  %9 = getelementptr inbounds %"class.feedstore::Metadata", %"class.feedstore::Metadata"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds i8*, i8** %8, i64 %11
  %13 = icmp eq i32 %10, 0
  br i1 %13, label %46, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.feed::StreamType", %"class.feed::StreamType"* %1, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 1
  %18 = select i1 %17, i8 105, i8 119
  br label %19

19:                                               ; preds = %41, %14
  %20 = phi i8** [ %42, %41 ], [ %8, %14 ]
  %21 = bitcast i8** %20 to %"class.feedstore::Metadata_StreamMetadata"**
  %22 = load %"class.feedstore::Metadata_StreamMetadata"*, %"class.feedstore::Metadata_StreamMetadata"** %21, align 8
  %23 = getelementptr inbounds %"class.feedstore::Metadata_StreamMetadata", %"class.feedstore::Metadata_StreamMetadata"* %22, i64 0, i32 3, i32 0
  %24 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %23, align 8
  %25 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = zext i8 %27 to i64
  %32 = select i1 %28, i64 %30, i64 %31
  %33 = icmp eq i64 %32, 1
  br i1 %33, label %34, label %41

34:                                               ; preds = %19
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  %38 = select i1 %28, i8* %36, i8* %37
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, %18
  br i1 %40, label %44, label %41

41:                                               ; preds = %34, %19
  %42 = getelementptr inbounds i8*, i8** %20, i64 1
  %43 = icmp eq i8** %42, %12
  br i1 %43, label %46, label %19

44:                                               ; preds = %34
  %45 = icmp eq %"class.feedstore::Metadata_StreamMetadata"* %22, null
  br i1 %45, label %46, label %132

46:                                               ; preds = %41, %2, %44
  %47 = getelementptr inbounds %"class.feedstore::Metadata", %"class.feedstore::Metadata"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %"class.google::protobuf::RepeatedPtrField.11", %"class.google::protobuf::RepeatedPtrField.11"* %47, i64 0, i32 0
  br i1 %6, label %49, label %52

49:                                               ; preds = %46
  %50 = getelementptr inbounds %"class.feedstore::Metadata", %"class.feedstore::Metadata"* %0, i64 0, i32 1, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  br label %65

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %5, i64 0, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = icmp slt i32 %10, %54
  br i1 %55, label %56, label %61

56:                                               ; preds = %52
  %57 = add nsw i32 %10, 1
  store i32 %57, i32* %9, align 8
  %58 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %5, i64 0, i32 1, i64 %11
  %59 = bitcast i8** %58 to %"class.feedstore::Metadata_StreamMetadata"**
  %60 = load %"class.feedstore::Metadata_StreamMetadata"*, %"class.feedstore::Metadata_StreamMetadata"** %59, align 8
  br label %85

61:                                               ; preds = %52
  %62 = getelementptr inbounds %"class.feedstore::Metadata", %"class.feedstore::Metadata"* %0, i64 0, i32 1, i32 0, i32 2
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %54, %63
  br i1 %64, label %65, label %71

65:                                               ; preds = %61, %49
  %66 = phi i32 [ %51, %49 ], [ %54, %61 ]
  %67 = add nsw i32 %66, 1
  tail call void @_ZN6google8protobuf8internal20RepeatedPtrFieldBase7ReserveEi(%"class.google::protobuf::internal::RepeatedPtrFieldBase"* %48, i32 %67) #14
  %68 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %4, align 8
  %69 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %68, i64 0, i32 0
  %70 = load i32, i32* %69, align 8
  br label %71

71:                                               ; preds = %65, %61
  %72 = phi i32 [ %70, %65 ], [ %54, %61 ]
  %73 = phi %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* [ %68, %65 ], [ %5, %61 ]
  %74 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %73, i64 0, i32 0
  %75 = add nsw i32 %72, 1
  store i32 %75, i32* %74, align 8
  %76 = getelementptr inbounds %"class.google::protobuf::RepeatedPtrField.11", %"class.google::protobuf::RepeatedPtrField.11"* %47, i64 0, i32 0, i32 0
  %77 = load %"class.google::protobuf::Arena"*, %"class.google::protobuf::Arena"** %76, align 8
  %78 = tail call %"class.feedstore::Metadata_StreamMetadata"* @_ZN6google8protobuf5Arena18CreateMaybeMessageIN9feedstore23Metadata_StreamMetadataEJEEEPT_PS1_DpOT0_(%"class.google::protobuf::Arena"* %77) #14
  %79 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %4, align 8
  %80 = load i32, i32* %9, align 8
  %81 = add nsw i32 %80, 1
  store i32 %81, i32* %9, align 8
  %82 = sext i32 %80 to i64
  %83 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %79, i64 0, i32 1, i64 %82
  %84 = bitcast i8** %83 to %"class.feedstore::Metadata_StreamMetadata"**
  store %"class.feedstore::Metadata_StreamMetadata"* %78, %"class.feedstore::Metadata_StreamMetadata"** %84, align 8
  br label %85

85:                                               ; preds = %56, %71
  %86 = phi %"class.feedstore::Metadata_StreamMetadata"* [ %60, %56 ], [ %78, %71 ]
  %87 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87) #14
  %88 = getelementptr inbounds %"class.feed::StreamType", %"class.feed::StreamType"* %1, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, 1
  %91 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %91, i64 0, i32 1, i32 0
  store i8 1, i8* %92, align 1, !alias.scope !5
  %93 = select i1 %90, i8 105, i8 119
  store i8 %93, i8* %87, align 8
  %94 = getelementptr inbounds i8, i8* %87, i64 1
  store i8 0, i8* %94, align 1
  %95 = getelementptr inbounds %"class.feedstore::Metadata_StreamMetadata", %"class.feedstore::Metadata_StreamMetadata"* %86, i64 0, i32 3
  %96 = getelementptr inbounds %"class.feedstore::Metadata_StreamMetadata", %"class.feedstore::Metadata_StreamMetadata"* %86, i64 0, i32 0, i32 1
  %97 = bitcast %"class.google::protobuf::internal::InternalMetadata"* %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = and i64 %98, 1
  %100 = icmp eq i64 %99, 0
  %101 = and i64 %98, -2
  br i1 %100, label %106, label %102, !prof !3

102:                                              ; preds = %85
  %103 = inttoptr i64 %101 to %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"*
  %104 = getelementptr inbounds %"struct.google::protobuf::internal::InternalMetadata::ContainerBase", %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"* %103, i64 0, i32 0
  %105 = load %"class.google::protobuf::Arena"*, %"class.google::protobuf::Arena"** %104, align 8
  br label %108

106:                                              ; preds = %85
  %107 = inttoptr i64 %101 to %"class.google::protobuf::Arena"*
  br label %108

108:                                              ; preds = %106, %102
  %109 = phi %"class.google::protobuf::Arena"* [ %105, %102 ], [ %107, %106 ]
  %110 = getelementptr inbounds %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr"* %95, i64 0, i32 0
  %111 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %110, align 8
  %112 = icmp eq %"class.std::__1::basic_string"* %111, bitcast (%"class.google::protobuf::internal::ExplicitlyConstructed"* @_ZN6google8protobuf8internal26fixed_address_empty_stringE to %"class.std::__1::basic_string"*)
  br i1 %112, label %113, label %114

113:                                              ; preds = %108
  call void @_ZN6google8protobuf8internal14ArenaStringPtr14CreateInstanceEPNS0_5ArenaEPKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"struct.google::protobuf::internal::ArenaStringPtr"* %95, %"class.google::protobuf::Arena"* %109, %"class.std::__1::basic_string"* nonnull %3) #14
  br label %125

114:                                              ; preds = %108
  %115 = icmp eq %"class.std::__1::basic_string"* %111, %3
  br i1 %115, label %125, label %116

116:                                              ; preds = %114
  %117 = bitcast %"class.std::__1::basic_string"* %111 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %117, i64 0, i32 1, i32 0
  %119 = load i8, i8* %118, align 1
  %120 = icmp slt i8 %119, 0
  br i1 %120, label %123, label %121

121:                                              ; preds = %116
  %122 = bitcast %"class.std::__1::basic_string"* %111 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %122, i8* nonnull align 8 %87, i64 24, i1 false) #14
  br label %125

123:                                              ; preds = %116
  %124 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %111, i8* nonnull %87, i64 1) #14
  br label %125

125:                                              ; preds = %113, %114, %121, %123
  %126 = load i8, i8* %92, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %128, label %131

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  call void @_ZdlPv(i8* %130) #15
  br label %131

131:                                              ; preds = %125, %128
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87) #14
  br label %132

132:                                              ; preds = %44, %131
  %133 = phi %"class.feedstore::Metadata_StreamMetadata"* [ %86, %131 ], [ %22, %44 ]
  ret %"class.feedstore::Metadata_StreamMetadata"* %133
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9feedstore23SetStreamViewContentIdsERNS_8MetadataERKN4feed10StreamTypeERKNS2_12ContentIdSetE(%"class.feedstore::Metadata"* dereferenceable(80), %"class.feed::StreamType"* nocapture readonly dereferenceable(4), %"class.feed::ContentIdSet"* nocapture readonly dereferenceable(24)) local_unnamed_addr #3 {
  %4 = tail call dereferenceable(56) %"class.feedstore::Metadata_StreamMetadata"* @_ZN9feedstore17MetadataForStreamERNS_8MetadataERKN4feed10StreamTypeE(%"class.feedstore::Metadata"* dereferenceable(80) %0, %"class.feed::StreamType"* dereferenceable(4) %1)
  %5 = getelementptr inbounds %"class.feedstore::Metadata_StreamMetadata", %"class.feedstore::Metadata_StreamMetadata"* %4, i64 0, i32 1, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"class.feedstore::Metadata_StreamMetadata", %"class.feedstore::Metadata_StreamMetadata"* %4, i64 0, i32 1
  %7 = getelementptr inbounds %"class.feed::ContentIdSet", %"class.feed::ContentIdSet"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr inbounds %"class.feed::ContentIdSet", %"class.feed::ContentIdSet"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64*, i64** %9, align 8
  %11 = ptrtoint i64* %8 to i64
  %12 = ptrtoint i64* %10 to i64
  %13 = sub i64 %12, %11
  %14 = lshr exact i64 %13, 3
  %15 = trunc i64 %14 to i32
  switch i32 %15, label %16 [
    i32 -1, label %31
    i32 0, label %67
  ]

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.google::protobuf::RepeatedField", %"class.google::protobuf::RepeatedField"* %6, i64 0, i32 0
  tail call void @_ZN6google8protobuf13RepeatedFieldIlE7ReserveEi(%"class.google::protobuf::RepeatedField"* %6, i32 %15) #14
  %18 = icmp eq i64 %13, 0
  br i1 %18, label %28, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.feedstore::Metadata_StreamMetadata", %"class.feedstore::Metadata_StreamMetadata"* %4, i64 0, i32 1, i32 2
  %21 = bitcast i8** %20 to i64**
  %22 = load i64*, i64** %21, align 8
  %23 = load i32, i32* %17, align 8
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i64, i64* %22, i64 %24
  %26 = bitcast i64* %25 to i8*
  %27 = bitcast i64* %8 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 %13, i1 false) #14
  br label %28

28:                                               ; preds = %19, %16
  %29 = load i32, i32* %17, align 8
  %30 = add nsw i32 %29, %15
  store i32 %30, i32* %17, align 8
  br label %67

31:                                               ; preds = %3
  %32 = getelementptr inbounds %"class.google::protobuf::RepeatedField", %"class.google::protobuf::RepeatedField"* %6, i64 0, i32 0
  %33 = getelementptr inbounds %"class.feedstore::Metadata_StreamMetadata", %"class.feedstore::Metadata_StreamMetadata"* %4, i64 0, i32 1, i32 1
  %34 = getelementptr inbounds %"class.feedstore::Metadata_StreamMetadata", %"class.feedstore::Metadata_StreamMetadata"* %4, i64 0, i32 1, i32 2
  %35 = bitcast i8** %34 to i64*
  %36 = icmp eq i64* %8, %10
  br i1 %36, label %65, label %37

37:                                               ; preds = %31
  %38 = load i64, i64* %35, align 8
  %39 = load i32, i32* %33, align 4
  br label %40

40:                                               ; preds = %55, %37
  %41 = phi i64 [ 0, %37 ], [ %56, %55 ]
  %42 = phi i32 [ %39, %37 ], [ %58, %55 ]
  %43 = phi i64 [ %38, %37 ], [ %57, %55 ]
  %44 = phi i64* [ %8, %37 ], [ %61, %55 ]
  %45 = load i64, i64* %44, align 8
  %46 = trunc i64 %41 to i32
  %47 = icmp eq i32 %42, %46
  br i1 %47, label %50, label %48

48:                                               ; preds = %40
  %49 = add i64 %41, 1
  br label %55

50:                                               ; preds = %40
  store i32 %42, i32* %32, align 8
  %51 = add i64 %41, 1
  %52 = trunc i64 %51 to i32
  tail call void @_ZN6google8protobuf13RepeatedFieldIlE7ReserveEi(%"class.google::protobuf::RepeatedField"* %6, i32 %52) #14
  %53 = load i32, i32* %33, align 4
  %54 = load i64, i64* %35, align 8
  br label %55

55:                                               ; preds = %50, %48
  %56 = phi i64 [ %49, %48 ], [ %51, %50 ]
  %57 = phi i64 [ %43, %48 ], [ %54, %50 ]
  %58 = phi i32 [ %42, %48 ], [ %53, %50 ]
  %59 = inttoptr i64 %57 to i64*
  %60 = getelementptr inbounds i64, i64* %59, i64 %41
  store i64 %45, i64* %60, align 8
  %61 = getelementptr inbounds i64, i64* %44, i64 1
  %62 = icmp eq i64* %61, %10
  br i1 %62, label %63, label %40

63:                                               ; preds = %55
  %64 = trunc i64 %56 to i32
  br label %65

65:                                               ; preds = %63, %31
  %66 = phi i32 [ 0, %31 ], [ %64, %63 ]
  store i32 %66, i32* %32, align 8
  br label %67

67:                                               ; preds = %3, %28, %65
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN9feedstore12IsKnownStaleERKNS_8MetadataERKN4feed10StreamTypeE(%"class.feedstore::Metadata"* nocapture readonly dereferenceable(80), %"class.feed::StreamType"* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.feedstore::Metadata", %"class.feedstore::Metadata"* %0, i64 0, i32 1, i32 0, i32 3
  %4 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %3, align 8
  %5 = icmp eq %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %4, null
  %6 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %4, i64 0, i32 1, i64 0
  %7 = select i1 %5, i8** null, i8** %6
  %8 = getelementptr inbounds %"class.feedstore::Metadata", %"class.feedstore::Metadata"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds i8*, i8** %7, i64 %10
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %49, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.feed::StreamType", %"class.feed::StreamType"* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 1
  %17 = select i1 %16, i8 105, i8 119
  br label %18

18:                                               ; preds = %40, %13
  %19 = phi i8** [ %41, %40 ], [ %7, %13 ]
  %20 = bitcast i8** %19 to %"class.feedstore::Metadata_StreamMetadata"**
  %21 = load %"class.feedstore::Metadata_StreamMetadata"*, %"class.feedstore::Metadata_StreamMetadata"** %20, align 8
  %22 = getelementptr inbounds %"class.feedstore::Metadata_StreamMetadata", %"class.feedstore::Metadata_StreamMetadata"* %21, i64 0, i32 3, i32 0
  %23 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %22, align 8
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp eq i64 %31, 1
  br i1 %32, label %33, label %40

33:                                               ; preds = %18
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  %37 = select i1 %27, i8* %35, i8* %36
  %38 = load i8, i8* %37, align 1
  %39 = icmp eq i8 %38, %17
  br i1 %39, label %43, label %40

40:                                               ; preds = %33, %18
  %41 = getelementptr inbounds i8*, i8** %19, i64 1
  %42 = icmp eq i8** %41, %11
  br i1 %42, label %49, label %18

43:                                               ; preds = %33
  %44 = icmp eq %"class.feedstore::Metadata_StreamMetadata"* %21, null
  br i1 %44, label %49, label %45

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"class.feedstore::Metadata_StreamMetadata", %"class.feedstore::Metadata_StreamMetadata"* %21, i64 0, i32 4
  %47 = load i8, i8* %46, align 8, !range !4
  %48 = icmp ne i8 %47, 0
  br label %49

49:                                               ; preds = %40, %2, %43, %45
  %50 = phi i1 [ %48, %45 ], [ false, %43 ], [ false, %2 ], [ false, %40 ]
  ret i1 %50
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9feedstore12MakeMetadataERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.feedstore::Metadata"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3 {
  %3 = bitcast %"class.feedstore::Metadata"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -86, i64 80, i1 false)
  tail call void @_ZN9feedstore8MetadataC2EPN6google8protobuf5ArenaE(%"class.feedstore::Metadata"* %0, %"class.google::protobuf::Arena"* null) #14
  %4 = getelementptr inbounds %"class.feedstore::Metadata", %"class.feedstore::Metadata"* %0, i64 0, i32 6
  store i32 1, i32* %4, align 4
  %5 = getelementptr inbounds %"class.feedstore::Metadata", %"class.feedstore::Metadata"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.feedstore::Metadata", %"class.feedstore::Metadata"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.google::protobuf::internal::InternalMetadata"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 1
  %10 = icmp eq i64 %9, 0
  %11 = and i64 %8, -2
  br i1 %10, label %16, label %12, !prof !3

12:                                               ; preds = %2
  %13 = inttoptr i64 %11 to %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"*
  %14 = getelementptr inbounds %"struct.google::protobuf::internal::InternalMetadata::ContainerBase", %"struct.google::protobuf::internal::InternalMetadata::ContainerBase"* %13, i64 0, i32 0
  %15 = load %"class.google::protobuf::Arena"*, %"class.google::protobuf::Arena"** %14, align 8
  br label %18

16:                                               ; preds = %2
  %17 = inttoptr i64 %11 to %"class.google::protobuf::Arena"*
  br label %18

18:                                               ; preds = %16, %12
  %19 = phi %"class.google::protobuf::Arena"* [ %15, %12 ], [ %17, %16 ]
  %20 = getelementptr inbounds %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr"* %5, i64 0, i32 0
  %21 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %20, align 8
  %22 = icmp eq %"class.std::__1::basic_string"* %21, bitcast (%"class.google::protobuf::internal::ExplicitlyConstructed"* @_ZN6google8protobuf8internal26fixed_address_empty_stringE to %"class.std::__1::basic_string"*)
  br i1 %22, label %23, label %24

23:                                               ; preds = %18
  tail call void @_ZN6google8protobuf8internal14ArenaStringPtr14CreateInstanceEPNS0_5ArenaEPKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"struct.google::protobuf::internal::ArenaStringPtr"* %5, %"class.google::protobuf::Arena"* %19, %"class.std::__1::basic_string"* %1) #14
  br label %55

24:                                               ; preds = %18
  %25 = icmp eq %"class.std::__1::basic_string"* %21, %1
  br i1 %25, label %55, label %26

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  %31 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %30, label %45, label %35

35:                                               ; preds = %26
  br i1 %34, label %39, label %36

36:                                               ; preds = %35
  %37 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #14
  br label %55

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %21, i8* %41, i64 %43) #14
  br label %55

45:                                               ; preds = %26
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %51 = zext i8 %33 to i64
  %52 = select i1 %34, i8* %47, i8* %50
  %53 = select i1 %34, i64 %49, i64 %51
  %54 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %21, i8* %52, i64 %53) #14
  br label %55

55:                                               ; preds = %23, %24, %36, %39, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9feedstore23SetStreamViewContentIdsERKNS_8MetadataERKN4feed10StreamTypeERKNS3_12ContentIdSetE(%"class.absl::optional"* noalias sret, %"class.feedstore::Metadata"* dereferenceable(80), %"class.feed::StreamType"* nocapture readonly dereferenceable(4), %"class.feed::ContentIdSet"* dereferenceable(24)) local_unnamed_addr #3 {
  %5 = alloca %"class.feed::ContentIdSet", align 8
  %6 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.absl::optional"* %0 to i64*
  store i64 -6148914691236517206, i64* %7, align 8
  store i8 0, i8* %6, align 8
  %8 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = bitcast %union.anon.12* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 80, i1 false) #14
  %10 = bitcast %"class.feed::ContentIdSet"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #14
  call void @_ZN9feedstore17GetViewContentIdsERKNS_8MetadataERKN4feed10StreamTypeE(%"class.feed::ContentIdSet"* nonnull sret %5, %"class.feedstore::Metadata"* dereferenceable(80) %1, %"class.feed::StreamType"* dereferenceable(4) %2)
  %11 = call zeroext i1 @_ZNK4feed12ContentIdSeteqERKS0_(%"class.feed::ContentIdSet"* nonnull %5, %"class.feed::ContentIdSet"* dereferenceable(24) %3) #14
  call void @_ZN4feed12ContentIdSetD1Ev(%"class.feed::ContentIdSet"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #14
  br i1 %11, label %14, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN9feedstore8MetadataC1ERKS0_(%"class.feedstore::Metadata"* %13, %"class.feedstore::Metadata"* dereferenceable(80) %1) #14
  store i8 1, i8* %6, align 8
  call void @_ZN9feedstore23SetStreamViewContentIdsERNS_8MetadataERKN4feed10StreamTypeERKNS2_12ContentIdSetE(%"class.feedstore::Metadata"* dereferenceable(80) %13, %"class.feed::StreamType"* dereferenceable(4) %2, %"class.feed::ContentIdSet"* dereferenceable(24) %3)
  br label %14

14:                                               ; preds = %12, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9feedstore17GetViewContentIdsERKNS_8MetadataERKN4feed10StreamTypeE(%"class.feed::ContentIdSet"* noalias sret, %"class.feedstore::Metadata"* nocapture readonly dereferenceable(80), %"class.feed::StreamType"* nocapture readonly dereferenceable(4)) local_unnamed_addr #3 {
  %4 = alloca %"class.base::internal::flat_tree.23", align 8
  %5 = alloca %"struct.std::__1::less", align 1
  %6 = getelementptr inbounds %"class.feedstore::Metadata", %"class.feedstore::Metadata"* %1, i64 0, i32 1, i32 0, i32 3
  %7 = load %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"*, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"** %6, align 8
  %8 = icmp eq %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %7, null
  %9 = getelementptr inbounds %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep", %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* %7, i64 0, i32 1, i64 0
  %10 = select i1 %8, i8** null, i8** %9
  %11 = getelementptr inbounds %"class.feedstore::Metadata", %"class.feedstore::Metadata"* %1, i64 0, i32 1, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds i8*, i8** %10, i64 %13
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %66, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.feed::StreamType", %"class.feed::StreamType"* %2, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 1
  %20 = select i1 %19, i8 105, i8 119
  br label %21

21:                                               ; preds = %43, %16
  %22 = phi i8** [ %44, %43 ], [ %10, %16 ]
  %23 = bitcast i8** %22 to %"class.feedstore::Metadata_StreamMetadata"**
  %24 = load %"class.feedstore::Metadata_StreamMetadata"*, %"class.feedstore::Metadata_StreamMetadata"** %23, align 8
  %25 = getelementptr inbounds %"class.feedstore::Metadata_StreamMetadata", %"class.feedstore::Metadata_StreamMetadata"* %24, i64 0, i32 3, i32 0
  %26 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %25, align 8
  %27 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = zext i8 %29 to i64
  %34 = select i1 %30, i64 %32, i64 %33
  %35 = icmp eq i64 %34, 1
  br i1 %35, label %36, label %43

36:                                               ; preds = %21
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  %40 = select i1 %30, i8* %38, i8* %39
  %41 = load i8, i8* %40, align 1
  %42 = icmp eq i8 %41, %20
  br i1 %42, label %46, label %43

43:                                               ; preds = %36, %21
  %44 = getelementptr inbounds i8*, i8** %22, i64 1
  %45 = icmp eq i8** %44, %14
  br i1 %45, label %66, label %21

46:                                               ; preds = %36
  %47 = icmp eq %"class.feedstore::Metadata_StreamMetadata"* %24, null
  br i1 %47, label %66, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds %"class.feedstore::Metadata_StreamMetadata", %"class.feedstore::Metadata_StreamMetadata"* %24, i64 0, i32 1, i32 2
  %50 = bitcast i8** %49 to i64**
  %51 = load i64*, i64** %50, align 8
  %52 = getelementptr inbounds %"class.feedstore::Metadata_StreamMetadata", %"class.feedstore::Metadata_StreamMetadata"* %24, i64 0, i32 1, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i64, i64* %51, i64 %54
  %56 = getelementptr inbounds %"struct.std::__1::less", %"struct.std::__1::less"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %56) #14
  call void @_ZN4base8internal9flat_treeIlNS_8identityENSt3__14lessIvEENS3_6vectorIlNS3_9allocatorIlEEEEEC2IPKlEET_SE_RKS5_(%"class.base::internal::flat_tree.23"* nonnull %4, i64* %51, i64* %55, %"struct.std::__1::less"* nonnull dereferenceable(1) %5)
  call void @_ZN4feed12ContentIdSetC1EN4base8internal9flat_treeIlNS1_8identityENSt3__14lessIvEENS5_6vectorIlNS5_9allocatorIlEEEEEE(%"class.feed::ContentIdSet"* %0, %"class.base::internal::flat_tree.23"* nonnull %4) #14
  %57 = getelementptr inbounds %"class.base::internal::flat_tree.23", %"class.base::internal::flat_tree.23"* %4, i64 0, i32 0, i32 0, i32 0
  %58 = load i64*, i64** %57, align 8
  %59 = icmp eq i64* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %48
  %61 = ptrtoint i64* %58 to i64
  %62 = getelementptr inbounds %"class.base::internal::flat_tree.23", %"class.base::internal::flat_tree.23"* %4, i64 0, i32 0, i32 0, i32 1
  %63 = bitcast i64** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = bitcast i64* %58 to i8*
  call void @_ZdlPv(i8* %64) #15
  br label %65

65:                                               ; preds = %48, %60
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %56) #14
  br label %67

66:                                               ; preds = %43, %3, %46
  tail call void @_ZN4feed12ContentIdSetC1Ev(%"class.feed::ContentIdSet"* %0) #14
  br label %67

67:                                               ; preds = %66, %65
  ret void
}

declare zeroext i1 @_ZNK4feed12ContentIdSeteqERKS0_(%"class.feed::ContentIdSet"*, %"class.feed::ContentIdSet"* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4feed12ContentIdSetD1Ev(%"class.feed::ContentIdSet"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9feedstore13GetContentIdsERKNS_10StreamDataE(%"class.feed::ContentIdSet"* noalias sret, %"class.feedstore::StreamData"* nocapture readonly dereferenceable(104)) local_unnamed_addr #3 {
  %3 = alloca %"class.base::internal::flat_tree.23", align 8
  %4 = alloca %"struct.std::__1::less", align 1
  %5 = getelementptr inbounds %"class.feedstore::StreamData", %"class.feedstore::StreamData"* %1, i64 0, i32 2, i32 2
  %6 = bitcast i8** %5 to i64**
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds %"class.feedstore::StreamData", %"class.feedstore::StreamData"* %1, i64 0, i32 2, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds i64, i64* %7, i64 %10
  %12 = getelementptr inbounds %"struct.std::__1::less", %"struct.std::__1::less"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #14
  call void @_ZN4base8internal9flat_treeIlNS_8identityENSt3__14lessIvEENS3_6vectorIlNS3_9allocatorIlEEEEEC2IPKlEET_SE_RKS5_(%"class.base::internal::flat_tree.23"* nonnull %3, i64* %7, i64* %11, %"struct.std::__1::less"* nonnull dereferenceable(1) %4)
  call void @_ZN4feed12ContentIdSetC1EN4base8internal9flat_treeIlNS1_8identityENSt3__14lessIvEENS5_6vectorIlNS5_9allocatorIlEEEEEE(%"class.feed::ContentIdSet"* %0, %"class.base::internal::flat_tree.23"* nonnull %3) #14
  %13 = getelementptr inbounds %"class.base::internal::flat_tree.23", %"class.base::internal::flat_tree.23"* %3, i64 0, i32 0, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = icmp eq i64* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %2
  %17 = ptrtoint i64* %14 to i64
  %18 = getelementptr inbounds %"class.base::internal::flat_tree.23", %"class.base::internal::flat_tree.23"* %3, i64 0, i32 0, i32 0, i32 1
  %19 = bitcast i64** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast i64* %14 to i8*
  call void @_ZdlPv(i8* %20) #15
  br label %21

21:                                               ; preds = %2, %16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9flat_treeIlNS_8identityENSt3__14lessIvEENS3_6vectorIlNS3_9allocatorIlEEEEEC2IPKlEET_SE_RKS5_(%"class.base::internal::flat_tree.23"*, i64*, i64*, %"struct.std::__1::less"* dereferenceable(1)) unnamed_addr #3 comdat align 2 {
  %5 = alloca %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare", align 1
  %6 = bitcast %"class.base::internal::flat_tree.23"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #14
  %7 = ptrtoint i64* %2 to i64
  %8 = ptrtoint i64* %1 to i64
  %9 = sub i64 %7, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %35, label %12

12:                                               ; preds = %4
  %13 = icmp ugt i64 %10, 2305843009213693951
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"class.base::internal::flat_tree.23"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #16
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #15
  %18 = bitcast i8* %17 to i64*
  %19 = getelementptr inbounds %"class.base::internal::flat_tree.23", %"class.base::internal::flat_tree.23"* %0, i64 0, i32 0, i32 0, i32 1
  %20 = bitcast i64** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"class.base::internal::flat_tree.23"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds i64, i64* %18, i64 %10
  %23 = getelementptr inbounds %"class.base::internal::flat_tree.23", %"class.base::internal::flat_tree.23"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64* %22, i64** %23, align 8
  %24 = bitcast i64** %19 to i64*
  %25 = ptrtoint i8* %17 to i64
  %26 = icmp sgt i64 %9, 0
  br i1 %26, label %27, label %32

27:                                               ; preds = %16
  %28 = lshr exact i64 %9, 3
  %29 = bitcast i64* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 %29, i64 %9, i1 false) #14
  %30 = getelementptr inbounds i64, i64* %18, i64 %28
  %31 = ptrtoint i64* %30 to i64
  br label %32

32:                                               ; preds = %27, %16
  %33 = phi i64 [ %31, %27 ], [ %25, %16 ]
  store i64 %33, i64* %24, align 8
  %34 = inttoptr i64 %33 to i64*
  br label %35

35:                                               ; preds = %4, %32
  %36 = phi i64* [ null, %4 ], [ %34, %32 ]
  %37 = phi i64* [ null, %4 ], [ %18, %32 ]
  %38 = getelementptr inbounds %"class.base::internal::flat_tree.23", %"class.base::internal::flat_tree.23"* %0, i64 0, i32 0, i32 0, i32 1
  %39 = ptrtoint i64* %36 to i64
  %40 = getelementptr inbounds %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare", %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %40)
  %41 = ptrtoint i64* %37 to i64
  %42 = sub i64 %39, %41
  %43 = ashr exact i64 %42, 3
  %44 = icmp sgt i64 %42, 1024
  br i1 %44, label %45, label %56

45:                                               ; preds = %35
  %46 = icmp slt i64 %43, 1152921504606846975
  %47 = select i1 %46, i64 %43, i64 1152921504606846975
  br label %48

48:                                               ; preds = %53, %45
  %49 = phi i64 [ %54, %53 ], [ %47, %45 ]
  %50 = shl i64 %49, 3
  %51 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %50, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #14
  %52 = icmp eq i8* %51, null
  br i1 %52, label %53, label %57

53:                                               ; preds = %48
  %54 = lshr i64 %49, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %48

56:                                               ; preds = %53, %35
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i64* %37, i64* %36, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* nonnull dereferenceable(1) %5, i64 %43, i64* null, i64 0) #14
  br label %59

57:                                               ; preds = %48
  %58 = bitcast i8* %51 to i64*
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i64* %37, i64* %36, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* nonnull dereferenceable(1) %5, i64 %43, i64* nonnull %58, i64 %49) #14
  call void @_ZdlPv(i8* nonnull %51) #15
  br label %59

59:                                               ; preds = %56, %57
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %40)
  %60 = icmp eq i64* %37, %36
  br i1 %60, label %110, label %61

61:                                               ; preds = %59, %65
  %62 = phi i64* [ %63, %65 ], [ %37, %59 ]
  %63 = getelementptr inbounds i64, i64* %62, i64 1
  %64 = icmp eq i64* %63, %36
  br i1 %64, label %110, label %65

65:                                               ; preds = %61
  %66 = load i64, i64* %62, align 8
  %67 = load i64, i64* %63, align 8
  %68 = icmp slt i64 %66, %67
  br i1 %68, label %61, label %69

69:                                               ; preds = %65
  %70 = icmp eq i64* %62, %36
  br i1 %70, label %110, label %71

71:                                               ; preds = %69
  %72 = getelementptr inbounds i64, i64* %62, i64 2
  %73 = icmp eq i64* %72, %36
  br i1 %73, label %95, label %74

74:                                               ; preds = %71
  %75 = ptrtoint i64* %62 to i64
  br label %76

76:                                               ; preds = %91, %74
  %77 = phi i64 [ %92, %91 ], [ %66, %74 ]
  %78 = phi i64* [ %90, %91 ], [ %62, %74 ]
  %79 = phi i64* [ %88, %91 ], [ %72, %74 ]
  %80 = phi i64 [ %87, %91 ], [ %75, %74 ]
  %81 = load i64, i64* %79, align 8
  %82 = icmp slt i64 %77, %81
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = getelementptr inbounds i64, i64* %78, i64 1
  %85 = ptrtoint i64* %84 to i64
  store i64 %81, i64* %84, align 8
  br label %86

86:                                               ; preds = %83, %76
  %87 = phi i64 [ %80, %76 ], [ %85, %83 ]
  %88 = getelementptr inbounds i64, i64* %79, i64 1
  %89 = icmp eq i64* %88, %36
  %90 = inttoptr i64 %87 to i64*
  br i1 %89, label %93, label %91

91:                                               ; preds = %86
  %92 = load i64, i64* %90, align 8
  br label %76

93:                                               ; preds = %86
  %94 = inttoptr i64 %87 to i64*
  br label %95

95:                                               ; preds = %93, %71
  %96 = phi i64* [ %62, %71 ], [ %94, %93 ]
  %97 = getelementptr inbounds i64, i64* %96, i64 1
  %98 = icmp eq i64* %97, %36
  br i1 %98, label %110, label %99

99:                                               ; preds = %95
  %100 = bitcast i64** %38 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = sub i64 %101, %39
  %103 = ashr exact i64 %102, 3
  %104 = icmp eq i64 %102, 0
  br i1 %104, label %108, label %105

105:                                              ; preds = %99
  %106 = bitcast i64* %97 to i8*
  %107 = bitcast i64* %36 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %106, i8* align 8 %107, i64 %102, i1 false) #14
  br label %108

108:                                              ; preds = %105, %99
  %109 = getelementptr inbounds i64, i64* %97, i64 %103
  store i64* %109, i64** %38, align 8
  br label %110

110:                                              ; preds = %61, %59, %69, %95, %108
  ret void
}

declare void @_ZN4feed12ContentIdSetC1EN4base8internal9flat_treeIlNS1_8identityENSt3__14lessIvEENS5_6vectorIlNS5_9allocatorIlEEEEEE(%"class.feed::ContentIdSet"*, %"class.base::internal::flat_tree.23"*) unnamed_addr #4

declare void @_ZN4feed12ContentIdSetC1Ev(%"class.feed::ContentIdSet"*) unnamed_addr #4

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #6

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.smul.with.overflow.i64(i64, i64) #6

declare %"class.feedstore::Metadata_SessionID"* @_ZN6google8protobuf5Arena18CreateMaybeMessageIN9feedstore18Metadata_SessionIDEJEEEPT_PS1_DpOT0_(%"class.google::protobuf::Arena"*) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6google8protobuf8internal14ArenaStringPtr14CreateInstanceEPNS0_5ArenaEPKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"struct.google::protobuf::internal::ArenaStringPtr"*, %"class.google::protobuf::Arena"*, %"class.std::__1::basic_string"*) local_unnamed_addr #7 comdat align 2 {
  %4 = icmp eq %"class.google::protobuf::Arena"* %1, null
  br i1 %4, label %5, label %19

5:                                                ; preds = %3
  %6 = tail call i8* @_Znwm(i64 24) #15
  %7 = bitcast i8* %6 to %"class.std::__1::basic_string"*
  %8 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %5
  %13 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 %13, i64 24, i1 false) #14
  br label %39

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %7, i8* %16, i64 %18) #14
  br label %39

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.google::protobuf::Arena", %"class.google::protobuf::Arena"* %1, i64 0, i32 4
  %21 = load i8*, i8** %20, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %24, label %23, !prof !3

23:                                               ; preds = %19
  tail call void @_ZNK6google8protobuf5Arena17OnArenaAllocationEPKSt9type_infom(%"class.google::protobuf::Arena"* nonnull %1, %"class.std::type_info"* null, i64 24) #14
  br label %24

24:                                               ; preds = %23, %19
  %25 = getelementptr inbounds %"class.google::protobuf::Arena", %"class.google::protobuf::Arena"* %1, i64 0, i32 0
  %26 = tail call i8* @_ZN6google8protobuf8internal9ArenaImpl28AllocateAlignedAndAddCleanupEmPFvPvE(%"class.google::protobuf::internal::ArenaImpl"* %25, i64 24, void (i8*)* nonnull @_ZN6google8protobuf8internal21arena_destruct_objectINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEvPv) #14
  %27 = bitcast i8* %26 to %"class.std::__1::basic_string"*
  %28 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %24
  %33 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %33, i64 24, i1 false) #14
  br label %39

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %27, i8* %36, i64 %38) #14
  br label %39

39:                                               ; preds = %12, %14, %32, %34
  %40 = phi %"class.std::__1::basic_string"* [ %7, %12 ], [ %7, %14 ], [ %27, %32 ], [ %27, %34 ]
  %41 = getelementptr inbounds %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr"* %0, i64 0, i32 0
  store %"class.std::__1::basic_string"* %40, %"class.std::__1::basic_string"** %41, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare i8* @_ZN6google8protobuf8internal9ArenaImpl28AllocateAlignedAndAddCleanupEmPFvPvE(%"class.google::protobuf::internal::ArenaImpl"*, i64, void (i8*)*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6google8protobuf8internal21arena_destruct_objectINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEvPv(i8*) #3 comdat {
  %2 = getelementptr inbounds i8, i8* %0, i64 23
  %3 = load i8, i8* %2, align 1
  %4 = icmp slt i8 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to i8**
  %7 = load i8*, i8** %6, align 8
  tail call void @_ZdlPv(i8* %7) #15
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

declare void @_ZNK6google8protobuf5Arena17OnArenaAllocationEPKSt9type_infom(%"class.google::protobuf::Arena"*, %"class.std::type_info"*, i64) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

declare void @_ZN9feedstore8MetadataC2EPN6google8protobuf5ArenaE(%"class.feedstore::Metadata"*, %"class.google::protobuf::Arena"*) unnamed_addr #4

declare void @_ZN9feedstore8Metadata12InternalSwapEPS0_(%"class.feedstore::Metadata"*, %"class.feedstore::Metadata"*) local_unnamed_addr #4

declare void @_ZN9feedstore8Metadata8CopyFromERKS0_(%"class.feedstore::Metadata"*, %"class.feedstore::Metadata"* dereferenceable(80)) local_unnamed_addr #4

declare void @_ZN6google8protobuf8internal20RepeatedPtrFieldBase7ReserveEi(%"class.google::protobuf::internal::RepeatedPtrFieldBase"*, i32) local_unnamed_addr #4

declare %"class.feedstore::Metadata_StreamMetadata"* @_ZN6google8protobuf5Arena18CreateMaybeMessageIN9feedstore23Metadata_StreamMetadataEJEEEPT_PS1_DpOT0_(%"class.google::protobuf::Arena"*) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

declare void @_ZN6google8protobuf13RepeatedFieldIlE7ReserveEi(%"class.google::protobuf::RepeatedField"*, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i64*, i64*, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* dereferenceable(1), i64, i64*, i64) local_unnamed_addr #3 comdat {
  %7 = ptrtoint i64* %0 to i64
  switch i64 %3, label %14 [
    i64 0, label %400
    i64 1, label %400
    i64 2, label %8
  ]

8:                                                ; preds = %6
  %9 = getelementptr inbounds i64, i64* %1, i64 -1
  %10 = load i64, i64* %9, align 8
  %11 = load i64, i64* %0, align 8
  %12 = icmp slt i64 %10, %11
  br i1 %12, label %13, label %400

13:                                               ; preds = %8
  store i64 %10, i64* %0, align 8
  store i64 %11, i64* %9, align 8
  br label %400

14:                                               ; preds = %6
  %15 = icmp slt i64 %3, 129
  br i1 %15, label %16, label %58

16:                                               ; preds = %14
  %17 = icmp eq i64* %0, %1
  br i1 %17, label %400, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds i64, i64* %0, i64 1
  %20 = icmp eq i64* %19, %1
  br i1 %20, label %400, label %21

21:                                               ; preds = %18
  %22 = getelementptr i64, i64* %1, i64 -2
  %23 = ptrtoint i64* %22 to i64
  %24 = sub i64 %23, %7
  %25 = and i64 %24, 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %39

27:                                               ; preds = %21
  %28 = load i64, i64* %19, align 8
  br label %29

29:                                               ; preds = %34, %27
  %30 = phi i64* [ %31, %34 ], [ %19, %27 ]
  %31 = getelementptr inbounds i64, i64* %30, i64 -1
  %32 = load i64, i64* %31, align 8
  %33 = icmp slt i64 %28, %32
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  store i64 %32, i64* %30, align 8
  %35 = icmp eq i64* %31, %0
  br i1 %35, label %36, label %29

36:                                               ; preds = %29, %34
  %37 = phi i64* [ %30, %29 ], [ %0, %34 ]
  store i64 %28, i64* %37, align 8
  %38 = getelementptr inbounds i64, i64* %0, i64 2
  br label %39

39:                                               ; preds = %36, %21
  %40 = phi i64* [ %19, %21 ], [ %38, %36 ]
  %41 = icmp ult i64 %24, 8
  br i1 %41, label %400, label %42

42:                                               ; preds = %39, %408
  %43 = phi i64* [ %410, %408 ], [ %40, %39 ]
  %44 = load i64, i64* %43, align 8
  %45 = icmp eq i64* %43, %0
  br i1 %45, label %51, label %46

46:                                               ; preds = %42, %56
  %47 = phi i64* [ %48, %56 ], [ %43, %42 ]
  %48 = getelementptr inbounds i64, i64* %47, i64 -1
  %49 = load i64, i64* %48, align 8
  %50 = icmp slt i64 %44, %49
  br i1 %50, label %56, label %51

51:                                               ; preds = %56, %46, %42
  %52 = phi i64* [ %0, %42 ], [ %47, %46 ], [ %0, %56 ]
  store i64 %44, i64* %52, align 8
  %53 = getelementptr inbounds i64, i64* %43, i64 1
  %54 = load i64, i64* %53, align 8
  %55 = icmp eq i64* %53, %0
  br i1 %55, label %408, label %401

56:                                               ; preds = %46
  store i64 %49, i64* %47, align 8
  %57 = icmp eq i64* %48, %0
  br i1 %57, label %51, label %46

58:                                               ; preds = %14
  %59 = lshr i64 %3, 1
  %60 = getelementptr inbounds i64, i64* %0, i64 %59
  %61 = icmp sgt i64 %3, %5
  br i1 %61, label %398, label %62

62:                                               ; preds = %58
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE(i64* %0, i64* %60, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* dereferenceable(1) %2, i64 %59, i64* %4)
  %63 = sub nsw i64 %3, %59
  %64 = getelementptr inbounds i64, i64* %4, i64 %59
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE(i64* %60, i64* %1, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* dereferenceable(1) %2, i64 %63, i64* %64)
  %65 = getelementptr inbounds i64, i64* %4, i64 %3
  br label %195

66:                                               ; preds = %365
  %67 = ptrtoint i64* %366 to i64
  %68 = icmp eq i64* %366, %65
  br i1 %68, label %400, label %69

69:                                               ; preds = %66
  %70 = add i64 %3, -1
  %71 = getelementptr i64, i64* %4, i64 %70
  %72 = ptrtoint i64* %71 to i64
  %73 = sub i64 %72, %67
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = icmp ult i64 %75, 4
  br i1 %76, label %77, label %102

77:                                               ; preds = %193, %102, %69
  %78 = phi i64* [ %366, %102 ], [ %366, %69 ], [ %116, %193 ]
  %79 = phi i64* [ %368, %102 ], [ %368, %69 ], [ %117, %193 ]
  %80 = ptrtoint i64* %78 to i64
  %81 = add i64 %3, -1
  %82 = getelementptr i64, i64* %4, i64 %81
  %83 = ptrtoint i64* %82 to i64
  %84 = sub i64 %83, %80
  %85 = lshr i64 %84, 3
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 7
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %98, label %89

89:                                               ; preds = %77, %89
  %90 = phi i64* [ %94, %89 ], [ %78, %77 ]
  %91 = phi i64* [ %95, %89 ], [ %79, %77 ]
  %92 = phi i64 [ %96, %89 ], [ %87, %77 ]
  %93 = load i64, i64* %90, align 8
  store i64 %93, i64* %91, align 8
  %94 = getelementptr inbounds i64, i64* %90, i64 1
  %95 = getelementptr inbounds i64, i64* %91, i64 1
  %96 = add i64 %92, -1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %89, !llvm.loop !8

98:                                               ; preds = %89, %77
  %99 = phi i64* [ %78, %77 ], [ %94, %89 ]
  %100 = phi i64* [ %79, %77 ], [ %95, %89 ]
  %101 = icmp ult i64 %84, 56
  br i1 %101, label %400, label %370

102:                                              ; preds = %69
  %103 = add i64 %3, -1
  %104 = getelementptr i64, i64* %4, i64 %103
  %105 = ptrtoint i64* %104 to i64
  %106 = sub i64 %105, %67
  %107 = lshr i64 %106, 3
  %108 = add nuw nsw i64 %107, 1
  %109 = getelementptr i64, i64* %368, i64 %108
  %110 = getelementptr i64, i64* %366, i64 %108
  %111 = icmp ult i64* %368, %110
  %112 = icmp ult i64* %366, %109
  %113 = and i1 %111, %112
  br i1 %113, label %77, label %114

114:                                              ; preds = %102
  %115 = and i64 %75, 4611686018427387900
  %116 = getelementptr i64, i64* %366, i64 %115
  %117 = getelementptr i64, i64* %368, i64 %115
  %118 = add nsw i64 %115, -4
  %119 = lshr exact i64 %118, 2
  %120 = add nuw nsw i64 %119, 1
  %121 = and i64 %120, 3
  %122 = icmp ult i64 %118, 12
  br i1 %122, label %174, label %123

123:                                              ; preds = %114
  %124 = sub nsw i64 %120, %121
  br label %125

125:                                              ; preds = %125, %123
  %126 = phi i64 [ 0, %123 ], [ %171, %125 ]
  %127 = phi i64 [ %124, %123 ], [ %172, %125 ]
  %128 = getelementptr i64, i64* %366, i64 %126
  %129 = getelementptr i64, i64* %368, i64 %126
  %130 = bitcast i64* %128 to <2 x i64>*
  %131 = load <2 x i64>, <2 x i64>* %130, align 8, !alias.scope !10
  %132 = getelementptr i64, i64* %128, i64 2
  %133 = bitcast i64* %132 to <2 x i64>*
  %134 = load <2 x i64>, <2 x i64>* %133, align 8, !alias.scope !10
  %135 = bitcast i64* %129 to <2 x i64>*
  store <2 x i64> %131, <2 x i64>* %135, align 8, !alias.scope !13, !noalias !10
  %136 = getelementptr i64, i64* %129, i64 2
  %137 = bitcast i64* %136 to <2 x i64>*
  store <2 x i64> %134, <2 x i64>* %137, align 8, !alias.scope !13, !noalias !10
  %138 = or i64 %126, 4
  %139 = getelementptr i64, i64* %366, i64 %138
  %140 = getelementptr i64, i64* %368, i64 %138
  %141 = bitcast i64* %139 to <2 x i64>*
  %142 = load <2 x i64>, <2 x i64>* %141, align 8, !alias.scope !10
  %143 = getelementptr i64, i64* %139, i64 2
  %144 = bitcast i64* %143 to <2 x i64>*
  %145 = load <2 x i64>, <2 x i64>* %144, align 8, !alias.scope !10
  %146 = bitcast i64* %140 to <2 x i64>*
  store <2 x i64> %142, <2 x i64>* %146, align 8, !alias.scope !13, !noalias !10
  %147 = getelementptr i64, i64* %140, i64 2
  %148 = bitcast i64* %147 to <2 x i64>*
  store <2 x i64> %145, <2 x i64>* %148, align 8, !alias.scope !13, !noalias !10
  %149 = or i64 %126, 8
  %150 = getelementptr i64, i64* %366, i64 %149
  %151 = getelementptr i64, i64* %368, i64 %149
  %152 = bitcast i64* %150 to <2 x i64>*
  %153 = load <2 x i64>, <2 x i64>* %152, align 8, !alias.scope !10
  %154 = getelementptr i64, i64* %150, i64 2
  %155 = bitcast i64* %154 to <2 x i64>*
  %156 = load <2 x i64>, <2 x i64>* %155, align 8, !alias.scope !10
  %157 = bitcast i64* %151 to <2 x i64>*
  store <2 x i64> %153, <2 x i64>* %157, align 8, !alias.scope !13, !noalias !10
  %158 = getelementptr i64, i64* %151, i64 2
  %159 = bitcast i64* %158 to <2 x i64>*
  store <2 x i64> %156, <2 x i64>* %159, align 8, !alias.scope !13, !noalias !10
  %160 = or i64 %126, 12
  %161 = getelementptr i64, i64* %366, i64 %160
  %162 = getelementptr i64, i64* %368, i64 %160
  %163 = bitcast i64* %161 to <2 x i64>*
  %164 = load <2 x i64>, <2 x i64>* %163, align 8, !alias.scope !10
  %165 = getelementptr i64, i64* %161, i64 2
  %166 = bitcast i64* %165 to <2 x i64>*
  %167 = load <2 x i64>, <2 x i64>* %166, align 8, !alias.scope !10
  %168 = bitcast i64* %162 to <2 x i64>*
  store <2 x i64> %164, <2 x i64>* %168, align 8, !alias.scope !13, !noalias !10
  %169 = getelementptr i64, i64* %162, i64 2
  %170 = bitcast i64* %169 to <2 x i64>*
  store <2 x i64> %167, <2 x i64>* %170, align 8, !alias.scope !13, !noalias !10
  %171 = add i64 %126, 16
  %172 = add i64 %127, -4
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %125, !llvm.loop !15

174:                                              ; preds = %125, %114
  %175 = phi i64 [ 0, %114 ], [ %171, %125 ]
  %176 = icmp eq i64 %121, 0
  br i1 %176, label %193, label %177

177:                                              ; preds = %174, %177
  %178 = phi i64 [ %190, %177 ], [ %175, %174 ]
  %179 = phi i64 [ %191, %177 ], [ %121, %174 ]
  %180 = getelementptr i64, i64* %366, i64 %178
  %181 = getelementptr i64, i64* %368, i64 %178
  %182 = bitcast i64* %180 to <2 x i64>*
  %183 = load <2 x i64>, <2 x i64>* %182, align 8, !alias.scope !10
  %184 = getelementptr i64, i64* %180, i64 2
  %185 = bitcast i64* %184 to <2 x i64>*
  %186 = load <2 x i64>, <2 x i64>* %185, align 8, !alias.scope !10
  %187 = bitcast i64* %181 to <2 x i64>*
  store <2 x i64> %183, <2 x i64>* %187, align 8, !alias.scope !13, !noalias !10
  %188 = getelementptr i64, i64* %181, i64 2
  %189 = bitcast i64* %188 to <2 x i64>*
  store <2 x i64> %186, <2 x i64>* %189, align 8, !alias.scope !13, !noalias !10
  %190 = add i64 %178, 4
  %191 = add i64 %179, -1
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %177, !llvm.loop !17

193:                                              ; preds = %177, %174
  %194 = icmp eq i64 %75, %115
  br i1 %194, label %400, label %77

195:                                              ; preds = %62, %365
  %196 = phi i64* [ %367, %365 ], [ %4, %62 ]
  %197 = phi i64* [ %366, %365 ], [ %64, %62 ]
  %198 = phi i64* [ %368, %365 ], [ %0, %62 ]
  %199 = icmp eq i64* %197, %65
  br i1 %199, label %200, label %357

200:                                              ; preds = %195
  %201 = ptrtoint i64* %196 to i64
  %202 = icmp eq i64* %196, %64
  br i1 %202, label %400, label %203

203:                                              ; preds = %200
  %204 = add nsw i64 %59, -1
  %205 = getelementptr i64, i64* %4, i64 %204
  %206 = ptrtoint i64* %205 to i64
  %207 = sub i64 %206, %201
  %208 = lshr i64 %207, 3
  %209 = add nuw nsw i64 %208, 1
  %210 = icmp ult i64 %209, 4
  br i1 %210, label %304, label %211

211:                                              ; preds = %203
  %212 = add nsw i64 %59, -1
  %213 = getelementptr i64, i64* %4, i64 %212
  %214 = ptrtoint i64* %213 to i64
  %215 = sub i64 %214, %201
  %216 = lshr i64 %215, 3
  %217 = add nuw nsw i64 %216, 1
  %218 = getelementptr i64, i64* %198, i64 %217
  %219 = getelementptr i64, i64* %196, i64 %217
  %220 = icmp ult i64* %198, %219
  %221 = icmp ult i64* %196, %218
  %222 = and i1 %220, %221
  br i1 %222, label %304, label %223

223:                                              ; preds = %211
  %224 = and i64 %209, 4611686018427387900
  %225 = getelementptr i64, i64* %196, i64 %224
  %226 = getelementptr i64, i64* %198, i64 %224
  %227 = add nsw i64 %224, -4
  %228 = lshr exact i64 %227, 2
  %229 = add nuw nsw i64 %228, 1
  %230 = and i64 %229, 3
  %231 = icmp ult i64 %227, 12
  br i1 %231, label %283, label %232

232:                                              ; preds = %223
  %233 = sub nsw i64 %229, %230
  br label %234

234:                                              ; preds = %234, %232
  %235 = phi i64 [ 0, %232 ], [ %280, %234 ]
  %236 = phi i64 [ %233, %232 ], [ %281, %234 ]
  %237 = getelementptr i64, i64* %196, i64 %235
  %238 = getelementptr i64, i64* %198, i64 %235
  %239 = bitcast i64* %237 to <2 x i64>*
  %240 = load <2 x i64>, <2 x i64>* %239, align 8, !alias.scope !18
  %241 = getelementptr i64, i64* %237, i64 2
  %242 = bitcast i64* %241 to <2 x i64>*
  %243 = load <2 x i64>, <2 x i64>* %242, align 8, !alias.scope !18
  %244 = bitcast i64* %238 to <2 x i64>*
  store <2 x i64> %240, <2 x i64>* %244, align 8, !alias.scope !21, !noalias !18
  %245 = getelementptr i64, i64* %238, i64 2
  %246 = bitcast i64* %245 to <2 x i64>*
  store <2 x i64> %243, <2 x i64>* %246, align 8, !alias.scope !21, !noalias !18
  %247 = or i64 %235, 4
  %248 = getelementptr i64, i64* %196, i64 %247
  %249 = getelementptr i64, i64* %198, i64 %247
  %250 = bitcast i64* %248 to <2 x i64>*
  %251 = load <2 x i64>, <2 x i64>* %250, align 8, !alias.scope !18
  %252 = getelementptr i64, i64* %248, i64 2
  %253 = bitcast i64* %252 to <2 x i64>*
  %254 = load <2 x i64>, <2 x i64>* %253, align 8, !alias.scope !18
  %255 = bitcast i64* %249 to <2 x i64>*
  store <2 x i64> %251, <2 x i64>* %255, align 8, !alias.scope !21, !noalias !18
  %256 = getelementptr i64, i64* %249, i64 2
  %257 = bitcast i64* %256 to <2 x i64>*
  store <2 x i64> %254, <2 x i64>* %257, align 8, !alias.scope !21, !noalias !18
  %258 = or i64 %235, 8
  %259 = getelementptr i64, i64* %196, i64 %258
  %260 = getelementptr i64, i64* %198, i64 %258
  %261 = bitcast i64* %259 to <2 x i64>*
  %262 = load <2 x i64>, <2 x i64>* %261, align 8, !alias.scope !18
  %263 = getelementptr i64, i64* %259, i64 2
  %264 = bitcast i64* %263 to <2 x i64>*
  %265 = load <2 x i64>, <2 x i64>* %264, align 8, !alias.scope !18
  %266 = bitcast i64* %260 to <2 x i64>*
  store <2 x i64> %262, <2 x i64>* %266, align 8, !alias.scope !21, !noalias !18
  %267 = getelementptr i64, i64* %260, i64 2
  %268 = bitcast i64* %267 to <2 x i64>*
  store <2 x i64> %265, <2 x i64>* %268, align 8, !alias.scope !21, !noalias !18
  %269 = or i64 %235, 12
  %270 = getelementptr i64, i64* %196, i64 %269
  %271 = getelementptr i64, i64* %198, i64 %269
  %272 = bitcast i64* %270 to <2 x i64>*
  %273 = load <2 x i64>, <2 x i64>* %272, align 8, !alias.scope !18
  %274 = getelementptr i64, i64* %270, i64 2
  %275 = bitcast i64* %274 to <2 x i64>*
  %276 = load <2 x i64>, <2 x i64>* %275, align 8, !alias.scope !18
  %277 = bitcast i64* %271 to <2 x i64>*
  store <2 x i64> %273, <2 x i64>* %277, align 8, !alias.scope !21, !noalias !18
  %278 = getelementptr i64, i64* %271, i64 2
  %279 = bitcast i64* %278 to <2 x i64>*
  store <2 x i64> %276, <2 x i64>* %279, align 8, !alias.scope !21, !noalias !18
  %280 = add i64 %235, 16
  %281 = add i64 %236, -4
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %283, label %234, !llvm.loop !23

283:                                              ; preds = %234, %223
  %284 = phi i64 [ 0, %223 ], [ %280, %234 ]
  %285 = icmp eq i64 %230, 0
  br i1 %285, label %302, label %286

286:                                              ; preds = %283, %286
  %287 = phi i64 [ %299, %286 ], [ %284, %283 ]
  %288 = phi i64 [ %300, %286 ], [ %230, %283 ]
  %289 = getelementptr i64, i64* %196, i64 %287
  %290 = getelementptr i64, i64* %198, i64 %287
  %291 = bitcast i64* %289 to <2 x i64>*
  %292 = load <2 x i64>, <2 x i64>* %291, align 8, !alias.scope !18
  %293 = getelementptr i64, i64* %289, i64 2
  %294 = bitcast i64* %293 to <2 x i64>*
  %295 = load <2 x i64>, <2 x i64>* %294, align 8, !alias.scope !18
  %296 = bitcast i64* %290 to <2 x i64>*
  store <2 x i64> %292, <2 x i64>* %296, align 8, !alias.scope !21, !noalias !18
  %297 = getelementptr i64, i64* %290, i64 2
  %298 = bitcast i64* %297 to <2 x i64>*
  store <2 x i64> %295, <2 x i64>* %298, align 8, !alias.scope !21, !noalias !18
  %299 = add i64 %287, 4
  %300 = add i64 %288, -1
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %302, label %286, !llvm.loop !24

302:                                              ; preds = %286, %283
  %303 = icmp eq i64 %209, %224
  br i1 %303, label %400, label %304

304:                                              ; preds = %302, %211, %203
  %305 = phi i64* [ %196, %211 ], [ %196, %203 ], [ %225, %302 ]
  %306 = phi i64* [ %198, %211 ], [ %198, %203 ], [ %226, %302 ]
  %307 = ptrtoint i64* %305 to i64
  %308 = add nsw i64 %59, -1
  %309 = getelementptr i64, i64* %4, i64 %308
  %310 = ptrtoint i64* %309 to i64
  %311 = sub i64 %310, %307
  %312 = lshr i64 %311, 3
  %313 = add nuw nsw i64 %312, 1
  %314 = and i64 %313, 7
  %315 = icmp eq i64 %314, 0
  br i1 %315, label %325, label %316

316:                                              ; preds = %304, %316
  %317 = phi i64* [ %321, %316 ], [ %305, %304 ]
  %318 = phi i64* [ %322, %316 ], [ %306, %304 ]
  %319 = phi i64 [ %323, %316 ], [ %314, %304 ]
  %320 = load i64, i64* %317, align 8
  store i64 %320, i64* %318, align 8
  %321 = getelementptr inbounds i64, i64* %317, i64 1
  %322 = getelementptr inbounds i64, i64* %318, i64 1
  %323 = add i64 %319, -1
  %324 = icmp eq i64 %323, 0
  br i1 %324, label %325, label %316, !llvm.loop !25

325:                                              ; preds = %316, %304
  %326 = phi i64* [ %305, %304 ], [ %321, %316 ]
  %327 = phi i64* [ %306, %304 ], [ %322, %316 ]
  %328 = icmp ult i64 %311, 56
  br i1 %328, label %400, label %329

329:                                              ; preds = %325, %329
  %330 = phi i64* [ %354, %329 ], [ %326, %325 ]
  %331 = phi i64* [ %355, %329 ], [ %327, %325 ]
  %332 = load i64, i64* %330, align 8
  store i64 %332, i64* %331, align 8
  %333 = getelementptr inbounds i64, i64* %330, i64 1
  %334 = getelementptr inbounds i64, i64* %331, i64 1
  %335 = load i64, i64* %333, align 8
  store i64 %335, i64* %334, align 8
  %336 = getelementptr inbounds i64, i64* %330, i64 2
  %337 = getelementptr inbounds i64, i64* %331, i64 2
  %338 = load i64, i64* %336, align 8
  store i64 %338, i64* %337, align 8
  %339 = getelementptr inbounds i64, i64* %330, i64 3
  %340 = getelementptr inbounds i64, i64* %331, i64 3
  %341 = load i64, i64* %339, align 8
  store i64 %341, i64* %340, align 8
  %342 = getelementptr inbounds i64, i64* %330, i64 4
  %343 = getelementptr inbounds i64, i64* %331, i64 4
  %344 = load i64, i64* %342, align 8
  store i64 %344, i64* %343, align 8
  %345 = getelementptr inbounds i64, i64* %330, i64 5
  %346 = getelementptr inbounds i64, i64* %331, i64 5
  %347 = load i64, i64* %345, align 8
  store i64 %347, i64* %346, align 8
  %348 = getelementptr inbounds i64, i64* %330, i64 6
  %349 = getelementptr inbounds i64, i64* %331, i64 6
  %350 = load i64, i64* %348, align 8
  store i64 %350, i64* %349, align 8
  %351 = getelementptr inbounds i64, i64* %330, i64 7
  %352 = getelementptr inbounds i64, i64* %331, i64 7
  %353 = load i64, i64* %351, align 8
  store i64 %353, i64* %352, align 8
  %354 = getelementptr inbounds i64, i64* %330, i64 8
  %355 = getelementptr inbounds i64, i64* %331, i64 8
  %356 = icmp eq i64* %354, %64
  br i1 %356, label %400, label %329, !llvm.loop !26

357:                                              ; preds = %195
  %358 = load i64, i64* %197, align 8
  %359 = load i64, i64* %196, align 8
  %360 = icmp slt i64 %358, %359
  br i1 %360, label %361, label %363

361:                                              ; preds = %357
  store i64 %358, i64* %198, align 8
  %362 = getelementptr inbounds i64, i64* %197, i64 1
  br label %365

363:                                              ; preds = %357
  store i64 %359, i64* %198, align 8
  %364 = getelementptr inbounds i64, i64* %196, i64 1
  br label %365

365:                                              ; preds = %363, %361
  %366 = phi i64* [ %362, %361 ], [ %197, %363 ]
  %367 = phi i64* [ %196, %361 ], [ %364, %363 ]
  %368 = getelementptr inbounds i64, i64* %198, i64 1
  %369 = icmp eq i64* %367, %64
  br i1 %369, label %66, label %195

370:                                              ; preds = %98, %370
  %371 = phi i64* [ %395, %370 ], [ %99, %98 ]
  %372 = phi i64* [ %396, %370 ], [ %100, %98 ]
  %373 = load i64, i64* %371, align 8
  store i64 %373, i64* %372, align 8
  %374 = getelementptr inbounds i64, i64* %371, i64 1
  %375 = getelementptr inbounds i64, i64* %372, i64 1
  %376 = load i64, i64* %374, align 8
  store i64 %376, i64* %375, align 8
  %377 = getelementptr inbounds i64, i64* %371, i64 2
  %378 = getelementptr inbounds i64, i64* %372, i64 2
  %379 = load i64, i64* %377, align 8
  store i64 %379, i64* %378, align 8
  %380 = getelementptr inbounds i64, i64* %371, i64 3
  %381 = getelementptr inbounds i64, i64* %372, i64 3
  %382 = load i64, i64* %380, align 8
  store i64 %382, i64* %381, align 8
  %383 = getelementptr inbounds i64, i64* %371, i64 4
  %384 = getelementptr inbounds i64, i64* %372, i64 4
  %385 = load i64, i64* %383, align 8
  store i64 %385, i64* %384, align 8
  %386 = getelementptr inbounds i64, i64* %371, i64 5
  %387 = getelementptr inbounds i64, i64* %372, i64 5
  %388 = load i64, i64* %386, align 8
  store i64 %388, i64* %387, align 8
  %389 = getelementptr inbounds i64, i64* %371, i64 6
  %390 = getelementptr inbounds i64, i64* %372, i64 6
  %391 = load i64, i64* %389, align 8
  store i64 %391, i64* %390, align 8
  %392 = getelementptr inbounds i64, i64* %371, i64 7
  %393 = getelementptr inbounds i64, i64* %372, i64 7
  %394 = load i64, i64* %392, align 8
  store i64 %394, i64* %393, align 8
  %395 = getelementptr inbounds i64, i64* %371, i64 8
  %396 = getelementptr inbounds i64, i64* %372, i64 8
  %397 = icmp eq i64* %395, %65
  br i1 %397, label %400, label %370, !llvm.loop !27

398:                                              ; preds = %58
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i64* %0, i64* %60, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* dereferenceable(1) %2, i64 %59, i64* %4, i64 %5)
  %399 = sub nsw i64 %3, %59
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i64* %60, i64* %1, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* dereferenceable(1) %2, i64 %399, i64* %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i64* %0, i64* %60, i64* %1, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* dereferenceable(1) %2, i64 %59, i64 %399, i64* %4, i64 %5)
  ret void

400:                                              ; preds = %98, %370, %325, %329, %39, %408, %193, %302, %200, %66, %18, %16, %8, %13, %6, %6
  ret void

401:                                              ; preds = %51, %406
  %402 = phi i64* [ %403, %406 ], [ %53, %51 ]
  %403 = getelementptr inbounds i64, i64* %402, i64 -1
  %404 = load i64, i64* %403, align 8
  %405 = icmp slt i64 %54, %404
  br i1 %405, label %406, label %408

406:                                              ; preds = %401
  store i64 %404, i64* %402, align 8
  %407 = icmp eq i64* %403, %0
  br i1 %407, label %408, label %401

408:                                              ; preds = %401, %406, %51
  %409 = phi i64* [ %0, %51 ], [ %402, %401 ], [ %0, %406 ]
  store i64 %54, i64* %409, align 8
  %410 = getelementptr inbounds i64, i64* %43, i64 2
  %411 = icmp eq i64* %410, %1
  br i1 %411, label %400, label %42
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE(i64*, i64*, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* dereferenceable(1), i64, i64*) local_unnamed_addr #3 comdat {
  switch i64 %3, label %19 [
    i64 0, label %390
    i64 1, label %6
    i64 2, label %8
  ]

6:                                                ; preds = %5
  %7 = load i64, i64* %0, align 8
  store i64 %7, i64* %4, align 8
  br label %390

8:                                                ; preds = %5
  %9 = getelementptr inbounds i64, i64* %1, i64 -1
  %10 = load i64, i64* %9, align 8
  %11 = load i64, i64* %0, align 8
  %12 = icmp slt i64 %10, %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  store i64 %10, i64* %4, align 8
  %14 = getelementptr inbounds i64, i64* %4, i64 1
  %15 = load i64, i64* %0, align 8
  store i64 %15, i64* %14, align 8
  br label %390

16:                                               ; preds = %8
  store i64 %11, i64* %4, align 8
  %17 = getelementptr inbounds i64, i64* %4, i64 1
  %18 = load i64, i64* %9, align 8
  store i64 %18, i64* %17, align 8
  br label %390

19:                                               ; preds = %5
  %20 = icmp slt i64 %3, 9
  br i1 %20, label %21, label %53

21:                                               ; preds = %19
  %22 = icmp eq i64* %0, %1
  br i1 %22, label %390, label %23

23:                                               ; preds = %21
  %24 = load i64, i64* %0, align 8
  store i64 %24, i64* %4, align 8
  %25 = getelementptr inbounds i64, i64* %0, i64 1
  %26 = icmp eq i64* %25, %1
  br i1 %26, label %390, label %27

27:                                               ; preds = %23, %51
  %28 = phi i64 [ %52, %51 ], [ %24, %23 ]
  %29 = phi i64* [ %49, %51 ], [ %25, %23 ]
  %30 = phi i64* [ %31, %51 ], [ %4, %23 ]
  %31 = getelementptr inbounds i64, i64* %30, i64 1
  %32 = load i64, i64* %29, align 8
  %33 = icmp slt i64 %32, %28
  br i1 %33, label %34, label %47

34:                                               ; preds = %27
  store i64 %28, i64* %31, align 8
  %35 = icmp eq i64* %30, %4
  br i1 %35, label %44, label %36

36:                                               ; preds = %34, %42
  %37 = phi i64* [ %38, %42 ], [ %30, %34 ]
  %38 = getelementptr inbounds i64, i64* %37, i64 -1
  %39 = load i64, i64* %29, align 8
  %40 = load i64, i64* %38, align 8
  %41 = icmp slt i64 %39, %40
  br i1 %41, label %42, label %44

42:                                               ; preds = %36
  store i64 %40, i64* %37, align 8
  %43 = icmp eq i64* %38, %4
  br i1 %43, label %44, label %36

44:                                               ; preds = %42, %36, %34
  %45 = phi i64* [ %4, %34 ], [ %37, %36 ], [ %4, %42 ]
  %46 = load i64, i64* %29, align 8
  store i64 %46, i64* %45, align 8
  br label %48

47:                                               ; preds = %27
  store i64 %32, i64* %31, align 8
  br label %48

48:                                               ; preds = %47, %44
  %49 = getelementptr inbounds i64, i64* %29, i64 1
  %50 = icmp eq i64* %49, %1
  br i1 %50, label %390, label %51

51:                                               ; preds = %48
  %52 = load i64, i64* %31, align 8
  br label %27

53:                                               ; preds = %19
  %54 = lshr i64 %3, 1
  %55 = getelementptr inbounds i64, i64* %0, i64 %54
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i64* %0, i64* %55, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* dereferenceable(1) %2, i64 %54, i64* %4, i64 %54)
  %56 = sub nsw i64 %3, %54
  %57 = getelementptr inbounds i64, i64* %4, i64 %54
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i64* %55, i64* %1, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* dereferenceable(1) %2, i64 %56, i64* %57, i64 %56)
  %58 = icmp eq i64 %54, 0
  br i1 %58, label %59, label %215

59:                                               ; preds = %385, %53
  %60 = phi i64* [ %55, %53 ], [ %386, %385 ]
  %61 = phi i64* [ %4, %53 ], [ %388, %385 ]
  %62 = ptrtoint i64* %60 to i64
  %63 = icmp eq i64* %60, %1
  br i1 %63, label %390, label %64

64:                                               ; preds = %59
  %65 = getelementptr i64, i64* %1, i64 -1
  %66 = ptrtoint i64* %65 to i64
  %67 = sub i64 %66, %62
  %68 = lshr i64 %67, 3
  %69 = add nuw nsw i64 %68, 1
  %70 = icmp ult i64 %69, 4
  br i1 %70, label %163, label %71

71:                                               ; preds = %64
  %72 = getelementptr i64, i64* %1, i64 -1
  %73 = ptrtoint i64* %72 to i64
  %74 = sub i64 %73, %62
  %75 = lshr i64 %74, 3
  %76 = add nuw nsw i64 %75, 1
  %77 = getelementptr i64, i64* %61, i64 %76
  %78 = getelementptr i64, i64* %60, i64 %76
  %79 = icmp ult i64* %61, %78
  %80 = icmp ult i64* %60, %77
  %81 = and i1 %79, %80
  br i1 %81, label %163, label %82

82:                                               ; preds = %71
  %83 = and i64 %69, 4611686018427387900
  %84 = getelementptr i64, i64* %61, i64 %83
  %85 = getelementptr i64, i64* %60, i64 %83
  %86 = add nsw i64 %83, -4
  %87 = lshr exact i64 %86, 2
  %88 = add nuw nsw i64 %87, 1
  %89 = and i64 %88, 3
  %90 = icmp ult i64 %86, 12
  br i1 %90, label %142, label %91

91:                                               ; preds = %82
  %92 = sub nsw i64 %88, %89
  br label %93

93:                                               ; preds = %93, %91
  %94 = phi i64 [ 0, %91 ], [ %139, %93 ]
  %95 = phi i64 [ %92, %91 ], [ %140, %93 ]
  %96 = getelementptr i64, i64* %61, i64 %94
  %97 = getelementptr i64, i64* %60, i64 %94
  %98 = bitcast i64* %97 to <2 x i64>*
  %99 = load <2 x i64>, <2 x i64>* %98, align 8, !alias.scope !28
  %100 = getelementptr i64, i64* %97, i64 2
  %101 = bitcast i64* %100 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 8, !alias.scope !28
  %103 = bitcast i64* %96 to <2 x i64>*
  store <2 x i64> %99, <2 x i64>* %103, align 8, !alias.scope !31, !noalias !28
  %104 = getelementptr i64, i64* %96, i64 2
  %105 = bitcast i64* %104 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %105, align 8, !alias.scope !31, !noalias !28
  %106 = or i64 %94, 4
  %107 = getelementptr i64, i64* %61, i64 %106
  %108 = getelementptr i64, i64* %60, i64 %106
  %109 = bitcast i64* %108 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 8, !alias.scope !28
  %111 = getelementptr i64, i64* %108, i64 2
  %112 = bitcast i64* %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8, !alias.scope !28
  %114 = bitcast i64* %107 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %114, align 8, !alias.scope !31, !noalias !28
  %115 = getelementptr i64, i64* %107, i64 2
  %116 = bitcast i64* %115 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %116, align 8, !alias.scope !31, !noalias !28
  %117 = or i64 %94, 8
  %118 = getelementptr i64, i64* %61, i64 %117
  %119 = getelementptr i64, i64* %60, i64 %117
  %120 = bitcast i64* %119 to <2 x i64>*
  %121 = load <2 x i64>, <2 x i64>* %120, align 8, !alias.scope !28
  %122 = getelementptr i64, i64* %119, i64 2
  %123 = bitcast i64* %122 to <2 x i64>*
  %124 = load <2 x i64>, <2 x i64>* %123, align 8, !alias.scope !28
  %125 = bitcast i64* %118 to <2 x i64>*
  store <2 x i64> %121, <2 x i64>* %125, align 8, !alias.scope !31, !noalias !28
  %126 = getelementptr i64, i64* %118, i64 2
  %127 = bitcast i64* %126 to <2 x i64>*
  store <2 x i64> %124, <2 x i64>* %127, align 8, !alias.scope !31, !noalias !28
  %128 = or i64 %94, 12
  %129 = getelementptr i64, i64* %61, i64 %128
  %130 = getelementptr i64, i64* %60, i64 %128
  %131 = bitcast i64* %130 to <2 x i64>*
  %132 = load <2 x i64>, <2 x i64>* %131, align 8, !alias.scope !28
  %133 = getelementptr i64, i64* %130, i64 2
  %134 = bitcast i64* %133 to <2 x i64>*
  %135 = load <2 x i64>, <2 x i64>* %134, align 8, !alias.scope !28
  %136 = bitcast i64* %129 to <2 x i64>*
  store <2 x i64> %132, <2 x i64>* %136, align 8, !alias.scope !31, !noalias !28
  %137 = getelementptr i64, i64* %129, i64 2
  %138 = bitcast i64* %137 to <2 x i64>*
  store <2 x i64> %135, <2 x i64>* %138, align 8, !alias.scope !31, !noalias !28
  %139 = add i64 %94, 16
  %140 = add i64 %95, -4
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %93, !llvm.loop !33

142:                                              ; preds = %93, %82
  %143 = phi i64 [ 0, %82 ], [ %139, %93 ]
  %144 = icmp eq i64 %89, 0
  br i1 %144, label %161, label %145

145:                                              ; preds = %142, %145
  %146 = phi i64 [ %158, %145 ], [ %143, %142 ]
  %147 = phi i64 [ %159, %145 ], [ %89, %142 ]
  %148 = getelementptr i64, i64* %61, i64 %146
  %149 = getelementptr i64, i64* %60, i64 %146
  %150 = bitcast i64* %149 to <2 x i64>*
  %151 = load <2 x i64>, <2 x i64>* %150, align 8, !alias.scope !28
  %152 = getelementptr i64, i64* %149, i64 2
  %153 = bitcast i64* %152 to <2 x i64>*
  %154 = load <2 x i64>, <2 x i64>* %153, align 8, !alias.scope !28
  %155 = bitcast i64* %148 to <2 x i64>*
  store <2 x i64> %151, <2 x i64>* %155, align 8, !alias.scope !31, !noalias !28
  %156 = getelementptr i64, i64* %148, i64 2
  %157 = bitcast i64* %156 to <2 x i64>*
  store <2 x i64> %154, <2 x i64>* %157, align 8, !alias.scope !31, !noalias !28
  %158 = add i64 %146, 4
  %159 = add i64 %147, -1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %145, !llvm.loop !34

161:                                              ; preds = %145, %142
  %162 = icmp eq i64 %69, %83
  br i1 %162, label %390, label %163

163:                                              ; preds = %161, %71, %64
  %164 = phi i64* [ %61, %71 ], [ %61, %64 ], [ %84, %161 ]
  %165 = phi i64* [ %60, %71 ], [ %60, %64 ], [ %85, %161 ]
  %166 = ptrtoint i64* %165 to i64
  %167 = getelementptr i64, i64* %1, i64 -1
  %168 = ptrtoint i64* %167 to i64
  %169 = sub i64 %168, %166
  %170 = lshr i64 %169, 3
  %171 = add nuw nsw i64 %170, 1
  %172 = and i64 %171, 7
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %183, label %174

174:                                              ; preds = %163, %174
  %175 = phi i64* [ %180, %174 ], [ %164, %163 ]
  %176 = phi i64* [ %179, %174 ], [ %165, %163 ]
  %177 = phi i64 [ %181, %174 ], [ %172, %163 ]
  %178 = load i64, i64* %176, align 8
  store i64 %178, i64* %175, align 8
  %179 = getelementptr inbounds i64, i64* %176, i64 1
  %180 = getelementptr inbounds i64, i64* %175, i64 1
  %181 = add i64 %177, -1
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %174, !llvm.loop !35

183:                                              ; preds = %174, %163
  %184 = phi i64* [ %164, %163 ], [ %180, %174 ]
  %185 = phi i64* [ %165, %163 ], [ %179, %174 ]
  %186 = icmp ult i64 %169, 56
  br i1 %186, label %390, label %187

187:                                              ; preds = %183, %187
  %188 = phi i64* [ %213, %187 ], [ %184, %183 ]
  %189 = phi i64* [ %212, %187 ], [ %185, %183 ]
  %190 = load i64, i64* %189, align 8
  store i64 %190, i64* %188, align 8
  %191 = getelementptr inbounds i64, i64* %189, i64 1
  %192 = getelementptr inbounds i64, i64* %188, i64 1
  %193 = load i64, i64* %191, align 8
  store i64 %193, i64* %192, align 8
  %194 = getelementptr inbounds i64, i64* %189, i64 2
  %195 = getelementptr inbounds i64, i64* %188, i64 2
  %196 = load i64, i64* %194, align 8
  store i64 %196, i64* %195, align 8
  %197 = getelementptr inbounds i64, i64* %189, i64 3
  %198 = getelementptr inbounds i64, i64* %188, i64 3
  %199 = load i64, i64* %197, align 8
  store i64 %199, i64* %198, align 8
  %200 = getelementptr inbounds i64, i64* %189, i64 4
  %201 = getelementptr inbounds i64, i64* %188, i64 4
  %202 = load i64, i64* %200, align 8
  store i64 %202, i64* %201, align 8
  %203 = getelementptr inbounds i64, i64* %189, i64 5
  %204 = getelementptr inbounds i64, i64* %188, i64 5
  %205 = load i64, i64* %203, align 8
  store i64 %205, i64* %204, align 8
  %206 = getelementptr inbounds i64, i64* %189, i64 6
  %207 = getelementptr inbounds i64, i64* %188, i64 6
  %208 = load i64, i64* %206, align 8
  store i64 %208, i64* %207, align 8
  %209 = getelementptr inbounds i64, i64* %189, i64 7
  %210 = getelementptr inbounds i64, i64* %188, i64 7
  %211 = load i64, i64* %209, align 8
  store i64 %211, i64* %210, align 8
  %212 = getelementptr inbounds i64, i64* %189, i64 8
  %213 = getelementptr inbounds i64, i64* %188, i64 8
  %214 = icmp eq i64* %212, %1
  br i1 %214, label %390, label %187, !llvm.loop !36

215:                                              ; preds = %53, %385
  %216 = phi i64* [ %388, %385 ], [ %4, %53 ]
  %217 = phi i64* [ %387, %385 ], [ %0, %53 ]
  %218 = phi i64* [ %386, %385 ], [ %55, %53 ]
  %219 = icmp eq i64* %218, %1
  br i1 %219, label %220, label %377

220:                                              ; preds = %215
  %221 = ptrtoint i64* %217 to i64
  %222 = icmp eq i64* %217, %55
  br i1 %222, label %390, label %223

223:                                              ; preds = %220
  %224 = add nsw i64 %54, -1
  %225 = getelementptr i64, i64* %0, i64 %224
  %226 = ptrtoint i64* %225 to i64
  %227 = sub i64 %226, %221
  %228 = lshr i64 %227, 3
  %229 = add nuw nsw i64 %228, 1
  %230 = icmp ult i64 %229, 4
  br i1 %230, label %324, label %231

231:                                              ; preds = %223
  %232 = add nsw i64 %54, -1
  %233 = getelementptr i64, i64* %0, i64 %232
  %234 = ptrtoint i64* %233 to i64
  %235 = sub i64 %234, %221
  %236 = lshr i64 %235, 3
  %237 = add nuw nsw i64 %236, 1
  %238 = getelementptr i64, i64* %216, i64 %237
  %239 = getelementptr i64, i64* %217, i64 %237
  %240 = icmp ult i64* %216, %239
  %241 = icmp ult i64* %217, %238
  %242 = and i1 %240, %241
  br i1 %242, label %324, label %243

243:                                              ; preds = %231
  %244 = and i64 %229, 4611686018427387900
  %245 = getelementptr i64, i64* %216, i64 %244
  %246 = getelementptr i64, i64* %217, i64 %244
  %247 = add nsw i64 %244, -4
  %248 = lshr exact i64 %247, 2
  %249 = add nuw nsw i64 %248, 1
  %250 = and i64 %249, 3
  %251 = icmp ult i64 %247, 12
  br i1 %251, label %303, label %252

252:                                              ; preds = %243
  %253 = sub nsw i64 %249, %250
  br label %254

254:                                              ; preds = %254, %252
  %255 = phi i64 [ 0, %252 ], [ %300, %254 ]
  %256 = phi i64 [ %253, %252 ], [ %301, %254 ]
  %257 = getelementptr i64, i64* %216, i64 %255
  %258 = getelementptr i64, i64* %217, i64 %255
  %259 = bitcast i64* %258 to <2 x i64>*
  %260 = load <2 x i64>, <2 x i64>* %259, align 8, !alias.scope !37
  %261 = getelementptr i64, i64* %258, i64 2
  %262 = bitcast i64* %261 to <2 x i64>*
  %263 = load <2 x i64>, <2 x i64>* %262, align 8, !alias.scope !37
  %264 = bitcast i64* %257 to <2 x i64>*
  store <2 x i64> %260, <2 x i64>* %264, align 8, !alias.scope !40, !noalias !37
  %265 = getelementptr i64, i64* %257, i64 2
  %266 = bitcast i64* %265 to <2 x i64>*
  store <2 x i64> %263, <2 x i64>* %266, align 8, !alias.scope !40, !noalias !37
  %267 = or i64 %255, 4
  %268 = getelementptr i64, i64* %216, i64 %267
  %269 = getelementptr i64, i64* %217, i64 %267
  %270 = bitcast i64* %269 to <2 x i64>*
  %271 = load <2 x i64>, <2 x i64>* %270, align 8, !alias.scope !37
  %272 = getelementptr i64, i64* %269, i64 2
  %273 = bitcast i64* %272 to <2 x i64>*
  %274 = load <2 x i64>, <2 x i64>* %273, align 8, !alias.scope !37
  %275 = bitcast i64* %268 to <2 x i64>*
  store <2 x i64> %271, <2 x i64>* %275, align 8, !alias.scope !40, !noalias !37
  %276 = getelementptr i64, i64* %268, i64 2
  %277 = bitcast i64* %276 to <2 x i64>*
  store <2 x i64> %274, <2 x i64>* %277, align 8, !alias.scope !40, !noalias !37
  %278 = or i64 %255, 8
  %279 = getelementptr i64, i64* %216, i64 %278
  %280 = getelementptr i64, i64* %217, i64 %278
  %281 = bitcast i64* %280 to <2 x i64>*
  %282 = load <2 x i64>, <2 x i64>* %281, align 8, !alias.scope !37
  %283 = getelementptr i64, i64* %280, i64 2
  %284 = bitcast i64* %283 to <2 x i64>*
  %285 = load <2 x i64>, <2 x i64>* %284, align 8, !alias.scope !37
  %286 = bitcast i64* %279 to <2 x i64>*
  store <2 x i64> %282, <2 x i64>* %286, align 8, !alias.scope !40, !noalias !37
  %287 = getelementptr i64, i64* %279, i64 2
  %288 = bitcast i64* %287 to <2 x i64>*
  store <2 x i64> %285, <2 x i64>* %288, align 8, !alias.scope !40, !noalias !37
  %289 = or i64 %255, 12
  %290 = getelementptr i64, i64* %216, i64 %289
  %291 = getelementptr i64, i64* %217, i64 %289
  %292 = bitcast i64* %291 to <2 x i64>*
  %293 = load <2 x i64>, <2 x i64>* %292, align 8, !alias.scope !37
  %294 = getelementptr i64, i64* %291, i64 2
  %295 = bitcast i64* %294 to <2 x i64>*
  %296 = load <2 x i64>, <2 x i64>* %295, align 8, !alias.scope !37
  %297 = bitcast i64* %290 to <2 x i64>*
  store <2 x i64> %293, <2 x i64>* %297, align 8, !alias.scope !40, !noalias !37
  %298 = getelementptr i64, i64* %290, i64 2
  %299 = bitcast i64* %298 to <2 x i64>*
  store <2 x i64> %296, <2 x i64>* %299, align 8, !alias.scope !40, !noalias !37
  %300 = add i64 %255, 16
  %301 = add i64 %256, -4
  %302 = icmp eq i64 %301, 0
  br i1 %302, label %303, label %254, !llvm.loop !42

303:                                              ; preds = %254, %243
  %304 = phi i64 [ 0, %243 ], [ %300, %254 ]
  %305 = icmp eq i64 %250, 0
  br i1 %305, label %322, label %306

306:                                              ; preds = %303, %306
  %307 = phi i64 [ %319, %306 ], [ %304, %303 ]
  %308 = phi i64 [ %320, %306 ], [ %250, %303 ]
  %309 = getelementptr i64, i64* %216, i64 %307
  %310 = getelementptr i64, i64* %217, i64 %307
  %311 = bitcast i64* %310 to <2 x i64>*
  %312 = load <2 x i64>, <2 x i64>* %311, align 8, !alias.scope !37
  %313 = getelementptr i64, i64* %310, i64 2
  %314 = bitcast i64* %313 to <2 x i64>*
  %315 = load <2 x i64>, <2 x i64>* %314, align 8, !alias.scope !37
  %316 = bitcast i64* %309 to <2 x i64>*
  store <2 x i64> %312, <2 x i64>* %316, align 8, !alias.scope !40, !noalias !37
  %317 = getelementptr i64, i64* %309, i64 2
  %318 = bitcast i64* %317 to <2 x i64>*
  store <2 x i64> %315, <2 x i64>* %318, align 8, !alias.scope !40, !noalias !37
  %319 = add i64 %307, 4
  %320 = add i64 %308, -1
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %322, label %306, !llvm.loop !43

322:                                              ; preds = %306, %303
  %323 = icmp eq i64 %229, %244
  br i1 %323, label %390, label %324

324:                                              ; preds = %322, %231, %223
  %325 = phi i64* [ %216, %231 ], [ %216, %223 ], [ %245, %322 ]
  %326 = phi i64* [ %217, %231 ], [ %217, %223 ], [ %246, %322 ]
  %327 = ptrtoint i64* %326 to i64
  %328 = add nsw i64 %54, -1
  %329 = getelementptr i64, i64* %0, i64 %328
  %330 = ptrtoint i64* %329 to i64
  %331 = sub i64 %330, %327
  %332 = lshr i64 %331, 3
  %333 = add nuw nsw i64 %332, 1
  %334 = and i64 %333, 7
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %345, label %336

336:                                              ; preds = %324, %336
  %337 = phi i64* [ %342, %336 ], [ %325, %324 ]
  %338 = phi i64* [ %341, %336 ], [ %326, %324 ]
  %339 = phi i64 [ %343, %336 ], [ %334, %324 ]
  %340 = load i64, i64* %338, align 8
  store i64 %340, i64* %337, align 8
  %341 = getelementptr inbounds i64, i64* %338, i64 1
  %342 = getelementptr inbounds i64, i64* %337, i64 1
  %343 = add i64 %339, -1
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %345, label %336, !llvm.loop !44

345:                                              ; preds = %336, %324
  %346 = phi i64* [ %325, %324 ], [ %342, %336 ]
  %347 = phi i64* [ %326, %324 ], [ %341, %336 ]
  %348 = icmp ult i64 %331, 56
  br i1 %348, label %390, label %349

349:                                              ; preds = %345, %349
  %350 = phi i64* [ %375, %349 ], [ %346, %345 ]
  %351 = phi i64* [ %374, %349 ], [ %347, %345 ]
  %352 = load i64, i64* %351, align 8
  store i64 %352, i64* %350, align 8
  %353 = getelementptr inbounds i64, i64* %351, i64 1
  %354 = getelementptr inbounds i64, i64* %350, i64 1
  %355 = load i64, i64* %353, align 8
  store i64 %355, i64* %354, align 8
  %356 = getelementptr inbounds i64, i64* %351, i64 2
  %357 = getelementptr inbounds i64, i64* %350, i64 2
  %358 = load i64, i64* %356, align 8
  store i64 %358, i64* %357, align 8
  %359 = getelementptr inbounds i64, i64* %351, i64 3
  %360 = getelementptr inbounds i64, i64* %350, i64 3
  %361 = load i64, i64* %359, align 8
  store i64 %361, i64* %360, align 8
  %362 = getelementptr inbounds i64, i64* %351, i64 4
  %363 = getelementptr inbounds i64, i64* %350, i64 4
  %364 = load i64, i64* %362, align 8
  store i64 %364, i64* %363, align 8
  %365 = getelementptr inbounds i64, i64* %351, i64 5
  %366 = getelementptr inbounds i64, i64* %350, i64 5
  %367 = load i64, i64* %365, align 8
  store i64 %367, i64* %366, align 8
  %368 = getelementptr inbounds i64, i64* %351, i64 6
  %369 = getelementptr inbounds i64, i64* %350, i64 6
  %370 = load i64, i64* %368, align 8
  store i64 %370, i64* %369, align 8
  %371 = getelementptr inbounds i64, i64* %351, i64 7
  %372 = getelementptr inbounds i64, i64* %350, i64 7
  %373 = load i64, i64* %371, align 8
  store i64 %373, i64* %372, align 8
  %374 = getelementptr inbounds i64, i64* %351, i64 8
  %375 = getelementptr inbounds i64, i64* %350, i64 8
  %376 = icmp eq i64* %374, %55
  br i1 %376, label %390, label %349, !llvm.loop !45

377:                                              ; preds = %215
  %378 = load i64, i64* %218, align 8
  %379 = load i64, i64* %217, align 8
  %380 = icmp slt i64 %378, %379
  br i1 %380, label %381, label %383

381:                                              ; preds = %377
  store i64 %378, i64* %216, align 8
  %382 = getelementptr inbounds i64, i64* %218, i64 1
  br label %385

383:                                              ; preds = %377
  store i64 %379, i64* %216, align 8
  %384 = getelementptr inbounds i64, i64* %217, i64 1
  br label %385

385:                                              ; preds = %383, %381
  %386 = phi i64* [ %382, %381 ], [ %218, %383 ]
  %387 = phi i64* [ %217, %381 ], [ %384, %383 ]
  %388 = getelementptr inbounds i64, i64* %216, i64 1
  %389 = icmp eq i64* %387, %55
  br i1 %389, label %59, label %215

390:                                              ; preds = %345, %349, %183, %187, %48, %322, %161, %220, %59, %23, %21, %13, %16, %5, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i64*, i64*, i64*, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* dereferenceable(1), i64, i64, i64*, i64) local_unnamed_addr #3 comdat {
  %9 = ptrtoint i64* %6 to i64
  %10 = icmp eq i64 %5, 0
  br i1 %10, label %887, label %11

11:                                               ; preds = %8
  %12 = ptrtoint i64* %1 to i64
  %13 = ptrtoint i64* %0 to i64
  br label %14

14:                                               ; preds = %11, %880
  %15 = phi i64* [ %885, %880 ], [ %2, %11 ]
  %16 = phi i64 [ %884, %880 ], [ %4, %11 ]
  %17 = phi i64 [ %883, %880 ], [ %5, %11 ]
  %18 = phi i64 [ %882, %880 ], [ %12, %11 ]
  %19 = phi i64 [ %881, %880 ], [ %13, %11 ]
  %20 = icmp sgt i64 %16, %7
  %21 = icmp sgt i64 %17, %7
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %28

23:                                               ; preds = %14
  %24 = icmp eq i64 %16, 0
  br i1 %24, label %887, label %25

25:                                               ; preds = %23
  %26 = inttoptr i64 %18 to i64*
  %27 = load i64, i64* %26, align 8
  br label %548

28:                                               ; preds = %14
  %29 = inttoptr i64 %19 to i64*
  %30 = inttoptr i64 %19 to i8*
  %31 = inttoptr i64 %18 to i64*
  %32 = inttoptr i64 %18 to i8*
  %33 = icmp sgt i64 %16, %17
  br i1 %33, label %165, label %34

34:                                               ; preds = %28
  %35 = icmp eq i64* %29, %31
  br i1 %35, label %887, label %36

36:                                               ; preds = %34
  %37 = getelementptr i64, i64* %31, i64 -1
  %38 = bitcast i64* %37 to i8*
  %39 = sub i64 0, %19
  %40 = getelementptr i8, i8* %38, i64 %39
  %41 = ptrtoint i8* %40 to i64
  %42 = lshr i64 %41, 3
  %43 = add nuw nsw i64 %42, 1
  %44 = icmp ult i64 %43, 4
  br i1 %44, label %45, label %70

45:                                               ; preds = %163, %70, %36
  %46 = phi i64* [ %6, %70 ], [ %6, %36 ], [ %86, %163 ]
  %47 = phi i64* [ %29, %70 ], [ %29, %36 ], [ %87, %163 ]
  %48 = ptrtoint i64* %47 to i64
  %49 = getelementptr i64, i64* %31, i64 -1
  %50 = ptrtoint i64* %49 to i64
  %51 = sub i64 %50, %48
  %52 = lshr i64 %51, 3
  %53 = add nuw nsw i64 %52, 1
  %54 = and i64 %53, 7
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %65, label %56

56:                                               ; preds = %45, %56
  %57 = phi i64* [ %62, %56 ], [ %46, %45 ]
  %58 = phi i64* [ %61, %56 ], [ %47, %45 ]
  %59 = phi i64 [ %63, %56 ], [ %54, %45 ]
  %60 = load i64, i64* %58, align 8
  store i64 %60, i64* %57, align 8
  %61 = getelementptr inbounds i64, i64* %58, i64 1
  %62 = getelementptr inbounds i64, i64* %57, i64 1
  %63 = add i64 %59, -1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %56, !llvm.loop !46

65:                                               ; preds = %56, %45
  %66 = phi i64* [ undef, %45 ], [ %62, %56 ]
  %67 = phi i64* [ %46, %45 ], [ %62, %56 ]
  %68 = phi i64* [ %47, %45 ], [ %61, %56 ]
  %69 = icmp ult i64 %51, 56
  br i1 %69, label %296, label %325

70:                                               ; preds = %36
  %71 = getelementptr i64, i64* %31, i64 -1
  %72 = bitcast i64* %71 to i8*
  %73 = sub i64 0, %19
  %74 = getelementptr i8, i8* %72, i64 %73
  %75 = ptrtoint i8* %74 to i64
  %76 = lshr i64 %75, 3
  %77 = add nuw nsw i64 %76, 1
  %78 = getelementptr i64, i64* %6, i64 %77
  %79 = bitcast i64* %78 to i8*
  %80 = getelementptr i64, i64* %29, i64 %77
  %81 = icmp ugt i64* %80, %6
  %82 = icmp ult i8* %30, %79
  %83 = and i1 %81, %82
  br i1 %83, label %45, label %84

84:                                               ; preds = %70
  %85 = and i64 %43, 4611686018427387900
  %86 = getelementptr i64, i64* %6, i64 %85
  %87 = getelementptr i64, i64* %29, i64 %85
  %88 = add nsw i64 %85, -4
  %89 = lshr exact i64 %88, 2
  %90 = add nuw nsw i64 %89, 1
  %91 = and i64 %90, 3
  %92 = icmp ult i64 %88, 12
  br i1 %92, label %144, label %93

93:                                               ; preds = %84
  %94 = sub nsw i64 %90, %91
  br label %95

95:                                               ; preds = %95, %93
  %96 = phi i64 [ 0, %93 ], [ %141, %95 ]
  %97 = phi i64 [ %94, %93 ], [ %142, %95 ]
  %98 = getelementptr i64, i64* %6, i64 %96
  %99 = getelementptr i64, i64* %29, i64 %96
  %100 = bitcast i64* %99 to <2 x i64>*
  %101 = load <2 x i64>, <2 x i64>* %100, align 8, !alias.scope !47
  %102 = getelementptr i64, i64* %99, i64 2
  %103 = bitcast i64* %102 to <2 x i64>*
  %104 = load <2 x i64>, <2 x i64>* %103, align 8, !alias.scope !47
  %105 = bitcast i64* %98 to <2 x i64>*
  store <2 x i64> %101, <2 x i64>* %105, align 8, !alias.scope !50, !noalias !47
  %106 = getelementptr i64, i64* %98, i64 2
  %107 = bitcast i64* %106 to <2 x i64>*
  store <2 x i64> %104, <2 x i64>* %107, align 8, !alias.scope !50, !noalias !47
  %108 = or i64 %96, 4
  %109 = getelementptr i64, i64* %6, i64 %108
  %110 = getelementptr i64, i64* %29, i64 %108
  %111 = bitcast i64* %110 to <2 x i64>*
  %112 = load <2 x i64>, <2 x i64>* %111, align 8, !alias.scope !47
  %113 = getelementptr i64, i64* %110, i64 2
  %114 = bitcast i64* %113 to <2 x i64>*
  %115 = load <2 x i64>, <2 x i64>* %114, align 8, !alias.scope !47
  %116 = bitcast i64* %109 to <2 x i64>*
  store <2 x i64> %112, <2 x i64>* %116, align 8, !alias.scope !50, !noalias !47
  %117 = getelementptr i64, i64* %109, i64 2
  %118 = bitcast i64* %117 to <2 x i64>*
  store <2 x i64> %115, <2 x i64>* %118, align 8, !alias.scope !50, !noalias !47
  %119 = or i64 %96, 8
  %120 = getelementptr i64, i64* %6, i64 %119
  %121 = getelementptr i64, i64* %29, i64 %119
  %122 = bitcast i64* %121 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 8, !alias.scope !47
  %124 = getelementptr i64, i64* %121, i64 2
  %125 = bitcast i64* %124 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8, !alias.scope !47
  %127 = bitcast i64* %120 to <2 x i64>*
  store <2 x i64> %123, <2 x i64>* %127, align 8, !alias.scope !50, !noalias !47
  %128 = getelementptr i64, i64* %120, i64 2
  %129 = bitcast i64* %128 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %129, align 8, !alias.scope !50, !noalias !47
  %130 = or i64 %96, 12
  %131 = getelementptr i64, i64* %6, i64 %130
  %132 = getelementptr i64, i64* %29, i64 %130
  %133 = bitcast i64* %132 to <2 x i64>*
  %134 = load <2 x i64>, <2 x i64>* %133, align 8, !alias.scope !47
  %135 = getelementptr i64, i64* %132, i64 2
  %136 = bitcast i64* %135 to <2 x i64>*
  %137 = load <2 x i64>, <2 x i64>* %136, align 8, !alias.scope !47
  %138 = bitcast i64* %131 to <2 x i64>*
  store <2 x i64> %134, <2 x i64>* %138, align 8, !alias.scope !50, !noalias !47
  %139 = getelementptr i64, i64* %131, i64 2
  %140 = bitcast i64* %139 to <2 x i64>*
  store <2 x i64> %137, <2 x i64>* %140, align 8, !alias.scope !50, !noalias !47
  %141 = add i64 %96, 16
  %142 = add i64 %97, -4
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %95, !llvm.loop !52

144:                                              ; preds = %95, %84
  %145 = phi i64 [ 0, %84 ], [ %141, %95 ]
  %146 = icmp eq i64 %91, 0
  br i1 %146, label %163, label %147

147:                                              ; preds = %144, %147
  %148 = phi i64 [ %160, %147 ], [ %145, %144 ]
  %149 = phi i64 [ %161, %147 ], [ %91, %144 ]
  %150 = getelementptr i64, i64* %6, i64 %148
  %151 = getelementptr i64, i64* %29, i64 %148
  %152 = bitcast i64* %151 to <2 x i64>*
  %153 = load <2 x i64>, <2 x i64>* %152, align 8, !alias.scope !47
  %154 = getelementptr i64, i64* %151, i64 2
  %155 = bitcast i64* %154 to <2 x i64>*
  %156 = load <2 x i64>, <2 x i64>* %155, align 8, !alias.scope !47
  %157 = bitcast i64* %150 to <2 x i64>*
  store <2 x i64> %153, <2 x i64>* %157, align 8, !alias.scope !50, !noalias !47
  %158 = getelementptr i64, i64* %150, i64 2
  %159 = bitcast i64* %158 to <2 x i64>*
  store <2 x i64> %156, <2 x i64>* %159, align 8, !alias.scope !50, !noalias !47
  %160 = add i64 %148, 4
  %161 = add i64 %149, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %147, !llvm.loop !53

163:                                              ; preds = %147, %144
  %164 = icmp eq i64 %43, %85
  br i1 %164, label %296, label %45

165:                                              ; preds = %28
  %166 = icmp eq i64* %15, %31
  br i1 %166, label %887, label %167

167:                                              ; preds = %165
  %168 = getelementptr i64, i64* %15, i64 -1
  %169 = bitcast i64* %168 to i8*
  %170 = sub i64 0, %18
  %171 = getelementptr i8, i8* %169, i64 %170
  %172 = ptrtoint i8* %171 to i64
  %173 = lshr i64 %172, 3
  %174 = add nuw nsw i64 %173, 1
  %175 = icmp ult i64 %174, 4
  br i1 %175, label %176, label %201

176:                                              ; preds = %294, %201, %167
  %177 = phi i64* [ %6, %201 ], [ %6, %167 ], [ %217, %294 ]
  %178 = phi i64* [ %31, %201 ], [ %31, %167 ], [ %218, %294 ]
  %179 = ptrtoint i64* %178 to i64
  %180 = getelementptr i64, i64* %15, i64 -1
  %181 = ptrtoint i64* %180 to i64
  %182 = sub i64 %181, %179
  %183 = lshr i64 %182, 3
  %184 = add nuw nsw i64 %183, 1
  %185 = and i64 %184, 7
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %196, label %187

187:                                              ; preds = %176, %187
  %188 = phi i64* [ %193, %187 ], [ %177, %176 ]
  %189 = phi i64* [ %192, %187 ], [ %178, %176 ]
  %190 = phi i64 [ %194, %187 ], [ %185, %176 ]
  %191 = load i64, i64* %189, align 8
  store i64 %191, i64* %188, align 8
  %192 = getelementptr inbounds i64, i64* %189, i64 1
  %193 = getelementptr inbounds i64, i64* %188, i64 1
  %194 = add i64 %190, -1
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %196, label %187, !llvm.loop !54

196:                                              ; preds = %187, %176
  %197 = phi i64* [ undef, %176 ], [ %193, %187 ]
  %198 = phi i64* [ %177, %176 ], [ %193, %187 ]
  %199 = phi i64* [ %178, %176 ], [ %192, %187 ]
  %200 = icmp ult i64 %182, 56
  br i1 %200, label %353, label %520

201:                                              ; preds = %167
  %202 = getelementptr i64, i64* %15, i64 -1
  %203 = bitcast i64* %202 to i8*
  %204 = sub i64 0, %18
  %205 = getelementptr i8, i8* %203, i64 %204
  %206 = ptrtoint i8* %205 to i64
  %207 = lshr i64 %206, 3
  %208 = add nuw nsw i64 %207, 1
  %209 = getelementptr i64, i64* %6, i64 %208
  %210 = bitcast i64* %209 to i8*
  %211 = getelementptr i64, i64* %31, i64 %208
  %212 = icmp ugt i64* %211, %6
  %213 = icmp ult i8* %32, %210
  %214 = and i1 %212, %213
  br i1 %214, label %176, label %215

215:                                              ; preds = %201
  %216 = and i64 %174, 4611686018427387900
  %217 = getelementptr i64, i64* %6, i64 %216
  %218 = getelementptr i64, i64* %31, i64 %216
  %219 = add nsw i64 %216, -4
  %220 = lshr exact i64 %219, 2
  %221 = add nuw nsw i64 %220, 1
  %222 = and i64 %221, 3
  %223 = icmp ult i64 %219, 12
  br i1 %223, label %275, label %224

224:                                              ; preds = %215
  %225 = sub nsw i64 %221, %222
  br label %226

226:                                              ; preds = %226, %224
  %227 = phi i64 [ 0, %224 ], [ %272, %226 ]
  %228 = phi i64 [ %225, %224 ], [ %273, %226 ]
  %229 = getelementptr i64, i64* %6, i64 %227
  %230 = getelementptr i64, i64* %31, i64 %227
  %231 = bitcast i64* %230 to <2 x i64>*
  %232 = load <2 x i64>, <2 x i64>* %231, align 8, !alias.scope !55
  %233 = getelementptr i64, i64* %230, i64 2
  %234 = bitcast i64* %233 to <2 x i64>*
  %235 = load <2 x i64>, <2 x i64>* %234, align 8, !alias.scope !55
  %236 = bitcast i64* %229 to <2 x i64>*
  store <2 x i64> %232, <2 x i64>* %236, align 8, !alias.scope !58, !noalias !55
  %237 = getelementptr i64, i64* %229, i64 2
  %238 = bitcast i64* %237 to <2 x i64>*
  store <2 x i64> %235, <2 x i64>* %238, align 8, !alias.scope !58, !noalias !55
  %239 = or i64 %227, 4
  %240 = getelementptr i64, i64* %6, i64 %239
  %241 = getelementptr i64, i64* %31, i64 %239
  %242 = bitcast i64* %241 to <2 x i64>*
  %243 = load <2 x i64>, <2 x i64>* %242, align 8, !alias.scope !55
  %244 = getelementptr i64, i64* %241, i64 2
  %245 = bitcast i64* %244 to <2 x i64>*
  %246 = load <2 x i64>, <2 x i64>* %245, align 8, !alias.scope !55
  %247 = bitcast i64* %240 to <2 x i64>*
  store <2 x i64> %243, <2 x i64>* %247, align 8, !alias.scope !58, !noalias !55
  %248 = getelementptr i64, i64* %240, i64 2
  %249 = bitcast i64* %248 to <2 x i64>*
  store <2 x i64> %246, <2 x i64>* %249, align 8, !alias.scope !58, !noalias !55
  %250 = or i64 %227, 8
  %251 = getelementptr i64, i64* %6, i64 %250
  %252 = getelementptr i64, i64* %31, i64 %250
  %253 = bitcast i64* %252 to <2 x i64>*
  %254 = load <2 x i64>, <2 x i64>* %253, align 8, !alias.scope !55
  %255 = getelementptr i64, i64* %252, i64 2
  %256 = bitcast i64* %255 to <2 x i64>*
  %257 = load <2 x i64>, <2 x i64>* %256, align 8, !alias.scope !55
  %258 = bitcast i64* %251 to <2 x i64>*
  store <2 x i64> %254, <2 x i64>* %258, align 8, !alias.scope !58, !noalias !55
  %259 = getelementptr i64, i64* %251, i64 2
  %260 = bitcast i64* %259 to <2 x i64>*
  store <2 x i64> %257, <2 x i64>* %260, align 8, !alias.scope !58, !noalias !55
  %261 = or i64 %227, 12
  %262 = getelementptr i64, i64* %6, i64 %261
  %263 = getelementptr i64, i64* %31, i64 %261
  %264 = bitcast i64* %263 to <2 x i64>*
  %265 = load <2 x i64>, <2 x i64>* %264, align 8, !alias.scope !55
  %266 = getelementptr i64, i64* %263, i64 2
  %267 = bitcast i64* %266 to <2 x i64>*
  %268 = load <2 x i64>, <2 x i64>* %267, align 8, !alias.scope !55
  %269 = bitcast i64* %262 to <2 x i64>*
  store <2 x i64> %265, <2 x i64>* %269, align 8, !alias.scope !58, !noalias !55
  %270 = getelementptr i64, i64* %262, i64 2
  %271 = bitcast i64* %270 to <2 x i64>*
  store <2 x i64> %268, <2 x i64>* %271, align 8, !alias.scope !58, !noalias !55
  %272 = add i64 %227, 16
  %273 = add i64 %228, -4
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %275, label %226, !llvm.loop !60

275:                                              ; preds = %226, %215
  %276 = phi i64 [ 0, %215 ], [ %272, %226 ]
  %277 = icmp eq i64 %222, 0
  br i1 %277, label %294, label %278

278:                                              ; preds = %275, %278
  %279 = phi i64 [ %291, %278 ], [ %276, %275 ]
  %280 = phi i64 [ %292, %278 ], [ %222, %275 ]
  %281 = getelementptr i64, i64* %6, i64 %279
  %282 = getelementptr i64, i64* %31, i64 %279
  %283 = bitcast i64* %282 to <2 x i64>*
  %284 = load <2 x i64>, <2 x i64>* %283, align 8, !alias.scope !55
  %285 = getelementptr i64, i64* %282, i64 2
  %286 = bitcast i64* %285 to <2 x i64>*
  %287 = load <2 x i64>, <2 x i64>* %286, align 8, !alias.scope !55
  %288 = bitcast i64* %281 to <2 x i64>*
  store <2 x i64> %284, <2 x i64>* %288, align 8, !alias.scope !58, !noalias !55
  %289 = getelementptr i64, i64* %281, i64 2
  %290 = bitcast i64* %289 to <2 x i64>*
  store <2 x i64> %287, <2 x i64>* %290, align 8, !alias.scope !58, !noalias !55
  %291 = add i64 %279, 4
  %292 = add i64 %280, -1
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %294, label %278, !llvm.loop !61

294:                                              ; preds = %278, %275
  %295 = icmp eq i64 %174, %216
  br i1 %295, label %353, label %176

296:                                              ; preds = %65, %325, %163
  %297 = phi i64* [ %86, %163 ], [ %66, %65 ], [ %351, %325 ]
  %298 = icmp eq i64* %297, %6
  br i1 %298, label %887, label %299

299:                                              ; preds = %296, %320
  %300 = phi i64* [ %322, %320 ], [ %6, %296 ]
  %301 = phi i64* [ %323, %320 ], [ %29, %296 ]
  %302 = phi i64* [ %321, %320 ], [ %31, %296 ]
  %303 = icmp eq i64* %302, %15
  br i1 %303, label %304, label %312

304:                                              ; preds = %299
  %305 = ptrtoint i64* %297 to i64
  %306 = ptrtoint i64* %300 to i64
  %307 = sub i64 %305, %306
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %887, label %309

309:                                              ; preds = %304
  %310 = bitcast i64* %301 to i8*
  %311 = bitcast i64* %300 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %310, i8* align 8 %311, i64 %307, i1 false) #14
  br label %887

312:                                              ; preds = %299
  %313 = load i64, i64* %302, align 8
  %314 = load i64, i64* %300, align 8
  %315 = icmp slt i64 %313, %314
  br i1 %315, label %316, label %318

316:                                              ; preds = %312
  store i64 %313, i64* %301, align 8
  %317 = getelementptr inbounds i64, i64* %302, i64 1
  br label %320

318:                                              ; preds = %312
  store i64 %314, i64* %301, align 8
  %319 = getelementptr inbounds i64, i64* %300, i64 1
  br label %320

320:                                              ; preds = %318, %316
  %321 = phi i64* [ %317, %316 ], [ %302, %318 ]
  %322 = phi i64* [ %300, %316 ], [ %319, %318 ]
  %323 = getelementptr inbounds i64, i64* %301, i64 1
  %324 = icmp eq i64* %322, %297
  br i1 %324, label %887, label %299

325:                                              ; preds = %65, %325
  %326 = phi i64* [ %351, %325 ], [ %67, %65 ]
  %327 = phi i64* [ %350, %325 ], [ %68, %65 ]
  %328 = load i64, i64* %327, align 8
  store i64 %328, i64* %326, align 8
  %329 = getelementptr inbounds i64, i64* %327, i64 1
  %330 = getelementptr inbounds i64, i64* %326, i64 1
  %331 = load i64, i64* %329, align 8
  store i64 %331, i64* %330, align 8
  %332 = getelementptr inbounds i64, i64* %327, i64 2
  %333 = getelementptr inbounds i64, i64* %326, i64 2
  %334 = load i64, i64* %332, align 8
  store i64 %334, i64* %333, align 8
  %335 = getelementptr inbounds i64, i64* %327, i64 3
  %336 = getelementptr inbounds i64, i64* %326, i64 3
  %337 = load i64, i64* %335, align 8
  store i64 %337, i64* %336, align 8
  %338 = getelementptr inbounds i64, i64* %327, i64 4
  %339 = getelementptr inbounds i64, i64* %326, i64 4
  %340 = load i64, i64* %338, align 8
  store i64 %340, i64* %339, align 8
  %341 = getelementptr inbounds i64, i64* %327, i64 5
  %342 = getelementptr inbounds i64, i64* %326, i64 5
  %343 = load i64, i64* %341, align 8
  store i64 %343, i64* %342, align 8
  %344 = getelementptr inbounds i64, i64* %327, i64 6
  %345 = getelementptr inbounds i64, i64* %326, i64 6
  %346 = load i64, i64* %344, align 8
  store i64 %346, i64* %345, align 8
  %347 = getelementptr inbounds i64, i64* %327, i64 7
  %348 = getelementptr inbounds i64, i64* %326, i64 7
  %349 = load i64, i64* %347, align 8
  store i64 %349, i64* %348, align 8
  %350 = getelementptr inbounds i64, i64* %327, i64 8
  %351 = getelementptr inbounds i64, i64* %326, i64 8
  %352 = icmp eq i64* %350, %31
  br i1 %352, label %296, label %325, !llvm.loop !62

353:                                              ; preds = %196, %520, %294
  %354 = phi i64* [ %217, %294 ], [ %197, %196 ], [ %546, %520 ]
  %355 = icmp eq i64* %354, %6
  br i1 %355, label %887, label %356

356:                                              ; preds = %353, %509
  %357 = phi i64* [ %515, %509 ], [ %15, %353 ]
  %358 = phi i64* [ %518, %509 ], [ %354, %353 ]
  %359 = phi i64* [ %517, %509 ], [ %31, %353 ]
  %360 = icmp eq i64* %359, %29
  br i1 %360, label %361, label %509

361:                                              ; preds = %356
  %362 = getelementptr i64, i64* %358, i64 -1
  %363 = ptrtoint i64* %362 to i64
  %364 = sub i64 %363, %9
  %365 = lshr i64 %364, 3
  %366 = add nuw nsw i64 %365, 1
  %367 = icmp ult i64 %366, 4
  br i1 %367, label %458, label %368

368:                                              ; preds = %361
  %369 = getelementptr i64, i64* %358, i64 -1
  %370 = ptrtoint i64* %369 to i64
  %371 = sub i64 %370, %9
  %372 = lshr i64 %371, 3
  %373 = xor i64 %372, -1
  %374 = getelementptr i64, i64* %357, i64 %373
  %375 = getelementptr i64, i64* %358, i64 %373
  %376 = icmp ult i64* %374, %358
  %377 = icmp ult i64* %375, %357
  %378 = and i1 %376, %377
  br i1 %378, label %458, label %379

379:                                              ; preds = %368
  %380 = and i64 %366, 4611686018427387900
  %381 = sub nsw i64 0, %380
  %382 = getelementptr i64, i64* %358, i64 %381
  %383 = sub nsw i64 0, %380
  %384 = getelementptr i64, i64* %357, i64 %383
  %385 = add nsw i64 %380, -4
  %386 = lshr exact i64 %385, 2
  %387 = add nuw nsw i64 %386, 1
  %388 = and i64 %387, 1
  %389 = icmp eq i64 %385, 0
  br i1 %389, label %436, label %390

390:                                              ; preds = %379
  %391 = sub nuw nsw i64 %387, %388
  %392 = getelementptr i64, i64* %358, i64 -1
  %393 = getelementptr i64, i64* %357, i64 -1
  %394 = getelementptr i64, i64* %358, i64 -1
  %395 = getelementptr i64, i64* %357, i64 -1
  br label %396

396:                                              ; preds = %396, %390
  %397 = phi i64 [ 0, %390 ], [ %431, %396 ]
  %398 = phi i64 [ %391, %390 ], [ %432, %396 ]
  %399 = sub i64 0, %397
  %400 = sub i64 0, %397
  %401 = getelementptr inbounds i64, i64* %392, i64 %399
  %402 = getelementptr inbounds i64, i64* %401, i64 -1
  %403 = bitcast i64* %402 to <2 x i64>*
  %404 = load <2 x i64>, <2 x i64>* %403, align 8, !alias.scope !63
  %405 = getelementptr inbounds i64, i64* %401, i64 -2
  %406 = getelementptr inbounds i64, i64* %405, i64 -1
  %407 = bitcast i64* %406 to <2 x i64>*
  %408 = load <2 x i64>, <2 x i64>* %407, align 8, !alias.scope !63
  %409 = getelementptr inbounds i64, i64* %393, i64 %400
  %410 = getelementptr inbounds i64, i64* %409, i64 -1
  %411 = bitcast i64* %410 to <2 x i64>*
  store <2 x i64> %404, <2 x i64>* %411, align 8, !alias.scope !66, !noalias !63
  %412 = getelementptr inbounds i64, i64* %409, i64 -2
  %413 = getelementptr inbounds i64, i64* %412, i64 -1
  %414 = bitcast i64* %413 to <2 x i64>*
  store <2 x i64> %408, <2 x i64>* %414, align 8, !alias.scope !66, !noalias !63
  %415 = sub nuw nsw i64 -4, %397
  %416 = sub nuw nsw i64 -4, %397
  %417 = getelementptr inbounds i64, i64* %394, i64 %415
  %418 = getelementptr inbounds i64, i64* %417, i64 -1
  %419 = bitcast i64* %418 to <2 x i64>*
  %420 = load <2 x i64>, <2 x i64>* %419, align 8, !alias.scope !63
  %421 = getelementptr inbounds i64, i64* %417, i64 -2
  %422 = getelementptr inbounds i64, i64* %421, i64 -1
  %423 = bitcast i64* %422 to <2 x i64>*
  %424 = load <2 x i64>, <2 x i64>* %423, align 8, !alias.scope !63
  %425 = getelementptr inbounds i64, i64* %395, i64 %416
  %426 = getelementptr inbounds i64, i64* %425, i64 -1
  %427 = bitcast i64* %426 to <2 x i64>*
  store <2 x i64> %420, <2 x i64>* %427, align 8, !alias.scope !66, !noalias !63
  %428 = getelementptr inbounds i64, i64* %425, i64 -2
  %429 = getelementptr inbounds i64, i64* %428, i64 -1
  %430 = bitcast i64* %429 to <2 x i64>*
  store <2 x i64> %424, <2 x i64>* %430, align 8, !alias.scope !66, !noalias !63
  %431 = add i64 %397, 8
  %432 = add i64 %398, -2
  %433 = icmp eq i64 %432, 0
  br i1 %433, label %434, label %396, !llvm.loop !68

434:                                              ; preds = %396
  %435 = sub nuw nsw i64 -8, %397
  br label %436

436:                                              ; preds = %434, %379
  %437 = phi i64 [ 0, %379 ], [ %435, %434 ]
  %438 = icmp eq i64 %388, 0
  br i1 %438, label %456, label %439

439:                                              ; preds = %436
  %440 = getelementptr i64, i64* %358, i64 -1
  %441 = getelementptr i64, i64* %357, i64 -1
  %442 = getelementptr inbounds i64, i64* %440, i64 %437
  %443 = getelementptr inbounds i64, i64* %442, i64 -1
  %444 = bitcast i64* %443 to <2 x i64>*
  %445 = load <2 x i64>, <2 x i64>* %444, align 8, !alias.scope !63
  %446 = getelementptr inbounds i64, i64* %442, i64 -2
  %447 = getelementptr inbounds i64, i64* %446, i64 -1
  %448 = bitcast i64* %447 to <2 x i64>*
  %449 = load <2 x i64>, <2 x i64>* %448, align 8, !alias.scope !63
  %450 = getelementptr inbounds i64, i64* %441, i64 %437
  %451 = getelementptr inbounds i64, i64* %450, i64 -1
  %452 = bitcast i64* %451 to <2 x i64>*
  store <2 x i64> %445, <2 x i64>* %452, align 8, !alias.scope !66, !noalias !63
  %453 = getelementptr inbounds i64, i64* %450, i64 -2
  %454 = getelementptr inbounds i64, i64* %453, i64 -1
  %455 = bitcast i64* %454 to <2 x i64>*
  store <2 x i64> %449, <2 x i64>* %455, align 8, !alias.scope !66, !noalias !63
  br label %456

456:                                              ; preds = %436, %439
  %457 = icmp eq i64 %366, %380
  br i1 %457, label %887, label %458

458:                                              ; preds = %456, %368, %361
  %459 = phi i64* [ %358, %368 ], [ %358, %361 ], [ %382, %456 ]
  %460 = phi i64* [ %357, %368 ], [ %357, %361 ], [ %384, %456 ]
  %461 = getelementptr i64, i64* %459, i64 -1
  %462 = ptrtoint i64* %461 to i64
  %463 = sub i64 %462, %9
  %464 = lshr i64 %463, 3
  %465 = add nuw nsw i64 %464, 1
  %466 = and i64 %465, 7
  %467 = icmp eq i64 %466, 0
  br i1 %467, label %477, label %468

468:                                              ; preds = %458, %468
  %469 = phi i64* [ %472, %468 ], [ %459, %458 ]
  %470 = phi i64* [ %474, %468 ], [ %460, %458 ]
  %471 = phi i64 [ %475, %468 ], [ %466, %458 ]
  %472 = getelementptr inbounds i64, i64* %469, i64 -1
  %473 = load i64, i64* %472, align 8
  %474 = getelementptr inbounds i64, i64* %470, i64 -1
  store i64 %473, i64* %474, align 8
  %475 = add i64 %471, -1
  %476 = icmp eq i64 %475, 0
  br i1 %476, label %477, label %468, !llvm.loop !69

477:                                              ; preds = %468, %458
  %478 = phi i64* [ %459, %458 ], [ %472, %468 ]
  %479 = phi i64* [ %460, %458 ], [ %474, %468 ]
  %480 = icmp ult i64 %463, 56
  br i1 %480, label %887, label %481

481:                                              ; preds = %477, %481
  %482 = phi i64* [ %505, %481 ], [ %478, %477 ]
  %483 = phi i64* [ %507, %481 ], [ %479, %477 ]
  %484 = getelementptr inbounds i64, i64* %482, i64 -1
  %485 = load i64, i64* %484, align 8
  %486 = getelementptr inbounds i64, i64* %483, i64 -1
  store i64 %485, i64* %486, align 8
  %487 = getelementptr inbounds i64, i64* %482, i64 -2
  %488 = load i64, i64* %487, align 8
  %489 = getelementptr inbounds i64, i64* %483, i64 -2
  store i64 %488, i64* %489, align 8
  %490 = getelementptr inbounds i64, i64* %482, i64 -3
  %491 = load i64, i64* %490, align 8
  %492 = getelementptr inbounds i64, i64* %483, i64 -3
  store i64 %491, i64* %492, align 8
  %493 = getelementptr inbounds i64, i64* %482, i64 -4
  %494 = load i64, i64* %493, align 8
  %495 = getelementptr inbounds i64, i64* %483, i64 -4
  store i64 %494, i64* %495, align 8
  %496 = getelementptr inbounds i64, i64* %482, i64 -5
  %497 = load i64, i64* %496, align 8
  %498 = getelementptr inbounds i64, i64* %483, i64 -5
  store i64 %497, i64* %498, align 8
  %499 = getelementptr inbounds i64, i64* %482, i64 -6
  %500 = load i64, i64* %499, align 8
  %501 = getelementptr inbounds i64, i64* %483, i64 -6
  store i64 %500, i64* %501, align 8
  %502 = getelementptr inbounds i64, i64* %482, i64 -7
  %503 = load i64, i64* %502, align 8
  %504 = getelementptr inbounds i64, i64* %483, i64 -7
  store i64 %503, i64* %504, align 8
  %505 = getelementptr inbounds i64, i64* %482, i64 -8
  %506 = load i64, i64* %505, align 8
  %507 = getelementptr inbounds i64, i64* %483, i64 -8
  store i64 %506, i64* %507, align 8
  %508 = icmp eq i64* %505, %6
  br i1 %508, label %887, label %481, !llvm.loop !70

509:                                              ; preds = %356
  %510 = getelementptr inbounds i64, i64* %359, i64 -1
  %511 = getelementptr inbounds i64, i64* %358, i64 -1
  %512 = load i64, i64* %511, align 8
  %513 = load i64, i64* %510, align 8
  %514 = icmp slt i64 %512, %513
  %515 = getelementptr inbounds i64, i64* %357, i64 -1
  %516 = select i1 %514, i64 %513, i64 %512
  %517 = select i1 %514, i64* %510, i64* %359
  %518 = select i1 %514, i64* %358, i64* %511
  store i64 %516, i64* %515, align 8
  %519 = icmp eq i64* %518, %6
  br i1 %519, label %887, label %356

520:                                              ; preds = %196, %520
  %521 = phi i64* [ %546, %520 ], [ %198, %196 ]
  %522 = phi i64* [ %545, %520 ], [ %199, %196 ]
  %523 = load i64, i64* %522, align 8
  store i64 %523, i64* %521, align 8
  %524 = getelementptr inbounds i64, i64* %522, i64 1
  %525 = getelementptr inbounds i64, i64* %521, i64 1
  %526 = load i64, i64* %524, align 8
  store i64 %526, i64* %525, align 8
  %527 = getelementptr inbounds i64, i64* %522, i64 2
  %528 = getelementptr inbounds i64, i64* %521, i64 2
  %529 = load i64, i64* %527, align 8
  store i64 %529, i64* %528, align 8
  %530 = getelementptr inbounds i64, i64* %522, i64 3
  %531 = getelementptr inbounds i64, i64* %521, i64 3
  %532 = load i64, i64* %530, align 8
  store i64 %532, i64* %531, align 8
  %533 = getelementptr inbounds i64, i64* %522, i64 4
  %534 = getelementptr inbounds i64, i64* %521, i64 4
  %535 = load i64, i64* %533, align 8
  store i64 %535, i64* %534, align 8
  %536 = getelementptr inbounds i64, i64* %522, i64 5
  %537 = getelementptr inbounds i64, i64* %521, i64 5
  %538 = load i64, i64* %536, align 8
  store i64 %538, i64* %537, align 8
  %539 = getelementptr inbounds i64, i64* %522, i64 6
  %540 = getelementptr inbounds i64, i64* %521, i64 6
  %541 = load i64, i64* %539, align 8
  store i64 %541, i64* %540, align 8
  %542 = getelementptr inbounds i64, i64* %522, i64 7
  %543 = getelementptr inbounds i64, i64* %521, i64 7
  %544 = load i64, i64* %542, align 8
  store i64 %544, i64* %543, align 8
  %545 = getelementptr inbounds i64, i64* %522, i64 8
  %546 = getelementptr inbounds i64, i64* %521, i64 8
  %547 = icmp eq i64* %545, %15
  br i1 %547, label %353, label %520, !llvm.loop !71

548:                                              ; preds = %25, %554
  %549 = phi i64 [ %16, %25 ], [ %557, %554 ]
  %550 = phi i64 [ %19, %25 ], [ %556, %554 ]
  %551 = inttoptr i64 %550 to i64*
  %552 = load i64, i64* %551, align 8
  %553 = icmp slt i64 %27, %552
  br i1 %553, label %559, label %554

554:                                              ; preds = %548
  %555 = getelementptr inbounds i64, i64* %551, i64 1
  %556 = ptrtoint i64* %555 to i64
  %557 = add nsw i64 %549, -1
  %558 = icmp eq i64 %557, 0
  br i1 %558, label %887, label %548

559:                                              ; preds = %548
  %560 = inttoptr i64 %550 to i64*
  %561 = icmp slt i64 %549, %17
  br i1 %561, label %562, label %589

562:                                              ; preds = %559
  %563 = sdiv i64 %17, 2
  %564 = getelementptr inbounds i64, i64* %26, i64 %563
  %565 = ptrtoint i64* %564 to i64
  %566 = sub i64 %18, %550
  %567 = icmp eq i64 %566, 0
  br i1 %567, label %584, label %568

568:                                              ; preds = %562
  %569 = ashr exact i64 %566, 3
  %570 = load i64, i64* %564, align 8
  br label %571

571:                                              ; preds = %571, %568
  %572 = phi i64* [ %560, %568 ], [ %582, %571 ]
  %573 = phi i64 [ %569, %568 ], [ %581, %571 ]
  %574 = lshr i64 %573, 1
  %575 = getelementptr inbounds i64, i64* %572, i64 %574
  %576 = load i64, i64* %575, align 8
  %577 = icmp slt i64 %570, %576
  %578 = getelementptr inbounds i64, i64* %575, i64 1
  %579 = xor i64 %574, -1
  %580 = add i64 %573, %579
  %581 = select i1 %577, i64 %574, i64 %580
  %582 = select i1 %577, i64* %572, i64* %578
  %583 = icmp eq i64 %581, 0
  br i1 %583, label %584, label %571

584:                                              ; preds = %571, %562
  %585 = phi i64* [ %560, %562 ], [ %582, %571 ]
  %586 = ptrtoint i64* %585 to i64
  %587 = sub i64 %586, %550
  %588 = ashr exact i64 %587, 3
  br label %622

589:                                              ; preds = %559
  %590 = icmp eq i64 %549, 1
  br i1 %590, label %591, label %594

591:                                              ; preds = %589
  %592 = inttoptr i64 %18 to i64*
  %593 = inttoptr i64 %550 to i64*
  store i64 %27, i64* %593, align 8
  store i64 %552, i64* %592, align 8
  br label %887

594:                                              ; preds = %589
  %595 = sdiv i64 %549, 2
  %596 = getelementptr inbounds i64, i64* %560, i64 %595
  %597 = ptrtoint i64* %596 to i64
  %598 = ptrtoint i64* %15 to i64
  %599 = sub i64 %598, %18
  %600 = icmp eq i64 %599, 0
  br i1 %600, label %617, label %601

601:                                              ; preds = %594
  %602 = ashr exact i64 %599, 3
  %603 = load i64, i64* %596, align 8
  br label %604

604:                                              ; preds = %604, %601
  %605 = phi i64* [ %26, %601 ], [ %615, %604 ]
  %606 = phi i64 [ %602, %601 ], [ %614, %604 ]
  %607 = lshr i64 %606, 1
  %608 = getelementptr inbounds i64, i64* %605, i64 %607
  %609 = load i64, i64* %608, align 8
  %610 = icmp slt i64 %609, %603
  %611 = getelementptr inbounds i64, i64* %608, i64 1
  %612 = xor i64 %607, -1
  %613 = add i64 %606, %612
  %614 = select i1 %610, i64 %613, i64 %607
  %615 = select i1 %610, i64* %611, i64* %605
  %616 = icmp eq i64 %614, 0
  br i1 %616, label %617, label %604

617:                                              ; preds = %604, %594
  %618 = phi i64* [ %26, %594 ], [ %615, %604 ]
  %619 = ptrtoint i64* %618 to i64
  %620 = sub i64 %619, %18
  %621 = ashr exact i64 %620, 3
  br label %622

622:                                              ; preds = %617, %584
  %623 = phi i64 [ %586, %584 ], [ %597, %617 ]
  %624 = phi i64 [ %565, %584 ], [ %619, %617 ]
  %625 = phi i64 [ %563, %584 ], [ %621, %617 ]
  %626 = phi i64 [ %588, %584 ], [ %595, %617 ]
  %627 = sub nsw i64 %549, %626
  %628 = sub nsw i64 %17, %625
  %629 = inttoptr i64 %623 to i64*
  %630 = inttoptr i64 %624 to i64*
  %631 = inttoptr i64 %623 to i8*
  %632 = inttoptr i64 %18 to i8*
  %633 = icmp eq i64* %629, %26
  br i1 %633, label %872, label %634

634:                                              ; preds = %622
  %635 = icmp eq i64* %26, %630
  br i1 %635, label %872, label %636

636:                                              ; preds = %634
  %637 = getelementptr inbounds i64, i64* %629, i64 1
  %638 = icmp eq i64* %637, %26
  br i1 %638, label %639, label %647

639:                                              ; preds = %636
  %640 = load i64, i64* %629, align 8
  %641 = sub i64 %624, %18
  %642 = ashr exact i64 %641, 3
  %643 = icmp eq i64 %641, 0
  br i1 %643, label %645, label %644

644:                                              ; preds = %639
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %631, i8* align 8 %632, i64 %641, i1 false) #14
  br label %645

645:                                              ; preds = %644, %639
  %646 = getelementptr inbounds i64, i64* %629, i64 %642
  store i64 %640, i64* %646, align 8
  br label %872

647:                                              ; preds = %636
  %648 = getelementptr inbounds i64, i64* %26, i64 1
  %649 = icmp eq i64* %648, %630
  br i1 %649, label %650, label %663

650:                                              ; preds = %647
  %651 = getelementptr inbounds i64, i64* %630, i64 -1
  %652 = load i64, i64* %651, align 8
  %653 = ptrtoint i64* %651 to i64
  %654 = sub i64 %653, %623
  %655 = icmp eq i64 %654, 0
  br i1 %655, label %661, label %656

656:                                              ; preds = %650
  %657 = ashr exact i64 %654, 3
  %658 = sub nsw i64 0, %657
  %659 = getelementptr inbounds i64, i64* %630, i64 %658
  %660 = bitcast i64* %659 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %660, i8* align 8 %631, i64 %654, i1 false) #14
  br label %661

661:                                              ; preds = %656, %650
  %662 = phi i64* [ %659, %656 ], [ %630, %650 ]
  store i64 %652, i64* %629, align 8
  br label %872

663:                                              ; preds = %647
  %664 = sub i64 %18, %623
  %665 = ashr exact i64 %664, 3
  %666 = sub i64 %624, %18
  %667 = ashr exact i64 %666, 3
  %668 = icmp eq i64 %665, %667
  br i1 %668, label %669, label %814

669:                                              ; preds = %663
  %670 = load i64, i64* %629, align 8
  store i64 %27, i64* %629, align 8
  store i64 %670, i64* %26, align 8
  %671 = getelementptr inbounds i64, i64* %629, i64 1
  %672 = getelementptr inbounds i64, i64* %26, i64 1
  %673 = icmp eq i64* %671, %26
  br i1 %673, label %872, label %674

674:                                              ; preds = %669
  %675 = getelementptr i64, i64* %26, i64 -2
  %676 = bitcast i64* %675 to i8*
  %677 = sub i64 0, %623
  %678 = getelementptr i8, i8* %676, i64 %677
  %679 = ptrtoint i8* %678 to i64
  %680 = lshr i64 %679, 3
  %681 = add nuw nsw i64 %680, 1
  %682 = icmp ult i64 %681, 4
  br i1 %682, label %769, label %683

683:                                              ; preds = %674
  %684 = getelementptr i64, i64* %629, i64 2
  %685 = getelementptr i64, i64* %26, i64 -2
  %686 = bitcast i64* %685 to i8*
  %687 = sub i64 0, %623
  %688 = getelementptr i8, i8* %686, i64 %687
  %689 = ptrtoint i8* %688 to i64
  %690 = lshr i64 %689, 3
  %691 = getelementptr i64, i64* %684, i64 %690
  %692 = getelementptr i64, i64* %26, i64 2
  %693 = getelementptr i64, i64* %692, i64 %690
  %694 = icmp ult i64* %671, %693
  %695 = icmp ult i64* %672, %691
  %696 = and i1 %694, %695
  br i1 %696, label %769, label %697

697:                                              ; preds = %683
  %698 = and i64 %681, 4611686018427387900
  %699 = getelementptr i64, i64* %672, i64 %698
  %700 = getelementptr i64, i64* %671, i64 %698
  %701 = add nsw i64 %698, -4
  %702 = lshr exact i64 %701, 2
  %703 = add nuw nsw i64 %702, 1
  %704 = and i64 %703, 1
  %705 = icmp eq i64 %701, 0
  br i1 %705, label %747, label %706

706:                                              ; preds = %697
  %707 = sub nuw nsw i64 %703, %704
  br label %708

708:                                              ; preds = %708, %706
  %709 = phi i64 [ 0, %706 ], [ %744, %708 ]
  %710 = phi i64 [ %707, %706 ], [ %745, %708 ]
  %711 = getelementptr i64, i64* %672, i64 %709
  %712 = getelementptr i64, i64* %671, i64 %709
  %713 = bitcast i64* %711 to <2 x i64>*
  %714 = load <2 x i64>, <2 x i64>* %713, align 8, !alias.scope !72
  %715 = getelementptr i64, i64* %711, i64 2
  %716 = bitcast i64* %715 to <2 x i64>*
  %717 = load <2 x i64>, <2 x i64>* %716, align 8, !alias.scope !72
  %718 = bitcast i64* %712 to <2 x i64>*
  %719 = load <2 x i64>, <2 x i64>* %718, align 8, !alias.scope !75, !noalias !72
  %720 = getelementptr i64, i64* %712, i64 2
  %721 = bitcast i64* %720 to <2 x i64>*
  %722 = load <2 x i64>, <2 x i64>* %721, align 8, !alias.scope !75, !noalias !72
  %723 = bitcast i64* %712 to <2 x i64>*
  store <2 x i64> %714, <2 x i64>* %723, align 8, !alias.scope !75, !noalias !72
  %724 = bitcast i64* %720 to <2 x i64>*
  store <2 x i64> %717, <2 x i64>* %724, align 8, !alias.scope !75, !noalias !72
  %725 = bitcast i64* %711 to <2 x i64>*
  store <2 x i64> %719, <2 x i64>* %725, align 8, !alias.scope !72
  %726 = bitcast i64* %715 to <2 x i64>*
  store <2 x i64> %722, <2 x i64>* %726, align 8, !alias.scope !72
  %727 = or i64 %709, 4
  %728 = getelementptr i64, i64* %672, i64 %727
  %729 = getelementptr i64, i64* %671, i64 %727
  %730 = bitcast i64* %728 to <2 x i64>*
  %731 = load <2 x i64>, <2 x i64>* %730, align 8, !alias.scope !72
  %732 = getelementptr i64, i64* %728, i64 2
  %733 = bitcast i64* %732 to <2 x i64>*
  %734 = load <2 x i64>, <2 x i64>* %733, align 8, !alias.scope !72
  %735 = bitcast i64* %729 to <2 x i64>*
  %736 = load <2 x i64>, <2 x i64>* %735, align 8, !alias.scope !75, !noalias !72
  %737 = getelementptr i64, i64* %729, i64 2
  %738 = bitcast i64* %737 to <2 x i64>*
  %739 = load <2 x i64>, <2 x i64>* %738, align 8, !alias.scope !75, !noalias !72
  %740 = bitcast i64* %729 to <2 x i64>*
  store <2 x i64> %731, <2 x i64>* %740, align 8, !alias.scope !75, !noalias !72
  %741 = bitcast i64* %737 to <2 x i64>*
  store <2 x i64> %734, <2 x i64>* %741, align 8, !alias.scope !75, !noalias !72
  %742 = bitcast i64* %728 to <2 x i64>*
  store <2 x i64> %736, <2 x i64>* %742, align 8, !alias.scope !72
  %743 = bitcast i64* %732 to <2 x i64>*
  store <2 x i64> %739, <2 x i64>* %743, align 8, !alias.scope !72
  %744 = add i64 %709, 8
  %745 = add i64 %710, -2
  %746 = icmp eq i64 %745, 0
  br i1 %746, label %747, label %708, !llvm.loop !77

747:                                              ; preds = %708, %697
  %748 = phi i64 [ 0, %697 ], [ %744, %708 ]
  %749 = icmp eq i64 %704, 0
  br i1 %749, label %767, label %750

750:                                              ; preds = %747
  %751 = getelementptr i64, i64* %672, i64 %748
  %752 = getelementptr i64, i64* %671, i64 %748
  %753 = bitcast i64* %751 to <2 x i64>*
  %754 = load <2 x i64>, <2 x i64>* %753, align 8, !alias.scope !72
  %755 = getelementptr i64, i64* %751, i64 2
  %756 = bitcast i64* %755 to <2 x i64>*
  %757 = load <2 x i64>, <2 x i64>* %756, align 8, !alias.scope !72
  %758 = bitcast i64* %752 to <2 x i64>*
  %759 = load <2 x i64>, <2 x i64>* %758, align 8, !alias.scope !75, !noalias !72
  %760 = getelementptr i64, i64* %752, i64 2
  %761 = bitcast i64* %760 to <2 x i64>*
  %762 = load <2 x i64>, <2 x i64>* %761, align 8, !alias.scope !75, !noalias !72
  %763 = bitcast i64* %752 to <2 x i64>*
  store <2 x i64> %754, <2 x i64>* %763, align 8, !alias.scope !75, !noalias !72
  %764 = bitcast i64* %760 to <2 x i64>*
  store <2 x i64> %757, <2 x i64>* %764, align 8, !alias.scope !75, !noalias !72
  %765 = bitcast i64* %751 to <2 x i64>*
  store <2 x i64> %759, <2 x i64>* %765, align 8, !alias.scope !72
  %766 = bitcast i64* %755 to <2 x i64>*
  store <2 x i64> %762, <2 x i64>* %766, align 8, !alias.scope !72
  br label %767

767:                                              ; preds = %747, %750
  %768 = icmp eq i64 %681, %698
  br i1 %768, label %872, label %769

769:                                              ; preds = %767, %683, %674
  %770 = phi i64* [ %672, %683 ], [ %672, %674 ], [ %699, %767 ]
  %771 = phi i64* [ %671, %683 ], [ %671, %674 ], [ %700, %767 ]
  %772 = ptrtoint i64* %771 to i64
  %773 = getelementptr i64, i64* %26, i64 -1
  %774 = ptrtoint i64* %773 to i64
  %775 = sub i64 %774, %772
  %776 = lshr i64 %775, 3
  %777 = add nuw nsw i64 %776, 1
  %778 = and i64 %777, 3
  %779 = icmp eq i64 %778, 0
  br i1 %779, label %790, label %780

780:                                              ; preds = %769, %780
  %781 = phi i64* [ %787, %780 ], [ %770, %769 ]
  %782 = phi i64* [ %786, %780 ], [ %771, %769 ]
  %783 = phi i64 [ %788, %780 ], [ %778, %769 ]
  %784 = load i64, i64* %781, align 8
  %785 = load i64, i64* %782, align 8
  store i64 %784, i64* %782, align 8
  store i64 %785, i64* %781, align 8
  %786 = getelementptr inbounds i64, i64* %782, i64 1
  %787 = getelementptr inbounds i64, i64* %781, i64 1
  %788 = add i64 %783, -1
  %789 = icmp eq i64 %788, 0
  br i1 %789, label %790, label %780, !llvm.loop !78

790:                                              ; preds = %780, %769
  %791 = phi i64* [ %770, %769 ], [ %787, %780 ]
  %792 = phi i64* [ %771, %769 ], [ %786, %780 ]
  %793 = icmp ult i64 %775, 24
  br i1 %793, label %872, label %794

794:                                              ; preds = %790, %794
  %795 = phi i64* [ %812, %794 ], [ %791, %790 ]
  %796 = phi i64* [ %811, %794 ], [ %792, %790 ]
  %797 = load i64, i64* %795, align 8
  %798 = load i64, i64* %796, align 8
  store i64 %797, i64* %796, align 8
  store i64 %798, i64* %795, align 8
  %799 = getelementptr inbounds i64, i64* %796, i64 1
  %800 = getelementptr inbounds i64, i64* %795, i64 1
  %801 = load i64, i64* %800, align 8
  %802 = load i64, i64* %799, align 8
  store i64 %801, i64* %799, align 8
  store i64 %802, i64* %800, align 8
  %803 = getelementptr inbounds i64, i64* %796, i64 2
  %804 = getelementptr inbounds i64, i64* %795, i64 2
  %805 = load i64, i64* %804, align 8
  %806 = load i64, i64* %803, align 8
  store i64 %805, i64* %803, align 8
  store i64 %806, i64* %804, align 8
  %807 = getelementptr inbounds i64, i64* %796, i64 3
  %808 = getelementptr inbounds i64, i64* %795, i64 3
  %809 = load i64, i64* %808, align 8
  %810 = load i64, i64* %807, align 8
  store i64 %809, i64* %807, align 8
  store i64 %810, i64* %808, align 8
  %811 = getelementptr inbounds i64, i64* %796, i64 4
  %812 = getelementptr inbounds i64, i64* %795, i64 4
  %813 = icmp eq i64* %811, %26
  br i1 %813, label %872, label %794, !llvm.loop !79

814:                                              ; preds = %663, %814
  %815 = phi i64 [ %817, %814 ], [ %667, %663 ]
  %816 = phi i64 [ %815, %814 ], [ %665, %663 ]
  %817 = srem i64 %816, %815
  %818 = icmp eq i64 %817, 0
  br i1 %818, label %819, label %814

819:                                              ; preds = %814
  %820 = icmp eq i64 %815, 0
  br i1 %820, label %848, label %821

821:                                              ; preds = %819
  %822 = getelementptr inbounds i64, i64* %629, i64 %815
  %823 = shl nsw i64 %815, 3
  %824 = add i64 %823, -8
  %825 = and i64 %824, 8
  %826 = icmp eq i64 %825, 0
  br i1 %826, label %827, label %845

827:                                              ; preds = %821
  %828 = getelementptr inbounds i64, i64* %822, i64 -1
  %829 = load i64, i64* %828, align 8
  %830 = getelementptr inbounds i64, i64* %828, i64 %665
  br label %831

831:                                              ; preds = %831, %827
  %832 = phi i64* [ %828, %827 ], [ %833, %831 ]
  %833 = phi i64* [ %830, %827 ], [ %842, %831 ]
  %834 = ptrtoint i64* %833 to i64
  %835 = load i64, i64* %833, align 8
  store i64 %835, i64* %832, align 8
  %836 = sub i64 %624, %834
  %837 = ashr exact i64 %836, 3
  %838 = icmp slt i64 %665, %837
  %839 = getelementptr inbounds i64, i64* %833, i64 %665
  %840 = sub nsw i64 %665, %837
  %841 = getelementptr inbounds i64, i64* %629, i64 %840
  %842 = select i1 %838, i64* %839, i64* %841
  %843 = icmp eq i64* %842, %828
  br i1 %843, label %844, label %831

844:                                              ; preds = %831
  store i64 %829, i64* %833, align 8
  br label %845

845:                                              ; preds = %844, %821
  %846 = phi i64* [ %828, %844 ], [ %822, %821 ]
  %847 = icmp eq i64 %824, 0
  br i1 %847, label %848, label %850

848:                                              ; preds = %845, %901, %819
  %849 = getelementptr inbounds i64, i64* %629, i64 %667
  br label %872

850:                                              ; preds = %845, %901
  %851 = phi i64* [ %869, %901 ], [ %846, %845 ]
  %852 = getelementptr inbounds i64, i64* %851, i64 -1
  %853 = load i64, i64* %852, align 8
  %854 = getelementptr inbounds i64, i64* %852, i64 %665
  br label %855

855:                                              ; preds = %855, %850
  %856 = phi i64* [ %852, %850 ], [ %857, %855 ]
  %857 = phi i64* [ %854, %850 ], [ %866, %855 ]
  %858 = ptrtoint i64* %857 to i64
  %859 = load i64, i64* %857, align 8
  store i64 %859, i64* %856, align 8
  %860 = sub i64 %624, %858
  %861 = ashr exact i64 %860, 3
  %862 = icmp slt i64 %665, %861
  %863 = getelementptr inbounds i64, i64* %857, i64 %665
  %864 = sub nsw i64 %665, %861
  %865 = getelementptr inbounds i64, i64* %629, i64 %864
  %866 = select i1 %862, i64* %863, i64* %865
  %867 = icmp eq i64* %866, %852
  br i1 %867, label %868, label %855

868:                                              ; preds = %855
  store i64 %853, i64* %857, align 8
  %869 = getelementptr inbounds i64, i64* %851, i64 -2
  %870 = load i64, i64* %869, align 8
  %871 = getelementptr inbounds i64, i64* %869, i64 %665
  br label %888

872:                                              ; preds = %790, %794, %669, %767, %622, %634, %645, %661, %848
  %873 = phi i64* [ %629, %634 ], [ %630, %622 ], [ %646, %645 ], [ %662, %661 ], [ %849, %848 ], [ %26, %767 ], [ %26, %669 ], [ %26, %794 ], [ %26, %790 ]
  %874 = add nsw i64 %626, %625
  %875 = add nsw i64 %627, %628
  %876 = icmp slt i64 %874, %875
  br i1 %876, label %877, label %879

877:                                              ; preds = %872
  %878 = ptrtoint i64* %873 to i64
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i64* %560, i64* %629, i64* %873, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* dereferenceable(1) %3, i64 %626, i64 %625, i64* %6, i64 %7)
  br label %880

879:                                              ; preds = %872
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i64* %873, i64* %630, i64* %15, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* dereferenceable(1) %3, i64 %627, i64 %628, i64* %6, i64 %7)
  br label %880

880:                                              ; preds = %877, %879
  %881 = phi i64 [ %878, %877 ], [ %550, %879 ]
  %882 = phi i64 [ %624, %877 ], [ %623, %879 ]
  %883 = phi i64 [ %628, %877 ], [ %625, %879 ]
  %884 = phi i64 [ %627, %877 ], [ %626, %879 ]
  %885 = phi i64* [ %15, %877 ], [ %873, %879 ]
  %886 = icmp eq i64 %883, 0
  br i1 %886, label %887, label %14

887:                                              ; preds = %880, %23, %554, %320, %509, %477, %481, %456, %8, %591, %353, %309, %304, %296, %165, %34
  ret void

888:                                              ; preds = %888, %868
  %889 = phi i64* [ %869, %868 ], [ %890, %888 ]
  %890 = phi i64* [ %871, %868 ], [ %899, %888 ]
  %891 = ptrtoint i64* %890 to i64
  %892 = load i64, i64* %890, align 8
  store i64 %892, i64* %889, align 8
  %893 = sub i64 %624, %891
  %894 = ashr exact i64 %893, 3
  %895 = icmp slt i64 %665, %894
  %896 = getelementptr inbounds i64, i64* %890, i64 %665
  %897 = sub nsw i64 %665, %894
  %898 = getelementptr inbounds i64, i64* %629, i64 %897
  %899 = select i1 %895, i64* %896, i64* %898
  %900 = icmp eq i64* %899, %869
  br i1 %900, label %901, label %888

901:                                              ; preds = %888
  store i64 %870, i64* %890, align 8
  %902 = icmp eq i64* %869, %629
  br i1 %902, label %848, label %850
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #13

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind readonly }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!7 = distinct !{!7, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.unroll.disable"}
!10 = !{!11}
!11 = distinct !{!11, !12}
!12 = distinct !{!12, !"LVerDomain"}
!13 = !{!14}
!14 = distinct !{!14, !12}
!15 = distinct !{!15, !16}
!16 = !{!"llvm.loop.isvectorized", i32 1}
!17 = distinct !{!17, !9}
!18 = !{!19}
!19 = distinct !{!19, !20}
!20 = distinct !{!20, !"LVerDomain"}
!21 = !{!22}
!22 = distinct !{!22, !20}
!23 = distinct !{!23, !16}
!24 = distinct !{!24, !9}
!25 = distinct !{!25, !9}
!26 = distinct !{!26, !16}
!27 = distinct !{!27, !16}
!28 = !{!29}
!29 = distinct !{!29, !30}
!30 = distinct !{!30, !"LVerDomain"}
!31 = !{!32}
!32 = distinct !{!32, !30}
!33 = distinct !{!33, !16}
!34 = distinct !{!34, !9}
!35 = distinct !{!35, !9}
!36 = distinct !{!36, !16}
!37 = !{!38}
!38 = distinct !{!38, !39}
!39 = distinct !{!39, !"LVerDomain"}
!40 = !{!41}
!41 = distinct !{!41, !39}
!42 = distinct !{!42, !16}
!43 = distinct !{!43, !9}
!44 = distinct !{!44, !9}
!45 = distinct !{!45, !16}
!46 = distinct !{!46, !9}
!47 = !{!48}
!48 = distinct !{!48, !49}
!49 = distinct !{!49, !"LVerDomain"}
!50 = !{!51}
!51 = distinct !{!51, !49}
!52 = distinct !{!52, !16}
!53 = distinct !{!53, !9}
!54 = distinct !{!54, !9}
!55 = !{!56}
!56 = distinct !{!56, !57}
!57 = distinct !{!57, !"LVerDomain"}
!58 = !{!59}
!59 = distinct !{!59, !57}
!60 = distinct !{!60, !16}
!61 = distinct !{!61, !9}
!62 = distinct !{!62, !16}
!63 = !{!64}
!64 = distinct !{!64, !65}
!65 = distinct !{!65, !"LVerDomain"}
!66 = !{!67}
!67 = distinct !{!67, !65}
!68 = distinct !{!68, !16}
!69 = distinct !{!69, !9}
!70 = distinct !{!70, !16}
!71 = distinct !{!71, !16}
!72 = !{!73}
!73 = distinct !{!73, !74}
!74 = distinct !{!74, !"LVerDomain"}
!75 = !{!76}
!76 = distinct !{!76, !74}
!77 = distinct !{!77, !16}
!78 = distinct !{!78, !9}
!79 = distinct !{!79, !16}
