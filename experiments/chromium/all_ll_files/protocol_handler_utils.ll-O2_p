; ModuleID = '../../third_party/blink/common/custom_handlers/protocol_handler_utils.cc'
source_filename = "../../third_party/blink/common/custom_handlers/protocol_handler_utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZZN5blink26IsValidCustomHandlerSchemeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEbRbE10kWebPrefix = internal constant [5 x i8] c"web+\00", align 1
@_ZZN5blink26IsValidCustomHandlerSchemeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEbRbE10kExtPrefix = internal constant [5 x i8] c"ext+\00", align 1
@_ZZN5blink26IsValidCustomHandlerSchemeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEbRbE17kProtocolSafelist = internal constant [31 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i32 0, i32 0)], align 16
@.str = private unnamed_addr constant [8 x i8] c"bitcoin\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"cabal\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"dat\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"did\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"doi\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"dweb\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"ethereum\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"geo\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"hyper\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"im\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"ipfs\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"ipns\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"irc\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"ircs\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"magnet\00", align 1
@.str.15 = private unnamed_addr constant [7 x i8] c"mailto\00", align 1
@.str.16 = private unnamed_addr constant [7 x i8] c"matrix\00", align 1
@.str.17 = private unnamed_addr constant [4 x i8] c"mms\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c"news\00", align 1
@.str.19 = private unnamed_addr constant [5 x i8] c"nntp\00", align 1
@.str.20 = private unnamed_addr constant [12 x i8] c"openpgp4fpr\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"sip\00", align 1
@.str.22 = private unnamed_addr constant [4 x i8] c"sms\00", align 1
@.str.23 = private unnamed_addr constant [6 x i8] c"smsto\00", align 1
@.str.24 = private unnamed_addr constant [4 x i8] c"ssb\00", align 1
@.str.25 = private unnamed_addr constant [4 x i8] c"ssh\00", align 1
@.str.26 = private unnamed_addr constant [4 x i8] c"tel\00", align 1
@.str.27 = private unnamed_addr constant [4 x i8] c"urn\00", align 1
@.str.28 = private unnamed_addr constant [7 x i8] c"webcal\00", align 1
@.str.29 = private unnamed_addr constant [5 x i8] c"wtai\00", align 1
@.str.30 = private unnamed_addr constant [5 x i8] c"xmpp\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink26IsValidCustomHandlerSchemeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEbRb(i8*, i64, i1 zeroext, i8* nocapture dereferenceable(1)) local_unnamed_addr #0 {
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  store i8* %0, i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  store i64 %1, i64* %8, align 8
  store i8 0, i8* %3, align 1
  %9 = tail call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %0, i64 %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZZN5blink26IsValidCustomHandlerSchemeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEbRbE10kWebPrefix, i64 0, i64 0), i64 4, i32 1) #5
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  br i1 %2, label %11, label %29

11:                                               ; preds = %10
  %12 = tail call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %0, i64 %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZZN5blink26IsValidCustomHandlerSchemeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEbRbE10kExtPrefix, i64 0, i64 0), i64 4, i32 1) #5
  br i1 %12, label %13, label %29

13:                                               ; preds = %4, %11
  store i8 1, i8* %3, align 1
  %14 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %5, i64 4, i64 -1)
  %15 = extractvalue { i8*, i64 } %14, 0
  %16 = extractvalue { i8*, i64 } %14, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %59, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds i8, i8* %15, i64 %16
  br label %22

20:                                               ; preds = %22
  %21 = icmp eq i8* %28, %19
  br i1 %21, label %59, label %22

22:                                               ; preds = %18, %20
  %23 = phi i8* [ %28, %20 ], [ %15, %18 ]
  %24 = load i8, i8* %23, align 1
  %25 = and i8 %24, -33
  %26 = add i8 %25, -65
  %27 = icmp ult i8 %26, 26
  %28 = getelementptr inbounds i8, i8* %23, i64 1
  br i1 %27, label %20, label %59

29:                                               ; preds = %10, %11
  %30 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #5
  call void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %6, i8* %0, i64 %1) #5
  %31 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %34

34:                                               ; preds = %47, %29
  %35 = phi i8** [ getelementptr inbounds ([31 x i8*], [31 x i8*]* @_ZZN5blink26IsValidCustomHandlerSchemeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEbRbE17kProtocolSafelist, i64 0, i64 0), %29 ], [ %48, %47 ]
  %36 = load i8*, i8** %35, align 8
  %37 = call i64 @strlen(i8* %36) #5
  %38 = load i8, i8* %32, align 1
  %39 = icmp slt i8 %38, 0
  %40 = load i64, i64* %33, align 8
  %41 = zext i8 %38 to i64
  %42 = select i1 %39, i64 %40, i64 %41
  %43 = icmp eq i64 %37, %42
  br i1 %43, label %44, label %47

44:                                               ; preds = %34
  %45 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %6, i64 0, i64 -1, i8* %36, i64 %37) #5
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %44, %34
  %48 = getelementptr inbounds i8*, i8** %35, i64 1
  %49 = icmp eq i8** %48, getelementptr inbounds ([31 x i8*], [31 x i8*]* @_ZZN5blink26IsValidCustomHandlerSchemeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEbRbE17kProtocolSafelist, i64 1, i64 0)
  br i1 %49, label %50, label %34

50:                                               ; preds = %44, %47
  %51 = phi i8** [ getelementptr inbounds ([31 x i8*], [31 x i8*]* @_ZZN5blink26IsValidCustomHandlerSchemeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEbRbE17kProtocolSafelist, i64 1, i64 0), %47 ], [ %35, %44 ]
  %52 = icmp ne i8** %51, getelementptr inbounds ([31 x i8*], [31 x i8*]* @_ZZN5blink26IsValidCustomHandlerSchemeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEbRbE17kProtocolSafelist, i64 1, i64 0)
  %53 = load i8, i8* %32, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %57) #6
  br label %58

58:                                               ; preds = %50, %55
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #5
  br label %59

59:                                               ; preds = %22, %20, %13, %58
  %60 = phi i1 [ %52, %58 ], [ false, %13 ], [ false, %22 ], [ true, %20 ]
  ret i1 %60
}

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
declare { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"*, i64, i64) local_unnamed_addr #0 align 2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4base12ToLowerASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
