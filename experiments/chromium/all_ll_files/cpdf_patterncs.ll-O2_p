; ModuleID = '../../third_party/pdfium/core/fpdfapi/page/cpdf_patterncs.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/page/cpdf_patterncs.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_PatternCS = type { %class.CPDF_ColorSpace.base, %"class.fxcrt::RetainPtr.163" }
%class.CPDF_ColorSpace.base = type <{ %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr", %"class.fxcrt::RetainPtr.144", i32, i32, i32 }>
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.fxcrt::UnownedPtr" = type { %class.CPDF_Document* }
%"class.fxcrt::RetainPtr.144" = type { %"class.std::__1::unique_ptr.145" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %class.CPDF_Array* }
%class.CPDF_Array = type <{ %class.CPDF_Object, %"class.std::__1::vector.148", %"class.fxcrt::WeakPtr", i32, [4 x i8] }>
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.std::__1::vector.148" = type { %"class.std::__1::__vector_base.149" }
%"class.std::__1::__vector_base.149" = type { %"class.fxcrt::RetainPtr.150"*, %"class.fxcrt::RetainPtr.150"*, %"class.std::__1::__compressed_pair.156" }
%"class.fxcrt::RetainPtr.150" = type { %"class.std::__1::unique_ptr.151" }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %class.CPDF_Object* }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.fxcrt::RetainPtr.150"* }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.246" }
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.249", %"class.std::__1::__compressed_pair.257", %"class.std::__1::__compressed_pair.262", %"class.std::__1::__compressed_pair.264", [4 x i8] }>
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251", %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { float }
%"class.fxcrt::RetainPtr.163" = type { %"class.std::__1::unique_ptr.164" }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %class.CPDF_ColorSpace* }
%class.CPDF_ColorSpace = type <{ %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr", %"class.fxcrt::RetainPtr.144", i32, i32, i32, [4 x i8] }>
%class.CPDF_Document = type { %"class.CPDF_Parser::ParsedObjectsHolder", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.16", %"class.fxcrt::RetainPtr.33", %"class.fxcrt::RetainPtr.33", %"class.std::__1::vector", i8, i8, i32, i32, %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.112", %"class.std::__1::unique_ptr.118", %"class.std::__1::unique_ptr.124", %"class.std::__1::vector.130", %"class.CPDF_Document::StockFontClearer", %"class.std::__1::unique_ptr.138" }
%"class.CPDF_Parser::ParsedObjectsHolder" = type { %class.CPDF_IndirectObjectHolder }
%class.CPDF_IndirectObjectHolder = type { i32 (...)**, i32, %"class.std::__1::map", %"class.fxcrt::WeakPtr" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.4" }
%"class.std::__1::__tree.4" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %class.CPDF_Parser* }
%class.CPDF_Parser = type <{ %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.23", %"class.fxcrt::UnownedPtr.29", i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.30", i64, %"class.fxcrt::RetainPtr.62", %"class.fxcrt::ByteString", %"class.std::__1::unique_ptr.74", %"class.std::__1::map.80", %"class.std::__1::set.89", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %class.CPDF_SyntaxParser* }
%class.CPDF_SyntaxParser = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.CPDF_Parser::ParsedObjectsHolder"* }
%"class.fxcrt::UnownedPtr.29" = type { %"class.CPDF_Parser::ParsedObjectsHolder"* }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %class.CPDF_CrossRefTable* }
%class.CPDF_CrossRefTable = type { %"class.fxcrt::RetainPtr.33", %"class.std::__1::map.50" }
%"class.std::__1::map.50" = type { %"class.std::__1::__tree.51" }
%"class.std::__1::__tree.51" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.52", %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.fxcrt::RetainPtr.62" = type { %"class.std::__1::unique_ptr.63" }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %class.CPDF_SecurityHandler* }
%class.CPDF_SecurityHandler = type opaque
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.68" }
%"class.fxcrt::RetainPtr.68" = type { %"class.std::__1::unique_ptr.69" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %class.CPDF_LinearizedHeader* }
%class.CPDF_LinearizedHeader = type opaque
%"class.std::__1::map.80" = type { %"class.std::__1::__tree.81" }
%"class.std::__1::__tree.81" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.82", %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.89" = type { %"class.std::__1::__tree.90" }
%"class.std::__1::__tree.90" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.91", %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.fxcrt::RetainPtr.33" = type { %"class.std::__1::unique_ptr.34" }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map.37" }
%"class.std::__1::map.37" = type { %"class.std::__1::__tree.38" }
%"class.std::__1::__tree.38" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.39", %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.100" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.CPDF_Document::RenderDataIface"* }
%"class.CPDF_Document::RenderDataIface" = type { i32 (...)**, %"class.fxcrt::UnownedPtr.108" }
%"class.fxcrt::UnownedPtr.108" = type { %class.CPDF_Document* }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.CPDF_Document::PageDataIface"* }
%"class.CPDF_Document::PageDataIface" = type { i32 (...)**, %"class.fxcrt::UnownedPtr.108" }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %class.JBig2_DocumentContext* }
%class.JBig2_DocumentContext = type opaque
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.CPDF_Document::LinkListIface"* }
%"class.CPDF_Document::LinkListIface" = type { i32 (...)** }
%"class.std::__1::vector.130" = type { %"class.std::__1::__vector_base.131" }
%"class.std::__1::__vector_base.131" = type { i32*, i32*, %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { i32* }
%"class.CPDF_Document::StockFontClearer" = type { %"class.fxcrt::UnownedPtr.137" }
%"class.fxcrt::UnownedPtr.137" = type { %"class.CPDF_Document::PageDataIface"* }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.CPDF_Document::Extension"* }
%"class.CPDF_Document::Extension" = type { i32 (...)** }
%"class.std::__1::set.169" = type opaque
%class.CPDF_DocPageData = type { %"class.CPDF_Document::PageDataIface", %"class.CPDF_Font::FormFactoryIface", i8, %"class.std::__1::map.170", %"class.std::__1::map.179", %"class.std::__1::map.190", %"class.std::__1::map.201", %"class.std::__1::map.210", %"class.std::__1::map.219", %"class.std::__1::map.228" }
%"class.CPDF_Font::FormFactoryIface" = type { i32 (...)** }
%"class.std::__1::map.170" = type { %"class.std::__1::__tree.171" }
%"class.std::__1::__tree.171" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.172", %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.179" = type { %"class.std::__1::__tree.180" }
%"class.std::__1::__tree.180" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.181", %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.190" = type { %"class.std::__1::__tree.191" }
%"class.std::__1::__tree.191" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.192", %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.201" = type { %"class.std::__1::__tree.202" }
%"class.std::__1::__tree.202" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.203", %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.210" = type { %"class.std::__1::__tree.211" }
%"class.std::__1::__tree.211" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.212", %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.219" = type { %"class.std::__1::__tree.220" }
%"class.std::__1::__tree.220" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.221", %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.228" = type { %"class.std::__1::__tree.229" }
%"class.std::__1::__tree.229" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.230", %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.239", i64 }
%"class.fxcrt::UnownedPtr.239" = type { float* }
%class.PatternValue = type { %"class.fxcrt::RetainPtr.240", %"struct.std::__1::array" }
%"class.fxcrt::RetainPtr.240" = type { %"class.std::__1::unique_ptr.241" }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %class.CPDF_Pattern* }
%class.CPDF_Pattern = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr.108", %"class.fxcrt::RetainPtr.150", %class.CFX_Matrix, %class.CFX_Matrix }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%"struct.std::__1::array" = type { [16 x float] }

@_ZTV14CPDF_PatternCS = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CPDF_PatternCS*)* @_ZN14CPDF_PatternCSD2Ev to i8*), i8* bitcast (void (%class.CPDF_PatternCS*)* @_ZN14CPDF_PatternCSD0Ev to i8*), i8* bitcast (i1 (%class.CPDF_PatternCS*, %"class.pdfium::span"*, float*, float*, float*)* @_ZNK14CPDF_PatternCS6GetRGBEN6pdfium4spanIKfEEPfS4_S4_ to i8*), i8* bitcast (void (%class.CPDF_ColorSpace*, i32, float*, float*, float*)* @_ZNK15CPDF_ColorSpace15GetDefaultValueEiPfS0_S0_ to i8*), i8* bitcast (void (%class.CPDF_ColorSpace*, i8*, i8*, i32, i32, i32, i1)* @_ZNK15CPDF_ColorSpace18TranslateImageLineEPhPKhiiib to i8*), i8* bitcast (void (%class.CPDF_ColorSpace*, i1)* @_ZN15CPDF_ColorSpace19EnableStdConversionEb to i8*), i8* bitcast (i1 (%class.CPDF_ColorSpace*)* @_ZNK15CPDF_ColorSpace8IsNormalEv to i8*), i8* bitcast (%class.CPDF_PatternCS* (%class.CPDF_PatternCS*)* @_ZN14CPDF_PatternCS11AsPatternCSEv to i8*), i8* bitcast (%class.CPDF_PatternCS* (%class.CPDF_PatternCS*)* @_ZNK14CPDF_PatternCS11AsPatternCSEv to i8*), i8* bitcast (i1 (%class.CPDF_PatternCS*, %class.PatternValue*, float*, float*, float*)* @_ZNK14CPDF_PatternCS13GetPatternRGBERK12PatternValuePfS3_S3_ to i8*), i8* bitcast (i32 (%class.CPDF_PatternCS*, %class.CPDF_Document*, %class.CPDF_Array*, %"class.std::__1::set.169"*)* @_ZN14CPDF_PatternCS6v_LoadEP13CPDF_DocumentPK10CPDF_ArrayPNSt3__13setIPK11CPDF_ObjectNS5_4lessIS9_EENS5_9allocatorIS9_EEEE to i8*)] }, align 8

@_ZN14CPDF_PatternCSC1EP13CPDF_Document = hidden unnamed_addr alias void (%class.CPDF_PatternCS*, %class.CPDF_Document*), void (%class.CPDF_PatternCS*, %class.CPDF_Document*)* @_ZN14CPDF_PatternCSC2EP13CPDF_Document
@_ZN14CPDF_PatternCSD1Ev = hidden unnamed_addr alias void (%class.CPDF_PatternCS*), void (%class.CPDF_PatternCS*)* @_ZN14CPDF_PatternCSD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPDF_PatternCSC2EP13CPDF_Document(%class.CPDF_PatternCS*, %class.CPDF_Document*) unnamed_addr #0 align 2 {
  %3 = bitcast %class.CPDF_PatternCS* %0 to %class.CPDF_ColorSpace*
  tail call void @_ZN15CPDF_ColorSpaceC2EP13CPDF_DocumentNS_6FamilyE(%class.CPDF_ColorSpace* %3, %class.CPDF_Document* %1, i32 11) #6
  %4 = getelementptr inbounds %class.CPDF_PatternCS, %class.CPDF_PatternCS* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV14CPDF_PatternCS, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.CPDF_PatternCS, %class.CPDF_PatternCS* %0, i64 0, i32 1
  %6 = bitcast %"class.fxcrt::RetainPtr.163"* %5 to i64*
  store i64 0, i64* %6, align 8
  ret void
}

declare void @_ZN15CPDF_ColorSpaceC2EP13CPDF_DocumentNS_6FamilyE(%class.CPDF_ColorSpace*, %class.CPDF_Document*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPDF_PatternCSD2Ev(%class.CPDF_PatternCS*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_PatternCS, %class.CPDF_PatternCS* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV14CPDF_PatternCS, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDF_PatternCS, %class.CPDF_PatternCS* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %3, align 8
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %3, align 8
  %5 = icmp eq %class.CPDF_ColorSpace* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %4, i64 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = add nsw i64 %8, -1
  store i64 %9, i64* %7, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %17

11:                                               ; preds = %6
  %12 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %4, i64 0, i32 0
  %13 = bitcast %class.CPDF_ColorSpace* %4 to void (%"class.fxcrt::Retainable"*)***
  %14 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %14, i64 1
  %16 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %15, align 8
  tail call void %16(%"class.fxcrt::Retainable"* nonnull %12) #6
  br label %17

17:                                               ; preds = %1, %6, %11
  %18 = bitcast %class.CPDF_PatternCS* %0 to %class.CPDF_ColorSpace*
  tail call void @_ZN15CPDF_ColorSpaceD2Ev(%class.CPDF_ColorSpace* %18) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN15CPDF_ColorSpaceD2Ev(%class.CPDF_ColorSpace*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPDF_PatternCSD0Ev(%class.CPDF_PatternCS*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_PatternCS, %class.CPDF_PatternCS* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTV14CPDF_PatternCS, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDF_PatternCS, %class.CPDF_PatternCS* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %3, align 8
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %3, align 8
  %5 = icmp eq %class.CPDF_ColorSpace* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %4, i64 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = add nsw i64 %8, -1
  store i64 %9, i64* %7, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %17

11:                                               ; preds = %6
  %12 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %4, i64 0, i32 0
  %13 = bitcast %class.CPDF_ColorSpace* %4 to void (%"class.fxcrt::Retainable"*)***
  %14 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %14, i64 1
  %16 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %15, align 8
  tail call void %16(%"class.fxcrt::Retainable"* nonnull %12) #6
  br label %17

17:                                               ; preds = %1, %6, %11
  %18 = bitcast %class.CPDF_PatternCS* %0 to %class.CPDF_ColorSpace*
  tail call void @_ZN15CPDF_ColorSpaceD2Ev(%class.CPDF_ColorSpace* %18) #6
  %19 = bitcast %class.CPDF_PatternCS* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CPDF_PatternCS22InitializeStockPatternEv(%class.CPDF_PatternCS*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.CPDF_PatternCS* %0 to %class.CPDF_ColorSpace*
  tail call void @_ZN15CPDF_ColorSpace23SetComponentsForStockCSEj(%class.CPDF_ColorSpace* %2, i32 1) #6
  ret void
}

declare void @_ZN15CPDF_ColorSpace23SetComponentsForStockCSEj(%class.CPDF_ColorSpace*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN14CPDF_PatternCS6v_LoadEP13CPDF_DocumentPK10CPDF_ArrayPNSt3__13setIPK11CPDF_ObjectNS5_4lessIS9_EENS5_9allocatorIS9_EEEE(%class.CPDF_PatternCS* nocapture, %class.CPDF_Document*, %class.CPDF_Array*, %"class.std::__1::set.169"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.fxcrt::RetainPtr.163", align 8
  %6 = tail call %class.CPDF_Object* @_ZNK10CPDF_Array17GetDirectObjectAtEm(%class.CPDF_Array* %2, i64 1) #6
  %7 = getelementptr inbounds %class.CPDF_PatternCS, %class.CPDF_PatternCS* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %8 = load %class.CPDF_Array*, %class.CPDF_Array** %7, align 8
  %9 = getelementptr inbounds %class.CPDF_Array, %class.CPDF_Array* %8, i64 0, i32 0
  %10 = icmp eq %class.CPDF_Object* %9, %6
  br i1 %10, label %61, label %11

11:                                               ; preds = %4
  %12 = tail call %class.CPDF_DocPageData* @_ZN16CPDF_DocPageData12FromDocumentEPK13CPDF_Document(%class.CPDF_Document* %1) #6
  %13 = bitcast %"class.fxcrt::RetainPtr.163"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #6
  call void @_ZN16CPDF_DocPageData20GetColorSpaceGuardedEPK11CPDF_ObjectPK15CPDF_DictionaryPNSt3__13setIS2_NS6_4lessIS2_EENS6_9allocatorIS2_EEEE(%"class.fxcrt::RetainPtr.163"* nonnull sret %5, %class.CPDF_DocPageData* %12, %class.CPDF_Object* %6, %class.CPDF_Dictionary* null, %"class.std::__1::set.169"* %3) #6
  %14 = getelementptr inbounds %class.CPDF_PatternCS, %class.CPDF_PatternCS* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.fxcrt::RetainPtr.163", %"class.fxcrt::RetainPtr.163"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.fxcrt::RetainPtr.163"* %5 to i64*
  %17 = load i64, i64* %16, align 8
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %15, align 8
  %18 = getelementptr inbounds %"class.fxcrt::RetainPtr.163", %"class.fxcrt::RetainPtr.163"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %18, align 8
  %20 = bitcast %"class.fxcrt::RetainPtr.163"* %14 to i64*
  store i64 %17, i64* %20, align 8
  %21 = icmp eq %class.CPDF_ColorSpace* %19, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %11
  %23 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %19, i64 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = add nsw i64 %24, -1
  store i64 %25, i64* %23, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %28, label %27

27:                                               ; preds = %11, %22
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %15, align 8
  br label %47

28:                                               ; preds = %22
  %29 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %19, i64 0, i32 0
  %30 = bitcast %class.CPDF_ColorSpace* %19 to void (%"class.fxcrt::Retainable"*)***
  %31 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %31, i64 1
  %33 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %32, align 8
  call void %33(%"class.fxcrt::Retainable"* nonnull %29) #6
  %34 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %15, align 8
  %35 = bitcast %class.CPDF_ColorSpace* %34 to void (%"class.fxcrt::Retainable"*)***
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %15, align 8
  %36 = icmp eq %class.CPDF_ColorSpace* %34, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %28
  %38 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %34, i64 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = add nsw i64 %39, -1
  store i64 %40, i64* %38, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %47

42:                                               ; preds = %37
  %43 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %34, i64 0, i32 0
  %44 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %35, align 8
  %45 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %44, i64 1
  %46 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %45, align 8
  call void %46(%"class.fxcrt::Retainable"* nonnull %43) #6
  br label %47

47:                                               ; preds = %27, %28, %37, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #6
  %48 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %18, align 8
  %49 = icmp eq %class.CPDF_ColorSpace* %48, null
  br i1 %49, label %61, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %48, i64 0, i32 4
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, 11
  br i1 %53, label %61, label %54

54:                                               ; preds = %50
  %55 = call i32 @_ZNK15CPDF_ColorSpace15CountComponentsEv(%class.CPDF_ColorSpace* nonnull %48) #6
  %56 = icmp ugt i32 %55, 16
  br i1 %56, label %61, label %57

57:                                               ; preds = %54
  %58 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %18, align 8
  %59 = call i32 @_ZNK15CPDF_ColorSpace15CountComponentsEv(%class.CPDF_ColorSpace* %58) #6
  %60 = add i32 %59, 1
  br label %61

61:                                               ; preds = %47, %57, %50, %54, %4
  %62 = phi i32 [ 0, %4 ], [ %60, %57 ], [ 1, %47 ], [ 0, %50 ], [ 0, %54 ]
  ret i32 %62
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare %class.CPDF_Object* @_ZNK10CPDF_Array17GetDirectObjectAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #1

declare %class.CPDF_DocPageData* @_ZN16CPDF_DocPageData12FromDocumentEPK13CPDF_Document(%class.CPDF_Document*) local_unnamed_addr #1

declare void @_ZN16CPDF_DocPageData20GetColorSpaceGuardedEPK11CPDF_ObjectPK15CPDF_DictionaryPNSt3__13setIS2_NS6_4lessIS2_EENS6_9allocatorIS2_EEEE(%"class.fxcrt::RetainPtr.163"* sret, %class.CPDF_DocPageData*, %class.CPDF_Object*, %class.CPDF_Dictionary*, %"class.std::__1::set.169"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare i32 @_ZNK15CPDF_ColorSpace15CountComponentsEv(%class.CPDF_ColorSpace*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK14CPDF_PatternCS6GetRGBEN6pdfium4spanIKfEEPfS4_S4_(%class.CPDF_PatternCS* nocapture readnone, %"class.pdfium::span"* nocapture readnone, float* nocapture readnone, float* nocapture readnone, float* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %class.CPDF_PatternCS* @_ZN14CPDF_PatternCS11AsPatternCSEv(%class.CPDF_PatternCS* readnone returned) unnamed_addr #5 align 2 {
  ret %class.CPDF_PatternCS* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %class.CPDF_PatternCS* @_ZNK14CPDF_PatternCS11AsPatternCSEv(%class.CPDF_PatternCS* readnone returned) unnamed_addr #5 align 2 {
  ret %class.CPDF_PatternCS* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK14CPDF_PatternCS13GetPatternRGBERK12PatternValuePfS3_S3_(%class.CPDF_PatternCS* nocapture readonly, %class.PatternValue* dereferenceable(72), float*, float*, float*) unnamed_addr #0 align 2 {
  %6 = alloca %"class.pdfium::span", align 8
  %7 = getelementptr inbounds %class.CPDF_PatternCS, %class.CPDF_PatternCS* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %7, align 8
  %9 = icmp eq %class.CPDF_ColorSpace* %8, null
  br i1 %9, label %19, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.PatternValue, %class.PatternValue* %1, i64 0, i32 1, i32 0, i64 0
  %12 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %6, i64 0, i32 0, i32 0
  store float* %11, float** %12, align 8, !alias.scope !2
  %13 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %6, i64 0, i32 1
  store i64 16, i64* %13, align 8, !alias.scope !2
  %14 = bitcast %class.CPDF_ColorSpace* %8 to i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)***
  %15 = load i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)**, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)*, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)** %15, i64 2
  %17 = load i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)*, i1 (%class.CPDF_ColorSpace*, %"class.pdfium::span"*, float*, float*, float*)** %16, align 8
  %18 = call zeroext i1 %17(%class.CPDF_ColorSpace* nonnull %8, %"class.pdfium::span"* nonnull %6, float* %2, float* %3, float* %4) #6
  br i1 %18, label %20, label %19

19:                                               ; preds = %5, %10
  store float 7.500000e-01, float* %2, align 4
  store float 7.500000e-01, float* %3, align 4
  store float 7.500000e-01, float* %4, align 4
  br label %20

20:                                               ; preds = %10, %19
  %21 = phi i1 [ false, %19 ], [ true, %10 ]
  ret i1 %21
}

declare void @_ZNK15CPDF_ColorSpace15GetDefaultValueEiPfS0_S0_(%class.CPDF_ColorSpace*, i32, float*, float*, float*) unnamed_addr #1

declare void @_ZNK15CPDF_ColorSpace18TranslateImageLineEPhPKhiiib(%class.CPDF_ColorSpace*, i8*, i8*, i32, i32, i32, i1 zeroext) unnamed_addr #1

declare void @_ZN15CPDF_ColorSpace19EnableStdConversionEb(%class.CPDF_ColorSpace*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZNK15CPDF_ColorSpace8IsNormalEv(%class.CPDF_ColorSpace*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK12PatternValue8GetCompsEv: argument 0"}
!4 = distinct !{!4, !"_ZNK12PatternValue8GetCompsEv"}
