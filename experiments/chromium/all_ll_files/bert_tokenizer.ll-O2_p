; ModuleID = '../../third_party/tflite-support/src/tensorflow_lite_support/cc/text/tokenizers/bert_tokenizer.cc'
source_filename = "../../third_party/tflite-support/src/tensorflow_lite_support/cc/text/tokenizers/bert_tokenizer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece" = type { %"class.tensorflow::text::WordpieceVocab", %"class.std::__1::vector", %"class.absl::flat_hash_map" }
%"class.tensorflow::text::WordpieceVocab" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type { %"class.absl::string_view", [8 x i8] }
%"class.absl::string_view" = type { i8*, i64 }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.tensorflow::text::LookupStatus" = type <{ %"class.std::__1::basic_string", i8, [7 x i8] }>
%"struct.tflite::support::text::tokenizer::TokenizerResult" = type { %"class.std::__1::vector" }
%"class.tflite::support::text::tokenizer::BertTokenizer" = type { %"class.tflite::support::text::tokenizer::Tokenizer", %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece", %"struct.tflite::support::text::tokenizer::BertTokenizerOptions", %"class.re2::RE2", %"class.re2::RE2" }
%"class.tflite::support::text::tokenizer::Tokenizer" = type { i32 (...)** }
%"struct.tflite::support::text::tokenizer::BertTokenizerOptions" = type { i32, i32, %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.re2::RE2" = type { %"class.std::__1::basic_string", %"class.re2::RE2::Options", %"class.re2::Regexp"*, %"class.std::__1::basic_string"*, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.re2::Regexp"*, %"class.re2::Prog"*, i32, i8, %"class.re2::Prog"*, %"class.std::__1::map"*, %"class.std::__1::map.13"*, %"struct.std::__1::once_flag", %"struct.std::__1::once_flag", %"struct.std::__1::once_flag" }
%"class.re2::RE2::Options" = type { i32, i8, i8, i8, i64, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.re2::Regexp" = type opaque
%"class.re2::Prog" = type opaque
%"class.std::__1::map" = type opaque
%"class.std::__1::map.13" = type opaque
%"struct.std::__1::once_flag" = type { i64 }
%"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult" = type { %"struct.tflite::support::text::tokenizer::TokenizerResult", %"class.std::__1::vector.14", %"class.std::__1::vector.14", %"class.std::__1::vector.14" }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { i32*, i32*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { i32* }
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { %"class.absl::string_view"*, %"class.absl::string_view"*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.absl::string_view"* }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { i64*, i64*, %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { i64* }

$_ZNK4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINS_11string_viewEiEENS0_10StringHashENS0_12StringHashEq2EqENSt3__19allocatorINS8_4pairIKS3_iEEEEE4findIS3_EENSE_14const_iteratorERKT_ = comdat any

$_ZN6tflite7support4text9tokenizer26FlatHashMapBackedWordpieceD2Ev = comdat any

$_ZN6tflite7support4text9tokenizer26FlatHashMapBackedWordpieceD0Ev = comdat any

$_ZNK6tflite7support4text9tokenizer13BertTokenizer8LookupIdEN4absl11string_viewEPi = comdat any

$_ZNK6tflite7support4text9tokenizer13BertTokenizer10LookupWordEiPN4absl11string_viewE = comdat any

$_ZN6tflite7support4text9tokenizer13BertTokenizerD2Ev = comdat any

$_ZN6tflite7support4text9tokenizer13BertTokenizerD0Ev = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINS_11string_viewEiEENS0_10StringHashENS0_12StringHashEq2EqENSt3__19allocatorINS8_4pairIKS3_iEEEEE22find_or_prepare_insertINS8_12basic_stringIcNS8_11char_traitsIcEENS9_IcEEEEEENSA_ImbEERKT_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINS_11string_viewEiEENS0_10StringHashENS0_12StringHashEq2EqENSt3__19allocatorINS8_4pairIKS3_iEEEEE14prepare_insertEm = comdat any

$_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINS_11string_viewEiEENS0_10StringHashENS0_12StringHashEq2EqENSt3__19allocatorINS8_4pairIKS3_iEEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINS_11string_viewEiEENS0_10StringHashENS0_12StringHashEq2EqENSt3__19allocatorINS8_4pairIKS3_iEEEEE27drop_deletes_without_resizeEv = comdat any

$_ZTSN10tensorflow4text14WordpieceVocabE = comdat any

$_ZTIN10tensorflow4text14WordpieceVocabE = comdat any

$_ZTSN6tflite7support4text9tokenizer9TokenizerE = comdat any

$_ZTIN6tflite7support4text9tokenizer9TokenizerE = comdat any

$_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = comdat any

@_ZTVN6tflite7support4text9tokenizer26FlatHashMapBackedWordpieceE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6tflite7support4text9tokenizer26FlatHashMapBackedWordpieceE to i8*), i8* bitcast (void (%"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece"*)* @_ZN6tflite7support4text9tokenizer26FlatHashMapBackedWordpieceD2Ev to i8*), i8* bitcast (void (%"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece"*)* @_ZN6tflite7support4text9tokenizer26FlatHashMapBackedWordpieceD0Ev to i8*), i8* bitcast (void (%"struct.tensorflow::text::LookupStatus"*, %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece"*, i8*, i64, i8*)* @_ZNK6tflite7support4text9tokenizer26FlatHashMapBackedWordpiece8ContainsEN4absl11string_viewEPb to i8*)] }, align 8
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global i8*
@_ZTSN6tflite7support4text9tokenizer26FlatHashMapBackedWordpieceE = hidden constant [61 x i8] c"N6tflite7support4text9tokenizer26FlatHashMapBackedWordpieceE\00", align 1
@_ZTVN10__cxxabiv117__class_type_infoE = external global i8*
@_ZTSN10tensorflow4text14WordpieceVocabE = linkonce_odr hidden constant [36 x i8] c"N10tensorflow4text14WordpieceVocabE\00", comdat, align 1
@_ZTIN10tensorflow4text14WordpieceVocabE = linkonce_odr hidden constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @_ZTSN10tensorflow4text14WordpieceVocabE, i32 0, i32 0) }, comdat, align 8
@_ZTIN6tflite7support4text9tokenizer26FlatHashMapBackedWordpieceE = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @_ZTSN6tflite7support4text9tokenizer26FlatHashMapBackedWordpieceE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN10tensorflow4text14WordpieceVocabE to i8*) }, align 8
@_ZTVN6tflite7support4text9tokenizer13BertTokenizerE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN6tflite7support4text9tokenizer13BertTokenizerE to i8*), i8* bitcast (void (%"struct.tflite::support::text::tokenizer::TokenizerResult"*, %"class.tflite::support::text::tokenizer::BertTokenizer"*, %"class.std::__1::basic_string"*)* @_ZN6tflite7support4text9tokenizer13BertTokenizer8TokenizeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE to i8*), i8* bitcast (i1 (%"class.tflite::support::text::tokenizer::BertTokenizer"*, i8*, i64, i32*)* @_ZNK6tflite7support4text9tokenizer13BertTokenizer8LookupIdEN4absl11string_viewEPi to i8*), i8* bitcast (i1 (%"class.tflite::support::text::tokenizer::BertTokenizer"*, i32, %"class.absl::string_view"*)* @_ZNK6tflite7support4text9tokenizer13BertTokenizer10LookupWordEiPN4absl11string_viewE to i8*), i8* bitcast (void (%"class.tflite::support::text::tokenizer::BertTokenizer"*)* @_ZN6tflite7support4text9tokenizer13BertTokenizerD2Ev to i8*), i8* bitcast (void (%"class.tflite::support::text::tokenizer::BertTokenizer"*)* @_ZN6tflite7support4text9tokenizer13BertTokenizerD0Ev to i8*)] }, align 8
@_ZTSN6tflite7support4text9tokenizer13BertTokenizerE = hidden constant [48 x i8] c"N6tflite7support4text9tokenizer13BertTokenizerE\00", align 1
@_ZTSN6tflite7support4text9tokenizer9TokenizerE = linkonce_odr hidden constant [43 x i8] c"N6tflite7support4text9tokenizer9TokenizerE\00", comdat, align 1
@_ZTIN6tflite7support4text9tokenizer9TokenizerE = linkonce_odr hidden constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @_ZTSN6tflite7support4text9tokenizer9TokenizerE, i32 0, i32 0) }, comdat, align 8
@_ZTIN6tflite7support4text9tokenizer13BertTokenizerE = hidden constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @_ZTSN6tflite7support4text9tokenizer13BertTokenizerE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN6tflite7support4text9tokenizer9TokenizerE to i8*) }, align 8
@_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = linkonce_odr hidden constant [16 x i8] c"\FF\80\80\80\80\80\80\80\80\80\80\80\80\80\80\80", comdat, align 16
@_ZN4absl13hash_internal15MixingHashState5kSeedE = external local_unnamed_addr constant i8*, align 8

@_ZN6tflite7support4text9tokenizer26FlatHashMapBackedWordpieceC1ERKNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEE = hidden unnamed_addr alias void (%"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece"*, %"class.std::__1::vector"*), void (%"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece"*, %"class.std::__1::vector"*)* @_ZN6tflite7support4text9tokenizer26FlatHashMapBackedWordpieceC2ERKNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite7support4text9tokenizer26FlatHashMapBackedWordpieceC2ERKNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEE(%"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece"*, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece", %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6tflite7support4text9tokenizer26FlatHashMapBackedWordpieceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece", %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::vector"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #12
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = sdiv exact i64 %11, 24
  %13 = icmp eq i64 %11, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = bitcast %"class.std::__1::vector"* %4 to i64*
  br label %64

16:                                               ; preds = %2
  %17 = icmp ugt i64 %12, 768614336404564650
  br i1 %17, label %18, label %20

18:                                               ; preds = %16
  %19 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %19) #15
  unreachable

20:                                               ; preds = %16
  %21 = tail call i8* @_Znwm(i64 %11) #16
  %22 = bitcast i8* %21 to %"class.std::__1::basic_string"*
  %23 = getelementptr inbounds %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece", %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece"* %0, i64 0, i32 1, i32 0, i32 1
  %24 = bitcast %"class.std::__1::basic_string"** %23 to i8**
  store i8* %21, i8** %24, align 8
  %25 = bitcast %"class.std::__1::vector"* %4 to i8**
  store i8* %21, i8** %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 %12
  %27 = getelementptr inbounds %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece", %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %26, %"class.std::__1::basic_string"** %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %29 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %28, align 8
  %30 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %31 = bitcast %"class.std::__1::basic_string"** %23 to i64*
  %32 = ptrtoint i8* %21 to i64
  %33 = icmp eq %"class.std::__1::basic_string"* %29, %30
  br i1 %33, label %34, label %36

34:                                               ; preds = %20
  %35 = bitcast %"class.std::__1::vector"* %4 to i64*
  br label %59

36:                                               ; preds = %20, %51
  %37 = phi %"class.std::__1::basic_string"* [ %53, %51 ], [ %22, %20 ]
  %38 = phi %"class.std::__1::basic_string"* [ %52, %51 ], [ %29, %20 ]
  %39 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %36
  %44 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  %45 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 24, i1 false) #12
  br label %51

46:                                               ; preds = %36
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %37, i8* %48, i64 %50) #12
  br label %51

51:                                               ; preds = %46, %43
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 1
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 1
  %54 = icmp eq %"class.std::__1::basic_string"* %52, %30
  br i1 %54, label %55, label %36

55:                                               ; preds = %51
  %56 = ptrtoint %"class.std::__1::basic_string"* %53 to i64
  %57 = bitcast %"class.std::__1::vector"* %4 to i64*
  %58 = load i64, i64* %57, align 8
  br label %59

59:                                               ; preds = %34, %55
  %60 = phi i64* [ %35, %34 ], [ %57, %55 ]
  %61 = phi i64 [ %32, %34 ], [ %58, %55 ]
  %62 = phi i64 [ %32, %34 ], [ %56, %55 ]
  store i64 %62, i64* %31, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string"*
  br label %64

64:                                               ; preds = %14, %59
  %65 = phi i64* [ %15, %14 ], [ %60, %59 ]
  %66 = phi %"class.std::__1::basic_string"* [ null, %14 ], [ %63, %59 ]
  %67 = phi i64 [ 0, %14 ], [ %61, %59 ]
  %68 = phi i64 [ 0, %14 ], [ %62, %59 ]
  %69 = getelementptr inbounds %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece", %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece"* %0, i64 0, i32 2
  %70 = getelementptr inbounds %"class.absl::flat_hash_map", %"class.absl::flat_hash_map"* %69, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %70, align 8
  %71 = getelementptr inbounds %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece", %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %72 = bitcast %"union.absl::container_internal::map_slot_type"** %71 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 32, i1 false) #12
  %73 = getelementptr inbounds %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece", %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece"* %0, i64 0, i32 1, i32 0, i32 1
  %74 = bitcast %"class.std::__1::basic_string"** %73 to i64*
  %75 = icmp eq i64 %68, %67
  br i1 %75, label %78, label %76

76:                                               ; preds = %64
  %77 = getelementptr inbounds %"class.absl::flat_hash_map", %"class.absl::flat_hash_map"* %69, i64 0, i32 0, i32 0
  br label %79

78:                                               ; preds = %119, %64
  ret void

79:                                               ; preds = %76, %119
  %80 = phi %"class.std::__1::basic_string"* [ %66, %76 ], [ %129, %119 ]
  %81 = phi i64 [ 0, %76 ], [ %123, %119 ]
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %80, i64 %81
  %83 = tail call { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINS_11string_viewEiEENS0_10StringHashENS0_12StringHashEq2EqENSt3__19allocatorINS8_4pairIKS3_iEEEEE22find_or_prepare_insertINS8_12basic_stringIcNS8_11char_traitsIcEENS9_IcEEEEEENSA_ImbEERKT_(%"class.absl::container_internal::raw_hash_set"* %77, %"class.std::__1::basic_string"* dereferenceable(24) %82) #12, !noalias !2
  %84 = extractvalue { i64, i8 } %83, 0
  %85 = extractvalue { i64, i8 } %83, 1
  %86 = and i8 %85, 1
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %111, label %88

88:                                               ; preds = %79
  %89 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %71, align 8, !noalias !2
  %90 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %89, i64 %84
  %91 = bitcast %"class.std::__1::basic_string"* %82 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %91, i64 0, i32 1, i32 0
  %93 = load i8, i8* %92, align 1, !noalias !2
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %98, label %95

95:                                               ; preds = %88
  %96 = zext i8 %93 to i64
  %97 = bitcast %"union.absl::container_internal::map_slot_type"* %90 to %"class.std::__1::basic_string"**
  store %"class.std::__1::basic_string"* %82, %"class.std::__1::basic_string"** %97, align 8, !noalias !2
  br label %106

98:                                               ; preds = %88
  %99 = bitcast %"class.std::__1::basic_string"* %82 to i64*
  %100 = load i64, i64* %99, align 8, !noalias !2
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %80, i64 %81, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %102 = load i64, i64* %101, align 8, !noalias !2
  %103 = bitcast %"union.absl::container_internal::map_slot_type"* %90 to i64*
  store i64 %100, i64* %103, align 8, !noalias !2
  %104 = icmp sgt i64 %102, -1
  br i1 %104, label %106, label %105, !prof !7

105:                                              ; preds = %98
  tail call void @llvm.trap() #12, !noalias !2
  unreachable

106:                                              ; preds = %98, %95
  %107 = phi i64 [ %96, %95 ], [ %102, %98 ]
  %108 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %89, i64 %84, i32 0, i32 1
  store i64 %107, i64* %108, align 8, !noalias !2
  %109 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %89, i64 %84, i32 1
  %110 = bitcast [8 x i8]* %109 to i32*
  store i32 0, i32* %110, align 8, !noalias !2
  br label %111

111:                                              ; preds = %106, %79
  %112 = load i8*, i8** %70, align 8, !noalias !2
  %113 = getelementptr inbounds i8, i8* %112, i64 %84
  %114 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %71, align 8, !noalias !2
  %115 = icmp ne i8* %113, null
  tail call void @llvm.assume(i1 %115) #12, !noalias !2
  %116 = load i8, i8* %113, align 1
  %117 = icmp sgt i8 %116, -1
  br i1 %117, label %119, label %118, !prof !7

118:                                              ; preds = %111
  tail call void @llvm.trap() #12
  unreachable

119:                                              ; preds = %111
  %120 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %114, i64 %84, i32 1
  %121 = bitcast [8 x i8]* %120 to i32*
  %122 = trunc i64 %81 to i32
  store i32 %122, i32* %121, align 4
  %123 = add nuw i64 %81, 1
  %124 = load i64, i64* %74, align 8
  %125 = load i64, i64* %65, align 8
  %126 = sub i64 %124, %125
  %127 = sdiv exact i64 %126, 24
  %128 = icmp ugt i64 %127, %123
  %129 = inttoptr i64 %125 to %"class.std::__1::basic_string"*
  br i1 %128, label %79, label %78
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6tflite7support4text9tokenizer26FlatHashMapBackedWordpiece8ContainsEN4absl11string_viewEPb(%"struct.tensorflow::text::LookupStatus"* noalias nocapture sret, %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece"*, i8*, i64, i8* nocapture) unnamed_addr #0 align 2 {
  %6 = alloca %"class.absl::string_view", align 8
  %7 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %6, i64 0, i32 0
  store i8* %2, i8** %7, align 8
  %8 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %6, i64 0, i32 1
  store i64 %3, i64* %8, align 8
  %9 = getelementptr inbounds %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece", %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece"* %1, i64 0, i32 2, i32 0, i32 0
  %10 = call { i8*, %"union.absl::container_internal::map_slot_type"* } @_ZNK4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINS_11string_viewEiEENS0_10StringHashENS0_12StringHashEq2EqENSt3__19allocatorINS8_4pairIKS3_iEEEEE4findIS3_EENSE_14const_iteratorERKT_(%"class.absl::container_internal::raw_hash_set"* %9, %"class.absl::string_view"* nonnull dereferenceable(16) %6) #12
  %11 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type"* } %10, 0
  %12 = icmp eq i8* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %5
  %14 = load i8, i8* %11, align 1
  %15 = icmp sgt i8 %14, -1
  br i1 %15, label %17, label %16, !prof !7

16:                                               ; preds = %13
  call void @llvm.trap() #12
  unreachable

17:                                               ; preds = %5, %13
  %18 = icmp ne i8* %11, null
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %4, align 1
  %20 = bitcast %"struct.tensorflow::text::LookupStatus"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  store i8 0, i8* %21, align 1
  %22 = bitcast %"struct.tensorflow::text::LookupStatus"* %0 to i8*
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %"struct.tensorflow::text::LookupStatus", %"struct.tensorflow::text::LookupStatus"* %0, i64 0, i32 1
  store i8 1, i8* %23, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6tflite7support4text9tokenizer26FlatHashMapBackedWordpiece8LookupIdEN4absl11string_viewEPi(%"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece"*, i8*, i64, i32* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.absl::string_view", align 8
  %6 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %5, i64 0, i32 0
  store i8* %1, i8** %6, align 8
  %7 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %5, i64 0, i32 1
  store i64 %2, i64* %7, align 8
  %8 = getelementptr inbounds %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece", %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece"* %0, i64 0, i32 2, i32 0, i32 0
  %9 = call { i8*, %"union.absl::container_internal::map_slot_type"* } @_ZNK4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINS_11string_viewEiEENS0_10StringHashENS0_12StringHashEq2EqENSt3__19allocatorINS8_4pairIKS3_iEEEEE4findIS3_EENSE_14const_iteratorERKT_(%"class.absl::container_internal::raw_hash_set"* %8, %"class.absl::string_view"* nonnull dereferenceable(16) %5)
  %10 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type"* } %9, 0
  %11 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type"* } %9, 1
  %12 = icmp eq i8* %10, null
  br i1 %12, label %21, label %13

13:                                               ; preds = %4
  %14 = load i8, i8* %10, align 1
  %15 = icmp sgt i8 %14, -1
  br i1 %15, label %17, label %16, !prof !7

16:                                               ; preds = %13
  call void @llvm.trap() #12
  unreachable

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %11, i64 0, i32 1
  %19 = bitcast [8 x i8]* %18 to i32*
  %20 = load i32, i32* %19, align 8
  store i32 %20, i32* %3, align 4
  br label %21

21:                                               ; preds = %4, %17
  %22 = phi i1 [ true, %17 ], [ false, %4 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, %"union.absl::container_internal::map_slot_type"* } @_ZNK4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINS_11string_viewEiEENS0_10StringHashENS0_12StringHashEq2EqENSt3__19allocatorINS8_4pairIKS3_iEEEEE4findIS3_EENSE_14const_iteratorERKT_(%"class.absl::container_internal::raw_hash_set"*, %"class.absl::string_view"* dereferenceable(16)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %1, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %8 = tail call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %7, i8* %4, i64 %6) #12
  %9 = add i64 %8, %6
  %10 = zext i64 %9 to i128
  %11 = mul nuw i128 %10, 11376068507788127593
  %12 = lshr i128 %11, 64
  %13 = xor i128 %12, %11
  %14 = trunc i128 %13 to i64
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %18 = load i64, i64* %17, align 8
  %19 = lshr i64 %14, 7
  %20 = ptrtoint i8* %16 to i64
  %21 = lshr i64 %20, 12
  %22 = xor i64 %19, %21
  %23 = trunc i128 %13 to i8
  %24 = and i8 %23, 127
  %25 = insertelement <16 x i8> undef, i8 %24, i32 0
  %26 = shufflevector <16 x i8> %25, <16 x i8> undef, <16 x i32> zeroinitializer
  %27 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  %28 = load i8*, i8** %3, align 8
  %29 = load i64, i64* %5, align 8
  %30 = icmp eq i64 %29, 0
  br label %31

31:                                               ; preds = %71, %2
  %32 = phi i64 [ %22, %2 ], [ %73, %71 ]
  %33 = phi i64 [ 0, %2 ], [ %72, %71 ]
  %34 = and i64 %32, %18
  %35 = getelementptr inbounds i8, i8* %16, i64 %34
  %36 = bitcast i8* %35 to <16 x i8>*
  %37 = load <16 x i8>, <16 x i8>* %36, align 1
  %38 = icmp eq <16 x i8> %26, %37
  %39 = bitcast <16 x i1> %38 to i16
  %40 = icmp eq i16 %39, 0
  br i1 %40, label %67, label %41

41:                                               ; preds = %31
  %42 = zext i16 %39 to i32
  %43 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %27, align 8
  br label %44

44:                                               ; preds = %60, %41
  %45 = phi i32 [ %42, %41 ], [ %62, %60 ]
  %46 = tail call i32 @llvm.cttz.i32(i32 %45, i1 false) #12, !range !8
  %47 = zext i32 %46 to i64
  %48 = add i64 %34, %47
  %49 = and i64 %48, %18
  %50 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %43, i64 %49
  %51 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %50, i64 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %43, i64 %49, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = icmp eq i64 %54, %29
  br i1 %55, label %56, label %60, !prof !9

56:                                               ; preds = %44
  br i1 %30, label %64, label %57

57:                                               ; preds = %56
  %58 = tail call i32 @bcmp(i8* %52, i8* %28, i64 %29) #12
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %64, label %60, !prof !7

60:                                               ; preds = %57, %44
  %61 = add i32 %45, -1
  %62 = and i32 %61, %45
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %67, label %44

64:                                               ; preds = %57, %56
  %65 = getelementptr inbounds i8, i8* %16, i64 %49
  %66 = icmp ne i8* %65, null
  tail call void @llvm.assume(i1 %66) #12
  br label %74

67:                                               ; preds = %60, %31
  %68 = icmp eq <16 x i8> %37, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %69 = bitcast <16 x i1> %68 to i16
  %70 = icmp eq i16 %69, 0
  br i1 %70, label %71, label %74, !prof !10

71:                                               ; preds = %67
  %72 = add i64 %33, 16
  %73 = add i64 %72, %34
  br label %31

74:                                               ; preds = %67, %64
  %75 = phi %"union.absl::container_internal::map_slot_type"* [ %50, %64 ], [ undef, %67 ]
  %76 = phi i8* [ %65, %64 ], [ null, %67 ]
  %77 = insertvalue { i8*, %"union.absl::container_internal::map_slot_type"* } undef, i8* %76, 0
  %78 = insertvalue { i8*, %"union.absl::container_internal::map_slot_type"* } %77, %"union.absl::container_internal::map_slot_type"* %75, 1
  ret { i8*, %"union.absl::container_internal::map_slot_type"* } %78
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6tflite7support4text9tokenizer26FlatHashMapBackedWordpiece10LookupWordEiPN4absl11string_viewE(%"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece"* nocapture readonly, i32, %"class.absl::string_view"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = sext i32 %1 to i64
  %5 = getelementptr inbounds %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece", %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece", %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece"* %0, i64 0, i32 1, i32 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = sdiv exact i64 %11, 24
  %13 = icmp ule i64 %12, %4
  %14 = icmp slt i32 %1, 0
  %15 = or i1 %14, %13
  %16 = inttoptr i64 %10 to %"class.std::__1::basic_string"*
  br i1 %15, label %38, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 %4
  %19 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %17
  %24 = zext i8 %21 to i64
  %25 = ptrtoint %"class.std::__1::basic_string"* %18 to i64
  br label %33

26:                                               ; preds = %17
  %27 = bitcast %"class.std::__1::basic_string"* %18 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 %4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = icmp sgt i64 %30, -1
  br i1 %31, label %33, label %32, !prof !7

32:                                               ; preds = %26
  tail call void @llvm.trap() #12
  unreachable

33:                                               ; preds = %23, %26
  %34 = phi i64 [ %28, %26 ], [ %25, %23 ]
  %35 = phi i64 [ %30, %26 ], [ %24, %23 ]
  %36 = bitcast %"class.absl::string_view"* %2 to i64*
  store i64 %34, i64* %36, align 8
  %37 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %2, i64 0, i32 1
  store i64 %35, i64* %37, align 8
  br label %38

38:                                               ; preds = %3, %33
  %39 = phi i1 [ true, %33 ], [ false, %3 ]
  ret i1 %39
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite7support4text9tokenizer13BertTokenizer8TokenizeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.tflite::support::text::tokenizer::TokenizerResult"* noalias nocapture sret, %"class.tflite::support::text::tokenizer::BertTokenizer"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = alloca %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult", align 16
  %5 = bitcast %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %5) #12
  call void @_ZN6tflite7support4text9tokenizer13BertTokenizer17TokenizeWordpieceERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult"* nonnull sret %4, %"class.tflite::support::text::tokenizer::BertTokenizer"* %1, %"class.std::__1::basic_string"* dereferenceable(24) %2)
  %6 = getelementptr inbounds %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult", %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult"* %4 to <2 x i64>*
  %8 = load <2 x i64>, <2 x i64>* %7, align 16
  %9 = bitcast %"struct.tflite::support::text::tokenizer::TokenizerResult"* %0 to <2 x i64>*
  store <2 x i64> %8, <2 x i64>* %9, align 8
  %10 = getelementptr inbounds %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult", %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult"* %4, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %11 = bitcast %"class.std::__1::basic_string"** %10 to i64*
  %12 = load i64, i64* %11, align 16
  %13 = getelementptr inbounds %"struct.tflite::support::text::tokenizer::TokenizerResult", %"struct.tflite::support::text::tokenizer::TokenizerResult"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.std::__1::basic_string"** %13 to i64*
  store i64 %12, i64* %14, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 0, i64 24, i1 false) #12
  %15 = getelementptr inbounds %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult", %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult"* %4, i64 0, i32 3, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = icmp eq i32* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %3
  %19 = ptrtoint i32* %16 to i64
  %20 = getelementptr inbounds %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult", %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult"* %4, i64 0, i32 3, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast i32* %16 to i8*
  call void @_ZdlPv(i8* %22) #16
  br label %23

23:                                               ; preds = %18, %3
  %24 = getelementptr inbounds %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult", %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult"* %4, i64 0, i32 2, i32 0, i32 0
  %25 = load i32*, i32** %24, align 16
  %26 = icmp eq i32* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = ptrtoint i32* %25 to i64
  %29 = getelementptr inbounds %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult", %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult"* %4, i64 0, i32 2, i32 0, i32 1
  %30 = bitcast i32** %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = bitcast i32* %25 to i8*
  call void @_ZdlPv(i8* %31) #16
  br label %32

32:                                               ; preds = %27, %23
  %33 = getelementptr inbounds %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult", %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult"* %4, i64 0, i32 1, i32 0, i32 0
  %34 = load i32*, i32** %33, align 8
  %35 = icmp eq i32* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %32
  %37 = ptrtoint i32* %34 to i64
  %38 = getelementptr inbounds %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult", %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult"* %4, i64 0, i32 1, i32 0, i32 1
  %39 = bitcast i32** %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = bitcast i32* %34 to i8*
  call void @_ZdlPv(i8* %40) #16
  br label %41

41:                                               ; preds = %36, %32
  %42 = getelementptr inbounds %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult", %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %42, align 16
  %44 = icmp eq %"class.std::__1::basic_string"* %43, null
  br i1 %44, label %66, label %45

45:                                               ; preds = %41
  %46 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  %47 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %48 = icmp eq %"class.std::__1::basic_string"* %47, %43
  br i1 %48, label %64, label %49

49:                                               ; preds = %45, %59
  %50 = phi %"class.std::__1::basic_string"* [ %51, %59 ], [ %47, %45 ]
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %50, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  call void @_ZdlPv(i8* %58) #16
  br label %59

59:                                               ; preds = %56, %49
  %60 = icmp eq %"class.std::__1::basic_string"* %51, %43
  br i1 %60, label %61, label %49

61:                                               ; preds = %59
  %62 = bitcast %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult"* %4 to i8**
  %63 = load i8*, i8** %62, align 16
  br label %64

64:                                               ; preds = %61, %45
  %65 = phi i8* [ %63, %61 ], [ %46, %45 ]
  store %"class.std::__1::basic_string"* %43, %"class.std::__1::basic_string"** %6, align 8
  call void @_ZdlPv(i8* %65) #16
  br label %66

66:                                               ; preds = %41, %64
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite7support4text9tokenizer13BertTokenizer17TokenizeWordpieceERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult"* noalias sret, %"class.tflite::support::text::tokenizer::BertTokenizer"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.21", align 8
  %5 = alloca %"class.std::__1::vector.28", align 8
  %6 = alloca %"class.std::__1::vector.28", align 8
  %7 = alloca i32, align 4
  %8 = alloca %"struct.tensorflow::text::LookupStatus", align 8
  %9 = bitcast %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 96, i1 false) #12
  %10 = getelementptr inbounds %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult", %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult"* %0, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult", %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult", %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult"* %0, i64 0, i32 2
  %13 = bitcast %"class.std::__1::vector.21"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %4, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #12
  %16 = bitcast %"class.std::__1::vector.28"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %5, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %5, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #12
  %19 = bitcast %"class.std::__1::vector.28"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %6, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %6, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #12
  %22 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %3
  %27 = zext i8 %24 to i64
  %28 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  br label %36

29:                                               ; preds = %3
  %30 = bitcast %"class.std::__1::basic_string"* %2 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = icmp sgt i64 %33, -1
  br i1 %34, label %36, label %35, !prof !7

35:                                               ; preds = %29
  tail call void @llvm.trap() #12
  unreachable

36:                                               ; preds = %26, %29
  %37 = phi i64 [ %31, %29 ], [ %28, %26 ]
  %38 = phi i64 [ %33, %29 ], [ %27, %26 ]
  %39 = getelementptr inbounds %"class.tflite::support::text::tokenizer::BertTokenizer", %"class.tflite::support::text::tokenizer::BertTokenizer"* %1, i64 0, i32 3
  %40 = getelementptr inbounds %"class.tflite::support::text::tokenizer::BertTokenizer", %"class.tflite::support::text::tokenizer::BertTokenizer"* %1, i64 0, i32 4
  %41 = inttoptr i64 %37 to i8*
  call void @_ZN10tensorflow4text10RegexSplitEN4absl11string_viewERKN3re23RE2EbS6_PNSt3__16vectorIS2_NS7_9allocatorIS2_EEEEPNS8_IxNS9_IxEEEESF_(i8* %41, i64 %38, %"class.re2::RE2"* dereferenceable(200) %39, i1 zeroext true, %"class.re2::RE2"* dereferenceable(200) %40, %"class.std::__1::vector.21"* nonnull %4, %"class.std::__1::vector.28"* nonnull %5, %"class.std::__1::vector.28"* nonnull %6) #12
  %42 = bitcast %"class.absl::string_view"** %15 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.std::__1::vector.21"* %4 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %43, %45
  br i1 %46, label %188, label %47

47:                                               ; preds = %36
  %48 = bitcast i32* %7 to i8*
  %49 = bitcast %"struct.tensorflow::text::LookupStatus"* %8 to i8*
  %50 = getelementptr inbounds %"struct.tensorflow::text::LookupStatus", %"struct.tensorflow::text::LookupStatus"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"struct.tensorflow::text::LookupStatus", %"struct.tensorflow::text::LookupStatus"* %8, i64 0, i32 1
  %52 = getelementptr inbounds %"class.tflite::support::text::tokenizer::BertTokenizer", %"class.tflite::support::text::tokenizer::BertTokenizer"* %1, i64 0, i32 2, i32 0
  %53 = getelementptr inbounds %"class.tflite::support::text::tokenizer::BertTokenizer", %"class.tflite::support::text::tokenizer::BertTokenizer"* %1, i64 0, i32 2, i32 1
  %54 = getelementptr inbounds %"class.tflite::support::text::tokenizer::BertTokenizer", %"class.tflite::support::text::tokenizer::BertTokenizer"* %1, i64 0, i32 2, i32 2
  %55 = getelementptr inbounds %"class.tflite::support::text::tokenizer::BertTokenizer", %"class.tflite::support::text::tokenizer::BertTokenizer"* %1, i64 0, i32 2, i32 3
  %56 = getelementptr inbounds %"class.tflite::support::text::tokenizer::BertTokenizer", %"class.tflite::support::text::tokenizer::BertTokenizer"* %1, i64 0, i32 2, i32 4
  %57 = getelementptr inbounds %"class.tflite::support::text::tokenizer::BertTokenizer", %"class.tflite::support::text::tokenizer::BertTokenizer"* %1, i64 0, i32 2, i32 5
  %58 = getelementptr inbounds %"class.tflite::support::text::tokenizer::BertTokenizer", %"class.tflite::support::text::tokenizer::BertTokenizer"* %1, i64 0, i32 1, i32 0
  %59 = getelementptr inbounds %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult", %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult"* %0, i64 0, i32 3
  %60 = getelementptr inbounds %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult", %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult"* %0, i64 0, i32 3, i32 0, i32 1
  %61 = getelementptr inbounds %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult", %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %62 = bitcast i32** %60 to i64*
  %63 = bitcast %"class.std::__1::vector.14"* %59 to i64*
  %64 = bitcast i32** %61 to i64*
  %65 = getelementptr inbounds %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult", %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult"* %0, i64 0, i32 1, i32 0, i32 1
  %66 = bitcast i32** %65 to i64*
  %67 = bitcast %"class.std::__1::vector.14"* %11 to i64*
  %68 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %11, i64 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %12, i64 0, i32 0, i32 0
  %70 = bitcast %"struct.tensorflow::text::LookupStatus"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = bitcast %"struct.tensorflow::text::LookupStatus"* %8 to i8*
  br label %79

73:                                               ; preds = %162
  %74 = load i64, i64* %42, align 8
  %75 = load i64, i64* %44, align 8
  %76 = sub i64 %74, %75
  %77 = ashr exact i64 %76, 4
  %78 = icmp ugt i64 %77, %164
  br i1 %78, label %79, label %188

79:                                               ; preds = %47, %73
  %80 = phi i64 [ %45, %47 ], [ %75, %73 ]
  %81 = phi i64 [ 0, %47 ], [ %164, %73 ]
  %82 = phi i1 [ false, %47 ], [ %157, %73 ]
  %83 = inttoptr i64 %80 to %"class.absl::string_view"*
  %84 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %83, i64 %81
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #12
  store i32 0, i32* %7, align 4
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %49) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 -86, i64 32, i1 false)
  %85 = load i32, i32* %52, align 8
  %86 = load i32, i32* %53, align 4
  %87 = load i8, i8* %55, align 8, !range !11
  %88 = icmp ne i8 %87, 0
  %89 = load i8, i8* %57, align 8, !range !11
  %90 = icmp ne i8 %89, 0
  call void @_ZN10tensorflow4text17WordpieceTokenizeERKN4absl11string_viewEiiRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEbSD_bPKNS0_14WordpieceVocabEPNS5_6vectorISB_NS9_ISB_EEEEPNSH_IiNS9_IiEEEESN_Pi(%"struct.tensorflow::text::LookupStatus"* nonnull sret %8, %"class.absl::string_view"* dereferenceable(16) %84, i32 %85, i32 %86, %"class.std::__1::basic_string"* dereferenceable(24) %54, i1 zeroext %88, %"class.std::__1::basic_string"* dereferenceable(24) %56, i1 zeroext %90, %"class.tensorflow::text::WordpieceVocab"* %58, %"class.std::__1::vector"* %10, %"class.std::__1::vector.14"* %11, %"class.std::__1::vector.14"* %12, i32* nonnull %7) #12
  %91 = load i32*, i32** %60, align 8
  %92 = load i32*, i32** %61, align 8
  %93 = icmp ult i32* %91, %92
  %94 = ptrtoint i32* %92 to i64
  br i1 %93, label %95, label %99

95:                                               ; preds = %79
  %96 = load i32, i32* %7, align 4
  store i32 %96, i32* %91, align 4
  %97 = getelementptr inbounds i32, i32* %91, i64 1
  %98 = ptrtoint i32* %97 to i64
  store i64 %98, i64* %62, align 8
  br label %143

99:                                               ; preds = %79
  %100 = ptrtoint i32* %91 to i64
  %101 = load i64, i64* %63, align 8
  %102 = sub i64 %100, %101
  %103 = ashr exact i64 %102, 2
  %104 = add nsw i64 %103, 1
  %105 = icmp ugt i64 %104, 4611686018427387903
  br i1 %105, label %106, label %108

106:                                              ; preds = %99
  %107 = bitcast %"class.std::__1::vector.14"* %59 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %107) #15
  unreachable

108:                                              ; preds = %99
  %109 = sub i64 %94, %101
  %110 = ashr exact i64 %109, 2
  %111 = icmp ult i64 %110, 2305843009213693951
  br i1 %111, label %112, label %120

112:                                              ; preds = %108
  %113 = ashr exact i64 %109, 1
  %114 = icmp ult i64 %113, %104
  %115 = select i1 %114, i64 %104, i64 %113
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %125, label %117

117:                                              ; preds = %112
  %118 = icmp ugt i64 %115, 4611686018427387903
  br i1 %118, label %119, label %120

119:                                              ; preds = %117
  call void @abort() #15
  unreachable

120:                                              ; preds = %117, %108
  %121 = phi i64 [ %115, %117 ], [ 4611686018427387903, %108 ]
  %122 = shl i64 %121, 2
  %123 = call i8* @_Znwm(i64 %122) #16
  %124 = bitcast i8* %123 to i32*
  br label %125

125:                                              ; preds = %120, %112
  %126 = phi i64 [ %121, %120 ], [ 0, %112 ]
  %127 = phi i8* [ %123, %120 ], [ null, %112 ]
  %128 = phi i32* [ %124, %120 ], [ null, %112 ]
  %129 = getelementptr inbounds i32, i32* %128, i64 %103
  %130 = getelementptr inbounds i32, i32* %128, i64 %126
  %131 = ptrtoint i32* %130 to i64
  %132 = load i32, i32* %7, align 4
  store i32 %132, i32* %129, align 4
  %133 = getelementptr inbounds i32, i32* %129, i64 1
  %134 = ptrtoint i32* %133 to i64
  %135 = ptrtoint i32* %128 to i64
  %136 = icmp sgt i64 %102, 0
  br i1 %136, label %137, label %139

137:                                              ; preds = %125
  %138 = inttoptr i64 %101 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %127, i8* align 4 %138, i64 %102, i1 false) #12
  br label %139

139:                                              ; preds = %137, %125
  store i64 %135, i64* %63, align 8
  store i64 %134, i64* %62, align 8
  store i64 %131, i64* %64, align 8
  %140 = icmp eq i64 %101, 0
  br i1 %140, label %143, label %141

141:                                              ; preds = %139
  %142 = inttoptr i64 %101 to i8*
  call void @_ZdlPv(i8* %142) #16
  br label %143

143:                                              ; preds = %95, %139, %141
  %144 = load i64, i64* %67, align 8
  %145 = load i32, i32* %7, align 4
  %146 = icmp sgt i32 %145, 0
  br i1 %146, label %147, label %154

147:                                              ; preds = %143
  %148 = inttoptr i64 %144 to i32*
  %149 = load i64, i64* %66, align 8
  %150 = sub i64 %149, %144
  %151 = sext i32 %145 to i64
  %152 = shl i64 %150, 30
  %153 = ashr i64 %152, 32
  br label %165

154:                                              ; preds = %165, %143
  %155 = load i8, i8* %51, align 8, !range !11
  %156 = icmp eq i8 %155, 0
  %157 = or i1 %82, %156
  %158 = load i8, i8* %71, align 1
  %159 = icmp slt i8 %158, 0
  br i1 %159, label %160, label %162

160:                                              ; preds = %154
  %161 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %161) #16
  br label %162

162:                                              ; preds = %154, %160
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %49) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #12
  %163 = icmp eq i8 %155, 1
  %164 = add nuw i64 %81, 1
  br i1 %163, label %73, label %188

165:                                              ; preds = %186, %147
  %166 = phi i32* [ %148, %147 ], [ %187, %186 ]
  %167 = phi i64 [ %151, %147 ], [ %184, %186 ]
  %168 = load i64*, i64** %17, align 8
  %169 = getelementptr inbounds i64, i64* %168, i64 %81
  %170 = load i64, i64* %169, align 8
  %171 = sub nsw i64 %153, %167
  %172 = getelementptr inbounds i32, i32* %166, i64 %171
  %173 = load i32, i32* %172, align 4
  %174 = trunc i64 %170 to i32
  %175 = add i32 %173, %174
  store i32 %175, i32* %172, align 4
  %176 = load i64*, i64** %17, align 8
  %177 = getelementptr inbounds i64, i64* %176, i64 %81
  %178 = load i64, i64* %177, align 8
  %179 = load i32*, i32** %69, align 8
  %180 = getelementptr inbounds i32, i32* %179, i64 %171
  %181 = load i32, i32* %180, align 4
  %182 = trunc i64 %178 to i32
  %183 = add i32 %181, %182
  store i32 %183, i32* %180, align 4
  %184 = add nsw i64 %167, -1
  %185 = icmp sgt i64 %184, 0
  br i1 %185, label %186, label %154

186:                                              ; preds = %165
  %187 = load i32*, i32** %68, align 8
  br label %165

188:                                              ; preds = %162, %73, %36
  %189 = phi i1 [ true, %36 ], [ true, %73 ], [ %157, %162 ]
  %190 = load i64*, i64** %20, align 8
  %191 = icmp eq i64* %190, null
  br i1 %191, label %196, label %192

192:                                              ; preds = %188
  %193 = ptrtoint i64* %190 to i64
  %194 = bitcast i64** %21 to i64*
  store i64 %193, i64* %194, align 8
  %195 = bitcast i64* %190 to i8*
  call void @_ZdlPv(i8* %195) #16
  br label %196

196:                                              ; preds = %188, %192
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #12
  %197 = load i64*, i64** %17, align 8
  %198 = icmp eq i64* %197, null
  br i1 %198, label %203, label %199

199:                                              ; preds = %196
  %200 = ptrtoint i64* %197 to i64
  %201 = bitcast i64** %18 to i64*
  store i64 %200, i64* %201, align 8
  %202 = bitcast i64* %197 to i8*
  call void @_ZdlPv(i8* %202) #16
  br label %203

203:                                              ; preds = %196, %199
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #12
  %204 = load %"class.absl::string_view"*, %"class.absl::string_view"** %14, align 8
  %205 = icmp eq %"class.absl::string_view"* %204, null
  br i1 %205, label %209, label %206

206:                                              ; preds = %203
  %207 = ptrtoint %"class.absl::string_view"* %204 to i64
  store i64 %207, i64* %42, align 8
  %208 = bitcast %"class.absl::string_view"* %204 to i8*
  call void @_ZdlPv(i8* %208) #16
  br label %209

209:                                              ; preds = %203, %206
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #12
  br i1 %189, label %263, label %210

210:                                              ; preds = %209
  %211 = getelementptr inbounds %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult", %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult"* %0, i64 0, i32 3, i32 0, i32 0
  %212 = load i32*, i32** %211, align 8
  %213 = icmp eq i32* %212, null
  br i1 %213, label %219, label %214

214:                                              ; preds = %210
  %215 = ptrtoint i32* %212 to i64
  %216 = getelementptr inbounds %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult", %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult"* %0, i64 0, i32 3, i32 0, i32 1
  %217 = bitcast i32** %216 to i64*
  store i64 %215, i64* %217, align 8
  %218 = bitcast i32* %212 to i8*
  call void @_ZdlPv(i8* %218) #16
  br label %219

219:                                              ; preds = %214, %210
  %220 = getelementptr inbounds %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult", %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult"* %0, i64 0, i32 2, i32 0, i32 0
  %221 = load i32*, i32** %220, align 8
  %222 = icmp eq i32* %221, null
  br i1 %222, label %228, label %223

223:                                              ; preds = %219
  %224 = ptrtoint i32* %221 to i64
  %225 = getelementptr inbounds %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult", %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult"* %0, i64 0, i32 2, i32 0, i32 1
  %226 = bitcast i32** %225 to i64*
  store i64 %224, i64* %226, align 8
  %227 = bitcast i32* %221 to i8*
  call void @_ZdlPv(i8* %227) #16
  br label %228

228:                                              ; preds = %223, %219
  %229 = getelementptr inbounds %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult", %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult"* %0, i64 0, i32 1, i32 0, i32 0
  %230 = load i32*, i32** %229, align 8
  %231 = icmp eq i32* %230, null
  br i1 %231, label %237, label %232

232:                                              ; preds = %228
  %233 = ptrtoint i32* %230 to i64
  %234 = getelementptr inbounds %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult", %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult"* %0, i64 0, i32 1, i32 0, i32 1
  %235 = bitcast i32** %234 to i64*
  store i64 %233, i64* %235, align 8
  %236 = bitcast i32* %230 to i8*
  call void @_ZdlPv(i8* %236) #16
  br label %237

237:                                              ; preds = %232, %228
  %238 = getelementptr inbounds %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult", %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %239 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %238, align 8
  %240 = icmp eq %"class.std::__1::basic_string"* %239, null
  br i1 %240, label %263, label %241

241:                                              ; preds = %237
  %242 = bitcast %"class.std::__1::basic_string"* %239 to i8*
  %243 = getelementptr inbounds %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult", %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %244 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %243, align 8
  %245 = icmp eq %"class.std::__1::basic_string"* %244, %239
  br i1 %245, label %261, label %246

246:                                              ; preds = %241, %256
  %247 = phi %"class.std::__1::basic_string"* [ %248, %256 ], [ %244, %241 ]
  %248 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %247, i64 -1
  %249 = bitcast %"class.std::__1::basic_string"* %248 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %250 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %249, i64 0, i32 1, i32 0
  %251 = load i8, i8* %250, align 1
  %252 = icmp slt i8 %251, 0
  br i1 %252, label %253, label %256

253:                                              ; preds = %246
  %254 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %248, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %255 = load i8*, i8** %254, align 8
  call void @_ZdlPv(i8* %255) #16
  br label %256

256:                                              ; preds = %253, %246
  %257 = icmp eq %"class.std::__1::basic_string"* %248, %239
  br i1 %257, label %258, label %246

258:                                              ; preds = %256
  %259 = bitcast %"struct.tflite::support::text::tokenizer::WordpieceTokenizerResult"* %0 to i8**
  %260 = load i8*, i8** %259, align 8
  br label %261

261:                                              ; preds = %258, %241
  %262 = phi i8* [ %260, %258 ], [ %242, %241 ]
  store %"class.std::__1::basic_string"* %239, %"class.std::__1::basic_string"** %243, align 8
  call void @_ZdlPv(i8* %262) #16
  br label %263

263:                                              ; preds = %261, %237, %209
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN10tensorflow4text10RegexSplitEN4absl11string_viewERKN3re23RE2EbS6_PNSt3__16vectorIS2_NS7_9allocatorIS2_EEEEPNS8_IxNS9_IxEEEESF_(i8*, i64, %"class.re2::RE2"* dereferenceable(200), i1 zeroext, %"class.re2::RE2"* dereferenceable(200), %"class.std::__1::vector.21"*, %"class.std::__1::vector.28"*, %"class.std::__1::vector.28"*) local_unnamed_addr #3

declare void @_ZN10tensorflow4text17WordpieceTokenizeERKN4absl11string_viewEiiRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEbSD_bPKNS0_14WordpieceVocabEPNS5_6vectorISB_NS9_ISB_EEEEPNSH_IiNS9_IiEEEESN_Pi(%"struct.tensorflow::text::LookupStatus"* sret, %"class.absl::string_view"* dereferenceable(16), i32, i32, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext, %"class.tensorflow::text::WordpieceVocab"*, %"class.std::__1::vector"*, %"class.std::__1::vector.14"*, %"class.std::__1::vector.14"*, i32*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite7support4text9tokenizer26FlatHashMapBackedWordpieceD2Ev(%"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece", %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6tflite7support4text9tokenizer26FlatHashMapBackedWordpieceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece", %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece", %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece", %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #16
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %8, align 8
  %10 = bitcast %"union.absl::container_internal::map_slot_type"** %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false) #12
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece", %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 0
  %14 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %15 = icmp eq %"class.std::__1::basic_string"* %14, null
  br i1 %15, label %38, label %16

16:                                               ; preds = %11
  %17 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %18 = getelementptr inbounds %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece", %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece"* %0, i64 0, i32 1, i32 0, i32 1
  %19 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %20 = icmp eq %"class.std::__1::basic_string"* %19, %14
  br i1 %20, label %36, label %21

21:                                               ; preds = %16, %31
  %22 = phi %"class.std::__1::basic_string"* [ %23, %31 ], [ %19, %16 ]
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 -1
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  tail call void @_ZdlPv(i8* %30) #16
  br label %31

31:                                               ; preds = %28, %21
  %32 = icmp eq %"class.std::__1::basic_string"* %23, %14
  br i1 %32, label %33, label %21

33:                                               ; preds = %31
  %34 = bitcast %"class.std::__1::vector"* %12 to i8**
  %35 = load i8*, i8** %34, align 8
  br label %36

36:                                               ; preds = %33, %16
  %37 = phi i8* [ %35, %33 ], [ %17, %16 ]
  store %"class.std::__1::basic_string"* %14, %"class.std::__1::basic_string"** %18, align 8
  tail call void @_ZdlPv(i8* %37) #16
  br label %38

38:                                               ; preds = %11, %36
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite7support4text9tokenizer26FlatHashMapBackedWordpieceD0Ev(%"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece", %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6tflite7support4text9tokenizer26FlatHashMapBackedWordpieceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece", %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece"* %0, i64 0, i32 2, i32 0, i32 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece", %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece", %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #16
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %8, align 8
  %10 = bitcast %"union.absl::container_internal::map_slot_type"** %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false) #12
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece", %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 0
  %14 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %15 = icmp eq %"class.std::__1::basic_string"* %14, null
  br i1 %15, label %38, label %16

16:                                               ; preds = %11
  %17 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %18 = getelementptr inbounds %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece", %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece"* %0, i64 0, i32 1, i32 0, i32 1
  %19 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %20 = icmp eq %"class.std::__1::basic_string"* %19, %14
  br i1 %20, label %36, label %21

21:                                               ; preds = %16, %31
  %22 = phi %"class.std::__1::basic_string"* [ %23, %31 ], [ %19, %16 ]
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 -1
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  tail call void @_ZdlPv(i8* %30) #16
  br label %31

31:                                               ; preds = %28, %21
  %32 = icmp eq %"class.std::__1::basic_string"* %23, %14
  br i1 %32, label %33, label %21

33:                                               ; preds = %31
  %34 = bitcast %"class.std::__1::vector"* %12 to i8**
  %35 = load i8*, i8** %34, align 8
  br label %36

36:                                               ; preds = %33, %16
  %37 = phi i8* [ %35, %33 ], [ %17, %16 ]
  store %"class.std::__1::basic_string"* %14, %"class.std::__1::basic_string"** %18, align 8
  tail call void @_ZdlPv(i8* %37) #16
  br label %38

38:                                               ; preds = %11, %36
  %39 = bitcast %"class.tflite::support::text::tokenizer::FlatHashMapBackedWordpiece"* %0 to i8*
  tail call void @_ZdlPv(i8* %39) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6tflite7support4text9tokenizer13BertTokenizer8LookupIdEN4absl11string_viewEPi(%"class.tflite::support::text::tokenizer::BertTokenizer"*, i8*, i64, i32*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.absl::string_view", align 8
  %6 = bitcast %"class.absl::string_view"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6)
  %7 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %5, i64 0, i32 0
  store i8* %1, i8** %7, align 8
  %8 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %5, i64 0, i32 1
  store i64 %2, i64* %8, align 8
  %9 = getelementptr inbounds %"class.tflite::support::text::tokenizer::BertTokenizer", %"class.tflite::support::text::tokenizer::BertTokenizer"* %0, i64 0, i32 1, i32 2, i32 0, i32 0
  %10 = call { i8*, %"union.absl::container_internal::map_slot_type"* } @_ZNK4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINS_11string_viewEiEENS0_10StringHashENS0_12StringHashEq2EqENSt3__19allocatorINS8_4pairIKS3_iEEEEE4findIS3_EENSE_14const_iteratorERKT_(%"class.absl::container_internal::raw_hash_set"* %9, %"class.absl::string_view"* nonnull dereferenceable(16) %5) #12
  %11 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type"* } %10, 0
  %12 = extractvalue { i8*, %"union.absl::container_internal::map_slot_type"* } %10, 1
  %13 = icmp eq i8* %11, null
  br i1 %13, label %22, label %14

14:                                               ; preds = %4
  %15 = load i8, i8* %11, align 1
  %16 = icmp sgt i8 %15, -1
  br i1 %16, label %18, label %17, !prof !7

17:                                               ; preds = %14
  call void @llvm.trap() #12
  unreachable

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %12, i64 0, i32 1
  %20 = bitcast [8 x i8]* %19 to i32*
  %21 = load i32, i32* %20, align 8
  store i32 %21, i32* %3, align 4
  br label %22

22:                                               ; preds = %4, %18
  %23 = phi i1 [ true, %18 ], [ false, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6)
  ret i1 %23
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6tflite7support4text9tokenizer13BertTokenizer10LookupWordEiPN4absl11string_viewE(%"class.tflite::support::text::tokenizer::BertTokenizer"*, i32, %"class.absl::string_view"*) unnamed_addr #0 comdat align 2 {
  %4 = sext i32 %1 to i64
  %5 = getelementptr inbounds %"class.tflite::support::text::tokenizer::BertTokenizer", %"class.tflite::support::text::tokenizer::BertTokenizer"* %0, i64 0, i32 1, i32 1
  %6 = getelementptr inbounds %"class.tflite::support::text::tokenizer::BertTokenizer", %"class.tflite::support::text::tokenizer::BertTokenizer"* %0, i64 0, i32 1, i32 1, i32 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = sdiv exact i64 %11, 24
  %13 = icmp ule i64 %12, %4
  %14 = icmp slt i32 %1, 0
  %15 = or i1 %14, %13
  %16 = inttoptr i64 %10 to %"class.std::__1::basic_string"*
  br i1 %15, label %38, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 %4
  %19 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %17
  %24 = zext i8 %21 to i64
  %25 = ptrtoint %"class.std::__1::basic_string"* %18 to i64
  br label %33

26:                                               ; preds = %17
  %27 = bitcast %"class.std::__1::basic_string"* %18 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 %4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = icmp sgt i64 %30, -1
  br i1 %31, label %33, label %32, !prof !7

32:                                               ; preds = %26
  tail call void @llvm.trap() #12
  unreachable

33:                                               ; preds = %26, %23
  %34 = phi i64 [ %28, %26 ], [ %25, %23 ]
  %35 = phi i64 [ %30, %26 ], [ %24, %23 ]
  %36 = bitcast %"class.absl::string_view"* %2 to i64*
  store i64 %34, i64* %36, align 8
  %37 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %2, i64 0, i32 1
  store i64 %35, i64* %37, align 8
  br label %38

38:                                               ; preds = %3, %33
  %39 = phi i1 [ true, %33 ], [ false, %3 ]
  ret i1 %39
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite7support4text9tokenizer13BertTokenizerD2Ev(%"class.tflite::support::text::tokenizer::BertTokenizer"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.tflite::support::text::tokenizer::BertTokenizer", %"class.tflite::support::text::tokenizer::BertTokenizer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN6tflite7support4text9tokenizer13BertTokenizerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.tflite::support::text::tokenizer::BertTokenizer", %"class.tflite::support::text::tokenizer::BertTokenizer"* %0, i64 0, i32 4
  tail call void @_ZN3re23RE2D1Ev(%"class.re2::RE2"* %3) #12
  %4 = getelementptr inbounds %"class.tflite::support::text::tokenizer::BertTokenizer", %"class.tflite::support::text::tokenizer::BertTokenizer"* %0, i64 0, i32 3
  tail call void @_ZN3re23RE2D1Ev(%"class.re2::RE2"* %4) #12
  %5 = getelementptr inbounds %"class.tflite::support::text::tokenizer::BertTokenizer", %"class.tflite::support::text::tokenizer::BertTokenizer"* %0, i64 0, i32 2, i32 7
  %6 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  tail call void @_ZdlPv(i8* %12) #16
  br label %13

13:                                               ; preds = %10, %1
  %14 = getelementptr inbounds %"class.tflite::support::text::tokenizer::BertTokenizer", %"class.tflite::support::text::tokenizer::BertTokenizer"* %0, i64 0, i32 2, i32 6
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #16
  br label %22

22:                                               ; preds = %19, %13
  %23 = getelementptr inbounds %"class.tflite::support::text::tokenizer::BertTokenizer", %"class.tflite::support::text::tokenizer::BertTokenizer"* %0, i64 0, i32 2, i32 4
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  tail call void @_ZdlPv(i8* %30) #16
  br label %31

31:                                               ; preds = %28, %22
  %32 = getelementptr inbounds %"class.tflite::support::text::tokenizer::BertTokenizer", %"class.tflite::support::text::tokenizer::BertTokenizer"* %0, i64 0, i32 2, i32 2
  %33 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  tail call void @_ZdlPv(i8* %39) #16
  br label %40

40:                                               ; preds = %31, %37
  %41 = getelementptr inbounds %"class.tflite::support::text::tokenizer::BertTokenizer", %"class.tflite::support::text::tokenizer::BertTokenizer"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6tflite7support4text9tokenizer26FlatHashMapBackedWordpieceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %42 = getelementptr inbounds %"class.tflite::support::text::tokenizer::BertTokenizer", %"class.tflite::support::text::tokenizer::BertTokenizer"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 3
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %50, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.tflite::support::text::tokenizer::BertTokenizer", %"class.tflite::support::text::tokenizer::BertTokenizer"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 1
  %47 = getelementptr inbounds %"class.tflite::support::text::tokenizer::BertTokenizer", %"class.tflite::support::text::tokenizer::BertTokenizer"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  tail call void @_ZdlPv(i8* %48) #16
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %47, align 8
  %49 = bitcast %"union.absl::container_internal::map_slot_type"** %46 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 32, i1 false) #12
  br label %50

50:                                               ; preds = %45, %40
  %51 = getelementptr inbounds %"class.tflite::support::text::tokenizer::BertTokenizer", %"class.tflite::support::text::tokenizer::BertTokenizer"* %0, i64 0, i32 1, i32 1
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %51, i64 0, i32 0, i32 0
  %53 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %52, align 8
  %54 = icmp eq %"class.std::__1::basic_string"* %53, null
  br i1 %54, label %77, label %55

55:                                               ; preds = %50
  %56 = bitcast %"class.std::__1::basic_string"* %53 to i8*
  %57 = getelementptr inbounds %"class.tflite::support::text::tokenizer::BertTokenizer", %"class.tflite::support::text::tokenizer::BertTokenizer"* %0, i64 0, i32 1, i32 1, i32 0, i32 1
  %58 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %57, align 8
  %59 = icmp eq %"class.std::__1::basic_string"* %58, %53
  br i1 %59, label %75, label %60

60:                                               ; preds = %55, %70
  %61 = phi %"class.std::__1::basic_string"* [ %62, %70 ], [ %58, %55 ]
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 -1
  %63 = bitcast %"class.std::__1::basic_string"* %62 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  tail call void @_ZdlPv(i8* %69) #16
  br label %70

70:                                               ; preds = %67, %60
  %71 = icmp eq %"class.std::__1::basic_string"* %62, %53
  br i1 %71, label %72, label %60

72:                                               ; preds = %70
  %73 = bitcast %"class.std::__1::vector"* %51 to i8**
  %74 = load i8*, i8** %73, align 8
  br label %75

75:                                               ; preds = %72, %55
  %76 = phi i8* [ %74, %72 ], [ %56, %55 ]
  store %"class.std::__1::basic_string"* %53, %"class.std::__1::basic_string"** %57, align 8
  tail call void @_ZdlPv(i8* %76) #16
  br label %77

77:                                               ; preds = %50, %75
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite7support4text9tokenizer13BertTokenizerD0Ev(%"class.tflite::support::text::tokenizer::BertTokenizer"*) unnamed_addr #4 comdat align 2 {
  tail call void @_ZN6tflite7support4text9tokenizer13BertTokenizerD2Ev(%"class.tflite::support::text::tokenizer::BertTokenizer"* %0) #12
  %2 = bitcast %"class.tflite::support::text::tokenizer::BertTokenizer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN3re23RE2D1Ev(%"class.re2::RE2"*) unnamed_addr #9

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i8 } @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINS_11string_viewEiEENS0_10StringHashENS0_12StringHashEq2EqENSt3__19allocatorINS8_4pairIKS3_iEEEEE22find_or_prepare_insertINS8_12basic_stringIcNS8_11char_traitsIcEENS9_IcEEEEEENSA_ImbEERKT_(%"class.absl::container_internal::raw_hash_set"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %2
  %8 = zext i8 %5 to i64
  %9 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %10 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  br label %20

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i64*
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, -1
  br i1 %15, label %16, label %19, !prof !7

16:                                               ; preds = %11
  %17 = load i64, i64* %12, align 8
  %18 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  br label %20

19:                                               ; preds = %11
  tail call void @llvm.trap() #12
  unreachable

20:                                               ; preds = %16, %7
  %21 = phi i64 [ %18, %16 ], [ %9, %7 ]
  %22 = phi i64* [ %12, %16 ], [ %10, %7 ]
  %23 = phi i64 [ %17, %16 ], [ %9, %7 ]
  %24 = phi i64 [ %14, %16 ], [ %8, %7 ]
  %25 = inttoptr i64 %23 to i8*
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %27 = tail call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %26, i8* %25, i64 %24) #12
  %28 = add i64 %27, %24
  %29 = zext i64 %28 to i128
  %30 = mul nuw i128 %29, 11376068507788127593
  %31 = lshr i128 %30, 64
  %32 = xor i128 %31, %30
  %33 = trunc i128 %32 to i64
  %34 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %37 = load i64, i64* %36, align 8
  %38 = lshr i64 %33, 7
  %39 = ptrtoint i8* %35 to i64
  %40 = lshr i64 %39, 12
  %41 = xor i64 %38, %40
  %42 = trunc i128 %32 to i8
  %43 = and i8 %42, 127
  %44 = insertelement <16 x i8> undef, i8 %43, i32 0
  %45 = shufflevector <16 x i8> %44, <16 x i8> undef, <16 x i32> zeroinitializer
  %46 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  %47 = load i8, i8* %4, align 1
  %48 = icmp sgt i8 %47, -1
  %49 = zext i8 %47 to i64
  %50 = load i64, i64* %22, align 8
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = icmp sgt i64 %52, -1
  %54 = or i1 %48, %53
  %55 = select i1 %48, i64 %49, i64 %52
  %56 = select i1 %48, i64 %21, i64 %50
  %57 = inttoptr i64 %56 to i8*
  br label %58

58:                                               ; preds = %98, %20
  %59 = phi i64 [ %41, %20 ], [ %100, %98 ]
  %60 = phi i64 [ 0, %20 ], [ %99, %98 ]
  %61 = and i64 %59, %37
  %62 = getelementptr inbounds i8, i8* %35, i64 %61
  %63 = bitcast i8* %62 to <16 x i8>*
  %64 = load <16 x i8>, <16 x i8>* %63, align 1
  %65 = icmp eq <16 x i8> %45, %64
  %66 = bitcast <16 x i1> %65 to i16
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %94, label %68

68:                                               ; preds = %58
  %69 = zext i16 %66 to i32
  %70 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %46, align 8
  br label %71

71:                                               ; preds = %68, %90
  %72 = phi i1 [ %54, %68 ], [ true, %90 ]
  %73 = phi i32 [ %69, %68 ], [ %92, %90 ]
  %74 = tail call i32 @llvm.cttz.i32(i32 %73, i1 false) #12, !range !8
  %75 = zext i32 %74 to i64
  %76 = add i64 %61, %75
  %77 = and i64 %76, %37
  %78 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %70, i64 %77, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %70, i64 %77, i32 0, i32 1
  %81 = load i64, i64* %80, align 8
  br i1 %72, label %83, label %82, !prof !12

82:                                               ; preds = %71
  tail call void @llvm.trap() #12
  unreachable

83:                                               ; preds = %71
  %84 = icmp eq i64 %81, %55
  br i1 %84, label %85, label %90, !prof !9

85:                                               ; preds = %83
  %86 = icmp eq i64 %81, 0
  br i1 %86, label %103, label %87

87:                                               ; preds = %85
  %88 = tail call i32 @bcmp(i8* %79, i8* %57, i64 %81) #12
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %103, label %90, !prof !7

90:                                               ; preds = %83, %87
  %91 = add i32 %73, -1
  %92 = and i32 %91, %73
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %71

94:                                               ; preds = %90, %58
  %95 = icmp eq <16 x i8> %64, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %96 = bitcast <16 x i1> %95 to i16
  %97 = icmp eq i16 %96, 0
  br i1 %97, label %98, label %101, !prof !10

98:                                               ; preds = %94
  %99 = add i64 %60, 16
  %100 = add i64 %99, %61
  br label %58

101:                                              ; preds = %94
  %102 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINS_11string_viewEiEENS0_10StringHashENS0_12StringHashEq2EqENSt3__19allocatorINS8_4pairIKS3_iEEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set"* %0, i64 %33)
  br label %103

103:                                              ; preds = %87, %85, %101
  %104 = phi i64 [ %102, %101 ], [ %77, %85 ], [ %77, %87 ]
  %105 = phi i8 [ 1, %101 ], [ 0, %85 ], [ 0, %87 ]
  %106 = insertvalue { i64, i8 } undef, i64 %104, 0
  %107 = insertvalue { i64, i8 } %106, i8 %105, 1
  ret { i64, i8 } %107
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINS_11string_viewEiEENS0_10StringHashENS0_12StringHashEq2EqENSt3__19allocatorINS8_4pairIKS3_iEEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set"*, i64) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #12, !range !8
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !7

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINS_11string_viewEiEENS0_10StringHashENS0_12StringHashEq2EqENSt3__19allocatorINS8_4pairIKS3_iEEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set"* %0, i64 1) #12
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINS_11string_viewEiEENS0_10StringHashENS0_12StringHashEq2EqENSt3__19allocatorINS8_4pairIKS3_iEEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set"* %0) #12
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINS_11string_viewEiEENS0_10StringHashENS0_12StringHashEq2EqENSt3__19allocatorINS8_4pairIKS3_iEEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set"* %0, i64 %58) #12
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #12, !range !8
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ugt i64 %2, 16
  br i1 %4, label %5, label %11

5:                                                ; preds = %3
  %6 = icmp ugt i64 %2, 1024
  br i1 %6, label %7, label %9, !prof !10

7:                                                ; preds = %5
  %8 = tail call i64 @_ZN4absl13hash_internal15MixingHashState28CombineLargeContiguousImpl64EmPKhm(i64 %0, i8* %1, i64 %2) #12
  br label %75

9:                                                ; preds = %5
  %10 = tail call i64 @_ZN4absl13hash_internal15MixingHashState10WyhashImplEPKhm(i8* %1, i64 %2) #12
  br label %66

11:                                               ; preds = %3
  %12 = icmp ugt i64 %2, 8
  br i1 %12, label %13, label %29

13:                                               ; preds = %11
  %14 = bitcast i8* %1 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = shl i64 %2, 3
  %21 = sub nuw nsw i64 128, %20
  %22 = lshr i64 %19, %21
  %23 = add i64 %15, %0
  %24 = zext i64 %23 to i128
  %25 = mul nuw i128 %24, 11376068507788127593
  %26 = lshr i128 %25, 64
  %27 = xor i128 %26, %25
  %28 = trunc i128 %27 to i64
  br label %66

29:                                               ; preds = %11
  %30 = icmp ugt i64 %2, 3
  br i1 %30, label %31, label %44

31:                                               ; preds = %29
  %32 = bitcast i8* %1 to i32*
  %33 = load i32, i32* %32, align 1
  %34 = getelementptr inbounds i8, i8* %1, i64 %2
  %35 = getelementptr inbounds i8, i8* %34, i64 -4
  %36 = bitcast i8* %35 to i32*
  %37 = load i32, i32* %36, align 1
  %38 = zext i32 %37 to i64
  %39 = shl i64 %2, 3
  %40 = add nsw i64 %39, -32
  %41 = shl i64 %38, %40
  %42 = zext i32 %33 to i64
  %43 = or i64 %41, %42
  br label %66

44:                                               ; preds = %29
  %45 = icmp eq i64 %2, 0
  br i1 %45, label %75, label %46

46:                                               ; preds = %44
  %47 = load i8, i8* %1, align 1
  %48 = lshr i64 %2, 1
  %49 = getelementptr inbounds i8, i8* %1, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = add nsw i64 %2, -1
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %47 to i32
  %55 = zext i8 %50 to i32
  %56 = shl i64 %48, 3
  %57 = trunc i64 %56 to i32
  %58 = shl i32 %55, %57
  %59 = or i32 %58, %54
  %60 = zext i8 %53 to i32
  %61 = trunc i64 %51 to i32
  %62 = shl i32 %61, 3
  %63 = shl i32 %60, %62
  %64 = or i32 %59, %63
  %65 = zext i32 %64 to i64
  br label %66

66:                                               ; preds = %46, %31, %13, %9
  %67 = phi i64 [ %10, %9 ], [ %22, %13 ], [ %43, %31 ], [ %65, %46 ]
  %68 = phi i64 [ %0, %9 ], [ %28, %13 ], [ %0, %31 ], [ %0, %46 ]
  %69 = add i64 %68, %67
  %70 = zext i64 %69 to i128
  %71 = mul nuw i128 %70, 11376068507788127593
  %72 = lshr i128 %71, 64
  %73 = xor i128 %72, %71
  %74 = trunc i128 %73 to i64
  br label %75

75:                                               ; preds = %7, %44, %66
  %76 = phi i64 [ %8, %7 ], [ %74, %66 ], [ %0, %44 ]
  ret i64 %76
}

declare i64 @_ZN4absl13hash_internal15MixingHashState28CombineLargeContiguousImpl64EmPKhm(i64, i8*, i64) local_unnamed_addr #3

declare i64 @_ZN4absl13hash_internal15MixingHashState10WyhashImplEPKhm(i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @llvm.assume(i1) #12

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.cttz.i32(i32, i1 immarg) #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINS_11string_viewEiEENS0_10StringHashENS0_12StringHashEq2EqENSt3__19allocatorINS8_4pairIKS3_iEEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = mul i64 %1, 24
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #16
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #12
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %97, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %93
  br i1 %24, label %97, label %96

28:                                               ; preds = %25, %93
  %29 = phi i64 [ 0, %25 ], [ %94, %93 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %93

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %6, i64 %29
  %35 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %34, i64 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %6, i64 %29, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = tail call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %26, i8* %36, i64 %38) #12
  %40 = add i64 %39, %38
  %41 = zext i64 %40 to i128
  %42 = mul nuw i128 %41, 11376068507788127593
  %43 = lshr i128 %42, 64
  %44 = xor i128 %43, %42
  %45 = trunc i128 %44 to i64
  %46 = load i8*, i8** %3, align 8
  %47 = load i64, i64* %7, align 8
  %48 = lshr i64 %45, 7
  %49 = ptrtoint i8* %46 to i64
  %50 = lshr i64 %49, 12
  %51 = xor i64 %48, %50
  %52 = and i64 %51, %47
  %53 = getelementptr inbounds i8, i8* %46, i64 %52
  %54 = bitcast i8* %53 to <16 x i8>*
  %55 = load <16 x i8>, <16 x i8>* %54, align 1
  %56 = icmp slt <16 x i8> %55, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %57 = bitcast <16 x i1> %56 to i16
  %58 = icmp eq i16 %57, 0
  br i1 %58, label %59, label %71

59:                                               ; preds = %33, %59
  %60 = phi i64 [ %64, %59 ], [ %52, %33 ]
  %61 = phi i64 [ %62, %59 ], [ 0, %33 ]
  %62 = add i64 %61, 16
  %63 = add i64 %62, %60
  %64 = and i64 %63, %47
  %65 = getelementptr inbounds i8, i8* %46, i64 %64
  %66 = bitcast i8* %65 to <16 x i8>*
  %67 = load <16 x i8>, <16 x i8>* %66, align 1
  %68 = icmp slt <16 x i8> %67, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %69 = bitcast <16 x i1> %68 to i16
  %70 = icmp eq i16 %69, 0
  br i1 %70, label %59, label %71

71:                                               ; preds = %59, %33
  %72 = phi i64 [ %52, %33 ], [ %64, %59 ]
  %73 = phi i16 [ %57, %33 ], [ %69, %59 ]
  %74 = zext i16 %73 to i32
  %75 = tail call i32 @llvm.cttz.i32(i32 %74, i1 false) #12, !range !8
  %76 = zext i32 %75 to i64
  %77 = add i64 %72, %76
  %78 = and i64 %77, %47
  %79 = trunc i128 %44 to i8
  %80 = and i8 %79, 127
  %81 = getelementptr inbounds i8, i8* %46, i64 %78
  store i8 %80, i8* %81, align 1
  %82 = load i8*, i8** %3, align 8
  %83 = add i64 %78, -15
  %84 = load i64, i64* %7, align 8
  %85 = and i64 %83, %84
  %86 = and i64 %84, 15
  %87 = add i64 %85, %86
  %88 = getelementptr inbounds i8, i8* %82, i64 %87
  store i8 %80, i8* %88, align 1
  %89 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %5, align 8
  %90 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %89, i64 %78
  %91 = bitcast %"union.absl::container_internal::map_slot_type"* %90 to i8*
  %92 = bitcast %"union.absl::container_internal::map_slot_type"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 24, i1 false) #12
  br label %93

93:                                               ; preds = %28, %71
  %94 = add nuw i64 %29, 1
  %95 = icmp eq i64 %94, %8
  br i1 %95, label %27, label %28

96:                                               ; preds = %27
  tail call void @_ZdlPv(i8* %4) #16
  br label %97

97:                                               ; preds = %2, %27, %96
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyINS_11string_viewEiEENS0_10StringHashENS0_12StringHashEq2EqENSt3__19allocatorINS8_4pairIKS3_iEEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set"*) local_unnamed_addr #11 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %3, i64 %5) #12
  %6 = load i64, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  %10 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %19

11:                                               ; preds = %150, %1
  %12 = phi i64 [ 0, %1 ], [ %152, %150 ]
  %13 = lshr i64 %12, 3
  %14 = sub i64 %12, %13
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  ret void

19:                                               ; preds = %8, %150
  %20 = phi i64 [ 0, %8 ], [ %152, %150 ]
  %21 = load i8*, i8** %2, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 %20
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, -2
  br i1 %24, label %25, label %150

25:                                               ; preds = %19
  %26 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %9, align 8
  %27 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %26, i64 %20, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %26, i64 %20, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = tail call i64 @_ZN4absl13hash_internal15MixingHashState18combine_contiguousES1_PKhm(i64 %10, i8* %28, i64 %30) #12
  %32 = add i64 %31, %30
  %33 = zext i64 %32 to i128
  %34 = mul nuw i128 %33, 11376068507788127593
  %35 = lshr i128 %34, 64
  %36 = xor i128 %35, %34
  %37 = trunc i128 %36 to i64
  %38 = load i8*, i8** %2, align 8
  %39 = load i64, i64* %4, align 8
  %40 = lshr i64 %37, 7
  %41 = ptrtoint i8* %38 to i64
  %42 = lshr i64 %41, 12
  %43 = xor i64 %40, %42
  %44 = and i64 %43, %39
  %45 = getelementptr inbounds i8, i8* %38, i64 %44
  %46 = bitcast i8* %45 to <16 x i8>*
  %47 = load <16 x i8>, <16 x i8>* %46, align 1
  %48 = icmp slt <16 x i8> %47, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %49 = bitcast <16 x i1> %48 to i16
  %50 = icmp eq i16 %49, 0
  br i1 %50, label %51, label %63

51:                                               ; preds = %25, %51
  %52 = phi i64 [ %56, %51 ], [ %44, %25 ]
  %53 = phi i64 [ %54, %51 ], [ 0, %25 ]
  %54 = add i64 %53, 16
  %55 = add i64 %54, %52
  %56 = and i64 %55, %39
  %57 = getelementptr inbounds i8, i8* %38, i64 %56
  %58 = bitcast i8* %57 to <16 x i8>*
  %59 = load <16 x i8>, <16 x i8>* %58, align 1
  %60 = icmp slt <16 x i8> %59, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %61 = bitcast <16 x i1> %60 to i16
  %62 = icmp eq i16 %61, 0
  br i1 %62, label %51, label %63

63:                                               ; preds = %51, %25
  %64 = phi i64 [ %44, %25 ], [ %56, %51 ]
  %65 = phi i16 [ %49, %25 ], [ %61, %51 ]
  %66 = zext i16 %65 to i32
  %67 = tail call i32 @llvm.cttz.i32(i32 %66, i1 false) #12, !range !8
  %68 = zext i32 %67 to i64
  %69 = add i64 %64, %68
  %70 = and i64 %69, %39
  %71 = sub i64 %70, %44
  %72 = sub i64 %20, %44
  %73 = xor i64 %71, %72
  %74 = and i64 %73, %39
  %75 = icmp ult i64 %74, 16
  br i1 %75, label %76, label %87, !prof !7

76:                                               ; preds = %63
  %77 = trunc i128 %36 to i8
  %78 = and i8 %77, 127
  %79 = getelementptr inbounds i8, i8* %38, i64 %20
  store i8 %78, i8* %79, align 1
  %80 = load i8*, i8** %2, align 8
  %81 = add i64 %20, -15
  %82 = load i64, i64* %4, align 8
  %83 = and i64 %82, %81
  %84 = and i64 %82, 15
  %85 = add i64 %83, %84
  %86 = getelementptr inbounds i8, i8* %80, i64 %85
  store i8 %78, i8* %86, align 1
  br label %150

87:                                               ; preds = %63
  %88 = getelementptr inbounds i8, i8* %38, i64 %70
  %89 = load i8, i8* %88, align 1
  %90 = icmp eq i8 %89, -128
  %91 = trunc i128 %36 to i8
  %92 = and i8 %91, 127
  store i8 %92, i8* %88, align 1
  %93 = load i8*, i8** %2, align 8
  %94 = add i64 %70, -15
  %95 = load i64, i64* %4, align 8
  %96 = and i64 %95, %94
  %97 = and i64 %95, 15
  %98 = add i64 %96, %97
  %99 = getelementptr inbounds i8, i8* %93, i64 %98
  store i8 %92, i8* %99, align 1
  %100 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %9, align 8
  br i1 %90, label %101, label %115

101:                                              ; preds = %87
  %102 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %100, i64 %70
  %103 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %100, i64 %20
  %104 = bitcast %"union.absl::container_internal::map_slot_type"* %102 to i8*
  %105 = bitcast %"union.absl::container_internal::map_slot_type"* %103 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* align 8 %105, i64 24, i1 false) #12
  %106 = load i8*, i8** %2, align 8
  %107 = getelementptr inbounds i8, i8* %106, i64 %20
  store i8 -128, i8* %107, align 1
  %108 = load i8*, i8** %2, align 8
  %109 = add i64 %20, -15
  %110 = load i64, i64* %4, align 8
  %111 = and i64 %110, %109
  %112 = and i64 %110, 15
  %113 = add i64 %111, %112
  %114 = getelementptr inbounds i8, i8* %108, i64 %113
  store i8 -128, i8* %114, align 1
  br label %150

115:                                              ; preds = %87
  %116 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %100, i64 %20
  %117 = bitcast %"union.absl::container_internal::map_slot_type"* %116 to i8*
  %118 = bitcast %"union.absl::container_internal::map_slot_type"* %116 to <16 x i8>*
  %119 = load <16 x i8>, <16 x i8>* %118, align 8
  %120 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %100, i64 %20, i32 1, i64 0
  %121 = load i8, i8* %120, align 8
  %122 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %100, i64 %20, i32 1, i64 1
  %123 = load i8, i8* %122, align 1
  %124 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %100, i64 %20, i32 1, i64 2
  %125 = load i8, i8* %124, align 2
  %126 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %100, i64 %20, i32 1, i64 3
  %127 = load i8, i8* %126, align 1
  %128 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %100, i64 %20, i32 1, i64 4
  %129 = load i8, i8* %128, align 4
  %130 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %100, i64 %20, i32 1, i64 5
  %131 = load i8, i8* %130, align 1
  %132 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %100, i64 %20, i32 1, i64 6
  %133 = load i8, i8* %132, align 2
  %134 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %100, i64 %20, i32 1, i64 7
  %135 = load i8, i8* %134, align 1
  %136 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %100, i64 %70
  %137 = bitcast %"union.absl::container_internal::map_slot_type"* %136 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 8 %137, i64 24, i1 false) #12
  %138 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %9, align 8
  %139 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %138, i64 %70
  %140 = bitcast %"union.absl::container_internal::map_slot_type"* %139 to <16 x i8>*
  store <16 x i8> %119, <16 x i8>* %140, align 8
  %141 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %138, i64 %70, i32 1, i64 0
  store i8 %121, i8* %141, align 8
  %142 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %138, i64 %70, i32 1, i64 1
  store i8 %123, i8* %142, align 1
  %143 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %138, i64 %70, i32 1, i64 2
  store i8 %125, i8* %143, align 2
  %144 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %138, i64 %70, i32 1, i64 3
  store i8 %127, i8* %144, align 1
  %145 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %138, i64 %70, i32 1, i64 4
  store i8 %129, i8* %145, align 4
  %146 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %138, i64 %70, i32 1, i64 5
  store i8 %131, i8* %146, align 1
  %147 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %138, i64 %70, i32 1, i64 6
  store i8 %133, i8* %147, align 2
  %148 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %138, i64 %70, i32 1, i64 7
  store i8 %135, i8* %148, align 1
  %149 = add i64 %20, -1
  br label %150

150:                                              ; preds = %76, %115, %101, %19
  %151 = phi i64 [ %20, %19 ], [ %20, %76 ], [ %20, %101 ], [ %149, %115 ]
  %152 = add i64 %151, 1
  %153 = load i64, i64* %4, align 8
  %154 = icmp eq i64 %152, %153
  br i1 %154, label %11, label %19
}

declare void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8*, i64) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #14

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { nounwind readnone speculatable }
attributes #14 = { nofree nounwind readonly }
attributes #15 = { noreturn nounwind }
attributes #16 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINS_11string_viewEiEENS0_10StringHashENS0_12StringHashEq2EqENSt3__19allocatorINS8_4pairIKS3_iEEEEE16try_emplace_implIRKNS8_12basic_stringIcNS8_11char_traitsIcEENS9_IcEEEEJEEENSA_INS0_12raw_hash_setIS4_S5_S7_SD_E8iteratorEbEEOT_DpOT0_: argument 0"}
!4 = distinct !{!4, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINS_11string_viewEiEENS0_10StringHashENS0_12StringHashEq2EqENSt3__19allocatorINS8_4pairIKS3_iEEEEE16try_emplace_implIRKNS8_12basic_stringIcNS8_11char_traitsIcEENS9_IcEEEEJEEENSA_INS0_12raw_hash_setIS4_S5_S7_SD_E8iteratorEbEEOT_DpOT0_"}
!5 = distinct !{!5, !6, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINS_11string_viewEiEENS0_10StringHashENS0_12StringHashEq2EqENSt3__19allocatorINS8_4pairIKS3_iEEEEE11try_emplaceINS8_12basic_stringIcNS8_11char_traitsIcEENS9_IcEEEEJELi0EEENSA_INS0_12raw_hash_setIS4_S5_S7_SD_E8iteratorEbEERKT_DpOT0_: argument 0"}
!6 = distinct !{!6, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyINS_11string_viewEiEENS0_10StringHashENS0_12StringHashEq2EqENSt3__19allocatorINS8_4pairIKS3_iEEEEE11try_emplaceINS8_12basic_stringIcNS8_11char_traitsIcEENS9_IcEEEEJELi0EEENSA_INS0_12raw_hash_setIS4_S5_S7_SD_E8iteratorEbEERKT_DpOT0_"}
!7 = !{!"branch_weights", i32 2000, i32 1}
!8 = !{i32 0, i32 33}
!9 = !{!"branch_weights", i32 2146410443, i32 1073205}
!10 = !{!"branch_weights", i32 1, i32 2000}
!11 = !{i8 0, i8 2}
!12 = !{!"branch_weights", i32 4001, i32 1}
