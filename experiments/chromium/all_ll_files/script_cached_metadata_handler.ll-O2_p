; ModuleID = '../../third_party/blink/renderer/platform/loader/fetch/script_cached_metadata_handler.cc'
source_filename = "../../third_party/blink/renderer/platform/loader/fetch/script_cached_metadata_handler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.194" }
%"struct.std::__1::atomic.194" = type { %"struct.std::__1::__atomic_base.195" }
%"struct.std::__1::__atomic_base.195" = type { %"struct.std::__1::__atomic_base.196" }
%"struct.std::__1::__atomic_base.196" = type { %"struct.std::__1::__cxx_atomic_impl.197" }
%"struct.std::__1::__cxx_atomic_impl.197" = type { %"struct.std::__1::__cxx_atomic_base_impl.198" }
%"struct.std::__1::__cxx_atomic_base_impl.198" = type { i32 }
%"class.blink::ScriptCachedMetadataHandler" = type { %"class.blink::SingleCachedMetadataHandler.base", %class.scoped_refptr, i8, %"class.std::__1::unique_ptr.5", %"class.WTF::TextEncoding" }
%"class.blink::SingleCachedMetadataHandler.base" = type <{ %"class.blink::CachedMetadataHandler", i8 }>
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.blink::CachedMetadata"* }
%"class.blink::CachedMetadata" = type { %"class.WTF::RefCounted", %"class.WTF::Vector", %"class.mojo_base::BigBuffer" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr", i64, %"class.absl::optional" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase", %"class.std::__1::unique_ptr.1" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i8* }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.blink::CachedMetadataSender"* }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::CachedMetadataSender" = type { i32 (...)** }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.11", i32, [4 x i8], %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.143", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.159", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.171", %"class.std::__1::unique_ptr.177", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.184", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.123", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.blink::Worklist.54"* }
%"class.blink::Worklist.54" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.blink::Worklist.61"* }
%"class.blink::Worklist.61" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.blink::Worklist.68"* }
%"class.blink::Worklist.68" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::Worklist.75"* }
%"class.blink::Worklist.75" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.blink::Worklist.82"* }
%"class.blink::Worklist.82" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::Worklist.89"* }
%"class.blink::Worklist.89" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::Worklist.96"* }
%"class.blink::Worklist.96" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.103", %"class.std::__1::__compressed_pair.110", %"class.std::__1::__compressed_pair.115", %"class.std::__1::__compressed_pair.117", [4 x i8] }>
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105", %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { i64 }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { float }
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.126", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.135" }
%"class.WTF::Vector.135" = type { %"class.WTF::VectorBuffer.136" }
%"class.WTF::VectorBuffer.136" = type { %"class.WTF::VectorBufferBase.137" }
%"class.WTF::VectorBufferBase.137" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.151" }
%"class.WTF::VectorBuffer.151" = type { %"class.WTF::VectorBufferBase.152" }
%"class.WTF::VectorBufferBase.152" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.165" }
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.54"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.61"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.68"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.75"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.82"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.188" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.183 }
%class.scoped_refptr.183 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.184" = type { %"struct.std::__1::__atomic_base.185" }
%"struct.std::__1::__atomic_base.185" = type { %"struct.std::__1::__cxx_atomic_impl.186" }
%"struct.std::__1::__cxx_atomic_impl.186" = type { %"struct.std::__1::__cxx_atomic_base_impl.187" }
%"struct.std::__1::__cxx_atomic_base_impl.187" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.194", [4 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr.193 }
%class.scoped_refptr.193 = type { %"class.WTF::StringImpl"* }
%"class.blink::WebProcessMemoryDump" = type { %"class.std::__1::unique_ptr.199", %"class.base::trace_event::ProcessMemoryDump"*, i32, [4 x i8], %"class.WTF::HashMap", %"class.WTF::Vector.207" }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.base::trace_event::ProcessMemoryDump"* }
%"class.base::trace_event::ProcessMemoryDump" = type opaque
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::Vector.207" = type { %"class.WTF::VectorBuffer.208" }
%"class.WTF::VectorBuffer.208" = type { %"class.WTF::VectorBufferBase.209" }
%"class.WTF::VectorBufferBase.209" = type { %"class.std::__1::unique_ptr.210"*, i32, i32 }
%"class.std::__1::unique_ptr.210" = type opaque
%"class.WTF::StringAppend" = type { %"class.WTF::String", i8* }
%"class.blink::WebMemoryAllocatorDump" = type { %"class.base::trace_event::MemoryAllocatorDump"*, i64 }
%"class.base::trace_event::MemoryAllocatorDump" = type opaque
%"class.WTF::StringTypeAdapter" = type { %"class.WTF::StringTypeAdapter.213" }
%"class.WTF::StringTypeAdapter.213" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.214" = type <{ i8*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.217 }
%union.anon.217 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev = comdat any

$_ZN5blink27ScriptCachedMetadataHandlerD2Ev = comdat any

$_ZN5blink27ScriptCachedMetadataHandlerD0Ev = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv = comdat any

@_ZTVN5blink27ScriptCachedMetadataHandlerE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ScriptCachedMetadataHandler"*)* @_ZN5blink27ScriptCachedMetadataHandlerD2Ev to i8*), i8* bitcast (void (%"class.blink::ScriptCachedMetadataHandler"*)* @_ZN5blink27ScriptCachedMetadataHandlerD0Ev to i8*), i8* bitcast (void (%"class.blink::ScriptCachedMetadataHandler"*, %"class.blink::Visitor"*)* @_ZNK5blink27ScriptCachedMetadataHandler5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::ScriptCachedMetadataHandler"*, i32)* @_ZN5blink27ScriptCachedMetadataHandler19ClearCachedMetadataENS_21CachedMetadataHandler14ClearCacheTypeE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::ScriptCachedMetadataHandler"*)* @_ZNK5blink27ScriptCachedMetadataHandler8EncodingEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptCachedMetadataHandler"*)* @_ZNK5blink27ScriptCachedMetadataHandler24IsServedFromCacheStorageEv to i8*), i8* bitcast (void (%"class.blink::ScriptCachedMetadataHandler"*, %"class.blink::WebProcessMemoryDump"*, %"class.WTF::String"*)* @_ZNK5blink27ScriptCachedMetadataHandler12OnMemoryDumpEPNS_20WebProcessMemoryDumpERKN3WTF6StringE to i8*), i8* bitcast (i64 (%"class.blink::ScriptCachedMetadataHandler"*)* @_ZNK5blink27ScriptCachedMetadataHandler16GetCodeCacheSizeEv to i8*), i8* bitcast (void (%"class.blink::ScriptCachedMetadataHandler"*, i32, i8*, i64)* @_ZN5blink27ScriptCachedMetadataHandler17SetCachedMetadataEjPKhm to i8*), i8* bitcast (%"class.blink::CachedMetadata"* (%"class.blink::ScriptCachedMetadataHandler"*, i32)* @_ZNK5blink27ScriptCachedMetadataHandler17GetCachedMetadataEj to i8*)] }, align 8
@.str = private unnamed_addr constant [8 x i8] c"/script\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"bytes\00", align 1
@_ZN3WTF10Partitions24kAllocatedObjectPoolNameE = external local_unnamed_addr constant i8*, align 8
@.str.3 = private unnamed_addr constant [45 x i8] c"Memory.Renderer.BlinkCachedMetadataGetResult\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.4 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.5 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.6 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@_ZZN5blink12_GLOBAL__N_111RecordStateENS_10StateOnGetEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN5blink27ScriptCachedMetadataHandlerC1ERKN3WTF12TextEncodingENSt3__110unique_ptrINS_20CachedMetadataSenderENS5_14default_deleteIS7_EEEE = hidden unnamed_addr alias void (%"class.blink::ScriptCachedMetadataHandler"*, %"class.WTF::TextEncoding"*, %"class.blink::CachedMetadataSender"*), void (%"class.blink::ScriptCachedMetadataHandler"*, %"class.WTF::TextEncoding"*, %"class.blink::CachedMetadataSender"*)* @_ZN5blink27ScriptCachedMetadataHandlerC2ERKN3WTF12TextEncodingENSt3__110unique_ptrINS_20CachedMetadataSenderENS5_14default_deleteIS7_EEEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27ScriptCachedMetadataHandlerC2ERKN3WTF12TextEncodingENSt3__110unique_ptrINS_20CachedMetadataSenderENS5_14default_deleteIS7_EEEE(%"class.blink::ScriptCachedMetadataHandler"* nocapture, %"class.WTF::TextEncoding"* nocapture readonly dereferenceable(8), %"class.blink::CachedMetadataSender"*) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.blink::CachedMetadataSender"* %2 to i64
  %5 = getelementptr inbounds %"class.blink::ScriptCachedMetadataHandler", %"class.blink::ScriptCachedMetadataHandler"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::ScriptCachedMetadataHandler", %"class.blink::ScriptCachedMetadataHandler"* %0, i64 0, i32 0, i32 1
  store i8 0, i8* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink27ScriptCachedMetadataHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ScriptCachedMetadataHandler", %"class.blink::ScriptCachedMetadataHandler"* %0, i64 0, i32 1, i32 0
  store %"class.blink::CachedMetadata"* null, %"class.blink::CachedMetadata"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::ScriptCachedMetadataHandler", %"class.blink::ScriptCachedMetadataHandler"* %0, i64 0, i32 2
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.blink::ScriptCachedMetadataHandler", %"class.blink::ScriptCachedMetadataHandler"* %0, i64 0, i32 3
  %10 = bitcast %"class.std::__1::unique_ptr.5"* %9 to i64*
  store i64 %4, i64* %10, align 8
  %11 = getelementptr inbounds %"class.blink::ScriptCachedMetadataHandler", %"class.blink::ScriptCachedMetadataHandler"* %0, i64 0, i32 4
  %12 = bitcast %"class.WTF::TextEncoding"* %1 to i64*
  %13 = bitcast %"class.WTF::TextEncoding"* %11 to i64*
  %14 = load i64, i64* %12, align 8
  store i64 %14, i64* %13, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK5blink27ScriptCachedMetadataHandler5TraceEPNS_7VisitorE(%"class.blink::ScriptCachedMetadataHandler"* nocapture, %"class.blink::Visitor"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27ScriptCachedMetadataHandler17SetCachedMetadataEjPKhm(%"class.blink::ScriptCachedMetadataHandler"* nocapture, i32, i8*, i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::ScriptCachedMetadataHandler", %"class.blink::ScriptCachedMetadataHandler"* %0, i64 0, i32 2
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %47

8:                                                ; preds = %4
  %9 = tail call noalias i8* @malloc(i64 80) #9
  %10 = icmp ult i64 %3, 4294967296
  br i1 %10, label %12, label %11, !prof !3

11:                                               ; preds = %8
  tail call void @llvm.trap() #9
  unreachable

12:                                               ; preds = %8
  %13 = bitcast i8* %9 to %"class.blink::CachedMetadata"*
  %14 = trunc i64 %3 to i32
  tail call void @_ZN5blink14CachedMetadataC1EjPKhj(%"class.blink::CachedMetadata"* %13, i32 %1, i8* %2, i32 %14) #9
  %15 = getelementptr inbounds %"class.blink::ScriptCachedMetadataHandler", %"class.blink::ScriptCachedMetadataHandler"* %0, i64 0, i32 1
  %16 = ptrtoint i8* %9 to i64
  %17 = bitcast %class.scoped_refptr* %15 to i64*
  %18 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %15, i64 0, i32 0
  %19 = load %"class.blink::CachedMetadata"*, %"class.blink::CachedMetadata"** %18, align 8
  store i64 %16, i64* %17, align 8
  %20 = icmp eq %"class.blink::CachedMetadata"* %19, null
  br i1 %20, label %42, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %19, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %19, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %23) #9
  %24 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %42

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %22, i64 6
  %29 = bitcast %"class.base::RefCounted"* %28 to %"class.mojo_base::BigBuffer"*
  tail call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* %29) #9
  %30 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %22, i64 2
  %31 = bitcast %"class.base::RefCounted"* %30 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %40, label %34, !prof !3

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %22, i64 5, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %39, label %38, !prof !4

38:                                               ; preds = %34
  store i32 0, i32* %35, align 4
  br label %39

39:                                               ; preds = %38, %34
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %32) #9
  br label %40

40:                                               ; preds = %39, %27
  %41 = bitcast %"class.blink::CachedMetadata"* %19 to i8*
  tail call void @free(i8* %41) #9
  br label %42

42:                                               ; preds = %12, %21, %40
  %43 = getelementptr inbounds %"class.blink::ScriptCachedMetadataHandler", %"class.blink::ScriptCachedMetadataHandler"* %0, i64 0, i32 0, i32 1
  %44 = load i8, i8* %43, align 8, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %42
  tail call void @_ZN5blink27ScriptCachedMetadataHandler25CommitToPersistentStorageEv(%"class.blink::ScriptCachedMetadataHandler"* %0)
  br label %47

47:                                               ; preds = %42, %4, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27ScriptCachedMetadataHandler25CommitToPersistentStorageEv(%"class.blink::ScriptCachedMetadataHandler"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScriptCachedMetadataHandler", %"class.blink::ScriptCachedMetadataHandler"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.blink::CachedMetadata"*, %"class.blink::CachedMetadata"** %2, align 8
  %4 = icmp eq %"class.blink::CachedMetadata"* %3, null
  br i1 %4, label %36, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %3, i64 0, i32 2
  %7 = tail call i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"* %6) #9
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = tail call i8* @_ZNK9mojo_base9BigBuffer4dataEv(%"class.mojo_base::BigBuffer"* %6) #9
  br label %14

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  br label %14

14:                                               ; preds = %11, %9
  %15 = phi i8* [ %10, %9 ], [ %13, %11 ]
  %16 = tail call i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"* %6) #9
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %14
  %19 = tail call i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"* %6) #9
  %20 = icmp ult i64 %19, 4294967296
  br i1 %20, label %22, label %21, !prof !3

21:                                               ; preds = %18
  tail call void @llvm.trap() #9
  unreachable

22:                                               ; preds = %18
  %23 = trunc i64 %19 to i32
  br label %27

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %3, i64 0, i32 1, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  br label %27

27:                                               ; preds = %22, %24
  %28 = phi i32 [ %23, %22 ], [ %26, %24 ]
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"class.blink::ScriptCachedMetadataHandler", %"class.blink::ScriptCachedMetadataHandler"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %31 = load %"class.blink::CachedMetadataSender"*, %"class.blink::CachedMetadataSender"** %30, align 8
  %32 = bitcast %"class.blink::CachedMetadataSender"* %31 to void (%"class.blink::CachedMetadataSender"*, i8*, i64)***
  %33 = load void (%"class.blink::CachedMetadataSender"*, i8*, i64)**, void (%"class.blink::CachedMetadataSender"*, i8*, i64)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::CachedMetadataSender"*, i8*, i64)*, void (%"class.blink::CachedMetadataSender"*, i8*, i64)** %33, i64 2
  %35 = load void (%"class.blink::CachedMetadataSender"*, i8*, i64)*, void (%"class.blink::CachedMetadataSender"*, i8*, i64)** %34, align 8
  tail call void %35(%"class.blink::CachedMetadataSender"* %31, i8* %15, i64 %29) #9
  br label %43

36:                                               ; preds = %1
  %37 = getelementptr inbounds %"class.blink::ScriptCachedMetadataHandler", %"class.blink::ScriptCachedMetadataHandler"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = load %"class.blink::CachedMetadataSender"*, %"class.blink::CachedMetadataSender"** %37, align 8
  %39 = bitcast %"class.blink::CachedMetadataSender"* %38 to void (%"class.blink::CachedMetadataSender"*, i8*, i64)***
  %40 = load void (%"class.blink::CachedMetadataSender"*, i8*, i64)**, void (%"class.blink::CachedMetadataSender"*, i8*, i64)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::CachedMetadataSender"*, i8*, i64)*, void (%"class.blink::CachedMetadataSender"*, i8*, i64)** %40, i64 2
  %42 = load void (%"class.blink::CachedMetadataSender"*, i8*, i64)*, void (%"class.blink::CachedMetadataSender"*, i8*, i64)** %41, align 8
  tail call void %42(%"class.blink::CachedMetadataSender"* %38, i8* null, i64 0) #9
  br label %43

43:                                               ; preds = %36, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27ScriptCachedMetadataHandler19ClearCachedMetadataENS_21CachedMetadataHandler14ClearCacheTypeE(%"class.blink::ScriptCachedMetadataHandler"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ScriptCachedMetadataHandler", %"class.blink::ScriptCachedMetadataHandler"* %0, i64 0, i32 1
  %4 = bitcast %class.scoped_refptr* %3 to i64*
  %5 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %3, i64 0, i32 0
  %6 = load %"class.blink::CachedMetadata"*, %"class.blink::CachedMetadata"** %5, align 8
  store i64 0, i64* %4, align 8
  %7 = icmp eq %"class.blink::CachedMetadata"* %6, null
  br i1 %7, label %29, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %6, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %6, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %10) #9
  %11 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %29

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %9, i64 6
  %16 = bitcast %"class.base::RefCounted"* %15 to %"class.mojo_base::BigBuffer"*
  tail call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* %16) #9
  %17 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %9, i64 2
  %18 = bitcast %"class.base::RefCounted"* %17 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %27, label %21, !prof !3

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %9, i64 5, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %26, label %25, !prof !4

25:                                               ; preds = %21
  store i32 0, i32* %22, align 4
  br label %26

26:                                               ; preds = %25, %21
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %19) #9
  br label %27

27:                                               ; preds = %26, %14
  %28 = bitcast %"class.blink::CachedMetadata"* %6 to i8*
  tail call void @free(i8* %28) #9
  br label %29

29:                                               ; preds = %2, %8, %27
  switch i32 %1, label %33 [
    i32 2, label %32
    i32 1, label %30
  ]

30:                                               ; preds = %29
  %31 = getelementptr inbounds %"class.blink::ScriptCachedMetadataHandler", %"class.blink::ScriptCachedMetadataHandler"* %0, i64 0, i32 2
  store i8 1, i8* %31, align 8
  br label %33

32:                                               ; preds = %29
  tail call void @_ZN5blink27ScriptCachedMetadataHandler25CommitToPersistentStorageEv(%"class.blink::ScriptCachedMetadataHandler"* %0)
  br label %33

33:                                               ; preds = %29, %32, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CachedMetadata"* @_ZNK5blink27ScriptCachedMetadataHandler17GetCachedMetadataEj(%"class.blink::ScriptCachedMetadataHandler"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ScriptCachedMetadataHandler", %"class.blink::ScriptCachedMetadataHandler"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.blink::CachedMetadata"*, %"class.blink::CachedMetadata"** %3, align 8
  %5 = icmp eq %"class.blink::CachedMetadata"* %4, null
  br i1 %5, label %6, label %23

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::ScriptCachedMetadataHandler", %"class.blink::ScriptCachedMetadataHandler"* %0, i64 0, i32 2
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  %10 = select i1 %9, i32 2, i32 3
  %11 = load atomic i64, i64* @_ZZN5blink12_GLOBAL__N_111RecordStateENS_10StateOnGetEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %12 = inttoptr i64 %11 to %"class.base::HistogramBase"*
  %13 = icmp eq i64 %11, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %6
  %15 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3, i64 0, i64 0), i32 1, i32 4, i32 5, i32 1) #9
  %16 = ptrtoint %"class.base::HistogramBase"* %15 to i64
  store atomic i64 %16, i64* @_ZZN5blink12_GLOBAL__N_111RecordStateENS_10StateOnGetEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %17

17:                                               ; preds = %6, %14
  %18 = phi %"class.base::HistogramBase"* [ %12, %6 ], [ %15, %14 ]
  %19 = bitcast %"class.base::HistogramBase"* %18 to void (%"class.base::HistogramBase"*, i32)***
  %20 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %20, i64 6
  %22 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %21, align 8
  tail call void %22(%"class.base::HistogramBase"* %18, i32 %10) #9
  br label %65

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %4, i64 0, i32 2
  %25 = tail call i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"* %24) #9
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  %28 = tail call i8* @_ZNK9mojo_base9BigBuffer4dataEv(%"class.mojo_base::BigBuffer"* %24) #9
  br label %32

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  br label %32

32:                                               ; preds = %27, %29
  %33 = phi i8* [ %28, %27 ], [ %31, %29 ]
  %34 = getelementptr inbounds i8, i8* %33, i64 4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, %1
  %38 = load atomic i64, i64* @_ZZN5blink12_GLOBAL__N_111RecordStateENS_10StateOnGetEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %39 = inttoptr i64 %38 to %"class.base::HistogramBase"*
  %40 = icmp eq i64 %38, 0
  br i1 %37, label %51, label %41

41:                                               ; preds = %32
  br i1 %40, label %42, label %45

42:                                               ; preds = %41
  %43 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3, i64 0, i64 0), i32 1, i32 4, i32 5, i32 1) #9
  %44 = ptrtoint %"class.base::HistogramBase"* %43 to i64
  store atomic i64 %44, i64* @_ZZN5blink12_GLOBAL__N_111RecordStateENS_10StateOnGetEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %45

45:                                               ; preds = %41, %42
  %46 = phi %"class.base::HistogramBase"* [ %39, %41 ], [ %43, %42 ]
  %47 = bitcast %"class.base::HistogramBase"* %46 to void (%"class.base::HistogramBase"*, i32)***
  %48 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %48, i64 6
  %50 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %49, align 8
  tail call void %50(%"class.base::HistogramBase"* %46, i32 1) #9
  br label %65

51:                                               ; preds = %32
  br i1 %40, label %52, label %55

52:                                               ; preds = %51
  %53 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3, i64 0, i64 0), i32 1, i32 4, i32 5, i32 1) #9
  %54 = ptrtoint %"class.base::HistogramBase"* %53 to i64
  store atomic i64 %54, i64* @_ZZN5blink12_GLOBAL__N_111RecordStateENS_10StateOnGetEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %55

55:                                               ; preds = %51, %52
  %56 = phi %"class.base::HistogramBase"* [ %39, %51 ], [ %53, %52 ]
  %57 = bitcast %"class.base::HistogramBase"* %56 to void (%"class.base::HistogramBase"*, i32)***
  %58 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %58, i64 6
  %60 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %59, align 8
  tail call void %60(%"class.base::HistogramBase"* %56, i32 0) #9
  %61 = load %"class.blink::CachedMetadata"*, %"class.blink::CachedMetadata"** %3, align 8
  %62 = icmp eq %"class.blink::CachedMetadata"* %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %61, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %64) #9
  br label %65

65:                                               ; preds = %63, %55, %45, %17
  %66 = phi %"class.blink::CachedMetadata"* [ null, %45 ], [ null, %17 ], [ null, %55 ], [ %61, %63 ]
  ret %"class.blink::CachedMetadata"* %66
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27ScriptCachedMetadataHandler27SetSerializedCachedMetadataEN9mojo_base9BigBufferE(%"class.blink::ScriptCachedMetadataHandler"* nocapture, %"class.mojo_base::BigBuffer"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo_base::BigBuffer", align 8
  call void @_ZN9mojo_base9BigBufferC1EOS0_(%"class.mojo_base::BigBuffer"* nonnull %3, %"class.mojo_base::BigBuffer"* dereferenceable(56) %1) #9
  %4 = call %"class.blink::CachedMetadata"* @_ZN5blink14CachedMetadata24CreateFromSerializedDataEN9mojo_base9BigBufferE(%"class.mojo_base::BigBuffer"* nonnull %3) #9
  %5 = getelementptr inbounds %"class.blink::ScriptCachedMetadataHandler", %"class.blink::ScriptCachedMetadataHandler"* %0, i64 0, i32 1
  %6 = ptrtoint %"class.blink::CachedMetadata"* %4 to i64
  %7 = bitcast %class.scoped_refptr* %5 to i64*
  %8 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %5, i64 0, i32 0
  %9 = load %"class.blink::CachedMetadata"*, %"class.blink::CachedMetadata"** %8, align 8
  store i64 %6, i64* %7, align 8
  %10 = icmp eq %"class.blink::CachedMetadata"* %9, null
  br i1 %10, label %32, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %9, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %9, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %13) #9
  %14 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %32

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %12, i64 6
  %19 = bitcast %"class.base::RefCounted"* %18 to %"class.mojo_base::BigBuffer"*
  call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* %19) #9
  %20 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %12, i64 2
  %21 = bitcast %"class.base::RefCounted"* %20 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %30, label %24, !prof !3

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %12, i64 5, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %29, label %28, !prof !4

28:                                               ; preds = %24
  store i32 0, i32* %25, align 4
  br label %29

29:                                               ; preds = %28, %24
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %22) #9
  br label %30

30:                                               ; preds = %29, %17
  %31 = bitcast %"class.blink::CachedMetadata"* %9 to i8*
  call void @free(i8* %31) #9
  br label %32

32:                                               ; preds = %2, %11, %30
  call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* nonnull %3) #9
  ret void
}

declare %"class.blink::CachedMetadata"* @_ZN5blink14CachedMetadata24CreateFromSerializedDataEN9mojo_base9BigBufferE(%"class.mojo_base::BigBuffer"*) local_unnamed_addr #2

declare void @_ZN9mojo_base9BigBufferC1EOS0_(%"class.mojo_base::BigBuffer"*, %"class.mojo_base::BigBuffer"* dereferenceable(56)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink27ScriptCachedMetadataHandler8EncodingEv(%"class.blink::ScriptCachedMetadataHandler"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::ScriptCachedMetadataHandler", %"class.blink::ScriptCachedMetadataHandler"* %0, i64 0, i32 4, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = tail call i64 @strlen(i8* nonnull %4) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i64 [ %7, %6 ], [ 0, %1 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %4, i64 %9) #9
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  ret %"class.WTF::StringImpl"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink27ScriptCachedMetadataHandler24IsServedFromCacheStorageEv(%"class.blink::ScriptCachedMetadataHandler"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScriptCachedMetadataHandler", %"class.blink::ScriptCachedMetadataHandler"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.blink::CachedMetadataSender"*, %"class.blink::CachedMetadataSender"** %2, align 8
  %4 = bitcast %"class.blink::CachedMetadataSender"* %3 to i1 (%"class.blink::CachedMetadataSender"*)***
  %5 = load i1 (%"class.blink::CachedMetadataSender"*)**, i1 (%"class.blink::CachedMetadataSender"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::CachedMetadataSender"*)*, i1 (%"class.blink::CachedMetadataSender"*)** %5, i64 3
  %7 = load i1 (%"class.blink::CachedMetadataSender"*)*, i1 (%"class.blink::CachedMetadataSender"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::CachedMetadataSender"* %3) #9
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink27ScriptCachedMetadataHandler12OnMemoryDumpEPNS_20WebProcessMemoryDumpERKN3WTF6StringE(%"class.blink::ScriptCachedMetadataHandler"* nocapture readonly, %"class.blink::WebProcessMemoryDump"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::StringAppend", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.blink::ScriptCachedMetadataHandler", %"class.blink::ScriptCachedMetadataHandler"* %0, i64 0, i32 1, i32 0
  %8 = load %"class.blink::CachedMetadata"*, %"class.blink::CachedMetadata"** %7, align 8
  %9 = icmp eq %"class.blink::CachedMetadata"* %8, null
  br i1 %9, label %148, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %12, align 8
  %13 = bitcast %"class.WTF::StringAppend"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #9
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %61, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %34

24:                                               ; preds = %17
  %25 = zext i32 %23 to i33
  %26 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %25, i33 1) #9
  %27 = extractvalue { i33, i1 } %26, 1
  %28 = extractvalue { i33, i1 } %26, 0
  %29 = icmp slt i33 %28, 0
  %30 = or i1 %27, %29
  br i1 %30, label %31, label %32, !prof !4

31:                                               ; preds = %24
  tail call void @llvm.trap() #9
  unreachable

32:                                               ; preds = %24
  %33 = trunc i33 %28 to i32
  store i32 %33, i32* %22, align 4
  br label %34

34:                                               ; preds = %17, %32
  %35 = phi i32 [ %33, %32 ], [ %23, %17 ]
  %36 = load atomic i32, i32* %18 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  br i1 %38, label %40, label %50

40:                                               ; preds = %34
  %41 = zext i32 %35 to i33
  %42 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #9
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !4

47:                                               ; preds = %40
  tail call void @llvm.trap() #9
  unreachable

48:                                               ; preds = %40
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %39, align 4
  br label %50

50:                                               ; preds = %48, %34
  %51 = phi i32 [ %49, %48 ], [ %35, %34 ]
  %52 = load atomic i32, i32* %18 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %50
  %56 = add i32 %51, -1
  store i32 %56, i32* %39, align 4
  br label %57

57:                                               ; preds = %55, %50
  %58 = phi i32 [ %56, %55 ], [ %51, %50 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #9
  br label %61

61:                                               ; preds = %10, %57, %60
  %62 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"** %62, align 8
  %63 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i8** %63, align 8
  %64 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"* nonnull %5)
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %12, align 8
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #9
  br label %80

80:                                               ; preds = %61, %76, %79
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #9
  %81 = call %"class.blink::WebMemoryAllocatorDump"* @_ZN5blink20WebProcessMemoryDump25CreateMemoryAllocatorDumpERKN3WTF6StringE(%"class.blink::WebProcessMemoryDump"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %4) #9
  %82 = load %"class.blink::CachedMetadata"*, %"class.blink::CachedMetadata"** %7, align 8
  %83 = icmp eq %"class.blink::CachedMetadata"* %82, null
  br i1 %83, label %105, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %82, i64 0, i32 2
  %86 = call i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"* %85) #9
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %84
  %89 = call i8* @_ZNK9mojo_base9BigBuffer4dataEv(%"class.mojo_base::BigBuffer"* %85) #9
  br label %90

90:                                               ; preds = %88, %84
  %91 = call i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"* %85) #9
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %99, label %93

93:                                               ; preds = %90
  %94 = call i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"* %85) #9
  %95 = icmp ult i64 %94, 4294967296
  br i1 %95, label %97, label %96, !prof !3

96:                                               ; preds = %93
  call void @llvm.trap() #9
  unreachable

97:                                               ; preds = %93
  %98 = trunc i64 %94 to i32
  br label %102

99:                                               ; preds = %90
  %100 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %82, i64 0, i32 1, i32 0, i32 0, i32 2
  %101 = load i32, i32* %100, align 4
  br label %102

102:                                              ; preds = %99, %97
  %103 = phi i32 [ %98, %97 ], [ %101, %99 ]
  %104 = zext i32 %103 to i64
  br label %105

105:                                              ; preds = %80, %102
  %106 = phi i64 [ %104, %102 ], [ 0, %80 ]
  call void @_ZN5blink22WebMemoryAllocatorDump9AddScalarEPKcS2_m(%"class.blink::WebMemoryAllocatorDump"* %81, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 %106) #9
  %107 = call i64 @_ZNK5blink22WebMemoryAllocatorDump4GuidEv(%"class.blink::WebMemoryAllocatorDump"* %81) #9
  %108 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #9
  %109 = load i8*, i8** @_ZN3WTF10Partitions24kAllocatedObjectPoolNameE, align 8
  %110 = icmp eq i8* %109, null
  br i1 %110, label %113, label %111

111:                                              ; preds = %105
  %112 = call i64 @strlen(i8* nonnull %109) #10
  br label %113

113:                                              ; preds = %105, %111
  %114 = phi i64 [ %112, %111 ], [ 0, %105 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* %109, i64 %114) #9
  call void @_ZN5blink20WebProcessMemoryDump16AddSuballocationEmRKN3WTF6StringE(%"class.blink::WebProcessMemoryDump"* %1, i64 %107, %"class.WTF::String"* nonnull dereferenceable(8) %6) #9
  %115 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #9
  br label %131

131:                                              ; preds = %113, %127, %130
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #9
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %131
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #9
  br label %147

147:                                              ; preds = %131, %143, %146
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  br label %148

148:                                              ; preds = %3, %147
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.214", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.214", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.214", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = select i1 %11, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %10
  %14 = bitcast %"class.WTF::StringTypeAdapter.214"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #9
  %16 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.214"* nonnull %6, i8* %16) #9
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #9
  br i1 %20, label %81, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #9
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #9
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false) #9
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %21
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %39

33:                                               ; preds = %21
  %34 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  %38 = bitcast %"class.WTF::StringImpl"* %37 to i8*
  br label %39

39:                                               ; preds = %31, %33
  %40 = phi i8* [ null, %31 ], [ %38, %33 ]
  %41 = phi i64 [ %32, %31 ], [ %34, %33 ]
  %42 = phi i32 [ 0, %31 ], [ %36, %33 ]
  %43 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i64*
  store i64 %41, i64* %43, align 8
  store i8* %40, i8** %27, align 8
  store i32 %42, i32* %28, align 8
  %44 = bitcast %"class.WTF::StringTypeAdapter.214"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false) #9
  %45 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.214"* nonnull %5, i8* %45) #9
  %46 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.213"* nonnull %46, i8* %25) #9
  %47 = load i32, i32* %28, align 8
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %25, i64 %48
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.214"* nonnull %5, i8* %49) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #9
  %50 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %50, label %141, label %51

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %68

58:                                               ; preds = %51
  %59 = zext i32 %57 to i33
  %60 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #9
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !4

65:                                               ; preds = %58
  call void @llvm.trap() #9
  unreachable

66:                                               ; preds = %58
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %56, align 4
  br label %68

68:                                               ; preds = %51, %66
  %69 = phi i32 [ %67, %66 ], [ %57, %51 ]
  %70 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %71 = load atomic i32, i32* %52 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %76 = add i32 %69, -1
  store i32 %76, i32* %75, align 4
  br label %77

77:                                               ; preds = %74, %68
  %78 = phi i32 [ %76, %74 ], [ %69, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %141

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #9
  br label %141

81:                                               ; preds = %1
  %82 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #9
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %83 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %0)
  %84 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %83, i16** nonnull dereferenceable(8) %8) #9
  %85 = load i16*, i16** %8, align 8
  %86 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #9
  %87 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 1
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 24, i1 false) #9
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %91, label %93

91:                                               ; preds = %81
  %92 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %99

93:                                               ; preds = %81
  %94 = ptrtoint %"class.WTF::StringImpl"* %89 to i64
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 1
  %98 = bitcast %"class.WTF::StringImpl"* %97 to i8*
  br label %99

99:                                               ; preds = %91, %93
  %100 = phi i8* [ null, %91 ], [ %98, %93 ]
  %101 = phi i64 [ %92, %91 ], [ %94, %93 ]
  %102 = phi i32 [ 0, %91 ], [ %96, %93 ]
  %103 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i64*
  store i64 %101, i64* %103, align 8
  store i8* %100, i8** %87, align 8
  store i32 %102, i32* %88, align 8
  %104 = bitcast %"class.WTF::StringTypeAdapter.214"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 -86, i64 16, i1 false) #9
  %105 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.214"* nonnull %3, i8* %105) #9
  %106 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.213"* nonnull %106, i16* %85) #9
  %107 = load i32, i32* %88, align 8
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i16, i16* %85, i64 %108
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.214"* nonnull %3, i16* %109) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #9
  %110 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %110, label %141, label %111

111:                                              ; preds = %99
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %128

118:                                              ; preds = %111
  %119 = zext i32 %117 to i33
  %120 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %119, i33 1) #9
  %121 = extractvalue { i33, i1 } %120, 1
  %122 = extractvalue { i33, i1 } %120, 0
  %123 = icmp slt i33 %122, 0
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126, !prof !4

125:                                              ; preds = %118
  call void @llvm.trap() #9
  unreachable

126:                                              ; preds = %118
  %127 = trunc i33 %122 to i32
  store i32 %127, i32* %116, align 4
  br label %128

128:                                              ; preds = %111, %126
  %129 = phi i32 [ %127, %126 ], [ %117, %111 ]
  %130 = ptrtoint %"class.WTF::StringImpl"* %84 to i64
  %131 = load atomic i32, i32* %112 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %136 = add i32 %129, -1
  store i32 %136, i32* %135, align 4
  br label %137

137:                                              ; preds = %134, %128
  %138 = phi i32 [ %136, %134 ], [ %129, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #9
  br label %141

141:                                              ; preds = %140, %137, %99, %80, %77, %39
  %142 = phi i8* [ %22, %39 ], [ %22, %77 ], [ %22, %80 ], [ %82, %99 ], [ %82, %137 ], [ %82, %140 ]
  %143 = phi i64 [ 0, %39 ], [ %70, %77 ], [ %70, %80 ], [ 0, %99 ], [ %130, %137 ], [ %130, %140 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #9
  %144 = inttoptr i64 %143 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %144
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare %"class.blink::WebMemoryAllocatorDump"* @_ZN5blink20WebProcessMemoryDump25CreateMemoryAllocatorDumpERKN3WTF6StringE(%"class.blink::WebProcessMemoryDump"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink22WebMemoryAllocatorDump9AddScalarEPKcS2_m(%"class.blink::WebMemoryAllocatorDump"*, i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink27ScriptCachedMetadataHandler16GetCodeCacheSizeEv(%"class.blink::ScriptCachedMetadataHandler"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScriptCachedMetadataHandler", %"class.blink::ScriptCachedMetadataHandler"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.blink::CachedMetadata"*, %"class.blink::CachedMetadata"** %2, align 8
  %4 = icmp eq %"class.blink::CachedMetadata"* %3, null
  br i1 %4, label %26, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %3, i64 0, i32 2
  %7 = tail call i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"* %6) #9
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = tail call i8* @_ZNK9mojo_base9BigBuffer4dataEv(%"class.mojo_base::BigBuffer"* %6) #9
  br label %11

11:                                               ; preds = %5, %9
  %12 = tail call i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"* %6) #9
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = tail call i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"* %6) #9
  %16 = icmp ult i64 %15, 4294967296
  br i1 %16, label %18, label %17, !prof !3

17:                                               ; preds = %14
  tail call void @llvm.trap() #9
  unreachable

18:                                               ; preds = %14
  %19 = trunc i64 %15 to i32
  br label %23

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %3, i64 0, i32 1, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  br label %23

23:                                               ; preds = %18, %20
  %24 = phi i32 [ %19, %18 ], [ %22, %20 ]
  %25 = zext i32 %24 to i64
  br label %26

26:                                               ; preds = %1, %23
  %27 = phi i64 [ %25, %23 ], [ 0, %1 ]
  ret i64 %27
}

declare void @_ZN5blink20WebProcessMemoryDump16AddSuballocationEmRKN3WTF6StringE(%"class.blink::WebProcessMemoryDump"*, i64, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare i64 @_ZNK5blink22WebMemoryAllocatorDump4GuidEv(%"class.blink::WebMemoryAllocatorDump"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink27ScriptCachedMetadataHandlerD2Ev(%"class.blink::ScriptCachedMetadataHandler"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ScriptCachedMetadataHandler", %"class.blink::ScriptCachedMetadataHandler"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink27ScriptCachedMetadataHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ScriptCachedMetadataHandler", %"class.blink::ScriptCachedMetadataHandler"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.blink::CachedMetadataSender"*, %"class.blink::CachedMetadataSender"** %3, align 8
  store %"class.blink::CachedMetadataSender"* null, %"class.blink::CachedMetadataSender"** %3, align 8
  %5 = icmp eq %"class.blink::CachedMetadataSender"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::CachedMetadataSender"* %4 to void (%"class.blink::CachedMetadataSender"*)***
  %8 = load void (%"class.blink::CachedMetadataSender"*)**, void (%"class.blink::CachedMetadataSender"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::CachedMetadataSender"*)*, void (%"class.blink::CachedMetadataSender"*)** %8, i64 1
  %10 = load void (%"class.blink::CachedMetadataSender"*)*, void (%"class.blink::CachedMetadataSender"*)** %9, align 8
  tail call void %10(%"class.blink::CachedMetadataSender"* nonnull %4) #9
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.blink::ScriptCachedMetadataHandler", %"class.blink::ScriptCachedMetadataHandler"* %0, i64 0, i32 1, i32 0
  %13 = load %"class.blink::CachedMetadata"*, %"class.blink::CachedMetadata"** %12, align 8
  %14 = icmp eq %"class.blink::CachedMetadata"* %13, null
  br i1 %14, label %36, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %13, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %13, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %17) #9
  %18 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %36

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %16, i64 6
  %23 = bitcast %"class.base::RefCounted"* %22 to %"class.mojo_base::BigBuffer"*
  tail call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* %23) #9
  %24 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %16, i64 2
  %25 = bitcast %"class.base::RefCounted"* %24 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %34, label %28, !prof !3

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %16, i64 5, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %33, label %32, !prof !4

32:                                               ; preds = %28
  store i32 0, i32* %29, align 4
  br label %33

33:                                               ; preds = %32, %28
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #9
  br label %34

34:                                               ; preds = %33, %21
  %35 = bitcast %"class.blink::CachedMetadata"* %13 to i8*
  tail call void @free(i8* %35) #9
  br label %36

36:                                               ; preds = %11, %15, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink27ScriptCachedMetadataHandlerD0Ev(%"class.blink::ScriptCachedMetadataHandler"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ScriptCachedMetadataHandler", %"class.blink::ScriptCachedMetadataHandler"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink27ScriptCachedMetadataHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ScriptCachedMetadataHandler", %"class.blink::ScriptCachedMetadataHandler"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.blink::CachedMetadataSender"*, %"class.blink::CachedMetadataSender"** %3, align 8
  store %"class.blink::CachedMetadataSender"* null, %"class.blink::CachedMetadataSender"** %3, align 8
  %5 = icmp eq %"class.blink::CachedMetadataSender"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::CachedMetadataSender"* %4 to void (%"class.blink::CachedMetadataSender"*)***
  %8 = load void (%"class.blink::CachedMetadataSender"*)**, void (%"class.blink::CachedMetadataSender"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::CachedMetadataSender"*)*, void (%"class.blink::CachedMetadataSender"*)** %8, i64 1
  %10 = load void (%"class.blink::CachedMetadataSender"*)*, void (%"class.blink::CachedMetadataSender"*)** %9, align 8
  tail call void %10(%"class.blink::CachedMetadataSender"* nonnull %4) #9
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.blink::ScriptCachedMetadataHandler", %"class.blink::ScriptCachedMetadataHandler"* %0, i64 0, i32 1, i32 0
  %13 = load %"class.blink::CachedMetadata"*, %"class.blink::CachedMetadata"** %12, align 8
  %14 = icmp eq %"class.blink::CachedMetadata"* %13, null
  br i1 %14, label %36, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %13, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %13, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %17) #9
  %18 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %36

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %16, i64 6
  %23 = bitcast %"class.base::RefCounted"* %22 to %"class.mojo_base::BigBuffer"*
  tail call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* %23) #9
  %24 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %16, i64 2
  %25 = bitcast %"class.base::RefCounted"* %24 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %34, label %28, !prof !3

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %16, i64 5, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %33, label %32, !prof !4

32:                                               ; preds = %28
  store i32 0, i32* %29, align 4
  br label %33

33:                                               ; preds = %32, %28
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #9
  br label %34

34:                                               ; preds = %33, %21
  %35 = bitcast %"class.blink::CachedMetadata"* %13 to i8*
  tail call void @free(i8* %35) #9
  br label %36

36:                                               ; preds = %11, %15, %34
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZN5blink14CachedMetadataC1EjPKhj(%"class.blink::CachedMetadata"*, i32, i8*, i32) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #2

declare i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"*) local_unnamed_addr #2

declare i8* @_ZNK9mojo_base9BigBuffer4dataEv(%"class.mojo_base::BigBuffer"*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.214", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter.214"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #9
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter.214", %"class.WTF::StringTypeAdapter.214"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter.214"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.214"* nonnull %4, i8* %21) #9
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #9
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0), i8* %30, i8* %31) #9
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.5, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #9
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #9
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #9
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #9
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0), i8* %46, i8* %47) #9
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.5, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #9
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #9
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #9
  ret i32 %23
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.214"*, i8*) unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.213"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.214"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.213"*, i16*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.214"*, i16*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
