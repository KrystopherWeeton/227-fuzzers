; ModuleID = '../../components/permissions/permission_request_impl.cc'
source_filename = "../../components/permissions/permission_request_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.permissions::PermissionRequestImpl" = type { %"class.permissions::PermissionRequest", %class.GURL, i32, i8, %"class.base::OnceCallback", %"class.base::OnceCallback.5" }
%"class.permissions::PermissionRequest" = type { i32 (...)** }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::OnceCallback.5" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.6 }
%union.anon.6 = type { %"class.std::__1::basic_string.7" }
%"class.std::__1::basic_string.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.10 }
%union.anon.10 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }

@_ZTVN11permissions21PermissionRequestImplE = hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.permissions::PermissionRequestImpl"*)* @_ZN11permissions21PermissionRequestImplD2Ev to i8*), i8* bitcast (void (%"class.permissions::PermissionRequestImpl"*)* @_ZN11permissions21PermissionRequestImplD0Ev to i8*), i8* bitcast (i32 (%"class.permissions::PermissionRequestImpl"*)* @_ZNK11permissions21PermissionRequestImpl14GetRequestTypeEv to i8*), i8* bitcast (i1 (%"class.permissions::PermissionRequest"*, %"class.permissions::PermissionRequest"*)* @_ZNK11permissions17PermissionRequest13IsDuplicateOfEPS0_ to i8*), i8* bitcast (void (%"class.absl::optional"*, %"class.permissions::PermissionRequestImpl"*)* @_ZNK11permissions21PermissionRequestImpl11GetChipTextEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string.7"*, %"class.permissions::PermissionRequestImpl"*)* @_ZNK11permissions21PermissionRequestImpl22GetMessageTextFragmentEv to i8*), i8* bitcast (void (%class.GURL*, %"class.permissions::PermissionRequestImpl"*)* @_ZNK11permissions21PermissionRequestImpl9GetOriginEv to i8*), i8* bitcast (void (%"class.permissions::PermissionRequestImpl"*, i1)* @_ZN11permissions21PermissionRequestImpl17PermissionGrantedEb to i8*), i8* bitcast (void (%"class.permissions::PermissionRequestImpl"*)* @_ZN11permissions21PermissionRequestImpl16PermissionDeniedEv to i8*), i8* bitcast (void (%"class.permissions::PermissionRequestImpl"*)* @_ZN11permissions21PermissionRequestImpl9CancelledEv to i8*), i8* bitcast (void (%"class.permissions::PermissionRequestImpl"*)* @_ZN11permissions21PermissionRequestImpl15RequestFinishedEv to i8*), i8* bitcast (i32 (%"class.permissions::PermissionRequestImpl"*)* @_ZNK11permissions21PermissionRequestImpl14GetGestureTypeEv to i8*), i8* bitcast (i32 (%"class.permissions::PermissionRequestImpl"*)* @_ZNK11permissions21PermissionRequestImpl22GetContentSettingsTypeEv to i8*)] }, align 8

@_ZN11permissions21PermissionRequestImplC1ERK4GURL19ContentSettingsTypebN4base12OnceCallbackIFv14ContentSettingbEEENS6_IFvvEEE = hidden unnamed_addr alias void (%"class.permissions::PermissionRequestImpl"*, %class.GURL*, i32, i1, %"class.base::OnceCallback"*, %"class.base::OnceCallback.5"*), void (%"class.permissions::PermissionRequestImpl"*, %class.GURL*, i32, i1, %"class.base::OnceCallback"*, %"class.base::OnceCallback.5"*)* @_ZN11permissions21PermissionRequestImplC2ERK4GURL19ContentSettingsTypebN4base12OnceCallbackIFv14ContentSettingbEEENS6_IFvvEEE
@_ZN11permissions21PermissionRequestImplD1Ev = hidden unnamed_addr alias void (%"class.permissions::PermissionRequestImpl"*), void (%"class.permissions::PermissionRequestImpl"*)* @_ZN11permissions21PermissionRequestImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11permissions21PermissionRequestImplC2ERK4GURL19ContentSettingsTypebN4base12OnceCallbackIFv14ContentSettingbEEENS6_IFvvEEE(%"class.permissions::PermissionRequestImpl"*, %class.GURL* dereferenceable(120), i32, i1 zeroext, %"class.base::OnceCallback"* nocapture, %"class.base::OnceCallback.5"* nocapture) unnamed_addr #0 align 2 {
  %7 = zext i1 %3 to i8
  %8 = getelementptr inbounds %"class.permissions::PermissionRequestImpl", %"class.permissions::PermissionRequestImpl"* %0, i64 0, i32 0
  tail call void @_ZN11permissions17PermissionRequestC2Ev(%"class.permissions::PermissionRequest"* %8) #6
  %9 = getelementptr inbounds %"class.permissions::PermissionRequestImpl", %"class.permissions::PermissionRequestImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN11permissions21PermissionRequestImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.permissions::PermissionRequestImpl", %"class.permissions::PermissionRequestImpl"* %0, i64 0, i32 1
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %10, %class.GURL* dereferenceable(120) %1) #6
  %11 = getelementptr inbounds %"class.permissions::PermissionRequestImpl", %"class.permissions::PermissionRequestImpl"* %0, i64 0, i32 2
  store i32 %2, i32* %11, align 8
  %12 = getelementptr inbounds %"class.permissions::PermissionRequestImpl", %"class.permissions::PermissionRequestImpl"* %0, i64 0, i32 3
  store i8 %7, i8* %12, align 4
  %13 = getelementptr inbounds %"class.permissions::PermissionRequestImpl", %"class.permissions::PermissionRequestImpl"* %0, i64 0, i32 4
  %14 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.base::OnceCallback"* %4 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.base::OnceCallback"* %13 to i64*
  store i64 %16, i64* %17, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %14, align 8
  %18 = getelementptr inbounds %"class.permissions::PermissionRequestImpl", %"class.permissions::PermissionRequestImpl"* %0, i64 0, i32 5
  %19 = getelementptr inbounds %"class.base::OnceCallback.5", %"class.base::OnceCallback.5"* %5, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.base::OnceCallback.5"* %5 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.base::OnceCallback.5"* %18 to i64*
  store i64 %21, i64* %22, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %19, align 8
  ret void
}

declare void @_ZN11permissions17PermissionRequestC2Ev(%"class.permissions::PermissionRequest"*) unnamed_addr #1

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11permissions21PermissionRequestImplD2Ev(%"class.permissions::PermissionRequestImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.permissions::PermissionRequestImpl", %"class.permissions::PermissionRequestImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN11permissions21PermissionRequestImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.permissions::PermissionRequestImpl", %"class.permissions::PermissionRequestImpl"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #6
  %4 = getelementptr inbounds %"class.permissions::PermissionRequestImpl", %"class.permissions::PermissionRequestImpl"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %4) #6
  %5 = getelementptr inbounds %"class.permissions::PermissionRequestImpl", %"class.permissions::PermissionRequestImpl"* %0, i64 0, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %5) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11permissions21PermissionRequestImplD0Ev(%"class.permissions::PermissionRequestImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.permissions::PermissionRequestImpl", %"class.permissions::PermissionRequestImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN11permissions21PermissionRequestImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.permissions::PermissionRequestImpl", %"class.permissions::PermissionRequestImpl"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #6
  %4 = getelementptr inbounds %"class.permissions::PermissionRequestImpl", %"class.permissions::PermissionRequestImpl"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %4) #6
  %5 = getelementptr inbounds %"class.permissions::PermissionRequestImpl", %"class.permissions::PermissionRequestImpl"* %0, i64 0, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %5) #6
  %6 = bitcast %"class.permissions::PermissionRequestImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK11permissions21PermissionRequestImpl14GetRequestTypeEv(%"class.permissions::PermissionRequestImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.permissions::PermissionRequestImpl", %"class.permissions::PermissionRequestImpl"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = tail call i32 @_ZN11permissions32ContentSettingsTypeToRequestTypeE19ContentSettingsType(i32 %3) #6
  ret i32 %4
}

declare i32 @_ZN11permissions32ContentSettingsTypeToRequestTypeE19ContentSettingsType(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK11permissions21PermissionRequestImpl11GetChipTextEv(%"class.absl::optional"* noalias nocapture sret, %"class.permissions::PermissionRequestImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string.7", align 8
  %4 = getelementptr inbounds %"class.permissions::PermissionRequestImpl", %"class.permissions::PermissionRequestImpl"* %1, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %14 [
    i32 4, label %18
    i32 5, label %6
    i32 13, label %7
    i32 8, label %8
    i32 9, label %9
    i32 52, label %10
    i32 55, label %11
    i32 56, label %12
    i32 38, label %13
  ]

6:                                                ; preds = %2
  br label %18

7:                                                ; preds = %2
  br label %18

8:                                                ; preds = %2
  br label %18

9:                                                ; preds = %2
  br label %18

10:                                               ; preds = %2
  br label %18

11:                                               ; preds = %2
  br label %18

12:                                               ; preds = %2
  br label %18

13:                                               ; preds = %2
  br label %18

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %15, align 8
  %16 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast %union.anon.6* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #6
  br label %24

18:                                               ; preds = %6, %7, %8, %9, %10, %11, %12, %13, %2
  %19 = phi i32 [ 20254, %13 ], [ 20253, %12 ], [ 20252, %11 ], [ 20251, %10 ], [ 20249, %9 ], [ 20248, %8 ], [ 20247, %7 ], [ 20246, %6 ], [ 20245, %2 ]
  %20 = bitcast %"class.std::__1::basic_string.7"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #6
  call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.7"* nonnull sret %3, i32 %19) #6
  %21 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %21, align 8
  %22 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %23 = bitcast %"class.std::__1::basic_string.7"* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* nonnull align 8 %20, i64 24, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #6
  br label %24

24:                                               ; preds = %18, %14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.7"* sret, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK11permissions21PermissionRequestImpl22GetMessageTextFragmentEv(%"class.std::__1::basic_string.7"* noalias sret, %"class.permissions::PermissionRequestImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.permissions::PermissionRequestImpl", %"class.permissions::PermissionRequestImpl"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %19 [
    i32 4, label %21
    i32 5, label %5
    i32 13, label %6
    i32 8, label %7
    i32 9, label %8
    i32 59, label %9
    i32 33, label %10
    i32 52, label %11
    i32 50, label %12
    i32 55, label %13
    i32 56, label %14
    i32 58, label %15
    i32 60, label %16
    i32 62, label %17
    i32 38, label %18
  ]

5:                                                ; preds = %2
  br label %21

6:                                                ; preds = %2
  br label %21

7:                                                ; preds = %2
  br label %21

8:                                                ; preds = %2
  br label %21

9:                                                ; preds = %2
  br label %21

10:                                               ; preds = %2
  br label %21

11:                                               ; preds = %2
  br label %21

12:                                               ; preds = %2
  br label %21

13:                                               ; preds = %2
  br label %21

14:                                               ; preds = %2
  br label %21

15:                                               ; preds = %2
  br label %21

16:                                               ; preds = %2
  br label %21

17:                                               ; preds = %2
  br label %21

18:                                               ; preds = %2
  br label %21

19:                                               ; preds = %2
  %20 = bitcast %"class.std::__1::basic_string.7"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #6
  br label %23

21:                                               ; preds = %2, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5
  %22 = phi i32 [ 20228, %18 ], [ 20227, %17 ], [ 20226, %16 ], [ 20224, %15 ], [ 20223, %14 ], [ 20222, %13 ], [ 20221, %12 ], [ 20220, %11 ], [ 20219, %10 ], [ 20218, %9 ], [ 20217, %8 ], [ 20216, %7 ], [ 20215, %6 ], [ 20214, %5 ], [ 20213, %2 ]
  tail call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.7"* sret %0, i32 %22) #6
  br label %23

23:                                               ; preds = %21, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK11permissions21PermissionRequestImpl9GetOriginEv(%class.GURL* noalias sret, %"class.permissions::PermissionRequestImpl"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.permissions::PermissionRequestImpl", %"class.permissions::PermissionRequestImpl"* %1, i64 0, i32 1
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %0, %class.GURL* dereferenceable(120) %3) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11permissions21PermissionRequestImpl17PermissionGrantedEb(%"class.permissions::PermissionRequestImpl"* nocapture, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.permissions::PermissionRequestImpl", %"class.permissions::PermissionRequestImpl"* %0, i64 0, i32 4
  %5 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.base::OnceCallback"* %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %8, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %11 = inttoptr i64 %8 to %"class.base::internal::BindStateBase"*
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %11, i64 0, i32 1
  %13 = bitcast void ()** %12 to void (%"class.base::internal::BindStateBase"*, i32, i1)**
  %14 = load void (%"class.base::internal::BindStateBase"*, i32, i1)*, void (%"class.base::internal::BindStateBase"*, i32, i1)** %13, align 8
  tail call void %14(%"class.base::internal::BindStateBase"* %11, i32 1, i1 zeroext %1) #6
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %10) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11permissions21PermissionRequestImpl16PermissionDeniedEv(%"class.permissions::PermissionRequestImpl"* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.permissions::PermissionRequestImpl", %"class.permissions::PermissionRequestImpl"* %0, i64 0, i32 4
  %4 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #6
  %5 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %7, i64* %8, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %5, align 8
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %10 = inttoptr i64 %7 to %"class.base::internal::BindStateBase"*
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %10, i64 0, i32 1
  %12 = bitcast void ()** %11 to void (%"class.base::internal::BindStateBase"*, i32, i1)**
  %13 = load void (%"class.base::internal::BindStateBase"*, i32, i1)*, void (%"class.base::internal::BindStateBase"*, i32, i1)** %12, align 8
  tail call void %13(%"class.base::internal::BindStateBase"* %10, i32 2, i1 zeroext false) #6
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11permissions21PermissionRequestImpl9CancelledEv(%"class.permissions::PermissionRequestImpl"* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.permissions::PermissionRequestImpl", %"class.permissions::PermissionRequestImpl"* %0, i64 0, i32 4
  %4 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #6
  %5 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %7, i64* %8, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %5, align 8
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %10 = inttoptr i64 %7 to %"class.base::internal::BindStateBase"*
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %10, i64 0, i32 1
  %12 = bitcast void ()** %11 to void (%"class.base::internal::BindStateBase"*, i32, i1)**
  %13 = load void (%"class.base::internal::BindStateBase"*, i32, i1)*, void (%"class.base::internal::BindStateBase"*, i32, i1)** %12, align 8
  tail call void %13(%"class.base::internal::BindStateBase"* %10, i32 0, i1 zeroext false) #6
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11permissions21PermissionRequestImpl15RequestFinishedEv(%"class.permissions::PermissionRequestImpl"* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback.5", align 8
  %3 = getelementptr inbounds %"class.permissions::PermissionRequestImpl", %"class.permissions::PermissionRequestImpl"* %0, i64 0, i32 5
  %4 = bitcast %"class.base::OnceCallback.5"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #6
  %5 = getelementptr inbounds %"class.base::OnceCallback.5", %"class.base::OnceCallback.5"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.base::OnceCallback.5"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.base::OnceCallback.5"* %2 to i64*
  store i64 %7, i64* %8, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %5, align 8
  %9 = getelementptr inbounds %"class.base::OnceCallback.5", %"class.base::OnceCallback.5"* %2, i64 0, i32 0
  %10 = inttoptr i64 %7 to %"class.base::internal::BindStateBase"*
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %10, i64 0, i32 1
  %12 = bitcast void ()** %11 to void (%"class.base::internal::BindStateBase"*)**
  %13 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %12, align 8
  tail call void %13(%"class.base::internal::BindStateBase"* %10) #6
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK11permissions21PermissionRequestImpl14GetGestureTypeEv(%"class.permissions::PermissionRequestImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.permissions::PermissionRequestImpl", %"class.permissions::PermissionRequestImpl"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp ne i8 %3, 0
  %5 = tail call i32 @_ZN11permissions14PermissionUtil14GetGestureTypeEb(i1 zeroext %4) #6
  ret i32 %5
}

declare i32 @_ZN11permissions14PermissionUtil14GetGestureTypeEb(i1 zeroext) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK11permissions21PermissionRequestImpl22GetContentSettingsTypeEv(%"class.permissions::PermissionRequestImpl"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.permissions::PermissionRequestImpl", %"class.permissions::PermissionRequestImpl"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

declare zeroext i1 @_ZNK11permissions17PermissionRequest13IsDuplicateOfEPS0_(%"class.permissions::PermissionRequest"*, %"class.permissions::PermissionRequest"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
