; ModuleID = '../../v8/src/compiler/schedule.cc'
source_filename = "../../v8/src/compiler/schedule.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.v8::internal::compiler::BasicBlock" = type { i32, i32, i8, i32, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*, i32, i32, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector.11", %"class.v8::internal::ZoneVector.11", %"class.v8::internal::compiler::BasicBlock::Id" }
%"class.v8::internal::compiler::Node" = type { %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Type", i32, i32, %"struct.v8::internal::compiler::Node::Use"* }
%"class.v8::internal::compiler::Operator" = type <{ i32 (...)**, i8*, i16, %"class.v8::base::Flags", i8, i32, i32, i32, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.v8::base::Flags" = type { i8 }
%"class.v8::internal::compiler::Type" = type { i64 }
%"struct.v8::internal::compiler::Node::Use" = type { %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"*, i32 }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::compiler::Node"** }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.11" = type { %"class.std::__1::vector.12" }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"**, %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15", %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.v8::internal::compiler::BasicBlock"** }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.v8::internal::ZoneAllocator.17" }
%"class.v8::internal::ZoneAllocator.17" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::BasicBlock::Id" = type { i64 }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.5" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type opaque
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::compiler::Schedule" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::ZoneVector.11", %"class.v8::internal::ZoneVector.11", %"class.v8::internal::ZoneVector.11", %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::internal::StdoutStream" = type { %"class.v8::internal::OFStream.base", %"class.v8::base::LockGuard", %"class.std::__1::basic_ios.base" }
%"class.v8::internal::OFStream.base" = type { %"class.std::__1::basic_ostream.base", %"class.v8::internal::OFStreamBase" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.v8::internal::OFStreamBase" = type { %"class.std::__1::basic_streambuf", %struct._IO_FILE* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.v8::base::LockGuard" = type { %"class.v8::base::RecursiveMutex"* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.v8::internal::OFStream" = type { %"class.std::__1::basic_ostream.base", %"class.v8::internal::OFStreamBase", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN2v88internal12StdoutStreamD1Ev = comdat any

$_ZN2v88internal8OFStreamD1Ev = comdat any

$_ZN2v88internal8OFStreamD0Ev = comdat any

$_ZTv0_n24_N2v88internal8OFStreamD1Ev = comdat any

$_ZTv0_n24_N2v88internal8OFStreamD0Ev = comdat any

$_ZN2v88internal12StdoutStreamD0Ev = comdat any

$_ZTv0_n24_N2v88internal12StdoutStreamD1Ev = comdat any

$_ZTv0_n24_N2v88internal12StdoutStreamD0Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16vectorIPN2v88internal8compiler10BasicBlockENS2_13ZoneAllocatorIS5_EEE8__appendEm = comdat any

$_ZTVN2v88internal12StdoutStreamE = comdat any

$_ZTTN2v88internal12StdoutStreamE = comdat any

$_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE = comdat any

$_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = comdat any

$_ZTVN2v88internal8OFStreamE = comdat any

$_ZTTN2v88internal8OFStreamE = comdat any

$_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = comdat any

@.str = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"B\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"goto\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"call\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"branch\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"switch\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"deoptimize\00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"tailcall\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"return\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"throw\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@_ZN2v88internal26FLAG_trace_turbo_schedulerE = external local_unnamed_addr global i8, align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"Planning #\00", align 1
@.str.13 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.14 = private unnamed_addr constant [21 x i8] c" for future add to B\00", align 1
@.str.15 = private unnamed_addr constant [9 x i8] c"Adding #\00", align 1
@.str.16 = private unnamed_addr constant [6 x i8] c" to B\00", align 1
@.str.17 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.18 = private unnamed_addr constant [38 x i8] c"BasicBlock::kNone == block->control()\00", align 1
@.str.19 = private unnamed_addr constant [38 x i8] c"BasicBlock::kNone != block->control()\00", align 1
@.str.20 = private unnamed_addr constant [36 x i8] c"BasicBlock::kNone == end->control()\00", align 1
@.str.21 = private unnamed_addr constant [14 x i8] c"--- BLOCK id:\00", align 1
@.str.22 = private unnamed_addr constant [12 x i8] c"--- BLOCK B\00", align 1
@.str.23 = private unnamed_addr constant [12 x i8] c" (deferred)\00", align 1
@.str.24 = private unnamed_addr constant [5 x i8] c" <- \00", align 1
@.str.25 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.26 = private unnamed_addr constant [4 x i8] c"id:\00", align 1
@.str.27 = private unnamed_addr constant [6 x i8] c" ---\0A\00", align 1
@.str.28 = private unnamed_addr constant [3 x i8] c"  \00", align 1
@.str.29 = private unnamed_addr constant [4 x i8] c" : \00", align 1
@.str.30 = private unnamed_addr constant [5 x i8] c"Goto\00", align 1
@.str.31 = private unnamed_addr constant [5 x i8] c" -> \00", align 1
@stdout = external local_unnamed_addr global %struct._IO_FILE*, align 8
@_ZTVN2v88internal12StdoutStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZN2v88internal12StdoutStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZN2v88internal12StdoutStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZTv0_n24_N2v88internal12StdoutStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZTv0_n24_N2v88internal12StdoutStreamD0Ev to i8*)] }, comdat, align 8
@_ZTTN2v88internal12StdoutStreamE = linkonce_odr hidden unnamed_addr constant [6 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i32 0, inrange i32 1, i32 3) to i8*)], comdat, align 8
@_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD0Ev to i8*)] }, comdat, align 8
@_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)] }, comdat, align 8
@_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE = external unnamed_addr constant { [4 x i8*] }, align 8
@_ZTVN2v88internal8OFStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 80 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD0Ev to i8*)] }, comdat, align 8
@_ZTTN2v88internal8OFStreamE = linkonce_odr hidden unnamed_addr constant [4 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i32 0, inrange i32 1, i32 3) to i8*)], comdat, align 8
@_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 80 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)] }, comdat, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN2v88internal8compiler10BasicBlockC1EPNS0_4ZoneENS2_2IdE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::Zone"*, i64), void (%"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::Zone"*, i64)* @_ZN2v88internal8compiler10BasicBlockC2EPNS0_4ZoneENS2_2IdE
@_ZN2v88internal8compiler8ScheduleC1EPNS0_4ZoneEm = hidden unnamed_addr alias void (%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::Zone"*, i64), void (%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::Zone"*, i64)* @_ZN2v88internal8compiler8ScheduleC2EPNS0_4ZoneEm

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler10BasicBlockC2EPNS0_4ZoneENS2_2IdE(%"class.v8::internal::compiler::BasicBlock"* nocapture, %"class.v8::internal::Zone"*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 0
  store i32 -1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 1
  store i32 -1, i32* %5, align 4
  %6 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 2
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 3
  store i32 -1, i32* %7, align 4
  %8 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 4
  %9 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %10 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 11, i32 0, i32 0, i32 2, i32 1
  %11 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %10 to i64*
  %12 = bitcast %"class.v8::internal::compiler::BasicBlock"** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 72, i1 false)
  store i64 %9, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 12
  %14 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 12, i32 0, i32 0, i32 2, i32 1
  %15 = bitcast %"struct.std::__1::__compressed_pair_elem.16"* %14 to i64*
  %16 = bitcast %"class.v8::internal::ZoneVector.11"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #13
  store i64 %9, i64* %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 13
  %18 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 13, i32 0, i32 0, i32 2, i32 1
  %19 = bitcast %"struct.std::__1::__compressed_pair_elem.16"* %18 to i64*
  %20 = bitcast %"class.v8::internal::ZoneVector.11"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #13
  store i64 %9, i64* %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 14, i32 0
  store i64 %2, i64* %21, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler10BasicBlock12LoopContainsEPS2_(%"class.v8::internal::compiler::BasicBlock"* nocapture readonly, %"class.v8::internal::compiler::BasicBlock"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 7
  %4 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %3, align 8
  %5 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp slt i32 %8, %10
  br i1 %11, label %16, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %4, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %8, %14
  br label %16

16:                                               ; preds = %12, %6, %2
  %17 = phi i1 [ false, %2 ], [ false, %6 ], [ %15, %12 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler10BasicBlock12AddSuccessorEPS2_(%"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.v8::internal::compiler::BasicBlock"* %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 12, i32 0
  %5 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 12, i32 0, i32 0, i32 1
  %6 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 12, i32 0, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %7, align 8
  %9 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %6, %8
  %10 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %8 to i64
  br i1 %9, label %16, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.v8::internal::compiler::BasicBlock"** %6 to i64*
  store i64 %3, i64* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %6, i64 1
  %14 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %13 to i64
  %15 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %5 to i64*
  store i64 %14, i64* %15, align 8
  br label %241

16:                                               ; preds = %2
  %17 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %6 to i64
  %18 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %5 to i64*
  %19 = bitcast %"class.std::__1::vector.12"* %4 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = add nsw i64 %22, 1
  %24 = icmp ugt i64 %23, 268435455
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::vector.12"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #14
  unreachable

27:                                               ; preds = %16
  %28 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %7 to i64*
  %29 = sub i64 %10, %20
  %30 = ashr exact i64 %29, 3
  %31 = icmp ult i64 %30, 134217727
  br i1 %31, label %32, label %37

32:                                               ; preds = %27
  %33 = ashr exact i64 %29, 2
  %34 = icmp ult i64 %33, %23
  %35 = select i1 %34, i64 %23, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %55, label %37

37:                                               ; preds = %32, %27
  %38 = phi i64 [ %35, %32 ], [ 268435455, %27 ]
  %39 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 12, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %40 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %39, align 8
  %41 = shl i64 %38, 3
  %42 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %40, i64 0, i32 2
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %40, i64 0, i32 3
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %45, %43
  %47 = icmp ugt i64 %41, %46
  br i1 %47, label %48, label %50, !prof !2

48:                                               ; preds = %37
  %49 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %40, i64 %41) #13
  br label %52

50:                                               ; preds = %37
  %51 = add i64 %43, %41
  store i64 %51, i64* %42, align 8
  br label %52

52:                                               ; preds = %50, %48
  %53 = phi i64 [ %49, %48 ], [ %43, %50 ]
  %54 = inttoptr i64 %53 to %"class.v8::internal::compiler::BasicBlock"**
  br label %55

55:                                               ; preds = %52, %32
  %56 = phi i64 [ %38, %52 ], [ 0, %32 ]
  %57 = phi %"class.v8::internal::compiler::BasicBlock"** [ %54, %52 ], [ null, %32 ]
  %58 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %57, i64 %22
  %59 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %57, i64 %56
  %60 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %59 to i64
  %61 = bitcast %"class.v8::internal::compiler::BasicBlock"** %58 to i64*
  store i64 %3, i64* %61, align 8
  %62 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %58, i64 1
  %63 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %62 to i64
  %64 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %4, i64 0, i32 0, i32 0
  %65 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %64, align 8
  %66 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %65 to i64
  %67 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %5, align 8
  %68 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %67, %65
  br i1 %68, label %238, label %69

69:                                               ; preds = %55
  %70 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %67, i64 -1
  %71 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %70 to i64
  %72 = sub i64 %71, %66
  %73 = lshr i64 %72, 3
  %74 = add nuw nsw i64 %73, 1
  %75 = icmp ult i64 %74, 4
  br i1 %75, label %168, label %76

76:                                               ; preds = %69
  %77 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %67, i64 -1
  %78 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %77 to i64
  %79 = sub i64 %78, %66
  %80 = lshr i64 %79, 3
  %81 = xor i64 %80, -1
  %82 = add nsw i64 %22, %81
  %83 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %57, i64 %82
  %84 = xor i64 %80, -1
  %85 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %67, i64 %84
  %86 = icmp ult %"class.v8::internal::compiler::BasicBlock"** %83, %67
  %87 = icmp ult %"class.v8::internal::compiler::BasicBlock"** %85, %58
  %88 = and i1 %86, %87
  br i1 %88, label %168, label %89

89:                                               ; preds = %76
  %90 = and i64 %74, 4611686018427387900
  %91 = sub nsw i64 0, %90
  %92 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %58, i64 %91
  %93 = sub nsw i64 0, %90
  %94 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %67, i64 %93
  %95 = add nsw i64 %90, -4
  %96 = lshr exact i64 %95, 2
  %97 = add nuw nsw i64 %96, 1
  %98 = and i64 %97, 1
  %99 = icmp eq i64 %95, 0
  br i1 %99, label %146, label %100

100:                                              ; preds = %89
  %101 = sub nuw nsw i64 %97, %98
  %102 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %58, i64 -1
  %103 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %67, i64 -1
  %104 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %58, i64 -1
  %105 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %67, i64 -1
  br label %106

106:                                              ; preds = %106, %100
  %107 = phi i64 [ 0, %100 ], [ %141, %106 ]
  %108 = phi i64 [ %101, %100 ], [ %142, %106 ]
  %109 = sub i64 0, %107
  %110 = sub i64 0, %107
  %111 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %102, i64 %109
  %112 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %103, i64 %110
  %113 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %112, i64 -1
  %114 = bitcast %"class.v8::internal::compiler::BasicBlock"** %113 to <2 x i64>*
  %115 = load <2 x i64>, <2 x i64>* %114, align 8, !alias.scope !3
  %116 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %112, i64 -2
  %117 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %116, i64 -1
  %118 = bitcast %"class.v8::internal::compiler::BasicBlock"** %117 to <2 x i64>*
  %119 = load <2 x i64>, <2 x i64>* %118, align 8, !alias.scope !3
  %120 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %111, i64 -1
  %121 = bitcast %"class.v8::internal::compiler::BasicBlock"** %120 to <2 x i64>*
  store <2 x i64> %115, <2 x i64>* %121, align 8, !alias.scope !6, !noalias !3
  %122 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %111, i64 -2
  %123 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %122, i64 -1
  %124 = bitcast %"class.v8::internal::compiler::BasicBlock"** %123 to <2 x i64>*
  store <2 x i64> %119, <2 x i64>* %124, align 8, !alias.scope !6, !noalias !3
  %125 = sub nuw nsw i64 -4, %107
  %126 = sub nuw nsw i64 -4, %107
  %127 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %104, i64 %125
  %128 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %105, i64 %126
  %129 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %128, i64 -1
  %130 = bitcast %"class.v8::internal::compiler::BasicBlock"** %129 to <2 x i64>*
  %131 = load <2 x i64>, <2 x i64>* %130, align 8, !alias.scope !3
  %132 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %128, i64 -2
  %133 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %132, i64 -1
  %134 = bitcast %"class.v8::internal::compiler::BasicBlock"** %133 to <2 x i64>*
  %135 = load <2 x i64>, <2 x i64>* %134, align 8, !alias.scope !3
  %136 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %127, i64 -1
  %137 = bitcast %"class.v8::internal::compiler::BasicBlock"** %136 to <2 x i64>*
  store <2 x i64> %131, <2 x i64>* %137, align 8, !alias.scope !6, !noalias !3
  %138 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %127, i64 -2
  %139 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %138, i64 -1
  %140 = bitcast %"class.v8::internal::compiler::BasicBlock"** %139 to <2 x i64>*
  store <2 x i64> %135, <2 x i64>* %140, align 8, !alias.scope !6, !noalias !3
  %141 = add i64 %107, 8
  %142 = add i64 %108, -2
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %106, !llvm.loop !8

144:                                              ; preds = %106
  %145 = sub nuw nsw i64 -8, %107
  br label %146

146:                                              ; preds = %144, %89
  %147 = phi i64 [ 0, %89 ], [ %145, %144 ]
  %148 = icmp eq i64 %98, 0
  br i1 %148, label %166, label %149

149:                                              ; preds = %146
  %150 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %58, i64 -1
  %151 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %67, i64 -1
  %152 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %150, i64 %147
  %153 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %151, i64 %147
  %154 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %153, i64 -1
  %155 = bitcast %"class.v8::internal::compiler::BasicBlock"** %154 to <2 x i64>*
  %156 = load <2 x i64>, <2 x i64>* %155, align 8, !alias.scope !3
  %157 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %153, i64 -2
  %158 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %157, i64 -1
  %159 = bitcast %"class.v8::internal::compiler::BasicBlock"** %158 to <2 x i64>*
  %160 = load <2 x i64>, <2 x i64>* %159, align 8, !alias.scope !3
  %161 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %152, i64 -1
  %162 = bitcast %"class.v8::internal::compiler::BasicBlock"** %161 to <2 x i64>*
  store <2 x i64> %156, <2 x i64>* %162, align 8, !alias.scope !6, !noalias !3
  %163 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %152, i64 -2
  %164 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %163, i64 -1
  %165 = bitcast %"class.v8::internal::compiler::BasicBlock"** %164 to <2 x i64>*
  store <2 x i64> %160, <2 x i64>* %165, align 8, !alias.scope !6, !noalias !3
  br label %166

166:                                              ; preds = %146, %149
  %167 = icmp eq i64 %74, %90
  br i1 %167, label %238, label %168

168:                                              ; preds = %166, %76, %69
  %169 = phi %"class.v8::internal::compiler::BasicBlock"** [ %58, %76 ], [ %58, %69 ], [ %92, %166 ]
  %170 = phi %"class.v8::internal::compiler::BasicBlock"** [ %67, %76 ], [ %67, %69 ], [ %94, %166 ]
  %171 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %170, i64 -1
  %172 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %171 to i64
  %173 = sub i64 %172, %66
  %174 = lshr i64 %173, 3
  %175 = add nuw nsw i64 %174, 1
  %176 = and i64 %175, 7
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %189, label %178

178:                                              ; preds = %168, %178
  %179 = phi %"class.v8::internal::compiler::BasicBlock"** [ %182, %178 ], [ %169, %168 ]
  %180 = phi %"class.v8::internal::compiler::BasicBlock"** [ %183, %178 ], [ %170, %168 ]
  %181 = phi i64 [ %187, %178 ], [ %176, %168 ]
  %182 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %179, i64 -1
  %183 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %180, i64 -1
  %184 = bitcast %"class.v8::internal::compiler::BasicBlock"** %183 to i64*
  %185 = load i64, i64* %184, align 8
  %186 = bitcast %"class.v8::internal::compiler::BasicBlock"** %182 to i64*
  store i64 %185, i64* %186, align 8
  %187 = add i64 %181, -1
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %189, label %178, !llvm.loop !10

189:                                              ; preds = %178, %168
  %190 = phi %"class.v8::internal::compiler::BasicBlock"** [ undef, %168 ], [ %182, %178 ]
  %191 = phi %"class.v8::internal::compiler::BasicBlock"** [ %169, %168 ], [ %182, %178 ]
  %192 = phi %"class.v8::internal::compiler::BasicBlock"** [ %170, %168 ], [ %183, %178 ]
  %193 = icmp ult i64 %173, 56
  br i1 %193, label %238, label %194

194:                                              ; preds = %189, %194
  %195 = phi %"class.v8::internal::compiler::BasicBlock"** [ %232, %194 ], [ %191, %189 ]
  %196 = phi %"class.v8::internal::compiler::BasicBlock"** [ %233, %194 ], [ %192, %189 ]
  %197 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %195, i64 -1
  %198 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %196, i64 -1
  %199 = bitcast %"class.v8::internal::compiler::BasicBlock"** %198 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = bitcast %"class.v8::internal::compiler::BasicBlock"** %197 to i64*
  store i64 %200, i64* %201, align 8
  %202 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %195, i64 -2
  %203 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %196, i64 -2
  %204 = bitcast %"class.v8::internal::compiler::BasicBlock"** %203 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = bitcast %"class.v8::internal::compiler::BasicBlock"** %202 to i64*
  store i64 %205, i64* %206, align 8
  %207 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %195, i64 -3
  %208 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %196, i64 -3
  %209 = bitcast %"class.v8::internal::compiler::BasicBlock"** %208 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = bitcast %"class.v8::internal::compiler::BasicBlock"** %207 to i64*
  store i64 %210, i64* %211, align 8
  %212 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %195, i64 -4
  %213 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %196, i64 -4
  %214 = bitcast %"class.v8::internal::compiler::BasicBlock"** %213 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = bitcast %"class.v8::internal::compiler::BasicBlock"** %212 to i64*
  store i64 %215, i64* %216, align 8
  %217 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %195, i64 -5
  %218 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %196, i64 -5
  %219 = bitcast %"class.v8::internal::compiler::BasicBlock"** %218 to i64*
  %220 = load i64, i64* %219, align 8
  %221 = bitcast %"class.v8::internal::compiler::BasicBlock"** %217 to i64*
  store i64 %220, i64* %221, align 8
  %222 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %195, i64 -6
  %223 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %196, i64 -6
  %224 = bitcast %"class.v8::internal::compiler::BasicBlock"** %223 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = bitcast %"class.v8::internal::compiler::BasicBlock"** %222 to i64*
  store i64 %225, i64* %226, align 8
  %227 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %195, i64 -7
  %228 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %196, i64 -7
  %229 = bitcast %"class.v8::internal::compiler::BasicBlock"** %228 to i64*
  %230 = load i64, i64* %229, align 8
  %231 = bitcast %"class.v8::internal::compiler::BasicBlock"** %227 to i64*
  store i64 %230, i64* %231, align 8
  %232 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %195, i64 -8
  %233 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %196, i64 -8
  %234 = bitcast %"class.v8::internal::compiler::BasicBlock"** %233 to i64*
  %235 = load i64, i64* %234, align 8
  %236 = bitcast %"class.v8::internal::compiler::BasicBlock"** %232 to i64*
  store i64 %235, i64* %236, align 8
  %237 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %233, %65
  br i1 %237, label %238, label %194, !llvm.loop !12

238:                                              ; preds = %189, %194, %166, %55
  %239 = phi %"class.v8::internal::compiler::BasicBlock"** [ %58, %55 ], [ %92, %166 ], [ %190, %189 ], [ %232, %194 ]
  %240 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %239 to i64
  store i64 %240, i64* %19, align 8
  store i64 %63, i64* %18, align 8
  store i64 %60, i64* %28, align 8
  br label %241

241:                                              ; preds = %11, %238
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler10BasicBlock14AddPredecessorEPS2_(%"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.v8::internal::compiler::BasicBlock"* %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 13, i32 0
  %5 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 13, i32 0, i32 0, i32 1
  %6 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 13, i32 0, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %7, align 8
  %9 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %6, %8
  %10 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %8 to i64
  br i1 %9, label %16, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.v8::internal::compiler::BasicBlock"** %6 to i64*
  store i64 %3, i64* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %6, i64 1
  %14 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %13 to i64
  %15 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %5 to i64*
  store i64 %14, i64* %15, align 8
  br label %241

16:                                               ; preds = %2
  %17 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %6 to i64
  %18 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %5 to i64*
  %19 = bitcast %"class.std::__1::vector.12"* %4 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = add nsw i64 %22, 1
  %24 = icmp ugt i64 %23, 268435455
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::vector.12"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #14
  unreachable

27:                                               ; preds = %16
  %28 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %7 to i64*
  %29 = sub i64 %10, %20
  %30 = ashr exact i64 %29, 3
  %31 = icmp ult i64 %30, 134217727
  br i1 %31, label %32, label %37

32:                                               ; preds = %27
  %33 = ashr exact i64 %29, 2
  %34 = icmp ult i64 %33, %23
  %35 = select i1 %34, i64 %23, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %55, label %37

37:                                               ; preds = %32, %27
  %38 = phi i64 [ %35, %32 ], [ 268435455, %27 ]
  %39 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 13, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %40 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %39, align 8
  %41 = shl i64 %38, 3
  %42 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %40, i64 0, i32 2
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %40, i64 0, i32 3
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %45, %43
  %47 = icmp ugt i64 %41, %46
  br i1 %47, label %48, label %50, !prof !2

48:                                               ; preds = %37
  %49 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %40, i64 %41) #13
  br label %52

50:                                               ; preds = %37
  %51 = add i64 %43, %41
  store i64 %51, i64* %42, align 8
  br label %52

52:                                               ; preds = %50, %48
  %53 = phi i64 [ %49, %48 ], [ %43, %50 ]
  %54 = inttoptr i64 %53 to %"class.v8::internal::compiler::BasicBlock"**
  br label %55

55:                                               ; preds = %52, %32
  %56 = phi i64 [ %38, %52 ], [ 0, %32 ]
  %57 = phi %"class.v8::internal::compiler::BasicBlock"** [ %54, %52 ], [ null, %32 ]
  %58 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %57, i64 %22
  %59 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %57, i64 %56
  %60 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %59 to i64
  %61 = bitcast %"class.v8::internal::compiler::BasicBlock"** %58 to i64*
  store i64 %3, i64* %61, align 8
  %62 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %58, i64 1
  %63 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %62 to i64
  %64 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %4, i64 0, i32 0, i32 0
  %65 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %64, align 8
  %66 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %65 to i64
  %67 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %5, align 8
  %68 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %67, %65
  br i1 %68, label %238, label %69

69:                                               ; preds = %55
  %70 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %67, i64 -1
  %71 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %70 to i64
  %72 = sub i64 %71, %66
  %73 = lshr i64 %72, 3
  %74 = add nuw nsw i64 %73, 1
  %75 = icmp ult i64 %74, 4
  br i1 %75, label %168, label %76

76:                                               ; preds = %69
  %77 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %67, i64 -1
  %78 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %77 to i64
  %79 = sub i64 %78, %66
  %80 = lshr i64 %79, 3
  %81 = xor i64 %80, -1
  %82 = add nsw i64 %22, %81
  %83 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %57, i64 %82
  %84 = xor i64 %80, -1
  %85 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %67, i64 %84
  %86 = icmp ult %"class.v8::internal::compiler::BasicBlock"** %83, %67
  %87 = icmp ult %"class.v8::internal::compiler::BasicBlock"** %85, %58
  %88 = and i1 %86, %87
  br i1 %88, label %168, label %89

89:                                               ; preds = %76
  %90 = and i64 %74, 4611686018427387900
  %91 = sub nsw i64 0, %90
  %92 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %58, i64 %91
  %93 = sub nsw i64 0, %90
  %94 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %67, i64 %93
  %95 = add nsw i64 %90, -4
  %96 = lshr exact i64 %95, 2
  %97 = add nuw nsw i64 %96, 1
  %98 = and i64 %97, 1
  %99 = icmp eq i64 %95, 0
  br i1 %99, label %146, label %100

100:                                              ; preds = %89
  %101 = sub nuw nsw i64 %97, %98
  %102 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %58, i64 -1
  %103 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %67, i64 -1
  %104 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %58, i64 -1
  %105 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %67, i64 -1
  br label %106

106:                                              ; preds = %106, %100
  %107 = phi i64 [ 0, %100 ], [ %141, %106 ]
  %108 = phi i64 [ %101, %100 ], [ %142, %106 ]
  %109 = sub i64 0, %107
  %110 = sub i64 0, %107
  %111 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %102, i64 %109
  %112 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %103, i64 %110
  %113 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %112, i64 -1
  %114 = bitcast %"class.v8::internal::compiler::BasicBlock"** %113 to <2 x i64>*
  %115 = load <2 x i64>, <2 x i64>* %114, align 8, !alias.scope !13
  %116 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %112, i64 -2
  %117 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %116, i64 -1
  %118 = bitcast %"class.v8::internal::compiler::BasicBlock"** %117 to <2 x i64>*
  %119 = load <2 x i64>, <2 x i64>* %118, align 8, !alias.scope !13
  %120 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %111, i64 -1
  %121 = bitcast %"class.v8::internal::compiler::BasicBlock"** %120 to <2 x i64>*
  store <2 x i64> %115, <2 x i64>* %121, align 8, !alias.scope !16, !noalias !13
  %122 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %111, i64 -2
  %123 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %122, i64 -1
  %124 = bitcast %"class.v8::internal::compiler::BasicBlock"** %123 to <2 x i64>*
  store <2 x i64> %119, <2 x i64>* %124, align 8, !alias.scope !16, !noalias !13
  %125 = sub nuw nsw i64 -4, %107
  %126 = sub nuw nsw i64 -4, %107
  %127 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %104, i64 %125
  %128 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %105, i64 %126
  %129 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %128, i64 -1
  %130 = bitcast %"class.v8::internal::compiler::BasicBlock"** %129 to <2 x i64>*
  %131 = load <2 x i64>, <2 x i64>* %130, align 8, !alias.scope !13
  %132 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %128, i64 -2
  %133 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %132, i64 -1
  %134 = bitcast %"class.v8::internal::compiler::BasicBlock"** %133 to <2 x i64>*
  %135 = load <2 x i64>, <2 x i64>* %134, align 8, !alias.scope !13
  %136 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %127, i64 -1
  %137 = bitcast %"class.v8::internal::compiler::BasicBlock"** %136 to <2 x i64>*
  store <2 x i64> %131, <2 x i64>* %137, align 8, !alias.scope !16, !noalias !13
  %138 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %127, i64 -2
  %139 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %138, i64 -1
  %140 = bitcast %"class.v8::internal::compiler::BasicBlock"** %139 to <2 x i64>*
  store <2 x i64> %135, <2 x i64>* %140, align 8, !alias.scope !16, !noalias !13
  %141 = add i64 %107, 8
  %142 = add i64 %108, -2
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %106, !llvm.loop !18

144:                                              ; preds = %106
  %145 = sub nuw nsw i64 -8, %107
  br label %146

146:                                              ; preds = %144, %89
  %147 = phi i64 [ 0, %89 ], [ %145, %144 ]
  %148 = icmp eq i64 %98, 0
  br i1 %148, label %166, label %149

149:                                              ; preds = %146
  %150 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %58, i64 -1
  %151 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %67, i64 -1
  %152 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %150, i64 %147
  %153 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %151, i64 %147
  %154 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %153, i64 -1
  %155 = bitcast %"class.v8::internal::compiler::BasicBlock"** %154 to <2 x i64>*
  %156 = load <2 x i64>, <2 x i64>* %155, align 8, !alias.scope !13
  %157 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %153, i64 -2
  %158 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %157, i64 -1
  %159 = bitcast %"class.v8::internal::compiler::BasicBlock"** %158 to <2 x i64>*
  %160 = load <2 x i64>, <2 x i64>* %159, align 8, !alias.scope !13
  %161 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %152, i64 -1
  %162 = bitcast %"class.v8::internal::compiler::BasicBlock"** %161 to <2 x i64>*
  store <2 x i64> %156, <2 x i64>* %162, align 8, !alias.scope !16, !noalias !13
  %163 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %152, i64 -2
  %164 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %163, i64 -1
  %165 = bitcast %"class.v8::internal::compiler::BasicBlock"** %164 to <2 x i64>*
  store <2 x i64> %160, <2 x i64>* %165, align 8, !alias.scope !16, !noalias !13
  br label %166

166:                                              ; preds = %146, %149
  %167 = icmp eq i64 %74, %90
  br i1 %167, label %238, label %168

168:                                              ; preds = %166, %76, %69
  %169 = phi %"class.v8::internal::compiler::BasicBlock"** [ %58, %76 ], [ %58, %69 ], [ %92, %166 ]
  %170 = phi %"class.v8::internal::compiler::BasicBlock"** [ %67, %76 ], [ %67, %69 ], [ %94, %166 ]
  %171 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %170, i64 -1
  %172 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %171 to i64
  %173 = sub i64 %172, %66
  %174 = lshr i64 %173, 3
  %175 = add nuw nsw i64 %174, 1
  %176 = and i64 %175, 7
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %189, label %178

178:                                              ; preds = %168, %178
  %179 = phi %"class.v8::internal::compiler::BasicBlock"** [ %182, %178 ], [ %169, %168 ]
  %180 = phi %"class.v8::internal::compiler::BasicBlock"** [ %183, %178 ], [ %170, %168 ]
  %181 = phi i64 [ %187, %178 ], [ %176, %168 ]
  %182 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %179, i64 -1
  %183 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %180, i64 -1
  %184 = bitcast %"class.v8::internal::compiler::BasicBlock"** %183 to i64*
  %185 = load i64, i64* %184, align 8
  %186 = bitcast %"class.v8::internal::compiler::BasicBlock"** %182 to i64*
  store i64 %185, i64* %186, align 8
  %187 = add i64 %181, -1
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %189, label %178, !llvm.loop !19

189:                                              ; preds = %178, %168
  %190 = phi %"class.v8::internal::compiler::BasicBlock"** [ undef, %168 ], [ %182, %178 ]
  %191 = phi %"class.v8::internal::compiler::BasicBlock"** [ %169, %168 ], [ %182, %178 ]
  %192 = phi %"class.v8::internal::compiler::BasicBlock"** [ %170, %168 ], [ %183, %178 ]
  %193 = icmp ult i64 %173, 56
  br i1 %193, label %238, label %194

194:                                              ; preds = %189, %194
  %195 = phi %"class.v8::internal::compiler::BasicBlock"** [ %232, %194 ], [ %191, %189 ]
  %196 = phi %"class.v8::internal::compiler::BasicBlock"** [ %233, %194 ], [ %192, %189 ]
  %197 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %195, i64 -1
  %198 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %196, i64 -1
  %199 = bitcast %"class.v8::internal::compiler::BasicBlock"** %198 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = bitcast %"class.v8::internal::compiler::BasicBlock"** %197 to i64*
  store i64 %200, i64* %201, align 8
  %202 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %195, i64 -2
  %203 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %196, i64 -2
  %204 = bitcast %"class.v8::internal::compiler::BasicBlock"** %203 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = bitcast %"class.v8::internal::compiler::BasicBlock"** %202 to i64*
  store i64 %205, i64* %206, align 8
  %207 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %195, i64 -3
  %208 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %196, i64 -3
  %209 = bitcast %"class.v8::internal::compiler::BasicBlock"** %208 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = bitcast %"class.v8::internal::compiler::BasicBlock"** %207 to i64*
  store i64 %210, i64* %211, align 8
  %212 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %195, i64 -4
  %213 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %196, i64 -4
  %214 = bitcast %"class.v8::internal::compiler::BasicBlock"** %213 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = bitcast %"class.v8::internal::compiler::BasicBlock"** %212 to i64*
  store i64 %215, i64* %216, align 8
  %217 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %195, i64 -5
  %218 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %196, i64 -5
  %219 = bitcast %"class.v8::internal::compiler::BasicBlock"** %218 to i64*
  %220 = load i64, i64* %219, align 8
  %221 = bitcast %"class.v8::internal::compiler::BasicBlock"** %217 to i64*
  store i64 %220, i64* %221, align 8
  %222 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %195, i64 -6
  %223 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %196, i64 -6
  %224 = bitcast %"class.v8::internal::compiler::BasicBlock"** %223 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = bitcast %"class.v8::internal::compiler::BasicBlock"** %222 to i64*
  store i64 %225, i64* %226, align 8
  %227 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %195, i64 -7
  %228 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %196, i64 -7
  %229 = bitcast %"class.v8::internal::compiler::BasicBlock"** %228 to i64*
  %230 = load i64, i64* %229, align 8
  %231 = bitcast %"class.v8::internal::compiler::BasicBlock"** %227 to i64*
  store i64 %230, i64* %231, align 8
  %232 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %195, i64 -8
  %233 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %196, i64 -8
  %234 = bitcast %"class.v8::internal::compiler::BasicBlock"** %233 to i64*
  %235 = load i64, i64* %234, align 8
  %236 = bitcast %"class.v8::internal::compiler::BasicBlock"** %232 to i64*
  store i64 %235, i64* %236, align 8
  %237 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %233, %65
  br i1 %237, label %238, label %194, !llvm.loop !20

238:                                              ; preds = %189, %194, %166, %55
  %239 = phi %"class.v8::internal::compiler::BasicBlock"** [ %58, %55 ], [ %92, %166 ], [ %190, %189 ], [ %232, %194 ]
  %240 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %239 to i64
  store i64 %240, i64* %19, align 8
  store i64 %63, i64* %18, align 8
  store i64 %60, i64* %28, align 8
  br label %241

241:                                              ; preds = %11, %238
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler10BasicBlock17RemovePredecessorEm(%"class.v8::internal::compiler::BasicBlock"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %4, i64 %1
  %6 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %5, i64 1
  %7 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 13, i32 0, i32 0, i32 1
  %8 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %6 to i64
  %11 = sub i64 %9, %10
  %12 = ashr exact i64 %11, 3
  %13 = icmp eq i64 %11, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %2
  %15 = bitcast %"class.v8::internal::compiler::BasicBlock"** %5 to i8*
  %16 = bitcast %"class.v8::internal::compiler::BasicBlock"** %6 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 %11, i1 false) #13
  br label %17

17:                                               ; preds = %2, %14
  %18 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %5, i64 %12
  store %"class.v8::internal::compiler::BasicBlock"** %18, %"class.v8::internal::compiler::BasicBlock"*** %7, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler10BasicBlock7AddNodeEPNS1_4NodeE(%"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 11, i32 0
  %5 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  %6 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 11, i32 0, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %7, align 8
  %9 = icmp eq %"class.v8::internal::compiler::Node"** %6, %8
  %10 = ptrtoint %"class.v8::internal::compiler::Node"** %8 to i64
  br i1 %9, label %16, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.v8::internal::compiler::Node"** %6 to i64*
  store i64 %3, i64* %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %6, i64 1
  %14 = ptrtoint %"class.v8::internal::compiler::Node"** %13 to i64
  %15 = bitcast %"class.v8::internal::compiler::Node"*** %5 to i64*
  store i64 %14, i64* %15, align 8
  br label %241

16:                                               ; preds = %2
  %17 = ptrtoint %"class.v8::internal::compiler::Node"** %6 to i64
  %18 = bitcast %"class.v8::internal::compiler::Node"*** %5 to i64*
  %19 = bitcast %"class.std::__1::vector"* %4 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = add nsw i64 %22, 1
  %24 = icmp ugt i64 %23, 268435455
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #14
  unreachable

27:                                               ; preds = %16
  %28 = bitcast %"class.v8::internal::compiler::Node"*** %7 to i64*
  %29 = sub i64 %10, %20
  %30 = ashr exact i64 %29, 3
  %31 = icmp ult i64 %30, 134217727
  br i1 %31, label %32, label %37

32:                                               ; preds = %27
  %33 = ashr exact i64 %29, 2
  %34 = icmp ult i64 %33, %23
  %35 = select i1 %34, i64 %23, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %55, label %37

37:                                               ; preds = %32, %27
  %38 = phi i64 [ %35, %32 ], [ 268435455, %27 ]
  %39 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 11, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %40 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %39, align 8
  %41 = shl i64 %38, 3
  %42 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %40, i64 0, i32 2
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %40, i64 0, i32 3
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %45, %43
  %47 = icmp ugt i64 %41, %46
  br i1 %47, label %48, label %50, !prof !2

48:                                               ; preds = %37
  %49 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %40, i64 %41) #13
  br label %52

50:                                               ; preds = %37
  %51 = add i64 %43, %41
  store i64 %51, i64* %42, align 8
  br label %52

52:                                               ; preds = %50, %48
  %53 = phi i64 [ %49, %48 ], [ %43, %50 ]
  %54 = inttoptr i64 %53 to %"class.v8::internal::compiler::Node"**
  br label %55

55:                                               ; preds = %52, %32
  %56 = phi i64 [ %38, %52 ], [ 0, %32 ]
  %57 = phi %"class.v8::internal::compiler::Node"** [ %54, %52 ], [ null, %32 ]
  %58 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %57, i64 %22
  %59 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %57, i64 %56
  %60 = ptrtoint %"class.v8::internal::compiler::Node"** %59 to i64
  %61 = bitcast %"class.v8::internal::compiler::Node"** %58 to i64*
  store i64 %3, i64* %61, align 8
  %62 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %58, i64 1
  %63 = ptrtoint %"class.v8::internal::compiler::Node"** %62 to i64
  %64 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %65 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %64, align 8
  %66 = ptrtoint %"class.v8::internal::compiler::Node"** %65 to i64
  %67 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %5, align 8
  %68 = icmp eq %"class.v8::internal::compiler::Node"** %67, %65
  br i1 %68, label %238, label %69

69:                                               ; preds = %55
  %70 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %67, i64 -1
  %71 = ptrtoint %"class.v8::internal::compiler::Node"** %70 to i64
  %72 = sub i64 %71, %66
  %73 = lshr i64 %72, 3
  %74 = add nuw nsw i64 %73, 1
  %75 = icmp ult i64 %74, 4
  br i1 %75, label %168, label %76

76:                                               ; preds = %69
  %77 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %67, i64 -1
  %78 = ptrtoint %"class.v8::internal::compiler::Node"** %77 to i64
  %79 = sub i64 %78, %66
  %80 = lshr i64 %79, 3
  %81 = xor i64 %80, -1
  %82 = add nsw i64 %22, %81
  %83 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %57, i64 %82
  %84 = xor i64 %80, -1
  %85 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %67, i64 %84
  %86 = icmp ult %"class.v8::internal::compiler::Node"** %83, %67
  %87 = icmp ult %"class.v8::internal::compiler::Node"** %85, %58
  %88 = and i1 %86, %87
  br i1 %88, label %168, label %89

89:                                               ; preds = %76
  %90 = and i64 %74, 4611686018427387900
  %91 = sub nsw i64 0, %90
  %92 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %58, i64 %91
  %93 = sub nsw i64 0, %90
  %94 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %67, i64 %93
  %95 = add nsw i64 %90, -4
  %96 = lshr exact i64 %95, 2
  %97 = add nuw nsw i64 %96, 1
  %98 = and i64 %97, 1
  %99 = icmp eq i64 %95, 0
  br i1 %99, label %146, label %100

100:                                              ; preds = %89
  %101 = sub nuw nsw i64 %97, %98
  %102 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %58, i64 -1
  %103 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %67, i64 -1
  %104 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %58, i64 -1
  %105 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %67, i64 -1
  br label %106

106:                                              ; preds = %106, %100
  %107 = phi i64 [ 0, %100 ], [ %141, %106 ]
  %108 = phi i64 [ %101, %100 ], [ %142, %106 ]
  %109 = sub i64 0, %107
  %110 = sub i64 0, %107
  %111 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %102, i64 %109
  %112 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %103, i64 %110
  %113 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %112, i64 -1
  %114 = bitcast %"class.v8::internal::compiler::Node"** %113 to <2 x i64>*
  %115 = load <2 x i64>, <2 x i64>* %114, align 8, !alias.scope !21
  %116 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %112, i64 -2
  %117 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %116, i64 -1
  %118 = bitcast %"class.v8::internal::compiler::Node"** %117 to <2 x i64>*
  %119 = load <2 x i64>, <2 x i64>* %118, align 8, !alias.scope !21
  %120 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %111, i64 -1
  %121 = bitcast %"class.v8::internal::compiler::Node"** %120 to <2 x i64>*
  store <2 x i64> %115, <2 x i64>* %121, align 8, !alias.scope !24, !noalias !21
  %122 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %111, i64 -2
  %123 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %122, i64 -1
  %124 = bitcast %"class.v8::internal::compiler::Node"** %123 to <2 x i64>*
  store <2 x i64> %119, <2 x i64>* %124, align 8, !alias.scope !24, !noalias !21
  %125 = sub nuw nsw i64 -4, %107
  %126 = sub nuw nsw i64 -4, %107
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %104, i64 %125
  %128 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %105, i64 %126
  %129 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %128, i64 -1
  %130 = bitcast %"class.v8::internal::compiler::Node"** %129 to <2 x i64>*
  %131 = load <2 x i64>, <2 x i64>* %130, align 8, !alias.scope !21
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %128, i64 -2
  %133 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %132, i64 -1
  %134 = bitcast %"class.v8::internal::compiler::Node"** %133 to <2 x i64>*
  %135 = load <2 x i64>, <2 x i64>* %134, align 8, !alias.scope !21
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %127, i64 -1
  %137 = bitcast %"class.v8::internal::compiler::Node"** %136 to <2 x i64>*
  store <2 x i64> %131, <2 x i64>* %137, align 8, !alias.scope !24, !noalias !21
  %138 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %127, i64 -2
  %139 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %138, i64 -1
  %140 = bitcast %"class.v8::internal::compiler::Node"** %139 to <2 x i64>*
  store <2 x i64> %135, <2 x i64>* %140, align 8, !alias.scope !24, !noalias !21
  %141 = add i64 %107, 8
  %142 = add i64 %108, -2
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %106, !llvm.loop !26

144:                                              ; preds = %106
  %145 = sub nuw nsw i64 -8, %107
  br label %146

146:                                              ; preds = %144, %89
  %147 = phi i64 [ 0, %89 ], [ %145, %144 ]
  %148 = icmp eq i64 %98, 0
  br i1 %148, label %166, label %149

149:                                              ; preds = %146
  %150 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %58, i64 -1
  %151 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %67, i64 -1
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %150, i64 %147
  %153 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %151, i64 %147
  %154 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %153, i64 -1
  %155 = bitcast %"class.v8::internal::compiler::Node"** %154 to <2 x i64>*
  %156 = load <2 x i64>, <2 x i64>* %155, align 8, !alias.scope !21
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %153, i64 -2
  %158 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %157, i64 -1
  %159 = bitcast %"class.v8::internal::compiler::Node"** %158 to <2 x i64>*
  %160 = load <2 x i64>, <2 x i64>* %159, align 8, !alias.scope !21
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %152, i64 -1
  %162 = bitcast %"class.v8::internal::compiler::Node"** %161 to <2 x i64>*
  store <2 x i64> %156, <2 x i64>* %162, align 8, !alias.scope !24, !noalias !21
  %163 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %152, i64 -2
  %164 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, i64 -1
  %165 = bitcast %"class.v8::internal::compiler::Node"** %164 to <2 x i64>*
  store <2 x i64> %160, <2 x i64>* %165, align 8, !alias.scope !24, !noalias !21
  br label %166

166:                                              ; preds = %146, %149
  %167 = icmp eq i64 %74, %90
  br i1 %167, label %238, label %168

168:                                              ; preds = %166, %76, %69
  %169 = phi %"class.v8::internal::compiler::Node"** [ %58, %76 ], [ %58, %69 ], [ %92, %166 ]
  %170 = phi %"class.v8::internal::compiler::Node"** [ %67, %76 ], [ %67, %69 ], [ %94, %166 ]
  %171 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %170, i64 -1
  %172 = ptrtoint %"class.v8::internal::compiler::Node"** %171 to i64
  %173 = sub i64 %172, %66
  %174 = lshr i64 %173, 3
  %175 = add nuw nsw i64 %174, 1
  %176 = and i64 %175, 7
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %189, label %178

178:                                              ; preds = %168, %178
  %179 = phi %"class.v8::internal::compiler::Node"** [ %182, %178 ], [ %169, %168 ]
  %180 = phi %"class.v8::internal::compiler::Node"** [ %183, %178 ], [ %170, %168 ]
  %181 = phi i64 [ %187, %178 ], [ %176, %168 ]
  %182 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %179, i64 -1
  %183 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %180, i64 -1
  %184 = bitcast %"class.v8::internal::compiler::Node"** %183 to i64*
  %185 = load i64, i64* %184, align 8
  %186 = bitcast %"class.v8::internal::compiler::Node"** %182 to i64*
  store i64 %185, i64* %186, align 8
  %187 = add i64 %181, -1
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %189, label %178, !llvm.loop !27

189:                                              ; preds = %178, %168
  %190 = phi %"class.v8::internal::compiler::Node"** [ undef, %168 ], [ %182, %178 ]
  %191 = phi %"class.v8::internal::compiler::Node"** [ %169, %168 ], [ %182, %178 ]
  %192 = phi %"class.v8::internal::compiler::Node"** [ %170, %168 ], [ %183, %178 ]
  %193 = icmp ult i64 %173, 56
  br i1 %193, label %238, label %194

194:                                              ; preds = %189, %194
  %195 = phi %"class.v8::internal::compiler::Node"** [ %232, %194 ], [ %191, %189 ]
  %196 = phi %"class.v8::internal::compiler::Node"** [ %233, %194 ], [ %192, %189 ]
  %197 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %195, i64 -1
  %198 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %196, i64 -1
  %199 = bitcast %"class.v8::internal::compiler::Node"** %198 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = bitcast %"class.v8::internal::compiler::Node"** %197 to i64*
  store i64 %200, i64* %201, align 8
  %202 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %195, i64 -2
  %203 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %196, i64 -2
  %204 = bitcast %"class.v8::internal::compiler::Node"** %203 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = bitcast %"class.v8::internal::compiler::Node"** %202 to i64*
  store i64 %205, i64* %206, align 8
  %207 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %195, i64 -3
  %208 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %196, i64 -3
  %209 = bitcast %"class.v8::internal::compiler::Node"** %208 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = bitcast %"class.v8::internal::compiler::Node"** %207 to i64*
  store i64 %210, i64* %211, align 8
  %212 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %195, i64 -4
  %213 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %196, i64 -4
  %214 = bitcast %"class.v8::internal::compiler::Node"** %213 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = bitcast %"class.v8::internal::compiler::Node"** %212 to i64*
  store i64 %215, i64* %216, align 8
  %217 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %195, i64 -5
  %218 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %196, i64 -5
  %219 = bitcast %"class.v8::internal::compiler::Node"** %218 to i64*
  %220 = load i64, i64* %219, align 8
  %221 = bitcast %"class.v8::internal::compiler::Node"** %217 to i64*
  store i64 %220, i64* %221, align 8
  %222 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %195, i64 -6
  %223 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %196, i64 -6
  %224 = bitcast %"class.v8::internal::compiler::Node"** %223 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = bitcast %"class.v8::internal::compiler::Node"** %222 to i64*
  store i64 %225, i64* %226, align 8
  %227 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %195, i64 -7
  %228 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %196, i64 -7
  %229 = bitcast %"class.v8::internal::compiler::Node"** %228 to i64*
  %230 = load i64, i64* %229, align 8
  %231 = bitcast %"class.v8::internal::compiler::Node"** %227 to i64*
  store i64 %230, i64* %231, align 8
  %232 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %195, i64 -8
  %233 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %196, i64 -8
  %234 = bitcast %"class.v8::internal::compiler::Node"** %233 to i64*
  %235 = load i64, i64* %234, align 8
  %236 = bitcast %"class.v8::internal::compiler::Node"** %232 to i64*
  store i64 %235, i64* %236, align 8
  %237 = icmp eq %"class.v8::internal::compiler::Node"** %233, %65
  br i1 %237, label %238, label %194, !llvm.loop !28

238:                                              ; preds = %189, %194, %166, %55
  %239 = phi %"class.v8::internal::compiler::Node"** [ %58, %55 ], [ %92, %166 ], [ %190, %189 ], [ %232, %194 ]
  %240 = ptrtoint %"class.v8::internal::compiler::Node"** %239 to i64
  store i64 %240, i64* %19, align 8
  store i64 %63, i64* %18, align 8
  store i64 %60, i64* %28, align 8
  br label %241

241:                                              ; preds = %11, %238
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal8compiler10BasicBlock11set_controlENS2_7ControlE(%"class.v8::internal::compiler::BasicBlock"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 9
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler10BasicBlock17set_control_inputEPNS1_4NodeE(%"class.v8::internal::compiler::BasicBlock"* nocapture, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  %6 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"** %4, %6
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %6, i64 -1
  %10 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %9, align 8
  %11 = icmp eq %"class.v8::internal::compiler::Node"* %10, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %8
  store %"class.v8::internal::compiler::Node"** %9, %"class.v8::internal::compiler::Node"*** %5, align 8
  br label %13

13:                                               ; preds = %12, %8, %2
  %14 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 10
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %14, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal8compiler10BasicBlock14set_loop_depthEi(%"class.v8::internal::compiler::BasicBlock"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 8
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal8compiler10BasicBlock14set_rpo_numberEi(%"class.v8::internal::compiler::BasicBlock"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 1
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal8compiler10BasicBlock12set_loop_endEPS2_(%"class.v8::internal::compiler::BasicBlock"* nocapture, %"class.v8::internal::compiler::BasicBlock"*) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 7
  store %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::BasicBlock"** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal8compiler10BasicBlock15set_loop_headerEPS2_(%"class.v8::internal::compiler::BasicBlock"* nocapture, %"class.v8::internal::compiler::BasicBlock"*) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 6
  store %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::BasicBlock"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler10BasicBlock9TrimNodesENSt3__111__wrap_iterIPPNS1_4NodeEEE(%"class.v8::internal::compiler::BasicBlock"* nocapture, %"class.v8::internal::compiler::Node"**) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  %4 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %3, align 8
  %5 = icmp eq %"class.v8::internal::compiler::Node"** %4, %1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store %"class.v8::internal::compiler::Node"** %1, %"class.v8::internal::compiler::Node"*** %3, align 8
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal8compiler10BasicBlock12ResetRPOInfoEv(%"class.v8::internal::compiler::BasicBlock"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 0
  store i32 -1, i32* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 1
  store i32 -1, i32* %3, align 4
  %4 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 3
  store i32 -1, i32* %4, align 4
  %5 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 4
  %6 = bitcast %"class.v8::internal::compiler::BasicBlock"** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 36, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler10BasicBlock18GetCommonDominatorEPS2_S3_(%"class.v8::internal::compiler::BasicBlock"* readonly, %"class.v8::internal::compiler::BasicBlock"* readonly) local_unnamed_addr #1 align 2 {
  %3 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %0, %1
  br i1 %3, label %22, label %4

4:                                                ; preds = %2, %18
  %5 = phi %"class.v8::internal::compiler::BasicBlock"* [ %20, %18 ], [ %1, %2 ]
  %6 = phi %"class.v8::internal::compiler::BasicBlock"* [ %19, %18 ], [ %0, %2 ]
  %7 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %6, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %5, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = icmp slt i32 %8, %10
  br i1 %11, label %12, label %15

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %5, i64 0, i32 4
  %14 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %13, align 8
  br label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %6, i64 0, i32 4
  %17 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %16, align 8
  br label %18

18:                                               ; preds = %15, %12
  %19 = phi %"class.v8::internal::compiler::BasicBlock"* [ %6, %12 ], [ %17, %15 ]
  %20 = phi %"class.v8::internal::compiler::BasicBlock"* [ %14, %12 ], [ %5, %15 ]
  %21 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %19, %20
  br i1 %21, label %22, label %4

22:                                               ; preds = %18, %2
  %23 = phi %"class.v8::internal::compiler::BasicBlock"* [ %0, %2 ], [ %19, %18 ]
  ret %"class.v8::internal::compiler::BasicBlock"* %23
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler10BasicBlock5PrintEv(%"class.v8::internal::compiler::BasicBlock"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::StdoutStream", align 8
  %3 = bitcast %"class.v8::internal::StdoutStream"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %3) #13
  %4 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %2, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = bitcast %"class.v8::internal::StdoutStream"* %2 to %"class.v8::internal::OFStream"*
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"* nonnull %5, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 1), %struct._IO_FILE* %6) #13
  %7 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %2, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %4, align 8
  %8 = call %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() #13
  %9 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %2, i64 0, i32 1, i32 0
  store %"class.v8::base::RecursiveMutex"* %8, %"class.v8::base::RecursiveMutex"** %9, align 8
  call void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"* %8) #13
  %10 = bitcast %"class.v8::internal::StdoutStream"* %2 to %"class.std::__1::basic_ostream"*
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #13
  %12 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %0, i64 0, i32 14, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %11, i64 %13) #13
  %15 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1) #13
  %16 = bitcast %"class.v8::internal::StdoutStream"* %2 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %2, i64 0, i32 2
  %18 = bitcast %"class.std::__1::basic_ios.base"* %17 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %18, align 8
  %19 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %9, align 8
  call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %19) #13
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %16, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %2, i64 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %20) #13
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %10, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #13
  %21 = bitcast %"class.std::__1::basic_ios.base"* %17 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %21) #13
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %3) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StdoutStreamD1Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %5, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %6) #13
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %7) #13
  %8 = bitcast %"class.v8::internal::StdoutStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %8, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #13
  %9 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %9) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_10BasicBlockE(%"class.std::__1::basic_ostream"* returned dereferenceable(160), %"class.v8::internal::compiler::BasicBlock"* nocapture readonly dereferenceable(168)) local_unnamed_addr #0 {
  %3 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #13
  %4 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 14, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %3, i64 %5) #13
  ret %"class.std::__1::basic_ostream"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_10BasicBlock2IdE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.v8::internal::compiler::BasicBlock::Id"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock::Id", %"class.v8::internal::compiler::BasicBlock::Id"* %1, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %0, i64 %4) #13
  ret %"class.std::__1::basic_ostream"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_10BasicBlock7ControlE(%"class.std::__1::basic_ostream"* dereferenceable(160), i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 {
  %3 = load i32, i32* %1, align 4
  switch i32 %3, label %22 [
    i32 0, label %4
    i32 1, label %6
    i32 2, label %8
    i32 3, label %10
    i32 4, label %12
    i32 5, label %14
    i32 6, label %16
    i32 7, label %18
    i32 8, label %20
  ]

4:                                                ; preds = %2
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 4) #13
  br label %23

6:                                                ; preds = %2
  %7 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i64 4) #13
  br label %23

8:                                                ; preds = %2
  %9 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i64 4) #13
  br label %23

10:                                               ; preds = %2
  %11 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i64 6) #13
  br label %23

12:                                               ; preds = %2
  %13 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i64 6) #13
  br label %23

14:                                               ; preds = %2
  %15 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i64 10) #13
  br label %23

16:                                               ; preds = %2
  %17 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0), i64 8) #13
  br label %23

18:                                               ; preds = %2
  %19 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0), i64 6) #13
  br label %23

20:                                               ; preds = %2
  %21 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0), i64 5) #13
  br label %23

22:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0)) #14
  unreachable

23:                                               ; preds = %20, %18, %16, %14, %12, %10, %8, %6, %4
  %24 = phi %"class.std::__1::basic_ostream"* [ %21, %20 ], [ %19, %18 ], [ %17, %16 ], [ %15, %14 ], [ %13, %12 ], [ %11, %10 ], [ %9, %8 ], [ %7, %6 ], [ %5, %4 ]
  ret %"class.std::__1::basic_ostream"* %24
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #6

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler8ScheduleC2EPNS0_4ZoneEm(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::Zone"*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 0
  store %"class.v8::internal::Zone"* %1, %"class.v8::internal::Zone"** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 1
  %6 = ptrtoint %"class.v8::internal::Zone"* %1 to i64
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1
  %8 = bitcast %"struct.std::__1::__compressed_pair_elem.16"* %7 to i64*
  %9 = bitcast %"class.v8::internal::ZoneVector.11"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #13
  store i64 %6, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1
  %12 = bitcast %"struct.std::__1::__compressed_pair_elem.16"* %11 to i64*
  %13 = bitcast %"class.v8::internal::ZoneVector.11"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #13
  store i64 %6, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 3
  %15 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 3, i32 0, i32 0, i32 2, i32 1
  %16 = bitcast %"struct.std::__1::__compressed_pair_elem.16"* %15 to i64*
  %17 = bitcast %"class.v8::internal::ZoneVector.11"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #13
  store i64 %6, i64* %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 4
  %19 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler8Schedule13NewBasicBlockEv(%"class.v8::internal::compiler::Schedule"* %0)
  store %"class.v8::internal::compiler::BasicBlock"* %19, %"class.v8::internal::compiler::BasicBlock"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 5
  %21 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler8Schedule13NewBasicBlockEv(%"class.v8::internal::compiler::Schedule"* %0)
  store %"class.v8::internal::compiler::BasicBlock"* %21, %"class.v8::internal::compiler::BasicBlock"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %23 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.v8::internal::ZoneVector.11"* %10 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %24, %26
  %28 = ashr exact i64 %27, 3
  %29 = icmp ult i64 %28, %2
  br i1 %29, label %30, label %235

30:                                               ; preds = %3
  %31 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %32 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %33, %26
  %35 = ashr exact i64 %34, 3
  %36 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %37 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %36, align 8
  %38 = shl i64 %2, 3
  %39 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %37, i64 0, i32 2
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %37, i64 0, i32 3
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %42, %40
  %44 = icmp ugt i64 %38, %43
  br i1 %44, label %45, label %47, !prof !2

45:                                               ; preds = %30
  %46 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %37, i64 %38) #13
  br label %49

47:                                               ; preds = %30
  %48 = add i64 %40, %38
  store i64 %48, i64* %39, align 8
  br label %49

49:                                               ; preds = %47, %45
  %50 = phi i64 [ %46, %45 ], [ %40, %47 ]
  %51 = inttoptr i64 %50 to %"class.v8::internal::compiler::BasicBlock"**
  %52 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %51, i64 %35
  %53 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %52 to i64
  %54 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %51, i64 %2
  %55 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %54 to i64
  %56 = getelementptr inbounds %"class.v8::internal::ZoneVector.11", %"class.v8::internal::ZoneVector.11"* %10, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %56, align 8
  %58 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %57 to i64
  %59 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %31, align 8
  %60 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %59, %57
  br i1 %60, label %233, label %61

61:                                               ; preds = %49
  %62 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %59, i64 -1
  %63 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %62 to i64
  %64 = sub i64 %63, %58
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = icmp ult i64 %66, 4
  br i1 %67, label %160, label %68

68:                                               ; preds = %61
  %69 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %59, i64 -1
  %70 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %69 to i64
  %71 = sub i64 %70, %58
  %72 = lshr i64 %71, 3
  %73 = xor i64 %72, -1
  %74 = add nsw i64 %35, %73
  %75 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %51, i64 %74
  %76 = xor i64 %72, -1
  %77 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %59, i64 %76
  %78 = icmp ult %"class.v8::internal::compiler::BasicBlock"** %75, %59
  %79 = icmp ult %"class.v8::internal::compiler::BasicBlock"** %77, %52
  %80 = and i1 %78, %79
  br i1 %80, label %160, label %81

81:                                               ; preds = %68
  %82 = and i64 %66, 4611686018427387900
  %83 = sub nsw i64 0, %82
  %84 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %52, i64 %83
  %85 = sub nsw i64 0, %82
  %86 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %59, i64 %85
  %87 = add nsw i64 %82, -4
  %88 = lshr exact i64 %87, 2
  %89 = add nuw nsw i64 %88, 1
  %90 = and i64 %89, 1
  %91 = icmp eq i64 %87, 0
  br i1 %91, label %138, label %92

92:                                               ; preds = %81
  %93 = sub nuw nsw i64 %89, %90
  %94 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %52, i64 -1
  %95 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %59, i64 -1
  %96 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %52, i64 -1
  %97 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %59, i64 -1
  br label %98

98:                                               ; preds = %98, %92
  %99 = phi i64 [ 0, %92 ], [ %133, %98 ]
  %100 = phi i64 [ %93, %92 ], [ %134, %98 ]
  %101 = sub i64 0, %99
  %102 = sub i64 0, %99
  %103 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %94, i64 %101
  %104 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %95, i64 %102
  %105 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %104, i64 -1
  %106 = bitcast %"class.v8::internal::compiler::BasicBlock"** %105 to <2 x i64>*
  %107 = load <2 x i64>, <2 x i64>* %106, align 8, !alias.scope !29
  %108 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %104, i64 -2
  %109 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %108, i64 -1
  %110 = bitcast %"class.v8::internal::compiler::BasicBlock"** %109 to <2 x i64>*
  %111 = load <2 x i64>, <2 x i64>* %110, align 8, !alias.scope !29
  %112 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %103, i64 -1
  %113 = bitcast %"class.v8::internal::compiler::BasicBlock"** %112 to <2 x i64>*
  store <2 x i64> %107, <2 x i64>* %113, align 8, !alias.scope !32, !noalias !29
  %114 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %103, i64 -2
  %115 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %114, i64 -1
  %116 = bitcast %"class.v8::internal::compiler::BasicBlock"** %115 to <2 x i64>*
  store <2 x i64> %111, <2 x i64>* %116, align 8, !alias.scope !32, !noalias !29
  %117 = sub nuw nsw i64 -4, %99
  %118 = sub nuw nsw i64 -4, %99
  %119 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %96, i64 %117
  %120 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %97, i64 %118
  %121 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %120, i64 -1
  %122 = bitcast %"class.v8::internal::compiler::BasicBlock"** %121 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 8, !alias.scope !29
  %124 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %120, i64 -2
  %125 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %124, i64 -1
  %126 = bitcast %"class.v8::internal::compiler::BasicBlock"** %125 to <2 x i64>*
  %127 = load <2 x i64>, <2 x i64>* %126, align 8, !alias.scope !29
  %128 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %119, i64 -1
  %129 = bitcast %"class.v8::internal::compiler::BasicBlock"** %128 to <2 x i64>*
  store <2 x i64> %123, <2 x i64>* %129, align 8, !alias.scope !32, !noalias !29
  %130 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %119, i64 -2
  %131 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %130, i64 -1
  %132 = bitcast %"class.v8::internal::compiler::BasicBlock"** %131 to <2 x i64>*
  store <2 x i64> %127, <2 x i64>* %132, align 8, !alias.scope !32, !noalias !29
  %133 = add i64 %99, 8
  %134 = add i64 %100, -2
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %98, !llvm.loop !34

136:                                              ; preds = %98
  %137 = sub nuw nsw i64 -8, %99
  br label %138

138:                                              ; preds = %136, %81
  %139 = phi i64 [ 0, %81 ], [ %137, %136 ]
  %140 = icmp eq i64 %90, 0
  br i1 %140, label %158, label %141

141:                                              ; preds = %138
  %142 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %52, i64 -1
  %143 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %59, i64 -1
  %144 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %142, i64 %139
  %145 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %143, i64 %139
  %146 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %145, i64 -1
  %147 = bitcast %"class.v8::internal::compiler::BasicBlock"** %146 to <2 x i64>*
  %148 = load <2 x i64>, <2 x i64>* %147, align 8, !alias.scope !29
  %149 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %145, i64 -2
  %150 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %149, i64 -1
  %151 = bitcast %"class.v8::internal::compiler::BasicBlock"** %150 to <2 x i64>*
  %152 = load <2 x i64>, <2 x i64>* %151, align 8, !alias.scope !29
  %153 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %144, i64 -1
  %154 = bitcast %"class.v8::internal::compiler::BasicBlock"** %153 to <2 x i64>*
  store <2 x i64> %148, <2 x i64>* %154, align 8, !alias.scope !32, !noalias !29
  %155 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %144, i64 -2
  %156 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %155, i64 -1
  %157 = bitcast %"class.v8::internal::compiler::BasicBlock"** %156 to <2 x i64>*
  store <2 x i64> %152, <2 x i64>* %157, align 8, !alias.scope !32, !noalias !29
  br label %158

158:                                              ; preds = %138, %141
  %159 = icmp eq i64 %66, %82
  br i1 %159, label %230, label %160

160:                                              ; preds = %158, %68, %61
  %161 = phi %"class.v8::internal::compiler::BasicBlock"** [ %52, %68 ], [ %52, %61 ], [ %84, %158 ]
  %162 = phi %"class.v8::internal::compiler::BasicBlock"** [ %59, %68 ], [ %59, %61 ], [ %86, %158 ]
  %163 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %162, i64 -1
  %164 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %163 to i64
  %165 = sub i64 %164, %58
  %166 = lshr i64 %165, 3
  %167 = add nuw nsw i64 %166, 1
  %168 = and i64 %167, 7
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %181, label %170

170:                                              ; preds = %160, %170
  %171 = phi %"class.v8::internal::compiler::BasicBlock"** [ %174, %170 ], [ %161, %160 ]
  %172 = phi %"class.v8::internal::compiler::BasicBlock"** [ %175, %170 ], [ %162, %160 ]
  %173 = phi i64 [ %179, %170 ], [ %168, %160 ]
  %174 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %171, i64 -1
  %175 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %172, i64 -1
  %176 = bitcast %"class.v8::internal::compiler::BasicBlock"** %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = bitcast %"class.v8::internal::compiler::BasicBlock"** %174 to i64*
  store i64 %177, i64* %178, align 8
  %179 = add i64 %173, -1
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %170, !llvm.loop !35

181:                                              ; preds = %170, %160
  %182 = phi %"class.v8::internal::compiler::BasicBlock"** [ undef, %160 ], [ %174, %170 ]
  %183 = phi %"class.v8::internal::compiler::BasicBlock"** [ %161, %160 ], [ %174, %170 ]
  %184 = phi %"class.v8::internal::compiler::BasicBlock"** [ %162, %160 ], [ %175, %170 ]
  %185 = icmp ult i64 %165, 56
  br i1 %185, label %230, label %186

186:                                              ; preds = %181, %186
  %187 = phi %"class.v8::internal::compiler::BasicBlock"** [ %224, %186 ], [ %183, %181 ]
  %188 = phi %"class.v8::internal::compiler::BasicBlock"** [ %225, %186 ], [ %184, %181 ]
  %189 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %187, i64 -1
  %190 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %188, i64 -1
  %191 = bitcast %"class.v8::internal::compiler::BasicBlock"** %190 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = bitcast %"class.v8::internal::compiler::BasicBlock"** %189 to i64*
  store i64 %192, i64* %193, align 8
  %194 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %187, i64 -2
  %195 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %188, i64 -2
  %196 = bitcast %"class.v8::internal::compiler::BasicBlock"** %195 to i64*
  %197 = load i64, i64* %196, align 8
  %198 = bitcast %"class.v8::internal::compiler::BasicBlock"** %194 to i64*
  store i64 %197, i64* %198, align 8
  %199 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %187, i64 -3
  %200 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %188, i64 -3
  %201 = bitcast %"class.v8::internal::compiler::BasicBlock"** %200 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = bitcast %"class.v8::internal::compiler::BasicBlock"** %199 to i64*
  store i64 %202, i64* %203, align 8
  %204 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %187, i64 -4
  %205 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %188, i64 -4
  %206 = bitcast %"class.v8::internal::compiler::BasicBlock"** %205 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = bitcast %"class.v8::internal::compiler::BasicBlock"** %204 to i64*
  store i64 %207, i64* %208, align 8
  %209 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %187, i64 -5
  %210 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %188, i64 -5
  %211 = bitcast %"class.v8::internal::compiler::BasicBlock"** %210 to i64*
  %212 = load i64, i64* %211, align 8
  %213 = bitcast %"class.v8::internal::compiler::BasicBlock"** %209 to i64*
  store i64 %212, i64* %213, align 8
  %214 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %187, i64 -6
  %215 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %188, i64 -6
  %216 = bitcast %"class.v8::internal::compiler::BasicBlock"** %215 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = bitcast %"class.v8::internal::compiler::BasicBlock"** %214 to i64*
  store i64 %217, i64* %218, align 8
  %219 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %187, i64 -7
  %220 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %188, i64 -7
  %221 = bitcast %"class.v8::internal::compiler::BasicBlock"** %220 to i64*
  %222 = load i64, i64* %221, align 8
  %223 = bitcast %"class.v8::internal::compiler::BasicBlock"** %219 to i64*
  store i64 %222, i64* %223, align 8
  %224 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %187, i64 -8
  %225 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %188, i64 -8
  %226 = bitcast %"class.v8::internal::compiler::BasicBlock"** %225 to i64*
  %227 = load i64, i64* %226, align 8
  %228 = bitcast %"class.v8::internal::compiler::BasicBlock"** %224 to i64*
  store i64 %227, i64* %228, align 8
  %229 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %225, %57
  br i1 %229, label %230, label %186, !llvm.loop !36

230:                                              ; preds = %181, %186, %158
  %231 = phi %"class.v8::internal::compiler::BasicBlock"** [ %84, %158 ], [ %182, %181 ], [ %224, %186 ]
  %232 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %231 to i64
  br label %233

233:                                              ; preds = %230, %49
  %234 = phi i64 [ %232, %230 ], [ %53, %49 ]
  store i64 %234, i64* %25, align 8
  store i64 %53, i64* %32, align 8
  store i64 %55, i64* %23, align 8
  br label %235

235:                                              ; preds = %3, %233
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler8Schedule13NewBasicBlockEv(%"class.v8::internal::compiler::Schedule"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 1, i32 0
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %6 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.12"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = ashr exact i64 %10, 3
  %12 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %3, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %15, %13
  %17 = icmp ult i64 %16, 168
  br i1 %17, label %18, label %20, !prof !2

18:                                               ; preds = %1
  %19 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %3, i64 168) #13
  br label %22

20:                                               ; preds = %1
  %21 = add i64 %13, 168
  store i64 %21, i64* %12, align 8
  br label %22

22:                                               ; preds = %18, %20
  %23 = phi i64 [ %19, %18 ], [ %13, %20 ]
  %24 = inttoptr i64 %23 to %"class.v8::internal::compiler::BasicBlock"*
  %25 = bitcast %"class.v8::internal::compiler::Schedule"* %0 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %24, i64 0, i32 0
  store i32 -1, i32* %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %24, i64 0, i32 1
  store i32 -1, i32* %28, align 4
  %29 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %24, i64 0, i32 2
  store i8 0, i8* %29, align 8
  %30 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %24, i64 0, i32 3
  store i32 -1, i32* %30, align 4
  %31 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %24, i64 0, i32 4
  %32 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %24, i64 0, i32 11, i32 0, i32 0, i32 2, i32 1
  %33 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %32 to i64*
  %34 = bitcast %"class.v8::internal::compiler::BasicBlock"** %31 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 72, i1 false) #13
  store i64 %26, i64* %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %24, i64 0, i32 12
  %36 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %24, i64 0, i32 12, i32 0, i32 0, i32 2, i32 1
  %37 = bitcast %"struct.std::__1::__compressed_pair_elem.16"* %36 to i64*
  %38 = bitcast %"class.v8::internal::ZoneVector.11"* %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #13
  store i64 %26, i64* %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %24, i64 0, i32 13
  %40 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %24, i64 0, i32 13, i32 0, i32 0, i32 2, i32 1
  %41 = bitcast %"struct.std::__1::__compressed_pair_elem.16"* %40 to i64*
  %42 = bitcast %"class.v8::internal::ZoneVector.11"* %39 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #13
  store i64 %26, i64* %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %24, i64 0, i32 14, i32 0
  store i64 %11, i64* %43, align 8
  %44 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %5, align 8
  %45 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %46 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %45, align 8
  %47 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %44, %46
  %48 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %46 to i64
  br i1 %47, label %53, label %49

49:                                               ; preds = %22
  %50 = bitcast %"class.v8::internal::compiler::BasicBlock"** %44 to i64*
  store i64 %23, i64* %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %44, i64 1
  %52 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %51 to i64
  store i64 %52, i64* %6, align 8
  br label %276

53:                                               ; preds = %22
  %54 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %44 to i64
  %55 = load i64, i64* %8, align 8
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 3
  %58 = add nsw i64 %57, 1
  %59 = icmp ugt i64 %58, 268435455
  br i1 %59, label %60, label %62

60:                                               ; preds = %53
  %61 = bitcast %"class.std::__1::vector.12"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %61) #14
  unreachable

62:                                               ; preds = %53
  %63 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %45 to i64*
  %64 = sub i64 %48, %55
  %65 = ashr exact i64 %64, 3
  %66 = icmp ult i64 %65, 134217727
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  %68 = ashr exact i64 %64, 2
  %69 = icmp ult i64 %68, %58
  %70 = select i1 %69, i64 %58, i64 %68
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %90, label %72

72:                                               ; preds = %67, %62
  %73 = phi i64 [ %70, %67 ], [ 268435455, %62 ]
  %74 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %75 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %74, align 8
  %76 = shl i64 %73, 3
  %77 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %75, i64 0, i32 2
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %75, i64 0, i32 3
  %80 = load i64, i64* %79, align 8
  %81 = sub i64 %80, %78
  %82 = icmp ugt i64 %76, %81
  br i1 %82, label %83, label %85, !prof !2

83:                                               ; preds = %72
  %84 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %75, i64 %76) #13
  br label %87

85:                                               ; preds = %72
  %86 = add i64 %78, %76
  store i64 %86, i64* %77, align 8
  br label %87

87:                                               ; preds = %85, %83
  %88 = phi i64 [ %84, %83 ], [ %78, %85 ]
  %89 = inttoptr i64 %88 to %"class.v8::internal::compiler::BasicBlock"**
  br label %90

90:                                               ; preds = %87, %67
  %91 = phi i64 [ %73, %87 ], [ 0, %67 ]
  %92 = phi %"class.v8::internal::compiler::BasicBlock"** [ %89, %87 ], [ null, %67 ]
  %93 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %92, i64 %57
  %94 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %92, i64 %91
  %95 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %94 to i64
  %96 = bitcast %"class.v8::internal::compiler::BasicBlock"** %93 to i64*
  store i64 %23, i64* %96, align 8
  %97 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %93, i64 1
  %98 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %97 to i64
  %99 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %4, i64 0, i32 0, i32 0
  %100 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %99, align 8
  %101 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %100 to i64
  %102 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %5, align 8
  %103 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %102, %100
  br i1 %103, label %273, label %104

104:                                              ; preds = %90
  %105 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %102, i64 -1
  %106 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %105 to i64
  %107 = sub i64 %106, %101
  %108 = lshr i64 %107, 3
  %109 = add nuw nsw i64 %108, 1
  %110 = icmp ult i64 %109, 4
  br i1 %110, label %203, label %111

111:                                              ; preds = %104
  %112 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %102, i64 -1
  %113 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %112 to i64
  %114 = sub i64 %113, %101
  %115 = lshr i64 %114, 3
  %116 = xor i64 %115, -1
  %117 = add nsw i64 %57, %116
  %118 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %92, i64 %117
  %119 = xor i64 %115, -1
  %120 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %102, i64 %119
  %121 = icmp ult %"class.v8::internal::compiler::BasicBlock"** %118, %102
  %122 = icmp ult %"class.v8::internal::compiler::BasicBlock"** %120, %93
  %123 = and i1 %121, %122
  br i1 %123, label %203, label %124

124:                                              ; preds = %111
  %125 = and i64 %109, 4611686018427387900
  %126 = sub nsw i64 0, %125
  %127 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %93, i64 %126
  %128 = sub nsw i64 0, %125
  %129 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %102, i64 %128
  %130 = add nsw i64 %125, -4
  %131 = lshr exact i64 %130, 2
  %132 = add nuw nsw i64 %131, 1
  %133 = and i64 %132, 1
  %134 = icmp eq i64 %130, 0
  br i1 %134, label %181, label %135

135:                                              ; preds = %124
  %136 = sub nuw nsw i64 %132, %133
  %137 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %93, i64 -1
  %138 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %102, i64 -1
  %139 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %93, i64 -1
  %140 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %102, i64 -1
  br label %141

141:                                              ; preds = %141, %135
  %142 = phi i64 [ 0, %135 ], [ %176, %141 ]
  %143 = phi i64 [ %136, %135 ], [ %177, %141 ]
  %144 = sub i64 0, %142
  %145 = sub i64 0, %142
  %146 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %137, i64 %144
  %147 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %138, i64 %145
  %148 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %147, i64 -1
  %149 = bitcast %"class.v8::internal::compiler::BasicBlock"** %148 to <2 x i64>*
  %150 = load <2 x i64>, <2 x i64>* %149, align 8, !alias.scope !37
  %151 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %147, i64 -2
  %152 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %151, i64 -1
  %153 = bitcast %"class.v8::internal::compiler::BasicBlock"** %152 to <2 x i64>*
  %154 = load <2 x i64>, <2 x i64>* %153, align 8, !alias.scope !37
  %155 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %146, i64 -1
  %156 = bitcast %"class.v8::internal::compiler::BasicBlock"** %155 to <2 x i64>*
  store <2 x i64> %150, <2 x i64>* %156, align 8, !alias.scope !40, !noalias !37
  %157 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %146, i64 -2
  %158 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %157, i64 -1
  %159 = bitcast %"class.v8::internal::compiler::BasicBlock"** %158 to <2 x i64>*
  store <2 x i64> %154, <2 x i64>* %159, align 8, !alias.scope !40, !noalias !37
  %160 = sub nuw nsw i64 -4, %142
  %161 = sub nuw nsw i64 -4, %142
  %162 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %139, i64 %160
  %163 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %140, i64 %161
  %164 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %163, i64 -1
  %165 = bitcast %"class.v8::internal::compiler::BasicBlock"** %164 to <2 x i64>*
  %166 = load <2 x i64>, <2 x i64>* %165, align 8, !alias.scope !37
  %167 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %163, i64 -2
  %168 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %167, i64 -1
  %169 = bitcast %"class.v8::internal::compiler::BasicBlock"** %168 to <2 x i64>*
  %170 = load <2 x i64>, <2 x i64>* %169, align 8, !alias.scope !37
  %171 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %162, i64 -1
  %172 = bitcast %"class.v8::internal::compiler::BasicBlock"** %171 to <2 x i64>*
  store <2 x i64> %166, <2 x i64>* %172, align 8, !alias.scope !40, !noalias !37
  %173 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %162, i64 -2
  %174 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %173, i64 -1
  %175 = bitcast %"class.v8::internal::compiler::BasicBlock"** %174 to <2 x i64>*
  store <2 x i64> %170, <2 x i64>* %175, align 8, !alias.scope !40, !noalias !37
  %176 = add i64 %142, 8
  %177 = add i64 %143, -2
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %179, label %141, !llvm.loop !42

179:                                              ; preds = %141
  %180 = sub nuw nsw i64 -8, %142
  br label %181

181:                                              ; preds = %179, %124
  %182 = phi i64 [ 0, %124 ], [ %180, %179 ]
  %183 = icmp eq i64 %133, 0
  br i1 %183, label %201, label %184

184:                                              ; preds = %181
  %185 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %93, i64 -1
  %186 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %102, i64 -1
  %187 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %185, i64 %182
  %188 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %186, i64 %182
  %189 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %188, i64 -1
  %190 = bitcast %"class.v8::internal::compiler::BasicBlock"** %189 to <2 x i64>*
  %191 = load <2 x i64>, <2 x i64>* %190, align 8, !alias.scope !37
  %192 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %188, i64 -2
  %193 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %192, i64 -1
  %194 = bitcast %"class.v8::internal::compiler::BasicBlock"** %193 to <2 x i64>*
  %195 = load <2 x i64>, <2 x i64>* %194, align 8, !alias.scope !37
  %196 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %187, i64 -1
  %197 = bitcast %"class.v8::internal::compiler::BasicBlock"** %196 to <2 x i64>*
  store <2 x i64> %191, <2 x i64>* %197, align 8, !alias.scope !40, !noalias !37
  %198 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %187, i64 -2
  %199 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %198, i64 -1
  %200 = bitcast %"class.v8::internal::compiler::BasicBlock"** %199 to <2 x i64>*
  store <2 x i64> %195, <2 x i64>* %200, align 8, !alias.scope !40, !noalias !37
  br label %201

201:                                              ; preds = %181, %184
  %202 = icmp eq i64 %109, %125
  br i1 %202, label %273, label %203

203:                                              ; preds = %201, %111, %104
  %204 = phi %"class.v8::internal::compiler::BasicBlock"** [ %93, %111 ], [ %93, %104 ], [ %127, %201 ]
  %205 = phi %"class.v8::internal::compiler::BasicBlock"** [ %102, %111 ], [ %102, %104 ], [ %129, %201 ]
  %206 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %205, i64 -1
  %207 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %206 to i64
  %208 = sub i64 %207, %101
  %209 = lshr i64 %208, 3
  %210 = add nuw nsw i64 %209, 1
  %211 = and i64 %210, 7
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %224, label %213

213:                                              ; preds = %203, %213
  %214 = phi %"class.v8::internal::compiler::BasicBlock"** [ %217, %213 ], [ %204, %203 ]
  %215 = phi %"class.v8::internal::compiler::BasicBlock"** [ %218, %213 ], [ %205, %203 ]
  %216 = phi i64 [ %222, %213 ], [ %211, %203 ]
  %217 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %214, i64 -1
  %218 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %215, i64 -1
  %219 = bitcast %"class.v8::internal::compiler::BasicBlock"** %218 to i64*
  %220 = load i64, i64* %219, align 8
  %221 = bitcast %"class.v8::internal::compiler::BasicBlock"** %217 to i64*
  store i64 %220, i64* %221, align 8
  %222 = add i64 %216, -1
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %224, label %213, !llvm.loop !43

224:                                              ; preds = %213, %203
  %225 = phi %"class.v8::internal::compiler::BasicBlock"** [ undef, %203 ], [ %217, %213 ]
  %226 = phi %"class.v8::internal::compiler::BasicBlock"** [ %204, %203 ], [ %217, %213 ]
  %227 = phi %"class.v8::internal::compiler::BasicBlock"** [ %205, %203 ], [ %218, %213 ]
  %228 = icmp ult i64 %208, 56
  br i1 %228, label %273, label %229

229:                                              ; preds = %224, %229
  %230 = phi %"class.v8::internal::compiler::BasicBlock"** [ %267, %229 ], [ %226, %224 ]
  %231 = phi %"class.v8::internal::compiler::BasicBlock"** [ %268, %229 ], [ %227, %224 ]
  %232 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %230, i64 -1
  %233 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %231, i64 -1
  %234 = bitcast %"class.v8::internal::compiler::BasicBlock"** %233 to i64*
  %235 = load i64, i64* %234, align 8
  %236 = bitcast %"class.v8::internal::compiler::BasicBlock"** %232 to i64*
  store i64 %235, i64* %236, align 8
  %237 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %230, i64 -2
  %238 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %231, i64 -2
  %239 = bitcast %"class.v8::internal::compiler::BasicBlock"** %238 to i64*
  %240 = load i64, i64* %239, align 8
  %241 = bitcast %"class.v8::internal::compiler::BasicBlock"** %237 to i64*
  store i64 %240, i64* %241, align 8
  %242 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %230, i64 -3
  %243 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %231, i64 -3
  %244 = bitcast %"class.v8::internal::compiler::BasicBlock"** %243 to i64*
  %245 = load i64, i64* %244, align 8
  %246 = bitcast %"class.v8::internal::compiler::BasicBlock"** %242 to i64*
  store i64 %245, i64* %246, align 8
  %247 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %230, i64 -4
  %248 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %231, i64 -4
  %249 = bitcast %"class.v8::internal::compiler::BasicBlock"** %248 to i64*
  %250 = load i64, i64* %249, align 8
  %251 = bitcast %"class.v8::internal::compiler::BasicBlock"** %247 to i64*
  store i64 %250, i64* %251, align 8
  %252 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %230, i64 -5
  %253 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %231, i64 -5
  %254 = bitcast %"class.v8::internal::compiler::BasicBlock"** %253 to i64*
  %255 = load i64, i64* %254, align 8
  %256 = bitcast %"class.v8::internal::compiler::BasicBlock"** %252 to i64*
  store i64 %255, i64* %256, align 8
  %257 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %230, i64 -6
  %258 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %231, i64 -6
  %259 = bitcast %"class.v8::internal::compiler::BasicBlock"** %258 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = bitcast %"class.v8::internal::compiler::BasicBlock"** %257 to i64*
  store i64 %260, i64* %261, align 8
  %262 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %230, i64 -7
  %263 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %231, i64 -7
  %264 = bitcast %"class.v8::internal::compiler::BasicBlock"** %263 to i64*
  %265 = load i64, i64* %264, align 8
  %266 = bitcast %"class.v8::internal::compiler::BasicBlock"** %262 to i64*
  store i64 %265, i64* %266, align 8
  %267 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %230, i64 -8
  %268 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %231, i64 -8
  %269 = bitcast %"class.v8::internal::compiler::BasicBlock"** %268 to i64*
  %270 = load i64, i64* %269, align 8
  %271 = bitcast %"class.v8::internal::compiler::BasicBlock"** %267 to i64*
  store i64 %270, i64* %271, align 8
  %272 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %268, %100
  br i1 %272, label %273, label %229, !llvm.loop !44

273:                                              ; preds = %224, %229, %201, %90
  %274 = phi %"class.v8::internal::compiler::BasicBlock"** [ %93, %90 ], [ %127, %201 ], [ %225, %224 ], [ %267, %229 ]
  %275 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %274 to i64
  store i64 %275, i64* %8, align 8
  store i64 %98, i64* %6, align 8
  store i64 %95, i64* %63, align 8
  br label %276

276:                                              ; preds = %49, %273
  ret %"class.v8::internal::compiler::BasicBlock"* %24
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::compiler::BasicBlock"* @_ZNK2v88internal8compiler8Schedule5blockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* nocapture readonly, %"class.v8::internal::compiler::Node"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 16777215
  %6 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %8 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.12"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = lshr exact i64 %12, 3
  %14 = trunc i64 %13 to i32
  %15 = icmp ult i32 %5, %14
  br i1 %15, label %16, label %21

16:                                               ; preds = %2
  %17 = inttoptr i64 %11 to %"class.v8::internal::compiler::BasicBlock"**
  %18 = zext i32 %5 to i64
  %19 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %17, i64 %18
  %20 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %19, align 8
  br label %21

21:                                               ; preds = %2, %16
  %22 = phi %"class.v8::internal::compiler::BasicBlock"* [ %20, %16 ], [ null, %2 ]
  ret %"class.v8::internal::compiler::BasicBlock"* %22
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler8Schedule11IsScheduledEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* nocapture readonly, %"class.v8::internal::compiler::Node"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 16777215
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %9 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.12"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %14, %6
  br i1 %15, label %16, label %21

16:                                               ; preds = %2
  %17 = inttoptr i64 %12 to %"class.v8::internal::compiler::BasicBlock"**
  %18 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %17, i64 %6
  %19 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %18, align 8
  %20 = icmp ne %"class.v8::internal::compiler::BasicBlock"* %19, null
  br label %21

21:                                               ; preds = %2, %16
  %22 = phi i1 [ %20, %16 ], [ false, %2 ]
  ret i1 %22
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler8Schedule12GetBlockByIdENS1_10BasicBlock2IdE(%"class.v8::internal::compiler::Schedule"* nocapture readonly, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %4, i64 %1
  %6 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %5, align 8
  ret %"class.v8::internal::compiler::BasicBlock"* %6
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler8Schedule14ClearBlockByIdENS1_10BasicBlock2IdE(%"class.v8::internal::compiler::Schedule"* nocapture readonly, i64) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %4, i64 %1
  store %"class.v8::internal::compiler::BasicBlock"* null, %"class.v8::internal::compiler::BasicBlock"** %5, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal8compiler8Schedule14SameBasicBlockEPNS1_4NodeES4_(%"class.v8::internal::compiler::Schedule"* nocapture readonly, %"class.v8::internal::compiler::Node"* nocapture readonly, %"class.v8::internal::compiler::Node"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 16777215
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %9 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.12"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = lshr exact i64 %13, 3
  %15 = trunc i64 %14 to i32
  %16 = icmp ult i32 %6, %15
  br i1 %16, label %17, label %35

17:                                               ; preds = %3
  %18 = inttoptr i64 %12 to %"class.v8::internal::compiler::BasicBlock"**
  %19 = zext i32 %6 to i64
  %20 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %18, i64 %19
  %21 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %20, align 8
  %22 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %21, null
  br i1 %22, label %35, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = and i32 %25, 16777215
  %27 = icmp ult i32 %26, %15
  br i1 %27, label %28, label %32

28:                                               ; preds = %23
  %29 = zext i32 %26 to i64
  %30 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %18, i64 %29
  %31 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %30, align 8
  br label %32

32:                                               ; preds = %23, %28
  %33 = phi %"class.v8::internal::compiler::BasicBlock"* [ %31, %28 ], [ null, %23 ]
  %34 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %21, %33
  br label %35

35:                                               ; preds = %3, %17, %32
  %36 = phi i1 [ false, %17 ], [ %34, %32 ], [ false, %3 ]
  ret i1 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler8Schedule8PlanNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::StdoutStream", align 8
  %5 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !45
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %39, label %7

7:                                                ; preds = %3
  %8 = bitcast %"class.v8::internal::StdoutStream"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %8) #13
  %9 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %4, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = bitcast %"class.v8::internal::StdoutStream"* %4 to %"class.v8::internal::OFStream"*
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"* nonnull %10, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 1), %struct._IO_FILE* %11) #13
  %12 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %4, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %12, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  %13 = call %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() #13
  %14 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %4, i64 0, i32 1, i32 0
  store %"class.v8::base::RecursiveMutex"* %13, %"class.v8::base::RecursiveMutex"** %14, align 8
  call void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"* %13) #13
  %15 = bitcast %"class.v8::internal::StdoutStream"* %4 to %"class.std::__1::basic_ostream"*
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %15, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i64 10) #13
  %17 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %18 = load i32, i32* %17, align 4
  %19 = and i32 %18, 16777215
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* nonnull %15, i32 %19) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0), i64 1) #13
  %22 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 0
  %23 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %23, i64 0, i32 1
  %25 = load i8*, i8** %24, align 8
  %26 = call i64 @strlen(i8* %25) #13
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %15, i8* %25, i64 %26) #13
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %15, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14, i64 0, i64 0), i64 20) #13
  %29 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 14, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* nonnull %15, i64 %30) #13
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1) #13
  %33 = bitcast %"class.v8::internal::StdoutStream"* %4 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %33, align 8
  %34 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %4, i64 0, i32 2
  %35 = bitcast %"class.std::__1::basic_ios.base"* %34 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %35, align 8
  %36 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %14, align 8
  call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %36) #13
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %33, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %4, i64 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %37) #13
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %15, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #13
  %38 = bitcast %"class.std::__1::basic_ios.base"* %34 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %38) #13
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %8) #13
  br label %39

39:                                               ; preds = %3, %7
  %40 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %41 = load i32, i32* %40, align 4
  %42 = and i32 %41, 16777215
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0
  %45 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %46 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.std::__1::vector.12"* %44 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = sub i64 %47, %49
  %51 = ashr exact i64 %50, 3
  %52 = icmp ugt i64 %51, %43
  %53 = inttoptr i64 %49 to %"class.v8::internal::compiler::BasicBlock"**
  br i1 %52, label %66, label %54

54:                                               ; preds = %39
  %55 = add nuw nsw i32 %42, 1
  %56 = zext i32 %55 to i64
  %57 = icmp ult i64 %51, %56
  br i1 %57, label %58, label %62

58:                                               ; preds = %54
  %59 = sub nsw i64 %56, %51
  call void @_ZNSt3__16vectorIPN2v88internal8compiler10BasicBlockENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.12"* %44, i64 %59) #13
  %60 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %44, i64 0, i32 0, i32 0
  %61 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %60, align 8
  br label %66

62:                                               ; preds = %54
  %63 = icmp ugt i64 %51, %56
  br i1 %63, label %64, label %66

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %53, i64 %56
  store %"class.v8::internal::compiler::BasicBlock"** %65, %"class.v8::internal::compiler::BasicBlock"*** %45, align 8
  br label %66

66:                                               ; preds = %39, %58, %62, %64
  %67 = phi %"class.v8::internal::compiler::BasicBlock"** [ %53, %64 ], [ %53, %62 ], [ %61, %58 ], [ %53, %39 ]
  %68 = load i32, i32* %40, align 4
  %69 = and i32 %68, 16777215
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %67, i64 %70
  store %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::BasicBlock"** %71, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler8Schedule15SetBlockForNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 16777215
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %10 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.12"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 3
  %16 = icmp ugt i64 %15, %7
  %17 = inttoptr i64 %13 to %"class.v8::internal::compiler::BasicBlock"**
  br i1 %16, label %30, label %18

18:                                               ; preds = %3
  %19 = add nuw nsw i32 %6, 1
  %20 = zext i32 %19 to i64
  %21 = icmp ult i64 %15, %20
  br i1 %21, label %22, label %26

22:                                               ; preds = %18
  %23 = sub nsw i64 %20, %15
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler10BasicBlockENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.12"* %8, i64 %23) #13
  %24 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %8, i64 0, i32 0, i32 0
  %25 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %24, align 8
  br label %30

26:                                               ; preds = %18
  %27 = icmp ugt i64 %15, %20
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %17, i64 %20
  store %"class.v8::internal::compiler::BasicBlock"** %29, %"class.v8::internal::compiler::BasicBlock"*** %9, align 8
  br label %30

30:                                               ; preds = %28, %26, %22, %3
  %31 = phi %"class.v8::internal::compiler::BasicBlock"** [ %17, %28 ], [ %17, %26 ], [ %25, %22 ], [ %17, %3 ]
  %32 = load i32, i32* %4, align 4
  %33 = and i32 %32, 16777215
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %31, i64 %34
  store %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::BasicBlock"** %35, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler8Schedule7AddNodeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::StdoutStream", align 8
  %5 = load i8, i8* @_ZN2v88internal26FLAG_trace_turbo_schedulerE, align 1, !range !45
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %39, label %7

7:                                                ; preds = %3
  %8 = bitcast %"class.v8::internal::StdoutStream"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %8) #13
  %9 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %4, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = bitcast %"class.v8::internal::StdoutStream"* %4 to %"class.v8::internal::OFStream"*
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"* nonnull %10, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 1), %struct._IO_FILE* %11) #13
  %12 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %4, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %12, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  %13 = call %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() #13
  %14 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %4, i64 0, i32 1, i32 0
  store %"class.v8::base::RecursiveMutex"* %13, %"class.v8::base::RecursiveMutex"** %14, align 8
  call void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"* %13) #13
  %15 = bitcast %"class.v8::internal::StdoutStream"* %4 to %"class.std::__1::basic_ostream"*
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %15, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i64 0, i64 0), i64 8) #13
  %17 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %18 = load i32, i32* %17, align 4
  %19 = and i32 %18, 16777215
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* nonnull %15, i32 %19) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0), i64 1) #13
  %22 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 0
  %23 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %23, i64 0, i32 1
  %25 = load i8*, i8** %24, align 8
  %26 = call i64 @strlen(i8* %25) #13
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %15, i8* %25, i64 %26) #13
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %15, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0), i64 5) #13
  %29 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 14, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* nonnull %15, i64 %30) #13
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1) #13
  %33 = bitcast %"class.v8::internal::StdoutStream"* %4 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %33, align 8
  %34 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %4, i64 0, i32 2
  %35 = bitcast %"class.std::__1::basic_ios.base"* %34 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %35, align 8
  %36 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %14, align 8
  call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %36) #13
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %33, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %4, i64 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %37) #13
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %15, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #13
  %38 = bitcast %"class.std::__1::basic_ios.base"* %34 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %38) #13
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %8) #13
  br label %39

39:                                               ; preds = %3, %7
  %40 = ptrtoint %"class.v8::internal::compiler::Node"* %2 to i64
  %41 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 11, i32 0
  %42 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 11, i32 0, i32 0, i32 1
  %43 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 11, i32 0, i32 0, i32 2, i32 0, i32 0
  %45 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %44, align 8
  %46 = icmp eq %"class.v8::internal::compiler::Node"** %43, %45
  %47 = ptrtoint %"class.v8::internal::compiler::Node"** %45 to i64
  br i1 %46, label %53, label %48

48:                                               ; preds = %39
  %49 = bitcast %"class.v8::internal::compiler::Node"** %43 to i64*
  store i64 %40, i64* %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %43, i64 1
  %51 = ptrtoint %"class.v8::internal::compiler::Node"** %50 to i64
  %52 = bitcast %"class.v8::internal::compiler::Node"*** %42 to i64*
  store i64 %51, i64* %52, align 8
  br label %278

53:                                               ; preds = %39
  %54 = ptrtoint %"class.v8::internal::compiler::Node"** %43 to i64
  %55 = bitcast %"class.v8::internal::compiler::Node"*** %42 to i64*
  %56 = bitcast %"class.std::__1::vector"* %41 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = sub i64 %54, %57
  %59 = ashr exact i64 %58, 3
  %60 = add nsw i64 %59, 1
  %61 = icmp ugt i64 %60, 268435455
  br i1 %61, label %62, label %64

62:                                               ; preds = %53
  %63 = bitcast %"class.std::__1::vector"* %41 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %63) #14
  unreachable

64:                                               ; preds = %53
  %65 = bitcast %"class.v8::internal::compiler::Node"*** %44 to i64*
  %66 = sub i64 %47, %57
  %67 = ashr exact i64 %66, 3
  %68 = icmp ult i64 %67, 134217727
  br i1 %68, label %69, label %74

69:                                               ; preds = %64
  %70 = ashr exact i64 %66, 2
  %71 = icmp ult i64 %70, %60
  %72 = select i1 %71, i64 %60, i64 %70
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %92, label %74

74:                                               ; preds = %69, %64
  %75 = phi i64 [ %72, %69 ], [ 268435455, %64 ]
  %76 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 11, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %77 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %76, align 8
  %78 = shl i64 %75, 3
  %79 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %77, i64 0, i32 2
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %77, i64 0, i32 3
  %82 = load i64, i64* %81, align 8
  %83 = sub i64 %82, %80
  %84 = icmp ugt i64 %78, %83
  br i1 %84, label %85, label %87, !prof !2

85:                                               ; preds = %74
  %86 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %77, i64 %78) #13
  br label %89

87:                                               ; preds = %74
  %88 = add i64 %80, %78
  store i64 %88, i64* %79, align 8
  br label %89

89:                                               ; preds = %87, %85
  %90 = phi i64 [ %86, %85 ], [ %80, %87 ]
  %91 = inttoptr i64 %90 to %"class.v8::internal::compiler::Node"**
  br label %92

92:                                               ; preds = %89, %69
  %93 = phi i64 [ %75, %89 ], [ 0, %69 ]
  %94 = phi %"class.v8::internal::compiler::Node"** [ %91, %89 ], [ null, %69 ]
  %95 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %94, i64 %59
  %96 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %94, i64 %93
  %97 = ptrtoint %"class.v8::internal::compiler::Node"** %96 to i64
  %98 = bitcast %"class.v8::internal::compiler::Node"** %95 to i64*
  store i64 %40, i64* %98, align 8
  %99 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %95, i64 1
  %100 = ptrtoint %"class.v8::internal::compiler::Node"** %99 to i64
  %101 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %41, i64 0, i32 0, i32 0
  %102 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %101, align 8
  %103 = ptrtoint %"class.v8::internal::compiler::Node"** %102 to i64
  %104 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %42, align 8
  %105 = icmp eq %"class.v8::internal::compiler::Node"** %104, %102
  br i1 %105, label %275, label %106

106:                                              ; preds = %92
  %107 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %104, i64 -1
  %108 = ptrtoint %"class.v8::internal::compiler::Node"** %107 to i64
  %109 = sub i64 %108, %103
  %110 = lshr i64 %109, 3
  %111 = add nuw nsw i64 %110, 1
  %112 = icmp ult i64 %111, 4
  br i1 %112, label %205, label %113

113:                                              ; preds = %106
  %114 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %104, i64 -1
  %115 = ptrtoint %"class.v8::internal::compiler::Node"** %114 to i64
  %116 = sub i64 %115, %103
  %117 = lshr i64 %116, 3
  %118 = xor i64 %117, -1
  %119 = add nsw i64 %59, %118
  %120 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %94, i64 %119
  %121 = xor i64 %117, -1
  %122 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %104, i64 %121
  %123 = icmp ult %"class.v8::internal::compiler::Node"** %120, %104
  %124 = icmp ult %"class.v8::internal::compiler::Node"** %122, %95
  %125 = and i1 %123, %124
  br i1 %125, label %205, label %126

126:                                              ; preds = %113
  %127 = and i64 %111, 4611686018427387900
  %128 = sub nsw i64 0, %127
  %129 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %95, i64 %128
  %130 = sub nsw i64 0, %127
  %131 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %104, i64 %130
  %132 = add nsw i64 %127, -4
  %133 = lshr exact i64 %132, 2
  %134 = add nuw nsw i64 %133, 1
  %135 = and i64 %134, 1
  %136 = icmp eq i64 %132, 0
  br i1 %136, label %183, label %137

137:                                              ; preds = %126
  %138 = sub nuw nsw i64 %134, %135
  %139 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %95, i64 -1
  %140 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %104, i64 -1
  %141 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %95, i64 -1
  %142 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %104, i64 -1
  br label %143

143:                                              ; preds = %143, %137
  %144 = phi i64 [ 0, %137 ], [ %178, %143 ]
  %145 = phi i64 [ %138, %137 ], [ %179, %143 ]
  %146 = sub i64 0, %144
  %147 = sub i64 0, %144
  %148 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %139, i64 %146
  %149 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %140, i64 %147
  %150 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %149, i64 -1
  %151 = bitcast %"class.v8::internal::compiler::Node"** %150 to <2 x i64>*
  %152 = load <2 x i64>, <2 x i64>* %151, align 8, !alias.scope !46
  %153 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %149, i64 -2
  %154 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %153, i64 -1
  %155 = bitcast %"class.v8::internal::compiler::Node"** %154 to <2 x i64>*
  %156 = load <2 x i64>, <2 x i64>* %155, align 8, !alias.scope !46
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %148, i64 -1
  %158 = bitcast %"class.v8::internal::compiler::Node"** %157 to <2 x i64>*
  store <2 x i64> %152, <2 x i64>* %158, align 8, !alias.scope !49, !noalias !46
  %159 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %148, i64 -2
  %160 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %159, i64 -1
  %161 = bitcast %"class.v8::internal::compiler::Node"** %160 to <2 x i64>*
  store <2 x i64> %156, <2 x i64>* %161, align 8, !alias.scope !49, !noalias !46
  %162 = sub nuw nsw i64 -4, %144
  %163 = sub nuw nsw i64 -4, %144
  %164 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %141, i64 %162
  %165 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %142, i64 %163
  %166 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %165, i64 -1
  %167 = bitcast %"class.v8::internal::compiler::Node"** %166 to <2 x i64>*
  %168 = load <2 x i64>, <2 x i64>* %167, align 8, !alias.scope !46
  %169 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %165, i64 -2
  %170 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %169, i64 -1
  %171 = bitcast %"class.v8::internal::compiler::Node"** %170 to <2 x i64>*
  %172 = load <2 x i64>, <2 x i64>* %171, align 8, !alias.scope !46
  %173 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %164, i64 -1
  %174 = bitcast %"class.v8::internal::compiler::Node"** %173 to <2 x i64>*
  store <2 x i64> %168, <2 x i64>* %174, align 8, !alias.scope !49, !noalias !46
  %175 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %164, i64 -2
  %176 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %175, i64 -1
  %177 = bitcast %"class.v8::internal::compiler::Node"** %176 to <2 x i64>*
  store <2 x i64> %172, <2 x i64>* %177, align 8, !alias.scope !49, !noalias !46
  %178 = add i64 %144, 8
  %179 = add i64 %145, -2
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %181, label %143, !llvm.loop !51

181:                                              ; preds = %143
  %182 = sub nuw nsw i64 -8, %144
  br label %183

183:                                              ; preds = %181, %126
  %184 = phi i64 [ 0, %126 ], [ %182, %181 ]
  %185 = icmp eq i64 %135, 0
  br i1 %185, label %203, label %186

186:                                              ; preds = %183
  %187 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %95, i64 -1
  %188 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %104, i64 -1
  %189 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %187, i64 %184
  %190 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %188, i64 %184
  %191 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %190, i64 -1
  %192 = bitcast %"class.v8::internal::compiler::Node"** %191 to <2 x i64>*
  %193 = load <2 x i64>, <2 x i64>* %192, align 8, !alias.scope !46
  %194 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %190, i64 -2
  %195 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %194, i64 -1
  %196 = bitcast %"class.v8::internal::compiler::Node"** %195 to <2 x i64>*
  %197 = load <2 x i64>, <2 x i64>* %196, align 8, !alias.scope !46
  %198 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %189, i64 -1
  %199 = bitcast %"class.v8::internal::compiler::Node"** %198 to <2 x i64>*
  store <2 x i64> %193, <2 x i64>* %199, align 8, !alias.scope !49, !noalias !46
  %200 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %189, i64 -2
  %201 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %200, i64 -1
  %202 = bitcast %"class.v8::internal::compiler::Node"** %201 to <2 x i64>*
  store <2 x i64> %197, <2 x i64>* %202, align 8, !alias.scope !49, !noalias !46
  br label %203

203:                                              ; preds = %183, %186
  %204 = icmp eq i64 %111, %127
  br i1 %204, label %275, label %205

205:                                              ; preds = %203, %113, %106
  %206 = phi %"class.v8::internal::compiler::Node"** [ %95, %113 ], [ %95, %106 ], [ %129, %203 ]
  %207 = phi %"class.v8::internal::compiler::Node"** [ %104, %113 ], [ %104, %106 ], [ %131, %203 ]
  %208 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %207, i64 -1
  %209 = ptrtoint %"class.v8::internal::compiler::Node"** %208 to i64
  %210 = sub i64 %209, %103
  %211 = lshr i64 %210, 3
  %212 = add nuw nsw i64 %211, 1
  %213 = and i64 %212, 7
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %226, label %215

215:                                              ; preds = %205, %215
  %216 = phi %"class.v8::internal::compiler::Node"** [ %219, %215 ], [ %206, %205 ]
  %217 = phi %"class.v8::internal::compiler::Node"** [ %220, %215 ], [ %207, %205 ]
  %218 = phi i64 [ %224, %215 ], [ %213, %205 ]
  %219 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %216, i64 -1
  %220 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %217, i64 -1
  %221 = bitcast %"class.v8::internal::compiler::Node"** %220 to i64*
  %222 = load i64, i64* %221, align 8
  %223 = bitcast %"class.v8::internal::compiler::Node"** %219 to i64*
  store i64 %222, i64* %223, align 8
  %224 = add i64 %218, -1
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %226, label %215, !llvm.loop !52

226:                                              ; preds = %215, %205
  %227 = phi %"class.v8::internal::compiler::Node"** [ undef, %205 ], [ %219, %215 ]
  %228 = phi %"class.v8::internal::compiler::Node"** [ %206, %205 ], [ %219, %215 ]
  %229 = phi %"class.v8::internal::compiler::Node"** [ %207, %205 ], [ %220, %215 ]
  %230 = icmp ult i64 %210, 56
  br i1 %230, label %275, label %231

231:                                              ; preds = %226, %231
  %232 = phi %"class.v8::internal::compiler::Node"** [ %269, %231 ], [ %228, %226 ]
  %233 = phi %"class.v8::internal::compiler::Node"** [ %270, %231 ], [ %229, %226 ]
  %234 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %232, i64 -1
  %235 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %233, i64 -1
  %236 = bitcast %"class.v8::internal::compiler::Node"** %235 to i64*
  %237 = load i64, i64* %236, align 8
  %238 = bitcast %"class.v8::internal::compiler::Node"** %234 to i64*
  store i64 %237, i64* %238, align 8
  %239 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %232, i64 -2
  %240 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %233, i64 -2
  %241 = bitcast %"class.v8::internal::compiler::Node"** %240 to i64*
  %242 = load i64, i64* %241, align 8
  %243 = bitcast %"class.v8::internal::compiler::Node"** %239 to i64*
  store i64 %242, i64* %243, align 8
  %244 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %232, i64 -3
  %245 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %233, i64 -3
  %246 = bitcast %"class.v8::internal::compiler::Node"** %245 to i64*
  %247 = load i64, i64* %246, align 8
  %248 = bitcast %"class.v8::internal::compiler::Node"** %244 to i64*
  store i64 %247, i64* %248, align 8
  %249 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %232, i64 -4
  %250 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %233, i64 -4
  %251 = bitcast %"class.v8::internal::compiler::Node"** %250 to i64*
  %252 = load i64, i64* %251, align 8
  %253 = bitcast %"class.v8::internal::compiler::Node"** %249 to i64*
  store i64 %252, i64* %253, align 8
  %254 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %232, i64 -5
  %255 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %233, i64 -5
  %256 = bitcast %"class.v8::internal::compiler::Node"** %255 to i64*
  %257 = load i64, i64* %256, align 8
  %258 = bitcast %"class.v8::internal::compiler::Node"** %254 to i64*
  store i64 %257, i64* %258, align 8
  %259 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %232, i64 -6
  %260 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %233, i64 -6
  %261 = bitcast %"class.v8::internal::compiler::Node"** %260 to i64*
  %262 = load i64, i64* %261, align 8
  %263 = bitcast %"class.v8::internal::compiler::Node"** %259 to i64*
  store i64 %262, i64* %263, align 8
  %264 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %232, i64 -7
  %265 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %233, i64 -7
  %266 = bitcast %"class.v8::internal::compiler::Node"** %265 to i64*
  %267 = load i64, i64* %266, align 8
  %268 = bitcast %"class.v8::internal::compiler::Node"** %264 to i64*
  store i64 %267, i64* %268, align 8
  %269 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %232, i64 -8
  %270 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %233, i64 -8
  %271 = bitcast %"class.v8::internal::compiler::Node"** %270 to i64*
  %272 = load i64, i64* %271, align 8
  %273 = bitcast %"class.v8::internal::compiler::Node"** %269 to i64*
  store i64 %272, i64* %273, align 8
  %274 = icmp eq %"class.v8::internal::compiler::Node"** %270, %102
  br i1 %274, label %275, label %231, !llvm.loop !53

275:                                              ; preds = %226, %231, %203, %92
  %276 = phi %"class.v8::internal::compiler::Node"** [ %95, %92 ], [ %129, %203 ], [ %227, %226 ], [ %269, %231 ]
  %277 = ptrtoint %"class.v8::internal::compiler::Node"** %276 to i64
  store i64 %277, i64* %56, align 8
  store i64 %100, i64* %55, align 8
  store i64 %97, i64* %65, align 8
  br label %278

278:                                              ; preds = %48, %275
  %279 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %280 = load i32, i32* %279, align 4
  %281 = and i32 %280, 16777215
  %282 = zext i32 %281 to i64
  %283 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0
  %284 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %285 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %284 to i64*
  %286 = load i64, i64* %285, align 8
  %287 = bitcast %"class.std::__1::vector.12"* %283 to i64*
  %288 = load i64, i64* %287, align 8
  %289 = sub i64 %286, %288
  %290 = ashr exact i64 %289, 3
  %291 = icmp ugt i64 %290, %282
  %292 = inttoptr i64 %288 to %"class.v8::internal::compiler::BasicBlock"**
  br i1 %291, label %305, label %293

293:                                              ; preds = %278
  %294 = add nuw nsw i32 %281, 1
  %295 = zext i32 %294 to i64
  %296 = icmp ult i64 %290, %295
  br i1 %296, label %297, label %301

297:                                              ; preds = %293
  %298 = sub nsw i64 %295, %290
  call void @_ZNSt3__16vectorIPN2v88internal8compiler10BasicBlockENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.12"* %283, i64 %298) #13
  %299 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %283, i64 0, i32 0, i32 0
  %300 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %299, align 8
  br label %305

301:                                              ; preds = %293
  %302 = icmp ugt i64 %290, %295
  br i1 %302, label %303, label %305

303:                                              ; preds = %301
  %304 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %292, i64 %295
  store %"class.v8::internal::compiler::BasicBlock"** %304, %"class.v8::internal::compiler::BasicBlock"*** %284, align 8
  br label %305

305:                                              ; preds = %278, %297, %301, %303
  %306 = phi %"class.v8::internal::compiler::BasicBlock"** [ %292, %303 ], [ %292, %301 ], [ %300, %297 ], [ %292, %278 ]
  %307 = load i32, i32* %279, align 4
  %308 = and i32 %307, 16777215
  %309 = zext i32 %308 to i64
  %310 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %306, i64 %309
  store %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::BasicBlock"** %310, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler8Schedule7AddGotoEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::Schedule"* nocapture readnone, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 9
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7, !prof !54

7:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i64 0, i64 0)) #14
  unreachable

8:                                                ; preds = %3
  store i32 1, i32* %4, align 4
  tail call void @_ZN2v88internal8compiler8Schedule12AddSuccessorEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::Schedule"* undef, %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::BasicBlock"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler8Schedule12AddSuccessorEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::Schedule"* nocapture readnone, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*) local_unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.v8::internal::compiler::BasicBlock"* %2 to i64
  %5 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 12, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 12, i32 0, i32 0, i32 1
  %7 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 12, i32 0, i32 0, i32 2, i32 0, i32 0
  %9 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %8, align 8
  %10 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %7, %9
  %11 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %9 to i64
  br i1 %10, label %17, label %12

12:                                               ; preds = %3
  %13 = bitcast %"class.v8::internal::compiler::BasicBlock"** %7 to i64*
  store i64 %4, i64* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %7, i64 1
  %15 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %14 to i64
  %16 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %6 to i64*
  store i64 %15, i64* %16, align 8
  br label %242

17:                                               ; preds = %3
  %18 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %7 to i64
  %19 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %6 to i64*
  %20 = bitcast %"class.std::__1::vector.12"* %5 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %18, %21
  %23 = ashr exact i64 %22, 3
  %24 = add nsw i64 %23, 1
  %25 = icmp ugt i64 %24, 268435455
  br i1 %25, label %26, label %28

26:                                               ; preds = %17
  %27 = bitcast %"class.std::__1::vector.12"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %27) #14
  unreachable

28:                                               ; preds = %17
  %29 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %8 to i64*
  %30 = sub i64 %11, %21
  %31 = ashr exact i64 %30, 3
  %32 = icmp ult i64 %31, 134217727
  br i1 %32, label %33, label %38

33:                                               ; preds = %28
  %34 = ashr exact i64 %30, 2
  %35 = icmp ult i64 %34, %24
  %36 = select i1 %35, i64 %24, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %56, label %38

38:                                               ; preds = %33, %28
  %39 = phi i64 [ %36, %33 ], [ 268435455, %28 ]
  %40 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 12, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %41 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %40, align 8
  %42 = shl i64 %39, 3
  %43 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %41, i64 0, i32 2
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %41, i64 0, i32 3
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %46, %44
  %48 = icmp ugt i64 %42, %47
  br i1 %48, label %49, label %51, !prof !2

49:                                               ; preds = %38
  %50 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %41, i64 %42) #13
  br label %53

51:                                               ; preds = %38
  %52 = add i64 %44, %42
  store i64 %52, i64* %43, align 8
  br label %53

53:                                               ; preds = %51, %49
  %54 = phi i64 [ %50, %49 ], [ %44, %51 ]
  %55 = inttoptr i64 %54 to %"class.v8::internal::compiler::BasicBlock"**
  br label %56

56:                                               ; preds = %53, %33
  %57 = phi i64 [ %39, %53 ], [ 0, %33 ]
  %58 = phi %"class.v8::internal::compiler::BasicBlock"** [ %55, %53 ], [ null, %33 ]
  %59 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %58, i64 %23
  %60 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %58, i64 %57
  %61 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %60 to i64
  %62 = bitcast %"class.v8::internal::compiler::BasicBlock"** %59 to i64*
  store i64 %4, i64* %62, align 8
  %63 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %59, i64 1
  %64 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %63 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %5, i64 0, i32 0, i32 0
  %66 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %65, align 8
  %67 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %66 to i64
  %68 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %6, align 8
  %69 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %68, %66
  br i1 %69, label %239, label %70

70:                                               ; preds = %56
  %71 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %68, i64 -1
  %72 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %71 to i64
  %73 = sub i64 %72, %67
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = icmp ult i64 %75, 4
  br i1 %76, label %169, label %77

77:                                               ; preds = %70
  %78 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %68, i64 -1
  %79 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %78 to i64
  %80 = sub i64 %79, %67
  %81 = lshr i64 %80, 3
  %82 = xor i64 %81, -1
  %83 = add nsw i64 %23, %82
  %84 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %58, i64 %83
  %85 = xor i64 %81, -1
  %86 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %68, i64 %85
  %87 = icmp ult %"class.v8::internal::compiler::BasicBlock"** %84, %68
  %88 = icmp ult %"class.v8::internal::compiler::BasicBlock"** %86, %59
  %89 = and i1 %87, %88
  br i1 %89, label %169, label %90

90:                                               ; preds = %77
  %91 = and i64 %75, 4611686018427387900
  %92 = sub nsw i64 0, %91
  %93 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %59, i64 %92
  %94 = sub nsw i64 0, %91
  %95 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %68, i64 %94
  %96 = add nsw i64 %91, -4
  %97 = lshr exact i64 %96, 2
  %98 = add nuw nsw i64 %97, 1
  %99 = and i64 %98, 1
  %100 = icmp eq i64 %96, 0
  br i1 %100, label %145, label %101

101:                                              ; preds = %90
  %102 = sub nuw nsw i64 %98, %99
  %103 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %59, i64 -1
  %104 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %68, i64 -1
  %105 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %59, i64 -1
  %106 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %68, i64 -1
  br label %107

107:                                              ; preds = %107, %101
  %108 = phi i64 [ 0, %101 ], [ %142, %107 ]
  %109 = phi i64 [ %102, %101 ], [ %143, %107 ]
  %110 = sub i64 0, %108
  %111 = sub i64 0, %108
  %112 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %103, i64 %110
  %113 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %104, i64 %111
  %114 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %113, i64 -1
  %115 = bitcast %"class.v8::internal::compiler::BasicBlock"** %114 to <2 x i64>*
  %116 = load <2 x i64>, <2 x i64>* %115, align 8, !alias.scope !55
  %117 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %113, i64 -2
  %118 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %117, i64 -1
  %119 = bitcast %"class.v8::internal::compiler::BasicBlock"** %118 to <2 x i64>*
  %120 = load <2 x i64>, <2 x i64>* %119, align 8, !alias.scope !55
  %121 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %112, i64 -1
  %122 = bitcast %"class.v8::internal::compiler::BasicBlock"** %121 to <2 x i64>*
  store <2 x i64> %116, <2 x i64>* %122, align 8, !alias.scope !58, !noalias !55
  %123 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %112, i64 -2
  %124 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %123, i64 -1
  %125 = bitcast %"class.v8::internal::compiler::BasicBlock"** %124 to <2 x i64>*
  store <2 x i64> %120, <2 x i64>* %125, align 8, !alias.scope !58, !noalias !55
  %126 = sub nuw nsw i64 -4, %108
  %127 = sub nuw nsw i64 -4, %108
  %128 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %105, i64 %126
  %129 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %106, i64 %127
  %130 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %129, i64 -1
  %131 = bitcast %"class.v8::internal::compiler::BasicBlock"** %130 to <2 x i64>*
  %132 = load <2 x i64>, <2 x i64>* %131, align 8, !alias.scope !55
  %133 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %129, i64 -2
  %134 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %133, i64 -1
  %135 = bitcast %"class.v8::internal::compiler::BasicBlock"** %134 to <2 x i64>*
  %136 = load <2 x i64>, <2 x i64>* %135, align 8, !alias.scope !55
  %137 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %128, i64 -1
  %138 = bitcast %"class.v8::internal::compiler::BasicBlock"** %137 to <2 x i64>*
  store <2 x i64> %132, <2 x i64>* %138, align 8, !alias.scope !58, !noalias !55
  %139 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %128, i64 -2
  %140 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %139, i64 -1
  %141 = bitcast %"class.v8::internal::compiler::BasicBlock"** %140 to <2 x i64>*
  store <2 x i64> %136, <2 x i64>* %141, align 8, !alias.scope !58, !noalias !55
  %142 = add i64 %108, 8
  %143 = add i64 %109, -2
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %145, label %107, !llvm.loop !60

145:                                              ; preds = %107, %90
  %146 = phi i64 [ 0, %90 ], [ %142, %107 ]
  %147 = icmp eq i64 %99, 0
  br i1 %147, label %167, label %148

148:                                              ; preds = %145
  %149 = sub i64 0, %146
  %150 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %59, i64 -1
  %151 = sub i64 0, %146
  %152 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %68, i64 -1
  %153 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %150, i64 %149
  %154 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %152, i64 %151
  %155 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %154, i64 -1
  %156 = bitcast %"class.v8::internal::compiler::BasicBlock"** %155 to <2 x i64>*
  %157 = load <2 x i64>, <2 x i64>* %156, align 8, !alias.scope !55
  %158 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %154, i64 -2
  %159 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %158, i64 -1
  %160 = bitcast %"class.v8::internal::compiler::BasicBlock"** %159 to <2 x i64>*
  %161 = load <2 x i64>, <2 x i64>* %160, align 8, !alias.scope !55
  %162 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %153, i64 -1
  %163 = bitcast %"class.v8::internal::compiler::BasicBlock"** %162 to <2 x i64>*
  store <2 x i64> %157, <2 x i64>* %163, align 8, !alias.scope !58, !noalias !55
  %164 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %153, i64 -2
  %165 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %164, i64 -1
  %166 = bitcast %"class.v8::internal::compiler::BasicBlock"** %165 to <2 x i64>*
  store <2 x i64> %161, <2 x i64>* %166, align 8, !alias.scope !58, !noalias !55
  br label %167

167:                                              ; preds = %145, %148
  %168 = icmp eq i64 %75, %91
  br i1 %168, label %239, label %169

169:                                              ; preds = %167, %77, %70
  %170 = phi %"class.v8::internal::compiler::BasicBlock"** [ %59, %77 ], [ %59, %70 ], [ %93, %167 ]
  %171 = phi %"class.v8::internal::compiler::BasicBlock"** [ %68, %77 ], [ %68, %70 ], [ %95, %167 ]
  %172 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %171, i64 -1
  %173 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %172 to i64
  %174 = sub i64 %173, %67
  %175 = lshr i64 %174, 3
  %176 = add nuw nsw i64 %175, 1
  %177 = and i64 %176, 7
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %190, label %179

179:                                              ; preds = %169, %179
  %180 = phi %"class.v8::internal::compiler::BasicBlock"** [ %183, %179 ], [ %170, %169 ]
  %181 = phi %"class.v8::internal::compiler::BasicBlock"** [ %184, %179 ], [ %171, %169 ]
  %182 = phi i64 [ %188, %179 ], [ %177, %169 ]
  %183 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %180, i64 -1
  %184 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %181, i64 -1
  %185 = bitcast %"class.v8::internal::compiler::BasicBlock"** %184 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = bitcast %"class.v8::internal::compiler::BasicBlock"** %183 to i64*
  store i64 %186, i64* %187, align 8
  %188 = add i64 %182, -1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %190, label %179, !llvm.loop !61

190:                                              ; preds = %179, %169
  %191 = phi %"class.v8::internal::compiler::BasicBlock"** [ undef, %169 ], [ %183, %179 ]
  %192 = phi %"class.v8::internal::compiler::BasicBlock"** [ %170, %169 ], [ %183, %179 ]
  %193 = phi %"class.v8::internal::compiler::BasicBlock"** [ %171, %169 ], [ %184, %179 ]
  %194 = icmp ult i64 %174, 56
  br i1 %194, label %239, label %195

195:                                              ; preds = %190, %195
  %196 = phi %"class.v8::internal::compiler::BasicBlock"** [ %233, %195 ], [ %192, %190 ]
  %197 = phi %"class.v8::internal::compiler::BasicBlock"** [ %234, %195 ], [ %193, %190 ]
  %198 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %196, i64 -1
  %199 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %197, i64 -1
  %200 = bitcast %"class.v8::internal::compiler::BasicBlock"** %199 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = bitcast %"class.v8::internal::compiler::BasicBlock"** %198 to i64*
  store i64 %201, i64* %202, align 8
  %203 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %196, i64 -2
  %204 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %197, i64 -2
  %205 = bitcast %"class.v8::internal::compiler::BasicBlock"** %204 to i64*
  %206 = load i64, i64* %205, align 8
  %207 = bitcast %"class.v8::internal::compiler::BasicBlock"** %203 to i64*
  store i64 %206, i64* %207, align 8
  %208 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %196, i64 -3
  %209 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %197, i64 -3
  %210 = bitcast %"class.v8::internal::compiler::BasicBlock"** %209 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = bitcast %"class.v8::internal::compiler::BasicBlock"** %208 to i64*
  store i64 %211, i64* %212, align 8
  %213 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %196, i64 -4
  %214 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %197, i64 -4
  %215 = bitcast %"class.v8::internal::compiler::BasicBlock"** %214 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = bitcast %"class.v8::internal::compiler::BasicBlock"** %213 to i64*
  store i64 %216, i64* %217, align 8
  %218 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %196, i64 -5
  %219 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %197, i64 -5
  %220 = bitcast %"class.v8::internal::compiler::BasicBlock"** %219 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = bitcast %"class.v8::internal::compiler::BasicBlock"** %218 to i64*
  store i64 %221, i64* %222, align 8
  %223 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %196, i64 -6
  %224 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %197, i64 -6
  %225 = bitcast %"class.v8::internal::compiler::BasicBlock"** %224 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = bitcast %"class.v8::internal::compiler::BasicBlock"** %223 to i64*
  store i64 %226, i64* %227, align 8
  %228 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %196, i64 -7
  %229 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %197, i64 -7
  %230 = bitcast %"class.v8::internal::compiler::BasicBlock"** %229 to i64*
  %231 = load i64, i64* %230, align 8
  %232 = bitcast %"class.v8::internal::compiler::BasicBlock"** %228 to i64*
  store i64 %231, i64* %232, align 8
  %233 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %196, i64 -8
  %234 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %197, i64 -8
  %235 = bitcast %"class.v8::internal::compiler::BasicBlock"** %234 to i64*
  %236 = load i64, i64* %235, align 8
  %237 = bitcast %"class.v8::internal::compiler::BasicBlock"** %233 to i64*
  store i64 %236, i64* %237, align 8
  %238 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %234, %66
  br i1 %238, label %239, label %195, !llvm.loop !62

239:                                              ; preds = %190, %195, %167, %56
  %240 = phi %"class.v8::internal::compiler::BasicBlock"** [ %59, %56 ], [ %93, %167 ], [ %191, %190 ], [ %233, %195 ]
  %241 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %240 to i64
  store i64 %241, i64* %20, align 8
  store i64 %64, i64* %19, align 8
  store i64 %61, i64* %29, align 8
  br label %242

242:                                              ; preds = %12, %239
  %243 = ptrtoint %"class.v8::internal::compiler::BasicBlock"* %1 to i64
  %244 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %2, i64 0, i32 13, i32 0
  %245 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %2, i64 0, i32 13, i32 0, i32 0, i32 1
  %246 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %245, align 8
  %247 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %2, i64 0, i32 13, i32 0, i32 0, i32 2, i32 0, i32 0
  %248 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %247, align 8
  %249 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %246, %248
  %250 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %248 to i64
  br i1 %249, label %256, label %251

251:                                              ; preds = %242
  %252 = bitcast %"class.v8::internal::compiler::BasicBlock"** %246 to i64*
  store i64 %243, i64* %252, align 8
  %253 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %246, i64 1
  %254 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %253 to i64
  %255 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %245 to i64*
  store i64 %254, i64* %255, align 8
  br label %481

256:                                              ; preds = %242
  %257 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %246 to i64
  %258 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %245 to i64*
  %259 = bitcast %"class.std::__1::vector.12"* %244 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = sub i64 %257, %260
  %262 = ashr exact i64 %261, 3
  %263 = add nsw i64 %262, 1
  %264 = icmp ugt i64 %263, 268435455
  br i1 %264, label %265, label %267

265:                                              ; preds = %256
  %266 = bitcast %"class.std::__1::vector.12"* %244 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %266) #14
  unreachable

267:                                              ; preds = %256
  %268 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %247 to i64*
  %269 = sub i64 %250, %260
  %270 = ashr exact i64 %269, 3
  %271 = icmp ult i64 %270, 134217727
  br i1 %271, label %272, label %277

272:                                              ; preds = %267
  %273 = ashr exact i64 %269, 2
  %274 = icmp ult i64 %273, %263
  %275 = select i1 %274, i64 %263, i64 %273
  %276 = icmp eq i64 %275, 0
  br i1 %276, label %295, label %277

277:                                              ; preds = %272, %267
  %278 = phi i64 [ %275, %272 ], [ 268435455, %267 ]
  %279 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %2, i64 0, i32 13, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %280 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %279, align 8
  %281 = shl i64 %278, 3
  %282 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %280, i64 0, i32 2
  %283 = load i64, i64* %282, align 8
  %284 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %280, i64 0, i32 3
  %285 = load i64, i64* %284, align 8
  %286 = sub i64 %285, %283
  %287 = icmp ugt i64 %281, %286
  br i1 %287, label %288, label %290, !prof !2

288:                                              ; preds = %277
  %289 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %280, i64 %281) #13
  br label %292

290:                                              ; preds = %277
  %291 = add i64 %283, %281
  store i64 %291, i64* %282, align 8
  br label %292

292:                                              ; preds = %290, %288
  %293 = phi i64 [ %289, %288 ], [ %283, %290 ]
  %294 = inttoptr i64 %293 to %"class.v8::internal::compiler::BasicBlock"**
  br label %295

295:                                              ; preds = %292, %272
  %296 = phi i64 [ %278, %292 ], [ 0, %272 ]
  %297 = phi %"class.v8::internal::compiler::BasicBlock"** [ %294, %292 ], [ null, %272 ]
  %298 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %297, i64 %262
  %299 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %297, i64 %296
  %300 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %299 to i64
  %301 = bitcast %"class.v8::internal::compiler::BasicBlock"** %298 to i64*
  store i64 %243, i64* %301, align 8
  %302 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %298, i64 1
  %303 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %302 to i64
  %304 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %244, i64 0, i32 0, i32 0
  %305 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %304, align 8
  %306 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %305 to i64
  %307 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %245, align 8
  %308 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %307, %305
  br i1 %308, label %478, label %309

309:                                              ; preds = %295
  %310 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %307, i64 -1
  %311 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %310 to i64
  %312 = sub i64 %311, %306
  %313 = lshr i64 %312, 3
  %314 = add nuw nsw i64 %313, 1
  %315 = icmp ult i64 %314, 4
  br i1 %315, label %408, label %316

316:                                              ; preds = %309
  %317 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %307, i64 -1
  %318 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %317 to i64
  %319 = sub i64 %318, %306
  %320 = lshr i64 %319, 3
  %321 = xor i64 %320, -1
  %322 = add nsw i64 %262, %321
  %323 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %297, i64 %322
  %324 = xor i64 %320, -1
  %325 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %307, i64 %324
  %326 = icmp ult %"class.v8::internal::compiler::BasicBlock"** %323, %307
  %327 = icmp ult %"class.v8::internal::compiler::BasicBlock"** %325, %298
  %328 = and i1 %326, %327
  br i1 %328, label %408, label %329

329:                                              ; preds = %316
  %330 = and i64 %314, 4611686018427387900
  %331 = sub nsw i64 0, %330
  %332 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %298, i64 %331
  %333 = sub nsw i64 0, %330
  %334 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %307, i64 %333
  %335 = add nsw i64 %330, -4
  %336 = lshr exact i64 %335, 2
  %337 = add nuw nsw i64 %336, 1
  %338 = and i64 %337, 1
  %339 = icmp eq i64 %335, 0
  br i1 %339, label %386, label %340

340:                                              ; preds = %329
  %341 = sub nuw nsw i64 %337, %338
  %342 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %298, i64 -1
  %343 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %307, i64 -1
  %344 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %298, i64 -1
  %345 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %307, i64 -1
  br label %346

346:                                              ; preds = %346, %340
  %347 = phi i64 [ 0, %340 ], [ %381, %346 ]
  %348 = phi i64 [ %341, %340 ], [ %382, %346 ]
  %349 = sub i64 0, %347
  %350 = sub i64 0, %347
  %351 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %342, i64 %349
  %352 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %343, i64 %350
  %353 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %352, i64 -1
  %354 = bitcast %"class.v8::internal::compiler::BasicBlock"** %353 to <2 x i64>*
  %355 = load <2 x i64>, <2 x i64>* %354, align 8, !alias.scope !63
  %356 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %352, i64 -2
  %357 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %356, i64 -1
  %358 = bitcast %"class.v8::internal::compiler::BasicBlock"** %357 to <2 x i64>*
  %359 = load <2 x i64>, <2 x i64>* %358, align 8, !alias.scope !63
  %360 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %351, i64 -1
  %361 = bitcast %"class.v8::internal::compiler::BasicBlock"** %360 to <2 x i64>*
  store <2 x i64> %355, <2 x i64>* %361, align 8, !alias.scope !66, !noalias !63
  %362 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %351, i64 -2
  %363 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %362, i64 -1
  %364 = bitcast %"class.v8::internal::compiler::BasicBlock"** %363 to <2 x i64>*
  store <2 x i64> %359, <2 x i64>* %364, align 8, !alias.scope !66, !noalias !63
  %365 = sub nuw nsw i64 -4, %347
  %366 = sub nuw nsw i64 -4, %347
  %367 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %344, i64 %365
  %368 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %345, i64 %366
  %369 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %368, i64 -1
  %370 = bitcast %"class.v8::internal::compiler::BasicBlock"** %369 to <2 x i64>*
  %371 = load <2 x i64>, <2 x i64>* %370, align 8, !alias.scope !63
  %372 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %368, i64 -2
  %373 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %372, i64 -1
  %374 = bitcast %"class.v8::internal::compiler::BasicBlock"** %373 to <2 x i64>*
  %375 = load <2 x i64>, <2 x i64>* %374, align 8, !alias.scope !63
  %376 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %367, i64 -1
  %377 = bitcast %"class.v8::internal::compiler::BasicBlock"** %376 to <2 x i64>*
  store <2 x i64> %371, <2 x i64>* %377, align 8, !alias.scope !66, !noalias !63
  %378 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %367, i64 -2
  %379 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %378, i64 -1
  %380 = bitcast %"class.v8::internal::compiler::BasicBlock"** %379 to <2 x i64>*
  store <2 x i64> %375, <2 x i64>* %380, align 8, !alias.scope !66, !noalias !63
  %381 = add i64 %347, 8
  %382 = add i64 %348, -2
  %383 = icmp eq i64 %382, 0
  br i1 %383, label %384, label %346, !llvm.loop !68

384:                                              ; preds = %346
  %385 = sub nuw nsw i64 -8, %347
  br label %386

386:                                              ; preds = %384, %329
  %387 = phi i64 [ 0, %329 ], [ %385, %384 ]
  %388 = icmp eq i64 %338, 0
  br i1 %388, label %406, label %389

389:                                              ; preds = %386
  %390 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %298, i64 -1
  %391 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %307, i64 -1
  %392 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %390, i64 %387
  %393 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %391, i64 %387
  %394 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %393, i64 -1
  %395 = bitcast %"class.v8::internal::compiler::BasicBlock"** %394 to <2 x i64>*
  %396 = load <2 x i64>, <2 x i64>* %395, align 8, !alias.scope !63
  %397 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %393, i64 -2
  %398 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %397, i64 -1
  %399 = bitcast %"class.v8::internal::compiler::BasicBlock"** %398 to <2 x i64>*
  %400 = load <2 x i64>, <2 x i64>* %399, align 8, !alias.scope !63
  %401 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %392, i64 -1
  %402 = bitcast %"class.v8::internal::compiler::BasicBlock"** %401 to <2 x i64>*
  store <2 x i64> %396, <2 x i64>* %402, align 8, !alias.scope !66, !noalias !63
  %403 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %392, i64 -2
  %404 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %403, i64 -1
  %405 = bitcast %"class.v8::internal::compiler::BasicBlock"** %404 to <2 x i64>*
  store <2 x i64> %400, <2 x i64>* %405, align 8, !alias.scope !66, !noalias !63
  br label %406

406:                                              ; preds = %386, %389
  %407 = icmp eq i64 %314, %330
  br i1 %407, label %478, label %408

408:                                              ; preds = %406, %316, %309
  %409 = phi %"class.v8::internal::compiler::BasicBlock"** [ %298, %316 ], [ %298, %309 ], [ %332, %406 ]
  %410 = phi %"class.v8::internal::compiler::BasicBlock"** [ %307, %316 ], [ %307, %309 ], [ %334, %406 ]
  %411 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %410, i64 -1
  %412 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %411 to i64
  %413 = sub i64 %412, %306
  %414 = lshr i64 %413, 3
  %415 = add nuw nsw i64 %414, 1
  %416 = and i64 %415, 7
  %417 = icmp eq i64 %416, 0
  br i1 %417, label %429, label %418

418:                                              ; preds = %408, %418
  %419 = phi %"class.v8::internal::compiler::BasicBlock"** [ %422, %418 ], [ %409, %408 ]
  %420 = phi %"class.v8::internal::compiler::BasicBlock"** [ %423, %418 ], [ %410, %408 ]
  %421 = phi i64 [ %427, %418 ], [ %416, %408 ]
  %422 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %419, i64 -1
  %423 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %420, i64 -1
  %424 = bitcast %"class.v8::internal::compiler::BasicBlock"** %423 to i64*
  %425 = load i64, i64* %424, align 8
  %426 = bitcast %"class.v8::internal::compiler::BasicBlock"** %422 to i64*
  store i64 %425, i64* %426, align 8
  %427 = add i64 %421, -1
  %428 = icmp eq i64 %427, 0
  br i1 %428, label %429, label %418, !llvm.loop !69

429:                                              ; preds = %418, %408
  %430 = phi %"class.v8::internal::compiler::BasicBlock"** [ undef, %408 ], [ %422, %418 ]
  %431 = phi %"class.v8::internal::compiler::BasicBlock"** [ %409, %408 ], [ %422, %418 ]
  %432 = phi %"class.v8::internal::compiler::BasicBlock"** [ %410, %408 ], [ %423, %418 ]
  %433 = icmp ult i64 %413, 56
  br i1 %433, label %478, label %434

434:                                              ; preds = %429, %434
  %435 = phi %"class.v8::internal::compiler::BasicBlock"** [ %472, %434 ], [ %431, %429 ]
  %436 = phi %"class.v8::internal::compiler::BasicBlock"** [ %473, %434 ], [ %432, %429 ]
  %437 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %435, i64 -1
  %438 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %436, i64 -1
  %439 = bitcast %"class.v8::internal::compiler::BasicBlock"** %438 to i64*
  %440 = load i64, i64* %439, align 8
  %441 = bitcast %"class.v8::internal::compiler::BasicBlock"** %437 to i64*
  store i64 %440, i64* %441, align 8
  %442 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %435, i64 -2
  %443 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %436, i64 -2
  %444 = bitcast %"class.v8::internal::compiler::BasicBlock"** %443 to i64*
  %445 = load i64, i64* %444, align 8
  %446 = bitcast %"class.v8::internal::compiler::BasicBlock"** %442 to i64*
  store i64 %445, i64* %446, align 8
  %447 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %435, i64 -3
  %448 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %436, i64 -3
  %449 = bitcast %"class.v8::internal::compiler::BasicBlock"** %448 to i64*
  %450 = load i64, i64* %449, align 8
  %451 = bitcast %"class.v8::internal::compiler::BasicBlock"** %447 to i64*
  store i64 %450, i64* %451, align 8
  %452 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %435, i64 -4
  %453 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %436, i64 -4
  %454 = bitcast %"class.v8::internal::compiler::BasicBlock"** %453 to i64*
  %455 = load i64, i64* %454, align 8
  %456 = bitcast %"class.v8::internal::compiler::BasicBlock"** %452 to i64*
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %435, i64 -5
  %458 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %436, i64 -5
  %459 = bitcast %"class.v8::internal::compiler::BasicBlock"** %458 to i64*
  %460 = load i64, i64* %459, align 8
  %461 = bitcast %"class.v8::internal::compiler::BasicBlock"** %457 to i64*
  store i64 %460, i64* %461, align 8
  %462 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %435, i64 -6
  %463 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %436, i64 -6
  %464 = bitcast %"class.v8::internal::compiler::BasicBlock"** %463 to i64*
  %465 = load i64, i64* %464, align 8
  %466 = bitcast %"class.v8::internal::compiler::BasicBlock"** %462 to i64*
  store i64 %465, i64* %466, align 8
  %467 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %435, i64 -7
  %468 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %436, i64 -7
  %469 = bitcast %"class.v8::internal::compiler::BasicBlock"** %468 to i64*
  %470 = load i64, i64* %469, align 8
  %471 = bitcast %"class.v8::internal::compiler::BasicBlock"** %467 to i64*
  store i64 %470, i64* %471, align 8
  %472 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %435, i64 -8
  %473 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %436, i64 -8
  %474 = bitcast %"class.v8::internal::compiler::BasicBlock"** %473 to i64*
  %475 = load i64, i64* %474, align 8
  %476 = bitcast %"class.v8::internal::compiler::BasicBlock"** %472 to i64*
  store i64 %475, i64* %476, align 8
  %477 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %473, %305
  br i1 %477, label %478, label %434, !llvm.loop !70

478:                                              ; preds = %429, %434, %406, %295
  %479 = phi %"class.v8::internal::compiler::BasicBlock"** [ %298, %295 ], [ %332, %406 ], [ %430, %429 ], [ %472, %434 ]
  %480 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %479 to i64
  store i64 %480, i64* %259, align 8
  store i64 %303, i64* %258, align 8
  store i64 %300, i64* %268, align 8
  br label %481

481:                                              ; preds = %251, %478
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler8Schedule7AddCallEPNS1_10BasicBlockEPNS1_4NodeES4_S4_(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 9
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9, !prof !54

9:                                                ; preds = %5
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i64 0, i64 0)) #14
  unreachable

10:                                               ; preds = %5
  store i32 2, i32* %6, align 4
  tail call void @_ZN2v88internal8compiler8Schedule12AddSuccessorEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::Schedule"* undef, %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::BasicBlock"* %3)
  tail call void @_ZN2v88internal8compiler8Schedule12AddSuccessorEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::Schedule"* undef, %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::BasicBlock"* %4)
  %11 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %12 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 11, i32 0, i32 0, i32 1
  %14 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %13, align 8
  %15 = icmp eq %"class.v8::internal::compiler::Node"** %12, %14
  br i1 %15, label %21, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %14, i64 -1
  %18 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %17, align 8
  %19 = icmp eq %"class.v8::internal::compiler::Node"* %18, %2
  br i1 %19, label %20, label %21

20:                                               ; preds = %16
  store %"class.v8::internal::compiler::Node"** %17, %"class.v8::internal::compiler::Node"*** %13, align 8
  br label %21

21:                                               ; preds = %20, %16, %10
  %22 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 10
  store %"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"** %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = and i32 %24, 16777215
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0
  %28 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %29 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.std::__1::vector.12"* %27 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %30, %32
  %34 = ashr exact i64 %33, 3
  %35 = icmp ugt i64 %34, %26
  %36 = inttoptr i64 %32 to %"class.v8::internal::compiler::BasicBlock"**
  br i1 %35, label %49, label %37

37:                                               ; preds = %21
  %38 = add nuw nsw i32 %25, 1
  %39 = zext i32 %38 to i64
  %40 = icmp ult i64 %34, %39
  br i1 %40, label %41, label %45

41:                                               ; preds = %37
  %42 = sub nsw i64 %39, %34
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler10BasicBlockENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.12"* %27, i64 %42) #13
  %43 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %27, i64 0, i32 0, i32 0
  %44 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %43, align 8
  br label %49

45:                                               ; preds = %37
  %46 = icmp ugt i64 %34, %39
  br i1 %46, label %47, label %49

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %36, i64 %39
  store %"class.v8::internal::compiler::BasicBlock"** %48, %"class.v8::internal::compiler::BasicBlock"*** %28, align 8
  br label %49

49:                                               ; preds = %21, %41, %45, %47
  %50 = phi %"class.v8::internal::compiler::BasicBlock"** [ %36, %47 ], [ %36, %45 ], [ %44, %41 ], [ %36, %21 ]
  %51 = load i32, i32* %23, align 4
  %52 = and i32 %51, 16777215
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %50, i64 %53
  store %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::BasicBlock"** %54, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler8Schedule15SetControlInputEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 11, i32 0, i32 0, i32 1
  %7 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %6, align 8
  %8 = icmp eq %"class.v8::internal::compiler::Node"** %5, %7
  br i1 %8, label %14, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %7, i64 -1
  %11 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %10, align 8
  %12 = icmp eq %"class.v8::internal::compiler::Node"* %11, %2
  br i1 %12, label %13, label %14

13:                                               ; preds = %9
  store %"class.v8::internal::compiler::Node"** %10, %"class.v8::internal::compiler::Node"*** %6, align 8
  br label %14

14:                                               ; preds = %3, %9, %13
  %15 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 10
  store %"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"** %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = and i32 %17, 16777215
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0
  %21 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %22 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector.12"* %20 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = ashr exact i64 %26, 3
  %28 = icmp ugt i64 %27, %19
  %29 = inttoptr i64 %25 to %"class.v8::internal::compiler::BasicBlock"**
  br i1 %28, label %42, label %30

30:                                               ; preds = %14
  %31 = add nuw nsw i32 %18, 1
  %32 = zext i32 %31 to i64
  %33 = icmp ult i64 %27, %32
  br i1 %33, label %34, label %38

34:                                               ; preds = %30
  %35 = sub nsw i64 %32, %27
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler10BasicBlockENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.12"* %20, i64 %35) #13
  %36 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %20, i64 0, i32 0, i32 0
  %37 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %36, align 8
  br label %42

38:                                               ; preds = %30
  %39 = icmp ugt i64 %27, %32
  br i1 %39, label %40, label %42

40:                                               ; preds = %38
  %41 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %29, i64 %32
  store %"class.v8::internal::compiler::BasicBlock"** %41, %"class.v8::internal::compiler::BasicBlock"*** %21, align 8
  br label %42

42:                                               ; preds = %14, %34, %38, %40
  %43 = phi %"class.v8::internal::compiler::BasicBlock"** [ %29, %40 ], [ %29, %38 ], [ %37, %34 ], [ %29, %14 ]
  %44 = load i32, i32* %16, align 4
  %45 = and i32 %44, 16777215
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %43, i64 %46
  store %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::BasicBlock"** %47, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler8Schedule9AddBranchEPNS1_10BasicBlockEPNS1_4NodeES4_S4_(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 9
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9, !prof !54

9:                                                ; preds = %5
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i64 0, i64 0)) #14
  unreachable

10:                                               ; preds = %5
  store i32 3, i32* %6, align 4
  tail call void @_ZN2v88internal8compiler8Schedule12AddSuccessorEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::Schedule"* undef, %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::BasicBlock"* %3)
  tail call void @_ZN2v88internal8compiler8Schedule12AddSuccessorEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::Schedule"* undef, %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::BasicBlock"* %4)
  %11 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %12 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 11, i32 0, i32 0, i32 1
  %14 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %13, align 8
  %15 = icmp eq %"class.v8::internal::compiler::Node"** %12, %14
  br i1 %15, label %21, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %14, i64 -1
  %18 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %17, align 8
  %19 = icmp eq %"class.v8::internal::compiler::Node"* %18, %2
  br i1 %19, label %20, label %21

20:                                               ; preds = %16
  store %"class.v8::internal::compiler::Node"** %17, %"class.v8::internal::compiler::Node"*** %13, align 8
  br label %21

21:                                               ; preds = %20, %16, %10
  %22 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 10
  store %"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"** %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = and i32 %24, 16777215
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0
  %28 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %29 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.std::__1::vector.12"* %27 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %30, %32
  %34 = ashr exact i64 %33, 3
  %35 = icmp ugt i64 %34, %26
  %36 = inttoptr i64 %32 to %"class.v8::internal::compiler::BasicBlock"**
  br i1 %35, label %49, label %37

37:                                               ; preds = %21
  %38 = add nuw nsw i32 %25, 1
  %39 = zext i32 %38 to i64
  %40 = icmp ult i64 %34, %39
  br i1 %40, label %41, label %45

41:                                               ; preds = %37
  %42 = sub nsw i64 %39, %34
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler10BasicBlockENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.12"* %27, i64 %42) #13
  %43 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %27, i64 0, i32 0, i32 0
  %44 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %43, align 8
  br label %49

45:                                               ; preds = %37
  %46 = icmp ugt i64 %34, %39
  br i1 %46, label %47, label %49

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %36, i64 %39
  store %"class.v8::internal::compiler::BasicBlock"** %48, %"class.v8::internal::compiler::BasicBlock"*** %28, align 8
  br label %49

49:                                               ; preds = %21, %41, %45, %47
  %50 = phi %"class.v8::internal::compiler::BasicBlock"** [ %36, %47 ], [ %36, %45 ], [ %44, %41 ], [ %36, %21 ]
  %51 = load i32, i32* %23, align 4
  %52 = and i32 %51, 16777215
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %50, i64 %53
  store %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::BasicBlock"** %54, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler8Schedule9AddSwitchEPNS1_10BasicBlockEPNS1_4NodeEPS4_m(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::BasicBlock"** nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 9
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9, !prof !54

9:                                                ; preds = %5
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i64 0, i64 0)) #14
  unreachable

10:                                               ; preds = %5
  store i32 4, i32* %6, align 4
  %11 = icmp eq i64 %4, 0
  br i1 %11, label %12, label %57

12:                                               ; preds = %57, %10
  %13 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %14 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 11, i32 0, i32 0, i32 1
  %16 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %15, align 8
  %17 = icmp eq %"class.v8::internal::compiler::Node"** %14, %16
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %16, i64 -1
  %20 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %19, align 8
  %21 = icmp eq %"class.v8::internal::compiler::Node"* %20, %2
  br i1 %21, label %22, label %23

22:                                               ; preds = %18
  store %"class.v8::internal::compiler::Node"** %19, %"class.v8::internal::compiler::Node"*** %15, align 8
  br label %23

23:                                               ; preds = %22, %18, %12
  %24 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 10
  store %"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"** %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = and i32 %26, 16777215
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %31 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.std::__1::vector.12"* %29 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %32, %34
  %36 = ashr exact i64 %35, 3
  %37 = icmp ugt i64 %36, %28
  %38 = inttoptr i64 %34 to %"class.v8::internal::compiler::BasicBlock"**
  br i1 %37, label %51, label %39

39:                                               ; preds = %23
  %40 = add nuw nsw i32 %27, 1
  %41 = zext i32 %40 to i64
  %42 = icmp ult i64 %36, %41
  br i1 %42, label %43, label %47

43:                                               ; preds = %39
  %44 = sub nsw i64 %41, %36
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler10BasicBlockENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.12"* %29, i64 %44) #13
  %45 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %29, i64 0, i32 0, i32 0
  %46 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %45, align 8
  br label %51

47:                                               ; preds = %39
  %48 = icmp ugt i64 %36, %41
  br i1 %48, label %49, label %51

49:                                               ; preds = %47
  %50 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %38, i64 %41
  store %"class.v8::internal::compiler::BasicBlock"** %50, %"class.v8::internal::compiler::BasicBlock"*** %30, align 8
  br label %51

51:                                               ; preds = %23, %43, %47, %49
  %52 = phi %"class.v8::internal::compiler::BasicBlock"** [ %38, %49 ], [ %38, %47 ], [ %46, %43 ], [ %38, %23 ]
  %53 = load i32, i32* %25, align 4
  %54 = and i32 %53, 16777215
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %52, i64 %55
  store %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::BasicBlock"** %56, align 8
  ret void

57:                                               ; preds = %10, %57
  %58 = phi i64 [ %61, %57 ], [ 0, %10 ]
  %59 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %3, i64 %58
  %60 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %59, align 8
  tail call void @_ZN2v88internal8compiler8Schedule12AddSuccessorEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::Schedule"* undef, %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::BasicBlock"* %60)
  %61 = add nuw i64 %58, 1
  %62 = icmp eq i64 %61, %4
  br i1 %62, label %12, label %57
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler8Schedule11AddTailCallEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 9
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7, !prof !54

7:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i64 0, i64 0)) #14
  unreachable

8:                                                ; preds = %3
  store i32 6, i32* %4, align 4
  %9 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %10 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 11, i32 0, i32 0, i32 1
  %12 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %11, align 8
  %13 = icmp eq %"class.v8::internal::compiler::Node"** %10, %12
  br i1 %13, label %19, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %12, i64 -1
  %16 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %15, align 8
  %17 = icmp eq %"class.v8::internal::compiler::Node"* %16, %2
  br i1 %17, label %18, label %19

18:                                               ; preds = %14
  store %"class.v8::internal::compiler::Node"** %15, %"class.v8::internal::compiler::Node"*** %11, align 8
  br label %19

19:                                               ; preds = %18, %14, %8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 10
  store %"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"** %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = and i32 %22, 16777215
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0
  %26 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %27 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::vector.12"* %25 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %28, %30
  %32 = ashr exact i64 %31, 3
  %33 = icmp ugt i64 %32, %24
  %34 = inttoptr i64 %30 to %"class.v8::internal::compiler::BasicBlock"**
  br i1 %33, label %47, label %35

35:                                               ; preds = %19
  %36 = add nuw nsw i32 %23, 1
  %37 = zext i32 %36 to i64
  %38 = icmp ult i64 %32, %37
  br i1 %38, label %39, label %43

39:                                               ; preds = %35
  %40 = sub nsw i64 %37, %32
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler10BasicBlockENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.12"* %25, i64 %40) #13
  %41 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %25, i64 0, i32 0, i32 0
  %42 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %41, align 8
  br label %47

43:                                               ; preds = %35
  %44 = icmp ugt i64 %32, %37
  br i1 %44, label %45, label %47

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %34, i64 %37
  store %"class.v8::internal::compiler::BasicBlock"** %46, %"class.v8::internal::compiler::BasicBlock"*** %26, align 8
  br label %47

47:                                               ; preds = %19, %39, %43, %45
  %48 = phi %"class.v8::internal::compiler::BasicBlock"** [ %34, %45 ], [ %34, %43 ], [ %42, %39 ], [ %34, %19 ]
  %49 = load i32, i32* %21, align 4
  %50 = and i32 %49, 16777215
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %48, i64 %51
  store %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::BasicBlock"** %52, align 8
  %53 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 5
  %54 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %53, align 8
  %55 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %54, %1
  br i1 %55, label %57, label %56

56:                                               ; preds = %47
  tail call void @_ZN2v88internal8compiler8Schedule12AddSuccessorEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::Schedule"* undef, %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::BasicBlock"* %54)
  br label %57

57:                                               ; preds = %47, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler8Schedule9AddReturnEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 9
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7, !prof !54

7:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i64 0, i64 0)) #14
  unreachable

8:                                                ; preds = %3
  store i32 7, i32* %4, align 4
  %9 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %10 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 11, i32 0, i32 0, i32 1
  %12 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %11, align 8
  %13 = icmp eq %"class.v8::internal::compiler::Node"** %10, %12
  br i1 %13, label %19, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %12, i64 -1
  %16 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %15, align 8
  %17 = icmp eq %"class.v8::internal::compiler::Node"* %16, %2
  br i1 %17, label %18, label %19

18:                                               ; preds = %14
  store %"class.v8::internal::compiler::Node"** %15, %"class.v8::internal::compiler::Node"*** %11, align 8
  br label %19

19:                                               ; preds = %18, %14, %8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 10
  store %"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"** %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = and i32 %22, 16777215
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0
  %26 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %27 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::vector.12"* %25 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %28, %30
  %32 = ashr exact i64 %31, 3
  %33 = icmp ugt i64 %32, %24
  %34 = inttoptr i64 %30 to %"class.v8::internal::compiler::BasicBlock"**
  br i1 %33, label %47, label %35

35:                                               ; preds = %19
  %36 = add nuw nsw i32 %23, 1
  %37 = zext i32 %36 to i64
  %38 = icmp ult i64 %32, %37
  br i1 %38, label %39, label %43

39:                                               ; preds = %35
  %40 = sub nsw i64 %37, %32
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler10BasicBlockENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.12"* %25, i64 %40) #13
  %41 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %25, i64 0, i32 0, i32 0
  %42 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %41, align 8
  br label %47

43:                                               ; preds = %35
  %44 = icmp ugt i64 %32, %37
  br i1 %44, label %45, label %47

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %34, i64 %37
  store %"class.v8::internal::compiler::BasicBlock"** %46, %"class.v8::internal::compiler::BasicBlock"*** %26, align 8
  br label %47

47:                                               ; preds = %19, %39, %43, %45
  %48 = phi %"class.v8::internal::compiler::BasicBlock"** [ %34, %45 ], [ %34, %43 ], [ %42, %39 ], [ %34, %19 ]
  %49 = load i32, i32* %21, align 4
  %50 = and i32 %49, 16777215
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %48, i64 %51
  store %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::BasicBlock"** %52, align 8
  %53 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 5
  %54 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %53, align 8
  %55 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %54, %1
  br i1 %55, label %57, label %56

56:                                               ; preds = %47
  tail call void @_ZN2v88internal8compiler8Schedule12AddSuccessorEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::Schedule"* undef, %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::BasicBlock"* %54)
  br label %57

57:                                               ; preds = %47, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler8Schedule13AddDeoptimizeEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 9
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7, !prof !54

7:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i64 0, i64 0)) #14
  unreachable

8:                                                ; preds = %3
  store i32 5, i32* %4, align 4
  %9 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %10 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 11, i32 0, i32 0, i32 1
  %12 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %11, align 8
  %13 = icmp eq %"class.v8::internal::compiler::Node"** %10, %12
  br i1 %13, label %19, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %12, i64 -1
  %16 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %15, align 8
  %17 = icmp eq %"class.v8::internal::compiler::Node"* %16, %2
  br i1 %17, label %18, label %19

18:                                               ; preds = %14
  store %"class.v8::internal::compiler::Node"** %15, %"class.v8::internal::compiler::Node"*** %11, align 8
  br label %19

19:                                               ; preds = %18, %14, %8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 10
  store %"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"** %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = and i32 %22, 16777215
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0
  %26 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %27 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::vector.12"* %25 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %28, %30
  %32 = ashr exact i64 %31, 3
  %33 = icmp ugt i64 %32, %24
  %34 = inttoptr i64 %30 to %"class.v8::internal::compiler::BasicBlock"**
  br i1 %33, label %47, label %35

35:                                               ; preds = %19
  %36 = add nuw nsw i32 %23, 1
  %37 = zext i32 %36 to i64
  %38 = icmp ult i64 %32, %37
  br i1 %38, label %39, label %43

39:                                               ; preds = %35
  %40 = sub nsw i64 %37, %32
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler10BasicBlockENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.12"* %25, i64 %40) #13
  %41 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %25, i64 0, i32 0, i32 0
  %42 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %41, align 8
  br label %47

43:                                               ; preds = %35
  %44 = icmp ugt i64 %32, %37
  br i1 %44, label %45, label %47

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %34, i64 %37
  store %"class.v8::internal::compiler::BasicBlock"** %46, %"class.v8::internal::compiler::BasicBlock"*** %26, align 8
  br label %47

47:                                               ; preds = %19, %39, %43, %45
  %48 = phi %"class.v8::internal::compiler::BasicBlock"** [ %34, %45 ], [ %34, %43 ], [ %42, %39 ], [ %34, %19 ]
  %49 = load i32, i32* %21, align 4
  %50 = and i32 %49, 16777215
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %48, i64 %51
  store %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::BasicBlock"** %52, align 8
  %53 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 5
  %54 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %53, align 8
  %55 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %54, %1
  br i1 %55, label %57, label %56

56:                                               ; preds = %47
  tail call void @_ZN2v88internal8compiler8Schedule12AddSuccessorEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::Schedule"* undef, %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::BasicBlock"* %54)
  br label %57

57:                                               ; preds = %47, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler8Schedule8AddThrowEPNS1_10BasicBlockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 9
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7, !prof !54

7:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.18, i64 0, i64 0)) #14
  unreachable

8:                                                ; preds = %3
  store i32 8, i32* %4, align 4
  %9 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %10 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 11, i32 0, i32 0, i32 1
  %12 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %11, align 8
  %13 = icmp eq %"class.v8::internal::compiler::Node"** %10, %12
  br i1 %13, label %19, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %12, i64 -1
  %16 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %15, align 8
  %17 = icmp eq %"class.v8::internal::compiler::Node"* %16, %2
  br i1 %17, label %18, label %19

18:                                               ; preds = %14
  store %"class.v8::internal::compiler::Node"** %15, %"class.v8::internal::compiler::Node"*** %11, align 8
  br label %19

19:                                               ; preds = %18, %14, %8
  %20 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 10
  store %"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"** %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = and i32 %22, 16777215
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0
  %26 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %27 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::vector.12"* %25 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %28, %30
  %32 = ashr exact i64 %31, 3
  %33 = icmp ugt i64 %32, %24
  %34 = inttoptr i64 %30 to %"class.v8::internal::compiler::BasicBlock"**
  br i1 %33, label %47, label %35

35:                                               ; preds = %19
  %36 = add nuw nsw i32 %23, 1
  %37 = zext i32 %36 to i64
  %38 = icmp ult i64 %32, %37
  br i1 %38, label %39, label %43

39:                                               ; preds = %35
  %40 = sub nsw i64 %37, %32
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler10BasicBlockENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.12"* %25, i64 %40) #13
  %41 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %25, i64 0, i32 0, i32 0
  %42 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %41, align 8
  br label %47

43:                                               ; preds = %35
  %44 = icmp ugt i64 %32, %37
  br i1 %44, label %45, label %47

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %34, i64 %37
  store %"class.v8::internal::compiler::BasicBlock"** %46, %"class.v8::internal::compiler::BasicBlock"*** %26, align 8
  br label %47

47:                                               ; preds = %19, %39, %43, %45
  %48 = phi %"class.v8::internal::compiler::BasicBlock"** [ %34, %45 ], [ %34, %43 ], [ %42, %39 ], [ %34, %19 ]
  %49 = load i32, i32* %21, align 4
  %50 = and i32 %49, 16777215
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %48, i64 %51
  store %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::BasicBlock"** %52, align 8
  %53 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 5
  %54 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %53, align 8
  %55 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %54, %1
  br i1 %55, label %57, label %56

56:                                               ; preds = %47
  tail call void @_ZN2v88internal8compiler8Schedule12AddSuccessorEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::Schedule"* undef, %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::BasicBlock"* %54)
  br label %57

57:                                               ; preds = %47, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler8Schedule12InsertBranchEPNS1_10BasicBlockES4_PNS1_4NodeES4_S4_(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 9
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %11, !prof !2

10:                                               ; preds = %6
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.19, i64 0, i64 0)) #14
  unreachable

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %2, i64 0, i32 9
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15, !prof !54

15:                                               ; preds = %11
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.20, i64 0, i64 0)) #14
  unreachable

16:                                               ; preds = %11
  store i32 %8, i32* %12, align 4
  store i32 3, i32* %7, align 4
  tail call void @_ZN2v88internal8compiler8Schedule14MoveSuccessorsEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::Schedule"* undef, %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::BasicBlock"* %2)
  tail call void @_ZN2v88internal8compiler8Schedule12AddSuccessorEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::Schedule"* undef, %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::BasicBlock"* %4)
  tail call void @_ZN2v88internal8compiler8Schedule12AddSuccessorEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::Schedule"* undef, %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::BasicBlock"* %5)
  %17 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 10
  %18 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %17, align 8
  %19 = icmp eq %"class.v8::internal::compiler::Node"* %18, null
  br i1 %19, label %65, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %2, i64 0, i32 11, i32 0, i32 0, i32 0
  %22 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %2, i64 0, i32 11, i32 0, i32 0, i32 1
  %24 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %23, align 8
  %25 = icmp eq %"class.v8::internal::compiler::Node"** %22, %24
  br i1 %25, label %31, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %24, i64 -1
  %28 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %27, align 8
  %29 = icmp eq %"class.v8::internal::compiler::Node"* %28, %18
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  store %"class.v8::internal::compiler::Node"** %27, %"class.v8::internal::compiler::Node"*** %23, align 8
  br label %31

31:                                               ; preds = %30, %26, %20
  %32 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %2, i64 0, i32 10
  store %"class.v8::internal::compiler::Node"* %18, %"class.v8::internal::compiler::Node"** %32, align 8
  %33 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %18, i64 0, i32 3
  %34 = load i32, i32* %33, align 4
  %35 = and i32 %34, 16777215
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0
  %38 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %39 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.std::__1::vector.12"* %37 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = ashr exact i64 %43, 3
  %45 = icmp ugt i64 %44, %36
  %46 = inttoptr i64 %42 to %"class.v8::internal::compiler::BasicBlock"**
  br i1 %45, label %59, label %47

47:                                               ; preds = %31
  %48 = add nuw nsw i32 %35, 1
  %49 = zext i32 %48 to i64
  %50 = icmp ult i64 %44, %49
  br i1 %50, label %51, label %55

51:                                               ; preds = %47
  %52 = sub nsw i64 %49, %44
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler10BasicBlockENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.12"* %37, i64 %52) #13
  %53 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %37, i64 0, i32 0, i32 0
  %54 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %53, align 8
  br label %59

55:                                               ; preds = %47
  %56 = icmp ugt i64 %44, %49
  br i1 %56, label %57, label %59

57:                                               ; preds = %55
  %58 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %46, i64 %49
  store %"class.v8::internal::compiler::BasicBlock"** %58, %"class.v8::internal::compiler::BasicBlock"*** %38, align 8
  br label %59

59:                                               ; preds = %31, %51, %55, %57
  %60 = phi %"class.v8::internal::compiler::BasicBlock"** [ %46, %57 ], [ %46, %55 ], [ %54, %51 ], [ %46, %31 ]
  %61 = load i32, i32* %33, align 4
  %62 = and i32 %61, 16777215
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %60, i64 %63
  store %"class.v8::internal::compiler::BasicBlock"* %2, %"class.v8::internal::compiler::BasicBlock"** %64, align 8
  br label %65

65:                                               ; preds = %16, %59
  %66 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %67 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %66, align 8
  %68 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 11, i32 0, i32 0, i32 1
  %69 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %68, align 8
  %70 = icmp eq %"class.v8::internal::compiler::Node"** %67, %69
  br i1 %70, label %76, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %69, i64 -1
  %73 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %72, align 8
  %74 = icmp eq %"class.v8::internal::compiler::Node"* %73, %3
  br i1 %74, label %75, label %76

75:                                               ; preds = %71
  store %"class.v8::internal::compiler::Node"** %72, %"class.v8::internal::compiler::Node"*** %68, align 8
  br label %76

76:                                               ; preds = %75, %71, %65
  store %"class.v8::internal::compiler::Node"* %3, %"class.v8::internal::compiler::Node"** %17, align 8
  %77 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %3, i64 0, i32 3
  %78 = load i32, i32* %77, align 4
  %79 = and i32 %78, 16777215
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0
  %82 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %83 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"class.std::__1::vector.12"* %81 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = sub i64 %84, %86
  %88 = ashr exact i64 %87, 3
  %89 = icmp ugt i64 %88, %80
  %90 = inttoptr i64 %86 to %"class.v8::internal::compiler::BasicBlock"**
  br i1 %89, label %103, label %91

91:                                               ; preds = %76
  %92 = add nuw nsw i32 %79, 1
  %93 = zext i32 %92 to i64
  %94 = icmp ult i64 %88, %93
  br i1 %94, label %95, label %99

95:                                               ; preds = %91
  %96 = sub nsw i64 %93, %88
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler10BasicBlockENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.12"* %81, i64 %96) #13
  %97 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %81, i64 0, i32 0, i32 0
  %98 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %97, align 8
  br label %103

99:                                               ; preds = %91
  %100 = icmp ugt i64 %88, %93
  br i1 %100, label %101, label %103

101:                                              ; preds = %99
  %102 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %90, i64 %93
  store %"class.v8::internal::compiler::BasicBlock"** %102, %"class.v8::internal::compiler::BasicBlock"*** %82, align 8
  br label %103

103:                                              ; preds = %76, %95, %99, %101
  %104 = phi %"class.v8::internal::compiler::BasicBlock"** [ %90, %101 ], [ %90, %99 ], [ %98, %95 ], [ %90, %76 ]
  %105 = load i32, i32* %77, align 4
  %106 = and i32 %105, 16777215
  %107 = zext i32 %106 to i64
  %108 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %104, i64 %107
  store %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::BasicBlock"** %108, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler8Schedule14MoveSuccessorsEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::Schedule"* nocapture readnone, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 12, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 12, i32 0, i32 0, i32 1
  %7 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %6, align 8
  %8 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %5, %7
  br i1 %8, label %9, label %11

9:                                                ; preds = %3
  %10 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %5 to i64
  br label %24

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %2, i64 0, i32 12, i32 0
  %13 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %2, i64 0, i32 12, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %2, i64 0, i32 12, i32 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %13 to i64*
  %16 = bitcast %"class.std::__1::vector.12"* %12 to i64*
  %17 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %14 to i64*
  %18 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %2, i64 0, i32 12, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %12, i64 0, i32 0, i32 0
  br label %27

20:                                               ; preds = %288
  %21 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 12, i32 0
  %22 = bitcast %"class.std::__1::vector.12"* %21 to i64*
  %23 = load i64, i64* %22, align 8
  br label %24

24:                                               ; preds = %9, %20
  %25 = phi i64 [ %23, %20 ], [ %10, %9 ]
  %26 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %6 to i64*
  store i64 %25, i64* %26, align 8
  ret void

27:                                               ; preds = %11, %288
  %28 = phi %"class.v8::internal::compiler::BasicBlock"** [ %5, %11 ], [ %289, %288 ]
  %29 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %28, align 8
  %30 = ptrtoint %"class.v8::internal::compiler::BasicBlock"* %29 to i64
  %31 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %13, align 8
  %32 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %14, align 8
  %33 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %31, %32
  %34 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %32 to i64
  br i1 %33, label %39, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.v8::internal::compiler::BasicBlock"** %31 to i64*
  store i64 %30, i64* %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %31, i64 1
  %38 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %37 to i64
  store i64 %38, i64* %15, align 8
  br label %260

39:                                               ; preds = %27
  %40 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %31 to i64
  %41 = load i64, i64* %16, align 8
  %42 = sub i64 %40, %41
  %43 = ashr exact i64 %42, 3
  %44 = add nsw i64 %43, 1
  %45 = icmp ugt i64 %44, 268435455
  br i1 %45, label %46, label %48

46:                                               ; preds = %39
  %47 = bitcast %"class.std::__1::vector.12"* %12 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %47) #14
  unreachable

48:                                               ; preds = %39
  %49 = sub i64 %34, %41
  %50 = ashr exact i64 %49, 3
  %51 = icmp ult i64 %50, 134217727
  br i1 %51, label %52, label %57

52:                                               ; preds = %48
  %53 = ashr exact i64 %49, 2
  %54 = icmp ult i64 %53, %44
  %55 = select i1 %54, i64 %44, i64 %53
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %74, label %57

57:                                               ; preds = %52, %48
  %58 = phi i64 [ %55, %52 ], [ 268435455, %48 ]
  %59 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %18, align 8
  %60 = shl i64 %58, 3
  %61 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %59, i64 0, i32 2
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %59, i64 0, i32 3
  %64 = load i64, i64* %63, align 8
  %65 = sub i64 %64, %62
  %66 = icmp ugt i64 %60, %65
  br i1 %66, label %67, label %69, !prof !2

67:                                               ; preds = %57
  %68 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %59, i64 %60) #13
  br label %71

69:                                               ; preds = %57
  %70 = add i64 %62, %60
  store i64 %70, i64* %61, align 8
  br label %71

71:                                               ; preds = %69, %67
  %72 = phi i64 [ %68, %67 ], [ %62, %69 ]
  %73 = inttoptr i64 %72 to %"class.v8::internal::compiler::BasicBlock"**
  br label %74

74:                                               ; preds = %71, %52
  %75 = phi i64 [ %58, %71 ], [ 0, %52 ]
  %76 = phi %"class.v8::internal::compiler::BasicBlock"** [ %73, %71 ], [ null, %52 ]
  %77 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %76, i64 %43
  %78 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %76, i64 %75
  %79 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %78 to i64
  %80 = bitcast %"class.v8::internal::compiler::BasicBlock"** %77 to i64*
  store i64 %30, i64* %80, align 8
  %81 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %77, i64 1
  %82 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %81 to i64
  %83 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %19, align 8
  %84 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %83 to i64
  %85 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %13, align 8
  %86 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %85, %83
  br i1 %86, label %257, label %87

87:                                               ; preds = %74
  %88 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %85, i64 -1
  %89 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %88 to i64
  %90 = sub i64 %89, %84
  %91 = lshr i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = icmp ult i64 %92, 4
  br i1 %93, label %187, label %94

94:                                               ; preds = %87
  %95 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %76, i64 -1
  %96 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %85, i64 -1
  %97 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %96 to i64
  %98 = sub i64 %97, %84
  %99 = lshr i64 %98, 3
  %100 = sub nsw i64 %43, %99
  %101 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %95, i64 %100
  %102 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %85, i64 -1
  %103 = sub nsw i64 0, %99
  %104 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %102, i64 %103
  %105 = icmp ult %"class.v8::internal::compiler::BasicBlock"** %101, %85
  %106 = icmp ult %"class.v8::internal::compiler::BasicBlock"** %104, %77
  %107 = and i1 %105, %106
  br i1 %107, label %187, label %108

108:                                              ; preds = %94
  %109 = and i64 %92, 4611686018427387900
  %110 = sub nsw i64 0, %109
  %111 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %77, i64 %110
  %112 = sub nsw i64 0, %109
  %113 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %85, i64 %112
  %114 = add nsw i64 %109, -4
  %115 = lshr exact i64 %114, 2
  %116 = add nuw nsw i64 %115, 1
  %117 = and i64 %116, 1
  %118 = icmp eq i64 %114, 0
  br i1 %118, label %163, label %119

119:                                              ; preds = %108
  %120 = sub nuw nsw i64 %116, %117
  %121 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %77, i64 -1
  %122 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %85, i64 -1
  %123 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %77, i64 -1
  %124 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %85, i64 -1
  br label %125

125:                                              ; preds = %125, %119
  %126 = phi i64 [ 0, %119 ], [ %160, %125 ]
  %127 = phi i64 [ %120, %119 ], [ %161, %125 ]
  %128 = sub i64 0, %126
  %129 = sub i64 0, %126
  %130 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %121, i64 %128
  %131 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %122, i64 %129
  %132 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %131, i64 -1
  %133 = bitcast %"class.v8::internal::compiler::BasicBlock"** %132 to <2 x i64>*
  %134 = load <2 x i64>, <2 x i64>* %133, align 8, !alias.scope !71
  %135 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %131, i64 -2
  %136 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %135, i64 -1
  %137 = bitcast %"class.v8::internal::compiler::BasicBlock"** %136 to <2 x i64>*
  %138 = load <2 x i64>, <2 x i64>* %137, align 8, !alias.scope !71
  %139 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %130, i64 -1
  %140 = bitcast %"class.v8::internal::compiler::BasicBlock"** %139 to <2 x i64>*
  store <2 x i64> %134, <2 x i64>* %140, align 8, !alias.scope !74, !noalias !71
  %141 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %130, i64 -2
  %142 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %141, i64 -1
  %143 = bitcast %"class.v8::internal::compiler::BasicBlock"** %142 to <2 x i64>*
  store <2 x i64> %138, <2 x i64>* %143, align 8, !alias.scope !74, !noalias !71
  %144 = sub nuw nsw i64 -4, %126
  %145 = sub nuw nsw i64 -4, %126
  %146 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %123, i64 %144
  %147 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %124, i64 %145
  %148 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %147, i64 -1
  %149 = bitcast %"class.v8::internal::compiler::BasicBlock"** %148 to <2 x i64>*
  %150 = load <2 x i64>, <2 x i64>* %149, align 8, !alias.scope !71
  %151 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %147, i64 -2
  %152 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %151, i64 -1
  %153 = bitcast %"class.v8::internal::compiler::BasicBlock"** %152 to <2 x i64>*
  %154 = load <2 x i64>, <2 x i64>* %153, align 8, !alias.scope !71
  %155 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %146, i64 -1
  %156 = bitcast %"class.v8::internal::compiler::BasicBlock"** %155 to <2 x i64>*
  store <2 x i64> %150, <2 x i64>* %156, align 8, !alias.scope !74, !noalias !71
  %157 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %146, i64 -2
  %158 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %157, i64 -1
  %159 = bitcast %"class.v8::internal::compiler::BasicBlock"** %158 to <2 x i64>*
  store <2 x i64> %154, <2 x i64>* %159, align 8, !alias.scope !74, !noalias !71
  %160 = add i64 %126, 8
  %161 = add i64 %127, -2
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %125, !llvm.loop !76

163:                                              ; preds = %125, %108
  %164 = phi i64 [ 0, %108 ], [ %160, %125 ]
  %165 = icmp eq i64 %117, 0
  br i1 %165, label %185, label %166

166:                                              ; preds = %163
  %167 = sub i64 0, %164
  %168 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %77, i64 -1
  %169 = sub i64 0, %164
  %170 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %85, i64 -1
  %171 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %168, i64 %167
  %172 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %170, i64 %169
  %173 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %172, i64 -1
  %174 = bitcast %"class.v8::internal::compiler::BasicBlock"** %173 to <2 x i64>*
  %175 = load <2 x i64>, <2 x i64>* %174, align 8, !alias.scope !71
  %176 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %172, i64 -2
  %177 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %176, i64 -1
  %178 = bitcast %"class.v8::internal::compiler::BasicBlock"** %177 to <2 x i64>*
  %179 = load <2 x i64>, <2 x i64>* %178, align 8, !alias.scope !71
  %180 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %171, i64 -1
  %181 = bitcast %"class.v8::internal::compiler::BasicBlock"** %180 to <2 x i64>*
  store <2 x i64> %175, <2 x i64>* %181, align 8, !alias.scope !74, !noalias !71
  %182 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %171, i64 -2
  %183 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %182, i64 -1
  %184 = bitcast %"class.v8::internal::compiler::BasicBlock"** %183 to <2 x i64>*
  store <2 x i64> %179, <2 x i64>* %184, align 8, !alias.scope !74, !noalias !71
  br label %185

185:                                              ; preds = %163, %166
  %186 = icmp eq i64 %92, %109
  br i1 %186, label %257, label %187

187:                                              ; preds = %185, %94, %87
  %188 = phi %"class.v8::internal::compiler::BasicBlock"** [ %77, %94 ], [ %77, %87 ], [ %111, %185 ]
  %189 = phi %"class.v8::internal::compiler::BasicBlock"** [ %85, %94 ], [ %85, %87 ], [ %113, %185 ]
  %190 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %189, i64 -1
  %191 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %190 to i64
  %192 = sub i64 %191, %84
  %193 = lshr i64 %192, 3
  %194 = add nuw nsw i64 %193, 1
  %195 = and i64 %194, 7
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %208, label %197

197:                                              ; preds = %187, %197
  %198 = phi %"class.v8::internal::compiler::BasicBlock"** [ %201, %197 ], [ %188, %187 ]
  %199 = phi %"class.v8::internal::compiler::BasicBlock"** [ %202, %197 ], [ %189, %187 ]
  %200 = phi i64 [ %206, %197 ], [ %195, %187 ]
  %201 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %198, i64 -1
  %202 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %199, i64 -1
  %203 = bitcast %"class.v8::internal::compiler::BasicBlock"** %202 to i64*
  %204 = load i64, i64* %203, align 8
  %205 = bitcast %"class.v8::internal::compiler::BasicBlock"** %201 to i64*
  store i64 %204, i64* %205, align 8
  %206 = add i64 %200, -1
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %208, label %197, !llvm.loop !77

208:                                              ; preds = %197, %187
  %209 = phi %"class.v8::internal::compiler::BasicBlock"** [ undef, %187 ], [ %201, %197 ]
  %210 = phi %"class.v8::internal::compiler::BasicBlock"** [ %188, %187 ], [ %201, %197 ]
  %211 = phi %"class.v8::internal::compiler::BasicBlock"** [ %189, %187 ], [ %202, %197 ]
  %212 = icmp ult i64 %192, 56
  br i1 %212, label %257, label %213

213:                                              ; preds = %208, %213
  %214 = phi %"class.v8::internal::compiler::BasicBlock"** [ %251, %213 ], [ %210, %208 ]
  %215 = phi %"class.v8::internal::compiler::BasicBlock"** [ %252, %213 ], [ %211, %208 ]
  %216 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %214, i64 -1
  %217 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %215, i64 -1
  %218 = bitcast %"class.v8::internal::compiler::BasicBlock"** %217 to i64*
  %219 = load i64, i64* %218, align 8
  %220 = bitcast %"class.v8::internal::compiler::BasicBlock"** %216 to i64*
  store i64 %219, i64* %220, align 8
  %221 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %214, i64 -2
  %222 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %215, i64 -2
  %223 = bitcast %"class.v8::internal::compiler::BasicBlock"** %222 to i64*
  %224 = load i64, i64* %223, align 8
  %225 = bitcast %"class.v8::internal::compiler::BasicBlock"** %221 to i64*
  store i64 %224, i64* %225, align 8
  %226 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %214, i64 -3
  %227 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %215, i64 -3
  %228 = bitcast %"class.v8::internal::compiler::BasicBlock"** %227 to i64*
  %229 = load i64, i64* %228, align 8
  %230 = bitcast %"class.v8::internal::compiler::BasicBlock"** %226 to i64*
  store i64 %229, i64* %230, align 8
  %231 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %214, i64 -4
  %232 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %215, i64 -4
  %233 = bitcast %"class.v8::internal::compiler::BasicBlock"** %232 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = bitcast %"class.v8::internal::compiler::BasicBlock"** %231 to i64*
  store i64 %234, i64* %235, align 8
  %236 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %214, i64 -5
  %237 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %215, i64 -5
  %238 = bitcast %"class.v8::internal::compiler::BasicBlock"** %237 to i64*
  %239 = load i64, i64* %238, align 8
  %240 = bitcast %"class.v8::internal::compiler::BasicBlock"** %236 to i64*
  store i64 %239, i64* %240, align 8
  %241 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %214, i64 -6
  %242 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %215, i64 -6
  %243 = bitcast %"class.v8::internal::compiler::BasicBlock"** %242 to i64*
  %244 = load i64, i64* %243, align 8
  %245 = bitcast %"class.v8::internal::compiler::BasicBlock"** %241 to i64*
  store i64 %244, i64* %245, align 8
  %246 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %214, i64 -7
  %247 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %215, i64 -7
  %248 = bitcast %"class.v8::internal::compiler::BasicBlock"** %247 to i64*
  %249 = load i64, i64* %248, align 8
  %250 = bitcast %"class.v8::internal::compiler::BasicBlock"** %246 to i64*
  store i64 %249, i64* %250, align 8
  %251 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %214, i64 -8
  %252 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %215, i64 -8
  %253 = bitcast %"class.v8::internal::compiler::BasicBlock"** %252 to i64*
  %254 = load i64, i64* %253, align 8
  %255 = bitcast %"class.v8::internal::compiler::BasicBlock"** %251 to i64*
  store i64 %254, i64* %255, align 8
  %256 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %252, %83
  br i1 %256, label %257, label %213, !llvm.loop !78

257:                                              ; preds = %208, %213, %185, %74
  %258 = phi %"class.v8::internal::compiler::BasicBlock"** [ %77, %74 ], [ %111, %185 ], [ %209, %208 ], [ %251, %213 ]
  %259 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %258 to i64
  store i64 %259, i64* %16, align 8
  store i64 %82, i64* %15, align 8
  store i64 %79, i64* %17, align 8
  br label %260

260:                                              ; preds = %35, %257
  %261 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %29, i64 0, i32 13, i32 0, i32 0, i32 0
  %262 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %261, align 8
  %263 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %29, i64 0, i32 13, i32 0, i32 0, i32 1
  %264 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %263, align 8
  %265 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %262, %264
  br i1 %265, label %288, label %266

266:                                              ; preds = %260
  %267 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %262 to i64
  %268 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %264, i64 -1
  %269 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %268 to i64
  %270 = sub i64 %269, %267
  %271 = lshr i64 %270, 3
  %272 = add nuw nsw i64 %271, 1
  %273 = and i64 %272, 3
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %285, label %275

275:                                              ; preds = %266, %281
  %276 = phi %"class.v8::internal::compiler::BasicBlock"** [ %282, %281 ], [ %262, %266 ]
  %277 = phi i64 [ %283, %281 ], [ %273, %266 ]
  %278 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %276, align 8
  %279 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %278, %1
  br i1 %279, label %280, label %281

280:                                              ; preds = %275
  store %"class.v8::internal::compiler::BasicBlock"* %2, %"class.v8::internal::compiler::BasicBlock"** %276, align 8
  br label %281

281:                                              ; preds = %280, %275
  %282 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %276, i64 1
  %283 = add i64 %277, -1
  %284 = icmp eq i64 %283, 0
  br i1 %284, label %285, label %275, !llvm.loop !79

285:                                              ; preds = %281, %266
  %286 = phi %"class.v8::internal::compiler::BasicBlock"** [ %262, %266 ], [ %282, %281 ]
  %287 = icmp ult i64 %270, 24
  br i1 %287, label %288, label %291

288:                                              ; preds = %285, %311, %260
  %289 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %28, i64 1
  %290 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %289, %7
  br i1 %290, label %20, label %27

291:                                              ; preds = %285, %311
  %292 = phi %"class.v8::internal::compiler::BasicBlock"** [ %312, %311 ], [ %286, %285 ]
  %293 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %292, align 8
  %294 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %293, %1
  br i1 %294, label %295, label %296

295:                                              ; preds = %291
  store %"class.v8::internal::compiler::BasicBlock"* %2, %"class.v8::internal::compiler::BasicBlock"** %292, align 8
  br label %296

296:                                              ; preds = %295, %291
  %297 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %292, i64 1
  %298 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %297, align 8
  %299 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %298, %1
  br i1 %299, label %300, label %301

300:                                              ; preds = %296
  store %"class.v8::internal::compiler::BasicBlock"* %2, %"class.v8::internal::compiler::BasicBlock"** %297, align 8
  br label %301

301:                                              ; preds = %300, %296
  %302 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %292, i64 2
  %303 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %302, align 8
  %304 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %303, %1
  br i1 %304, label %305, label %306

305:                                              ; preds = %301
  store %"class.v8::internal::compiler::BasicBlock"* %2, %"class.v8::internal::compiler::BasicBlock"** %302, align 8
  br label %306

306:                                              ; preds = %305, %301
  %307 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %292, i64 3
  %308 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %307, align 8
  %309 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %308, %1
  br i1 %309, label %310, label %311

310:                                              ; preds = %306
  store %"class.v8::internal::compiler::BasicBlock"* %2, %"class.v8::internal::compiler::BasicBlock"** %307, align 8
  br label %311

311:                                              ; preds = %310, %306
  %312 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %292, i64 4
  %313 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %312, %264
  br i1 %313, label %288, label %291
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler8Schedule12InsertSwitchEPNS1_10BasicBlockES4_PNS1_4NodeEPS4_m(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::BasicBlock"** nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 9
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %11, !prof !2

10:                                               ; preds = %6
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.19, i64 0, i64 0)) #14
  unreachable

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %2, i64 0, i32 9
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15, !prof !54

15:                                               ; preds = %11
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.20, i64 0, i64 0)) #14
  unreachable

16:                                               ; preds = %11
  store i32 %8, i32* %12, align 4
  store i32 4, i32* %7, align 4
  tail call void @_ZN2v88internal8compiler8Schedule14MoveSuccessorsEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::Schedule"* undef, %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::BasicBlock"* %2)
  %17 = icmp eq i64 %5, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %22, %16
  %19 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 10
  %20 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %19, align 8
  %21 = icmp eq %"class.v8::internal::compiler::Node"* %20, null
  br i1 %21, label %73, label %28

22:                                               ; preds = %16, %22
  %23 = phi i64 [ %26, %22 ], [ 0, %16 ]
  %24 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %4, i64 %23
  %25 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %24, align 8
  tail call void @_ZN2v88internal8compiler8Schedule12AddSuccessorEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::Schedule"* undef, %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::BasicBlock"* %25)
  %26 = add nuw i64 %23, 1
  %27 = icmp eq i64 %26, %5
  br i1 %27, label %18, label %22

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %2, i64 0, i32 11, i32 0, i32 0, i32 0
  %30 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %2, i64 0, i32 11, i32 0, i32 0, i32 1
  %32 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %31, align 8
  %33 = icmp eq %"class.v8::internal::compiler::Node"** %30, %32
  br i1 %33, label %39, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %32, i64 -1
  %36 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %35, align 8
  %37 = icmp eq %"class.v8::internal::compiler::Node"* %36, %20
  br i1 %37, label %38, label %39

38:                                               ; preds = %34
  store %"class.v8::internal::compiler::Node"** %35, %"class.v8::internal::compiler::Node"*** %31, align 8
  br label %39

39:                                               ; preds = %38, %34, %28
  %40 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %2, i64 0, i32 10
  store %"class.v8::internal::compiler::Node"* %20, %"class.v8::internal::compiler::Node"** %40, align 8
  %41 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %20, i64 0, i32 3
  %42 = load i32, i32* %41, align 4
  %43 = and i32 %42, 16777215
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0
  %46 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %47 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.std::__1::vector.12"* %45 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = sub i64 %48, %50
  %52 = ashr exact i64 %51, 3
  %53 = icmp ugt i64 %52, %44
  %54 = inttoptr i64 %50 to %"class.v8::internal::compiler::BasicBlock"**
  br i1 %53, label %67, label %55

55:                                               ; preds = %39
  %56 = add nuw nsw i32 %43, 1
  %57 = zext i32 %56 to i64
  %58 = icmp ult i64 %52, %57
  br i1 %58, label %59, label %63

59:                                               ; preds = %55
  %60 = sub nsw i64 %57, %52
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler10BasicBlockENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.12"* %45, i64 %60) #13
  %61 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %45, i64 0, i32 0, i32 0
  %62 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %61, align 8
  br label %67

63:                                               ; preds = %55
  %64 = icmp ugt i64 %52, %57
  br i1 %64, label %65, label %67

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %54, i64 %57
  store %"class.v8::internal::compiler::BasicBlock"** %66, %"class.v8::internal::compiler::BasicBlock"*** %46, align 8
  br label %67

67:                                               ; preds = %39, %59, %63, %65
  %68 = phi %"class.v8::internal::compiler::BasicBlock"** [ %54, %65 ], [ %54, %63 ], [ %62, %59 ], [ %54, %39 ]
  %69 = load i32, i32* %41, align 4
  %70 = and i32 %69, 16777215
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %68, i64 %71
  store %"class.v8::internal::compiler::BasicBlock"* %2, %"class.v8::internal::compiler::BasicBlock"** %72, align 8
  br label %73

73:                                               ; preds = %18, %67
  %74 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %75 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 11, i32 0, i32 0, i32 1
  %77 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %76, align 8
  %78 = icmp eq %"class.v8::internal::compiler::Node"** %75, %77
  br i1 %78, label %84, label %79

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %77, i64 -1
  %81 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %80, align 8
  %82 = icmp eq %"class.v8::internal::compiler::Node"* %81, %3
  br i1 %82, label %83, label %84

83:                                               ; preds = %79
  store %"class.v8::internal::compiler::Node"** %80, %"class.v8::internal::compiler::Node"*** %76, align 8
  br label %84

84:                                               ; preds = %83, %79, %73
  store %"class.v8::internal::compiler::Node"* %3, %"class.v8::internal::compiler::Node"** %19, align 8
  %85 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %3, i64 0, i32 3
  %86 = load i32, i32* %85, align 4
  %87 = and i32 %86, 16777215
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0
  %90 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %91 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = bitcast %"class.std::__1::vector.12"* %89 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %92, %94
  %96 = ashr exact i64 %95, 3
  %97 = icmp ugt i64 %96, %88
  %98 = inttoptr i64 %94 to %"class.v8::internal::compiler::BasicBlock"**
  br i1 %97, label %111, label %99

99:                                               ; preds = %84
  %100 = add nuw nsw i32 %87, 1
  %101 = zext i32 %100 to i64
  %102 = icmp ult i64 %96, %101
  br i1 %102, label %103, label %107

103:                                              ; preds = %99
  %104 = sub nsw i64 %101, %96
  tail call void @_ZNSt3__16vectorIPN2v88internal8compiler10BasicBlockENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.12"* %89, i64 %104) #13
  %105 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %89, i64 0, i32 0, i32 0
  %106 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %105, align 8
  br label %111

107:                                              ; preds = %99
  %108 = icmp ugt i64 %96, %101
  br i1 %108, label %109, label %111

109:                                              ; preds = %107
  %110 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %98, i64 %101
  store %"class.v8::internal::compiler::BasicBlock"** %110, %"class.v8::internal::compiler::BasicBlock"*** %90, align 8
  br label %111

111:                                              ; preds = %84, %103, %107, %109
  %112 = phi %"class.v8::internal::compiler::BasicBlock"** [ %98, %109 ], [ %98, %107 ], [ %106, %103 ], [ %98, %84 ]
  %113 = load i32, i32* %85, align 4
  %114 = and i32 %113, 16777215
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %112, i64 %115
  store %"class.v8::internal::compiler::BasicBlock"* %1, %"class.v8::internal::compiler::BasicBlock"** %116, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler8Schedule23EnsureCFGWellFormednessEv(%"class.v8::internal::compiler::Schedule"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::ZoneVector.11", align 8
  %3 = bitcast %"class.v8::internal::ZoneVector.11"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #13
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %6 = bitcast %"class.v8::internal::Zone"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::ZoneVector.11", %"class.v8::internal::ZoneVector.11"* %2, i64 0, i32 0, i32 0, i32 2, i32 1
  %9 = bitcast %"struct.std::__1::__compressed_pair_elem.16"* %8 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 24, i1 false) #13
  store i64 %7, i64* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %11 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.v8::internal::ZoneVector.11"* %4 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 3
  %17 = icmp eq i64 %15, 0
  %18 = inttoptr i64 %7 to %"class.v8::internal::Zone"*
  br i1 %17, label %19, label %20

19:                                               ; preds = %1
  tail call void @_ZN2v88internal8compiler8Schedule26EliminateRedundantPhiNodesEv(%"class.v8::internal::compiler::Schedule"* %0)
  br label %134

20:                                               ; preds = %1
  %21 = icmp ugt i64 %16, 268435455
  br i1 %21, label %22, label %24

22:                                               ; preds = %20
  %23 = bitcast %"class.v8::internal::ZoneVector.11"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %23) #14
  unreachable

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18, i64 0, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18, i64 0, i32 3
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %28, %26
  %30 = icmp ugt i64 %15, %29
  br i1 %30, label %31, label %33, !prof !2

31:                                               ; preds = %24
  %32 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %18, i64 %15) #13
  br label %35

33:                                               ; preds = %24
  %34 = add i64 %26, %15
  store i64 %34, i64* %25, align 8
  br label %35

35:                                               ; preds = %33, %31
  %36 = phi i64 [ %32, %31 ], [ %26, %33 ]
  %37 = inttoptr i64 %36 to %"class.v8::internal::compiler::BasicBlock"**
  %38 = getelementptr inbounds %"class.v8::internal::ZoneVector.11", %"class.v8::internal::ZoneVector.11"* %2, i64 0, i32 0, i32 0, i32 1
  store %"class.v8::internal::compiler::BasicBlock"** %37, %"class.v8::internal::compiler::BasicBlock"*** %38, align 8
  %39 = getelementptr inbounds %"class.v8::internal::ZoneVector.11", %"class.v8::internal::ZoneVector.11"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::BasicBlock"** %37, %"class.v8::internal::compiler::BasicBlock"*** %39, align 8
  %40 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %37, i64 %16
  %41 = getelementptr inbounds %"class.v8::internal::ZoneVector.11", %"class.v8::internal::ZoneVector.11"* %2, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.v8::internal::compiler::BasicBlock"** %40, %"class.v8::internal::compiler::BasicBlock"*** %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::ZoneVector.11", %"class.v8::internal::ZoneVector.11"* %4, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %42, align 8
  %44 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %10, align 8
  %45 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %38 to i64*
  %46 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %43, %44
  br i1 %46, label %126, label %47

47:                                               ; preds = %35
  %48 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %43 to i64
  %49 = inttoptr i64 %36 to i64*
  %50 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %44, i64 -1
  %51 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %50 to i64
  %52 = sub i64 %51, %48
  %53 = lshr i64 %52, 3
  %54 = add nuw nsw i64 %53, 1
  %55 = and i64 %54, 7
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %71, label %57

57:                                               ; preds = %47, %57
  %58 = phi %"class.v8::internal::compiler::BasicBlock"** [ %65, %57 ], [ %37, %47 ]
  %59 = phi i64* [ %66, %57 ], [ %49, %47 ]
  %60 = phi %"class.v8::internal::compiler::BasicBlock"** [ %64, %57 ], [ %43, %47 ]
  %61 = phi i64 [ %67, %57 ], [ %55, %47 ]
  %62 = bitcast %"class.v8::internal::compiler::BasicBlock"** %60 to i64*
  %63 = load i64, i64* %62, align 8
  store i64 %63, i64* %59, align 8
  %64 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %60, i64 1
  %65 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %58, i64 1
  %66 = bitcast %"class.v8::internal::compiler::BasicBlock"** %65 to i64*
  %67 = add i64 %61, -1
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %57, !llvm.loop !80

69:                                               ; preds = %57
  %70 = bitcast %"class.v8::internal::compiler::BasicBlock"** %65 to i64*
  br label %71

71:                                               ; preds = %47, %69
  %72 = phi %"class.v8::internal::compiler::BasicBlock"** [ undef, %47 ], [ %65, %69 ]
  %73 = phi %"class.v8::internal::compiler::BasicBlock"** [ %37, %47 ], [ %65, %69 ]
  %74 = phi i64* [ %49, %47 ], [ %70, %69 ]
  %75 = phi %"class.v8::internal::compiler::BasicBlock"** [ %43, %47 ], [ %64, %69 ]
  %76 = icmp ult i64 %52, 56
  br i1 %76, label %122, label %77

77:                                               ; preds = %71, %77
  %78 = phi %"class.v8::internal::compiler::BasicBlock"** [ %119, %77 ], [ %73, %71 ]
  %79 = phi i64* [ %121, %77 ], [ %74, %71 ]
  %80 = phi %"class.v8::internal::compiler::BasicBlock"** [ %118, %77 ], [ %75, %71 ]
  %81 = bitcast %"class.v8::internal::compiler::BasicBlock"** %80 to i64*
  %82 = load i64, i64* %81, align 8
  store i64 %82, i64* %79, align 8
  %83 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %80, i64 1
  %84 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %78, i64 1
  %85 = bitcast %"class.v8::internal::compiler::BasicBlock"** %84 to i64*
  %86 = bitcast %"class.v8::internal::compiler::BasicBlock"** %83 to i64*
  %87 = load i64, i64* %86, align 8
  store i64 %87, i64* %85, align 8
  %88 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %80, i64 2
  %89 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %78, i64 2
  %90 = bitcast %"class.v8::internal::compiler::BasicBlock"** %89 to i64*
  %91 = bitcast %"class.v8::internal::compiler::BasicBlock"** %88 to i64*
  %92 = load i64, i64* %91, align 8
  store i64 %92, i64* %90, align 8
  %93 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %80, i64 3
  %94 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %78, i64 3
  %95 = bitcast %"class.v8::internal::compiler::BasicBlock"** %94 to i64*
  %96 = bitcast %"class.v8::internal::compiler::BasicBlock"** %93 to i64*
  %97 = load i64, i64* %96, align 8
  store i64 %97, i64* %95, align 8
  %98 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %80, i64 4
  %99 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %78, i64 4
  %100 = bitcast %"class.v8::internal::compiler::BasicBlock"** %99 to i64*
  %101 = bitcast %"class.v8::internal::compiler::BasicBlock"** %98 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %100, align 8
  %103 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %80, i64 5
  %104 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %78, i64 5
  %105 = bitcast %"class.v8::internal::compiler::BasicBlock"** %104 to i64*
  %106 = bitcast %"class.v8::internal::compiler::BasicBlock"** %103 to i64*
  %107 = load i64, i64* %106, align 8
  store i64 %107, i64* %105, align 8
  %108 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %80, i64 6
  %109 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %78, i64 6
  %110 = bitcast %"class.v8::internal::compiler::BasicBlock"** %109 to i64*
  %111 = bitcast %"class.v8::internal::compiler::BasicBlock"** %108 to i64*
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %110, align 8
  %113 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %80, i64 7
  %114 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %78, i64 7
  %115 = bitcast %"class.v8::internal::compiler::BasicBlock"** %114 to i64*
  %116 = bitcast %"class.v8::internal::compiler::BasicBlock"** %113 to i64*
  %117 = load i64, i64* %116, align 8
  store i64 %117, i64* %115, align 8
  %118 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %80, i64 8
  %119 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %78, i64 8
  %120 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %118, %44
  %121 = bitcast %"class.v8::internal::compiler::BasicBlock"** %119 to i64*
  br i1 %120, label %122, label %77

122:                                              ; preds = %77, %71
  %123 = phi %"class.v8::internal::compiler::BasicBlock"** [ %72, %71 ], [ %119, %77 ]
  %124 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %123 to i64
  %125 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %39, align 8
  br label %126

126:                                              ; preds = %35, %122
  %127 = phi %"class.v8::internal::compiler::BasicBlock"** [ %37, %35 ], [ %125, %122 ]
  %128 = phi i64 [ %36, %35 ], [ %124, %122 ]
  store i64 %128, i64* %45, align 8
  tail call void @_ZN2v88internal8compiler8Schedule26EliminateRedundantPhiNodesEv(%"class.v8::internal::compiler::Schedule"* %0)
  %129 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %127, null
  br i1 %129, label %134, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.v8::internal::ZoneVector.11", %"class.v8::internal::ZoneVector.11"* %2, i64 0, i32 0, i32 0, i32 1
  %132 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %127 to i64
  %133 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %131 to i64*
  store i64 %132, i64* %133, align 8
  br label %134

134:                                              ; preds = %19, %126, %130
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #13
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2v88internal8compiler8Schedule19EnsureSplitEdgeFormEPNS1_10BasicBlockE(%"class.v8::internal::compiler::Schedule"* nocapture, %"class.v8::internal::compiler::BasicBlock"* nocapture) local_unnamed_addr #8 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler8Schedule26EliminateRedundantPhiNodesEv(%"class.v8::internal::compiler::Schedule"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  br label %7

4:                                                ; preds = %128
  %5 = and i8 %129, 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %188

7:                                                ; preds = %1, %4
  %8 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %2, align 8
  %9 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %3, align 8
  %10 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %8, %9
  br i1 %10, label %188, label %11

11:                                               ; preds = %7, %128
  %12 = phi i8 [ %129, %128 ], [ 1, %7 ]
  %13 = phi %"class.v8::internal::compiler::BasicBlock"** [ %130, %128 ], [ %8, %7 ]
  %14 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %14, i64 0, i32 13, i32 0
  %16 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %14, i64 0, i32 13, i32 0, i32 0, i32 1
  %17 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector.12"* %15 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %14, i64 0, i32 11, i32 0
  %23 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %14, i64 0, i32 11, i32 0, i32 0, i32 1
  %24 = bitcast %"class.v8::internal::compiler::Node"*** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector"* %22 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq i64 %25, %27
  %29 = inttoptr i64 %27 to %"class.v8::internal::compiler::Node"**
  br i1 %28, label %128, label %30

30:                                               ; preds = %11
  %31 = lshr exact i64 %21, 3
  %32 = trunc i64 %31 to i32
  %33 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %14, i64 0, i32 11, i32 0, i32 0, i32 0
  %34 = icmp sgt i32 %32, 1
  br i1 %34, label %35, label %132

35:                                               ; preds = %30
  %36 = shl i64 %21, 29
  %37 = ashr exact i64 %36, 32
  br label %38

38:                                               ; preds = %35, %106
  %39 = phi i64 [ %107, %106 ], [ %27, %35 ]
  %40 = phi i64 [ %108, %106 ], [ %25, %35 ]
  %41 = phi %"class.v8::internal::compiler::Node"** [ %115, %106 ], [ %29, %35 ]
  %42 = phi i8 [ %110, %106 ], [ %12, %35 ]
  %43 = phi i64 [ %111, %106 ], [ 0, %35 ]
  %44 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %41, i64 %43
  %45 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %45, i64 0, i32 0
  %47 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %47, i64 0, i32 2
  %49 = load i16, i16* %48, align 8
  %50 = icmp eq i16 %49, 35
  br i1 %50, label %51, label %106

51:                                               ; preds = %38
  %52 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %45, i64 0, i32 3
  %53 = load i32, i32* %52, align 4
  %54 = and i32 %53, 251658240
  %55 = icmp eq i32 %54, 251658240
  %56 = ptrtoint %"class.v8::internal::compiler::Node"* %45 to i64
  %57 = add i64 %56, 32
  br i1 %55, label %62, label %58

58:                                               ; preds = %51
  %59 = inttoptr i64 %57 to %"class.v8::internal::compiler::Node"**
  %60 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %59, align 8
  %61 = inttoptr i64 %57 to %"class.v8::internal::compiler::Node"**
  br label %70

62:                                               ; preds = %51
  %63 = inttoptr i64 %57 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = add i64 %64, 16
  %66 = inttoptr i64 %65 to %"class.v8::internal::compiler::Node"**
  %67 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %66, align 8
  %68 = add i64 %64, 16
  %69 = inttoptr i64 %68 to %"class.v8::internal::compiler::Node"**
  br label %116

70:                                               ; preds = %70, %58
  %71 = phi i64 [ %79, %70 ], [ 1, %58 ]
  %72 = phi i8 [ %78, %70 ], [ 1, %58 ]
  %73 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %61, i64 %71
  %74 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %73, align 8
  %75 = icmp eq %"class.v8::internal::compiler::Node"* %74, %60
  %76 = icmp eq %"class.v8::internal::compiler::Node"* %74, %45
  %77 = or i1 %75, %76
  %78 = select i1 %77, i8 %72, i8 0
  %79 = add nuw nsw i64 %71, 1
  %80 = icmp slt i64 %79, %37
  %81 = and i1 %77, %80
  br i1 %81, label %70, label %82

82:                                               ; preds = %70, %116
  %83 = phi %"class.v8::internal::compiler::Node"* [ %67, %116 ], [ %60, %70 ]
  %84 = phi i8 [ %124, %116 ], [ %78, %70 ]
  %85 = and i8 %84, 1
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %106, label %87

87:                                               ; preds = %82
  tail call void @_ZN2v88internal8compiler4Node11ReplaceUsesEPS2_(%"class.v8::internal::compiler::Node"* %45, %"class.v8::internal::compiler::Node"* %83) #13
  tail call void @_ZN2v88internal8compiler4Node4KillEv(%"class.v8::internal::compiler::Node"* %45) #13
  %88 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %33, align 8
  %89 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %88, i64 %43
  %90 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %89, i64 1
  %91 = load i64, i64* %24, align 8
  %92 = ptrtoint %"class.v8::internal::compiler::Node"** %90 to i64
  %93 = sub i64 %91, %92
  %94 = ashr exact i64 %93, 3
  %95 = icmp eq i64 %93, 0
  %96 = ptrtoint %"class.v8::internal::compiler::Node"** %88 to i64
  br i1 %95, label %101, label %97

97:                                               ; preds = %87
  %98 = bitcast %"class.v8::internal::compiler::Node"** %89 to i8*
  %99 = bitcast %"class.v8::internal::compiler::Node"** %90 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %99, i64 %93, i1 false) #13
  %100 = load i64, i64* %26, align 8
  br label %101

101:                                              ; preds = %97, %87
  %102 = phi i64 [ %100, %97 ], [ %96, %87 ]
  %103 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %89, i64 %94
  store %"class.v8::internal::compiler::Node"** %103, %"class.v8::internal::compiler::Node"*** %23, align 8
  %104 = add i64 %43, -1
  %105 = ptrtoint %"class.v8::internal::compiler::Node"** %103 to i64
  br label %106

106:                                              ; preds = %101, %82, %38
  %107 = phi i64 [ %39, %38 ], [ %102, %101 ], [ %39, %82 ]
  %108 = phi i64 [ %40, %38 ], [ %105, %101 ], [ %40, %82 ]
  %109 = phi i64 [ %43, %38 ], [ %104, %101 ], [ %43, %82 ]
  %110 = phi i8 [ %42, %38 ], [ 0, %101 ], [ %42, %82 ]
  %111 = add i64 %109, 1
  %112 = sub i64 %108, %107
  %113 = ashr exact i64 %112, 3
  %114 = icmp ult i64 %111, %113
  %115 = inttoptr i64 %107 to %"class.v8::internal::compiler::Node"**
  br i1 %114, label %38, label %128

116:                                              ; preds = %116, %62
  %117 = phi i64 [ %125, %116 ], [ 1, %62 ]
  %118 = phi i8 [ %124, %116 ], [ 1, %62 ]
  %119 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %69, i64 %117
  %120 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %119, align 8
  %121 = icmp eq %"class.v8::internal::compiler::Node"* %120, %67
  %122 = icmp eq %"class.v8::internal::compiler::Node"* %120, %45
  %123 = or i1 %121, %122
  %124 = select i1 %123, i8 %118, i8 0
  %125 = add nuw nsw i64 %117, 1
  %126 = icmp slt i64 %125, %37
  %127 = and i1 %123, %126
  br i1 %127, label %116, label %82

128:                                              ; preds = %178, %106, %11
  %129 = phi i8 [ %12, %11 ], [ %110, %106 ], [ %182, %178 ]
  %130 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %13, i64 1
  %131 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %130, %9
  br i1 %131, label %4, label %11

132:                                              ; preds = %30, %178
  %133 = phi i64 [ %179, %178 ], [ %27, %30 ]
  %134 = phi i64 [ %180, %178 ], [ %25, %30 ]
  %135 = phi %"class.v8::internal::compiler::Node"** [ %187, %178 ], [ %29, %30 ]
  %136 = phi i8 [ %182, %178 ], [ %12, %30 ]
  %137 = phi i64 [ %183, %178 ], [ 0, %30 ]
  %138 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %135, i64 %137
  %139 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %138, align 8
  %140 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %139, i64 0, i32 0
  %141 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %140, align 8
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %141, i64 0, i32 2
  %143 = load i16, i16* %142, align 8
  %144 = icmp eq i16 %143, 35
  br i1 %144, label %145, label %178

145:                                              ; preds = %132
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %139, i64 0, i32 3
  %147 = load i32, i32* %146, align 4
  %148 = and i32 %147, 251658240
  %149 = icmp eq i32 %148, 251658240
  %150 = ptrtoint %"class.v8::internal::compiler::Node"* %139 to i64
  %151 = add i64 %150, 32
  br i1 %149, label %152, label %156

152:                                              ; preds = %145
  %153 = inttoptr i64 %151 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = add i64 %154, 16
  br label %156

156:                                              ; preds = %152, %145
  %157 = phi i64 [ %155, %152 ], [ %151, %145 ]
  %158 = inttoptr i64 %157 to %"class.v8::internal::compiler::Node"**
  %159 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %158, align 8
  tail call void @_ZN2v88internal8compiler4Node11ReplaceUsesEPS2_(%"class.v8::internal::compiler::Node"* %139, %"class.v8::internal::compiler::Node"* %159) #13
  tail call void @_ZN2v88internal8compiler4Node4KillEv(%"class.v8::internal::compiler::Node"* %139) #13
  %160 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %33, align 8
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %160, i64 %137
  %162 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %161, i64 1
  %163 = load i64, i64* %24, align 8
  %164 = ptrtoint %"class.v8::internal::compiler::Node"** %162 to i64
  %165 = sub i64 %163, %164
  %166 = ashr exact i64 %165, 3
  %167 = icmp eq i64 %165, 0
  %168 = ptrtoint %"class.v8::internal::compiler::Node"** %160 to i64
  br i1 %167, label %173, label %169

169:                                              ; preds = %156
  %170 = bitcast %"class.v8::internal::compiler::Node"** %161 to i8*
  %171 = bitcast %"class.v8::internal::compiler::Node"** %162 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %170, i8* align 8 %171, i64 %165, i1 false) #13
  %172 = load i64, i64* %26, align 8
  br label %173

173:                                              ; preds = %156, %169
  %174 = phi i64 [ %168, %156 ], [ %172, %169 ]
  %175 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %161, i64 %166
  store %"class.v8::internal::compiler::Node"** %175, %"class.v8::internal::compiler::Node"*** %23, align 8
  %176 = add i64 %137, -1
  %177 = ptrtoint %"class.v8::internal::compiler::Node"** %175 to i64
  br label %178

178:                                              ; preds = %173, %132
  %179 = phi i64 [ %133, %132 ], [ %174, %173 ]
  %180 = phi i64 [ %134, %132 ], [ %177, %173 ]
  %181 = phi i64 [ %137, %132 ], [ %176, %173 ]
  %182 = phi i8 [ %136, %132 ], [ 0, %173 ]
  %183 = add i64 %181, 1
  %184 = sub i64 %180, %179
  %185 = ashr exact i64 %184, 3
  %186 = icmp ult i64 %183, %185
  %187 = inttoptr i64 %179 to %"class.v8::internal::compiler::Node"**
  br i1 %186, label %132, label %128

188:                                              ; preds = %7, %4
  ret void
}

declare void @_ZN2v88internal8compiler4Node11ReplaceUsesEPS2_(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #7

declare void @_ZN2v88internal8compiler4Node4KillEv(%"class.v8::internal::compiler::Node"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler8Schedule8MovePhisEPNS1_10BasicBlockES4_(%"class.v8::internal::compiler::Schedule"* nocapture readonly, %"class.v8::internal::compiler::BasicBlock"* nocapture, %"class.v8::internal::compiler::BasicBlock"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 11, i32 0
  %5 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 11, i32 0, i32 0, i32 1
  %6 = bitcast %"class.v8::internal::compiler::Node"*** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %7, %9
  br i1 %10, label %22, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %2, i64 0, i32 11, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %2, i64 0, i32 11, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %2, i64 0, i32 11, i32 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.v8::internal::compiler::Node"*** %14 to i64*
  %17 = bitcast %"class.std::__1::vector"* %13 to i64*
  %18 = bitcast %"class.v8::internal::compiler::Node"*** %15 to i64*
  %19 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %2, i64 0, i32 11, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %13, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %23

22:                                               ; preds = %290, %3
  ret void

23:                                               ; preds = %11, %290
  %24 = phi i64 [ %9, %11 ], [ %291, %290 ]
  %25 = phi i64 [ %7, %11 ], [ %292, %290 ]
  %26 = phi i64 [ 0, %11 ], [ %293, %290 ]
  %27 = inttoptr i64 %24 to %"class.v8::internal::compiler::Node"**
  %28 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %27, i64 %26
  %29 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %29, i64 0, i32 0
  %31 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %31, i64 0, i32 2
  %33 = load i16, i16* %32, align 8
  %34 = icmp eq i16 %33, 35
  br i1 %34, label %35, label %288

35:                                               ; preds = %23
  %36 = ptrtoint %"class.v8::internal::compiler::Node"* %29 to i64
  %37 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %14, align 8
  %38 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %15, align 8
  %39 = icmp eq %"class.v8::internal::compiler::Node"** %37, %38
  %40 = ptrtoint %"class.v8::internal::compiler::Node"** %38 to i64
  br i1 %39, label %45, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.v8::internal::compiler::Node"** %37 to i64*
  store i64 %36, i64* %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %37, i64 1
  %44 = ptrtoint %"class.v8::internal::compiler::Node"** %43 to i64
  store i64 %44, i64* %16, align 8
  br label %266

45:                                               ; preds = %35
  %46 = ptrtoint %"class.v8::internal::compiler::Node"** %37 to i64
  %47 = load i64, i64* %17, align 8
  %48 = sub i64 %46, %47
  %49 = ashr exact i64 %48, 3
  %50 = add nsw i64 %49, 1
  %51 = icmp ugt i64 %50, 268435455
  br i1 %51, label %52, label %54

52:                                               ; preds = %45
  %53 = bitcast %"class.std::__1::vector"* %13 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %53) #14
  unreachable

54:                                               ; preds = %45
  %55 = sub i64 %40, %47
  %56 = ashr exact i64 %55, 3
  %57 = icmp ult i64 %56, 134217727
  br i1 %57, label %58, label %63

58:                                               ; preds = %54
  %59 = ashr exact i64 %55, 2
  %60 = icmp ult i64 %59, %50
  %61 = select i1 %60, i64 %50, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %80, label %63

63:                                               ; preds = %58, %54
  %64 = phi i64 [ %61, %58 ], [ 268435455, %54 ]
  %65 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %19, align 8
  %66 = shl i64 %64, 3
  %67 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %65, i64 0, i32 2
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %65, i64 0, i32 3
  %70 = load i64, i64* %69, align 8
  %71 = sub i64 %70, %68
  %72 = icmp ugt i64 %66, %71
  br i1 %72, label %73, label %75, !prof !2

73:                                               ; preds = %63
  %74 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %65, i64 %66) #13
  br label %77

75:                                               ; preds = %63
  %76 = add i64 %68, %66
  store i64 %76, i64* %67, align 8
  br label %77

77:                                               ; preds = %75, %73
  %78 = phi i64 [ %74, %73 ], [ %68, %75 ]
  %79 = inttoptr i64 %78 to %"class.v8::internal::compiler::Node"**
  br label %80

80:                                               ; preds = %77, %58
  %81 = phi i64 [ %64, %77 ], [ 0, %58 ]
  %82 = phi %"class.v8::internal::compiler::Node"** [ %79, %77 ], [ null, %58 ]
  %83 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %82, i64 %49
  %84 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %82, i64 %81
  %85 = ptrtoint %"class.v8::internal::compiler::Node"** %84 to i64
  %86 = bitcast %"class.v8::internal::compiler::Node"** %83 to i64*
  store i64 %36, i64* %86, align 8
  %87 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %83, i64 1
  %88 = ptrtoint %"class.v8::internal::compiler::Node"** %87 to i64
  %89 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %20, align 8
  %90 = ptrtoint %"class.v8::internal::compiler::Node"** %89 to i64
  %91 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %14, align 8
  %92 = icmp eq %"class.v8::internal::compiler::Node"** %91, %89
  br i1 %92, label %263, label %93

93:                                               ; preds = %80
  %94 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %91, i64 -1
  %95 = ptrtoint %"class.v8::internal::compiler::Node"** %94 to i64
  %96 = sub i64 %95, %90
  %97 = lshr i64 %96, 3
  %98 = add nuw nsw i64 %97, 1
  %99 = icmp ult i64 %98, 4
  br i1 %99, label %193, label %100

100:                                              ; preds = %93
  %101 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %82, i64 -1
  %102 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %91, i64 -1
  %103 = ptrtoint %"class.v8::internal::compiler::Node"** %102 to i64
  %104 = sub i64 %103, %90
  %105 = lshr i64 %104, 3
  %106 = sub nsw i64 %49, %105
  %107 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %101, i64 %106
  %108 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %91, i64 -1
  %109 = sub nsw i64 0, %105
  %110 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %108, i64 %109
  %111 = icmp ult %"class.v8::internal::compiler::Node"** %107, %91
  %112 = icmp ult %"class.v8::internal::compiler::Node"** %110, %83
  %113 = and i1 %111, %112
  br i1 %113, label %193, label %114

114:                                              ; preds = %100
  %115 = and i64 %98, 4611686018427387900
  %116 = sub nsw i64 0, %115
  %117 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %83, i64 %116
  %118 = sub nsw i64 0, %115
  %119 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %91, i64 %118
  %120 = add nsw i64 %115, -4
  %121 = lshr exact i64 %120, 2
  %122 = add nuw nsw i64 %121, 1
  %123 = and i64 %122, 1
  %124 = icmp eq i64 %120, 0
  br i1 %124, label %169, label %125

125:                                              ; preds = %114
  %126 = sub nuw nsw i64 %122, %123
  %127 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %83, i64 -1
  %128 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %91, i64 -1
  %129 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %83, i64 -1
  %130 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %91, i64 -1
  br label %131

131:                                              ; preds = %131, %125
  %132 = phi i64 [ 0, %125 ], [ %166, %131 ]
  %133 = phi i64 [ %126, %125 ], [ %167, %131 ]
  %134 = sub i64 0, %132
  %135 = sub i64 0, %132
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %127, i64 %134
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %128, i64 %135
  %138 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %137, i64 -1
  %139 = bitcast %"class.v8::internal::compiler::Node"** %138 to <2 x i64>*
  %140 = load <2 x i64>, <2 x i64>* %139, align 8, !alias.scope !81
  %141 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %137, i64 -2
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %141, i64 -1
  %143 = bitcast %"class.v8::internal::compiler::Node"** %142 to <2 x i64>*
  %144 = load <2 x i64>, <2 x i64>* %143, align 8, !alias.scope !81
  %145 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %136, i64 -1
  %146 = bitcast %"class.v8::internal::compiler::Node"** %145 to <2 x i64>*
  store <2 x i64> %140, <2 x i64>* %146, align 8, !alias.scope !84, !noalias !81
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %136, i64 -2
  %148 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %147, i64 -1
  %149 = bitcast %"class.v8::internal::compiler::Node"** %148 to <2 x i64>*
  store <2 x i64> %144, <2 x i64>* %149, align 8, !alias.scope !84, !noalias !81
  %150 = sub nuw nsw i64 -4, %132
  %151 = sub nuw nsw i64 -4, %132
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %129, i64 %150
  %153 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %130, i64 %151
  %154 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %153, i64 -1
  %155 = bitcast %"class.v8::internal::compiler::Node"** %154 to <2 x i64>*
  %156 = load <2 x i64>, <2 x i64>* %155, align 8, !alias.scope !81
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %153, i64 -2
  %158 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %157, i64 -1
  %159 = bitcast %"class.v8::internal::compiler::Node"** %158 to <2 x i64>*
  %160 = load <2 x i64>, <2 x i64>* %159, align 8, !alias.scope !81
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %152, i64 -1
  %162 = bitcast %"class.v8::internal::compiler::Node"** %161 to <2 x i64>*
  store <2 x i64> %156, <2 x i64>* %162, align 8, !alias.scope !84, !noalias !81
  %163 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %152, i64 -2
  %164 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, i64 -1
  %165 = bitcast %"class.v8::internal::compiler::Node"** %164 to <2 x i64>*
  store <2 x i64> %160, <2 x i64>* %165, align 8, !alias.scope !84, !noalias !81
  %166 = add i64 %132, 8
  %167 = add i64 %133, -2
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %131, !llvm.loop !86

169:                                              ; preds = %131, %114
  %170 = phi i64 [ 0, %114 ], [ %166, %131 ]
  %171 = icmp eq i64 %123, 0
  br i1 %171, label %191, label %172

172:                                              ; preds = %169
  %173 = sub i64 0, %170
  %174 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %83, i64 -1
  %175 = sub i64 0, %170
  %176 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %91, i64 -1
  %177 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %174, i64 %173
  %178 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %176, i64 %175
  %179 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %178, i64 -1
  %180 = bitcast %"class.v8::internal::compiler::Node"** %179 to <2 x i64>*
  %181 = load <2 x i64>, <2 x i64>* %180, align 8, !alias.scope !81
  %182 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %178, i64 -2
  %183 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %182, i64 -1
  %184 = bitcast %"class.v8::internal::compiler::Node"** %183 to <2 x i64>*
  %185 = load <2 x i64>, <2 x i64>* %184, align 8, !alias.scope !81
  %186 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %177, i64 -1
  %187 = bitcast %"class.v8::internal::compiler::Node"** %186 to <2 x i64>*
  store <2 x i64> %181, <2 x i64>* %187, align 8, !alias.scope !84, !noalias !81
  %188 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %177, i64 -2
  %189 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %188, i64 -1
  %190 = bitcast %"class.v8::internal::compiler::Node"** %189 to <2 x i64>*
  store <2 x i64> %185, <2 x i64>* %190, align 8, !alias.scope !84, !noalias !81
  br label %191

191:                                              ; preds = %169, %172
  %192 = icmp eq i64 %98, %115
  br i1 %192, label %263, label %193

193:                                              ; preds = %191, %100, %93
  %194 = phi %"class.v8::internal::compiler::Node"** [ %83, %100 ], [ %83, %93 ], [ %117, %191 ]
  %195 = phi %"class.v8::internal::compiler::Node"** [ %91, %100 ], [ %91, %93 ], [ %119, %191 ]
  %196 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %195, i64 -1
  %197 = ptrtoint %"class.v8::internal::compiler::Node"** %196 to i64
  %198 = sub i64 %197, %90
  %199 = lshr i64 %198, 3
  %200 = add nuw nsw i64 %199, 1
  %201 = and i64 %200, 7
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %214, label %203

203:                                              ; preds = %193, %203
  %204 = phi %"class.v8::internal::compiler::Node"** [ %207, %203 ], [ %194, %193 ]
  %205 = phi %"class.v8::internal::compiler::Node"** [ %208, %203 ], [ %195, %193 ]
  %206 = phi i64 [ %212, %203 ], [ %201, %193 ]
  %207 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %204, i64 -1
  %208 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %205, i64 -1
  %209 = bitcast %"class.v8::internal::compiler::Node"** %208 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = bitcast %"class.v8::internal::compiler::Node"** %207 to i64*
  store i64 %210, i64* %211, align 8
  %212 = add i64 %206, -1
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %214, label %203, !llvm.loop !87

214:                                              ; preds = %203, %193
  %215 = phi %"class.v8::internal::compiler::Node"** [ undef, %193 ], [ %207, %203 ]
  %216 = phi %"class.v8::internal::compiler::Node"** [ %194, %193 ], [ %207, %203 ]
  %217 = phi %"class.v8::internal::compiler::Node"** [ %195, %193 ], [ %208, %203 ]
  %218 = icmp ult i64 %198, 56
  br i1 %218, label %263, label %219

219:                                              ; preds = %214, %219
  %220 = phi %"class.v8::internal::compiler::Node"** [ %257, %219 ], [ %216, %214 ]
  %221 = phi %"class.v8::internal::compiler::Node"** [ %258, %219 ], [ %217, %214 ]
  %222 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %220, i64 -1
  %223 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %221, i64 -1
  %224 = bitcast %"class.v8::internal::compiler::Node"** %223 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = bitcast %"class.v8::internal::compiler::Node"** %222 to i64*
  store i64 %225, i64* %226, align 8
  %227 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %220, i64 -2
  %228 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %221, i64 -2
  %229 = bitcast %"class.v8::internal::compiler::Node"** %228 to i64*
  %230 = load i64, i64* %229, align 8
  %231 = bitcast %"class.v8::internal::compiler::Node"** %227 to i64*
  store i64 %230, i64* %231, align 8
  %232 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %220, i64 -3
  %233 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %221, i64 -3
  %234 = bitcast %"class.v8::internal::compiler::Node"** %233 to i64*
  %235 = load i64, i64* %234, align 8
  %236 = bitcast %"class.v8::internal::compiler::Node"** %232 to i64*
  store i64 %235, i64* %236, align 8
  %237 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %220, i64 -4
  %238 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %221, i64 -4
  %239 = bitcast %"class.v8::internal::compiler::Node"** %238 to i64*
  %240 = load i64, i64* %239, align 8
  %241 = bitcast %"class.v8::internal::compiler::Node"** %237 to i64*
  store i64 %240, i64* %241, align 8
  %242 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %220, i64 -5
  %243 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %221, i64 -5
  %244 = bitcast %"class.v8::internal::compiler::Node"** %243 to i64*
  %245 = load i64, i64* %244, align 8
  %246 = bitcast %"class.v8::internal::compiler::Node"** %242 to i64*
  store i64 %245, i64* %246, align 8
  %247 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %220, i64 -6
  %248 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %221, i64 -6
  %249 = bitcast %"class.v8::internal::compiler::Node"** %248 to i64*
  %250 = load i64, i64* %249, align 8
  %251 = bitcast %"class.v8::internal::compiler::Node"** %247 to i64*
  store i64 %250, i64* %251, align 8
  %252 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %220, i64 -7
  %253 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %221, i64 -7
  %254 = bitcast %"class.v8::internal::compiler::Node"** %253 to i64*
  %255 = load i64, i64* %254, align 8
  %256 = bitcast %"class.v8::internal::compiler::Node"** %252 to i64*
  store i64 %255, i64* %256, align 8
  %257 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %220, i64 -8
  %258 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %221, i64 -8
  %259 = bitcast %"class.v8::internal::compiler::Node"** %258 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = bitcast %"class.v8::internal::compiler::Node"** %257 to i64*
  store i64 %260, i64* %261, align 8
  %262 = icmp eq %"class.v8::internal::compiler::Node"** %258, %89
  br i1 %262, label %263, label %219, !llvm.loop !88

263:                                              ; preds = %214, %219, %191, %80
  %264 = phi %"class.v8::internal::compiler::Node"** [ %83, %80 ], [ %117, %191 ], [ %215, %214 ], [ %257, %219 ]
  %265 = ptrtoint %"class.v8::internal::compiler::Node"** %264 to i64
  store i64 %265, i64* %17, align 8
  store i64 %88, i64* %16, align 8
  store i64 %85, i64* %18, align 8
  br label %266

266:                                              ; preds = %41, %263
  %267 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %12, align 8
  %268 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %267, i64 %26
  %269 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %268, i64 1
  %270 = load i64, i64* %6, align 8
  %271 = ptrtoint %"class.v8::internal::compiler::Node"** %269 to i64
  %272 = sub i64 %270, %271
  %273 = ashr exact i64 %272, 3
  %274 = icmp eq i64 %272, 0
  br i1 %274, label %278, label %275

275:                                              ; preds = %266
  %276 = bitcast %"class.v8::internal::compiler::Node"** %268 to i8*
  %277 = bitcast %"class.v8::internal::compiler::Node"** %269 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %276, i8* align 8 %277, i64 %272, i1 false) #13
  br label %278

278:                                              ; preds = %266, %275
  %279 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %268, i64 %273
  store %"class.v8::internal::compiler::Node"** %279, %"class.v8::internal::compiler::Node"*** %5, align 8
  %280 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %29, i64 0, i32 3
  %281 = load i32, i32* %280, align 4
  %282 = and i32 %281, 16777215
  %283 = zext i32 %282 to i64
  %284 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %21, align 8
  %285 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %284, i64 %283
  store %"class.v8::internal::compiler::BasicBlock"* %2, %"class.v8::internal::compiler::BasicBlock"** %285, align 8
  %286 = load i64, i64* %6, align 8
  %287 = load i64, i64* %8, align 8
  br label %290

288:                                              ; preds = %23
  %289 = add nuw i64 %26, 1
  br label %290

290:                                              ; preds = %288, %278
  %291 = phi i64 [ %287, %278 ], [ %24, %288 ]
  %292 = phi i64 [ %286, %278 ], [ %25, %288 ]
  %293 = phi i64 [ %26, %278 ], [ %289, %288 ]
  %294 = sub i64 %292, %291
  %295 = ashr exact i64 %294, 3
  %296 = icmp ult i64 %293, %295
  br i1 %296, label %23, label %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler8Schedule21PropagateDeferredMarkEv(%"class.v8::internal::compiler::Schedule"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  br label %7

4:                                                ; preds = %84
  %5 = and i8 %85, 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %88

7:                                                ; preds = %1, %4
  %8 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %2, align 8
  %9 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %3, align 8
  %10 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %8, %9
  br i1 %10, label %88, label %11

11:                                               ; preds = %7, %84
  %12 = phi i8 [ %85, %84 ], [ 1, %7 ]
  %13 = phi %"class.v8::internal::compiler::BasicBlock"** [ %86, %84 ], [ %8, %7 ]
  %14 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %14, i64 0, i32 2
  %16 = load i8, i8* %15, align 8, !range !45
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %84

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %14, i64 0, i32 13, i32 0
  %20 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %14, i64 0, i32 13, i32 0, i32 0, i32 1
  %21 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.12"* %19 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = icmp ne i64 %22, %24
  %26 = zext i1 %25 to i8
  %27 = inttoptr i64 %24 to %"class.v8::internal::compiler::BasicBlock"**
  %28 = inttoptr i64 %22 to %"class.v8::internal::compiler::BasicBlock"**
  %29 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %28, %27
  br i1 %29, label %59, label %30

30:                                               ; preds = %18
  %31 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %14, i64 0, i32 1
  %32 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %28, i64 -1
  %33 = bitcast %"class.v8::internal::compiler::BasicBlock"** %32 to i8*
  %34 = sub i64 0, %24
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = ptrtoint i8* %35 to i64
  %37 = and i64 %36, 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %54

39:                                               ; preds = %30
  %40 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %27, align 8
  %41 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %40, i64 0, i32 2
  %42 = load i8, i8* %41, align 8, !range !45
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %51

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %40, i64 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = load i32, i32* %31, align 4
  %48 = icmp sge i32 %46, %47
  %49 = and i1 %25, %48
  %50 = zext i1 %49 to i8
  br label %51

51:                                               ; preds = %44, %39
  %52 = phi i8 [ %26, %39 ], [ %50, %44 ]
  %53 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %27, i64 1
  br label %54

54:                                               ; preds = %51, %30
  %55 = phi i8 [ %52, %51 ], [ undef, %30 ]
  %56 = phi i8 [ %52, %51 ], [ %26, %30 ]
  %57 = phi %"class.v8::internal::compiler::BasicBlock"** [ %53, %51 ], [ %27, %30 ]
  %58 = icmp ult i8* %35, inttoptr (i64 8 to i8*)
  br i1 %58, label %59, label %63

59:                                               ; preds = %54, %95, %18
  %60 = phi i8 [ %26, %18 ], [ %55, %54 ], [ %96, %95 ]
  %61 = and i8 %60, 1
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %84, label %83

63:                                               ; preds = %54, %95
  %64 = phi i8 [ %96, %95 ], [ %56, %54 ]
  %65 = phi %"class.v8::internal::compiler::BasicBlock"** [ %97, %95 ], [ %57, %54 ]
  %66 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %66, i64 0, i32 2
  %68 = load i8, i8* %67, align 8, !range !45
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %70, label %76

70:                                               ; preds = %63
  %71 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %66, i64 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = load i32, i32* %31, align 4
  %74 = icmp slt i32 %72, %73
  %75 = select i1 %74, i8 0, i8 %64
  br label %76

76:                                               ; preds = %63, %70
  %77 = phi i8 [ %64, %63 ], [ %75, %70 ]
  %78 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %65, i64 1
  %79 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %78, align 8
  %80 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %79, i64 0, i32 2
  %81 = load i8, i8* %80, align 8, !range !45
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %89, label %95

83:                                               ; preds = %59
  store i8 1, i8* %15, align 8
  br label %84

84:                                               ; preds = %11, %83, %59
  %85 = phi i8 [ %12, %11 ], [ 0, %83 ], [ %12, %59 ]
  %86 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %13, i64 1
  %87 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %86, %9
  br i1 %87, label %4, label %11

88:                                               ; preds = %7, %4
  ret void

89:                                               ; preds = %76
  %90 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %79, i64 0, i32 1
  %91 = load i32, i32* %90, align 4
  %92 = load i32, i32* %31, align 4
  %93 = icmp slt i32 %91, %92
  %94 = select i1 %93, i8 0, i8 %77
  br label %95

95:                                               ; preds = %89, %76
  %96 = phi i8 [ %77, %76 ], [ %94, %89 ]
  %97 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %65, i64 2
  %98 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %97, %28
  br i1 %98, label %59, label %63
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_8ScheduleE(%"class.std::__1::basic_ostream"* returned dereferenceable(160), %"class.v8::internal::compiler::Schedule"* nocapture readonly dereferenceable(120)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %1, i64 0, i32 3, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %1, i64 0, i32 3, i32 0, i32 0, i32 1
  %5 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.12"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %6, %8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %1, i64 0, i32 1
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %1, i64 0, i32 3
  %12 = select i1 %9, %"class.v8::internal::ZoneVector.11"* %10, %"class.v8::internal::ZoneVector.11"* %11
  %13 = getelementptr inbounds %"class.v8::internal::ZoneVector.11", %"class.v8::internal::ZoneVector.11"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::ZoneVector.11", %"class.v8::internal::ZoneVector.11"* %12, i64 0, i32 0, i32 0, i32 1
  %16 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %15, align 8
  %17 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %14, %16
  br i1 %17, label %18, label %19

18:                                               ; preds = %183, %2
  ret %"class.std::__1::basic_ostream"* %0

19:                                               ; preds = %2, %183
  %20 = phi %"class.v8::internal::compiler::BasicBlock"** [ %184, %183 ], [ %14, %2 ]
  %21 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %20, align 8
  %22 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %21, null
  br i1 %22, label %183, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %21, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, -1
  br i1 %26, label %27, label %33

27:                                               ; preds = %23
  %28 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.21, i64 0, i64 0), i64 13) #13
  %29 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %21, i64 0, i32 14, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = trunc i64 %30 to i32
  %32 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %28, i32 %31) #13
  br label %37

33:                                               ; preds = %23
  %34 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.22, i64 0, i64 0), i64 11) #13
  %35 = load i32, i32* %24, align 4
  %36 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %34, i32 %35) #13
  br label %37

37:                                               ; preds = %33, %27
  %38 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %21, i64 0, i32 2
  %39 = load i8, i8* %38, align 8, !range !45
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  %42 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i64 0, i64 0), i64 11) #13
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %21, i64 0, i32 13, i32 0
  %45 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %21, i64 0, i32 13, i32 0, i32 0, i32 1
  %46 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.std::__1::vector.12"* %44 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %47, %49
  %51 = inttoptr i64 %49 to %"class.v8::internal::compiler::BasicBlock"**
  %52 = inttoptr i64 %47 to %"class.v8::internal::compiler::BasicBlock"**
  br i1 %50, label %58, label %53

53:                                               ; preds = %43
  %54 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i64 0, i64 0), i64 4) #13
  %55 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %21, i64 0, i32 13, i32 0, i32 0, i32 0
  %56 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %55, align 8
  %57 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %45, align 8
  br label %58

58:                                               ; preds = %43, %53
  %59 = phi %"class.v8::internal::compiler::BasicBlock"** [ %52, %43 ], [ %57, %53 ]
  %60 = phi %"class.v8::internal::compiler::BasicBlock"** [ %51, %43 ], [ %56, %53 ]
  %61 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %60, %59
  br i1 %61, label %80, label %62

62:                                               ; preds = %58
  %63 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %60, align 8
  %64 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %63, i64 0, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, -1
  br i1 %66, label %71, label %67

67:                                               ; preds = %62
  %68 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #13
  %69 = load i32, i32* %64, align 4
  %70 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %68, i32 %69) #13
  br label %77

71:                                               ; preds = %62
  %72 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i64 0, i64 0), i64 3) #13
  %73 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %63, i64 0, i32 14, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = trunc i64 %74 to i32
  %76 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %72, i32 %75) #13
  br label %77

77:                                               ; preds = %71, %67
  %78 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %60, i64 1
  %79 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %78, %59
  br i1 %79, label %80, label %87

80:                                               ; preds = %77, %104, %58
  %81 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i64 0, i64 0), i64 5) #13
  %82 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %21, i64 0, i32 11, i32 0, i32 0, i32 0
  %83 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, align 8
  %84 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %21, i64 0, i32 11, i32 0, i32 0, i32 1
  %85 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %84, align 8
  %86 = icmp eq %"class.v8::internal::compiler::Node"** %83, %85
  br i1 %86, label %107, label %111

87:                                               ; preds = %77, %104
  %88 = phi %"class.v8::internal::compiler::BasicBlock"** [ %105, %104 ], [ %78, %77 ]
  %89 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %88, align 8
  %90 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i64 2) #13
  %91 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %89, i64 0, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, -1
  br i1 %93, label %94, label %100

94:                                               ; preds = %87
  %95 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i64 0, i64 0), i64 3) #13
  %96 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %89, i64 0, i32 14, i32 0
  %97 = load i64, i64* %96, align 8
  %98 = trunc i64 %97 to i32
  %99 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %95, i32 %98) #13
  br label %104

100:                                              ; preds = %87
  %101 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #13
  %102 = load i32, i32* %91, align 4
  %103 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %101, i32 %102) #13
  br label %104

104:                                              ; preds = %100, %94
  %105 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %88, i64 1
  %106 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %105, %59
  br i1 %106, label %80, label %87, !llvm.loop !89

107:                                              ; preds = %123, %80
  %108 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %21, i64 0, i32 9
  %109 = load i32, i32* %108, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %183, label %127

111:                                              ; preds = %80, %123
  %112 = phi %"class.v8::internal::compiler::Node"** [ %125, %123 ], [ %83, %80 ]
  %113 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %112, align 8
  %114 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i64 0, i64 0), i64 2) #13
  %115 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_4NodeE(%"class.std::__1::basic_ostream"* dereferenceable(160) %114, %"class.v8::internal::compiler::Node"* dereferenceable(32) %113) #13
  %116 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %113, i64 0, i32 1, i32 0
  %117 = load i64, i64* %116, align 8
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %123, label %119

119:                                              ; preds = %111
  %120 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i64 0, i64 0), i64 3) #13
  %121 = load i64, i64* %116, align 8
  %122 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEENS1_4TypeE(%"class.std::__1::basic_ostream"* dereferenceable(160) %120, i64 %121) #13
  br label %123

123:                                              ; preds = %111, %119
  %124 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1) #13
  %125 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %112, i64 1
  %126 = icmp eq %"class.v8::internal::compiler::Node"** %125, %85
  br i1 %126, label %107, label %111

127:                                              ; preds = %107
  %128 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i64 0, i64 0), i64 2) #13
  %129 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %21, i64 0, i32 10
  %130 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %129, align 8
  %131 = icmp eq %"class.v8::internal::compiler::Node"* %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %127
  %133 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_4NodeE(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, %"class.v8::internal::compiler::Node"* nonnull dereferenceable(32) %130) #13
  br label %136

134:                                              ; preds = %127
  %135 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i64 0, i64 0), i64 4) #13
  br label %136

136:                                              ; preds = %134, %132
  %137 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.31, i64 0, i64 0), i64 4) #13
  %138 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %21, i64 0, i32 12, i32 0, i32 0, i32 0
  %139 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %138, align 8
  %140 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %21, i64 0, i32 12, i32 0, i32 0, i32 1
  %141 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %140, align 8
  %142 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %139, %141
  br i1 %142, label %161, label %143

143:                                              ; preds = %136
  %144 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %139, align 8
  %145 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %144, i64 0, i32 1
  %146 = load i32, i32* %145, align 4
  %147 = icmp eq i32 %146, -1
  br i1 %147, label %152, label %148

148:                                              ; preds = %143
  %149 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #13
  %150 = load i32, i32* %145, align 4
  %151 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %149, i32 %150) #13
  br label %158

152:                                              ; preds = %143
  %153 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i64 0, i64 0), i64 3) #13
  %154 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %144, i64 0, i32 14, i32 0
  %155 = load i64, i64* %154, align 8
  %156 = trunc i64 %155 to i32
  %157 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %153, i32 %156) #13
  br label %158

158:                                              ; preds = %152, %148
  %159 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %139, i64 1
  %160 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %159, %141
  br i1 %160, label %161, label %163

161:                                              ; preds = %158, %180, %136
  %162 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1) #13
  br label %183

163:                                              ; preds = %158, %180
  %164 = phi %"class.v8::internal::compiler::BasicBlock"** [ %181, %180 ], [ %159, %158 ]
  %165 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %164, align 8
  %166 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i64 2) #13
  %167 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %165, i64 0, i32 1
  %168 = load i32, i32* %167, align 4
  %169 = icmp eq i32 %168, -1
  br i1 %169, label %170, label %176

170:                                              ; preds = %163
  %171 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i64 0, i64 0), i64 3) #13
  %172 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %165, i64 0, i32 14, i32 0
  %173 = load i64, i64* %172, align 8
  %174 = trunc i64 %173 to i32
  %175 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %171, i32 %174) #13
  br label %180

176:                                              ; preds = %163
  %177 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #13
  %178 = load i32, i32* %167, align 4
  %179 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %177, i32 %178) #13
  br label %180

180:                                              ; preds = %176, %170
  %181 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %164, i64 1
  %182 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %181, %141
  br i1 %182, label %161, label %163, !llvm.loop !90

183:                                              ; preds = %161, %107, %19
  %184 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %20, i64 1
  %185 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %184, %16
  br i1 %185, label %18, label %19
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #7

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_4NodeE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.v8::internal::compiler::Node"* dereferenceable(32)) local_unnamed_addr #7

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEENS1_4TypeE(%"class.std::__1::basic_ostream"* dereferenceable(160), i64) local_unnamed_addr #7

declare void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"*, i8**, %struct._IO_FILE*) unnamed_addr #7

declare %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8OFStreamD1Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %5) #13
  %6 = bitcast %"class.v8::internal::OFStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #13
  %7 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %7) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8OFStreamD0Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %5) #13
  %6 = bitcast %"class.v8::internal::OFStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #13
  %7 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %7) #13
  %8 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal8OFStreamD1Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::OFStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 80
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %13) #13
  %14 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %14, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #13
  %15 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %15) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal8OFStreamD0Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::OFStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 80
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %13) #13
  %14 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %14, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #13
  %15 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %15) #13
  tail call void @_ZdlPv(i8* %8) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #0 align 2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StdoutStreamD0Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %5, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %6) #13
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %7) #13
  %8 = bitcast %"class.v8::internal::StdoutStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %8, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #13
  %9 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %9) #13
  %10 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal12StdoutStreamD1Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 88
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 80
  %13 = bitcast i8* %12 to %"class.v8::base::RecursiveMutex"**
  %14 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %13, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %14) #13
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 8
  %16 = bitcast i8* %15 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %16) #13
  %17 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %17, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #13
  %18 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %18) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal12StdoutStreamD0Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 88
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 80
  %13 = bitcast i8* %12 to %"class.v8::base::RecursiveMutex"**
  %14 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %13, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %14) #13
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 8
  %16 = bitcast i8* %15 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %16) #13
  %17 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %17, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #13
  %18 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %18) #13
  tail call void @_ZdlPv(i8* %8) #15
  ret void
}

declare void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"*) local_unnamed_addr #7

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #13
  %7 = load i8, i8* %6, align 8, !range !45
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #13
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #13
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #13
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #13
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #13
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = icmp ult i64 %17, 23
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = add nuw i64 %17, 16
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #15
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = or i64 %35, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %46

42:                                               ; preds = %30
  %43 = trunc i64 %17 to i8
  %44 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1
  br label %46

46:                                               ; preds = %33, %42
  %47 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %41, %33 ], [ %44, %42 ]
  %48 = phi i8* [ %36, %33 ], [ %31, %42 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %48, i8 %5, i64 %17, i1 false) #13
  %49 = getelementptr inbounds i8, i8* %48, i64 %17
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = select i1 %52, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #13
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %50, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %46
  %65 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %65) #15
  br label %66

66:                                               ; preds = %46, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #13
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #9

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #7

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #7

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #12

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPN2v88internal8compiler10BasicBlockENS2_13ZoneAllocatorIS5_EEE8__appendEm(%"class.std::__1::vector.12"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.v8::internal::compiler::BasicBlock"**
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %13, i64 %18
  %20 = bitcast %"class.v8::internal::compiler::BasicBlock"** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #13
  %26 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  ret void

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.12"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 268435455
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.12"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #14
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 134217727
  br i1 %41, label %42, label %47

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %65, label %47

47:                                               ; preds = %38, %42
  %48 = phi i64 [ %45, %42 ], [ 268435455, %38 ]
  %49 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %50 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %49, align 8
  %51 = shl i64 %48, 3
  %52 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %50, i64 0, i32 2
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %50, i64 0, i32 3
  %55 = load i64, i64* %54, align 8
  %56 = sub i64 %55, %53
  %57 = icmp ugt i64 %51, %56
  br i1 %57, label %58, label %60, !prof !2

58:                                               ; preds = %47
  %59 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %50, i64 %51) #13
  br label %62

60:                                               ; preds = %47
  %61 = add i64 %53, %51
  store i64 %61, i64* %52, align 8
  br label %62

62:                                               ; preds = %60, %58
  %63 = phi i64 [ %59, %58 ], [ %53, %60 ]
  %64 = inttoptr i64 %63 to %"class.v8::internal::compiler::BasicBlock"**
  br label %65

65:                                               ; preds = %62, %42
  %66 = phi i64 [ %48, %62 ], [ 0, %42 ]
  %67 = phi %"class.v8::internal::compiler::BasicBlock"** [ %64, %62 ], [ null, %42 ]
  %68 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %67, i64 %33
  %69 = bitcast %"class.v8::internal::compiler::BasicBlock"** %68 to i8*
  %70 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %67, i64 %66
  %71 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %68, i64 %1
  %72 = shl i64 %1, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 %72, i1 false) #13
  %73 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %70 to i64
  %74 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %71 to i64
  %75 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0, i32 0
  %76 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %75, align 8
  %77 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %76 to i64
  %78 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %6, align 8
  %79 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %78, %76
  br i1 %79, label %249, label %80

80:                                               ; preds = %65
  %81 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %78, i64 -1
  %82 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %81 to i64
  %83 = sub i64 %82, %77
  %84 = lshr i64 %83, 3
  %85 = add nuw nsw i64 %84, 1
  %86 = icmp ult i64 %85, 4
  br i1 %86, label %179, label %87

87:                                               ; preds = %80
  %88 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %78, i64 -1
  %89 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %88 to i64
  %90 = sub i64 %89, %77
  %91 = lshr i64 %90, 3
  %92 = xor i64 %91, -1
  %93 = add nsw i64 %33, %92
  %94 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %67, i64 %93
  %95 = xor i64 %91, -1
  %96 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %78, i64 %95
  %97 = icmp ult %"class.v8::internal::compiler::BasicBlock"** %94, %78
  %98 = icmp ult %"class.v8::internal::compiler::BasicBlock"** %96, %68
  %99 = and i1 %97, %98
  br i1 %99, label %179, label %100

100:                                              ; preds = %87
  %101 = and i64 %85, 4611686018427387900
  %102 = sub nsw i64 0, %101
  %103 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %68, i64 %102
  %104 = sub nsw i64 0, %101
  %105 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %78, i64 %104
  %106 = add nsw i64 %101, -4
  %107 = lshr exact i64 %106, 2
  %108 = add nuw nsw i64 %107, 1
  %109 = and i64 %108, 1
  %110 = icmp eq i64 %106, 0
  br i1 %110, label %157, label %111

111:                                              ; preds = %100
  %112 = sub nuw nsw i64 %108, %109
  %113 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %68, i64 -1
  %114 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %78, i64 -1
  %115 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %68, i64 -1
  %116 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %78, i64 -1
  br label %117

117:                                              ; preds = %117, %111
  %118 = phi i64 [ 0, %111 ], [ %152, %117 ]
  %119 = phi i64 [ %112, %111 ], [ %153, %117 ]
  %120 = sub i64 0, %118
  %121 = sub i64 0, %118
  %122 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %113, i64 %120
  %123 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %114, i64 %121
  %124 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %123, i64 -1
  %125 = bitcast %"class.v8::internal::compiler::BasicBlock"** %124 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8, !alias.scope !91
  %127 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %123, i64 -2
  %128 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %127, i64 -1
  %129 = bitcast %"class.v8::internal::compiler::BasicBlock"** %128 to <2 x i64>*
  %130 = load <2 x i64>, <2 x i64>* %129, align 8, !alias.scope !91
  %131 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %122, i64 -1
  %132 = bitcast %"class.v8::internal::compiler::BasicBlock"** %131 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %132, align 8, !alias.scope !94, !noalias !91
  %133 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %122, i64 -2
  %134 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %133, i64 -1
  %135 = bitcast %"class.v8::internal::compiler::BasicBlock"** %134 to <2 x i64>*
  store <2 x i64> %130, <2 x i64>* %135, align 8, !alias.scope !94, !noalias !91
  %136 = sub nuw nsw i64 -4, %118
  %137 = sub nuw nsw i64 -4, %118
  %138 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %115, i64 %136
  %139 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %116, i64 %137
  %140 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %139, i64 -1
  %141 = bitcast %"class.v8::internal::compiler::BasicBlock"** %140 to <2 x i64>*
  %142 = load <2 x i64>, <2 x i64>* %141, align 8, !alias.scope !91
  %143 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %139, i64 -2
  %144 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %143, i64 -1
  %145 = bitcast %"class.v8::internal::compiler::BasicBlock"** %144 to <2 x i64>*
  %146 = load <2 x i64>, <2 x i64>* %145, align 8, !alias.scope !91
  %147 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %138, i64 -1
  %148 = bitcast %"class.v8::internal::compiler::BasicBlock"** %147 to <2 x i64>*
  store <2 x i64> %142, <2 x i64>* %148, align 8, !alias.scope !94, !noalias !91
  %149 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %138, i64 -2
  %150 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %149, i64 -1
  %151 = bitcast %"class.v8::internal::compiler::BasicBlock"** %150 to <2 x i64>*
  store <2 x i64> %146, <2 x i64>* %151, align 8, !alias.scope !94, !noalias !91
  %152 = add i64 %118, 8
  %153 = add i64 %119, -2
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %117, !llvm.loop !96

155:                                              ; preds = %117
  %156 = sub nuw nsw i64 -8, %118
  br label %157

157:                                              ; preds = %155, %100
  %158 = phi i64 [ 0, %100 ], [ %156, %155 ]
  %159 = icmp eq i64 %109, 0
  br i1 %159, label %177, label %160

160:                                              ; preds = %157
  %161 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %68, i64 -1
  %162 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %78, i64 -1
  %163 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %161, i64 %158
  %164 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %162, i64 %158
  %165 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %164, i64 -1
  %166 = bitcast %"class.v8::internal::compiler::BasicBlock"** %165 to <2 x i64>*
  %167 = load <2 x i64>, <2 x i64>* %166, align 8, !alias.scope !91
  %168 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %164, i64 -2
  %169 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %168, i64 -1
  %170 = bitcast %"class.v8::internal::compiler::BasicBlock"** %169 to <2 x i64>*
  %171 = load <2 x i64>, <2 x i64>* %170, align 8, !alias.scope !91
  %172 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %163, i64 -1
  %173 = bitcast %"class.v8::internal::compiler::BasicBlock"** %172 to <2 x i64>*
  store <2 x i64> %167, <2 x i64>* %173, align 8, !alias.scope !94, !noalias !91
  %174 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %163, i64 -2
  %175 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %174, i64 -1
  %176 = bitcast %"class.v8::internal::compiler::BasicBlock"** %175 to <2 x i64>*
  store <2 x i64> %171, <2 x i64>* %176, align 8, !alias.scope !94, !noalias !91
  br label %177

177:                                              ; preds = %157, %160
  %178 = icmp eq i64 %85, %101
  br i1 %178, label %249, label %179

179:                                              ; preds = %177, %87, %80
  %180 = phi %"class.v8::internal::compiler::BasicBlock"** [ %68, %87 ], [ %68, %80 ], [ %103, %177 ]
  %181 = phi %"class.v8::internal::compiler::BasicBlock"** [ %78, %87 ], [ %78, %80 ], [ %105, %177 ]
  %182 = getelementptr %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %181, i64 -1
  %183 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %182 to i64
  %184 = sub i64 %183, %77
  %185 = lshr i64 %184, 3
  %186 = add nuw nsw i64 %185, 1
  %187 = and i64 %186, 7
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %200, label %189

189:                                              ; preds = %179, %189
  %190 = phi %"class.v8::internal::compiler::BasicBlock"** [ %193, %189 ], [ %180, %179 ]
  %191 = phi %"class.v8::internal::compiler::BasicBlock"** [ %194, %189 ], [ %181, %179 ]
  %192 = phi i64 [ %198, %189 ], [ %187, %179 ]
  %193 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %190, i64 -1
  %194 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %191, i64 -1
  %195 = bitcast %"class.v8::internal::compiler::BasicBlock"** %194 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = bitcast %"class.v8::internal::compiler::BasicBlock"** %193 to i64*
  store i64 %196, i64* %197, align 8
  %198 = add i64 %192, -1
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %200, label %189, !llvm.loop !97

200:                                              ; preds = %189, %179
  %201 = phi %"class.v8::internal::compiler::BasicBlock"** [ undef, %179 ], [ %193, %189 ]
  %202 = phi %"class.v8::internal::compiler::BasicBlock"** [ %180, %179 ], [ %193, %189 ]
  %203 = phi %"class.v8::internal::compiler::BasicBlock"** [ %181, %179 ], [ %194, %189 ]
  %204 = icmp ult i64 %184, 56
  br i1 %204, label %249, label %205

205:                                              ; preds = %200, %205
  %206 = phi %"class.v8::internal::compiler::BasicBlock"** [ %243, %205 ], [ %202, %200 ]
  %207 = phi %"class.v8::internal::compiler::BasicBlock"** [ %244, %205 ], [ %203, %200 ]
  %208 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %206, i64 -1
  %209 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %207, i64 -1
  %210 = bitcast %"class.v8::internal::compiler::BasicBlock"** %209 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = bitcast %"class.v8::internal::compiler::BasicBlock"** %208 to i64*
  store i64 %211, i64* %212, align 8
  %213 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %206, i64 -2
  %214 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %207, i64 -2
  %215 = bitcast %"class.v8::internal::compiler::BasicBlock"** %214 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = bitcast %"class.v8::internal::compiler::BasicBlock"** %213 to i64*
  store i64 %216, i64* %217, align 8
  %218 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %206, i64 -3
  %219 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %207, i64 -3
  %220 = bitcast %"class.v8::internal::compiler::BasicBlock"** %219 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = bitcast %"class.v8::internal::compiler::BasicBlock"** %218 to i64*
  store i64 %221, i64* %222, align 8
  %223 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %206, i64 -4
  %224 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %207, i64 -4
  %225 = bitcast %"class.v8::internal::compiler::BasicBlock"** %224 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = bitcast %"class.v8::internal::compiler::BasicBlock"** %223 to i64*
  store i64 %226, i64* %227, align 8
  %228 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %206, i64 -5
  %229 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %207, i64 -5
  %230 = bitcast %"class.v8::internal::compiler::BasicBlock"** %229 to i64*
  %231 = load i64, i64* %230, align 8
  %232 = bitcast %"class.v8::internal::compiler::BasicBlock"** %228 to i64*
  store i64 %231, i64* %232, align 8
  %233 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %206, i64 -6
  %234 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %207, i64 -6
  %235 = bitcast %"class.v8::internal::compiler::BasicBlock"** %234 to i64*
  %236 = load i64, i64* %235, align 8
  %237 = bitcast %"class.v8::internal::compiler::BasicBlock"** %233 to i64*
  store i64 %236, i64* %237, align 8
  %238 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %206, i64 -7
  %239 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %207, i64 -7
  %240 = bitcast %"class.v8::internal::compiler::BasicBlock"** %239 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = bitcast %"class.v8::internal::compiler::BasicBlock"** %238 to i64*
  store i64 %241, i64* %242, align 8
  %243 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %206, i64 -8
  %244 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %207, i64 -8
  %245 = bitcast %"class.v8::internal::compiler::BasicBlock"** %244 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = bitcast %"class.v8::internal::compiler::BasicBlock"** %243 to i64*
  store i64 %246, i64* %247, align 8
  %248 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %244, %76
  br i1 %248, label %249, label %205, !llvm.loop !98

249:                                              ; preds = %200, %205, %177, %65
  %250 = phi %"class.v8::internal::compiler::BasicBlock"** [ %68, %65 ], [ %103, %177 ], [ %201, %200 ], [ %243, %205 ]
  %251 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %250 to i64
  store i64 %251, i64* %30, align 8
  store i64 %74, i64* %7, align 8
  store i64 %73, i64* %4, align 8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !9}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !9}
!19 = distinct !{!19, !11}
!20 = distinct !{!20, !9}
!21 = !{!22}
!22 = distinct !{!22, !23}
!23 = distinct !{!23, !"LVerDomain"}
!24 = !{!25}
!25 = distinct !{!25, !23}
!26 = distinct !{!26, !9}
!27 = distinct !{!27, !11}
!28 = distinct !{!28, !9}
!29 = !{!30}
!30 = distinct !{!30, !31}
!31 = distinct !{!31, !"LVerDomain"}
!32 = !{!33}
!33 = distinct !{!33, !31}
!34 = distinct !{!34, !9}
!35 = distinct !{!35, !11}
!36 = distinct !{!36, !9}
!37 = !{!38}
!38 = distinct !{!38, !39}
!39 = distinct !{!39, !"LVerDomain"}
!40 = !{!41}
!41 = distinct !{!41, !39}
!42 = distinct !{!42, !9}
!43 = distinct !{!43, !11}
!44 = distinct !{!44, !9}
!45 = !{i8 0, i8 2}
!46 = !{!47}
!47 = distinct !{!47, !48}
!48 = distinct !{!48, !"LVerDomain"}
!49 = !{!50}
!50 = distinct !{!50, !48}
!51 = distinct !{!51, !9}
!52 = distinct !{!52, !11}
!53 = distinct !{!53, !9}
!54 = !{!"branch_weights", i32 2000, i32 1}
!55 = !{!56}
!56 = distinct !{!56, !57}
!57 = distinct !{!57, !"LVerDomain"}
!58 = !{!59}
!59 = distinct !{!59, !57}
!60 = distinct !{!60, !9}
!61 = distinct !{!61, !11}
!62 = distinct !{!62, !9}
!63 = !{!64}
!64 = distinct !{!64, !65}
!65 = distinct !{!65, !"LVerDomain"}
!66 = !{!67}
!67 = distinct !{!67, !65}
!68 = distinct !{!68, !9}
!69 = distinct !{!69, !11}
!70 = distinct !{!70, !9}
!71 = !{!72}
!72 = distinct !{!72, !73}
!73 = distinct !{!73, !"LVerDomain"}
!74 = !{!75}
!75 = distinct !{!75, !73}
!76 = distinct !{!76, !9}
!77 = distinct !{!77, !11}
!78 = distinct !{!78, !9}
!79 = distinct !{!79, !11}
!80 = distinct !{!80, !11}
!81 = !{!82}
!82 = distinct !{!82, !83}
!83 = distinct !{!83, !"LVerDomain"}
!84 = !{!85}
!85 = distinct !{!85, !83}
!86 = distinct !{!86, !9}
!87 = distinct !{!87, !11}
!88 = distinct !{!88, !9}
!89 = distinct !{!89, !11}
!90 = distinct !{!90, !11}
!91 = !{!92}
!92 = distinct !{!92, !93}
!93 = distinct !{!93, !"LVerDomain"}
!94 = !{!95}
!95 = distinct !{!95, !93}
!96 = distinct !{!96, !9}
!97 = distinct !{!97, !11}
!98 = distinct !{!98, !9}
