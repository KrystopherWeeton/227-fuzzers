; ModuleID = '../../third_party/fontconfig/src/src/fcmatch.c'
source_filename = "../../third_party/fontconfig/src/src/fcmatch.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._FcMatcher = type { i32, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)*, i32, i32 }
%struct._FcValue = type { i32, %union.anon.0 }
%union.anon.0 = type { i8* }
%struct._FcConfig = type { %struct._FcStrSet*, %struct._FcStrSet*, %struct._FcStrSet*, %struct._FcStrSet*, %struct._FcStrSet*, [3 x %struct._FcPtrList*], i32, %struct._FcStrSet*, %struct._FcStrSet*, %struct._FcFontSet*, %struct._FcFontSet*, [2 x %struct._FcFontSet*], i64, i32, %struct._FcRef, %struct._FcExprPage*, i8*, %struct._FcStrSet*, %struct._FcPtrList* }
%struct._FcFontSet = type { i32, i32, %struct._FcPattern** }
%struct._FcRef = type { i32 }
%struct._FcExprPage = type { %struct._FcExprPage*, %struct._FcExpr*, [340 x %struct._FcExpr], [0 x %struct._FcExpr] }
%struct._FcExpr = type { i32, %union.anon }
%union.anon = type { %struct.anon }
%struct.anon = type { %struct._FcExpr*, %struct._FcExpr* }
%struct._FcStrSet = type { %struct._FcRef, i32, i32, i8**, i32 }
%struct._FcPtrList = type opaque
%struct._FcPattern = type { i32, i32, i64, %struct._FcRef }
%struct._FcCharSet = type { %struct._FcRef, i32, i64, i64 }
%struct._FcStrBuf = type { i8*, i32, i32, i32, i32, [128 x i8] }
%struct._FcPatternElt = type { i32, %struct._FcValueList* }
%struct._FcValueList = type { %struct._FcValueList*, %struct._FcValue, i32 }
%struct._FcObjectSet = type { i32, i32, i8** }
%struct._FcSortNode = type { %struct._FcPattern*, [26 x double] }
%struct._FcLangSet = type opaque

@.str = private unnamed_addr constant [5 x i8] c"    \00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"wght\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"wdth\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"opsz\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"%4s=%g\00", align 1
@FcDebugVal = external hidden local_unnamed_addr global i32, align 4
@.str.5 = private unnamed_addr constant [6 x i8] c"Sort \00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"lang\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"Font %d \00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"Score\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c" %g\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"family\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"style\00", align 1
@.str.13 = private unnamed_addr constant [32 x i8] c"Font %s:%s matches language %d\0A\00", align 1
@.str.14 = private unnamed_addr constant [12 x i8] c"First font \00", align 1
@_FcMatchers = internal constant [52 x %struct._FcMatcher] [%struct._FcMatcher { i32 0, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* null, i32 -1, i32 -1 }, %struct._FcMatcher { i32 1, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* @FcCompareFamily, i32 7, i32 10 }, %struct._FcMatcher { i32 2, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* null, i32 -1, i32 -1 }, %struct._FcMatcher { i32 3, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* @FcCompareString, i32 16, i32 16 }, %struct._FcMatcher { i32 4, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* null, i32 -1, i32 -1 }, %struct._FcMatcher { i32 5, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* null, i32 -1, i32 -1 }, %struct._FcMatcher { i32 6, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* null, i32 -1, i32 -1 }, %struct._FcMatcher { i32 7, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* @FcCompareNumber, i32 17, i32 17 }, %struct._FcMatcher { i32 8, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* @FcCompareRange, i32 18, i32 18 }, %struct._FcMatcher { i32 9, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* @FcCompareRange, i32 19, i32 19 }, %struct._FcMatcher { i32 10, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* @FcCompareSize, i32 14, i32 14 }, %struct._FcMatcher { i32 11, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* null, i32 -1, i32 -1 }, %struct._FcMatcher { i32 12, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* @FcCompareNumber, i32 15, i32 15 }, %struct._FcMatcher { i32 13, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* @FcCompareNumber, i32 13, i32 13 }, %struct._FcMatcher { i32 14, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* @FcCompareString, i32 5, i32 5 }, %struct._FcMatcher { i32 15, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* @FcCompareBool, i32 22, i32 22 }, %struct._FcMatcher { i32 16, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* null, i32 -1, i32 -1 }, %struct._FcMatcher { i32 17, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* null, i32 -1, i32 -1 }, %struct._FcMatcher { i32 18, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* null, i32 -1, i32 -1 }, %struct._FcMatcher { i32 19, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* null, i32 -1, i32 -1 }, %struct._FcMatcher { i32 20, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* null, i32 -1, i32 -1 }, %struct._FcMatcher { i32 21, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* @FcCompareFilename, i32 0, i32 0 }, %struct._FcMatcher { i32 22, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* null, i32 -1, i32 -1 }, %struct._FcMatcher { i32 23, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* @FcCompareString, i32 23, i32 23 }, %struct._FcMatcher { i32 24, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* @FcCompareBool, i32 24, i32 24 }, %struct._FcMatcher { i32 25, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* @FcCompareBool, i32 3, i32 3 }, %struct._FcMatcher { i32 26, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* null, i32 -1, i32 -1 }, %struct._FcMatcher { i32 27, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* null, i32 -1, i32 -1 }, %struct._FcMatcher { i32 28, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* null, i32 -1, i32 -1 }, %struct._FcMatcher { i32 29, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* null, i32 -1, i32 -1 }, %struct._FcMatcher { i32 30, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* null, i32 -1, i32 -1 }, %struct._FcMatcher { i32 31, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* null, i32 -1, i32 -1 }, %struct._FcMatcher { i32 32, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* null, i32 -1, i32 -1 }, %struct._FcMatcher { i32 33, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* @FcCompareCharSet, i32 6, i32 6 }, %struct._FcMatcher { i32 34, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* @FcCompareLang, i32 9, i32 9 }, %struct._FcMatcher { i32 35, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* @FcCompareNumber, i32 25, i32 25 }, %struct._FcMatcher { i32 36, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* null, i32 -1, i32 -1 }, %struct._FcMatcher { i32 37, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* @FcCompareString, i32 1, i32 1 }, %struct._FcMatcher { i32 38, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* null, i32 -1, i32 -1 }, %struct._FcMatcher { i32 39, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* null, i32 -1, i32 -1 }, %struct._FcMatcher { i32 40, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* @FcCompareBool, i32 21, i32 21 }, %struct._FcMatcher { i32 41, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* null, i32 -1, i32 -1 }, %struct._FcMatcher { i32 42, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* null, i32 -1, i32 -1 }, %struct._FcMatcher { i32 43, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* null, i32 -1, i32 -1 }, %struct._FcMatcher { i32 44, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* null, i32 -1, i32 -1 }, %struct._FcMatcher { i32 45, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* null, i32 -1, i32 -1 }, %struct._FcMatcher { i32 46, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* @FcComparePostScript, i32 8, i32 11 }, %struct._FcMatcher { i32 47, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* @FcCompareBool, i32 4, i32 4 }, %struct._FcMatcher { i32 48, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* @FcCompareBool, i32 12, i32 12 }, %struct._FcMatcher { i32 49, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* null, i32 -1, i32 -1 }, %struct._FcMatcher { i32 50, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* @FcCompareBool, i32 2, i32 2 }, %struct._FcMatcher { i32 51, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)* @FcCompareBool, i32 20, i32 20 }], align 16
@.str.15 = private unnamed_addr constant [3 x i8] c" -\00", align 1
@.str.16 = private unnamed_addr constant [9 x i8] c" %s: %g \00", align 1
@.str.17 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.18 = private unnamed_addr constant [7 x i8] c"Match \00", align 1
@.str.19 = private unnamed_addr constant [11 x i8] c"Best score\00", align 1
@.str.20 = private unnamed_addr constant [20 x i8] c"FC_DBG_MATCH_FILTER\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"charset\00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c"Add \00", align 1

@FcFontSetMatch = hidden alias %struct._FcPattern* (%struct._FcConfig*, %struct._FcFontSet**, i32, %struct._FcPattern*, i32*), %struct._FcPattern* (%struct._FcConfig*, %struct._FcFontSet**, i32, %struct._FcPattern*, i32*)* @IA__FcFontSetMatch
@FcFontMatch = hidden alias %struct._FcPattern* (%struct._FcConfig*, %struct._FcPattern*, i32*), %struct._FcPattern* (%struct._FcConfig*, %struct._FcPattern*, i32*)* @IA__FcFontMatch
@FcFontRenderPrepare = hidden alias %struct._FcPattern* (%struct._FcConfig*, %struct._FcPattern*, %struct._FcPattern*), %struct._FcPattern* (%struct._FcConfig*, %struct._FcPattern*, %struct._FcPattern*)* @IA__FcFontRenderPrepare
@FcFontSetSort = hidden alias %struct._FcFontSet* (%struct._FcConfig*, %struct._FcFontSet**, i32, %struct._FcPattern*, i32, %struct._FcCharSet**, i32*), %struct._FcFontSet* (%struct._FcConfig*, %struct._FcFontSet**, i32, %struct._FcPattern*, i32, %struct._FcCharSet**, i32*)* @IA__FcFontSetSort
@FcFontSort = hidden alias %struct._FcFontSet* (%struct._FcConfig*, %struct._FcPattern*, i32, %struct._FcCharSet**, i32*), %struct._FcFontSet* (%struct._FcConfig*, %struct._FcPattern*, i32, %struct._FcCharSet**, i32*)* @IA__FcFontSort
@FcFontSetSortDestroy = hidden alias void (%struct._FcFontSet*), void (%struct._FcFontSet*)* @IA__FcFontSetSortDestroy

; Function Attrs: nounwind ssp uwtable
define hidden %struct._FcPattern* @IA__FcFontRenderPrepare(%struct._FcConfig*, %struct._FcPattern*, %struct._FcPattern*) #0 {
  %4 = alloca %struct._FcValue, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct._FcStrBuf, align 8
  %8 = alloca i32, align 4
  %9 = alloca [128 x i8], align 16
  %10 = alloca i8*, align 8
  %11 = bitcast %struct._FcValue* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false)
  %12 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #12
  store i32 -1431655766, i32* %5, align 4
  %13 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #12
  store i32 0, i32* %6, align 4
  %14 = bitcast %struct._FcStrBuf* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %14) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 152, i1 false)
  %15 = call i32 @FcPatternObjectGetBool(%struct._FcPattern* %2, i32 50, i32 0, i32* nonnull %6) #12
  %16 = load i32, i32* %6, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %3
  call void @FcStrBufInit(%struct._FcStrBuf* nonnull %7, i8* null, i32 0) #12
  br label %19

19:                                               ; preds = %3, %18
  %20 = call %struct._FcPattern* @IA__FcPatternCreate() #12
  %21 = icmp eq %struct._FcPattern* %20, null
  br i1 %21, label %392, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %struct._FcPattern, %struct._FcPattern* %2, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %26, label %36

26:                                               ; preds = %22
  %27 = ptrtoint %struct._FcPattern* %2 to i64
  %28 = getelementptr inbounds %struct._FcPattern, %struct._FcPattern* %2, i64 0, i32 2
  %29 = bitcast i32* %8 to i8*
  %30 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %4, i64 0, i32 0
  %31 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %4, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds [128 x i8], [128 x i8]* %9, i64 0, i64 0
  %33 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %4, i64 0, i32 1
  %34 = bitcast %union.anon.0* %33 to double*
  %35 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %7, i64 0, i32 3
  br label %43

36:                                               ; preds = %336, %22
  %37 = getelementptr inbounds %struct._FcPattern, %struct._FcPattern* %1, i64 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = icmp sgt i32 %38, 0
  br i1 %39, label %40, label %371

40:                                               ; preds = %36
  %41 = ptrtoint %struct._FcPattern* %1 to i64
  %42 = getelementptr inbounds %struct._FcPattern, %struct._FcPattern* %1, i64 0, i32 2
  br label %341

43:                                               ; preds = %26, %336
  %44 = phi i64 [ 0, %26 ], [ %337, %336 ]
  %45 = load i64, i64* %28, align 8
  %46 = add nsw i64 %45, %27
  %47 = inttoptr i64 %46 to %struct._FcPatternElt*
  %48 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %47, i64 %44
  %49 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %48, i64 0, i32 0
  %50 = load i32, i32* %49, align 8
  switch i32 %50, label %236 [
    i32 2, label %336
    i32 4, label %336
    i32 6, label %336
    i32 1, label %51
    i32 3, label %51
    i32 5, label %51
  ]

51:                                               ; preds = %43, %43, %43
  %52 = add nuw nsw i32 %50, 1
  %53 = call %struct._FcPatternElt* @FcPatternObjectFindElt(%struct._FcPattern* %2, i32 %52) #12
  %54 = load i32, i32* %49, align 8
  %55 = add nsw i32 %54, 1
  %56 = call %struct._FcPatternElt* @FcPatternObjectFindElt(%struct._FcPattern* %1, i32 %55) #12
  %57 = icmp ne %struct._FcPatternElt* %53, null
  %58 = icmp ne %struct._FcPatternElt* %56, null
  %59 = and i1 %57, %58
  br i1 %59, label %60, label %197

60:                                               ; preds = %51
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #12
  store i32 1, i32* %8, align 4
  %61 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %56, i64 0, i32 0
  %62 = load i32, i32* %61, align 8
  switch i32 %62, label %63 [
    i32 2, label %65
    i32 4, label %65
    i32 6, label %65
  ]

63:                                               ; preds = %60
  %64 = icmp sgt i32 %62, 51
  br i1 %64, label %77, label %65

65:                                               ; preds = %63, %60, %60, %60
  %66 = phi i32 [ %62, %63 ], [ 34, %60 ], [ 34, %60 ], [ 34, %60 ]
  %67 = sext i32 %66 to i64
  %68 = lshr i64 3871578070775690, %67
  %69 = and i64 %68, 1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %77, label %71

71:                                               ; preds = %65
  %72 = lshr i64 632021556594805, %67
  %73 = and i64 %72, 1
  %74 = icmp eq i64 %73, 0
  %75 = getelementptr inbounds [52 x %struct._FcMatcher], [52 x %struct._FcMatcher]* @_FcMatchers, i64 0, i64 %67
  %76 = select i1 %74, %struct._FcMatcher* %75, %struct._FcMatcher* null
  br label %77

77:                                               ; preds = %71, %63, %65
  %78 = phi %struct._FcMatcher* [ null, %65 ], [ null, %63 ], [ %76, %71 ]
  %79 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %56, i64 0, i32 1
  %80 = load %struct._FcValueList*, %struct._FcValueList** %79, align 8
  %81 = ptrtoint %struct._FcValueList* %80 to i64
  %82 = and i64 %81, 1
  %83 = icmp eq i64 %82, 0
  %84 = ptrtoint %struct._FcPatternElt* %56 to i64
  %85 = and i64 %81, -2
  %86 = add nsw i64 %85, %84
  %87 = inttoptr i64 %86 to %struct._FcValueList*
  %88 = select i1 %83, %struct._FcValueList* %80, %struct._FcValueList* %87
  %89 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %53, i64 0, i32 1
  %90 = load %struct._FcValueList*, %struct._FcValueList** %89, align 8
  %91 = ptrtoint %struct._FcValueList* %90 to i64
  %92 = and i64 %91, 1
  %93 = icmp eq i64 %92, 0
  %94 = ptrtoint %struct._FcPatternElt* %53 to i64
  %95 = and i64 %91, -2
  %96 = add nsw i64 %95, %94
  %97 = inttoptr i64 %96 to %struct._FcValueList*
  %98 = select i1 %93, %struct._FcValueList* %90, %struct._FcValueList* %97
  %99 = call fastcc i32 @FcCompareValueList(i32 %62, %struct._FcMatcher* %78, %struct._FcValueList* %88, %struct._FcValueList* %98, %struct._FcValue* null, double* null, i32* nonnull %8, i32* nonnull %5)
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %77
  call void @IA__FcPatternDestroy(%struct._FcPattern* nonnull %20) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #12
  br label %392

102:                                              ; preds = %77
  %103 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %47, i64 %44, i32 1
  %104 = load %struct._FcValueList*, %struct._FcValueList** %103, align 8
  %105 = ptrtoint %struct._FcValueList* %104 to i64
  %106 = and i64 %105, 1
  %107 = icmp eq i64 %106, 0
  %108 = ptrtoint %struct._FcPatternElt* %48 to i64
  %109 = and i64 %105, -2
  %110 = add nsw i64 %109, %108
  %111 = inttoptr i64 %110 to %struct._FcValueList*
  %112 = select i1 %107, %struct._FcValueList* %104, %struct._FcValueList* %111
  %113 = load %struct._FcValueList*, %struct._FcValueList** %89, align 8
  %114 = ptrtoint %struct._FcValueList* %113 to i64
  %115 = and i64 %114, 1
  %116 = icmp eq i64 %115, 0
  %117 = and i64 %114, -2
  %118 = add nsw i64 %117, %94
  %119 = inttoptr i64 %118 to %struct._FcValueList*
  %120 = select i1 %116, %struct._FcValueList* %113, %struct._FcValueList* %119
  %121 = icmp ne %struct._FcValueList* %112, null
  %122 = icmp ne %struct._FcValueList* %120, null
  %123 = or i1 %122, %121
  br i1 %123, label %124, label %228

124:                                              ; preds = %102, %192
  %125 = phi i1 [ %195, %192 ], [ %122, %102 ]
  %126 = phi i1 [ %194, %192 ], [ %121, %102 ]
  %127 = phi i32 [ %167, %192 ], [ 0, %102 ]
  %128 = phi %struct._FcValueList* [ %180, %192 ], [ %112, %102 ]
  %129 = phi %struct._FcValueList* [ %166, %192 ], [ null, %102 ]
  %130 = phi %struct._FcValueList* [ %165, %192 ], [ null, %102 ]
  %131 = phi %struct._FcValueList* [ %193, %192 ], [ %120, %102 ]
  %132 = load i32, i32* %8, align 4
  %133 = icmp eq i32 %127, %132
  br i1 %133, label %134, label %149

134:                                              ; preds = %124
  br i1 %126, label %135, label %141

135:                                              ; preds = %134
  %136 = getelementptr inbounds %struct._FcValueList, %struct._FcValueList* %128, i64 0, i32 1
  %137 = call { i32, i8* } @FcValueCanonicalize(%struct._FcValue* %136) #12
  %138 = extractvalue { i32, i8* } %137, 0
  %139 = extractvalue { i32, i8* } %137, 1
  %140 = call %struct._FcValueList* @FcValueListPrepend(%struct._FcValueList* %130, i32 %138, i8* %139, i32 1) #12
  br label %141

141:                                              ; preds = %135, %134
  %142 = phi %struct._FcValueList* [ %140, %135 ], [ %130, %134 ]
  br i1 %125, label %143, label %164

143:                                              ; preds = %141
  %144 = getelementptr inbounds %struct._FcValueList, %struct._FcValueList* %131, i64 0, i32 1
  %145 = call { i32, i8* } @FcValueCanonicalize(%struct._FcValue* %144) #12
  %146 = extractvalue { i32, i8* } %145, 0
  %147 = extractvalue { i32, i8* } %145, 1
  %148 = call %struct._FcValueList* @FcValueListPrepend(%struct._FcValueList* %129, i32 %146, i8* %147, i32 1) #12
  br label %164

149:                                              ; preds = %124
  br i1 %126, label %150, label %156

150:                                              ; preds = %149
  %151 = getelementptr inbounds %struct._FcValueList, %struct._FcValueList* %128, i64 0, i32 1
  %152 = call { i32, i8* } @FcValueCanonicalize(%struct._FcValue* %151) #12
  %153 = extractvalue { i32, i8* } %152, 0
  %154 = extractvalue { i32, i8* } %152, 1
  %155 = call %struct._FcValueList* @FcValueListAppend(%struct._FcValueList* %130, i32 %153, i8* %154, i32 1) #12
  br label %156

156:                                              ; preds = %150, %149
  %157 = phi %struct._FcValueList* [ %155, %150 ], [ %130, %149 ]
  br i1 %125, label %158, label %164

158:                                              ; preds = %156
  %159 = getelementptr inbounds %struct._FcValueList, %struct._FcValueList* %131, i64 0, i32 1
  %160 = call { i32, i8* } @FcValueCanonicalize(%struct._FcValue* %159) #12
  %161 = extractvalue { i32, i8* } %160, 0
  %162 = extractvalue { i32, i8* } %160, 1
  %163 = call %struct._FcValueList* @FcValueListAppend(%struct._FcValueList* %129, i32 %161, i8* %162, i32 1) #12
  br label %164

164:                                              ; preds = %143, %141, %158, %156
  %165 = phi %struct._FcValueList* [ %142, %143 ], [ %142, %141 ], [ %157, %158 ], [ %157, %156 ]
  %166 = phi %struct._FcValueList* [ %148, %143 ], [ %129, %141 ], [ %163, %158 ], [ %129, %156 ]
  %167 = add nuw nsw i32 %127, 1
  br i1 %126, label %168, label %179

168:                                              ; preds = %164
  %169 = getelementptr inbounds %struct._FcValueList, %struct._FcValueList* %128, i64 0, i32 0
  %170 = load %struct._FcValueList*, %struct._FcValueList** %169, align 8
  %171 = ptrtoint %struct._FcValueList* %170 to i64
  %172 = and i64 %171, 1
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %179, label %174

174:                                              ; preds = %168
  %175 = ptrtoint %struct._FcValueList* %128 to i64
  %176 = and i64 %171, -2
  %177 = add nsw i64 %176, %175
  %178 = inttoptr i64 %177 to %struct._FcValueList*
  br label %179

179:                                              ; preds = %168, %164, %174
  %180 = phi %struct._FcValueList* [ %178, %174 ], [ null, %164 ], [ %170, %168 ]
  br i1 %125, label %181, label %192

181:                                              ; preds = %179
  %182 = getelementptr inbounds %struct._FcValueList, %struct._FcValueList* %131, i64 0, i32 0
  %183 = load %struct._FcValueList*, %struct._FcValueList** %182, align 8
  %184 = ptrtoint %struct._FcValueList* %183 to i64
  %185 = and i64 %184, 1
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %192, label %187

187:                                              ; preds = %181
  %188 = ptrtoint %struct._FcValueList* %131 to i64
  %189 = and i64 %184, -2
  %190 = add nsw i64 %189, %188
  %191 = inttoptr i64 %190 to %struct._FcValueList*
  br label %192

192:                                              ; preds = %181, %179, %187
  %193 = phi %struct._FcValueList* [ %191, %187 ], [ null, %179 ], [ %183, %181 ]
  %194 = icmp ne %struct._FcValueList* %180, null
  %195 = icmp ne %struct._FcValueList* %193, null
  %196 = or i1 %195, %194
  br i1 %196, label %124, label %228

197:                                              ; preds = %51
  br i1 %57, label %200, label %198

198:                                              ; preds = %197
  %199 = load i32, i32* %49, align 8
  br label %236

200:                                              ; preds = %197
  %201 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %47, i64 %44, i32 1
  %202 = load %struct._FcValueList*, %struct._FcValueList** %201, align 8
  %203 = ptrtoint %struct._FcValueList* %202 to i64
  %204 = and i64 %203, 1
  %205 = icmp eq i64 %204, 0
  %206 = ptrtoint %struct._FcPatternElt* %48 to i64
  %207 = and i64 %203, -2
  %208 = add nsw i64 %207, %206
  %209 = inttoptr i64 %208 to %struct._FcValueList*
  %210 = select i1 %205, %struct._FcValueList* %202, %struct._FcValueList* %209
  %211 = call %struct._FcValueList* @FcValueListDuplicate(%struct._FcValueList* %210) #12
  %212 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %53, i64 0, i32 1
  %213 = load %struct._FcValueList*, %struct._FcValueList** %212, align 8
  %214 = ptrtoint %struct._FcValueList* %213 to i64
  %215 = and i64 %214, 1
  %216 = icmp eq i64 %215, 0
  %217 = ptrtoint %struct._FcPatternElt* %53 to i64
  %218 = and i64 %214, -2
  %219 = add nsw i64 %218, %217
  %220 = inttoptr i64 %219 to %struct._FcValueList*
  %221 = select i1 %216, %struct._FcValueList* %213, %struct._FcValueList* %220
  %222 = call %struct._FcValueList* @FcValueListDuplicate(%struct._FcValueList* %221) #12
  %223 = load i32, i32* %49, align 8
  %224 = call i32 @FcPatternObjectListAdd(%struct._FcPattern* nonnull %20, i32 %223, %struct._FcValueList* %211, i32 0) #12
  %225 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %53, i64 0, i32 0
  %226 = load i32, i32* %225, align 8
  %227 = call i32 @FcPatternObjectListAdd(%struct._FcPattern* nonnull %20, i32 %226, %struct._FcValueList* %222, i32 0) #12
  br label %336

228:                                              ; preds = %192, %102
  %229 = phi %struct._FcValueList* [ null, %102 ], [ %165, %192 ]
  %230 = phi %struct._FcValueList* [ null, %102 ], [ %166, %192 ]
  %231 = load i32, i32* %49, align 8
  %232 = call i32 @FcPatternObjectListAdd(%struct._FcPattern* nonnull %20, i32 %231, %struct._FcValueList* %229, i32 0) #12
  %233 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %53, i64 0, i32 0
  %234 = load i32, i32* %233, align 8
  %235 = call i32 @FcPatternObjectListAdd(%struct._FcPattern* nonnull %20, i32 %234, %struct._FcValueList* %230, i32 0) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #12
  br label %336

236:                                              ; preds = %198, %43
  %237 = phi i32 [ %199, %198 ], [ %50, %43 ]
  %238 = call %struct._FcPatternElt* @FcPatternObjectFindElt(%struct._FcPattern* %1, i32 %237) #12
  %239 = icmp eq %struct._FcPatternElt* %238, null
  br i1 %239, label %322, label %240

240:                                              ; preds = %236
  %241 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %238, i64 0, i32 0
  %242 = load i32, i32* %241, align 8
  %243 = icmp sgt i32 %242, 51
  br i1 %243, label %255, label %244

244:                                              ; preds = %240
  %245 = sext i32 %242 to i64
  %246 = lshr i64 3871578070775690, %245
  %247 = and i64 %246, 1
  %248 = icmp eq i64 %247, 0
  br i1 %248, label %255, label %249

249:                                              ; preds = %244
  %250 = lshr i64 632021556594805, %245
  %251 = and i64 %250, 1
  %252 = icmp eq i64 %251, 0
  %253 = getelementptr inbounds [52 x %struct._FcMatcher], [52 x %struct._FcMatcher]* @_FcMatchers, i64 0, i64 %245
  %254 = select i1 %252, %struct._FcMatcher* %253, %struct._FcMatcher* null
  br label %255

255:                                              ; preds = %249, %240, %244
  %256 = phi %struct._FcMatcher* [ null, %244 ], [ null, %240 ], [ %254, %249 ]
  %257 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %238, i64 0, i32 1
  %258 = load %struct._FcValueList*, %struct._FcValueList** %257, align 8
  %259 = ptrtoint %struct._FcValueList* %258 to i64
  %260 = and i64 %259, 1
  %261 = icmp eq i64 %260, 0
  %262 = ptrtoint %struct._FcPatternElt* %238 to i64
  %263 = and i64 %259, -2
  %264 = add nsw i64 %263, %262
  %265 = inttoptr i64 %264 to %struct._FcValueList*
  %266 = select i1 %261, %struct._FcValueList* %258, %struct._FcValueList* %265
  %267 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %47, i64 %44, i32 1
  %268 = load %struct._FcValueList*, %struct._FcValueList** %267, align 8
  %269 = ptrtoint %struct._FcValueList* %268 to i64
  %270 = and i64 %269, 1
  %271 = icmp eq i64 %270, 0
  %272 = ptrtoint %struct._FcPatternElt* %48 to i64
  %273 = and i64 %269, -2
  %274 = add nsw i64 %273, %272
  %275 = inttoptr i64 %274 to %struct._FcValueList*
  %276 = select i1 %271, %struct._FcValueList* %268, %struct._FcValueList* %275
  %277 = call fastcc i32 @FcCompareValueList(i32 %242, %struct._FcMatcher* %256, %struct._FcValueList* %266, %struct._FcValueList* %276, %struct._FcValue* nonnull %4, double* null, i32* null, i32* nonnull %5)
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %279, label %280

279:                                              ; preds = %255
  call void @IA__FcPatternDestroy(%struct._FcPattern* nonnull %20) #12
  br label %392

280:                                              ; preds = %255
  %281 = load i32, i32* %49, align 8
  %282 = load i32, i32* %30, align 8
  %283 = load i8*, i8** %31, align 8
  %284 = call i32 @FcPatternObjectAdd(%struct._FcPattern* nonnull %20, i32 %281, i32 %282, i8* %283, i32 0) #12
  %285 = load i32, i32* %6, align 4
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %336, label %287

287:                                              ; preds = %280
  %288 = load %struct._FcValueList*, %struct._FcValueList** %267, align 8
  %289 = ptrtoint %struct._FcValueList* %288 to i64
  %290 = and i64 %289, 1
  %291 = icmp eq i64 %290, 0
  %292 = and i64 %289, -2
  %293 = add nsw i64 %292, %272
  %294 = inttoptr i64 %293 to %struct._FcValueList*
  %295 = select i1 %291, %struct._FcValueList* %288, %struct._FcValueList* %294
  %296 = getelementptr inbounds %struct._FcValueList, %struct._FcValueList* %295, i64 0, i32 1, i32 0
  %297 = load i32, i32* %296, align 8
  %298 = icmp eq i32 %297, 9
  br i1 %298, label %299, label %336

299:                                              ; preds = %287
  %300 = load i32, i32* %49, align 8
  %301 = add i32 %300, -8
  %302 = icmp ult i32 %301, 3
  br i1 %302, label %303, label %336

303:                                              ; preds = %299
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %32) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %32, i8 -86, i64 128, i1 false)
  %304 = load double, double* %34, align 8
  %305 = load i32, i32* %35, align 8
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %309, label %307

307:                                              ; preds = %303
  %308 = call i32 @FcStrBufChar(%struct._FcStrBuf* nonnull %7, i8 zeroext 44) #12
  br label %309

309:                                              ; preds = %303, %307
  %310 = load i32, i32* %49, align 8
  switch i32 %310, label %317 [
    i32 8, label %311
    i32 9, label %315
    i32 10, label %316
  ]

311:                                              ; preds = %309
  %312 = fptosi double %304 to i32
  %313 = call i32 @IA__FcWeightToOpenType(i32 %312) #12
  %314 = sitofp i32 %313 to double
  br label %317

315:                                              ; preds = %309
  br label %317

316:                                              ; preds = %309
  br label %317

317:                                              ; preds = %309, %316, %315, %311
  %318 = phi double [ %304, %309 ], [ %304, %316 ], [ %304, %315 ], [ %314, %311 ]
  %319 = phi i8* [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), %309 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), %316 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), %315 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), %311 ]
  %320 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i8* nonnull %319, double %318) #12
  %321 = call i32 @FcStrBufString(%struct._FcStrBuf* nonnull %7, i8* nonnull %32) #12
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %32) #12
  br label %336

322:                                              ; preds = %236
  %323 = load i32, i32* %49, align 8
  %324 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %47, i64 %44, i32 1
  %325 = load %struct._FcValueList*, %struct._FcValueList** %324, align 8
  %326 = ptrtoint %struct._FcValueList* %325 to i64
  %327 = and i64 %326, 1
  %328 = icmp eq i64 %327, 0
  %329 = ptrtoint %struct._FcPatternElt* %48 to i64
  %330 = and i64 %326, -2
  %331 = add nsw i64 %330, %329
  %332 = inttoptr i64 %331 to %struct._FcValueList*
  %333 = select i1 %328, %struct._FcValueList* %325, %struct._FcValueList* %332
  %334 = call %struct._FcValueList* @FcValueListDuplicate(%struct._FcValueList* %333) #12
  %335 = call i32 @FcPatternObjectListAdd(%struct._FcPattern* nonnull %20, i32 %323, %struct._FcValueList* %334, i32 1) #12
  br label %336

336:                                              ; preds = %228, %200, %299, %280, %317, %287, %43, %43, %43, %322
  %337 = add nuw nsw i64 %44, 1
  %338 = load i32, i32* %23, align 8
  %339 = sext i32 %338 to i64
  %340 = icmp slt i64 %337, %339
  br i1 %340, label %43, label %36

341:                                              ; preds = %40, %366
  %342 = phi i64 [ 0, %40 ], [ %367, %366 ]
  %343 = load i64, i64* %42, align 8
  %344 = add nsw i64 %343, %41
  %345 = inttoptr i64 %344 to %struct._FcPatternElt*
  %346 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %345, i64 %342
  %347 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %346, i64 0, i32 0
  %348 = load i32, i32* %347, align 8
  %349 = call %struct._FcPatternElt* @FcPatternObjectFindElt(%struct._FcPattern* %2, i32 %348) #12
  %350 = icmp eq %struct._FcPatternElt* %349, null
  br i1 %350, label %351, label %366

351:                                              ; preds = %341
  %352 = load i32, i32* %347, align 8
  switch i32 %352, label %353 [
    i32 2, label %366
    i32 4, label %366
    i32 6, label %366
  ]

353:                                              ; preds = %351
  %354 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %345, i64 %342, i32 1
  %355 = load %struct._FcValueList*, %struct._FcValueList** %354, align 8
  %356 = ptrtoint %struct._FcValueList* %355 to i64
  %357 = and i64 %356, 1
  %358 = icmp eq i64 %357, 0
  %359 = ptrtoint %struct._FcPatternElt* %346 to i64
  %360 = and i64 %356, -2
  %361 = add nsw i64 %360, %359
  %362 = inttoptr i64 %361 to %struct._FcValueList*
  %363 = select i1 %358, %struct._FcValueList* %355, %struct._FcValueList* %362
  %364 = call %struct._FcValueList* @FcValueListDuplicate(%struct._FcValueList* %363) #12
  %365 = call i32 @FcPatternObjectListAdd(%struct._FcPattern* nonnull %20, i32 %352, %struct._FcValueList* %364, i32 0) #12
  br label %366

366:                                              ; preds = %351, %351, %351, %341, %353
  %367 = add nuw nsw i64 %342, 1
  %368 = load i32, i32* %37, align 8
  %369 = sext i32 %368 to i64
  %370 = icmp slt i64 %367, %369
  br i1 %370, label %341, label %371

371:                                              ; preds = %366, %36
  %372 = load i32, i32* %6, align 4
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %390, label %374

374:                                              ; preds = %371
  %375 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %7, i64 0, i32 3
  %376 = load i32, i32* %375, align 8
  %377 = icmp eq i32 %376, 0
  br i1 %377, label %390, label %378

378:                                              ; preds = %374
  %379 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %379) #12
  store i8* null, i8** %10, align 8
  %380 = call i32 @FcPatternObjectGetString(%struct._FcPattern* nonnull %20, i32 49, i32 0, i8** nonnull %10) #12
  %381 = icmp eq i32 %380, 0
  br i1 %381, label %382, label %387

382:                                              ; preds = %378
  %383 = call i32 @FcStrBufChar(%struct._FcStrBuf* nonnull %7, i8 zeroext 44) #12
  %384 = load i8*, i8** %10, align 8
  %385 = call i32 @FcStrBufString(%struct._FcStrBuf* nonnull %7, i8* %384) #12
  %386 = call i32 @FcPatternObjectDel(%struct._FcPattern* nonnull %20, i32 49) #12
  br label %387

387:                                              ; preds = %382, %378
  %388 = call i8* @FcStrBufDoneStatic(%struct._FcStrBuf* nonnull %7) #12
  %389 = call i32 @FcPatternObjectAddString(%struct._FcPattern* nonnull %20, i32 49, i8* %388) #12
  call void @FcStrBufDestroy(%struct._FcStrBuf* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %379) #12
  br label %390

390:                                              ; preds = %374, %371, %387
  %391 = call i32 @IA__FcConfigSubstituteWithPat(%struct._FcConfig* %0, %struct._FcPattern* nonnull %20, %struct._FcPattern* %1, i32 1) #12
  br label %392

392:                                              ; preds = %101, %279, %19, %390
  %393 = phi %struct._FcPattern* [ %20, %390 ], [ null, %19 ], [ null, %279 ], [ null, %101 ]
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %14) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #12
  ret %struct._FcPattern* %393
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare hidden i32 @FcPatternObjectGetBool(%struct._FcPattern*, i32, i32, i32*) local_unnamed_addr #2

declare hidden void @FcStrBufInit(%struct._FcStrBuf*, i8*, i32) local_unnamed_addr #2

declare hidden %struct._FcPattern* @IA__FcPatternCreate() local_unnamed_addr #2

declare hidden %struct._FcPatternElt* @FcPatternObjectFindElt(%struct._FcPattern*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @FcCompareValueList(i32, %struct._FcMatcher* readonly, %struct._FcValueList*, %struct._FcValueList*, %struct._FcValue*, double*, i32*, i32* nocapture) unnamed_addr #0 {
  %9 = alloca %struct._FcValue, align 8
  %10 = icmp eq %struct._FcMatcher* %1, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %8
  %12 = icmp eq %struct._FcValueList* %2, null
  br i1 %12, label %105, label %13

13:                                               ; preds = %11
  %14 = icmp eq %struct._FcValueList* %3, null
  %15 = bitcast %struct._FcValue* %9 to i8*
  %16 = getelementptr inbounds %struct._FcMatcher, %struct._FcMatcher* %1, i64 0, i32 1
  %17 = icmp eq %struct._FcValue* %4, null
  %18 = bitcast %struct._FcValue* %4 to i8*
  br label %31

19:                                               ; preds = %8
  %20 = icmp eq %struct._FcValue* %4, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %struct._FcValueList, %struct._FcValueList* %3, i64 0, i32 1
  %23 = tail call { i32, i8* } @FcValueCanonicalize(%struct._FcValue* %22) #12
  %24 = extractvalue { i32, i8* } %23, 0
  %25 = extractvalue { i32, i8* } %23, 1
  %26 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %4, i64 0, i32 0
  store i32 %24, i32* %26, align 8
  %27 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %4, i64 0, i32 1, i32 0
  store i8* %25, i8** %27, align 8
  br label %28

28:                                               ; preds = %19, %21
  %29 = icmp eq i32* %6, null
  br i1 %29, label %143, label %30

30:                                               ; preds = %28
  store i32 0, i32* %6, align 4
  br label %143

31:                                               ; preds = %13, %88
  %32 = phi %struct._FcValueList* [ %2, %13 ], [ %103, %88 ]
  %33 = phi i32 [ 0, %13 ], [ %92, %88 ]
  %34 = phi i32 [ 0, %13 ], [ %93, %88 ]
  %35 = phi double [ 0x547D42AEA2879F2E, %13 ], [ %91, %88 ]
  %36 = phi double [ 0x547D42AEA2879F2E, %13 ], [ %90, %88 ]
  %37 = phi double [ 0x547D42AEA2879F2E, %13 ], [ %89, %88 ]
  br i1 %14, label %88, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %struct._FcValueList, %struct._FcValueList* %32, i64 0, i32 1
  %40 = sitofp i32 %34 to double
  %41 = getelementptr inbounds %struct._FcValueList, %struct._FcValueList* %32, i64 0, i32 2
  br label %42

42:                                               ; preds = %38, %73
  %43 = phi %struct._FcValueList* [ %3, %38 ], [ %85, %73 ]
  %44 = phi i32 [ %33, %38 ], [ %63, %73 ]
  %45 = phi i32 [ 0, %38 ], [ %86, %73 ]
  %46 = phi double [ %35, %38 ], [ %75, %73 ]
  %47 = phi double [ %36, %38 ], [ %74, %73 ]
  %48 = phi double [ %37, %38 ], [ %62, %73 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false)
  %49 = load double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)*, double (%struct._FcValue*, %struct._FcValue*, %struct._FcValue*)** %16, align 8
  %50 = getelementptr inbounds %struct._FcValueList, %struct._FcValueList* %43, i64 0, i32 1
  %51 = call double %49(%struct._FcValue* %39, %struct._FcValue* %50, %struct._FcValue* nonnull %9) #12
  %52 = fcmp olt double %51, 0.000000e+00
  br i1 %52, label %72, label %53

53:                                               ; preds = %42
  %54 = fmul double %51, 1.000000e+03
  %55 = fadd double %54, %40
  %56 = fcmp uge double %55, %48
  %57 = or i1 %56, %17
  %58 = select i1 %56, double %48, double %55
  %59 = select i1 %56, i32 %44, i32 %45
  br i1 %57, label %61, label %60

60:                                               ; preds = %53
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* nonnull align 8 %15, i64 16, i1 false)
  br label %61

61:                                               ; preds = %53, %60
  %62 = phi double [ %58, %53 ], [ %55, %60 ]
  %63 = phi i32 [ %59, %53 ], [ %45, %60 ]
  %64 = load i32, i32* %41, align 8
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %69

66:                                               ; preds = %61
  %67 = fcmp olt double %55, %47
  br i1 %67, label %68, label %73

68:                                               ; preds = %66
  br label %73

69:                                               ; preds = %61
  %70 = fcmp olt double %55, %46
  br i1 %70, label %71, label %73

71:                                               ; preds = %69
  br label %73

72:                                               ; preds = %42
  store i32 2, i32* %7, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #12
  br label %143

73:                                               ; preds = %69, %71, %66, %68
  %74 = phi double [ %47, %69 ], [ %47, %71 ], [ %47, %66 ], [ %55, %68 ]
  %75 = phi double [ %46, %69 ], [ %55, %71 ], [ %46, %66 ], [ %46, %68 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #12
  %76 = getelementptr inbounds %struct._FcValueList, %struct._FcValueList* %43, i64 0, i32 0
  %77 = load %struct._FcValueList*, %struct._FcValueList** %76, align 8
  %78 = ptrtoint %struct._FcValueList* %77 to i64
  %79 = and i64 %78, 1
  %80 = icmp eq i64 %79, 0
  %81 = ptrtoint %struct._FcValueList* %43 to i64
  %82 = and i64 %78, -2
  %83 = add nsw i64 %82, %81
  %84 = inttoptr i64 %83 to %struct._FcValueList*
  %85 = select i1 %80, %struct._FcValueList* %77, %struct._FcValueList* %84
  %86 = add nuw nsw i32 %45, 1
  %87 = icmp eq %struct._FcValueList* %85, null
  br i1 %87, label %88, label %42

88:                                               ; preds = %73, %31
  %89 = phi double [ %37, %31 ], [ %62, %73 ]
  %90 = phi double [ %36, %31 ], [ %74, %73 ]
  %91 = phi double [ %35, %31 ], [ %75, %73 ]
  %92 = phi i32 [ %33, %31 ], [ %63, %73 ]
  %93 = add nuw nsw i32 %34, 1
  %94 = getelementptr inbounds %struct._FcValueList, %struct._FcValueList* %32, i64 0, i32 0
  %95 = load %struct._FcValueList*, %struct._FcValueList** %94, align 8
  %96 = ptrtoint %struct._FcValueList* %95 to i64
  %97 = and i64 %96, 1
  %98 = icmp eq i64 %97, 0
  %99 = ptrtoint %struct._FcValueList* %32 to i64
  %100 = and i64 %96, -2
  %101 = add nsw i64 %100, %99
  %102 = inttoptr i64 %101 to %struct._FcValueList*
  %103 = select i1 %98, %struct._FcValueList* %95, %struct._FcValueList* %102
  %104 = icmp eq %struct._FcValueList* %103, null
  br i1 %104, label %105, label %31

105:                                              ; preds = %88, %11
  %106 = phi double [ 0x547D42AEA2879F2E, %11 ], [ %89, %88 ]
  %107 = phi double [ 0x547D42AEA2879F2E, %11 ], [ %90, %88 ]
  %108 = phi double [ 0x547D42AEA2879F2E, %11 ], [ %91, %88 ]
  %109 = phi i32 [ 0, %11 ], [ %92, %88 ]
  %110 = load i32, i32* @FcDebugVal, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %118, label %113

113:                                              ; preds = %105
  %114 = call i8* @FcObjectName(i32 %0) #12
  %115 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0), i8* %114, double %106)
  call void @FcValueListPrint(%struct._FcValueList* %2) #12
  %116 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i64 0, i64 0))
  call void @FcValueListPrint(%struct._FcValueList* %3) #12
  %117 = call i32 @putchar(i32 10)
  br label %118

118:                                              ; preds = %105, %113
  %119 = icmp eq double* %5, null
  br i1 %119, label %140, label %120

120:                                              ; preds = %118
  %121 = getelementptr inbounds %struct._FcMatcher, %struct._FcMatcher* %1, i64 0, i32 3
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds %struct._FcMatcher, %struct._FcMatcher* %1, i64 0, i32 2
  %124 = load i32, i32* %123, align 8
  %125 = icmp eq i32 %122, %124
  %126 = sext i32 %122 to i64
  %127 = getelementptr inbounds double, double* %5, i64 %126
  %128 = load double, double* %127, align 8
  br i1 %125, label %129, label %131

129:                                              ; preds = %120
  %130 = fadd double %106, %128
  br label %137

131:                                              ; preds = %120
  %132 = fadd double %108, %128
  store double %132, double* %127, align 8
  %133 = sext i32 %124 to i64
  %134 = getelementptr inbounds double, double* %5, i64 %133
  %135 = load double, double* %134, align 8
  %136 = fadd double %107, %135
  br label %137

137:                                              ; preds = %131, %129
  %138 = phi double* [ %127, %129 ], [ %134, %131 ]
  %139 = phi double [ %130, %129 ], [ %136, %131 ]
  store double %139, double* %138, align 8
  br label %140

140:                                              ; preds = %137, %118
  %141 = icmp eq i32* %6, null
  br i1 %141, label %143, label %142

142:                                              ; preds = %140
  store i32 %109, i32* %6, align 4
  br label %143

143:                                              ; preds = %72, %142, %140, %30, %28
  %144 = phi i32 [ 0, %72 ], [ 1, %28 ], [ 1, %30 ], [ 1, %140 ], [ 1, %142 ]
  ret i32 %144
}

declare hidden void @IA__FcPatternDestroy(%struct._FcPattern*) local_unnamed_addr #2

declare hidden %struct._FcValueList* @FcValueListPrepend(%struct._FcValueList*, i32, i8*, i32) local_unnamed_addr #2

declare hidden { i32, i8* } @FcValueCanonicalize(%struct._FcValue*) local_unnamed_addr #2

declare hidden %struct._FcValueList* @FcValueListAppend(%struct._FcValueList*, i32, i8*, i32) local_unnamed_addr #2

declare hidden i32 @FcPatternObjectListAdd(%struct._FcPattern*, i32, %struct._FcValueList*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare hidden %struct._FcValueList* @FcValueListDuplicate(%struct._FcValueList*) local_unnamed_addr #2

declare hidden i32 @FcPatternObjectAdd(%struct._FcPattern*, i32, i32, i8*, i32) local_unnamed_addr #2

declare hidden i32 @FcStrBufChar(%struct._FcStrBuf*, i8 zeroext) local_unnamed_addr #2

declare hidden i32 @IA__FcWeightToOpenType(i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @sprintf(i8* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #3

declare hidden i32 @FcStrBufString(%struct._FcStrBuf*, i8*) local_unnamed_addr #2

declare hidden i32 @FcPatternObjectGetString(%struct._FcPattern*, i32, i32, i8**) local_unnamed_addr #2

declare hidden i32 @FcPatternObjectDel(%struct._FcPattern*, i32) local_unnamed_addr #2

declare hidden i32 @FcPatternObjectAddString(%struct._FcPattern*, i32, i8*) local_unnamed_addr #2

declare hidden i8* @FcStrBufDoneStatic(%struct._FcStrBuf*) local_unnamed_addr #2

declare hidden void @FcStrBufDestroy(%struct._FcStrBuf*) local_unnamed_addr #2

declare hidden i32 @IA__FcConfigSubstituteWithPat(%struct._FcConfig*, %struct._FcPattern*, %struct._FcPattern*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct._FcPattern* @IA__FcFontSetMatch(%struct._FcConfig*, %struct._FcFontSet** nocapture readonly, i32, %struct._FcPattern*, i32* nocapture) #0 {
  store i32 1, i32* %4, align 4
  %6 = tail call %struct._FcConfig* @IA__FcConfigReference(%struct._FcConfig* %0) #12
  %7 = icmp eq %struct._FcConfig* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %5
  %9 = tail call fastcc %struct._FcPattern* @FcFontSetMatchInternal(%struct._FcFontSet** %1, i32 %2, %struct._FcPattern* %3, i32* %4)
  %10 = icmp eq %struct._FcPattern* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %8
  %12 = tail call %struct._FcPattern* @IA__FcFontRenderPrepare(%struct._FcConfig* nonnull %6, %struct._FcPattern* %3, %struct._FcPattern* nonnull %9)
  br label %13

13:                                               ; preds = %8, %11
  %14 = phi %struct._FcPattern* [ %12, %11 ], [ null, %8 ]
  tail call void @IA__FcConfigDestroy(%struct._FcConfig* nonnull %6) #12
  br label %15

15:                                               ; preds = %5, %13
  %16 = phi %struct._FcPattern* [ %14, %13 ], [ null, %5 ]
  ret %struct._FcPattern* %16
}

declare hidden %struct._FcConfig* @IA__FcConfigReference(%struct._FcConfig*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct._FcPattern* @FcFontSetMatchInternal(%struct._FcFontSet** nocapture readonly, i32, %struct._FcPattern*, i32* nocapture) unnamed_addr #0 {
  %5 = alloca [26 x double], align 16
  %6 = bitcast [26 x double]* %5 to i8*
  %7 = alloca [26 x double], align 16
  %8 = bitcast [26 x double]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -1, i64 208, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %8) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 0, i64 208, i1 false)
  %9 = load i32, i32* @FcDebugVal, align 4
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %4
  %13 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i64 0, i64 0))
  tail call void @IA__FcPatternPrint(%struct._FcPattern* %2) #12
  br label %14

14:                                               ; preds = %4, %12
  %15 = icmp sgt i32 %1, 0
  br i1 %15, label %16, label %165

16:                                               ; preds = %14
  %17 = getelementptr inbounds [26 x double], [26 x double]* %5, i64 0, i64 0
  %18 = zext i32 %1 to i64
  %19 = getelementptr inbounds [26 x double], [26 x double]* %5, i64 0, i64 1
  %20 = getelementptr inbounds [26 x double], [26 x double]* %5, i64 0, i64 2
  %21 = getelementptr inbounds [26 x double], [26 x double]* %5, i64 0, i64 3
  %22 = getelementptr inbounds [26 x double], [26 x double]* %5, i64 0, i64 4
  %23 = getelementptr inbounds [26 x double], [26 x double]* %5, i64 0, i64 5
  %24 = getelementptr inbounds [26 x double], [26 x double]* %5, i64 0, i64 6
  %25 = getelementptr inbounds [26 x double], [26 x double]* %5, i64 0, i64 7
  %26 = getelementptr inbounds [26 x double], [26 x double]* %5, i64 0, i64 8
  %27 = getelementptr inbounds [26 x double], [26 x double]* %5, i64 0, i64 9
  %28 = getelementptr inbounds [26 x double], [26 x double]* %5, i64 0, i64 10
  %29 = getelementptr inbounds [26 x double], [26 x double]* %5, i64 0, i64 11
  %30 = getelementptr inbounds [26 x double], [26 x double]* %5, i64 0, i64 12
  %31 = getelementptr inbounds [26 x double], [26 x double]* %5, i64 0, i64 13
  %32 = getelementptr inbounds [26 x double], [26 x double]* %5, i64 0, i64 14
  %33 = getelementptr inbounds [26 x double], [26 x double]* %5, i64 0, i64 15
  %34 = getelementptr inbounds [26 x double], [26 x double]* %5, i64 0, i64 16
  %35 = getelementptr inbounds [26 x double], [26 x double]* %5, i64 0, i64 17
  %36 = getelementptr inbounds [26 x double], [26 x double]* %5, i64 0, i64 18
  %37 = getelementptr inbounds [26 x double], [26 x double]* %5, i64 0, i64 19
  %38 = getelementptr inbounds [26 x double], [26 x double]* %5, i64 0, i64 20
  %39 = getelementptr inbounds [26 x double], [26 x double]* %5, i64 0, i64 21
  %40 = getelementptr inbounds [26 x double], [26 x double]* %5, i64 0, i64 22
  %41 = getelementptr inbounds [26 x double], [26 x double]* %5, i64 0, i64 23
  %42 = getelementptr inbounds [26 x double], [26 x double]* %5, i64 0, i64 24
  %43 = getelementptr inbounds [26 x double], [26 x double]* %5, i64 0, i64 25
  br label %44

44:                                               ; preds = %161, %16
  %45 = phi i64 [ 0, %16 ], [ %163, %161 ]
  %46 = phi %struct._FcPattern* [ null, %16 ], [ %162, %161 ]
  %47 = getelementptr inbounds %struct._FcFontSet*, %struct._FcFontSet** %0, i64 %45
  %48 = load %struct._FcFontSet*, %struct._FcFontSet** %47, align 8
  %49 = icmp eq %struct._FcFontSet* %48, null
  br i1 %49, label %161, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %struct._FcFontSet, %struct._FcFontSet* %48, i64 0, i32 0
  %52 = load i32, i32* %51, align 8
  %53 = icmp sgt i32 %52, 0
  br i1 %53, label %54, label %161

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct._FcFontSet, %struct._FcFontSet* %48, i64 0, i32 2
  br label %56

56:                                               ; preds = %54, %155
  %57 = phi i64 [ 0, %54 ], [ %157, %155 ]
  %58 = phi %struct._FcPattern* [ %46, %54 ], [ %156, %155 ]
  %59 = load i32, i32* @FcDebugVal, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %68, label %62

62:                                               ; preds = %56
  %63 = trunc i64 %57 to i32
  %64 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 %63)
  %65 = load %struct._FcPattern**, %struct._FcPattern*** %55, align 8
  %66 = getelementptr inbounds %struct._FcPattern*, %struct._FcPattern** %65, i64 %57
  %67 = load %struct._FcPattern*, %struct._FcPattern** %66, align 8
  call void @IA__FcPatternPrint(%struct._FcPattern* %67) #12
  br label %68

68:                                               ; preds = %56, %62
  %69 = load %struct._FcPattern**, %struct._FcPattern*** %55, align 8
  %70 = getelementptr inbounds %struct._FcPattern*, %struct._FcPattern** %69, i64 %57
  %71 = load %struct._FcPattern*, %struct._FcPattern** %70, align 8
  %72 = call fastcc i32 @FcCompare(%struct._FcPattern* %2, %struct._FcPattern* %71, double* nonnull %17, i32* %3)
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %297, label %74

74:                                               ; preds = %68
  %75 = load i32, i32* @FcDebugVal, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %133, label %78

78:                                               ; preds = %74
  %79 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0))
  %80 = load double, double* %17, align 16
  %81 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %80)
  %82 = load double, double* %19, align 8
  %83 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %82)
  %84 = load double, double* %20, align 16
  %85 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %84)
  %86 = load double, double* %21, align 8
  %87 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %86)
  %88 = load double, double* %22, align 16
  %89 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %88)
  %90 = load double, double* %23, align 8
  %91 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %90)
  %92 = load double, double* %24, align 16
  %93 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %92)
  %94 = load double, double* %25, align 8
  %95 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %94)
  %96 = load double, double* %26, align 16
  %97 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %96)
  %98 = load double, double* %27, align 8
  %99 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %98)
  %100 = load double, double* %28, align 16
  %101 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %100)
  %102 = load double, double* %29, align 8
  %103 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %102)
  %104 = load double, double* %30, align 16
  %105 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %104)
  %106 = load double, double* %31, align 8
  %107 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %106)
  %108 = load double, double* %32, align 16
  %109 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %108)
  %110 = load double, double* %33, align 8
  %111 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %110)
  %112 = load double, double* %34, align 16
  %113 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %112)
  %114 = load double, double* %35, align 8
  %115 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %114)
  %116 = load double, double* %36, align 16
  %117 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %116)
  %118 = load double, double* %37, align 8
  %119 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %118)
  %120 = load double, double* %38, align 16
  %121 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %120)
  %122 = load double, double* %39, align 8
  %123 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %122)
  %124 = load double, double* %40, align 16
  %125 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %124)
  %126 = load double, double* %41, align 8
  %127 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %126)
  %128 = load double, double* %42, align 16
  %129 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %128)
  %130 = load double, double* %43, align 8
  %131 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %130)
  %132 = call i32 @putchar(i32 10)
  br label %133

133:                                              ; preds = %74, %78
  %134 = icmp eq %struct._FcPattern* %58, null
  br i1 %134, label %151, label %141

135:                                              ; preds = %148
  %136 = getelementptr inbounds [26 x double], [26 x double]* %7, i64 0, i64 %150
  %137 = load double, double* %136, align 8
  %138 = getelementptr inbounds [26 x double], [26 x double]* %5, i64 0, i64 %150
  %139 = load double, double* %138, align 8
  %140 = fcmp olt double %137, %139
  br i1 %140, label %155, label %299

141:                                              ; preds = %133, %302
  %142 = phi i64 [ %301, %302 ], [ 0, %133 ]
  %143 = getelementptr inbounds [26 x double], [26 x double]* %7, i64 0, i64 %142
  %144 = load double, double* %143, align 16
  %145 = getelementptr inbounds [26 x double], [26 x double]* %5, i64 0, i64 %142
  %146 = load double, double* %145, align 16
  %147 = fcmp olt double %144, %146
  br i1 %147, label %155, label %148

148:                                              ; preds = %141
  %149 = fcmp olt double %146, %144
  %150 = or i64 %142, 1
  br i1 %149, label %151, label %135

151:                                              ; preds = %148, %299, %133
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %8, i8* nonnull align 16 %6, i64 208, i1 false)
  %152 = load %struct._FcPattern**, %struct._FcPattern*** %55, align 8
  %153 = getelementptr inbounds %struct._FcPattern*, %struct._FcPattern** %152, i64 %57
  %154 = load %struct._FcPattern*, %struct._FcPattern** %153, align 8
  br label %155

155:                                              ; preds = %141, %135, %302, %151
  %156 = phi %struct._FcPattern* [ %154, %151 ], [ %58, %302 ], [ %58, %135 ], [ %58, %141 ]
  %157 = add nuw nsw i64 %57, 1
  %158 = load i32, i32* %51, align 8
  %159 = sext i32 %158 to i64
  %160 = icmp slt i64 %157, %159
  br i1 %160, label %56, label %161

161:                                              ; preds = %155, %50, %44
  %162 = phi %struct._FcPattern* [ %46, %44 ], [ %46, %50 ], [ %156, %155 ]
  %163 = add nuw nsw i64 %45, 1
  %164 = icmp eq i64 %163, %18
  br i1 %164, label %165, label %44

165:                                              ; preds = %161, %14
  %166 = phi %struct._FcPattern* [ null, %14 ], [ %162, %161 ]
  %167 = load i32, i32* @FcDebugVal, align 4
  %168 = and i32 %167, 1
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %252, label %170

170:                                              ; preds = %165
  %171 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0))
  %172 = getelementptr inbounds [26 x double], [26 x double]* %7, i64 0, i64 0
  %173 = load double, double* %172, align 16
  %174 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %173)
  %175 = getelementptr inbounds [26 x double], [26 x double]* %7, i64 0, i64 1
  %176 = load double, double* %175, align 8
  %177 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %176)
  %178 = getelementptr inbounds [26 x double], [26 x double]* %7, i64 0, i64 2
  %179 = load double, double* %178, align 16
  %180 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %179)
  %181 = getelementptr inbounds [26 x double], [26 x double]* %7, i64 0, i64 3
  %182 = load double, double* %181, align 8
  %183 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %182)
  %184 = getelementptr inbounds [26 x double], [26 x double]* %7, i64 0, i64 4
  %185 = load double, double* %184, align 16
  %186 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %185)
  %187 = getelementptr inbounds [26 x double], [26 x double]* %7, i64 0, i64 5
  %188 = load double, double* %187, align 8
  %189 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %188)
  %190 = getelementptr inbounds [26 x double], [26 x double]* %7, i64 0, i64 6
  %191 = load double, double* %190, align 16
  %192 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %191)
  %193 = getelementptr inbounds [26 x double], [26 x double]* %7, i64 0, i64 7
  %194 = load double, double* %193, align 8
  %195 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %194)
  %196 = getelementptr inbounds [26 x double], [26 x double]* %7, i64 0, i64 8
  %197 = load double, double* %196, align 16
  %198 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %197)
  %199 = getelementptr inbounds [26 x double], [26 x double]* %7, i64 0, i64 9
  %200 = load double, double* %199, align 8
  %201 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %200)
  %202 = getelementptr inbounds [26 x double], [26 x double]* %7, i64 0, i64 10
  %203 = load double, double* %202, align 16
  %204 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %203)
  %205 = getelementptr inbounds [26 x double], [26 x double]* %7, i64 0, i64 11
  %206 = load double, double* %205, align 8
  %207 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %206)
  %208 = getelementptr inbounds [26 x double], [26 x double]* %7, i64 0, i64 12
  %209 = load double, double* %208, align 16
  %210 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %209)
  %211 = getelementptr inbounds [26 x double], [26 x double]* %7, i64 0, i64 13
  %212 = load double, double* %211, align 8
  %213 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %212)
  %214 = getelementptr inbounds [26 x double], [26 x double]* %7, i64 0, i64 14
  %215 = load double, double* %214, align 16
  %216 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %215)
  %217 = getelementptr inbounds [26 x double], [26 x double]* %7, i64 0, i64 15
  %218 = load double, double* %217, align 8
  %219 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %218)
  %220 = getelementptr inbounds [26 x double], [26 x double]* %7, i64 0, i64 16
  %221 = load double, double* %220, align 16
  %222 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %221)
  %223 = getelementptr inbounds [26 x double], [26 x double]* %7, i64 0, i64 17
  %224 = load double, double* %223, align 8
  %225 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %224)
  %226 = getelementptr inbounds [26 x double], [26 x double]* %7, i64 0, i64 18
  %227 = load double, double* %226, align 16
  %228 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %227)
  %229 = getelementptr inbounds [26 x double], [26 x double]* %7, i64 0, i64 19
  %230 = load double, double* %229, align 8
  %231 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %230)
  %232 = getelementptr inbounds [26 x double], [26 x double]* %7, i64 0, i64 20
  %233 = load double, double* %232, align 16
  %234 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %233)
  %235 = getelementptr inbounds [26 x double], [26 x double]* %7, i64 0, i64 21
  %236 = load double, double* %235, align 8
  %237 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %236)
  %238 = getelementptr inbounds [26 x double], [26 x double]* %7, i64 0, i64 22
  %239 = load double, double* %238, align 16
  %240 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %239)
  %241 = getelementptr inbounds [26 x double], [26 x double]* %7, i64 0, i64 23
  %242 = load double, double* %241, align 8
  %243 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %242)
  %244 = getelementptr inbounds [26 x double], [26 x double]* %7, i64 0, i64 24
  %245 = load double, double* %244, align 16
  %246 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %245)
  %247 = getelementptr inbounds [26 x double], [26 x double]* %7, i64 0, i64 25
  %248 = load double, double* %247, align 8
  %249 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %248)
  %250 = call i32 @putchar(i32 10)
  call void @IA__FcPatternPrint(%struct._FcPattern* %166) #12
  %251 = load i32, i32* @FcDebugVal, align 4
  br label %252

252:                                              ; preds = %165, %170
  %253 = phi i32 [ %167, %165 ], [ %251, %170 ]
  %254 = and i32 %253, 4096
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %294, label %256

256:                                              ; preds = %252
  %257 = call i8* @getenv(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.20, i64 0, i64 0)) #12
  %258 = icmp eq i8* %257, null
  br i1 %258, label %259, label %260

259:                                              ; preds = %256
  call void @FcPatternPrint2(%struct._FcPattern* %2, %struct._FcPattern* %166, %struct._FcObjectSet* null) #12
  br label %294

260:                                              ; preds = %256
  %261 = call noalias i8* @strdup(i8* nonnull %257) #12
  %262 = call %struct._FcObjectSet* @IA__FcObjectSetCreate() #12
  br label %263

263:                                              ; preds = %260, %288
  %264 = phi i32 [ 1, %260 ], [ %275, %288 ]
  %265 = phi i8* [ %261, %260 ], [ %289, %288 ]
  %266 = call i8* @strchr(i8* %265, i32 44) #13
  %267 = icmp eq i8* %266, null
  br i1 %267, label %268, label %270

268:                                              ; preds = %263
  %269 = call i64 @strlen(i8* %265) #13
  br label %274

270:                                              ; preds = %263
  %271 = ptrtoint i8* %266 to i64
  %272 = ptrtoint i8* %265 to i64
  %273 = sub i64 %271, %272
  br label %274

274:                                              ; preds = %270, %268
  %275 = phi i32 [ %264, %270 ], [ 0, %268 ]
  %276 = phi i64 [ %273, %270 ], [ %269, %268 ]
  %277 = add i64 %276, 1
  %278 = call noalias i8* @malloc(i64 %277) #12
  %279 = icmp eq i8* %278, null
  br i1 %279, label %288, label %280

280:                                              ; preds = %274
  %281 = call i8* @strcpy(i8* nonnull %278, i8* %265) #12
  %282 = call i32 @FcObjectFromName(i8* nonnull %278) #12
  %283 = icmp sgt i32 %282, 0
  br i1 %283, label %284, label %286

284:                                              ; preds = %280
  %285 = call i32 @IA__FcObjectSetAdd(%struct._FcObjectSet* %262, i8* nonnull %278) #12
  br label %286

286:                                              ; preds = %284, %280
  %287 = getelementptr inbounds i8, i8* %266, i64 1
  call void @free(i8* nonnull %278) #12
  br label %288

288:                                              ; preds = %274, %286
  %289 = phi i8* [ %287, %286 ], [ %265, %274 ]
  %290 = icmp eq i32 %275, 0
  br i1 %290, label %291, label %263

291:                                              ; preds = %288
  call void @free(i8* %261) #12
  call void @FcPatternPrint2(%struct._FcPattern* %2, %struct._FcPattern* %166, %struct._FcObjectSet* %262) #12
  %292 = icmp eq %struct._FcObjectSet* %262, null
  br i1 %292, label %294, label %293

293:                                              ; preds = %291
  call void @IA__FcObjectSetDestroy(%struct._FcObjectSet* nonnull %262) #12
  br label %294

294:                                              ; preds = %259, %293, %291, %252
  %295 = icmp eq %struct._FcPattern* %166, null
  br i1 %295, label %297, label %296

296:                                              ; preds = %294
  store i32 0, i32* %3, align 4
  br label %297

297:                                              ; preds = %68, %296, %294
  %298 = phi %struct._FcPattern* [ null, %294 ], [ %166, %296 ], [ null, %68 ]
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %6) #12
  ret %struct._FcPattern* %298

299:                                              ; preds = %135
  %300 = fcmp olt double %139, %137
  %301 = add nuw nsw i64 %142, 2
  br i1 %300, label %151, label %302

302:                                              ; preds = %299
  %303 = icmp eq i64 %301, 26
  br i1 %303, label %155, label %141
}

declare hidden void @IA__FcConfigDestroy(%struct._FcConfig*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct._FcPattern* @IA__FcFontMatch(%struct._FcConfig*, %struct._FcPattern*, i32* nocapture) #0 {
  %4 = alloca [2 x %struct._FcFontSet*], align 16
  %5 = bitcast [2 x %struct._FcFontSet*]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #12
  %6 = getelementptr inbounds [2 x %struct._FcFontSet*], [2 x %struct._FcFontSet*]* %4, i64 0, i64 0
  %7 = bitcast [2 x %struct._FcFontSet*]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 16, i1 false)
  store i32 1, i32* %2, align 4
  %8 = tail call %struct._FcConfig* @IA__FcConfigReference(%struct._FcConfig* %0) #12
  %9 = icmp eq %struct._FcConfig* %8, null
  br i1 %9, label %32, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct._FcConfig, %struct._FcConfig* %8, i64 0, i32 11, i64 0
  %12 = load %struct._FcFontSet*, %struct._FcFontSet** %11, align 8
  %13 = icmp eq %struct._FcFontSet* %12, null
  br i1 %13, label %15, label %14

14:                                               ; preds = %10
  store %struct._FcFontSet* %12, %struct._FcFontSet** %6, align 16
  br label %15

15:                                               ; preds = %10, %14
  %16 = phi i32 [ 1, %14 ], [ 0, %10 ]
  %17 = getelementptr inbounds %struct._FcConfig, %struct._FcConfig* %8, i64 0, i32 11, i64 1
  %18 = load %struct._FcFontSet*, %struct._FcFontSet** %17, align 8
  %19 = icmp eq %struct._FcFontSet* %18, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %15
  %21 = add nuw nsw i32 %16, 1
  %22 = zext i32 %16 to i64
  %23 = getelementptr inbounds [2 x %struct._FcFontSet*], [2 x %struct._FcFontSet*]* %4, i64 0, i64 %22
  store %struct._FcFontSet* %18, %struct._FcFontSet** %23, align 8
  br label %24

24:                                               ; preds = %15, %20
  %25 = phi i32 [ %21, %20 ], [ %16, %15 ]
  %26 = call fastcc %struct._FcPattern* @FcFontSetMatchInternal(%struct._FcFontSet** nonnull %6, i32 %25, %struct._FcPattern* %1, i32* %2)
  %27 = icmp eq %struct._FcPattern* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = tail call %struct._FcPattern* @IA__FcFontRenderPrepare(%struct._FcConfig* nonnull %8, %struct._FcPattern* %1, %struct._FcPattern* nonnull %26)
  br label %30

30:                                               ; preds = %24, %28
  %31 = phi %struct._FcPattern* [ %29, %28 ], [ null, %24 ]
  tail call void @IA__FcConfigDestroy(%struct._FcConfig* nonnull %8) #12
  br label %32

32:                                               ; preds = %3, %30
  %33 = phi %struct._FcPattern* [ %31, %30 ], [ null, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #12
  ret %struct._FcPattern* %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @IA__FcFontSetSortDestroy(%struct._FcFontSet*) #0 {
  tail call void @IA__FcFontSetDestroy(%struct._FcFontSet* %0) #12
  ret void
}

declare hidden void @IA__FcFontSetDestroy(%struct._FcFontSet*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct._FcFontSet* @IA__FcFontSetSort(%struct._FcConfig* nocapture readnone, %struct._FcFontSet** nocapture readonly, i32, %struct._FcPattern*, i32, %struct._FcCharSet**, i32*) #0 {
  %8 = alloca i32, align 4
  %9 = alloca %struct._FcCharSet*, align 8
  %10 = alloca %struct._FcValue, align 8
  %11 = alloca %struct._FcValue, align 8
  %12 = alloca %struct._FcValue, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = bitcast %struct._FcValue* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false)
  %16 = icmp eq i32* %6, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %7
  store i32 1, i32* %6, align 4
  br label %18

18:                                               ; preds = %7, %17
  %19 = load i32, i32* @FcDebugVal, align 4
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %18
  %23 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0))
  tail call void @IA__FcPatternPrint(%struct._FcPattern* %3) #12
  br label %24

24:                                               ; preds = %18, %22
  %25 = icmp sgt i32 %2, 0
  br i1 %25, label %26, label %65

26:                                               ; preds = %24
  %27 = zext i32 %2 to i64
  %28 = and i64 %27, 1
  %29 = icmp eq i32 %2, 1
  br i1 %29, label %49, label %30

30:                                               ; preds = %26
  %31 = sub nsw i64 %27, %28
  br label %32

32:                                               ; preds = %395, %30
  %33 = phi i64 [ 0, %30 ], [ %397, %395 ]
  %34 = phi i32 [ 0, %30 ], [ %396, %395 ]
  %35 = phi i64 [ %31, %30 ], [ %398, %395 ]
  %36 = getelementptr inbounds %struct._FcFontSet*, %struct._FcFontSet** %1, i64 %33
  %37 = load %struct._FcFontSet*, %struct._FcFontSet** %36, align 8
  %38 = icmp eq %struct._FcFontSet* %37, null
  br i1 %38, label %43, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %struct._FcFontSet, %struct._FcFontSet* %37, i64 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = add nsw i32 %41, %34
  br label %43

43:                                               ; preds = %32, %39
  %44 = phi i32 [ %42, %39 ], [ %34, %32 ]
  %45 = or i64 %33, 1
  %46 = getelementptr inbounds %struct._FcFontSet*, %struct._FcFontSet** %1, i64 %45
  %47 = load %struct._FcFontSet*, %struct._FcFontSet** %46, align 8
  %48 = icmp eq %struct._FcFontSet* %47, null
  br i1 %48, label %395, label %391

49:                                               ; preds = %395, %26
  %50 = phi i32 [ undef, %26 ], [ %396, %395 ]
  %51 = phi i64 [ 0, %26 ], [ %397, %395 ]
  %52 = phi i32 [ 0, %26 ], [ %396, %395 ]
  %53 = icmp eq i64 %28, 0
  br i1 %53, label %62, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %struct._FcFontSet*, %struct._FcFontSet** %1, i64 %51
  %56 = load %struct._FcFontSet*, %struct._FcFontSet** %55, align 8
  %57 = icmp eq %struct._FcFontSet* %56, null
  br i1 %57, label %62, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %struct._FcFontSet, %struct._FcFontSet* %56, i64 0, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = add nsw i32 %60, %52
  br label %62

62:                                               ; preds = %58, %54, %49
  %63 = phi i32 [ %50, %49 ], [ %61, %58 ], [ %52, %54 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %24, %62
  %66 = tail call %struct._FcFontSet* @IA__FcFontSetCreate() #12
  br label %389

67:                                               ; preds = %62, %67
  %68 = phi i32 [ %71, %67 ], [ 0, %62 ]
  %69 = call i32 @IA__FcPatternGet(%struct._FcPattern* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i32 %68, %struct._FcValue* nonnull %10) #12
  %70 = icmp eq i32 %69, 0
  %71 = add nuw nsw i32 %68, 1
  br i1 %70, label %67, label %72

72:                                               ; preds = %67
  %73 = sext i32 %63 to i64
  %74 = mul nsw i64 %73, 224
  %75 = zext i32 %68 to i64
  %76 = shl nuw nsw i64 %75, 2
  %77 = add nsw i64 %76, %74
  %78 = call noalias i8* @malloc(i64 %77) #12
  %79 = bitcast i8* %78 to %struct._FcSortNode*
  %80 = icmp eq i8* %78, null
  br i1 %80, label %389, label %81

81:                                               ; preds = %72
  %82 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %79, i64 %73
  %83 = bitcast %struct._FcSortNode* %82 to %struct._FcSortNode**
  %84 = getelementptr inbounds %struct._FcSortNode*, %struct._FcSortNode** %83, i64 %73
  %85 = bitcast %struct._FcSortNode** %84 to i32*
  br i1 %25, label %86, label %218

86:                                               ; preds = %81
  %87 = zext i32 %2 to i64
  br label %88

88:                                               ; preds = %213, %86
  %89 = phi i64 [ 0, %86 ], [ %216, %213 ]
  %90 = phi %struct._FcSortNode* [ %79, %86 ], [ %215, %213 ]
  %91 = phi %struct._FcSortNode** [ %83, %86 ], [ %214, %213 ]
  %92 = getelementptr inbounds %struct._FcFontSet*, %struct._FcFontSet** %1, i64 %89
  %93 = load %struct._FcFontSet*, %struct._FcFontSet** %92, align 8
  %94 = icmp eq %struct._FcFontSet* %93, null
  br i1 %94, label %213, label %95

95:                                               ; preds = %88
  %96 = getelementptr inbounds %struct._FcFontSet, %struct._FcFontSet* %93, i64 0, i32 0
  %97 = load i32, i32* %96, align 8
  %98 = icmp sgt i32 %97, 0
  br i1 %98, label %99, label %213

99:                                               ; preds = %95
  %100 = getelementptr inbounds %struct._FcFontSet, %struct._FcFontSet* %93, i64 0, i32 2
  br label %101

101:                                              ; preds = %99, %206
  %102 = phi i64 [ 0, %99 ], [ %209, %206 ]
  %103 = phi %struct._FcSortNode* [ %90, %99 ], [ %207, %206 ]
  %104 = phi %struct._FcSortNode** [ %91, %99 ], [ %208, %206 ]
  %105 = load i32, i32* @FcDebugVal, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %114, label %108

108:                                              ; preds = %101
  %109 = trunc i64 %102 to i32
  %110 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 %109)
  %111 = load %struct._FcPattern**, %struct._FcPattern*** %100, align 8
  %112 = getelementptr inbounds %struct._FcPattern*, %struct._FcPattern** %111, i64 %102
  %113 = load %struct._FcPattern*, %struct._FcPattern** %112, align 8
  call void @IA__FcPatternPrint(%struct._FcPattern* %113) #12
  br label %114

114:                                              ; preds = %101, %108
  %115 = load %struct._FcPattern**, %struct._FcPattern*** %100, align 8
  %116 = getelementptr inbounds %struct._FcPattern*, %struct._FcPattern** %115, i64 %102
  %117 = load %struct._FcPattern*, %struct._FcPattern** %116, align 8
  %118 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %103, i64 0, i32 0
  store %struct._FcPattern* %117, %struct._FcPattern** %118, align 8
  %119 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %103, i64 0, i32 1, i64 0
  %120 = call fastcc i32 @FcCompare(%struct._FcPattern* %3, %struct._FcPattern* %117, double* %119, i32* %6)
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %388, label %122

122:                                              ; preds = %114
  %123 = load i32, i32* @FcDebugVal, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %206, label %126

126:                                              ; preds = %122
  %127 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0))
  %128 = load double, double* %119, align 8
  %129 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %128)
  %130 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %103, i64 0, i32 1, i64 1
  %131 = load double, double* %130, align 8
  %132 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %131)
  %133 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %103, i64 0, i32 1, i64 2
  %134 = load double, double* %133, align 8
  %135 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %134)
  %136 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %103, i64 0, i32 1, i64 3
  %137 = load double, double* %136, align 8
  %138 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %137)
  %139 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %103, i64 0, i32 1, i64 4
  %140 = load double, double* %139, align 8
  %141 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %140)
  %142 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %103, i64 0, i32 1, i64 5
  %143 = load double, double* %142, align 8
  %144 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %143)
  %145 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %103, i64 0, i32 1, i64 6
  %146 = load double, double* %145, align 8
  %147 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %146)
  %148 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %103, i64 0, i32 1, i64 7
  %149 = load double, double* %148, align 8
  %150 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %149)
  %151 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %103, i64 0, i32 1, i64 8
  %152 = load double, double* %151, align 8
  %153 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %152)
  %154 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %103, i64 0, i32 1, i64 9
  %155 = load double, double* %154, align 8
  %156 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %155)
  %157 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %103, i64 0, i32 1, i64 10
  %158 = load double, double* %157, align 8
  %159 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %158)
  %160 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %103, i64 0, i32 1, i64 11
  %161 = load double, double* %160, align 8
  %162 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %161)
  %163 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %103, i64 0, i32 1, i64 12
  %164 = load double, double* %163, align 8
  %165 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %164)
  %166 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %103, i64 0, i32 1, i64 13
  %167 = load double, double* %166, align 8
  %168 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %167)
  %169 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %103, i64 0, i32 1, i64 14
  %170 = load double, double* %169, align 8
  %171 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %170)
  %172 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %103, i64 0, i32 1, i64 15
  %173 = load double, double* %172, align 8
  %174 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %173)
  %175 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %103, i64 0, i32 1, i64 16
  %176 = load double, double* %175, align 8
  %177 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %176)
  %178 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %103, i64 0, i32 1, i64 17
  %179 = load double, double* %178, align 8
  %180 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %179)
  %181 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %103, i64 0, i32 1, i64 18
  %182 = load double, double* %181, align 8
  %183 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %182)
  %184 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %103, i64 0, i32 1, i64 19
  %185 = load double, double* %184, align 8
  %186 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %185)
  %187 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %103, i64 0, i32 1, i64 20
  %188 = load double, double* %187, align 8
  %189 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %188)
  %190 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %103, i64 0, i32 1, i64 21
  %191 = load double, double* %190, align 8
  %192 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %191)
  %193 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %103, i64 0, i32 1, i64 22
  %194 = load double, double* %193, align 8
  %195 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %194)
  %196 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %103, i64 0, i32 1, i64 23
  %197 = load double, double* %196, align 8
  %198 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %197)
  %199 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %103, i64 0, i32 1, i64 24
  %200 = load double, double* %199, align 8
  %201 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %200)
  %202 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %103, i64 0, i32 1, i64 25
  %203 = load double, double* %202, align 8
  %204 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), double %203)
  %205 = call i32 @putchar(i32 10)
  br label %206

206:                                              ; preds = %122, %126
  store %struct._FcSortNode* %103, %struct._FcSortNode** %104, align 8
  %207 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %103, i64 1
  %208 = getelementptr inbounds %struct._FcSortNode*, %struct._FcSortNode** %104, i64 1
  %209 = add nuw nsw i64 %102, 1
  %210 = load i32, i32* %96, align 8
  %211 = sext i32 %210 to i64
  %212 = icmp slt i64 %209, %211
  br i1 %212, label %101, label %213

213:                                              ; preds = %206, %95, %88
  %214 = phi %struct._FcSortNode** [ %91, %88 ], [ %91, %95 ], [ %208, %206 ]
  %215 = phi %struct._FcSortNode* [ %90, %88 ], [ %90, %95 ], [ %207, %206 ]
  %216 = add nuw nsw i64 %89, 1
  %217 = icmp eq i64 %216, %87
  br i1 %217, label %218, label %88

218:                                              ; preds = %213, %81
  %219 = phi %struct._FcSortNode* [ %79, %81 ], [ %215, %213 ]
  %220 = ptrtoint %struct._FcSortNode* %219 to i64
  %221 = ptrtoint i8* %78 to i64
  %222 = sub i64 %220, %221
  %223 = sdiv exact i64 %222, 216
  %224 = trunc i64 %223 to i32
  %225 = bitcast %struct._FcSortNode* %82 to i8*
  %226 = shl i64 %223, 32
  %227 = ashr exact i64 %226, 32
  call void @qsort(i8* %225, i64 %227, i64 8, i32 (i8*, i8*)* nonnull @FcSortCompare) #12
  %228 = icmp eq i32 %68, 0
  br i1 %228, label %231, label %229

229:                                              ; preds = %218
  %230 = getelementptr i8, i8* %78, i64 %74
  call void @llvm.memset.p0i8.i64(i8* align 4 %230, i8 0, i64 %76, i1 false)
  br label %231

231:                                              ; preds = %229, %218
  %232 = icmp sgt i32 %224, 0
  br i1 %232, label %233, label %304

233:                                              ; preds = %231
  %234 = bitcast %struct._FcValue* %11 to i8*
  %235 = bitcast %struct._FcValue* %12 to i8*
  %236 = bitcast i8** %13 to i8*
  %237 = bitcast i8** %14 to i8*
  %238 = and i64 %223, 4294967295
  br label %239

239:                                              ; preds = %301, %233
  %240 = phi i64 [ 0, %233 ], [ %302, %301 ]
  %241 = getelementptr inbounds %struct._FcSortNode*, %struct._FcSortNode** %83, i64 %240
  %242 = load %struct._FcSortNode*, %struct._FcSortNode** %241, align 8
  %243 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %242, i64 0, i32 1, i64 9
  %244 = load double, double* %243, align 8
  %245 = fcmp uge double %244, 2.000000e+03
  %246 = or i1 %245, %228
  br i1 %246, label %298, label %247

247:                                              ; preds = %239, %292
  %248 = phi i64 [ %293, %292 ], [ 0, %239 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %234) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %234, i8 -86, i64 16, i1 false)
  %249 = getelementptr inbounds i32, i32* %85, i64 %248
  %250 = load i32, i32* %249, align 4
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %292

252:                                              ; preds = %247
  %253 = trunc i64 %248 to i32
  %254 = call i32 @IA__FcPatternGet(%struct._FcPattern* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i32 %253, %struct._FcValue* nonnull %10) #12
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %292

256:                                              ; preds = %252
  %257 = load %struct._FcSortNode*, %struct._FcSortNode** %241, align 8
  %258 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %257, i64 0, i32 0
  %259 = load %struct._FcPattern*, %struct._FcPattern** %258, align 8
  %260 = call i32 @IA__FcPatternGet(%struct._FcPattern* %259, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i32 0, %struct._FcValue* nonnull %11) #12
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %292

262:                                              ; preds = %256
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %235) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %235, i8 -86, i64 16, i1 false)
  %263 = call double @FcCompareLang(%struct._FcValue* nonnull %10, %struct._FcValue* nonnull %11, %struct._FcValue* nonnull %12)
  %264 = fcmp oge double %263, 0.000000e+00
  %265 = fcmp olt double %263, 2.000000e+00
  %266 = and i1 %264, %265
  br i1 %266, label %268, label %267

267:                                              ; preds = %262
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %235) #12
  br label %292

268:                                              ; preds = %262
  %269 = trunc i64 %248 to i32
  %270 = and i64 %248, 4294967295
  %271 = getelementptr inbounds i32, i32* %85, i64 %270
  %272 = load i32, i32* @FcDebugVal, align 4
  %273 = and i32 %272, 2
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %295, label %275

275:                                              ; preds = %268
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %236) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %13, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %237) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %14, align 8
  %276 = load %struct._FcSortNode*, %struct._FcSortNode** %241, align 8
  %277 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %276, i64 0, i32 0
  %278 = load %struct._FcPattern*, %struct._FcPattern** %277, align 8
  %279 = call i32 @IA__FcPatternGetString(%struct._FcPattern* %278, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0), i32 0, i8** nonnull %13) #12
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %281, label %291

281:                                              ; preds = %275
  %282 = load %struct._FcSortNode*, %struct._FcSortNode** %241, align 8
  %283 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %282, i64 0, i32 0
  %284 = load %struct._FcPattern*, %struct._FcPattern** %283, align 8
  %285 = call i32 @IA__FcPatternGetString(%struct._FcPattern* %284, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), i32 0, i8** nonnull %14) #12
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %291

287:                                              ; preds = %281
  %288 = load i8*, i8** %13, align 8
  %289 = load i8*, i8** %14, align 8
  %290 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.13, i64 0, i64 0), i8* %288, i8* %289, i32 %269)
  br label %291

291:                                              ; preds = %287, %281, %275
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %237) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %236) #12
  br label %295

292:                                              ; preds = %267, %247, %256, %252
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %234) #12
  %293 = add nuw nsw i64 %248, 1
  %294 = icmp eq i64 %293, %75
  br i1 %294, label %296, label %247

295:                                              ; preds = %291, %268
  store i32 1, i32* %271, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %235) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %234) #12
  br label %301

296:                                              ; preds = %292
  %297 = load %struct._FcSortNode*, %struct._FcSortNode** %241, align 8
  br label %298

298:                                              ; preds = %296, %239
  %299 = phi %struct._FcSortNode* [ %297, %296 ], [ %242, %239 ]
  %300 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %299, i64 0, i32 1, i64 9
  store double 1.000000e+04, double* %300, align 8
  br label %301

301:                                              ; preds = %295, %298
  %302 = add nuw nsw i64 %240, 1
  %303 = icmp eq i64 %302, %238
  br i1 %303, label %304, label %239

304:                                              ; preds = %301, %231
  call void @qsort(i8* %225, i64 %227, i64 8, i32 (i8*, i8*)* nonnull @FcSortCompare) #12
  %305 = call %struct._FcFontSet* @IA__FcFontSetCreate() #12
  %306 = icmp eq %struct._FcFontSet* %305, null
  br i1 %306, label %388, label %307

307:                                              ; preds = %304
  %308 = icmp ne i32 %4, 0
  %309 = icmp ne %struct._FcCharSet** %5, null
  %310 = or i1 %308, %309
  br i1 %310, label %311, label %314

311:                                              ; preds = %307
  %312 = call %struct._FcCharSet* @IA__FcCharSetCreate() #12
  %313 = icmp eq %struct._FcCharSet* %312, null
  br i1 %313, label %387, label %314

314:                                              ; preds = %311, %307
  %315 = phi %struct._FcCharSet* [ %312, %311 ], [ null, %307 ]
  br i1 %232, label %316, label %363

316:                                              ; preds = %314
  %317 = bitcast i32* %8 to i8*
  %318 = icmp eq %struct._FcCharSet* %315, null
  %319 = bitcast %struct._FcCharSet** %9 to i8*
  br label %320

320:                                              ; preds = %360, %316
  %321 = phi i32 [ 0, %316 ], [ %361, %360 ]
  %322 = phi %struct._FcSortNode** [ %83, %316 ], [ %323, %360 ]
  %323 = getelementptr inbounds %struct._FcSortNode*, %struct._FcSortNode** %322, i64 1
  %324 = load %struct._FcSortNode*, %struct._FcSortNode** %322, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %317) #12
  store i32 0, i32* %8, align 4
  br i1 %318, label %337, label %325

325:                                              ; preds = %320
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %319) #12
  store %struct._FcCharSet* inttoptr (i64 -6148914691236517206 to %struct._FcCharSet*), %struct._FcCharSet** %9, align 8
  %326 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %324, i64 0, i32 0
  %327 = load %struct._FcPattern*, %struct._FcPattern** %326, align 8
  %328 = call i32 @IA__FcPatternGetCharSet(%struct._FcPattern* %327, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i64 0, i64 0), i32 0, %struct._FcCharSet** nonnull %9) #12
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %331, label %330

330:                                              ; preds = %325
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %319) #12
  br label %360

331:                                              ; preds = %325
  %332 = load %struct._FcCharSet*, %struct._FcCharSet** %9, align 8
  %333 = call i32 @IA__FcCharSetMerge(%struct._FcCharSet* nonnull %315, %struct._FcCharSet* %332, i32* nonnull %8) #12
  %334 = icmp eq i32 %333, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %319) #12
  br i1 %334, label %359, label %335

335:                                              ; preds = %331
  %336 = load i32, i32* %8, align 4
  br label %337

337:                                              ; preds = %335, %320
  %338 = phi i32 [ %336, %335 ], [ 0, %320 ]
  %339 = icmp ne i32 %321, 0
  %340 = and i1 %308, %339
  %341 = xor i1 %340, true
  %342 = icmp ne i32 %338, 0
  %343 = or i1 %342, %341
  br i1 %343, label %344, label %360

344:                                              ; preds = %337
  %345 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %324, i64 0, i32 0
  %346 = load %struct._FcPattern*, %struct._FcPattern** %345, align 8
  call void @IA__FcPatternReference(%struct._FcPattern* %346) #12
  %347 = load i32, i32* @FcDebugVal, align 4
  %348 = and i32 %347, 2
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %353, label %350

350:                                              ; preds = %344
  %351 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0)) #12
  %352 = load %struct._FcPattern*, %struct._FcPattern** %345, align 8
  call void @IA__FcPatternPrint(%struct._FcPattern* %352) #12
  br label %353

353:                                              ; preds = %350, %344
  %354 = load %struct._FcPattern*, %struct._FcPattern** %345, align 8
  %355 = call i32 @IA__FcFontSetAdd(%struct._FcFontSet* nonnull %305, %struct._FcPattern* %354) #12
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %357, label %360

357:                                              ; preds = %353
  %358 = load %struct._FcPattern*, %struct._FcPattern** %345, align 8
  call void @IA__FcPatternDestroy(%struct._FcPattern* %358) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %317) #12
  br label %365

359:                                              ; preds = %331
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %317) #12
  br label %368

360:                                              ; preds = %337, %353, %330
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %317) #12
  %361 = add nuw nsw i32 %321, 1
  %362 = icmp eq i32 %361, %224
  br i1 %362, label %363, label %320

363:                                              ; preds = %360, %314
  br i1 %309, label %364, label %365

364:                                              ; preds = %363
  store %struct._FcCharSet* %315, %struct._FcCharSet** %5, align 8
  br label %373

365:                                              ; preds = %363, %357
  %366 = phi i32 [ 1, %363 ], [ 0, %357 ]
  %367 = icmp eq %struct._FcCharSet* %315, null
  br i1 %367, label %370, label %368

368:                                              ; preds = %365, %359
  %369 = phi i32 [ 0, %359 ], [ %366, %365 ]
  call void @IA__FcCharSetDestroy(%struct._FcCharSet* nonnull %315) #12
  br label %370

370:                                              ; preds = %365, %368
  %371 = phi i32 [ %369, %368 ], [ %366, %365 ]
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %387, label %373

373:                                              ; preds = %364, %370
  call void @free(i8* %78) #12
  %374 = load i32, i32* @FcDebugVal, align 4
  %375 = and i32 %374, 1
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %382, label %377

377:                                              ; preds = %373
  %378 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14, i64 0, i64 0))
  %379 = getelementptr inbounds %struct._FcFontSet, %struct._FcFontSet* %305, i64 0, i32 2
  %380 = load %struct._FcPattern**, %struct._FcPattern*** %379, align 8
  %381 = load %struct._FcPattern*, %struct._FcPattern** %380, align 8
  call void @IA__FcPatternPrint(%struct._FcPattern* %381) #12
  br label %382

382:                                              ; preds = %373, %377
  %383 = getelementptr inbounds %struct._FcFontSet, %struct._FcFontSet* %305, i64 0, i32 0
  %384 = load i32, i32* %383, align 8
  %385 = icmp sgt i32 %384, 0
  br i1 %385, label %386, label %389

386:                                              ; preds = %382
  store i32 0, i32* %6, align 4
  br label %389

387:                                              ; preds = %311, %370
  call void @IA__FcFontSetDestroy(%struct._FcFontSet* nonnull %305) #12
  br label %388

388:                                              ; preds = %114, %304, %387
  call void @free(i8* %78) #12
  br label %389

389:                                              ; preds = %388, %72, %382, %386, %65
  %390 = phi %struct._FcFontSet* [ %66, %65 ], [ %305, %386 ], [ %305, %382 ], [ null, %72 ], [ null, %388 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #12
  ret %struct._FcFontSet* %390

391:                                              ; preds = %43
  %392 = getelementptr inbounds %struct._FcFontSet, %struct._FcFontSet* %47, i64 0, i32 0
  %393 = load i32, i32* %392, align 8
  %394 = add nsw i32 %393, %44
  br label %395

395:                                              ; preds = %391, %43
  %396 = phi i32 [ %394, %391 ], [ %44, %43 ]
  %397 = add nuw nsw i64 %33, 2
  %398 = add i64 %35, -2
  %399 = icmp eq i64 %398, 0
  br i1 %399, label %49, label %32
}

; Function Attrs: nofree nounwind
declare i32 @printf(i8* nocapture readonly, ...) local_unnamed_addr #3

declare hidden void @IA__FcPatternPrint(%struct._FcPattern*) local_unnamed_addr #2

declare hidden %struct._FcFontSet* @IA__FcFontSetCreate() local_unnamed_addr #2

declare hidden i32 @IA__FcPatternGet(%struct._FcPattern*, i8*, i32, %struct._FcValue*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @FcCompare(%struct._FcPattern*, %struct._FcPattern*, double*, i32* nocapture) unnamed_addr #0 {
  %5 = bitcast double* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 208, i1 false)
  %6 = getelementptr inbounds %struct._FcPattern, %struct._FcPattern* %1, i64 0, i32 0
  %7 = getelementptr inbounds %struct._FcPattern, %struct._FcPattern* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %92

10:                                               ; preds = %4
  %11 = ptrtoint %struct._FcPattern* %0 to i64
  %12 = getelementptr inbounds %struct._FcPattern, %struct._FcPattern* %0, i64 0, i32 2
  %13 = ptrtoint %struct._FcPattern* %1 to i64
  %14 = getelementptr inbounds %struct._FcPattern, %struct._FcPattern* %1, i64 0, i32 2
  br label %15

15:                                               ; preds = %10, %87
  %16 = phi i32 [ %8, %10 ], [ %88, %87 ]
  %17 = phi i32 [ 0, %10 ], [ %90, %87 ]
  %18 = phi i32 [ 0, %10 ], [ %89, %87 ]
  %19 = load i32, i32* %6, align 8
  %20 = icmp slt i32 %17, %19
  br i1 %20, label %21, label %92

21:                                               ; preds = %15
  %22 = load i64, i64* %12, align 8
  %23 = add nsw i64 %22, %11
  %24 = inttoptr i64 %23 to %struct._FcPatternElt*
  %25 = sext i32 %18 to i64
  %26 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %24, i64 %25
  %27 = load i64, i64* %14, align 8
  %28 = add nsw i64 %27, %13
  %29 = inttoptr i64 %28 to %struct._FcPatternElt*
  %30 = sext i32 %17 to i64
  %31 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %29, i64 %30
  %32 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %26, i64 0, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %31, i64 0, i32 0
  %35 = load i32, i32* %34, align 8
  %36 = sub nsw i32 %33, %35
  %37 = icmp sgt i32 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %21
  %39 = add nsw i32 %17, 1
  br label %87

40:                                               ; preds = %21
  %41 = icmp slt i32 %36, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %40
  %43 = add nsw i32 %18, 1
  br label %87

44:                                               ; preds = %40
  %45 = icmp sgt i32 %33, 51
  br i1 %45, label %57, label %46

46:                                               ; preds = %44
  %47 = sext i32 %33 to i64
  %48 = lshr i64 3871578070775690, %47
  %49 = and i64 %48, 1
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %57, label %51

51:                                               ; preds = %46
  %52 = lshr i64 632021556594805, %47
  %53 = and i64 %52, 1
  %54 = icmp eq i64 %53, 0
  %55 = getelementptr inbounds [52 x %struct._FcMatcher], [52 x %struct._FcMatcher]* @_FcMatchers, i64 0, i64 %47
  %56 = select i1 %54, %struct._FcMatcher* %55, %struct._FcMatcher* null
  br label %57

57:                                               ; preds = %51, %44, %46
  %58 = phi %struct._FcMatcher* [ null, %46 ], [ null, %44 ], [ %56, %51 ]
  %59 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %24, i64 %25, i32 1
  %60 = load %struct._FcValueList*, %struct._FcValueList** %59, align 8
  %61 = ptrtoint %struct._FcValueList* %60 to i64
  %62 = and i64 %61, 1
  %63 = icmp eq i64 %62, 0
  %64 = ptrtoint %struct._FcPatternElt* %26 to i64
  %65 = and i64 %61, -2
  %66 = add nsw i64 %65, %64
  %67 = inttoptr i64 %66 to %struct._FcValueList*
  %68 = select i1 %63, %struct._FcValueList* %60, %struct._FcValueList* %67
  %69 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %29, i64 %30, i32 1
  %70 = load %struct._FcValueList*, %struct._FcValueList** %69, align 8
  %71 = ptrtoint %struct._FcValueList* %70 to i64
  %72 = and i64 %71, 1
  %73 = icmp eq i64 %72, 0
  %74 = ptrtoint %struct._FcPatternElt* %31 to i64
  %75 = and i64 %71, -2
  %76 = add nsw i64 %75, %74
  %77 = inttoptr i64 %76 to %struct._FcValueList*
  %78 = select i1 %73, %struct._FcValueList* %70, %struct._FcValueList* %77
  %79 = tail call fastcc i32 @FcCompareValueList(i32 %33, %struct._FcMatcher* %58, %struct._FcValueList* %68, %struct._FcValueList* %78, %struct._FcValue* null, double* %2, i32* null, i32* %3)
  %80 = icmp eq i32 %79, 0
  %81 = xor i1 %80, true
  %82 = zext i1 %81 to i32
  br i1 %80, label %92, label %83

83:                                               ; preds = %57
  %84 = add nsw i32 %17, %82
  %85 = add nsw i32 %18, %82
  %86 = load i32, i32* %7, align 8
  br label %87

87:                                               ; preds = %83, %38, %42
  %88 = phi i32 [ %16, %38 ], [ %16, %42 ], [ %86, %83 ]
  %89 = phi i32 [ %18, %38 ], [ %43, %42 ], [ %85, %83 ]
  %90 = phi i32 [ %39, %38 ], [ %17, %42 ], [ %84, %83 ]
  %91 = icmp slt i32 %89, %88
  br i1 %91, label %15, label %92

92:                                               ; preds = %87, %15, %57, %4
  %93 = phi i32 [ 1, %4 ], [ 0, %57 ], [ 1, %15 ], [ 1, %87 ]
  ret i32 %93
}

; Function Attrs: nofree
declare void @qsort(i8*, i64, i64, i32 (i8*, i8*)* nocapture) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @FcSortCompare(i8* nocapture readonly, i8* nocapture readonly) #5 {
  %3 = bitcast i8* %0 to %struct._FcSortNode**
  %4 = load %struct._FcSortNode*, %struct._FcSortNode** %3, align 8
  %5 = bitcast i8* %1 to %struct._FcSortNode**
  %6 = load %struct._FcSortNode*, %struct._FcSortNode** %5, align 8
  %7 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %4, i64 0, i32 1, i64 0
  %8 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %6, i64 0, i32 1, i64 0
  %9 = load double, double* %7, align 8
  %10 = load double, double* %8, align 8
  %11 = fcmp oeq double %9, %10
  br i1 %11, label %12, label %18

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %6, i64 0, i32 1, i64 1
  %14 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %4, i64 0, i32 1, i64 1
  %15 = load double, double* %14, align 8
  %16 = load double, double* %13, align 8
  %17 = fcmp oeq double %15, %16
  br i1 %17, label %25, label %18

18:                                               ; preds = %163, %157, %151, %145, %139, %133, %127, %121, %115, %109, %103, %97, %91, %85, %79, %73, %67, %61, %55, %49, %43, %37, %31, %25, %12, %2
  %19 = phi double [ %9, %2 ], [ %15, %12 ], [ %28, %25 ], [ %34, %31 ], [ %40, %37 ], [ %46, %43 ], [ %52, %49 ], [ %58, %55 ], [ %64, %61 ], [ %70, %67 ], [ %76, %73 ], [ %82, %79 ], [ %88, %85 ], [ %94, %91 ], [ %100, %97 ], [ %106, %103 ], [ %112, %109 ], [ %118, %115 ], [ %124, %121 ], [ %130, %127 ], [ %136, %133 ], [ %142, %139 ], [ %148, %145 ], [ %154, %151 ], [ %160, %157 ], [ %166, %163 ]
  %20 = phi double [ %10, %2 ], [ %16, %12 ], [ %29, %25 ], [ %35, %31 ], [ %41, %37 ], [ %47, %43 ], [ %53, %49 ], [ %59, %55 ], [ %65, %61 ], [ %71, %67 ], [ %77, %73 ], [ %83, %79 ], [ %89, %85 ], [ %95, %91 ], [ %101, %97 ], [ %107, %103 ], [ %113, %109 ], [ %119, %115 ], [ %125, %121 ], [ %131, %127 ], [ %137, %133 ], [ %143, %139 ], [ %149, %145 ], [ %155, %151 ], [ %161, %157 ], [ %167, %163 ]
  %21 = fcmp olt double %19, %20
  %22 = fcmp ogt double %19, %20
  %23 = zext i1 %22 to i32
  %24 = select i1 %21, i32 -1, i32 %23
  ret i32 %24

25:                                               ; preds = %12
  %26 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %6, i64 0, i32 1, i64 2
  %27 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %4, i64 0, i32 1, i64 2
  %28 = load double, double* %27, align 8
  %29 = load double, double* %26, align 8
  %30 = fcmp oeq double %28, %29
  br i1 %30, label %31, label %18

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %6, i64 0, i32 1, i64 3
  %33 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %4, i64 0, i32 1, i64 3
  %34 = load double, double* %33, align 8
  %35 = load double, double* %32, align 8
  %36 = fcmp oeq double %34, %35
  br i1 %36, label %37, label %18

37:                                               ; preds = %31
  %38 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %6, i64 0, i32 1, i64 4
  %39 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %4, i64 0, i32 1, i64 4
  %40 = load double, double* %39, align 8
  %41 = load double, double* %38, align 8
  %42 = fcmp oeq double %40, %41
  br i1 %42, label %43, label %18

43:                                               ; preds = %37
  %44 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %6, i64 0, i32 1, i64 5
  %45 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %4, i64 0, i32 1, i64 5
  %46 = load double, double* %45, align 8
  %47 = load double, double* %44, align 8
  %48 = fcmp oeq double %46, %47
  br i1 %48, label %49, label %18

49:                                               ; preds = %43
  %50 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %6, i64 0, i32 1, i64 6
  %51 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %4, i64 0, i32 1, i64 6
  %52 = load double, double* %51, align 8
  %53 = load double, double* %50, align 8
  %54 = fcmp oeq double %52, %53
  br i1 %54, label %55, label %18

55:                                               ; preds = %49
  %56 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %6, i64 0, i32 1, i64 7
  %57 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %4, i64 0, i32 1, i64 7
  %58 = load double, double* %57, align 8
  %59 = load double, double* %56, align 8
  %60 = fcmp oeq double %58, %59
  br i1 %60, label %61, label %18

61:                                               ; preds = %55
  %62 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %6, i64 0, i32 1, i64 8
  %63 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %4, i64 0, i32 1, i64 8
  %64 = load double, double* %63, align 8
  %65 = load double, double* %62, align 8
  %66 = fcmp oeq double %64, %65
  br i1 %66, label %67, label %18

67:                                               ; preds = %61
  %68 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %6, i64 0, i32 1, i64 9
  %69 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %4, i64 0, i32 1, i64 9
  %70 = load double, double* %69, align 8
  %71 = load double, double* %68, align 8
  %72 = fcmp oeq double %70, %71
  br i1 %72, label %73, label %18

73:                                               ; preds = %67
  %74 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %6, i64 0, i32 1, i64 10
  %75 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %4, i64 0, i32 1, i64 10
  %76 = load double, double* %75, align 8
  %77 = load double, double* %74, align 8
  %78 = fcmp oeq double %76, %77
  br i1 %78, label %79, label %18

79:                                               ; preds = %73
  %80 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %6, i64 0, i32 1, i64 11
  %81 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %4, i64 0, i32 1, i64 11
  %82 = load double, double* %81, align 8
  %83 = load double, double* %80, align 8
  %84 = fcmp oeq double %82, %83
  br i1 %84, label %85, label %18

85:                                               ; preds = %79
  %86 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %6, i64 0, i32 1, i64 12
  %87 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %4, i64 0, i32 1, i64 12
  %88 = load double, double* %87, align 8
  %89 = load double, double* %86, align 8
  %90 = fcmp oeq double %88, %89
  br i1 %90, label %91, label %18

91:                                               ; preds = %85
  %92 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %6, i64 0, i32 1, i64 13
  %93 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %4, i64 0, i32 1, i64 13
  %94 = load double, double* %93, align 8
  %95 = load double, double* %92, align 8
  %96 = fcmp oeq double %94, %95
  br i1 %96, label %97, label %18

97:                                               ; preds = %91
  %98 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %6, i64 0, i32 1, i64 14
  %99 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %4, i64 0, i32 1, i64 14
  %100 = load double, double* %99, align 8
  %101 = load double, double* %98, align 8
  %102 = fcmp oeq double %100, %101
  br i1 %102, label %103, label %18

103:                                              ; preds = %97
  %104 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %6, i64 0, i32 1, i64 15
  %105 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %4, i64 0, i32 1, i64 15
  %106 = load double, double* %105, align 8
  %107 = load double, double* %104, align 8
  %108 = fcmp oeq double %106, %107
  br i1 %108, label %109, label %18

109:                                              ; preds = %103
  %110 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %6, i64 0, i32 1, i64 16
  %111 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %4, i64 0, i32 1, i64 16
  %112 = load double, double* %111, align 8
  %113 = load double, double* %110, align 8
  %114 = fcmp oeq double %112, %113
  br i1 %114, label %115, label %18

115:                                              ; preds = %109
  %116 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %6, i64 0, i32 1, i64 17
  %117 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %4, i64 0, i32 1, i64 17
  %118 = load double, double* %117, align 8
  %119 = load double, double* %116, align 8
  %120 = fcmp oeq double %118, %119
  br i1 %120, label %121, label %18

121:                                              ; preds = %115
  %122 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %6, i64 0, i32 1, i64 18
  %123 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %4, i64 0, i32 1, i64 18
  %124 = load double, double* %123, align 8
  %125 = load double, double* %122, align 8
  %126 = fcmp oeq double %124, %125
  br i1 %126, label %127, label %18

127:                                              ; preds = %121
  %128 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %6, i64 0, i32 1, i64 19
  %129 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %4, i64 0, i32 1, i64 19
  %130 = load double, double* %129, align 8
  %131 = load double, double* %128, align 8
  %132 = fcmp oeq double %130, %131
  br i1 %132, label %133, label %18

133:                                              ; preds = %127
  %134 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %6, i64 0, i32 1, i64 20
  %135 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %4, i64 0, i32 1, i64 20
  %136 = load double, double* %135, align 8
  %137 = load double, double* %134, align 8
  %138 = fcmp oeq double %136, %137
  br i1 %138, label %139, label %18

139:                                              ; preds = %133
  %140 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %6, i64 0, i32 1, i64 21
  %141 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %4, i64 0, i32 1, i64 21
  %142 = load double, double* %141, align 8
  %143 = load double, double* %140, align 8
  %144 = fcmp oeq double %142, %143
  br i1 %144, label %145, label %18

145:                                              ; preds = %139
  %146 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %6, i64 0, i32 1, i64 22
  %147 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %4, i64 0, i32 1, i64 22
  %148 = load double, double* %147, align 8
  %149 = load double, double* %146, align 8
  %150 = fcmp oeq double %148, %149
  br i1 %150, label %151, label %18

151:                                              ; preds = %145
  %152 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %6, i64 0, i32 1, i64 23
  %153 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %4, i64 0, i32 1, i64 23
  %154 = load double, double* %153, align 8
  %155 = load double, double* %152, align 8
  %156 = fcmp oeq double %154, %155
  br i1 %156, label %157, label %18

157:                                              ; preds = %151
  %158 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %6, i64 0, i32 1, i64 24
  %159 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %4, i64 0, i32 1, i64 24
  %160 = load double, double* %159, align 8
  %161 = load double, double* %158, align 8
  %162 = fcmp oeq double %160, %161
  br i1 %162, label %163, label %18

163:                                              ; preds = %157
  %164 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %6, i64 0, i32 1, i64 25
  %165 = getelementptr inbounds %struct._FcSortNode, %struct._FcSortNode* %4, i64 0, i32 1, i64 25
  %166 = load double, double* %165, align 8
  %167 = load double, double* %164, align 8
  br label %18
}

; Function Attrs: nounwind ssp uwtable
define internal double @FcCompareLang(%struct._FcValue*, %struct._FcValue*, %struct._FcValue* nocapture) #0 {
  %4 = tail call { i32, i8* } @FcValueCanonicalize(%struct._FcValue* %0) #12
  %5 = extractvalue { i32, i8* } %4, 0
  %6 = extractvalue { i32, i8* } %4, 1
  %7 = tail call { i32, i8* } @FcValueCanonicalize(%struct._FcValue* %1) #12
  %8 = extractvalue { i32, i8* } %7, 0
  %9 = extractvalue { i32, i8* } %7, 1
  switch i32 %5, label %35 [
    i32 8, label %10
    i32 3, label %18
  ]

10:                                               ; preds = %3
  switch i32 %8, label %35 [
    i32 8, label %11
    i32 3, label %15
  ]

11:                                               ; preds = %10
  %12 = bitcast i8* %6 to %struct._FcLangSet*
  %13 = bitcast i8* %9 to %struct._FcLangSet*
  %14 = tail call i32 @IA__FcLangSetCompare(%struct._FcLangSet* %12, %struct._FcLangSet* %13) #12
  br label %24

15:                                               ; preds = %10
  %16 = bitcast i8* %6 to %struct._FcLangSet*
  %17 = tail call i32 @IA__FcLangSetHasLang(%struct._FcLangSet* %16, i8* %9) #12
  br label %24

18:                                               ; preds = %3
  switch i32 %8, label %35 [
    i32 8, label %19
    i32 3, label %22
  ]

19:                                               ; preds = %18
  %20 = bitcast i8* %9 to %struct._FcLangSet*
  %21 = tail call i32 @IA__FcLangSetHasLang(%struct._FcLangSet* %20, i8* %6) #12
  br label %24

22:                                               ; preds = %18
  %23 = tail call i32 @FcLangCompare(i8* %6, i8* %9) #12
  br label %24

24:                                               ; preds = %19, %22, %11, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %19 ], [ %17, %15 ], [ %14, %11 ]
  %26 = tail call { i32, i8* } @FcValueCanonicalize(%struct._FcValue* %1) #12
  %27 = extractvalue { i32, i8* } %26, 0
  %28 = extractvalue { i32, i8* } %26, 1
  %29 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %2, i64 0, i32 0
  store i32 %27, i32* %29, align 8
  %30 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %2, i64 0, i32 1, i32 0
  store i8* %28, i8** %30, align 8
  %31 = icmp eq i32 %25, 1
  %32 = select i1 %31, double 1.000000e+00, double 2.000000e+00
  %33 = icmp eq i32 %25, 0
  %34 = select i1 %33, double 0.000000e+00, double %32
  br label %35

35:                                               ; preds = %24, %3, %18, %10
  %36 = phi double [ -1.000000e+00, %10 ], [ -1.000000e+00, %18 ], [ -1.000000e+00, %3 ], [ %34, %24 ]
  ret double %36
}

declare hidden i32 @IA__FcPatternGetString(%struct._FcPattern*, i8*, i32, i8**) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %struct._FcFontSet* @IA__FcFontSort(%struct._FcConfig*, %struct._FcPattern*, i32, %struct._FcCharSet**, i32*) #0 {
  %6 = alloca [2 x %struct._FcFontSet*], align 16
  %7 = bitcast [2 x %struct._FcFontSet*]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = getelementptr inbounds [2 x %struct._FcFontSet*], [2 x %struct._FcFontSet*]* %6, i64 0, i64 0
  %9 = bitcast [2 x %struct._FcFontSet*]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 -86, i64 16, i1 false)
  store i32 1, i32* %4, align 4
  %10 = tail call %struct._FcConfig* @IA__FcConfigReference(%struct._FcConfig* %0) #12
  %11 = icmp eq %struct._FcConfig* %10, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %struct._FcConfig, %struct._FcConfig* %10, i64 0, i32 11, i64 0
  %14 = load %struct._FcFontSet*, %struct._FcFontSet** %13, align 8
  %15 = icmp eq %struct._FcFontSet* %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %12
  store %struct._FcFontSet* %14, %struct._FcFontSet** %8, align 16
  br label %17

17:                                               ; preds = %12, %16
  %18 = phi i32 [ 1, %16 ], [ 0, %12 ]
  %19 = getelementptr inbounds %struct._FcConfig, %struct._FcConfig* %10, i64 0, i32 11, i64 1
  %20 = load %struct._FcFontSet*, %struct._FcFontSet** %19, align 8
  %21 = icmp eq %struct._FcFontSet* %20, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %17
  %23 = add nuw nsw i32 %18, 1
  %24 = zext i32 %18 to i64
  %25 = getelementptr inbounds [2 x %struct._FcFontSet*], [2 x %struct._FcFontSet*]* %6, i64 0, i64 %24
  store %struct._FcFontSet* %20, %struct._FcFontSet** %25, align 8
  br label %26

26:                                               ; preds = %17, %22
  %27 = phi i32 [ %23, %22 ], [ %18, %17 ]
  %28 = call %struct._FcFontSet* @IA__FcFontSetSort(%struct._FcConfig* undef, %struct._FcFontSet** nonnull %8, i32 %27, %struct._FcPattern* %1, i32 %2, %struct._FcCharSet** %3, i32* %4)
  tail call void @IA__FcConfigDestroy(%struct._FcConfig* nonnull %10) #12
  br label %29

29:                                               ; preds = %5, %26
  %30 = phi %struct._FcFontSet* [ %28, %26 ], [ null, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  ret %struct._FcFontSet* %30
}

; Function Attrs: nounwind ssp uwtable
define internal double @FcCompareFamily(%struct._FcValue*, %struct._FcValue*, %struct._FcValue* nocapture) #0 {
  %4 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %0, i64 0, i32 1, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = ptrtoint i8* %5 to i64
  %7 = and i64 %6, 1
  %8 = icmp eq i64 %7, 0
  %9 = ptrtoint %struct._FcValue* %0 to i64
  %10 = and i64 %6, -2
  %11 = add nsw i64 %10, %9
  %12 = inttoptr i64 %11 to i8*
  %13 = select i1 %8, i8* %5, i8* %12
  %14 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %1, i64 0, i32 1, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = ptrtoint i8* %15 to i64
  %17 = and i64 %16, 1
  %18 = icmp eq i64 %17, 0
  %19 = ptrtoint %struct._FcValue* %1 to i64
  %20 = and i64 %16, -2
  %21 = add nsw i64 %20, %19
  %22 = inttoptr i64 %21 to i8*
  %23 = select i1 %18, i8* %15, i8* %22
  %24 = tail call { i32, i8* } @FcValueCanonicalize(%struct._FcValue* %1) #12
  %25 = extractvalue { i32, i8* } %24, 0
  %26 = extractvalue { i32, i8* } %24, 1
  %27 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %2, i64 0, i32 0
  store i32 %25, i32* %27, align 8
  %28 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %2, i64 0, i32 1, i32 0
  store i8* %26, i8** %28, align 8
  %29 = load i8, i8* %13, align 1
  %30 = zext i8 %29 to i32
  %31 = add i8 %29, -65
  %32 = icmp ult i8 %31, 26
  %33 = add nuw nsw i32 %30, 32
  %34 = select i1 %32, i32 %33, i32 %30
  %35 = load i8, i8* %23, align 1
  %36 = zext i8 %35 to i32
  %37 = add i8 %35, -65
  %38 = icmp ult i8 %37, 26
  %39 = add nuw nsw i32 %36, 32
  %40 = select i1 %38, i32 %39, i32 %36
  %41 = icmp eq i32 %34, %40
  %42 = icmp eq i8 %29, 32
  %43 = or i1 %42, %41
  %44 = icmp eq i8 %35, 32
  %45 = or i1 %44, %43
  br i1 %45, label %46, label %50

46:                                               ; preds = %3
  %47 = tail call i32 @FcStrCmpIgnoreBlanksAndCase(i8* %13, i8* %23) #12
  %48 = icmp ne i32 %47, 0
  %49 = uitofp i1 %48 to double
  br label %50

50:                                               ; preds = %3, %46
  %51 = phi double [ %49, %46 ], [ 1.000000e+00, %3 ]
  ret double %51
}

; Function Attrs: nounwind ssp uwtable
define internal double @FcCompareString(%struct._FcValue*, %struct._FcValue*, %struct._FcValue* nocapture) #0 {
  %4 = tail call { i32, i8* } @FcValueCanonicalize(%struct._FcValue* %1) #12
  %5 = extractvalue { i32, i8* } %4, 0
  %6 = extractvalue { i32, i8* } %4, 1
  %7 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %2, i64 0, i32 0
  store i32 %5, i32* %7, align 8
  %8 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %2, i64 0, i32 1, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %0, i64 0, i32 1, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  %14 = ptrtoint %struct._FcValue* %0 to i64
  %15 = and i64 %11, -2
  %16 = add nsw i64 %15, %14
  %17 = inttoptr i64 %16 to i8*
  %18 = select i1 %13, i8* %10, i8* %17
  %19 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %1, i64 0, i32 1, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = ptrtoint i8* %20 to i64
  %22 = and i64 %21, 1
  %23 = icmp eq i64 %22, 0
  %24 = ptrtoint %struct._FcValue* %1 to i64
  %25 = and i64 %21, -2
  %26 = add nsw i64 %25, %24
  %27 = inttoptr i64 %26 to i8*
  %28 = select i1 %23, i8* %20, i8* %27
  %29 = tail call i32 @IA__FcStrCmpIgnoreCase(i8* %18, i8* %28) #12
  %30 = icmp ne i32 %29, 0
  %31 = uitofp i1 %30 to double
  ret double %31
}

; Function Attrs: nounwind ssp uwtable
define internal double @FcCompareNumber(%struct._FcValue* nocapture readonly, %struct._FcValue*, %struct._FcValue* nocapture) #0 {
  %4 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %39 [
    i32 1, label %6
    i32 2, label %11
  ]

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %0, i64 0, i32 1
  %8 = bitcast %union.anon.0* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = sitofp i32 %9 to double
  br label %15

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %0, i64 0, i32 1
  %13 = bitcast %union.anon.0* %12 to double*
  %14 = load double, double* %13, align 8
  br label %15

15:                                               ; preds = %11, %6
  %16 = phi double [ %14, %11 ], [ %10, %6 ]
  %17 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %1, i64 0, i32 0
  %18 = load i32, i32* %17, align 8
  switch i32 %18, label %39 [
    i32 1, label %19
    i32 2, label %24
  ]

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %1, i64 0, i32 1
  %21 = bitcast %union.anon.0* %20 to i32*
  %22 = load i32, i32* %21, align 8
  %23 = sitofp i32 %22 to double
  br label %28

24:                                               ; preds = %15
  %25 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %1, i64 0, i32 1
  %26 = bitcast %union.anon.0* %25 to double*
  %27 = load double, double* %26, align 8
  br label %28

28:                                               ; preds = %24, %19
  %29 = phi double [ %27, %24 ], [ %23, %19 ]
  %30 = fsub double %29, %16
  %31 = fcmp olt double %30, 0.000000e+00
  %32 = fsub double -0.000000e+00, %30
  %33 = select i1 %31, double %32, double %30
  %34 = tail call { i32, i8* } @FcValueCanonicalize(%struct._FcValue* %1) #12
  %35 = extractvalue { i32, i8* } %34, 0
  %36 = extractvalue { i32, i8* } %34, 1
  %37 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %2, i64 0, i32 0
  store i32 %35, i32* %37, align 8
  %38 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %2, i64 0, i32 1, i32 0
  store i8* %36, i8** %38, align 8
  br label %39

39:                                               ; preds = %15, %3, %28
  %40 = phi double [ %33, %28 ], [ -1.000000e+00, %3 ], [ -1.000000e+00, %15 ]
  ret double %40
}

; Function Attrs: nounwind ssp uwtable
define internal double @FcCompareRange(%struct._FcValue*, %struct._FcValue*, %struct._FcValue* nocapture) #0 {
  %4 = tail call { i32, i8* } @FcValueCanonicalize(%struct._FcValue* %0) #12
  %5 = extractvalue { i32, i8* } %4, 0
  %6 = extractvalue { i32, i8* } %4, 1
  %7 = tail call { i32, i8* } @FcValueCanonicalize(%struct._FcValue* %1) #12
  %8 = extractvalue { i32, i8* } %7, 0
  %9 = extractvalue { i32, i8* } %7, 1
  %10 = ptrtoint i8* %6 to i64
  %11 = bitcast i64 %10 to double
  %12 = ptrtoint i8* %9 to i64
  %13 = bitcast i64 %12 to double
  %14 = trunc i64 %12 to i32
  switch i32 %5, label %66 [
    i32 1, label %15
    i32 2, label %24
    i32 9, label %18
  ]

15:                                               ; preds = %3
  %16 = trunc i64 %10 to i32
  %17 = sitofp i32 %16 to double
  br label %24

18:                                               ; preds = %3
  %19 = bitcast i8* %6 to double*
  %20 = load double, double* %19, align 8
  %21 = getelementptr inbounds i8, i8* %6, i64 8
  %22 = bitcast i8* %21 to double*
  %23 = load double, double* %22, align 8
  br label %24

24:                                               ; preds = %3, %18, %15
  %25 = phi double [ %20, %18 ], [ %17, %15 ], [ %11, %3 ]
  %26 = phi double [ %23, %18 ], [ %17, %15 ], [ %11, %3 ]
  switch i32 %8, label %66 [
    i32 1, label %27
    i32 2, label %35
    i32 9, label %29
  ]

27:                                               ; preds = %24
  %28 = sitofp i32 %14 to double
  br label %35

29:                                               ; preds = %24
  %30 = bitcast i8* %9 to double*
  %31 = load double, double* %30, align 8
  %32 = getelementptr inbounds i8, i8* %9, i64 8
  %33 = bitcast i8* %32 to double*
  %34 = load double, double* %33, align 8
  br label %35

35:                                               ; preds = %24, %29, %27
  %36 = phi double [ %31, %29 ], [ %28, %27 ], [ %13, %24 ]
  %37 = phi double [ %34, %29 ], [ %28, %27 ], [ %13, %24 ]
  %38 = fcmp olt double %26, %36
  br i1 %38, label %51, label %39

39:                                               ; preds = %35
  %40 = fcmp olt double %37, %25
  br i1 %40, label %51, label %41

41:                                               ; preds = %39
  %42 = fcmp ogt double %25, %36
  %43 = select i1 %42, double %25, double %36
  %44 = fcmp olt double %26, %37
  %45 = select i1 %44, double %26, double %37
  %46 = fadd double %43, %45
  %47 = fmul double %46, 5.000000e-01
  %48 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %2, i64 0, i32 0
  store i32 2, i32* %48, align 8
  %49 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %2, i64 0, i32 1
  %50 = bitcast %union.anon.0* %49 to double*
  store double %47, double* %50, align 8
  br label %66

51:                                               ; preds = %35, %39
  %52 = phi double [ %37, %39 ], [ %36, %35 ]
  %53 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %2, i64 0, i32 0
  store i32 2, i32* %53, align 8
  %54 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %2, i64 0, i32 1
  %55 = bitcast %union.anon.0* %54 to double*
  store double %52, double* %55, align 8
  %56 = insertelement <2 x double> undef, double %36, i32 0
  %57 = insertelement <2 x double> %56, double %25, i32 1
  %58 = insertelement <2 x double> undef, double %26, i32 0
  %59 = insertelement <2 x double> %58, double %37, i32 1
  %60 = fsub <2 x double> %57, %59
  %61 = call <2 x double> @llvm.fabs.v2f64(<2 x double> %60)
  %62 = extractelement <2 x double> %61, i32 0
  %63 = extractelement <2 x double> %61, i32 1
  %64 = fcmp olt double %62, %63
  %65 = select i1 %64, double %62, double %63
  br label %66

66:                                               ; preds = %41, %24, %3, %51
  %67 = phi double [ %65, %51 ], [ -1.000000e+00, %3 ], [ -1.000000e+00, %24 ], [ 0.000000e+00, %41 ]
  ret double %67
}

; Function Attrs: nounwind ssp uwtable
define internal double @FcCompareSize(%struct._FcValue*, %struct._FcValue*, %struct._FcValue* nocapture) #0 {
  %4 = tail call { i32, i8* } @FcValueCanonicalize(%struct._FcValue* %0) #12
  %5 = extractvalue { i32, i8* } %4, 0
  %6 = extractvalue { i32, i8* } %4, 1
  %7 = tail call { i32, i8* } @FcValueCanonicalize(%struct._FcValue* %1) #12
  %8 = extractvalue { i32, i8* } %7, 0
  %9 = extractvalue { i32, i8* } %7, 1
  %10 = ptrtoint i8* %6 to i64
  %11 = ptrtoint i8* %9 to i64
  %12 = bitcast i64 %11 to double
  %13 = trunc i64 %11 to i32
  switch i32 %5, label %57 [
    i32 1, label %14
    i32 2, label %17
    i32 9, label %19
  ]

14:                                               ; preds = %3
  %15 = trunc i64 %10 to i32
  %16 = sitofp i32 %15 to double
  br label %20

17:                                               ; preds = %3
  %18 = bitcast i64 %10 to double
  br label %20

19:                                               ; preds = %3
  tail call void @abort() #14
  unreachable

20:                                               ; preds = %17, %14
  %21 = phi double [ %18, %17 ], [ %16, %14 ]
  switch i32 %8, label %57 [
    i32 1, label %22
    i32 2, label %30
    i32 9, label %24
  ]

22:                                               ; preds = %20
  %23 = sitofp i32 %13 to double
  br label %30

24:                                               ; preds = %20
  %25 = bitcast i8* %9 to double*
  %26 = load double, double* %25, align 8
  %27 = getelementptr inbounds i8, i8* %9, i64 8
  %28 = bitcast i8* %27 to double*
  %29 = load double, double* %28, align 8
  br label %30

30:                                               ; preds = %20, %24, %22
  %31 = phi double [ %26, %24 ], [ %23, %22 ], [ %12, %20 ]
  %32 = phi double [ %29, %24 ], [ %23, %22 ], [ %12, %20 ]
  %33 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %2, i64 0, i32 0
  store i32 2, i32* %33, align 8
  %34 = fadd double %21, %21
  %35 = fmul double %34, 5.000000e-01
  %36 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %2, i64 0, i32 1
  %37 = bitcast %union.anon.0* %36 to double*
  store double %35, double* %37, align 8
  %38 = fcmp olt double %21, %31
  %39 = fcmp olt double %32, %21
  %40 = or i1 %38, %39
  br i1 %40, label %41, label %52

41:                                               ; preds = %30
  %42 = insertelement <2 x double> undef, double %31, i32 0
  %43 = insertelement <2 x double> %42, double %21, i32 1
  %44 = insertelement <2 x double> undef, double %21, i32 0
  %45 = insertelement <2 x double> %44, double %32, i32 1
  %46 = fsub <2 x double> %43, %45
  %47 = call <2 x double> @llvm.fabs.v2f64(<2 x double> %46)
  %48 = extractelement <2 x double> %47, i32 0
  %49 = extractelement <2 x double> %47, i32 1
  %50 = fcmp olt double %48, %49
  %51 = select i1 %50, double %48, double %49
  br label %57

52:                                               ; preds = %30
  %53 = fcmp une double %31, %32
  %54 = fcmp oeq double %21, %32
  %55 = and i1 %53, %54
  %56 = select i1 %55, double 1.000000e-15, double 0.000000e+00
  br label %57

57:                                               ; preds = %52, %20, %3, %41
  %58 = phi double [ %51, %41 ], [ -1.000000e+00, %3 ], [ -1.000000e+00, %20 ], [ %56, %52 ]
  ret double %58
}

; Function Attrs: nounwind ssp uwtable
define internal double @FcCompareBool(%struct._FcValue*, %struct._FcValue*, %struct._FcValue* nocapture) #0 {
  %4 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 4
  br i1 %6, label %7, label %29

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 4
  br i1 %10, label %11, label %29

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %1, i64 0, i32 1
  %13 = bitcast %union.anon.0* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 2
  %16 = select i1 %15, %struct._FcValue* %0, %struct._FcValue* %1
  %17 = tail call { i32, i8* } @FcValueCanonicalize(%struct._FcValue* %16) #12
  %18 = extractvalue { i32, i8* } %17, 0
  %19 = extractvalue { i32, i8* } %17, 1
  %20 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %2, i64 0, i32 0
  store i32 %18, i32* %20, align 8
  %21 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %2, i64 0, i32 1, i32 0
  store i8* %19, i8** %21, align 8
  %22 = load i32, i32* %13, align 8
  %23 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %0, i64 0, i32 1
  %24 = bitcast %union.anon.0* %23 to i32*
  %25 = load i32, i32* %24, align 8
  %26 = xor i32 %25, %22
  %27 = icmp eq i32 %26, 1
  %28 = uitofp i1 %27 to double
  br label %29

29:                                               ; preds = %3, %7, %11
  %30 = phi double [ %28, %11 ], [ -1.000000e+00, %7 ], [ -1.000000e+00, %3 ]
  ret double %30
}

; Function Attrs: nounwind ssp uwtable
define internal double @FcCompareFilename(%struct._FcValue*, %struct._FcValue*, %struct._FcValue* nocapture) #0 {
  %4 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %0, i64 0, i32 1, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = ptrtoint i8* %5 to i64
  %7 = and i64 %6, 1
  %8 = icmp eq i64 %7, 0
  %9 = ptrtoint %struct._FcValue* %0 to i64
  %10 = and i64 %6, -2
  %11 = add nsw i64 %10, %9
  %12 = inttoptr i64 %11 to i8*
  %13 = select i1 %8, i8* %5, i8* %12
  %14 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %1, i64 0, i32 1, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = ptrtoint i8* %15 to i64
  %17 = and i64 %16, 1
  %18 = icmp eq i64 %17, 0
  %19 = ptrtoint %struct._FcValue* %1 to i64
  %20 = and i64 %16, -2
  %21 = add nsw i64 %20, %19
  %22 = inttoptr i64 %21 to i8*
  %23 = select i1 %18, i8* %15, i8* %22
  %24 = tail call { i32, i8* } @FcValueCanonicalize(%struct._FcValue* %1) #12
  %25 = extractvalue { i32, i8* } %24, 0
  %26 = extractvalue { i32, i8* } %24, 1
  %27 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %2, i64 0, i32 0
  store i32 %25, i32* %27, align 8
  %28 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %2, i64 0, i32 1, i32 0
  store i8* %26, i8** %28, align 8
  %29 = tail call i32 @IA__FcStrCmp(i8* %13, i8* %23) #12
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %3
  %32 = tail call i32 @IA__FcStrCmpIgnoreCase(i8* %13, i8* %23) #12
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %31
  %35 = tail call i32 @FcStrGlobMatch(i8* %13, i8* %23) #12
  %36 = icmp eq i32 %35, 0
  %37 = select i1 %36, double 3.000000e+00, double 2.000000e+00
  br label %38

38:                                               ; preds = %34, %31, %3
  %39 = phi double [ 0.000000e+00, %3 ], [ 1.000000e+00, %31 ], [ %37, %34 ]
  ret double %39
}

; Function Attrs: nounwind ssp uwtable
define internal double @FcCompareCharSet(%struct._FcValue*, %struct._FcValue*, %struct._FcValue* nocapture) #0 {
  %4 = tail call { i32, i8* } @FcValueCanonicalize(%struct._FcValue* %1) #12
  %5 = extractvalue { i32, i8* } %4, 0
  %6 = extractvalue { i32, i8* } %4, 1
  %7 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %2, i64 0, i32 0
  store i32 %5, i32* %7, align 8
  %8 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %2, i64 0, i32 1, i32 0
  store i8* %6, i8** %8, align 8
  %9 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %0, i64 0, i32 1
  %10 = bitcast %union.anon.0* %9 to %struct._FcCharSet**
  %11 = load %struct._FcCharSet*, %struct._FcCharSet** %10, align 8
  %12 = ptrtoint %struct._FcCharSet* %11 to i64
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  %15 = ptrtoint %struct._FcValue* %0 to i64
  %16 = and i64 %12, -2
  %17 = add nsw i64 %16, %15
  %18 = inttoptr i64 %17 to %struct._FcCharSet*
  %19 = select i1 %14, %struct._FcCharSet* %11, %struct._FcCharSet* %18
  %20 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %1, i64 0, i32 1
  %21 = bitcast %union.anon.0* %20 to %struct._FcCharSet**
  %22 = load %struct._FcCharSet*, %struct._FcCharSet** %21, align 8
  %23 = ptrtoint %struct._FcCharSet* %22 to i64
  %24 = and i64 %23, 1
  %25 = icmp eq i64 %24, 0
  %26 = ptrtoint %struct._FcValue* %1 to i64
  %27 = and i64 %23, -2
  %28 = add nsw i64 %27, %26
  %29 = inttoptr i64 %28 to %struct._FcCharSet*
  %30 = select i1 %25, %struct._FcCharSet* %22, %struct._FcCharSet* %29
  %31 = tail call i32 @IA__FcCharSetSubtractCount(%struct._FcCharSet* %19, %struct._FcCharSet* %30) #12
  %32 = uitofp i32 %31 to double
  ret double %32
}

; Function Attrs: nounwind ssp uwtable
define internal double @FcComparePostScript(%struct._FcValue*, %struct._FcValue*, %struct._FcValue* nocapture) #0 {
  %4 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %0, i64 0, i32 1, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = ptrtoint i8* %5 to i64
  %7 = and i64 %6, 1
  %8 = icmp eq i64 %7, 0
  %9 = ptrtoint %struct._FcValue* %0 to i64
  %10 = and i64 %6, -2
  %11 = add nsw i64 %10, %9
  %12 = inttoptr i64 %11 to i8*
  %13 = select i1 %8, i8* %5, i8* %12
  %14 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %1, i64 0, i32 1, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = ptrtoint i8* %15 to i64
  %17 = and i64 %16, 1
  %18 = icmp eq i64 %17, 0
  %19 = ptrtoint %struct._FcValue* %1 to i64
  %20 = and i64 %16, -2
  %21 = add nsw i64 %20, %19
  %22 = inttoptr i64 %21 to i8*
  %23 = select i1 %18, i8* %15, i8* %22
  %24 = tail call { i32, i8* } @FcValueCanonicalize(%struct._FcValue* %1) #12
  %25 = extractvalue { i32, i8* } %24, 0
  %26 = extractvalue { i32, i8* } %24, 1
  %27 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %2, i64 0, i32 0
  store i32 %25, i32* %27, align 8
  %28 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %2, i64 0, i32 1, i32 0
  store i8* %26, i8** %28, align 8
  %29 = load i8, i8* %13, align 1
  %30 = zext i8 %29 to i32
  %31 = add i8 %29, -65
  %32 = icmp ult i8 %31, 26
  %33 = add nuw nsw i32 %30, 32
  %34 = select i1 %32, i32 %33, i32 %30
  %35 = load i8, i8* %23, align 1
  %36 = zext i8 %35 to i32
  %37 = add i8 %35, -65
  %38 = icmp ult i8 %37, 26
  %39 = add nuw nsw i32 %36, 32
  %40 = select i1 %38, i32 %39, i32 %36
  %41 = icmp eq i32 %34, %40
  %42 = icmp eq i8 %29, 32
  %43 = or i1 %42, %41
  %44 = icmp eq i8 %35, 32
  %45 = or i1 %44, %43
  br i1 %45, label %46, label %54

46:                                               ; preds = %3
  %47 = tail call i32 @FcStrMatchIgnoreCaseAndDelims(i8* %13, i8* %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i64 0, i64 0)) #12
  %48 = tail call i64 @strlen(i8* %13) #13
  %49 = sext i32 %47 to i64
  %50 = sub i64 %48, %49
  %51 = uitofp i64 %50 to double
  %52 = uitofp i64 %48 to double
  %53 = fdiv double %51, %52
  br label %54

54:                                               ; preds = %3, %46
  %55 = phi double [ %53, %46 ], [ 1.000000e+00, %3 ]
  ret double %55
}

declare hidden i32 @FcStrCmpIgnoreBlanksAndCase(i8*, i8*) local_unnamed_addr #2

declare hidden i32 @IA__FcStrCmpIgnoreCase(i8*, i8*) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

declare hidden i32 @IA__FcStrCmp(i8*, i8*) local_unnamed_addr #2

declare hidden i32 @FcStrGlobMatch(i8*, i8*) local_unnamed_addr #2

declare hidden i32 @IA__FcCharSetSubtractCount(%struct._FcCharSet*, %struct._FcCharSet*) local_unnamed_addr #2

declare hidden i32 @FcStrMatchIgnoreCaseAndDelims(i8*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

declare hidden i8* @FcObjectName(i32) local_unnamed_addr #2

declare hidden void @FcValueListPrint(%struct._FcValueList*) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i8* @getenv(i8* nocapture) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare noalias i8* @strdup(i8* nocapture readonly) local_unnamed_addr #3

declare hidden %struct._FcObjectSet* @IA__FcObjectSetCreate() local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i8* @strchr(i8*, i32) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare i8* @strcpy(i8* returned, i8* nocapture readonly) local_unnamed_addr #3

declare hidden i32 @FcObjectFromName(i8*) local_unnamed_addr #2

declare hidden i32 @IA__FcObjectSetAdd(%struct._FcObjectSet*, i8*) local_unnamed_addr #2

declare hidden void @FcPatternPrint2(%struct._FcPattern*, %struct._FcPattern*, %struct._FcObjectSet*) local_unnamed_addr #2

declare hidden void @IA__FcObjectSetDestroy(%struct._FcObjectSet*) local_unnamed_addr #2

declare hidden i32 @IA__FcLangSetCompare(%struct._FcLangSet*, %struct._FcLangSet*) local_unnamed_addr #2

declare hidden i32 @IA__FcLangSetHasLang(%struct._FcLangSet*, i8*) local_unnamed_addr #2

declare hidden i32 @FcLangCompare(i8*, i8*) local_unnamed_addr #2

declare hidden %struct._FcCharSet* @IA__FcCharSetCreate() local_unnamed_addr #2

declare hidden i32 @IA__FcPatternGetCharSet(%struct._FcPattern*, i8*, i32, %struct._FcCharSet**) local_unnamed_addr #2

declare hidden i32 @IA__FcCharSetMerge(%struct._FcCharSet*, %struct._FcCharSet*, i32*) local_unnamed_addr #2

declare hidden void @IA__FcPatternReference(%struct._FcPattern*) local_unnamed_addr #2

declare hidden i32 @IA__FcFontSetAdd(%struct._FcFontSet*, %struct._FcPattern*) local_unnamed_addr #2

declare hidden void @IA__FcCharSetDestroy(%struct._FcCharSet*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @putchar(i32) local_unnamed_addr #10

; Function Attrs: nounwind readnone speculatable
declare <2 x double> @llvm.fabs.v2f64(<2 x double>) #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nounwind }
attributes #13 = { nounwind readonly }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
